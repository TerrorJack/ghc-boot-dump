
==================== Asm code ====================
2018-03-16 15:59:10.074573185 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cfromEnum_closure
.type GHC.Int.$fEnumInt8_$cfromEnum_closure, @object
GHC.Int.$fEnumInt8_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:10.075545217 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cfromEnum_entry
.type GHC.Int.$fEnumInt8_$cfromEnum_entry, @object
GHC.Int.$fEnumInt8_$cfromEnum_entry:
_c4rfC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rfG
_c4rfH:
	movq $block_c4rfz_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rfz
_c4rfA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rfG:
	movl $GHC.Int.$fEnumInt8_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cfromEnum_entry, .-GHC.Int.$fEnumInt8_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.07689055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cfromEnum_info
.type GHC.Int.$fEnumInt8_$cfromEnum_info, @object
GHC.Int.$fEnumInt8_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.07766321 UTC

.section .text
.align 8
_c4rfz:
_c4rfz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rfK
_c4rfJ:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rfK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rfz, .-_c4rfz


==================== Asm code ====================
2018-03-16 15:59:10.078431705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rfz_info:
	.quad	_c4rfz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.081567516 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cfromEnum_closure
.type GHC.Int.$fEnumInt16_$cfromEnum_closure, @object
GHC.Int.$fEnumInt16_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:10.082531925 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cfromEnum_entry
.type GHC.Int.$fEnumInt16_$cfromEnum_entry, @object
GHC.Int.$fEnumInt16_$cfromEnum_entry:
_c4rg3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rg7
_c4rg8:
	movq $block_c4rg0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rg0
_c4rg1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rg7:
	movl $GHC.Int.$fEnumInt16_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cfromEnum_entry, .-GHC.Int.$fEnumInt16_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.08322791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cfromEnum_info
.type GHC.Int.$fEnumInt16_$cfromEnum_info, @object
GHC.Int.$fEnumInt16_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.083928783 UTC

.section .text
.align 8
_c4rg0:
_c4rg0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rgb
_c4rga:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rgb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rg0, .-_c4rg0


==================== Asm code ====================
2018-03-16 15:59:10.084554802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rg0_info:
	.quad	_c4rg0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.087914371 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cfromEnum_closure
.type GHC.Int.$fEnumInt32_$cfromEnum_closure, @object
GHC.Int.$fEnumInt32_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:10.088744116 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cfromEnum_entry
.type GHC.Int.$fEnumInt32_$cfromEnum_entry, @object
GHC.Int.$fEnumInt32_$cfromEnum_entry:
_c4rgu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rgy
_c4rgz:
	movq $block_c4rgr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rgr
_c4rgs:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rgy:
	movl $GHC.Int.$fEnumInt32_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cfromEnum_entry, .-GHC.Int.$fEnumInt32_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.089459079 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cfromEnum_info
.type GHC.Int.$fEnumInt32_$cfromEnum_info, @object
GHC.Int.$fEnumInt32_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.090291888 UTC

.section .text
.align 8
_c4rgr:
_c4rgr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rgC
_c4rgB:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rgC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rgr, .-_c4rgr


==================== Asm code ====================
2018-03-16 15:59:10.09089665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rgr_info:
	.quad	_c4rgr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.094190556 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cfromEnum_closure
.type GHC.Int.$fEnumInt64_$cfromEnum_closure, @object
GHC.Int.$fEnumInt64_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:10.095035739 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cfromEnum_entry
.type GHC.Int.$fEnumInt64_$cfromEnum_entry, @object
GHC.Int.$fEnumInt64_$cfromEnum_entry:
_c4rgV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rgZ
_c4rh0:
	movq $block_c4rgS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rgS
_c4rgT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rgZ:
	movl $GHC.Int.$fEnumInt64_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cfromEnum_entry, .-GHC.Int.$fEnumInt64_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.09573972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cfromEnum_info
.type GHC.Int.$fEnumInt64_$cfromEnum_info, @object
GHC.Int.$fEnumInt64_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.096486921 UTC

.section .text
.align 8
_c4rgS:
_c4rgS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rh3
_c4rh2:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rh3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rgS, .-_c4rgS


==================== Asm code ====================
2018-03-16 15:59:10.097658894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rgS_info:
	.quad	_c4rgS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.100747776 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$ctoEnum_closure
.type GHC.Int.$fEnumInt64_$ctoEnum_closure, @object
GHC.Int.$fEnumInt64_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_info


==================== Asm code ====================
2018-03-16 15:59:10.101573468 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$ctoEnum_entry
.type GHC.Int.$fEnumInt64_$ctoEnum_entry, @object
GHC.Int.$fEnumInt64_$ctoEnum_entry:
_c4rhm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rhq
_c4rhr:
	movq $block_c4rhj_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rhj
_c4rhk:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rhq:
	movl $GHC.Int.$fEnumInt64_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$ctoEnum_entry, .-GHC.Int.$fEnumInt64_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.102231315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$ctoEnum_info
.type GHC.Int.$fEnumInt64_$ctoEnum_info, @object
GHC.Int.$fEnumInt64_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.102947827 UTC

.section .text
.align 8
_c4rhj:
_c4rhj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rhu
_c4rht:
	movq 7(%rbx),%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rhu:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rhj, .-_c4rhj


==================== Asm code ====================
2018-03-16 15:59:10.103563842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rhj_info:
	.quad	_c4rhj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.115446137 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo2_closure
.type GHC.Int.$w$cenumFromThenTo2_closure, @object
GHC.Int.$w$cenumFromThenTo2_closure:
	.quad	GHC.Int.$w$cenumFromThenTo2_info


==================== Asm code ====================
2018-03-16 15:59:10.116320105 UTC

.section .text
.align 8
sat_s4kQ9_entry:
_c4rie:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rif
_c4rig:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kQ4_entry
_c4rif:
	jmp *-16(%r13)
	.size sat_s4kQ9_entry, .-sat_s4kQ9_entry


==================== Asm code ====================
2018-03-16 15:59:10.116978947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kQ9_info:
	.quad	sat_s4kQ9_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:10.11799271 UTC

.section .text
.align 8
go_dn_s4kQ4_entry:
_c4rik:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4rio
_c4rin:
	cmpq 15(%rbx),%r14
	jge _c4rii
_c4rij:
	movq $GHC.Int.I64#_con_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rio:
	movq $80,904(%r13)
	jmp *-8(%r13)
_c4rii:
	movq 7(%rbx),%rax
	movq $sat_s4kQ9_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4kQ4_entry, .-go_dn_s4kQ4_entry


==================== Asm code ====================
2018-03-16 15:59:10.119346003 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4kQ4_info:
	.quad	go_dn_s4kQ4_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:10.12019541 UTC

.section .text
.align 8
sat_s4kQb_entry:
_c4riu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4riv
_c4riw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4riy
_c4rix:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_dn_s4kQ4_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kQ4_entry
_c4riy:
	movq $24,904(%r13)
_c4riv:
	jmp *-16(%r13)
	.size sat_s4kQb_entry, .-sat_s4kQb_entry


==================== Asm code ====================
2018-03-16 15:59:10.12085416 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kQb_info:
	.quad	sat_s4kQb_entry
	.quad	12884901888
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:10.121563616 UTC

.section .text
.align 8
sat_s4kQn_entry:
_c4rj1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rj2
_c4rj3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4kQi_entry
_c4rj2:
	jmp *-16(%r13)
	.size sat_s4kQn_entry, .-sat_s4kQn_entry


==================== Asm code ====================
2018-03-16 15:59:10.122189351 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kQn_info:
	.quad	sat_s4kQn_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:10.123020106 UTC

.section .text
.align 8
go_up_s4kQi_entry:
_c4rj7:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4rjb
_c4rja:
	cmpq 15(%rbx),%r14
	jle _c4rj5
_c4rj6:
	movq $GHC.Int.I64#_con_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjb:
	movq $80,904(%r13)
	jmp *-8(%r13)
_c4rj5:
	movq 7(%rbx),%rax
	movq $sat_s4kQn_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4kQi_entry, .-go_up_s4kQi_entry


==================== Asm code ====================
2018-03-16 15:59:10.123760609 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4kQi_info:
	.quad	go_up_s4kQi_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:10.124542726 UTC

.section .text
.align 8
sat_s4kQp_entry:
_c4rjh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rji
_c4rjj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rjl
_c4rjk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_up_s4kQi_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4kQi_entry
_c4rjl:
	movq $24,904(%r13)
_c4rji:
	jmp *-16(%r13)
	.size sat_s4kQp_entry, .-sat_s4kQp_entry


==================== Asm code ====================
2018-03-16 15:59:10.125395703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kQp_info:
	.quad	sat_s4kQp_entry
	.quad	12884901888
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:10.126535802 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo2_entry
.type GHC.Int.$w$cenumFromThenTo2_entry, @object
GHC.Int.$w$cenumFromThenTo2_entry:
_c4rjp:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4rjt
_c4rjs:
	cmpq %r14,%rsi
	jl _c4rjn
_c4rjo:
	cmpq %rsi,%rdi
	jge _c4rjL
_c4rjV:
	cmpq %r14,%rdi
	jl _c4rjU
_c4rjT:
	movq $GHC.Int.I64#_con_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjU:
	addq $-80,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjL:
	movq $sat_s4kQp_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjn:
	cmpq %rsi,%rdi
	jle _c4rjx
_c4rjH:
	cmpq %r14,%rdi
	jg _c4rjU
_c4rjF:
	movq $GHC.Int.I64#_con_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjx:
	movq $sat_s4kQb_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rjt:
	movq $80,904(%r13)
	movl $GHC.Int.$w$cenumFromThenTo2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo2_entry, .-GHC.Int.$w$cenumFromThenTo2_entry


==================== Asm code ====================
2018-03-16 15:59:10.127577751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo2_info
.type GHC.Int.$w$cenumFromThenTo2_info, @object
GHC.Int.$w$cenumFromThenTo2_info:
	.quad	GHC.Int.$w$cenumFromThenTo2_entry
	.quad	0
	.quad	14
	.quad	12884901904


==================== Asm code ====================
2018-03-16 15:59:10.131658707 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_info


==================== Asm code ====================
2018-03-16 15:59:10.132555692 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_entry:
_c4rkW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rl5
_c4rl6:
	movq $block_c4rkT_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rkT
_c4rkU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rl5:
	movl $GHC.Int.$fEnumInt64_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt64_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.133231088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:10.133991357 UTC

.section .text
.align 8
_c4rkT:
_c4rkT:
	movq $block_c4rkZ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rkZ
_c4rl0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rkT, .-_c4rkT


==================== Asm code ====================
2018-03-16 15:59:10.134600815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rkT_info:
	.quad	_c4rkT
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.135272554 UTC

.section .text
.align 8
_c4rkZ:
_c4rkZ:
	movq $block_c4rl4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4rl4
_c4rl9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rkZ, .-_c4rkZ


==================== Asm code ====================
2018-03-16 15:59:10.13591696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rkZ_info:
	.quad	_c4rkZ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.136548385 UTC

.section .text
.align 8
_c4rl4:
_c4rl4:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo2_entry
	.size _c4rl4, .-_c4rl4


==================== Asm code ====================
2018-03-16 15:59:10.137160583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rl4_info:
	.quad	_c4rl4
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.142250066 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo2_closure
.type GHC.Int.$w$cenumFromTo2_closure, @object
GHC.Int.$w$cenumFromTo2_closure:
	.quad	GHC.Int.$w$cenumFromTo2_info


==================== Asm code ====================
2018-03-16 15:59:10.143156268 UTC

.section .text
.align 8
sat_s4kQJ_entry:
_c4rlT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rlU
_c4rlV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4rlS
_c4rlR:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4kQE_entry
_c4rlU:
	jmp *-16(%r13)
_c4rlS:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4kQJ_entry, .-sat_s4kQJ_entry


==================== Asm code ====================
2018-03-16 15:59:10.14380245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kQJ_info:
	.quad	sat_s4kQJ_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:10.14456153 UTC

.section .text
.align 8
go_s4kQE_entry:
_c4rm0:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4rm4
_c4rm3:
	movq 7(%rbx),%rax
	movq $sat_s4kQJ_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rm4:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size go_s4kQE_entry, .-go_s4kQE_entry


==================== Asm code ====================
2018-03-16 15:59:10.145231501 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4kQE_info:
	.quad	go_s4kQE_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:10.146131716 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo2_entry
.type GHC.Int.$w$cenumFromTo2_entry, @object
GHC.Int.$w$cenumFromTo2_entry:
_c4rm8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rmc
_c4rmb:
	cmpq %rsi,%r14
	jle _c4rm6
_c4rm7:
	addq $-16,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rmc:
	movq $16,904(%r13)
	movl $GHC.Int.$w$cenumFromTo2_closure,%ebx
	jmp *-8(%r13)
_c4rm6:
	movq $go_s4kQE_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4kQE_entry
	.size GHC.Int.$w$cenumFromTo2_entry, .-GHC.Int.$w$cenumFromTo2_entry


==================== Asm code ====================
2018-03-16 15:59:10.146830268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo2_info
.type GHC.Int.$w$cenumFromTo2_info, @object
GHC.Int.$w$cenumFromTo2_info:
	.quad	GHC.Int.$w$cenumFromTo2_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:10.150323936 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromTo_closure
.type GHC.Int.$fEnumInt64_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt64_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_info


==================== Asm code ====================
2018-03-16 15:59:10.151149754 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromTo_entry
.type GHC.Int.$fEnumInt64_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt64_$cenumFromTo_entry:
_c4rmA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rmE
_c4rmF:
	movq $block_c4rmx_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rmx
_c4rmy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rmE:
	movl $GHC.Int.$fEnumInt64_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFromTo_entry, .-GHC.Int.$fEnumInt64_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.151808693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromTo_info
.type GHC.Int.$fEnumInt64_$cenumFromTo_info, @object
GHC.Int.$fEnumInt64_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.15254459 UTC

.section .text
.align 8
_c4rmx:
_c4rmx:
	movq $block_c4rmD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rmD
_c4rmH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rmx, .-_c4rmx


==================== Asm code ====================
2018-03-16 15:59:10.15333925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rmx_info:
	.quad	_c4rmx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.154251169 UTC

.section .text
.align 8
_c4rmD:
_c4rmD:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo2_entry
	.size _c4rmD, .-_c4rmD


==================== Asm code ====================
2018-03-16 15:59:10.154933675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rmD_info:
	.quad	_c4rmD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.156780852 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt9_bytes
.type GHC.Int.$tcInt9_bytes, @object
GHC.Int.$tcInt9_bytes:
	.asciz "Int8"


==================== Asm code ====================
2018-03-16 15:59:10.160654568 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt7_closure
.type GHC.Int.$fEnumInt7_closure, @object
GHC.Int.$fEnumInt7_closure:
	.quad	GHC.Int.$fEnumInt7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.161766001 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt7_entry
.type GHC.Int.$fEnumInt7_entry, @object
GHC.Int.$fEnumInt7_entry:
_c4rna:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rnb
_c4rnc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rn7
_c4rn6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rn8_info,-24(%rbp)
	movl $GHC.Int.$tcInt9_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rnb:
	jmp *-16(%r13)
_c4rn7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt7_entry, .-GHC.Int.$fEnumInt7_entry


==================== Asm code ====================
2018-03-16 15:59:10.1624865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt7_info
.type GHC.Int.$fEnumInt7_info, @object
GHC.Int.$fEnumInt7_info:
	.quad	GHC.Int.$fEnumInt7_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt


==================== Asm code ====================
2018-03-16 15:59:10.163158671 UTC

.section .text
.align 8
_c4rn8:
_c4rn8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.predError_entry
	.size _c4rn8, .-_c4rn8


==================== Asm code ====================
2018-03-16 15:59:10.163843154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rn8_info:
	.quad	_c4rn8
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt


==================== Asm code ====================
2018-03-16 15:59:10.167222692 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt9_closure
.type GHC.Int.$fEnumInt9_closure, @object
GHC.Int.$fEnumInt9_closure:
	.quad	GHC.Int.$fEnumInt9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.168213241 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt9_entry
.type GHC.Int.$fEnumInt9_entry, @object
GHC.Int.$fEnumInt9_entry:
_c4rny:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rnz
_c4rnA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rnv
_c4rnu:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rnw_info,-24(%rbp)
	movl $GHC.Int.$tcInt9_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rnz:
	jmp *-16(%r13)
_c4rnv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt9_entry, .-GHC.Int.$fEnumInt9_entry


==================== Asm code ====================
2018-03-16 15:59:10.168992801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt9_info
.type GHC.Int.$fEnumInt9_info, @object
GHC.Int.$fEnumInt9_info:
	.quad	GHC.Int.$fEnumInt9_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+8


==================== Asm code ====================
2018-03-16 15:59:10.170006576 UTC

.section .text
.align 8
_c4rnw:
_c4rnw:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.succError_entry
	.size _c4rnw, .-_c4rnw


==================== Asm code ====================
2018-03-16 15:59:10.170621416 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rnw_info:
	.quad	_c4rnw
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+8


==================== Asm code ====================
2018-03-16 15:59:10.176306937 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt8_closure
.type GHC.Int.neInt8_closure, @object
GHC.Int.neInt8_closure:
	.quad	GHC.Int.neInt8_info


==================== Asm code ====================
2018-03-16 15:59:10.177625674 UTC

.section .text
.align 8
.globl GHC.Int.neInt8_entry
.type GHC.Int.neInt8_entry, @object
GHC.Int.neInt8_entry:
_c4rnV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rnZ
_c4ro0:
	movq $block_c4rnS_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rnS
_c4rnT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rnZ:
	movl $GHC.Int.neInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.neInt8_entry, .-GHC.Int.neInt8_entry


==================== Asm code ====================
2018-03-16 15:59:10.17831228 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt8_info
.type GHC.Int.neInt8_info, @object
GHC.Int.neInt8_info:
	.quad	GHC.Int.neInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.178988051 UTC

.section .text
.align 8
_c4rnS:
_c4rnS:
	movq $block_c4rnY_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rnY
_c4ro2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rnS, .-_c4rnS


==================== Asm code ====================
2018-03-16 15:59:10.179616201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rnS_info:
	.quad	_c4rnS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.180347059 UTC

.section .text
.align 8
_c4rnY:
_c4rnY:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4rnY, .-_c4rnY


==================== Asm code ====================
2018-03-16 15:59:10.180987318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rnY_info:
	.quad	_c4rnY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.184190835 UTC

.section .data
.align 8
.align 1
lvl_r4kPr_closure:
	.quad	lvl_r4kPr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.18507445 UTC

.section .text
.align 8
lvl_r4kPr_entry:
_c4rox:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4roy
_c4roz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4row
_c4rov:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$tcInt9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4roy:
	jmp *-16(%r13)
_c4row:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_r4kPr_entry, .-lvl_r4kPr_entry


==================== Asm code ====================
2018-03-16 15:59:10.185751403 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r4kPr_info:
	.quad	lvl_r4kPr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:10.187454359 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_$cminBound_closure
.type GHC.Int.$fBoundedInt8_$cminBound_closure, @object
GHC.Int.$fBoundedInt8_$cminBound_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	-128


==================== Asm code ====================
2018-03-16 15:59:10.190883745 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cpred_closure
.type GHC.Int.$fEnumInt8_$cpred_closure, @object
GHC.Int.$fEnumInt8_$cpred_closure:
	.quad	GHC.Int.$fEnumInt8_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.191741418 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cpred_entry
.type GHC.Int.$fEnumInt8_$cpred_entry, @object
GHC.Int.$fEnumInt8_$cpred_entry:
_c4roP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4roQ
_c4roR:
	movq $block_c4roM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4roM
_c4roN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4roQ:
	movl $GHC.Int.$fEnumInt8_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cpred_entry, .-GHC.Int.$fEnumInt8_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:10.192419845 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cpred_info
.type GHC.Int.$fEnumInt8_$cpred_info, @object
GHC.Int.$fEnumInt8_$cpred_info:
	.quad	GHC.Int.$fEnumInt8_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+16


==================== Asm code ====================
2018-03-16 15:59:10.193204371 UTC

.section .text
.align 8
_c4roM:
_c4roM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4roW
_c4roV:
	movq 7(%rbx),%rax
	cmpq $-128,%rax
	jne _c4rp7
_c4rp8:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt7_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rp7:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4roW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4roM, .-_c4roM


==================== Asm code ====================
2018-03-16 15:59:10.193930434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4roM_info:
	.quad	_c4roM
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+24


==================== Asm code ====================
2018-03-16 15:59:10.195641918 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_$cmaxBound_closure
.type GHC.Int.$fBoundedInt8_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt8_$cmaxBound_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	127


==================== Asm code ====================
2018-03-16 15:59:10.197498584 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_closure
.type GHC.Int.$fBoundedInt8_closure, @object
GHC.Int.$fBoundedInt8_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt8_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt8_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.201046701 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$csucc_closure
.type GHC.Int.$fEnumInt8_$csucc_closure, @object
GHC.Int.$fEnumInt8_$csucc_closure:
	.quad	GHC.Int.$fEnumInt8_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.202206887 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$csucc_entry
.type GHC.Int.$fEnumInt8_$csucc_entry, @object
GHC.Int.$fEnumInt8_$csucc_entry:
_c4rpw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rpx
_c4rpy:
	movq $block_c4rpt_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rpt
_c4rpu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rpx:
	movl $GHC.Int.$fEnumInt8_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$csucc_entry, .-GHC.Int.$fEnumInt8_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:10.203385514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$csucc_info
.type GHC.Int.$fEnumInt8_$csucc_info, @object
GHC.Int.$fEnumInt8_$csucc_info:
	.quad	GHC.Int.$fEnumInt8_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+32


==================== Asm code ====================
2018-03-16 15:59:10.204182058 UTC

.section .text
.align 8
_c4rpt:
_c4rpt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rpD
_c4rpC:
	movq 7(%rbx),%rax
	cmpq $127,%rax
	jne _c4rpO
_c4rpP:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt9_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rpO:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	incq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rpD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rpt, .-_c4rpt


==================== Asm code ====================
2018-03-16 15:59:10.204848548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rpt_info:
	.quad	_c4rpt
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+40


==================== Asm code ====================
2018-03-16 15:59:10.209013735 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowsPrec_closure
.type GHC.Int.$fShowInt8_$cshowsPrec_closure, @object
GHC.Int.$fShowInt8_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:10.209878136 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshowsPrec_entry
.type GHC.Int.$fShowInt8_$cshowsPrec_entry, @object
GHC.Int.$fShowInt8_$cshowsPrec_entry:
_c4rqb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rqm
_c4rqn:
	movq $block_c4rq8_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rq8
_c4rq9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rqm:
	movl $GHC.Int.$fShowInt8_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt8_$cshowsPrec_entry, .-GHC.Int.$fShowInt8_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:10.210520395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowsPrec_info
.type GHC.Int.$fShowInt8_$cshowsPrec_info, @object
GHC.Int.$fShowInt8_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:10.211182376 UTC

.section .text
.align 8
_c4rq8:
_c4rq8:
	movq $block_c4rqe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rqe
_c4rqf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rq8, .-_c4rq8


==================== Asm code ====================
2018-03-16 15:59:10.211836765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rq8_info:
	.quad	_c4rq8
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.21251684 UTC

.section .text
.align 8
_c4rqe:
_c4rqe:
	movq 16(%rbp),%rax
	movq $block_c4rqj_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rqe, .-_c4rqe


==================== Asm code ====================
2018-03-16 15:59:10.213115686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rqe_info:
	.quad	_c4rqe
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.213866194 UTC

.section .text
.align 8
_c4rqj:
_c4rqj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rqs
_c4rqr:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rqs:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rqj, .-_c4rqj


==================== Asm code ====================
2018-03-16 15:59:10.214494799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rqj_info:
	.quad	_c4rqj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.218184562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshow_closure
.type GHC.Int.$fShowInt8_$cshow_closure, @object
GHC.Int.$fShowInt8_$cshow_closure:
	.quad	GHC.Int.$fShowInt8_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:10.219043714 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshow_entry
.type GHC.Int.$fShowInt8_$cshow_entry, @object
GHC.Int.$fShowInt8_$cshow_entry:
_c4rqT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rqZ
_c4rr0:
	movq $block_c4rqQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rqQ
_c4rqR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rqZ:
	movl $GHC.Int.$fShowInt8_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt8_$cshow_entry, .-GHC.Int.$fShowInt8_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:10.219750953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshow_info
.type GHC.Int.$fShowInt8_$cshow_info, @object
GHC.Int.$fShowInt8_$cshow_info:
	.quad	GHC.Int.$fShowInt8_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.220445302 UTC

.section .text
.align 8
_c4rqQ:
_c4rqQ:
	movq $block_c4rqW_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rqQ, .-_c4rqQ


==================== Asm code ====================
2018-03-16 15:59:10.221113018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rqQ_info:
	.quad	_c4rqQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.221959169 UTC

.section .text
.align 8
_c4rqW:
_c4rqW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rr4
_c4rr3:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rr4:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rqW, .-_c4rqW


==================== Asm code ====================
2018-03-16 15:59:10.223078442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rqW_info:
	.quad	_c4rqW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.226767736 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt4_closure
.type GHC.Int.$fShowInt4_closure, @object
GHC.Int.$fShowInt4_closure:
	.quad	GHC.Int.$fShowInt4_info


==================== Asm code ====================
2018-03-16 15:59:10.227653921 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt4_entry
.type GHC.Int.$fShowInt4_entry, @object
GHC.Int.$fShowInt4_entry:
_c4rrq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rrw
_c4rrx:
	movq $block_c4rrn_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rrn
_c4rro:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rrw:
	movl $GHC.Int.$fShowInt4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt4_entry, .-GHC.Int.$fShowInt4_entry


==================== Asm code ====================
2018-03-16 15:59:10.228337863 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt4_info
.type GHC.Int.$fShowInt4_info, @object
GHC.Int.$fShowInt4_info:
	.quad	GHC.Int.$fShowInt4_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.228997705 UTC

.section .text
.align 8
_c4rrn:
_c4rrn:
	movq 8(%rbp),%rax
	movq $block_c4rrt_info,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rrn, .-_c4rrn


==================== Asm code ====================
2018-03-16 15:59:10.229804029 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rrn_info:
	.quad	_c4rrn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.230561836 UTC

.section .text
.align 8
_c4rrt:
_c4rrt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rrB
_c4rrA:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rrB:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rrt, .-_c4rrt


==================== Asm code ====================
2018-03-16 15:59:10.231185699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rrt_info:
	.quad	_c4rrt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.233557323 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowList_closure
.type GHC.Int.$fShowInt8_$cshowList_closure, @object
GHC.Int.$fShowInt8_$cshowList_closure:
	.quad	GHC.Int.$fShowInt8_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:10.234286841 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshowList_entry
.type GHC.Int.$fShowInt8_$cshowList_entry, @object
GHC.Int.$fShowInt8_$cshowList_entry:
_c4rrU:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Int.$fShowInt4_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Int.$fShowInt8_$cshowList_entry, .-GHC.Int.$fShowInt8_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:10.234897995 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowList_info
.type GHC.Int.$fShowInt8_$cshowList_info, @object
GHC.Int.$fShowInt8_$cshowList_info:
	.quad	GHC.Int.$fShowInt8_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.236705296 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_closure
.type GHC.Int.$fShowInt8_closure, @object
GHC.Int.$fShowInt8_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt8_$cshow_closure+1
	.quad	GHC.Int.$fShowInt8_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.239127028 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl2_closure
.type GHC.Int.$wlvl2_closure, @object
GHC.Int.$wlvl2_closure:
	.quad	GHC.Int.$wlvl2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.239866426 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl2_entry
.type GHC.Int.$wlvl2_entry, @object
GHC.Int.$wlvl2_entry:
_c4rs6:
	movl $GHC.Int.$fBoundedInt8_$cmaxBound_closure+1,%r9d
	movl $GHC.Int.$fBoundedInt8_$cminBound_closure+1,%r8d
	movq %r14,%rdi
	movl $lvl_r4kPr_closure,%esi
	movl $GHC.Int.$fShowInt8_closure+1,%r14d
	jmp GHC.Enum.$wtoEnumError_entry
	.size GHC.Int.$wlvl2_entry, .-GHC.Int.$wlvl2_entry


==================== Asm code ====================
2018-03-16 15:59:10.2405412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl2_info
.type GHC.Int.$wlvl2_info, @object
GHC.Int.$wlvl2_info:
	.quad	GHC.Int.$wlvl2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4lDl_srt+48


==================== Asm code ====================
2018-03-16 15:59:10.243782648 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum2_closure
.type GHC.Int.$w$ctoEnum2_closure, @object
GHC.Int.$w$ctoEnum2_closure:
	.quad	GHC.Int.$w$ctoEnum2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.244539411 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum2_entry
.type GHC.Int.$w$ctoEnum2_entry, @object
GHC.Int.$w$ctoEnum2_entry:
_c4rsm:
	movq %r14,%rax
	cmpq $-128,%r14
	jl _c4rsu
_c4rsl:
	cmpq $127,%rax
	jg _c4rsu
_c4rsv:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rsu:
	movq %rax,%r14
	jmp GHC.Int.$wlvl2_entry
	.size GHC.Int.$w$ctoEnum2_entry, .-GHC.Int.$w$ctoEnum2_entry


==================== Asm code ====================
2018-03-16 15:59:10.245121702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum2_info
.type GHC.Int.$w$ctoEnum2_info, @object
GHC.Int.$w$ctoEnum2_info:
	.quad	GHC.Int.$w$ctoEnum2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.248498551 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$ctoEnum_closure
.type GHC.Int.$fEnumInt8_$ctoEnum_closure, @object
GHC.Int.$fEnumInt8_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.24944706 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$ctoEnum_entry
.type GHC.Int.$fEnumInt8_$ctoEnum_entry, @object
GHC.Int.$fEnumInt8_$ctoEnum_entry:
_c4rsI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rsQ
_c4rsR:
	movq $block_c4rsF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rsF
_c4rsG:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rsQ:
	movl $GHC.Int.$fEnumInt8_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$ctoEnum_entry, .-GHC.Int.$fEnumInt8_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.250118847 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$ctoEnum_info
.type GHC.Int.$fEnumInt8_$ctoEnum_info, @object
GHC.Int.$fEnumInt8_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+72


==================== Asm code ====================
2018-03-16 15:59:10.25074059 UTC

.section .text
.align 8
_c4rsF:
_c4rsF:
	movq $block_c4rsL_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum2_entry
	.size _c4rsF, .-_c4rsF


==================== Asm code ====================
2018-03-16 15:59:10.251361732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rsF_info:
	.quad	_c4rsF
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+80


==================== Asm code ====================
2018-03-16 15:59:10.252105121 UTC

.section .text
.align 8
_c4rsL:
_c4rsL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rsV
_c4rsU:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rsV:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4rsL, .-_c4rsL


==================== Asm code ====================
2018-03-16 15:59:10.252707026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rsL_info:
	.quad	_c4rsL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.274677767 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo3_closure
.type GHC.Int.$w$cenumFromThenTo3_closure, @object
GHC.Int.$w$cenumFromThenTo3_closure:
	.quad	GHC.Int.$w$cenumFromThenTo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.275985853 UTC

.section .text
.align 8
sat_s4kS1_entry:
_c4rtI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rtJ
_c4rtK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kRU_entry
_c4rtJ:
	jmp *-16(%r13)
	.size sat_s4kS1_entry, .-sat_s4kS1_entry


==================== Asm code ====================
2018-03-16 15:59:10.276676952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kS1_info:
	.quad	sat_s4kS1_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.277744977 UTC

.section .text
.align 8
sat_s4kRZ_entry:
_c4rtU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rtV
_c4rtW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rtY
_c4rtX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4ru4
_c4rtT:
	cmpq $127,%rax
	jg _c4ru4
_c4ru8:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ru4:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rtY:
	movq $16,904(%r13)
_c4rtV:
	jmp *-16(%r13)
	.size sat_s4kRZ_entry, .-sat_s4kRZ_entry


==================== Asm code ====================
2018-03-16 15:59:10.278489551 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kRZ_info:
	.quad	sat_s4kRZ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.279386739 UTC

.section .text
.align 8
sat_s4kS4_entry:
_c4ruj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ruk
_c4rul:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4run
_c4rum:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rut
_c4rui:
	cmpq $127,%rax
	jg _c4rut
_c4rux:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rut:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4run:
	movq $16,904(%r13)
_c4ruk:
	jmp *-16(%r13)
	.size sat_s4kS4_entry, .-sat_s4kS4_entry


==================== Asm code ====================
2018-03-16 15:59:10.280144775 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kS4_info:
	.quad	sat_s4kS4_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.281051316 UTC

.section .text
.align 8
go_dn_s4kRU_entry:
_c4ruB:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4ruF
_c4ruE:
	cmpq 15(%rbx),%r14
	jge _c4ruz
_c4ruA:
	movq $sat_s4kS4_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ruF:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4ruz:
	movq 7(%rbx),%rax
	movq $sat_s4kS1_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kRZ_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4kRU_entry, .-go_dn_s4kRU_entry


==================== Asm code ====================
2018-03-16 15:59:10.281847081 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4kRU_info:
	.quad	go_dn_s4kRU_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.282680019 UTC

.section .text
.align 8
sat_s4kS5_entry:
_c4ruI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ruJ
_c4ruK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4ruM
_c4ruL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_dn_s4kRU_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kRU_entry
_c4ruM:
	movq $24,904(%r13)
_c4ruJ:
	jmp *-16(%r13)
	.size sat_s4kS5_entry, .-sat_s4kS5_entry


==================== Asm code ====================
2018-03-16 15:59:10.283479516 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kS5_info:
	.quad	sat_s4kS5_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.284462238 UTC

.section .text
.align 8
sat_s4kRR_entry:
_c4ruW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ruX
_c4ruY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rv0
_c4ruZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rv6
_c4ruV:
	cmpq $127,%rax
	jg _c4rv6
_c4rva:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rv6:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rv0:
	movq $16,904(%r13)
_c4ruX:
	jmp *-16(%r13)
	.size sat_s4kRR_entry, .-sat_s4kRR_entry


==================== Asm code ====================
2018-03-16 15:59:10.28576857 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kRR_info:
	.quad	sat_s4kRR_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.286608963 UTC

.section .text
.align 8
sat_s4kS9_entry:
_c4rvo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rvp
_c4rvq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rvs
_c4rvr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rvy
_c4rvn:
	cmpq $127,%rax
	jg _c4rvy
_c4rvC:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rvy:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rvs:
	movq $16,904(%r13)
_c4rvp:
	jmp *-16(%r13)
	.size sat_s4kS9_entry, .-sat_s4kS9_entry


==================== Asm code ====================
2018-03-16 15:59:10.287377294 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kS9_info:
	.quad	sat_s4kS9_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.288494893 UTC

.section .text
.align 8
sat_s4kSn_entry:
_c4rw5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rw6
_c4rw7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4kSg_entry
_c4rw6:
	jmp *-16(%r13)
	.size sat_s4kSn_entry, .-sat_s4kSn_entry


==================== Asm code ====================
2018-03-16 15:59:10.28955221 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSn_info:
	.quad	sat_s4kSn_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.290794678 UTC

.section .text
.align 8
sat_s4kSl_entry:
_c4rwh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rwi
_c4rwj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rwl
_c4rwk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rwr
_c4rwg:
	cmpq $127,%rax
	jg _c4rwr
_c4rwv:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rwr:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rwl:
	movq $16,904(%r13)
_c4rwi:
	jmp *-16(%r13)
	.size sat_s4kSl_entry, .-sat_s4kSl_entry


==================== Asm code ====================
2018-03-16 15:59:10.291670459 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSl_info:
	.quad	sat_s4kSl_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.292526767 UTC

.section .text
.align 8
sat_s4kSq_entry:
_c4rwG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rwH
_c4rwI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rwK
_c4rwJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rwQ
_c4rwF:
	cmpq $127,%rax
	jg _c4rwQ
_c4rwU:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rwQ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rwK:
	movq $16,904(%r13)
_c4rwH:
	jmp *-16(%r13)
	.size sat_s4kSq_entry, .-sat_s4kSq_entry


==================== Asm code ====================
2018-03-16 15:59:10.293681044 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSq_info:
	.quad	sat_s4kSq_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.295009421 UTC

.section .text
.align 8
go_up_s4kSg_entry:
_c4rwY:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rx2
_c4rx1:
	cmpq 15(%rbx),%r14
	jle _c4rwW
_c4rwX:
	movq $sat_s4kSq_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rx2:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4rwW:
	movq 7(%rbx),%rax
	movq $sat_s4kSn_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kSl_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4kSg_entry, .-go_up_s4kSg_entry


==================== Asm code ====================
2018-03-16 15:59:10.296347248 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4kSg_info:
	.quad	go_up_s4kSg_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.297684251 UTC

.section .text
.align 8
sat_s4kSr_entry:
_c4rx5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rx6
_c4rx7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rx9
_c4rx8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_up_s4kSg_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4kSg_entry
_c4rx9:
	movq $24,904(%r13)
_c4rx6:
	jmp *-16(%r13)
	.size sat_s4kSr_entry, .-sat_s4kSr_entry


==================== Asm code ====================
2018-03-16 15:59:10.298661507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSr_info:
	.quad	sat_s4kSr_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.299635574 UTC

.section .text
.align 8
sat_s4kSd_entry:
_c4rxj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rxk
_c4rxl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rxn
_c4rxm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rxt
_c4rxi:
	cmpq $127,%rax
	jg _c4rxt
_c4rxx:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rxt:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rxn:
	movq $16,904(%r13)
_c4rxk:
	jmp *-16(%r13)
	.size sat_s4kSd_entry, .-sat_s4kSd_entry


==================== Asm code ====================
2018-03-16 15:59:10.300393716 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSd_info:
	.quad	sat_s4kSd_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.301226512 UTC

.section .text
.align 8
sat_s4kSv_entry:
_c4rxL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rxM
_c4rxN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rxP
_c4rxO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rxV
_c4rxK:
	cmpq $127,%rax
	jg _c4rxV
_c4rxZ:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rxV:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rxP:
	movq $16,904(%r13)
_c4rxM:
	jmp *-16(%r13)
	.size sat_s4kSv_entry, .-sat_s4kSv_entry


==================== Asm code ====================
2018-03-16 15:59:10.302068804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSv_info:
	.quad	sat_s4kSv_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.303201107 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo3_entry
.type GHC.Int.$w$cenumFromThenTo3_entry, @object
GHC.Int.$w$cenumFromThenTo3_entry:
_c4ry3:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4ry7
_c4ry6:
	cmpq %r14,%rsi
	jl _c4ry1
_c4ry2:
	cmpq %rsi,%rdi
	jge _c4ryi
_c4ryn:
	cmpq %r14,%rdi
	jl _c4rym
_c4ryl:
	movq $sat_s4kSv_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rym:
	addq $-88,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ryi:
	movq $sat_s4kSr_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kSd_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ry1:
	cmpq %rsi,%rdi
	jle _c4rya
_c4ryf:
	cmpq %r14,%rdi
	jg _c4rym
_c4ryd:
	movq $sat_s4kS9_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rya:
	movq $sat_s4kS5_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kRR_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ry7:
	movq $88,904(%r13)
	movl $GHC.Int.$w$cenumFromThenTo3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo3_entry, .-GHC.Int.$w$cenumFromThenTo3_entry


==================== Asm code ====================
2018-03-16 15:59:10.304259723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo3_info
.type GHC.Int.$w$cenumFromThenTo3_info, @object
GHC.Int.$w$cenumFromThenTo3_info:
	.quad	GHC.Int.$w$cenumFromThenTo3_entry
	.quad	0
	.quad	38654705678
	.quad	12884901904
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.308965175 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.309908477 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_entry:
_c4rA2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rAb
_c4rAc:
	movq $block_c4rzZ_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rzZ
_c4rA0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rAb:
	movl $GHC.Int.$fEnumInt8_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt8_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.3105851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4lDl_srt+88


==================== Asm code ====================
2018-03-16 15:59:10.311276224 UTC

.section .text
.align 8
_c4rzZ:
_c4rzZ:
	movq $block_c4rA5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rA5
_c4rA6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rzZ, .-_c4rzZ


==================== Asm code ====================
2018-03-16 15:59:10.311870051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rzZ_info:
	.quad	_c4rzZ
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+88


==================== Asm code ====================
2018-03-16 15:59:10.312600911 UTC

.section .text
.align 8
_c4rA5:
_c4rA5:
	movq $block_c4rAa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4rAa
_c4rAf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rA5, .-_c4rA5


==================== Asm code ====================
2018-03-16 15:59:10.313205258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rA5_info:
	.quad	_c4rA5
	.quad	66
	.quad	4294967326
	.quad	S4lDl_srt+88


==================== Asm code ====================
2018-03-16 15:59:10.313878632 UTC

.section .text
.align 8
_c4rAa:
_c4rAa:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo3_entry
	.size _c4rAa, .-_c4rAa


==================== Asm code ====================
2018-03-16 15:59:10.314440107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rAa_info:
	.quad	_c4rAa
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+88


==================== Asm code ====================
2018-03-16 15:59:10.32031485 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo3_closure
.type GHC.Int.$w$cenumFromTo3_closure, @object
GHC.Int.$w$cenumFromTo3_closure:
	.quad	GHC.Int.$w$cenumFromTo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.321163317 UTC

.section .text
.align 8
sat_s4kSP_entry:
_c4rAZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rB0
_c4rB1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4rAY
_c4rAX:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4kSI_entry
_c4rB0:
	jmp *-16(%r13)
_c4rAY:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4kSP_entry, .-sat_s4kSP_entry


==================== Asm code ====================
2018-03-16 15:59:10.321905813 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSP_info:
	.quad	sat_s4kSP_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.322760445 UTC

.section .text
.align 8
sat_s4kSM_entry:
_c4rBd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rBe
_c4rBf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rBh
_c4rBg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rBn
_c4rBc:
	cmpq $127,%rax
	jg _c4rBn
_c4rBr:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rBn:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rBh:
	movq $16,904(%r13)
_c4rBe:
	jmp *-16(%r13)
	.size sat_s4kSM_entry, .-sat_s4kSM_entry


==================== Asm code ====================
2018-03-16 15:59:10.323512215 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSM_info:
	.quad	sat_s4kSM_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.324257395 UTC

.section .text
.align 8
go_s4kSI_entry:
_c4rBt:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rBx
_c4rBw:
	movq 7(%rbx),%rax
	movq $sat_s4kSP_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kSM_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rBx:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4kSI_entry, .-go_s4kSI_entry


==================== Asm code ====================
2018-03-16 15:59:10.324970007 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4kSI_info:
	.quad	go_s4kSI_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.32614305 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo3_entry
.type GHC.Int.$w$cenumFromTo3_entry, @object
GHC.Int.$w$cenumFromTo3_entry:
_c4rBB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rBF
_c4rBE:
	cmpq %rsi,%r14
	jle _c4rBz
_c4rBA:
	addq $-16,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rBF:
	movq $16,904(%r13)
	movl $GHC.Int.$w$cenumFromTo3_closure,%ebx
	jmp *-8(%r13)
_c4rBz:
	movq $go_s4kSI_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4kSI_entry
	.size GHC.Int.$w$cenumFromTo3_entry, .-GHC.Int.$w$cenumFromTo3_entry


==================== Asm code ====================
2018-03-16 15:59:10.32687547 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo3_info
.type GHC.Int.$w$cenumFromTo3_info, @object
GHC.Int.$w$cenumFromTo3_info:
	.quad	GHC.Int.$w$cenumFromTo3_entry
	.quad	0
	.quad	141733920782
	.quad	8589934604
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.330953019 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromTo_closure
.type GHC.Int.$fEnumInt8_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt8_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.331798765 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromTo_entry
.type GHC.Int.$fEnumInt8_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt8_$cenumFromTo_entry:
_c4rC8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rCc
_c4rCd:
	movq $block_c4rC5_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rC5
_c4rC6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rCc:
	movl $GHC.Int.$fEnumInt8_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFromTo_entry, .-GHC.Int.$fEnumInt8_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.332755644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromTo_info
.type GHC.Int.$fEnumInt8_$cenumFromTo_info, @object
GHC.Int.$fEnumInt8_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+104


==================== Asm code ====================
2018-03-16 15:59:10.334078104 UTC

.section .text
.align 8
_c4rC5:
_c4rC5:
	movq $block_c4rCb_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rCb
_c4rCf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rC5, .-_c4rC5


==================== Asm code ====================
2018-03-16 15:59:10.3346637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rC5_info:
	.quad	_c4rC5
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+104


==================== Asm code ====================
2018-03-16 15:59:10.335270164 UTC

.section .text
.align 8
_c4rCb:
_c4rCb:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo3_entry
	.size _c4rCb, .-_c4rCb


==================== Asm code ====================
2018-03-16 15:59:10.335978257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rCb_info:
	.quad	_c4rCb
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+104


==================== Asm code ====================
2018-03-16 15:59:10.341613382 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo3_closure
.type GHC.Int.$wgo3_closure, @object
GHC.Int.$wgo3_closure:
	.quad	GHC.Int.$wgo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.34250765 UTC

.section .text
.align 8
sat_s4kT5_entry:
_c4rCL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rCM
_c4rCX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $127,%rax
	jne _c4rCJ
_c4rCK:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rCM:
	jmp *-16(%r13)
_c4rCJ:
	movq $block_c4rCR_info,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo3_entry
	.size sat_s4kT5_entry, .-sat_s4kT5_entry


==================== Asm code ====================
2018-03-16 15:59:10.343139979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kT5_info:
	.quad	sat_s4kT5_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+120


==================== Asm code ====================
2018-03-16 15:59:10.343876149 UTC

.section .text
.align 8
_c4rCR:
_c4rCR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rCW
_c4rCV:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rCW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rCR, .-_c4rCR


==================== Asm code ====================
2018-03-16 15:59:10.344543599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rCR_info:
	.quad	_c4rCR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.345457353 UTC

.section .text
.align 8
sat_s4kSZ_entry:
_c4rD7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rD8
_c4rD9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rDb
_c4rDa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4rDh
_c4rD6:
	cmpq $127,%rax
	jg _c4rDh
_c4rDl:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rDh:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4rDb:
	movq $16,904(%r13)
_c4rD8:
	jmp *-16(%r13)
	.size sat_s4kSZ_entry, .-sat_s4kSZ_entry


==================== Asm code ====================
2018-03-16 15:59:10.34631468 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kSZ_info:
	.quad	sat_s4kSZ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.347148313 UTC

.section .text
.align 8
.globl GHC.Int.$wgo3_entry
.type GHC.Int.$wgo3_entry, @object
GHC.Int.$wgo3_entry:
_c4rDm:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4rDq
_c4rDp:
	movq $sat_s4kT5_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s4kSZ_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rDq:
	movq $48,904(%r13)
	movl $GHC.Int.$wgo3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$wgo3_entry, .-GHC.Int.$wgo3_entry


==================== Asm code ====================
2018-03-16 15:59:10.347859516 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo3_info
.type GHC.Int.$wgo3_info, @object
GHC.Int.$wgo3_info:
	.quad	GHC.Int.$wgo3_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	S4lDl_srt+64


==================== Asm code ====================
2018-03-16 15:59:10.351633505 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_go_closure
.type GHC.Int.$fEnumInt8_go_closure, @object
GHC.Int.$fEnumInt8_go_closure:
	.quad	GHC.Int.$fEnumInt8_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.352470598 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_go_entry
.type GHC.Int.$fEnumInt8_go_entry, @object
GHC.Int.$fEnumInt8_go_entry:
_c4rDR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rDS
_c4rDT:
	movq $block_c4rDO_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo3_entry
_c4rDS:
	movl $GHC.Int.$fEnumInt8_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_go_entry, .-GHC.Int.$fEnumInt8_go_entry


==================== Asm code ====================
2018-03-16 15:59:10.353154926 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_go_info
.type GHC.Int.$fEnumInt8_go_info, @object
GHC.Int.$fEnumInt8_go_info:
	.quad	GHC.Int.$fEnumInt8_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4lDl_srt+120


==================== Asm code ====================
2018-03-16 15:59:10.354577236 UTC

.section .text
.align 8
_c4rDO:
_c4rDO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rDW
_c4rDV:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rDW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rDO, .-_c4rDO


==================== Asm code ====================
2018-03-16 15:59:10.35523278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rDO_info:
	.quad	_c4rDO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.35847338 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFrom_closure
.type GHC.Int.$fEnumInt8_$cenumFrom_closure, @object
GHC.Int.$fEnumInt8_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.359528203 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFrom_entry
.type GHC.Int.$fEnumInt8_$cenumFrom_entry, @object
GHC.Int.$fEnumInt8_$cenumFrom_entry:
_c4rEd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rEe
_c4rEf:
	movq $block_c4rEa_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rEa
_c4rEb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rEe:
	movl $GHC.Int.$fEnumInt8_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFrom_entry, .-GHC.Int.$fEnumInt8_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:10.360456506 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFrom_info
.type GHC.Int.$fEnumInt8_$cenumFrom_info, @object
GHC.Int.$fEnumInt8_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+128


==================== Asm code ====================
2018-03-16 15:59:10.361434764 UTC

.section .text
.align 8
_c4rEa:
_c4rEa:
	movq 7(%rbx),%rax
	cmpq $127,%rax
	jle _c4rEm
_c4rEn:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rEm:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt8_go_entry
	.size _c4rEa, .-_c4rEa


==================== Asm code ====================
2018-03-16 15:59:10.362279477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rEa_info:
	.quad	_c4rEa
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+128


==================== Asm code ====================
2018-03-16 15:59:10.36589843 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_closure
.type GHC.Int.$fEnumInt8_closure, @object
GHC.Int.$fEnumInt8_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt8_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt8_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.366534029 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThen_closure
.type GHC.Int.$fEnumInt8_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt8_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.367255268 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromThen_entry
.type GHC.Int.$fEnumInt8_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt8_$cenumFromThen_entry:
_c4rED:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Int.$fBoundedInt8_closure+1,%esi
	movl $GHC.Int.$fEnumInt8_closure+1,%r14d
	jmp GHC.Enum.boundedEnumFromThen_entry
	.size GHC.Int.$fEnumInt8_$cenumFromThen_entry, .-GHC.Int.$fEnumInt8_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:10.367914723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThen_info
.type GHC.Int.$fEnumInt8_$cenumFromThen_info, @object
GHC.Int.$fEnumInt8_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4lDl_srt+144


==================== Asm code ====================
2018-03-16 15:59:10.369806766 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt2_bytes
.type GHC.Int.$tcInt2_bytes, @object
GHC.Int.$tcInt2_bytes:
	.asciz "Int16"


==================== Asm code ====================
2018-03-16 15:59:10.373369399 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt1_closure
.type GHC.Int.$fEnumInt1_closure, @object
GHC.Int.$fEnumInt1_closure:
	.quad	GHC.Int.$fEnumInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.374313139 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt1_entry
.type GHC.Int.$fEnumInt1_entry, @object
GHC.Int.$fEnumInt1_entry:
_c4rEU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rEV
_c4rEW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rER
_c4rEQ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rES_info,-24(%rbp)
	movl $GHC.Int.$tcInt2_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rEV:
	jmp *-16(%r13)
_c4rER:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt1_entry, .-GHC.Int.$fEnumInt1_entry


==================== Asm code ====================
2018-03-16 15:59:10.375038267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt1_info
.type GHC.Int.$fEnumInt1_info, @object
GHC.Int.$fEnumInt1_info:
	.quad	GHC.Int.$fEnumInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt


==================== Asm code ====================
2018-03-16 15:59:10.375693326 UTC

.section .text
.align 8
_c4rES:
_c4rES:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.predError_entry
	.size _c4rES, .-_c4rES


==================== Asm code ====================
2018-03-16 15:59:10.376281836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rES_info:
	.quad	_c4rES
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt


==================== Asm code ====================
2018-03-16 15:59:10.379300794 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt2_closure
.type GHC.Int.$fEnumInt2_closure, @object
GHC.Int.$fEnumInt2_closure:
	.quad	GHC.Int.$fEnumInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.380172234 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt2_entry
.type GHC.Int.$fEnumInt2_entry, @object
GHC.Int.$fEnumInt2_entry:
_c4rFi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rFj
_c4rFk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rFf
_c4rFe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rFg_info,-24(%rbp)
	movl $GHC.Int.$tcInt2_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rFj:
	jmp *-16(%r13)
_c4rFf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt2_entry, .-GHC.Int.$fEnumInt2_entry


==================== Asm code ====================
2018-03-16 15:59:10.380872198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt2_info
.type GHC.Int.$fEnumInt2_info, @object
GHC.Int.$fEnumInt2_info:
	.quad	GHC.Int.$fEnumInt2_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+8


==================== Asm code ====================
2018-03-16 15:59:10.38217523 UTC

.section .text
.align 8
_c4rFg:
_c4rFg:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.succError_entry
	.size _c4rFg, .-_c4rFg


==================== Asm code ====================
2018-03-16 15:59:10.382748408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rFg_info:
	.quad	_c4rFg
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+8


==================== Asm code ====================
2018-03-16 15:59:10.386289248 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt16_closure
.type GHC.Int.neInt16_closure, @object
GHC.Int.neInt16_closure:
	.quad	GHC.Int.neInt16_info


==================== Asm code ====================
2018-03-16 15:59:10.387115996 UTC

.section .text
.align 8
.globl GHC.Int.neInt16_entry
.type GHC.Int.neInt16_entry, @object
GHC.Int.neInt16_entry:
_c4rFF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rFJ
_c4rFK:
	movq $block_c4rFC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rFC
_c4rFD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rFJ:
	movl $GHC.Int.neInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.neInt16_entry, .-GHC.Int.neInt16_entry


==================== Asm code ====================
2018-03-16 15:59:10.387798864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt16_info
.type GHC.Int.neInt16_info, @object
GHC.Int.neInt16_info:
	.quad	GHC.Int.neInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.388488579 UTC

.section .text
.align 8
_c4rFC:
_c4rFC:
	movq $block_c4rFI_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rFI
_c4rFM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rFC, .-_c4rFC


==================== Asm code ====================
2018-03-16 15:59:10.38910642 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rFC_info:
	.quad	_c4rFC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.390034527 UTC

.section .text
.align 8
_c4rFI:
_c4rFI:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4rFI, .-_c4rFI


==================== Asm code ====================
2018-03-16 15:59:10.390685873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rFI_info:
	.quad	_c4rFI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.393896355 UTC

.section .data
.align 8
.align 1
lvl2_r4kPt_closure:
	.quad	lvl2_r4kPt_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.394729187 UTC

.section .text
.align 8
lvl2_r4kPt_entry:
_c4rGh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rGi
_c4rGj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rGg
_c4rGf:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$tcInt2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rGi:
	jmp *-16(%r13)
_c4rGg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r4kPt_entry, .-lvl2_r4kPt_entry


==================== Asm code ====================
2018-03-16 15:59:10.395440194 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r4kPt_info:
	.quad	lvl2_r4kPt_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:10.397174363 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_$cminBound_closure
.type GHC.Int.$fBoundedInt16_$cminBound_closure, @object
GHC.Int.$fBoundedInt16_$cminBound_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	-32768


==================== Asm code ====================
2018-03-16 15:59:10.400709451 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cpred_closure
.type GHC.Int.$fEnumInt16_$cpred_closure, @object
GHC.Int.$fEnumInt16_$cpred_closure:
	.quad	GHC.Int.$fEnumInt16_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.401611505 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cpred_entry
.type GHC.Int.$fEnumInt16_$cpred_entry, @object
GHC.Int.$fEnumInt16_$cpred_entry:
_c4rGz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rGA
_c4rGB:
	movq $block_c4rGw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rGw
_c4rGx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rGA:
	movl $GHC.Int.$fEnumInt16_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cpred_entry, .-GHC.Int.$fEnumInt16_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:10.402274678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cpred_info
.type GHC.Int.$fEnumInt16_$cpred_info, @object
GHC.Int.$fEnumInt16_$cpred_info:
	.quad	GHC.Int.$fEnumInt16_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+152


==================== Asm code ====================
2018-03-16 15:59:10.403127391 UTC

.section .text
.align 8
_c4rGw:
_c4rGw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rGG
_c4rGF:
	movq 7(%rbx),%rax
	cmpq $-32768,%rax
	jne _c4rGR
_c4rGS:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt1_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rGR:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rGG:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rGw, .-_c4rGw


==================== Asm code ====================
2018-03-16 15:59:10.403821076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rGw_info:
	.quad	_c4rGw
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+160


==================== Asm code ====================
2018-03-16 15:59:10.406118899 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_$cmaxBound_closure
.type GHC.Int.$fBoundedInt16_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt16_$cmaxBound_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	32767


==================== Asm code ====================
2018-03-16 15:59:10.407920426 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_closure
.type GHC.Int.$fBoundedInt16_closure, @object
GHC.Int.$fBoundedInt16_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt16_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt16_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.412047754 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$csucc_closure
.type GHC.Int.$fEnumInt16_$csucc_closure, @object
GHC.Int.$fEnumInt16_$csucc_closure:
	.quad	GHC.Int.$fEnumInt16_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.412982929 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$csucc_entry
.type GHC.Int.$fEnumInt16_$csucc_entry, @object
GHC.Int.$fEnumInt16_$csucc_entry:
_c4rHg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rHh
_c4rHi:
	movq $block_c4rHd_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rHd
_c4rHe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rHh:
	movl $GHC.Int.$fEnumInt16_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$csucc_entry, .-GHC.Int.$fEnumInt16_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:10.413759349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$csucc_info
.type GHC.Int.$fEnumInt16_$csucc_info, @object
GHC.Int.$fEnumInt16_$csucc_info:
	.quad	GHC.Int.$fEnumInt16_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+168


==================== Asm code ====================
2018-03-16 15:59:10.414570274 UTC

.section .text
.align 8
_c4rHd:
_c4rHd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rHn
_c4rHm:
	movq 7(%rbx),%rax
	cmpq $32767,%rax
	jne _c4rHy
_c4rHz:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rHy:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	incq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rHn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rHd, .-_c4rHd


==================== Asm code ====================
2018-03-16 15:59:10.41531631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rHd_info:
	.quad	_c4rHd
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+176


==================== Asm code ====================
2018-03-16 15:59:10.420034207 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowsPrec_closure
.type GHC.Int.$fShowInt16_$cshowsPrec_closure, @object
GHC.Int.$fShowInt16_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:10.420904256 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshowsPrec_entry
.type GHC.Int.$fShowInt16_$cshowsPrec_entry, @object
GHC.Int.$fShowInt16_$cshowsPrec_entry:
_c4rHV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rI6
_c4rI7:
	movq $block_c4rHS_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rHS
_c4rHT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rI6:
	movl $GHC.Int.$fShowInt16_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt16_$cshowsPrec_entry, .-GHC.Int.$fShowInt16_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:10.421595812 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowsPrec_info
.type GHC.Int.$fShowInt16_$cshowsPrec_info, @object
GHC.Int.$fShowInt16_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:10.422302263 UTC

.section .text
.align 8
_c4rHS:
_c4rHS:
	movq $block_c4rHY_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rHY
_c4rHZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rHS, .-_c4rHS


==================== Asm code ====================
2018-03-16 15:59:10.422988006 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rHS_info:
	.quad	_c4rHS
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.423663363 UTC

.section .text
.align 8
_c4rHY:
_c4rHY:
	movq 16(%rbp),%rax
	movq $block_c4rI3_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rHY, .-_c4rHY


==================== Asm code ====================
2018-03-16 15:59:10.424276641 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rHY_info:
	.quad	_c4rHY
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.425046964 UTC

.section .text
.align 8
_c4rI3:
_c4rI3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rIc
_c4rIb:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rIc:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rI3, .-_c4rI3


==================== Asm code ====================
2018-03-16 15:59:10.425690539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rI3_info:
	.quad	_c4rI3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.429477932 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshow_closure
.type GHC.Int.$fShowInt16_$cshow_closure, @object
GHC.Int.$fShowInt16_$cshow_closure:
	.quad	GHC.Int.$fShowInt16_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:10.430340904 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshow_entry
.type GHC.Int.$fShowInt16_$cshow_entry, @object
GHC.Int.$fShowInt16_$cshow_entry:
_c4rID:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rIJ
_c4rIK:
	movq $block_c4rIA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rIA
_c4rIB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rIJ:
	movl $GHC.Int.$fShowInt16_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt16_$cshow_entry, .-GHC.Int.$fShowInt16_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:10.431427792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshow_info
.type GHC.Int.$fShowInt16_$cshow_info, @object
GHC.Int.$fShowInt16_$cshow_info:
	.quad	GHC.Int.$fShowInt16_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.43205614 UTC

.section .text
.align 8
_c4rIA:
_c4rIA:
	movq $block_c4rIG_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rIA, .-_c4rIA


==================== Asm code ====================
2018-03-16 15:59:10.432593536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rIA_info:
	.quad	_c4rIA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.433329459 UTC

.section .text
.align 8
_c4rIG:
_c4rIG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rIO
_c4rIN:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rIO:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rIG, .-_c4rIG


==================== Asm code ====================
2018-03-16 15:59:10.433976853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rIG_info:
	.quad	_c4rIG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.437647501 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt1_closure
.type GHC.Int.$fShowInt1_closure, @object
GHC.Int.$fShowInt1_closure:
	.quad	GHC.Int.$fShowInt1_info


==================== Asm code ====================
2018-03-16 15:59:10.438487222 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt1_entry
.type GHC.Int.$fShowInt1_entry, @object
GHC.Int.$fShowInt1_entry:
_c4rJa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rJg
_c4rJh:
	movq $block_c4rJ7_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rJ7
_c4rJ8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rJg:
	movl $GHC.Int.$fShowInt1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt1_entry, .-GHC.Int.$fShowInt1_entry


==================== Asm code ====================
2018-03-16 15:59:10.439168261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt1_info
.type GHC.Int.$fShowInt1_info, @object
GHC.Int.$fShowInt1_info:
	.quad	GHC.Int.$fShowInt1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.439866735 UTC

.section .text
.align 8
_c4rJ7:
_c4rJ7:
	movq 8(%rbp),%rax
	movq $block_c4rJd_info,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rJ7, .-_c4rJ7


==================== Asm code ====================
2018-03-16 15:59:10.440488619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rJ7_info:
	.quad	_c4rJ7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.441222174 UTC

.section .text
.align 8
_c4rJd:
_c4rJd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rJl
_c4rJk:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rJl:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rJd, .-_c4rJd


==================== Asm code ====================
2018-03-16 15:59:10.441896511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rJd_info:
	.quad	_c4rJd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.444256411 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowList_closure
.type GHC.Int.$fShowInt16_$cshowList_closure, @object
GHC.Int.$fShowInt16_$cshowList_closure:
	.quad	GHC.Int.$fShowInt16_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:10.445022989 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshowList_entry
.type GHC.Int.$fShowInt16_$cshowList_entry, @object
GHC.Int.$fShowInt16_$cshowList_entry:
_c4rJE:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Int.$fShowInt1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Int.$fShowInt16_$cshowList_entry, .-GHC.Int.$fShowInt16_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:10.446212544 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowList_info
.type GHC.Int.$fShowInt16_$cshowList_info, @object
GHC.Int.$fShowInt16_$cshowList_info:
	.quad	GHC.Int.$fShowInt16_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.447962314 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_closure
.type GHC.Int.$fShowInt16_closure, @object
GHC.Int.$fShowInt16_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt16_$cshow_closure+1
	.quad	GHC.Int.$fShowInt16_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.451057879 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl_closure
.type GHC.Int.$wlvl_closure, @object
GHC.Int.$wlvl_closure:
	.quad	GHC.Int.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.452155213 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl_entry
.type GHC.Int.$wlvl_entry, @object
GHC.Int.$wlvl_entry:
_c4rJQ:
	movl $GHC.Int.$fBoundedInt16_$cmaxBound_closure+1,%r9d
	movl $GHC.Int.$fBoundedInt16_$cminBound_closure+1,%r8d
	movq %r14,%rdi
	movl $lvl2_r4kPt_closure,%esi
	movl $GHC.Int.$fShowInt16_closure+1,%r14d
	jmp GHC.Enum.$wtoEnumError_entry
	.size GHC.Int.$wlvl_entry, .-GHC.Int.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:59:10.453116032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl_info
.type GHC.Int.$wlvl_info, @object
GHC.Int.$wlvl_info:
	.quad	GHC.Int.$wlvl_entry
	.quad	0
	.quad	562954248388622
	.quad	4294967300
	.quad	S4lDl_srt+48


==================== Asm code ====================
2018-03-16 15:59:10.455761677 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum_closure
.type GHC.Int.$w$ctoEnum_closure, @object
GHC.Int.$w$ctoEnum_closure:
	.quad	GHC.Int.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.456553508 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum_entry
.type GHC.Int.$w$ctoEnum_entry, @object
GHC.Int.$w$ctoEnum_entry:
_c4rK6:
	movq %r14,%rax
	cmpq $-32768,%r14
	jl _c4rKe
_c4rK5:
	cmpq $32767,%rax
	jg _c4rKe
_c4rKf:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rKe:
	movq %rax,%r14
	jmp GHC.Int.$wlvl_entry
	.size GHC.Int.$w$ctoEnum_entry, .-GHC.Int.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.457164175 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum_info
.type GHC.Int.$w$ctoEnum_info, @object
GHC.Int.$w$ctoEnum_info:
	.quad	GHC.Int.$w$ctoEnum_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.460867958 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$ctoEnum_closure
.type GHC.Int.$fEnumInt16_$ctoEnum_closure, @object
GHC.Int.$fEnumInt16_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.461791877 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$ctoEnum_entry
.type GHC.Int.$fEnumInt16_$ctoEnum_entry, @object
GHC.Int.$fEnumInt16_$ctoEnum_entry:
_c4rKs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rKA
_c4rKB:
	movq $block_c4rKp_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rKp
_c4rKq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rKA:
	movl $GHC.Int.$fEnumInt16_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$ctoEnum_entry, .-GHC.Int.$fEnumInt16_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.462440234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$ctoEnum_info
.type GHC.Int.$fEnumInt16_$ctoEnum_info, @object
GHC.Int.$fEnumInt16_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+200


==================== Asm code ====================
2018-03-16 15:59:10.463096853 UTC

.section .text
.align 8
_c4rKp:
_c4rKp:
	movq $block_c4rKv_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum_entry
	.size _c4rKp, .-_c4rKp


==================== Asm code ====================
2018-03-16 15:59:10.463690258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rKp_info:
	.quad	_c4rKp
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+208


==================== Asm code ====================
2018-03-16 15:59:10.464428575 UTC

.section .text
.align 8
_c4rKv:
_c4rKv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rKF
_c4rKE:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rKF:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4rKv, .-_c4rKv


==================== Asm code ====================
2018-03-16 15:59:10.465067017 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rKv_info:
	.quad	_c4rKv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.495222052 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo_closure
.type GHC.Int.$w$cenumFromThenTo_closure, @object
GHC.Int.$w$cenumFromThenTo_closure:
	.quad	GHC.Int.$w$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.496335086 UTC

.section .text
.align 8
sat_s4kUp_entry:
_c4rLs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rLt
_c4rLu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kUi_entry
_c4rLt:
	jmp *-16(%r13)
	.size sat_s4kUp_entry, .-sat_s4kUp_entry


==================== Asm code ====================
2018-03-16 15:59:10.496965062 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUp_info:
	.quad	sat_s4kUp_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.497909406 UTC

.section .text
.align 8
sat_s4kUn_entry:
_c4rLE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rLF
_c4rLG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rLI
_c4rLH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rLO
_c4rLD:
	cmpq $32767,%rax
	jg _c4rLO
_c4rLS:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rLO:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rLI:
	movq $16,904(%r13)
_c4rLF:
	jmp *-16(%r13)
	.size sat_s4kUn_entry, .-sat_s4kUn_entry


==================== Asm code ====================
2018-03-16 15:59:10.498643174 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUn_info:
	.quad	sat_s4kUn_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.499529425 UTC

.section .text
.align 8
sat_s4kUs_entry:
_c4rM3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rM4
_c4rM5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rM7
_c4rM6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rMd
_c4rM2:
	cmpq $32767,%rax
	jg _c4rMd
_c4rMh:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rMd:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rM7:
	movq $16,904(%r13)
_c4rM4:
	jmp *-16(%r13)
	.size sat_s4kUs_entry, .-sat_s4kUs_entry


==================== Asm code ====================
2018-03-16 15:59:10.500289576 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUs_info:
	.quad	sat_s4kUs_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.501315206 UTC

.section .text
.align 8
go_dn_s4kUi_entry:
_c4rMl:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rMp
_c4rMo:
	cmpq 15(%rbx),%r14
	jge _c4rMj
_c4rMk:
	movq $sat_s4kUs_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rMp:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4rMj:
	movq 7(%rbx),%rax
	movq $sat_s4kUp_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kUn_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4kUi_entry, .-go_dn_s4kUi_entry


==================== Asm code ====================
2018-03-16 15:59:10.502682171 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4kUi_info:
	.quad	go_dn_s4kUi_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.503490718 UTC

.section .text
.align 8
sat_s4kUt_entry:
_c4rMs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rMt
_c4rMu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rMw
_c4rMv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_dn_s4kUi_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kUi_entry
_c4rMw:
	movq $24,904(%r13)
_c4rMt:
	jmp *-16(%r13)
	.size sat_s4kUt_entry, .-sat_s4kUt_entry


==================== Asm code ====================
2018-03-16 15:59:10.504204599 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUt_info:
	.quad	sat_s4kUt_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.505026032 UTC

.section .text
.align 8
sat_s4kUf_entry:
_c4rMG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rMH
_c4rMI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rMK
_c4rMJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rMQ
_c4rMF:
	cmpq $32767,%rax
	jg _c4rMQ
_c4rMU:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rMQ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rMK:
	movq $16,904(%r13)
_c4rMH:
	jmp *-16(%r13)
	.size sat_s4kUf_entry, .-sat_s4kUf_entry


==================== Asm code ====================
2018-03-16 15:59:10.505814793 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUf_info:
	.quad	sat_s4kUf_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.506662464 UTC

.section .text
.align 8
sat_s4kUx_entry:
_c4rN8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rN9
_c4rNa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rNc
_c4rNb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rNi
_c4rN7:
	cmpq $32767,%rax
	jg _c4rNi
_c4rNm:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rNi:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rNc:
	movq $16,904(%r13)
_c4rN9:
	jmp *-16(%r13)
	.size sat_s4kUx_entry, .-sat_s4kUx_entry


==================== Asm code ====================
2018-03-16 15:59:10.507365325 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUx_info:
	.quad	sat_s4kUx_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.5080975 UTC

.section .text
.align 8
sat_s4kUL_entry:
_c4rNP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rNQ
_c4rNR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4kUE_entry
_c4rNQ:
	jmp *-16(%r13)
	.size sat_s4kUL_entry, .-sat_s4kUL_entry


==================== Asm code ====================
2018-03-16 15:59:10.508682748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUL_info:
	.quad	sat_s4kUL_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.509565118 UTC

.section .text
.align 8
sat_s4kUJ_entry:
_c4rO1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rO2
_c4rO3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rO5
_c4rO4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rOb
_c4rO0:
	cmpq $32767,%rax
	jg _c4rOb
_c4rOf:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rOb:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rO5:
	movq $16,904(%r13)
_c4rO2:
	jmp *-16(%r13)
	.size sat_s4kUJ_entry, .-sat_s4kUJ_entry


==================== Asm code ====================
2018-03-16 15:59:10.510254153 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUJ_info:
	.quad	sat_s4kUJ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.51109386 UTC

.section .text
.align 8
sat_s4kUO_entry:
_c4rOq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rOr
_c4rOs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rOu
_c4rOt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rOA
_c4rOp:
	cmpq $32767,%rax
	jg _c4rOA
_c4rOE:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rOA:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rOu:
	movq $16,904(%r13)
_c4rOr:
	jmp *-16(%r13)
	.size sat_s4kUO_entry, .-sat_s4kUO_entry


==================== Asm code ====================
2018-03-16 15:59:10.511802902 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUO_info:
	.quad	sat_s4kUO_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.51265751 UTC

.section .text
.align 8
go_up_s4kUE_entry:
_c4rOI:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rOM
_c4rOL:
	cmpq 15(%rbx),%r14
	jle _c4rOG
_c4rOH:
	movq $sat_s4kUO_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rOM:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4rOG:
	movq 7(%rbx),%rax
	movq $sat_s4kUL_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kUJ_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4kUE_entry, .-go_up_s4kUE_entry


==================== Asm code ====================
2018-03-16 15:59:10.513479684 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4kUE_info:
	.quad	go_up_s4kUE_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.514278434 UTC

.section .text
.align 8
sat_s4kUP_entry:
_c4rOP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rOQ
_c4rOR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rOT
_c4rOS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_up_s4kUE_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4kUE_entry
_c4rOT:
	movq $24,904(%r13)
_c4rOQ:
	jmp *-16(%r13)
	.size sat_s4kUP_entry, .-sat_s4kUP_entry


==================== Asm code ====================
2018-03-16 15:59:10.514935595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUP_info:
	.quad	sat_s4kUP_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.515770612 UTC

.section .text
.align 8
sat_s4kUB_entry:
_c4rP3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rP4
_c4rP5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rP7
_c4rP6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rPd
_c4rP2:
	cmpq $32767,%rax
	jg _c4rPd
_c4rPh:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rPd:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rP7:
	movq $16,904(%r13)
_c4rP4:
	jmp *-16(%r13)
	.size sat_s4kUB_entry, .-sat_s4kUB_entry


==================== Asm code ====================
2018-03-16 15:59:10.516511334 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUB_info:
	.quad	sat_s4kUB_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.517414471 UTC

.section .text
.align 8
sat_s4kUT_entry:
_c4rPv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rPw
_c4rPx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rPz
_c4rPy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rPF
_c4rPu:
	cmpq $32767,%rax
	jg _c4rPF
_c4rPJ:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rPF:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rPz:
	movq $16,904(%r13)
_c4rPw:
	jmp *-16(%r13)
	.size sat_s4kUT_entry, .-sat_s4kUT_entry


==================== Asm code ====================
2018-03-16 15:59:10.518213416 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kUT_info:
	.quad	sat_s4kUT_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.519364208 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo_entry
.type GHC.Int.$w$cenumFromThenTo_entry, @object
GHC.Int.$w$cenumFromThenTo_entry:
_c4rPN:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rPR
_c4rPQ:
	cmpq %r14,%rsi
	jl _c4rPL
_c4rPM:
	cmpq %rsi,%rdi
	jge _c4rQ2
_c4rQ7:
	cmpq %r14,%rdi
	jl _c4rQ6
_c4rQ5:
	movq $sat_s4kUT_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rQ6:
	addq $-88,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rQ2:
	movq $sat_s4kUP_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kUB_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rPL:
	cmpq %rsi,%rdi
	jle _c4rPU
_c4rPZ:
	cmpq %r14,%rdi
	jg _c4rQ6
_c4rPX:
	movq $sat_s4kUx_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rPU:
	movq $sat_s4kUt_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kUf_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rPR:
	movq $88,904(%r13)
	movl $GHC.Int.$w$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo_entry, .-GHC.Int.$w$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.520529122 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo_info
.type GHC.Int.$w$cenumFromThenTo_info, @object
GHC.Int.$w$cenumFromThenTo_info:
	.quad	GHC.Int.$w$cenumFromThenTo_entry
	.quad	0
	.quad	38654705678
	.quad	12884901904
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.52534551 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.526297205 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_entry:
_c4rRM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rRV
_c4rRW:
	movq $block_c4rRJ_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rRJ
_c4rRK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rRV:
	movl $GHC.Int.$fEnumInt16_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt16_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.52695358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4lDl_srt+216


==================== Asm code ====================
2018-03-16 15:59:10.527722007 UTC

.section .text
.align 8
_c4rRJ:
_c4rRJ:
	movq $block_c4rRP_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rRP
_c4rRQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rRJ, .-_c4rRJ


==================== Asm code ====================
2018-03-16 15:59:10.528309245 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rRJ_info:
	.quad	_c4rRJ
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+216


==================== Asm code ====================
2018-03-16 15:59:10.528973935 UTC

.section .text
.align 8
_c4rRP:
_c4rRP:
	movq $block_c4rRU_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4rRU
_c4rRZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rRP, .-_c4rRP


==================== Asm code ====================
2018-03-16 15:59:10.529620599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rRP_info:
	.quad	_c4rRP
	.quad	66
	.quad	4294967326
	.quad	S4lDl_srt+216


==================== Asm code ====================
2018-03-16 15:59:10.530356176 UTC

.section .text
.align 8
_c4rRU:
_c4rRU:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo_entry
	.size _c4rRU, .-_c4rRU


==================== Asm code ====================
2018-03-16 15:59:10.530960265 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rRU_info:
	.quad	_c4rRU
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+216


==================== Asm code ====================
2018-03-16 15:59:10.53696346 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo_closure
.type GHC.Int.$w$cenumFromTo_closure, @object
GHC.Int.$w$cenumFromTo_closure:
	.quad	GHC.Int.$w$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.537910854 UTC

.section .text
.align 8
sat_s4kVd_entry:
_c4rSJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rSK
_c4rSL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4rSI
_c4rSH:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4kV6_entry
_c4rSK:
	jmp *-16(%r13)
_c4rSI:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4kVd_entry, .-sat_s4kVd_entry


==================== Asm code ====================
2018-03-16 15:59:10.538629292 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kVd_info:
	.quad	sat_s4kVd_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.539543016 UTC

.section .text
.align 8
sat_s4kVa_entry:
_c4rSX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rSY
_c4rSZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rT1
_c4rT0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rT7
_c4rSW:
	cmpq $32767,%rax
	jg _c4rT7
_c4rTb:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rT7:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rT1:
	movq $16,904(%r13)
_c4rSY:
	jmp *-16(%r13)
	.size sat_s4kVa_entry, .-sat_s4kVa_entry


==================== Asm code ====================
2018-03-16 15:59:10.540350605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kVa_info:
	.quad	sat_s4kVa_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.541172178 UTC

.section .text
.align 8
go_s4kV6_entry:
_c4rTd:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4rTh
_c4rTg:
	movq 7(%rbx),%rax
	movq $sat_s4kVd_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kVa_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rTh:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4kV6_entry, .-go_s4kV6_entry


==================== Asm code ====================
2018-03-16 15:59:10.542446173 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4kV6_info:
	.quad	go_s4kV6_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.543258528 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo_entry
.type GHC.Int.$w$cenumFromTo_entry, @object
GHC.Int.$w$cenumFromTo_entry:
_c4rTl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rTp
_c4rTo:
	cmpq %rsi,%r14
	jle _c4rTj
_c4rTk:
	addq $-16,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rTp:
	movq $16,904(%r13)
	movl $GHC.Int.$w$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
_c4rTj:
	movq $go_s4kV6_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4kV6_entry
	.size GHC.Int.$w$cenumFromTo_entry, .-GHC.Int.$w$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.543924968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo_info
.type GHC.Int.$w$cenumFromTo_info, @object
GHC.Int.$w$cenumFromTo_info:
	.quad	GHC.Int.$w$cenumFromTo_entry
	.quad	0
	.quad	141733920782
	.quad	8589934604
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.547528395 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromTo_closure
.type GHC.Int.$fEnumInt16_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt16_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.548380045 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromTo_entry
.type GHC.Int.$fEnumInt16_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt16_$cenumFromTo_entry:
_c4rTS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rTW
_c4rTX:
	movq $block_c4rTP_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rTP
_c4rTQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rTW:
	movl $GHC.Int.$fEnumInt16_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFromTo_entry, .-GHC.Int.$fEnumInt16_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.54906679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromTo_info
.type GHC.Int.$fEnumInt16_$cenumFromTo_info, @object
GHC.Int.$fEnumInt16_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+232


==================== Asm code ====================
2018-03-16 15:59:10.55021458 UTC

.section .text
.align 8
_c4rTP:
_c4rTP:
	movq $block_c4rTV_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rTV
_c4rTZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rTP, .-_c4rTP


==================== Asm code ====================
2018-03-16 15:59:10.550800663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rTP_info:
	.quad	_c4rTP
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+232


==================== Asm code ====================
2018-03-16 15:59:10.551459285 UTC

.section .text
.align 8
_c4rTV:
_c4rTV:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo_entry
	.size _c4rTV, .-_c4rTV


==================== Asm code ====================
2018-03-16 15:59:10.552042796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rTV_info:
	.quad	_c4rTV
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+232


==================== Asm code ====================
2018-03-16 15:59:10.557658724 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo_closure
.type GHC.Int.$wgo_closure, @object
GHC.Int.$wgo_closure:
	.quad	GHC.Int.$wgo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.558588586 UTC

.section .text
.align 8
sat_s4kVt_entry:
_c4rUv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rUw
_c4rUH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $32767,%rax
	jne _c4rUt
_c4rUu:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rUw:
	jmp *-16(%r13)
_c4rUt:
	movq $block_c4rUB_info,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo_entry
	.size sat_s4kVt_entry, .-sat_s4kVt_entry


==================== Asm code ====================
2018-03-16 15:59:10.559325909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kVt_info:
	.quad	sat_s4kVt_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+248


==================== Asm code ====================
2018-03-16 15:59:10.560108153 UTC

.section .text
.align 8
_c4rUB:
_c4rUB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rUG
_c4rUF:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rUG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rUB, .-_c4rUB


==================== Asm code ====================
2018-03-16 15:59:10.560851547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rUB_info:
	.quad	_c4rUB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.561867604 UTC

.section .text
.align 8
sat_s4kVn_entry:
_c4rUR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rUS
_c4rUT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rUV
_c4rUU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4rV1
_c4rUQ:
	cmpq $32767,%rax
	jg _c4rV1
_c4rV5:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rV1:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4rUV:
	movq $16,904(%r13)
_c4rUS:
	jmp *-16(%r13)
	.size sat_s4kVn_entry, .-sat_s4kVn_entry


==================== Asm code ====================
2018-03-16 15:59:10.563171312 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kVn_info:
	.quad	sat_s4kVn_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.563962045 UTC

.section .text
.align 8
.globl GHC.Int.$wgo_entry
.type GHC.Int.$wgo_entry, @object
GHC.Int.$wgo_entry:
_c4rV6:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4rVa
_c4rV9:
	movq $sat_s4kVt_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s4kVn_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4rVa:
	movq $48,904(%r13)
	movl $GHC.Int.$wgo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$wgo_entry, .-GHC.Int.$wgo_entry


==================== Asm code ====================
2018-03-16 15:59:10.564652931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo_info
.type GHC.Int.$wgo_info, @object
GHC.Int.$wgo_info:
	.quad	GHC.Int.$wgo_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	S4lDl_srt+192


==================== Asm code ====================
2018-03-16 15:59:10.567871042 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_go_closure
.type GHC.Int.$fEnumInt16_go_closure, @object
GHC.Int.$fEnumInt16_go_closure:
	.quad	GHC.Int.$fEnumInt16_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.568689282 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_go_entry
.type GHC.Int.$fEnumInt16_go_entry, @object
GHC.Int.$fEnumInt16_go_entry:
_c4rVB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rVC
_c4rVD:
	movq $block_c4rVy_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo_entry
_c4rVC:
	movl $GHC.Int.$fEnumInt16_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_go_entry, .-GHC.Int.$fEnumInt16_go_entry


==================== Asm code ====================
2018-03-16 15:59:10.569417331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_go_info
.type GHC.Int.$fEnumInt16_go_info, @object
GHC.Int.$fEnumInt16_go_info:
	.quad	GHC.Int.$fEnumInt16_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4lDl_srt+248


==================== Asm code ====================
2018-03-16 15:59:10.570260461 UTC

.section .text
.align 8
_c4rVy:
_c4rVy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rVG
_c4rVF:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rVG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rVy, .-_c4rVy


==================== Asm code ====================
2018-03-16 15:59:10.570904854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rVy_info:
	.quad	_c4rVy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.574084514 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFrom_closure
.type GHC.Int.$fEnumInt16_$cenumFrom_closure, @object
GHC.Int.$fEnumInt16_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.57487795 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFrom_entry
.type GHC.Int.$fEnumInt16_$cenumFrom_entry, @object
GHC.Int.$fEnumInt16_$cenumFrom_entry:
_c4rVX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rVY
_c4rVZ:
	movq $block_c4rVU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rVU
_c4rVV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rVY:
	movl $GHC.Int.$fEnumInt16_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFrom_entry, .-GHC.Int.$fEnumInt16_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:10.575506953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFrom_info
.type GHC.Int.$fEnumInt16_$cenumFrom_info, @object
GHC.Int.$fEnumInt16_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+256


==================== Asm code ====================
2018-03-16 15:59:10.576284275 UTC

.section .text
.align 8
_c4rVU:
_c4rVU:
	movq 7(%rbx),%rax
	cmpq $32767,%rax
	jle _c4rW6
_c4rW7:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rW6:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt16_go_entry
	.size _c4rVU, .-_c4rVU


==================== Asm code ====================
2018-03-16 15:59:10.576923451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rVU_info:
	.quad	_c4rVU
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+256


==================== Asm code ====================
2018-03-16 15:59:10.579775668 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_closure
.type GHC.Int.$fEnumInt16_closure, @object
GHC.Int.$fEnumInt16_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt16_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt16_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.580459579 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThen_closure
.type GHC.Int.$fEnumInt16_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt16_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.581172237 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromThen_entry
.type GHC.Int.$fEnumInt16_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt16_$cenumFromThen_entry:
_c4rWn:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Int.$fBoundedInt16_closure+1,%esi
	movl $GHC.Int.$fEnumInt16_closure+1,%r14d
	jmp GHC.Enum.boundedEnumFromThen_entry
	.size GHC.Int.$fEnumInt16_$cenumFromThen_entry, .-GHC.Int.$fEnumInt16_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:10.582347155 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThen_info
.type GHC.Int.$fEnumInt16_$cenumFromThen_info, @object
GHC.Int.$fEnumInt16_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4lDl_srt+272


==================== Asm code ====================
2018-03-16 15:59:10.584066852 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt4_bytes
.type GHC.Int.$tcInt4_bytes, @object
GHC.Int.$tcInt4_bytes:
	.asciz "Int32"


==================== Asm code ====================
2018-03-16 15:59:10.587116067 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt3_closure
.type GHC.Int.$fEnumInt3_closure, @object
GHC.Int.$fEnumInt3_closure:
	.quad	GHC.Int.$fEnumInt3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.588030274 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt3_entry
.type GHC.Int.$fEnumInt3_entry, @object
GHC.Int.$fEnumInt3_entry:
_c4rWE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rWF
_c4rWG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rWB
_c4rWA:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rWC_info,-24(%rbp)
	movl $GHC.Int.$tcInt4_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rWF:
	jmp *-16(%r13)
_c4rWB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt3_entry, .-GHC.Int.$fEnumInt3_entry


==================== Asm code ====================
2018-03-16 15:59:10.588719811 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt3_info
.type GHC.Int.$fEnumInt3_info, @object
GHC.Int.$fEnumInt3_info:
	.quad	GHC.Int.$fEnumInt3_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+280


==================== Asm code ====================
2018-03-16 15:59:10.589572505 UTC

.section .text
.align 8
_c4rWC:
_c4rWC:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.predError_entry
	.size _c4rWC, .-_c4rWC


==================== Asm code ====================
2018-03-16 15:59:10.590161637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rWC_info:
	.quad	_c4rWC
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+280


==================== Asm code ====================
2018-03-16 15:59:10.593177614 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt4_closure
.type GHC.Int.$fEnumInt4_closure, @object
GHC.Int.$fEnumInt4_closure:
	.quad	GHC.Int.$fEnumInt4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.594132074 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt4_entry
.type GHC.Int.$fEnumInt4_entry, @object
GHC.Int.$fEnumInt4_entry:
_c4rX2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rX3
_c4rX4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rWZ
_c4rWY:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4rX0_info,-24(%rbp)
	movl $GHC.Int.$tcInt4_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rX3:
	jmp *-16(%r13)
_c4rWZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt4_entry, .-GHC.Int.$fEnumInt4_entry


==================== Asm code ====================
2018-03-16 15:59:10.594872175 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt4_info
.type GHC.Int.$fEnumInt4_info, @object
GHC.Int.$fEnumInt4_info:
	.quad	GHC.Int.$fEnumInt4_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+288


==================== Asm code ====================
2018-03-16 15:59:10.595523258 UTC

.section .text
.align 8
_c4rX0:
_c4rX0:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.succError_entry
	.size _c4rX0, .-_c4rX0


==================== Asm code ====================
2018-03-16 15:59:10.59609151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rX0_info:
	.quad	_c4rX0
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+288


==================== Asm code ====================
2018-03-16 15:59:10.599738386 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt32_closure
.type GHC.Int.neInt32_closure, @object
GHC.Int.neInt32_closure:
	.quad	GHC.Int.neInt32_info


==================== Asm code ====================
2018-03-16 15:59:10.600523625 UTC

.section .text
.align 8
.globl GHC.Int.neInt32_entry
.type GHC.Int.neInt32_entry, @object
GHC.Int.neInt32_entry:
_c4rXp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rXt
_c4rXu:
	movq $block_c4rXm_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4rXm
_c4rXn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rXt:
	movl $GHC.Int.neInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.neInt32_entry, .-GHC.Int.neInt32_entry


==================== Asm code ====================
2018-03-16 15:59:10.601904671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt32_info
.type GHC.Int.neInt32_info, @object
GHC.Int.neInt32_info:
	.quad	GHC.Int.neInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.602978008 UTC

.section .text
.align 8
_c4rXm:
_c4rXm:
	movq $block_c4rXs_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rXs
_c4rXw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rXm, .-_c4rXm


==================== Asm code ====================
2018-03-16 15:59:10.603894454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rXm_info:
	.quad	_c4rXm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.604923772 UTC

.section .text
.align 8
_c4rXs:
_c4rXs:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4rXs, .-_c4rXs


==================== Asm code ====================
2018-03-16 15:59:10.605933272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rXs_info:
	.quad	_c4rXs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.610011833 UTC

.section .data
.align 8
.align 1
lvl4_r4kPv_closure:
	.quad	lvl4_r4kPv_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.611315447 UTC

.section .text
.align 8
lvl4_r4kPv_entry:
_c4rY1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rY2
_c4rY3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4rY0
_c4rXZ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$tcInt4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4rY2:
	jmp *-16(%r13)
_c4rY0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r4kPv_entry, .-lvl4_r4kPv_entry


==================== Asm code ====================
2018-03-16 15:59:10.6124095 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r4kPv_info:
	.quad	lvl4_r4kPv_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:10.615150354 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_$cminBound_closure
.type GHC.Int.$fBoundedInt32_$cminBound_closure, @object
GHC.Int.$fBoundedInt32_$cminBound_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	-2147483648


==================== Asm code ====================
2018-03-16 15:59:10.620589547 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cpred_closure
.type GHC.Int.$fEnumInt32_$cpred_closure, @object
GHC.Int.$fEnumInt32_$cpred_closure:
	.quad	GHC.Int.$fEnumInt32_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.621971203 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cpred_entry
.type GHC.Int.$fEnumInt32_$cpred_entry, @object
GHC.Int.$fEnumInt32_$cpred_entry:
_c4rYj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rYk
_c4rYl:
	movq $block_c4rYg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rYg
_c4rYh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rYk:
	movl $GHC.Int.$fEnumInt32_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cpred_entry, .-GHC.Int.$fEnumInt32_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:10.623113802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cpred_info
.type GHC.Int.$fEnumInt32_$cpred_info, @object
GHC.Int.$fEnumInt32_$cpred_info:
	.quad	GHC.Int.$fEnumInt32_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+296


==================== Asm code ====================
2018-03-16 15:59:10.62446939 UTC

.section .text
.align 8
_c4rYg:
_c4rYg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rYq
_c4rYp:
	movq 7(%rbx),%rax
	cmpq $-2147483648,%rax
	jne _c4rYB
_c4rYC:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rYB:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rYq:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rYg, .-_c4rYg


==================== Asm code ====================
2018-03-16 15:59:10.625664495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rYg_info:
	.quad	_c4rYg
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+304


==================== Asm code ====================
2018-03-16 15:59:10.628659782 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_$cmaxBound_closure
.type GHC.Int.$fBoundedInt32_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt32_$cmaxBound_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	2147483647


==================== Asm code ====================
2018-03-16 15:59:10.632238384 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_closure
.type GHC.Int.$fBoundedInt32_closure, @object
GHC.Int.$fBoundedInt32_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt32_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt32_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.638078837 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$csucc_closure
.type GHC.Int.$fEnumInt32_$csucc_closure, @object
GHC.Int.$fEnumInt32_$csucc_closure:
	.quad	GHC.Int.$fEnumInt32_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.639410321 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$csucc_entry
.type GHC.Int.$fEnumInt32_$csucc_entry, @object
GHC.Int.$fEnumInt32_$csucc_entry:
_c4rZ0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rZ1
_c4rZ2:
	movq $block_c4rYX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4rYX
_c4rYY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rZ1:
	movl $GHC.Int.$fEnumInt32_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$csucc_entry, .-GHC.Int.$fEnumInt32_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:10.640549883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$csucc_info
.type GHC.Int.$fEnumInt32_$csucc_info, @object
GHC.Int.$fEnumInt32_$csucc_info:
	.quad	GHC.Int.$fEnumInt32_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+312


==================== Asm code ====================
2018-03-16 15:59:10.641818435 UTC

.section .text
.align 8
_c4rYX:
_c4rYX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4rZ7
_c4rZ6:
	movq 7(%rbx),%rax
	cmpq $2147483647,%rax
	jne _c4rZi
_c4rZj:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt4_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4rZi:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	incq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rZ7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4rYX, .-_c4rYX


==================== Asm code ====================
2018-03-16 15:59:10.64291233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rYX_info:
	.quad	_c4rYX
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+320


==================== Asm code ====================
2018-03-16 15:59:10.648041013 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowsPrec_closure
.type GHC.Int.$fShowInt32_$cshowsPrec_closure, @object
GHC.Int.$fShowInt32_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:10.648941536 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshowsPrec_entry
.type GHC.Int.$fShowInt32_$cshowsPrec_entry, @object
GHC.Int.$fShowInt32_$cshowsPrec_entry:
_c4rZF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4rZQ
_c4rZR:
	movq $block_c4rZC_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4rZC
_c4rZD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4rZQ:
	movl $GHC.Int.$fShowInt32_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt32_$cshowsPrec_entry, .-GHC.Int.$fShowInt32_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:10.649682199 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowsPrec_info
.type GHC.Int.$fShowInt32_$cshowsPrec_info, @object
GHC.Int.$fShowInt32_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:10.65041205 UTC

.section .text
.align 8
_c4rZC:
_c4rZC:
	movq $block_c4rZI_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4rZI
_c4rZJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4rZC, .-_c4rZC


==================== Asm code ====================
2018-03-16 15:59:10.65101082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rZC_info:
	.quad	_c4rZC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.651701598 UTC

.section .text
.align 8
_c4rZI:
_c4rZI:
	movq 16(%rbp),%rax
	movq $block_c4rZN_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4rZI, .-_c4rZI


==================== Asm code ====================
2018-03-16 15:59:10.652350817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rZI_info:
	.quad	_c4rZI
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.653122217 UTC

.section .text
.align 8
_c4rZN:
_c4rZN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4rZW
_c4rZV:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4rZW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4rZN, .-_c4rZN


==================== Asm code ====================
2018-03-16 15:59:10.654255448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4rZN_info:
	.quad	_c4rZN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.657792445 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshow_closure
.type GHC.Int.$fShowInt32_$cshow_closure, @object
GHC.Int.$fShowInt32_$cshow_closure:
	.quad	GHC.Int.$fShowInt32_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:10.658595802 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshow_entry
.type GHC.Int.$fShowInt32_$cshow_entry, @object
GHC.Int.$fShowInt32_$cshow_entry:
_c4s0n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s0t
_c4s0u:
	movq $block_c4s0k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4s0k
_c4s0l:
	movq (%rbx),%rax
	jmp *(%rax)
_c4s0t:
	movl $GHC.Int.$fShowInt32_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt32_$cshow_entry, .-GHC.Int.$fShowInt32_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:10.65925183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshow_info
.type GHC.Int.$fShowInt32_$cshow_info, @object
GHC.Int.$fShowInt32_$cshow_info:
	.quad	GHC.Int.$fShowInt32_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.659902952 UTC

.section .text
.align 8
_c4s0k:
_c4s0k:
	movq $block_c4s0q_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4s0k, .-_c4s0k


==================== Asm code ====================
2018-03-16 15:59:10.660475207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s0k_info:
	.quad	_c4s0k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.661235785 UTC

.section .text
.align 8
_c4s0q:
_c4s0q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4s0y
_c4s0x:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s0y:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4s0q, .-_c4s0q


==================== Asm code ====================
2018-03-16 15:59:10.662029093 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s0q_info:
	.quad	_c4s0q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.665735001 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt2_closure
.type GHC.Int.$fShowInt2_closure, @object
GHC.Int.$fShowInt2_closure:
	.quad	GHC.Int.$fShowInt2_info


==================== Asm code ====================
2018-03-16 15:59:10.666569638 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt2_entry
.type GHC.Int.$fShowInt2_entry, @object
GHC.Int.$fShowInt2_entry:
_c4s0U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s10
_c4s11:
	movq $block_c4s0R_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4s0R
_c4s0S:
	movq (%rbx),%rax
	jmp *(%rax)
_c4s10:
	movl $GHC.Int.$fShowInt2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt2_entry, .-GHC.Int.$fShowInt2_entry


==================== Asm code ====================
2018-03-16 15:59:10.667202052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt2_info
.type GHC.Int.$fShowInt2_info, @object
GHC.Int.$fShowInt2_info:
	.quad	GHC.Int.$fShowInt2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.667907584 UTC

.section .text
.align 8
_c4s0R:
_c4s0R:
	movq 8(%rbp),%rax
	movq $block_c4s0X_info,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4s0R, .-_c4s0R


==================== Asm code ====================
2018-03-16 15:59:10.668590615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s0R_info:
	.quad	_c4s0R
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.669556438 UTC

.section .text
.align 8
_c4s0X:
_c4s0X:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4s15
_c4s14:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s15:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4s0X, .-_c4s0X


==================== Asm code ====================
2018-03-16 15:59:10.670210953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s0X_info:
	.quad	_c4s0X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.672641286 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowList_closure
.type GHC.Int.$fShowInt32_$cshowList_closure, @object
GHC.Int.$fShowInt32_$cshowList_closure:
	.quad	GHC.Int.$fShowInt32_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:10.673861155 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshowList_entry
.type GHC.Int.$fShowInt32_$cshowList_entry, @object
GHC.Int.$fShowInt32_$cshowList_entry:
_c4s1o:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Int.$fShowInt2_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Int.$fShowInt32_$cshowList_entry, .-GHC.Int.$fShowInt32_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:10.674444986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowList_info
.type GHC.Int.$fShowInt32_$cshowList_info, @object
GHC.Int.$fShowInt32_$cshowList_info:
	.quad	GHC.Int.$fShowInt32_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.67665298 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_closure
.type GHC.Int.$fShowInt32_closure, @object
GHC.Int.$fShowInt32_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt32_$cshow_closure+1
	.quad	GHC.Int.$fShowInt32_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.679669774 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl1_closure
.type GHC.Int.$wlvl1_closure, @object
GHC.Int.$wlvl1_closure:
	.quad	GHC.Int.$wlvl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.680420841 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl1_entry
.type GHC.Int.$wlvl1_entry, @object
GHC.Int.$wlvl1_entry:
_c4s1A:
	movl $GHC.Int.$fBoundedInt32_$cmaxBound_closure+1,%r9d
	movl $GHC.Int.$fBoundedInt32_$cminBound_closure+1,%r8d
	movq %r14,%rdi
	movl $lvl4_r4kPv_closure,%esi
	movl $GHC.Int.$fShowInt32_closure+1,%r14d
	jmp GHC.Enum.$wtoEnumError_entry
	.size GHC.Int.$wlvl1_entry, .-GHC.Int.$wlvl1_entry


==================== Asm code ====================
2018-03-16 15:59:10.68115473 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl1_info
.type GHC.Int.$wlvl1_info, @object
GHC.Int.$wlvl1_info:
	.quad	GHC.Int.$wlvl1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4lDl_srt+328


==================== Asm code ====================
2018-03-16 15:59:10.683848638 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum1_closure
.type GHC.Int.$w$ctoEnum1_closure, @object
GHC.Int.$w$ctoEnum1_closure:
	.quad	GHC.Int.$w$ctoEnum1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.684633527 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum1_entry
.type GHC.Int.$w$ctoEnum1_entry, @object
GHC.Int.$w$ctoEnum1_entry:
_c4s1Q:
	movq %r14,%rax
	cmpq $-2147483648,%r14
	jl _c4s1Y
_c4s1P:
	cmpq $2147483647,%rax
	jg _c4s1Y
_c4s1Z:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4s1Y:
	movq %rax,%r14
	jmp GHC.Int.$wlvl1_entry
	.size GHC.Int.$w$ctoEnum1_entry, .-GHC.Int.$w$ctoEnum1_entry


==================== Asm code ====================
2018-03-16 15:59:10.685336968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum1_info
.type GHC.Int.$w$ctoEnum1_info, @object
GHC.Int.$w$ctoEnum1_info:
	.quad	GHC.Int.$w$ctoEnum1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.689935917 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$ctoEnum_closure
.type GHC.Int.$fEnumInt32_$ctoEnum_closure, @object
GHC.Int.$fEnumInt32_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.690845495 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$ctoEnum_entry
.type GHC.Int.$fEnumInt32_$ctoEnum_entry, @object
GHC.Int.$fEnumInt32_$ctoEnum_entry:
_c4s2c:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s2k
_c4s2l:
	movq $block_c4s29_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4s29
_c4s2a:
	movq (%rbx),%rax
	jmp *(%rax)
_c4s2k:
	movl $GHC.Int.$fEnumInt32_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$ctoEnum_entry, .-GHC.Int.$fEnumInt32_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:10.691541814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$ctoEnum_info
.type GHC.Int.$fEnumInt32_$ctoEnum_info, @object
GHC.Int.$fEnumInt32_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+352


==================== Asm code ====================
2018-03-16 15:59:10.692254576 UTC

.section .text
.align 8
_c4s29:
_c4s29:
	movq $block_c4s2f_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum1_entry
	.size _c4s29, .-_c4s29


==================== Asm code ====================
2018-03-16 15:59:10.692816319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s29_info:
	.quad	_c4s29
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+360


==================== Asm code ====================
2018-03-16 15:59:10.693705033 UTC

.section .text
.align 8
_c4s2f:
_c4s2f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s2p
_c4s2o:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s2p:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4s2f, .-_c4s2f


==================== Asm code ====================
2018-03-16 15:59:10.694883052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s2f_info:
	.quad	_c4s2f
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.700724446 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo1_closure
.type GHC.Int.$w$cenumFromTo1_closure, @object
GHC.Int.$w$cenumFromTo1_closure:
	.quad	GHC.Int.$w$cenumFromTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.701661349 UTC

.section .text
.align 8
sat_s4kWG_entry:
_c4s2Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s30
_c4s31:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4s2Y
_c4s2X:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4kWz_entry
_c4s30:
	jmp *-16(%r13)
_c4s2Y:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4kWG_entry, .-sat_s4kWG_entry


==================== Asm code ====================
2018-03-16 15:59:10.702387179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kWG_info:
	.quad	sat_s4kWG_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.703266486 UTC

.section .text
.align 8
sat_s4kWD_entry:
_c4s3d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s3e
_c4s3f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s3h
_c4s3g:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s3n
_c4s3c:
	cmpq $2147483647,%rax
	jg _c4s3n
_c4s3r:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s3n:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s3h:
	movq $16,904(%r13)
_c4s3e:
	jmp *-16(%r13)
	.size sat_s4kWD_entry, .-sat_s4kWD_entry


==================== Asm code ====================
2018-03-16 15:59:10.704050261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kWD_info:
	.quad	sat_s4kWD_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.704842951 UTC

.section .text
.align 8
go_s4kWz_entry:
_c4s3t:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4s3x
_c4s3w:
	movq 7(%rbx),%rax
	movq $sat_s4kWG_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kWD_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4s3x:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4kWz_entry, .-go_s4kWz_entry


==================== Asm code ====================
2018-03-16 15:59:10.705656993 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4kWz_info:
	.quad	go_s4kWz_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.706459269 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo1_entry
.type GHC.Int.$w$cenumFromTo1_entry, @object
GHC.Int.$w$cenumFromTo1_entry:
_c4s3B:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s3F
_c4s3E:
	cmpq %rsi,%r14
	jle _c4s3z
_c4s3A:
	addq $-16,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4s3F:
	movq $16,904(%r13)
	movl $GHC.Int.$w$cenumFromTo1_closure,%ebx
	jmp *-8(%r13)
_c4s3z:
	movq $go_s4kWz_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4kWz_entry
	.size GHC.Int.$w$cenumFromTo1_entry, .-GHC.Int.$w$cenumFromTo1_entry


==================== Asm code ====================
2018-03-16 15:59:10.7071892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo1_info
.type GHC.Int.$w$cenumFromTo1_info, @object
GHC.Int.$w$cenumFromTo1_info:
	.quad	GHC.Int.$w$cenumFromTo1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934604
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.710979242 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromTo_closure
.type GHC.Int.$fEnumInt32_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt32_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.71192245 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromTo_entry
.type GHC.Int.$fEnumInt32_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt32_$cenumFromTo_entry:
_c4s48:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s4c
_c4s4d:
	movq $block_c4s45_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4s45
_c4s46:
	movq (%rbx),%rax
	jmp *(%rax)
_c4s4c:
	movl $GHC.Int.$fEnumInt32_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFromTo_entry, .-GHC.Int.$fEnumInt32_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.712671808 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromTo_info
.type GHC.Int.$fEnumInt32_$cenumFromTo_info, @object
GHC.Int.$fEnumInt32_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+368


==================== Asm code ====================
2018-03-16 15:59:10.713894301 UTC

.section .text
.align 8
_c4s45:
_c4s45:
	movq $block_c4s4b_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4s4b
_c4s4f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4s45, .-_c4s45


==================== Asm code ====================
2018-03-16 15:59:10.71452637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s45_info:
	.quad	_c4s45
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+368


==================== Asm code ====================
2018-03-16 15:59:10.715147712 UTC

.section .text
.align 8
_c4s4b:
_c4s4b:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo1_entry
	.size _c4s4b, .-_c4s4b


==================== Asm code ====================
2018-03-16 15:59:10.715758803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s4b_info:
	.quad	_c4s4b
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+368


==================== Asm code ====================
2018-03-16 15:59:10.722220661 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo1_closure
.type GHC.Int.$wgo1_closure, @object
GHC.Int.$wgo1_closure:
	.quad	GHC.Int.$wgo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.723115659 UTC

.section .text
.align 8
sat_s4kWW_entry:
_c4s4L:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s4M
_c4s4X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $2147483647,%rax
	jne _c4s4J
_c4s4K:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s4M:
	jmp *-16(%r13)
_c4s4J:
	movq $block_c4s4R_info,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo1_entry
	.size sat_s4kWW_entry, .-sat_s4kWW_entry


==================== Asm code ====================
2018-03-16 15:59:10.723873983 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kWW_info:
	.quad	sat_s4kWW_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+384


==================== Asm code ====================
2018-03-16 15:59:10.724642021 UTC

.section .text
.align 8
_c4s4R:
_c4s4R:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4s4W
_c4s4V:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s4W:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4s4R, .-_c4s4R


==================== Asm code ====================
2018-03-16 15:59:10.725327984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s4R_info:
	.quad	_c4s4R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.726187001 UTC

.section .text
.align 8
sat_s4kWQ_entry:
_c4s57:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s58
_c4s59:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s5b
_c4s5a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s5h
_c4s56:
	cmpq $2147483647,%rax
	jg _c4s5h
_c4s5l:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s5h:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s5b:
	movq $16,904(%r13)
_c4s58:
	jmp *-16(%r13)
	.size sat_s4kWQ_entry, .-sat_s4kWQ_entry


==================== Asm code ====================
2018-03-16 15:59:10.727133198 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kWQ_info:
	.quad	sat_s4kWQ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.727900043 UTC

.section .text
.align 8
.globl GHC.Int.$wgo1_entry
.type GHC.Int.$wgo1_entry, @object
GHC.Int.$wgo1_entry:
_c4s5m:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4s5q
_c4s5p:
	movq $sat_s4kWW_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s4kWQ_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4s5q:
	movq $48,904(%r13)
	movl $GHC.Int.$wgo1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$wgo1_entry, .-GHC.Int.$wgo1_entry


==================== Asm code ====================
2018-03-16 15:59:10.728628483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo1_info
.type GHC.Int.$wgo1_info, @object
GHC.Int.$wgo1_info:
	.quad	GHC.Int.$wgo1_entry
	.quad	0
	.quad	141733920782
	.quad	4294967300
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.732490907 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_go_closure
.type GHC.Int.$fEnumInt32_go_closure, @object
GHC.Int.$fEnumInt32_go_closure:
	.quad	GHC.Int.$fEnumInt32_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.733571697 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_go_entry
.type GHC.Int.$fEnumInt32_go_entry, @object
GHC.Int.$fEnumInt32_go_entry:
_c4s5R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s5S
_c4s5T:
	movq $block_c4s5O_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo1_entry
_c4s5S:
	movl $GHC.Int.$fEnumInt32_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_go_entry, .-GHC.Int.$fEnumInt32_go_entry


==================== Asm code ====================
2018-03-16 15:59:10.734531208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_go_info
.type GHC.Int.$fEnumInt32_go_info, @object
GHC.Int.$fEnumInt32_go_info:
	.quad	GHC.Int.$fEnumInt32_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4lDl_srt+384


==================== Asm code ====================
2018-03-16 15:59:10.736011707 UTC

.section .text
.align 8
_c4s5O:
_c4s5O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4s5W
_c4s5V:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s5W:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4s5O, .-_c4s5O


==================== Asm code ====================
2018-03-16 15:59:10.736940005 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s5O_info:
	.quad	_c4s5O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.74064403 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFrom_closure
.type GHC.Int.$fEnumInt32_$cenumFrom_closure, @object
GHC.Int.$fEnumInt32_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.741472757 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFrom_entry
.type GHC.Int.$fEnumInt32_$cenumFrom_entry, @object
GHC.Int.$fEnumInt32_$cenumFrom_entry:
_c4s6d:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s6e
_c4s6f:
	movq $block_c4s6a_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4s6a
_c4s6b:
	movq (%rbx),%rax
	jmp *(%rax)
_c4s6e:
	movl $GHC.Int.$fEnumInt32_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFrom_entry, .-GHC.Int.$fEnumInt32_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:10.742196494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFrom_info
.type GHC.Int.$fEnumInt32_$cenumFrom_info, @object
GHC.Int.$fEnumInt32_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+392


==================== Asm code ====================
2018-03-16 15:59:10.742987035 UTC

.section .text
.align 8
_c4s6a:
_c4s6a:
	movq 7(%rbx),%rax
	cmpq $2147483647,%rax
	jle _c4s6m
_c4s6n:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s6m:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt32_go_entry
	.size _c4s6a, .-_c4s6a


==================== Asm code ====================
2018-03-16 15:59:10.743643905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4s6a_info:
	.quad	_c4s6a
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+392


==================== Asm code ====================
2018-03-16 15:59:10.765659818 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo1_closure
.type GHC.Int.$w$cenumFromThenTo1_closure, @object
GHC.Int.$w$cenumFromThenTo1_closure:
	.quad	GHC.Int.$w$cenumFromThenTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.766657067 UTC

.section .text
.align 8
sat_s4kXm_entry:
_c4s77:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s78
_c4s79:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kXf_entry
_c4s78:
	jmp *-16(%r13)
	.size sat_s4kXm_entry, .-sat_s4kXm_entry


==================== Asm code ====================
2018-03-16 15:59:10.767314387 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXm_info:
	.quad	sat_s4kXm_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.7682079 UTC

.section .text
.align 8
sat_s4kXk_entry:
_c4s7j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s7k
_c4s7l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s7n
_c4s7m:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s7t
_c4s7i:
	cmpq $2147483647,%rax
	jg _c4s7t
_c4s7x:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s7t:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s7n:
	movq $16,904(%r13)
_c4s7k:
	jmp *-16(%r13)
	.size sat_s4kXk_entry, .-sat_s4kXk_entry


==================== Asm code ====================
2018-03-16 15:59:10.768967375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXk_info:
	.quad	sat_s4kXk_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.769981126 UTC

.section .text
.align 8
sat_s4kXp_entry:
_c4s7I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s7J
_c4s7K:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s7M
_c4s7L:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s7S
_c4s7H:
	cmpq $2147483647,%rax
	jg _c4s7S
_c4s7W:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s7S:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s7M:
	movq $16,904(%r13)
_c4s7J:
	jmp *-16(%r13)
	.size sat_s4kXp_entry, .-sat_s4kXp_entry


==================== Asm code ====================
2018-03-16 15:59:10.770779815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXp_info:
	.quad	sat_s4kXp_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.772101087 UTC

.section .text
.align 8
go_dn_s4kXf_entry:
_c4s80:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4s84
_c4s83:
	cmpq 15(%rbx),%r14
	jge _c4s7Y
_c4s7Z:
	movq $sat_s4kXp_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4s84:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4s7Y:
	movq 7(%rbx),%rax
	movq $sat_s4kXm_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kXk_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4kXf_entry, .-go_dn_s4kXf_entry


==================== Asm code ====================
2018-03-16 15:59:10.773677549 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4kXf_info:
	.quad	go_dn_s4kXf_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.775008991 UTC

.section .text
.align 8
sat_s4kXq_entry:
_c4s87:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s88
_c4s89:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4s8b
_c4s8a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_dn_s4kXf_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4kXf_entry
_c4s8b:
	movq $24,904(%r13)
_c4s88:
	jmp *-16(%r13)
	.size sat_s4kXq_entry, .-sat_s4kXq_entry


==================== Asm code ====================
2018-03-16 15:59:10.776077248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXq_info:
	.quad	sat_s4kXq_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.777003239 UTC

.section .text
.align 8
sat_s4kXc_entry:
_c4s8l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s8m
_c4s8n:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s8p
_c4s8o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s8v
_c4s8k:
	cmpq $2147483647,%rax
	jg _c4s8v
_c4s8z:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s8v:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s8p:
	movq $16,904(%r13)
_c4s8m:
	jmp *-16(%r13)
	.size sat_s4kXc_entry, .-sat_s4kXc_entry


==================== Asm code ====================
2018-03-16 15:59:10.777789643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXc_info:
	.quad	sat_s4kXc_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.778662 UTC

.section .text
.align 8
sat_s4kXu_entry:
_c4s8N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s8O
_c4s8P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s8R
_c4s8Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s8X
_c4s8M:
	cmpq $2147483647,%rax
	jg _c4s8X
_c4s91:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s8X:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s8R:
	movq $16,904(%r13)
_c4s8O:
	jmp *-16(%r13)
	.size sat_s4kXu_entry, .-sat_s4kXu_entry


==================== Asm code ====================
2018-03-16 15:59:10.779388358 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXu_info:
	.quad	sat_s4kXu_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.780645266 UTC

.section .text
.align 8
sat_s4kXI_entry:
_c4s9u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s9v
_c4s9w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4kXB_entry
_c4s9v:
	jmp *-16(%r13)
	.size sat_s4kXI_entry, .-sat_s4kXI_entry


==================== Asm code ====================
2018-03-16 15:59:10.781403746 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXI_info:
	.quad	sat_s4kXI_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.782276688 UTC

.section .text
.align 8
sat_s4kXG_entry:
_c4s9G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4s9H
_c4s9I:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4s9K
_c4s9J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4s9Q
_c4s9F:
	cmpq $2147483647,%rax
	jg _c4s9Q
_c4s9U:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4s9Q:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4s9K:
	movq $16,904(%r13)
_c4s9H:
	jmp *-16(%r13)
	.size sat_s4kXG_entry, .-sat_s4kXG_entry


==================== Asm code ====================
2018-03-16 15:59:10.783060822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXG_info:
	.quad	sat_s4kXG_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.783934034 UTC

.section .text
.align 8
sat_s4kXL_entry:
_c4sa5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sa6
_c4sa7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sa9
_c4sa8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4saf
_c4sa4:
	cmpq $2147483647,%rax
	jg _c4saf
_c4saj:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4saf:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4sa9:
	movq $16,904(%r13)
_c4sa6:
	jmp *-16(%r13)
	.size sat_s4kXL_entry, .-sat_s4kXL_entry


==================== Asm code ====================
2018-03-16 15:59:10.784773068 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXL_info:
	.quad	sat_s4kXL_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.78569839 UTC

.section .text
.align 8
go_up_s4kXB_entry:
_c4san:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4sar
_c4saq:
	cmpq 15(%rbx),%r14
	jle _c4sal
_c4sam:
	movq $sat_s4kXL_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sar:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4sal:
	movq 7(%rbx),%rax
	movq $sat_s4kXI_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s4kXG_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4kXB_entry, .-go_up_s4kXB_entry


==================== Asm code ====================
2018-03-16 15:59:10.786434739 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4kXB_info:
	.quad	go_up_s4kXB_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.787276716 UTC

.section .text
.align 8
sat_s4kXM_entry:
_c4sau:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sav
_c4saw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4say
_c4sax:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	movq $go_up_s4kXB_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4kXB_entry
_c4say:
	movq $24,904(%r13)
_c4sav:
	jmp *-16(%r13)
	.size sat_s4kXM_entry, .-sat_s4kXM_entry


==================== Asm code ====================
2018-03-16 15:59:10.788035547 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXM_info:
	.quad	sat_s4kXM_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.788917222 UTC

.section .text
.align 8
sat_s4kXy_entry:
_c4saI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4saJ
_c4saK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4saM
_c4saL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4saS
_c4saH:
	cmpq $2147483647,%rax
	jg _c4saS
_c4saW:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4saS:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4saM:
	movq $16,904(%r13)
_c4saJ:
	jmp *-16(%r13)
	.size sat_s4kXy_entry, .-sat_s4kXy_entry


==================== Asm code ====================
2018-03-16 15:59:10.789704197 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXy_info:
	.quad	sat_s4kXy_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.790539999 UTC

.section .text
.align 8
sat_s4kXQ_entry:
_c4sba:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sbb
_c4sbc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sbe
_c4sbd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4sbk
_c4sb9:
	cmpq $2147483647,%rax
	jg _c4sbk
_c4sbo:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbk:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4sbe:
	movq $16,904(%r13)
_c4sbb:
	jmp *-16(%r13)
	.size sat_s4kXQ_entry, .-sat_s4kXQ_entry


==================== Asm code ====================
2018-03-16 15:59:10.791399394 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kXQ_info:
	.quad	sat_s4kXQ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.792511824 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo1_entry
.type GHC.Int.$w$cenumFromThenTo1_entry, @object
GHC.Int.$w$cenumFromThenTo1_entry:
_c4sbs:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4sbw
_c4sbv:
	cmpq %r14,%rsi
	jl _c4sbq
_c4sbr:
	cmpq %rsi,%rdi
	jge _c4sbH
_c4sbM:
	cmpq %r14,%rdi
	jl _c4sbL
_c4sbK:
	movq $sat_s4kXQ_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbL:
	addq $-88,%r12
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbH:
	movq $sat_s4kXM_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kXy_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbq:
	cmpq %rsi,%rdi
	jle _c4sbz
_c4sbE:
	cmpq %r14,%rdi
	jg _c4sbL
_c4sbC:
	movq $sat_s4kXu_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbz:
	movq $sat_s4kXq_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s4kXc_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4sbw:
	movq $88,904(%r13)
	movl $GHC.Int.$w$cenumFromThenTo1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo1_entry, .-GHC.Int.$w$cenumFromThenTo1_entry


==================== Asm code ====================
2018-03-16 15:59:10.793642756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo1_info
.type GHC.Int.$w$cenumFromThenTo1_info, @object
GHC.Int.$w$cenumFromThenTo1_info:
	.quad	GHC.Int.$w$cenumFromThenTo1_entry
	.quad	0
	.quad	1103806595086
	.quad	12884901904
	.quad	S4lDl_srt+344


==================== Asm code ====================
2018-03-16 15:59:10.798127794 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.798979194 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_entry:
_c4sdr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sdA
_c4sdB:
	movq $block_c4sdo_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4sdo
_c4sdp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sdA:
	movl $GHC.Int.$fEnumInt32_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt32_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:10.800147067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4lDl_srt+408


==================== Asm code ====================
2018-03-16 15:59:10.800806508 UTC

.section .text
.align 8
_c4sdo:
_c4sdo:
	movq $block_c4sdu_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sdu
_c4sdv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sdo, .-_c4sdo


==================== Asm code ====================
2018-03-16 15:59:10.801448523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sdo_info:
	.quad	_c4sdo
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+408


==================== Asm code ====================
2018-03-16 15:59:10.802136837 UTC

.section .text
.align 8
_c4sdu:
_c4sdu:
	movq $block_c4sdz_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4sdz
_c4sdE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sdu, .-_c4sdu


==================== Asm code ====================
2018-03-16 15:59:10.802737183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sdu_info:
	.quad	_c4sdu
	.quad	66
	.quad	4294967326
	.quad	S4lDl_srt+408


==================== Asm code ====================
2018-03-16 15:59:10.803414976 UTC

.section .text
.align 8
_c4sdz:
_c4sdz:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo1_entry
	.size _c4sdz, .-_c4sdz


==================== Asm code ====================
2018-03-16 15:59:10.803991462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sdz_info:
	.quad	_c4sdz
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+408


==================== Asm code ====================
2018-03-16 15:59:10.806668824 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_closure
.type GHC.Int.$fEnumInt32_closure, @object
GHC.Int.$fEnumInt32_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt32_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt32_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.807350476 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThen_closure
.type GHC.Int.$fEnumInt32_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt32_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.808072208 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromThen_entry
.type GHC.Int.$fEnumInt32_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt32_$cenumFromThen_entry:
_c4se7:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Int.$fBoundedInt32_closure+1,%esi
	movl $GHC.Int.$fEnumInt32_closure+1,%r14d
	jmp GHC.Enum.boundedEnumFromThen_entry
	.size GHC.Int.$fEnumInt32_$cenumFromThen_entry, .-GHC.Int.$fEnumInt32_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:10.808668702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThen_info
.type GHC.Int.$fEnumInt32_$cenumFromThen_info, @object
GHC.Int.$fEnumInt32_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4lDl_srt+424


==================== Asm code ====================
2018-03-16 15:59:10.810484607 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt6_bytes
.type GHC.Int.$tcInt6_bytes, @object
GHC.Int.$tcInt6_bytes:
	.asciz "Int64"


==================== Asm code ====================
2018-03-16 15:59:10.813627729 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt5_closure
.type GHC.Int.$fEnumInt5_closure, @object
GHC.Int.$fEnumInt5_closure:
	.quad	GHC.Int.$fEnumInt5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.814576023 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt5_entry
.type GHC.Int.$fEnumInt5_entry, @object
GHC.Int.$fEnumInt5_entry:
_c4seo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sep
_c4seq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4sel
_c4sek:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4sem_info,-24(%rbp)
	movl $GHC.Int.$tcInt6_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4sep:
	jmp *-16(%r13)
_c4sel:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt5_entry, .-GHC.Int.$fEnumInt5_entry


==================== Asm code ====================
2018-03-16 15:59:10.815321498 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt5_info
.type GHC.Int.$fEnumInt5_info, @object
GHC.Int.$fEnumInt5_info:
	.quad	GHC.Int.$fEnumInt5_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+280


==================== Asm code ====================
2018-03-16 15:59:10.815993273 UTC

.section .text
.align 8
_c4sem:
_c4sem:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.predError_entry
	.size _c4sem, .-_c4sem


==================== Asm code ====================
2018-03-16 15:59:10.816627629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sem_info:
	.quad	_c4sem
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+280


==================== Asm code ====================
2018-03-16 15:59:10.820856309 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt6_closure
.type GHC.Int.$fEnumInt6_closure, @object
GHC.Int.$fEnumInt6_closure:
	.quad	GHC.Int.$fEnumInt6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.821824605 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt6_entry
.type GHC.Int.$fEnumInt6_entry, @object
GHC.Int.$fEnumInt6_entry:
_c4seM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4seN
_c4seO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4seJ
_c4seI:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c4seK_info,-24(%rbp)
	movl $GHC.Int.$tcInt6_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c4seN:
	jmp *-16(%r13)
_c4seJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt6_entry, .-GHC.Int.$fEnumInt6_entry


==================== Asm code ====================
2018-03-16 15:59:10.822580367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt6_info
.type GHC.Int.$fEnumInt6_info, @object
GHC.Int.$fEnumInt6_info:
	.quad	GHC.Int.$fEnumInt6_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+288


==================== Asm code ====================
2018-03-16 15:59:10.823281362 UTC

.section .text
.align 8
_c4seK:
_c4seK:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Enum.succError_entry
	.size _c4seK, .-_c4seK


==================== Asm code ====================
2018-03-16 15:59:10.823862542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4seK_info:
	.quad	_c4seK
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+288


==================== Asm code ====================
2018-03-16 15:59:10.827387732 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt64_closure
.type GHC.Int.neInt64_closure, @object
GHC.Int.neInt64_closure:
	.quad	GHC.Int.neInt64_info


==================== Asm code ====================
2018-03-16 15:59:10.828214914 UTC

.section .text
.align 8
.globl GHC.Int.neInt64_entry
.type GHC.Int.neInt64_entry, @object
GHC.Int.neInt64_entry:
_c4sf9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sfd
_c4sfe:
	movq $block_c4sf6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sf6
_c4sf7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sfd:
	movl $GHC.Int.neInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.neInt64_entry, .-GHC.Int.neInt64_entry


==================== Asm code ====================
2018-03-16 15:59:10.828894538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt64_info
.type GHC.Int.neInt64_info, @object
GHC.Int.neInt64_info:
	.quad	GHC.Int.neInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.829673076 UTC

.section .text
.align 8
_c4sf6:
_c4sf6:
	movq $block_c4sfc_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sfc
_c4sfg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sf6, .-_c4sf6


==================== Asm code ====================
2018-03-16 15:59:10.830295587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sf6_info:
	.quad	_c4sf6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.830967267 UTC

.section .text
.align 8
_c4sfc:
_c4sfc:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4sfc, .-_c4sfc


==================== Asm code ====================
2018-03-16 15:59:10.831594211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sfc_info:
	.quad	_c4sfc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.834029952 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_$cminBound_closure
.type GHC.Int.$fBoundedInt64_$cminBound_closure, @object
GHC.Int.$fBoundedInt64_$cminBound_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:59:10.837559331 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cpred_closure
.type GHC.Int.$fEnumInt64_$cpred_closure, @object
GHC.Int.$fEnumInt64_$cpred_closure:
	.quad	GHC.Int.$fEnumInt64_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.838878766 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cpred_entry
.type GHC.Int.$fEnumInt64_$cpred_entry, @object
GHC.Int.$fEnumInt64_$cpred_entry:
_c4sfN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sfO
_c4sfP:
	movq $block_c4sfK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sfK
_c4sfL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sfO:
	movl $GHC.Int.$fEnumInt64_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cpred_entry, .-GHC.Int.$fEnumInt64_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:10.839556773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cpred_info
.type GHC.Int.$fEnumInt64_$cpred_info, @object
GHC.Int.$fEnumInt64_$cpred_info:
	.quad	GHC.Int.$fEnumInt64_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+432


==================== Asm code ====================
2018-03-16 15:59:10.840381803 UTC

.section .text
.align 8
_c4sfK:
_c4sfK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sfU
_c4sfT:
	movq 7(%rbx),%rax
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	jne _c4sg2
_c4sg3:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt5_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4sg2:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sfU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sfK, .-_c4sfK


==================== Asm code ====================
2018-03-16 15:59:10.84108263 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sfK_info:
	.quad	_c4sfK
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+440


==================== Asm code ====================
2018-03-16 15:59:10.842895676 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_$cmaxBound_closure
.type GHC.Int.$fBoundedInt64_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt64_$cmaxBound_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:59:10.844682501 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_closure
.type GHC.Int.$fBoundedInt64_closure, @object
GHC.Int.$fBoundedInt64_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt64_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt64_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:10.848148663 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$csucc_closure
.type GHC.Int.$fEnumInt64_$csucc_closure, @object
GHC.Int.$fEnumInt64_$csucc_closure:
	.quad	GHC.Int.$fEnumInt64_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.849020327 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$csucc_entry
.type GHC.Int.$fEnumInt64_$csucc_entry, @object
GHC.Int.$fEnumInt64_$csucc_entry:
_c4sgr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sgs
_c4sgt:
	movq $block_c4sgo_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sgo
_c4sgp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sgs:
	movl $GHC.Int.$fEnumInt64_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$csucc_entry, .-GHC.Int.$fEnumInt64_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:10.850157253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$csucc_info
.type GHC.Int.$fEnumInt64_$csucc_info, @object
GHC.Int.$fEnumInt64_$csucc_info:
	.quad	GHC.Int.$fEnumInt64_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+448


==================== Asm code ====================
2018-03-16 15:59:10.850959445 UTC

.section .text
.align 8
_c4sgo:
_c4sgo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sgy
_c4sgx:
	movq 7(%rbx),%rax
	movq $9223372036854775807,%rbx
	cmpq %rbx,%rax
	jne _c4sgG
_c4sgH:
	addq $-16,%r12
	movl $GHC.Int.$fEnumInt6_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4sgG:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sgy:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sgo, .-_c4sgo


==================== Asm code ====================
2018-03-16 15:59:10.851634649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sgo_info:
	.quad	_c4sgo
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+456


==================== Asm code ====================
2018-03-16 15:59:10.856933467 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo2_closure
.type GHC.Int.$wgo2_closure, @object
GHC.Int.$wgo2_closure:
	.quad	GHC.Int.$wgo2_info


==================== Asm code ====================
2018-03-16 15:59:10.857923567 UTC

.section .text
.align 8
sat_s4kYq_entry:
_c4sh8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sh9
_c4shk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $9223372036854775807,%rbx
	cmpq %rbx,%rax
	jne _c4sh6
_c4sh7:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sh9:
	jmp *-16(%r13)
_c4sh6:
	movq $block_c4she_info,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo2_entry
	.size sat_s4kYq_entry, .-sat_s4kYq_entry


==================== Asm code ====================
2018-03-16 15:59:10.859136832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4kYq_info:
	.quad	sat_s4kYq_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:59:10.859827304 UTC

.section .text
.align 8
_c4she:
_c4she:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4shj
_c4shi:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4shj:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4she, .-_c4she


==================== Asm code ====================
2018-03-16 15:59:10.860429852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4she_info:
	.quad	_c4she
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.861139976 UTC

.section .text
.align 8
.globl GHC.Int.$wgo2_entry
.type GHC.Int.$wgo2_entry, @object
GHC.Int.$wgo2_entry:
_c4shm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c4shq
_c4shp:
	movq $sat_s4kYq_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -32(%r12),%r14
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4shq:
	movq $40,904(%r13)
	movl $GHC.Int.$wgo2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$wgo2_entry, .-GHC.Int.$wgo2_entry


==================== Asm code ====================
2018-03-16 15:59:10.8618034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo2_info
.type GHC.Int.$wgo2_info, @object
GHC.Int.$wgo2_info:
	.quad	GHC.Int.$wgo2_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:10.864904956 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_go_closure
.type GHC.Int.$fEnumInt64_go_closure, @object
GHC.Int.$fEnumInt64_go_closure:
	.quad	GHC.Int.$fEnumInt64_go_info


==================== Asm code ====================
2018-03-16 15:59:10.865686553 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_go_entry
.type GHC.Int.$fEnumInt64_go_entry, @object
GHC.Int.$fEnumInt64_go_entry:
_c4shN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4shO
_c4shP:
	movq $block_c4shK_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo2_entry
_c4shO:
	movl $GHC.Int.$fEnumInt64_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_go_entry, .-GHC.Int.$fEnumInt64_go_entry


==================== Asm code ====================
2018-03-16 15:59:10.866294131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_go_info
.type GHC.Int.$fEnumInt64_go_info, @object
GHC.Int.$fEnumInt64_go_info:
	.quad	GHC.Int.$fEnumInt64_go_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:10.867023049 UTC

.section .text
.align 8
_c4shK:
_c4shK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4shS
_c4shR:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4shS:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4shK, .-_c4shK


==================== Asm code ====================
2018-03-16 15:59:10.867677033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4shK_info:
	.quad	_c4shK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.871013087 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFrom_closure
.type GHC.Int.$fEnumInt64_$cenumFrom_closure, @object
GHC.Int.$fEnumInt64_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_info


==================== Asm code ====================
2018-03-16 15:59:10.871877219 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFrom_entry
.type GHC.Int.$fEnumInt64_$cenumFrom_entry, @object
GHC.Int.$fEnumInt64_$cenumFrom_entry:
_c4si9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sia
_c4sib:
	movq $block_c4si6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4si6
_c4si7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sia:
	movl $GHC.Int.$fEnumInt64_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFrom_entry, .-GHC.Int.$fEnumInt64_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:10.872551513 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFrom_info
.type GHC.Int.$fEnumInt64_$cenumFrom_info, @object
GHC.Int.$fEnumInt64_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.87316685 UTC

.section .text
.align 8
_c4si6:
_c4si6:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt64_go_entry
	.size _c4si6, .-_c4si6


==================== Asm code ====================
2018-03-16 15:59:10.873756104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4si6_info:
	.quad	_c4si6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.876475803 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_closure
.type GHC.Int.$fEnumInt64_closure, @object
GHC.Int.$fEnumInt64_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt64_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt64_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.877142051 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThen_closure
.type GHC.Int.$fEnumInt64_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt64_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.878314875 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromThen_entry
.type GHC.Int.$fEnumInt64_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt64_$cenumFromThen_entry:
_c4sit:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Int.$fBoundedInt64_closure+1,%esi
	movl $GHC.Int.$fEnumInt64_closure+1,%r14d
	jmp GHC.Enum.boundedEnumFromThen_entry
	.size GHC.Int.$fEnumInt64_$cenumFromThen_entry, .-GHC.Int.$fEnumInt64_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:10.878884483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThen_info
.type GHC.Int.$fEnumInt64_$cenumFromThen_info, @object
GHC.Int.$fEnumInt64_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4lDl_srt+464


==================== Asm code ====================
2018-03-16 15:59:10.882011361 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cfromInteger_closure
.type GHC.Int.$fNumInt8_$cfromInteger_closure, @object
GHC.Int.$fNumInt8_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt8_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:10.882820948 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cfromInteger_entry
.type GHC.Int.$fNumInt8_$cfromInteger_entry, @object
GHC.Int.$fNumInt8_$cfromInteger_entry:
_c4siH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4siO
_c4siP:
	movq $block_c4siF_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_c4siO:
	movl $GHC.Int.$fNumInt8_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cfromInteger_entry, .-GHC.Int.$fNumInt8_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:10.883606233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cfromInteger_info
.type GHC.Int.$fNumInt8_$cfromInteger_info, @object
GHC.Int.$fNumInt8_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt8_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.884395595 UTC

.section .text
.align 8
_c4siF:
_c4siF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4siS
_c4siR:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4siS:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4siF, .-_c4siF


==================== Asm code ====================
2018-03-16 15:59:10.884991543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4siF_info:
	.quad	_c4siF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.888166937 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cnegate_closure
.type GHC.Int.$fNumInt8_$cnegate_closure, @object
GHC.Int.$fNumInt8_$cnegate_closure:
	.quad	GHC.Int.$fNumInt8_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:10.888929546 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cnegate_entry
.type GHC.Int.$fNumInt8_$cnegate_entry, @object
GHC.Int.$fNumInt8_$cnegate_entry:
_c4sjb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sjl
_c4sjm:
	movq $block_c4sj8_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sj8
_c4sj9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sjl:
	movl $GHC.Int.$fNumInt8_$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cnegate_entry, .-GHC.Int.$fNumInt8_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:10.889632324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cnegate_info
.type GHC.Int.$fNumInt8_$cnegate_info, @object
GHC.Int.$fNumInt8_$cnegate_info:
	.quad	GHC.Int.$fNumInt8_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.890373442 UTC

.section .text
.align 8
_c4sj8:
_c4sj8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sjp
_c4sjo:
	movq 7(%rbx),%rax
	negq %rax
	movsbq %al,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sjp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sj8, .-_c4sj8


==================== Asm code ====================
2018-03-16 15:59:10.891016901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sj8_info:
	.quad	_c4sj8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.895677582 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c*_closure
.type GHC.Int.$fNumInt8_$c*_closure, @object
GHC.Int.$fNumInt8_$c*_closure:
	.quad	GHC.Int.$fNumInt8_$c*_info


==================== Asm code ====================
2018-03-16 15:59:10.89698993 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c*_entry
.type GHC.Int.$fNumInt8_$c*_entry, @object
GHC.Int.$fNumInt8_$c*_entry:
_c4sjJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sjY
_c4sjZ:
	movq $block_c4sjG_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sjG
_c4sjH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sjY:
	movl $GHC.Int.$fNumInt8_$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c*_entry, .-GHC.Int.$fNumInt8_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:10.898110246 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c*_info
.type GHC.Int.$fNumInt8_$c*_info, @object
GHC.Int.$fNumInt8_$c*_info:
	.quad	GHC.Int.$fNumInt8_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.89981492 UTC

.section .text
.align 8
_c4sjG:
_c4sjG:
	movq $block_c4sjM_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sjM
_c4sjN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sjG, .-_c4sjG


==================== Asm code ====================
2018-03-16 15:59:10.9006815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sjG_info:
	.quad	_c4sjG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.901742961 UTC

.section .text
.align 8
_c4sjM:
_c4sjM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sk3
_c4sk2:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movsbq %bl,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sk3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sjM, .-_c4sjM


==================== Asm code ====================
2018-03-16 15:59:10.902749554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sjM_info:
	.quad	_c4sjM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.908443438 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c-_closure
.type GHC.Int.$fNumInt8_$c-_closure, @object
GHC.Int.$fNumInt8_$c-_closure:
	.quad	GHC.Int.$fNumInt8_$c-_info


==================== Asm code ====================
2018-03-16 15:59:10.909577636 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c-_entry
.type GHC.Int.$fNumInt8_$c-_entry, @object
GHC.Int.$fNumInt8_$c-_entry:
_c4sku:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4skJ
_c4skK:
	movq $block_c4skr_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4skr
_c4sks:
	movq (%rbx),%rax
	jmp *(%rax)
_c4skJ:
	movl $GHC.Int.$fNumInt8_$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c-_entry, .-GHC.Int.$fNumInt8_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:10.91056516 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c-_info
.type GHC.Int.$fNumInt8_$c-_info, @object
GHC.Int.$fNumInt8_$c-_info:
	.quad	GHC.Int.$fNumInt8_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.911552827 UTC

.section .text
.align 8
_c4skr:
_c4skr:
	movq $block_c4skx_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4skx
_c4sky:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4skr, .-_c4skr


==================== Asm code ====================
2018-03-16 15:59:10.912461613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4skr_info:
	.quad	_c4skr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.913635696 UTC

.section .text
.align 8
_c4skx:
_c4skx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4skO
_c4skN:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movsbq %bl,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4skO:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4skx, .-_c4skx


==================== Asm code ====================
2018-03-16 15:59:10.914615232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4skx_info:
	.quad	_c4skx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.92049473 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c+_closure
.type GHC.Int.$fNumInt8_$c+_closure, @object
GHC.Int.$fNumInt8_$c+_closure:
	.quad	GHC.Int.$fNumInt8_$c+_info


==================== Asm code ====================
2018-03-16 15:59:10.921734959 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c+_entry
.type GHC.Int.$fNumInt8_$c+_entry, @object
GHC.Int.$fNumInt8_$c+_entry:
_c4slf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4slu
_c4slv:
	movq $block_c4slc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4slc
_c4sld:
	movq (%rbx),%rax
	jmp *(%rax)
_c4slu:
	movl $GHC.Int.$fNumInt8_$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c+_entry, .-GHC.Int.$fNumInt8_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:10.922759573 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c+_info
.type GHC.Int.$fNumInt8_$c+_info, @object
GHC.Int.$fNumInt8_$c+_info:
	.quad	GHC.Int.$fNumInt8_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.923824497 UTC

.section .text
.align 8
_c4slc:
_c4slc:
	movq $block_c4sli_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sli
_c4slj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4slc, .-_c4slc


==================== Asm code ====================
2018-03-16 15:59:10.924769463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4slc_info:
	.quad	_c4slc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.926011403 UTC

.section .text
.align 8
_c4sli:
_c4sli:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4slz
_c4sly:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movsbq %bl,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4slz:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sli, .-_c4sli


==================== Asm code ====================
2018-03-16 15:59:10.927068405 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sli_info:
	.quad	_c4sli
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.930999908 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$ctoInteger_closure
.type GHC.Int.$fIntegralInt8_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt8_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:10.931738947 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$ctoInteger_entry
.type GHC.Int.$fIntegralInt8_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt8_$ctoInteger_entry:
_c4sm0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sm1
_c4sm2:
	movq $block_c4slX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4slX
_c4slY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sm1:
	movl $GHC.Int.$fIntegralInt8_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$ctoInteger_entry, .-GHC.Int.$fIntegralInt8_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:10.932377815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$ctoInteger_info
.type GHC.Int.$fIntegralInt8_$ctoInteger_info, @object
GHC.Int.$fIntegralInt8_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.933062275 UTC

.section .text
.align 8
_c4slX:
_c4slX:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4slX, .-_c4slX


==================== Asm code ====================
2018-03-16 15:59:10.933627703 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4slX_info:
	.quad	_c4slX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.936634373 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cpopCount_closure
.type GHC.Int.$fBitsInt8_$cpopCount_closure, @object
GHC.Int.$fBitsInt8_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt8_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:10.937510888 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cpopCount_entry
.type GHC.Int.$fBitsInt8_$cpopCount_entry, @object
GHC.Int.$fBitsInt8_$cpopCount_entry:
_c4smn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4smB
_c4smC:
	movq $block_c4smk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4smk
_c4sml:
	movq (%rbx),%rax
	jmp *(%rax)
_c4smB:
	movl $GHC.Int.$fBitsInt8_$cpopCount_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cpopCount_entry, .-GHC.Int.$fBitsInt8_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:10.93815651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cpopCount_info
.type GHC.Int.$fBitsInt8_$cpopCount_info, @object
GHC.Int.$fBitsInt8_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt8_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.938950486 UTC

.section .text
.align 8
_c4smk:
_c4smk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4smF
_c4smE:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt8
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4smF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4smk, .-_c4smk


==================== Asm code ====================
2018-03-16 15:59:10.939645465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4smk_info:
	.quad	_c4smk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.943337607 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:10.944143377 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_entry:
_c4smY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sna
_c4snb:
	movq $block_c4smV_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4smV
_c4smW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sna:
	movl $GHC.Int.$fBitsInt8_$cunsafeShiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt8_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:10.944818044 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.945568576 UTC

.section .text
.align 8
_c4smV:
_c4smV:
	movq $block_c4sn1_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sn1
_c4sn2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4smV, .-_c4smV


==================== Asm code ====================
2018-03-16 15:59:10.94621058 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4smV_info:
	.quad	_c4smV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.947368642 UTC

.section .text
.align 8
_c4sn1:
_c4sn1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4snf
_c4sne:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4snf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sn1, .-_c4sn1


==================== Asm code ====================
2018-03-16 15:59:10.947947965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sn1_info:
	.quad	_c4sn1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.949644225 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt13_closure
.type GHC.Int.$fBitsInt13_closure, @object
GHC.Int.$fBitsInt13_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:10.951205539 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt9_closure
.type GHC.Int.$fNumInt9_closure, @object
GHC.Int.$fNumInt9_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:10.955633429 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftR_closure
.type GHC.Int.$fBitsInt8_$cshiftR_closure, @object
GHC.Int.$fBitsInt8_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt8_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:10.956478405 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshiftR_entry
.type GHC.Int.$fBitsInt8_$cshiftR_entry, @object
GHC.Int.$fBitsInt8_$cshiftR_entry:
_c4snG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4snK
_c4snL:
	movq $block_c4snD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4snD
_c4snE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4snK:
	movl $GHC.Int.$fBitsInt8_$cshiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshiftR_entry, .-GHC.Int.$fBitsInt8_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:10.957083924 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftR_info
.type GHC.Int.$fBitsInt8_$cshiftR_info, @object
GHC.Int.$fBitsInt8_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt8_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.95782899 UTC

.section .text
.align 8
_c4snD:
_c4snD:
	movq $block_c4snJ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4snJ
_c4snN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4snD, .-_c4snD


==================== Asm code ====================
2018-03-16 15:59:10.958449284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4snD_info:
	.quad	_c4snD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.959290629 UTC

.section .text
.align 8
_c4snJ:
_c4snJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4snT
_c4snS:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4so2
_c4so9:
	testq %rax,%rax
	jge _c4so7
_c4so8:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt9_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4so7:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt13_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4so2:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4snT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4snJ, .-_c4snJ


==================== Asm code ====================
2018-03-16 15:59:10.960014237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4snJ_info:
	.quad	_c4snJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.963789122 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:10.964612311 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_entry:
_c4soA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4soP
_c4soQ:
	movq $block_c4sox_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sox
_c4soy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4soP:
	movl $GHC.Int.$fBitsInt8_$cunsafeShiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt8_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:10.965997423 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.967194978 UTC

.section .text
.align 8
_c4sox:
_c4sox:
	movq $block_c4soD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4soD
_c4soE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sox, .-_c4sox


==================== Asm code ====================
2018-03-16 15:59:10.967800405 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sox_info:
	.quad	_c4sox
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.968484592 UTC

.section .text
.align 8
_c4soD:
_c4soD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4soU
_c4soT:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movsbq %al,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4soU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4soD, .-_c4soD


==================== Asm code ====================
2018-03-16 15:59:10.969132397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4soD_info:
	.quad	_c4soD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.973161587 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftL_closure
.type GHC.Int.$fBitsInt8_$cshiftL_closure, @object
GHC.Int.$fBitsInt8_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt8_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:10.97400909 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshiftL_entry
.type GHC.Int.$fBitsInt8_$cshiftL_entry, @object
GHC.Int.$fBitsInt8_$cshiftL_entry:
_c4spk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4spo
_c4spp:
	movq $block_c4sph_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sph
_c4spi:
	movq (%rbx),%rax
	jmp *(%rax)
_c4spo:
	movl $GHC.Int.$fBitsInt8_$cshiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshiftL_entry, .-GHC.Int.$fBitsInt8_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:10.974639281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftL_info
.type GHC.Int.$fBitsInt8_$cshiftL_info, @object
GHC.Int.$fBitsInt8_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt8_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.975325013 UTC

.section .text
.align 8
_c4sph:
_c4sph:
	movq $block_c4spn_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4spn
_c4spr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sph, .-_c4sph


==================== Asm code ====================
2018-03-16 15:59:10.975891451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sph_info:
	.quad	_c4sph
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.976716133 UTC

.section .text
.align 8
_c4spn:
_c4spn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4spx
_c4spw:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4spJ
_c4spK:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt13_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4spJ:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4spx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4spn, .-_c4spn


==================== Asm code ====================
2018-03-16 15:59:10.977718887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4spn_info:
	.quad	_c4spn
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.979918272 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cisSigned_closure
.type GHC.Int.$fBitsInt8_$cisSigned_closure, @object
GHC.Int.$fBitsInt8_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt8_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:10.980549378 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cisSigned_entry
.type GHC.Int.$fBitsInt8_$cisSigned_entry, @object
GHC.Int.$fBitsInt8_$cisSigned_entry:
_c4sq9:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cisSigned_entry, .-GHC.Int.$fBitsInt8_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:10.981160913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cisSigned_info
.type GHC.Int.$fBitsInt8_$cisSigned_info, @object
GHC.Int.$fBitsInt8_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt8_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:10.986460693 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotate_closure
.type GHC.Int.$fBitsInt8_$crotate_closure, @object
GHC.Int.$fBitsInt8_$crotate_closure:
	.quad	GHC.Int.$fBitsInt8_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:10.987236771 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotate_entry
.type GHC.Int.$fBitsInt8_$crotate_entry, @object
GHC.Int.$fBitsInt8_$crotate_entry:
_c4sqo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sqs
_c4sqt:
	movq $block_c4sql_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sql
_c4sqm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sqs:
	movl $GHC.Int.$fBitsInt8_$crotate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$crotate_entry, .-GHC.Int.$fBitsInt8_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:10.987873651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotate_info
.type GHC.Int.$fBitsInt8_$crotate_info, @object
GHC.Int.$fBitsInt8_$crotate_info:
	.quad	GHC.Int.$fBitsInt8_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.98859334 UTC

.section .text
.align 8
_c4sql:
_c4sql:
	movq $block_c4sqr_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sqr
_c4sqv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sql, .-_c4sql


==================== Asm code ====================
2018-03-16 15:59:10.989170773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sql_info:
	.quad	_c4sql
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.989936278 UTC

.section .text
.align 8
_c4sqr:
_c4sqr:
	movq 7(%rbx),%rax
	andl $7,%eax
	testq %rax,%rax
	jne _u4srm
_c4sri:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4srm:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4sqK
	.size _c4sqr, .-_c4sqr


==================== Asm code ====================
2018-03-16 15:59:10.990583849 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sqr_info:
	.quad	_c4sqr
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.991372547 UTC

.section .text
.align 8
_c4sqK:
_c4sqK:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4srf
_c4sre:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movzbl %bl,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $8,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4srf:
	movq $16,904(%r13)
	movq $block_c4sqJ_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4sqK, .-_c4sqK


==================== Asm code ====================
2018-03-16 15:59:10.992085825 UTC

.section .text
.align 8
_c4sqJ:
_c4sqJ:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4sqK
	.size _c4sqJ, .-_c4sqJ


==================== Asm code ====================
2018-03-16 15:59:10.992598621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sqJ_info:
	.quad	_c4sqJ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:10.997564024 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshift_closure
.type GHC.Int.$fBitsInt8_$cshift_closure, @object
GHC.Int.$fBitsInt8_$cshift_closure:
	.quad	GHC.Int.$fBitsInt8_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:10.99835148 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshift_entry
.type GHC.Int.$fBitsInt8_$cshift_entry, @object
GHC.Int.$fBitsInt8_$cshift_entry:
_c4ss2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ss6
_c4ss7:
	movq $block_c4srZ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4srZ
_c4ss0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ss6:
	movl $GHC.Int.$fBitsInt8_$cshift_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshift_entry, .-GHC.Int.$fBitsInt8_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:10.998964505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshift_info
.type GHC.Int.$fBitsInt8_$cshift_info, @object
GHC.Int.$fBitsInt8_$cshift_info:
	.quad	GHC.Int.$fBitsInt8_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:10.999665937 UTC

.section .text
.align 8
_c4srZ:
_c4srZ:
	movq $block_c4ss5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ss5
_c4ss9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4srZ, .-_c4srZ


==================== Asm code ====================
2018-03-16 15:59:11.000269538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4srZ_info:
	.quad	_c4srZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.001169739 UTC

.section .text
.align 8
_c4ss5:
_c4ss5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ssf
_c4sse:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4ssD
_c4ssS:
	cmpq $64,%rbx
	jge _c4ssR
_c4ssQ:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ssR:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt13_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ssD:
	negq %rbx
	cmpq $64,%rbx
	jl _c4ssu
_c4ssB:
	testq %rax,%rax
	jge _c4ssR
_c4ssA:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt9_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ssu:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ssf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ss5, .-_c4ss5


==================== Asm code ====================
2018-03-16 15:59:11.002014655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ss5_info:
	.quad	_c4ss5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.005709175 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplement_closure
.type GHC.Int.$fBitsInt8_$ccomplement_closure, @object
GHC.Int.$fBitsInt8_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt8_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:11.006470957 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ccomplement_entry
.type GHC.Int.$fBitsInt8_$ccomplement_entry, @object
GHC.Int.$fBitsInt8_$ccomplement_entry:
_c4stn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4stA
_c4stB:
	movq $block_c4stk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4stk
_c4stl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4stA:
	movl $GHC.Int.$fBitsInt8_$ccomplement_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ccomplement_entry, .-GHC.Int.$fBitsInt8_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:11.007106787 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplement_info
.type GHC.Int.$fBitsInt8_$ccomplement_info, @object
GHC.Int.$fBitsInt8_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt8_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.007815071 UTC

.section .text
.align 8
_c4stk:
_c4stk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4stE
_c4stD:
	movq 7(%rbx),%rax
	notq %rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4stE:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4stk, .-_c4stk


==================== Asm code ====================
2018-03-16 15:59:11.008413914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4stk_info:
	.quad	_c4stk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.012008396 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cxor_closure
.type GHC.Int.$fBitsInt8_$cxor_closure, @object
GHC.Int.$fBitsInt8_$cxor_closure:
	.quad	GHC.Int.$fBitsInt8_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:11.012829718 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cxor_entry
.type GHC.Int.$fBitsInt8_$cxor_entry, @object
GHC.Int.$fBitsInt8_$cxor_entry:
_c4stX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sui
_c4suj:
	movq $block_c4stU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4stU
_c4stV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sui:
	movl $GHC.Int.$fBitsInt8_$cxor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cxor_entry, .-GHC.Int.$fBitsInt8_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:11.013558441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cxor_info
.type GHC.Int.$fBitsInt8_$cxor_info, @object
GHC.Int.$fBitsInt8_$cxor_info:
	.quad	GHC.Int.$fBitsInt8_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.014272496 UTC

.section .text
.align 8
_c4stU:
_c4stU:
	movq $block_c4su0_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4su0
_c4su1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4stU, .-_c4stU


==================== Asm code ====================
2018-03-16 15:59:11.014831113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4stU_info:
	.quad	_c4stU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.015556982 UTC

.section .text
.align 8
_c4su0:
_c4su0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sun
_c4sum:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sun:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4su0, .-_c4su0


==================== Asm code ====================
2018-03-16 15:59:11.01620604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4su0_info:
	.quad	_c4su0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.01992351 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.|._closure
.type GHC.Int.$fBitsInt8_$c.|._closure, @object
GHC.Int.$fBitsInt8_$c.|._closure:
	.quad	GHC.Int.$fBitsInt8_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:11.020715796 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$c.|._entry
.type GHC.Int.$fBitsInt8_$c.|._entry, @object
GHC.Int.$fBitsInt8_$c.|._entry:
_c4suN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sv8
_c4sv9:
	movq $block_c4suK_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4suK
_c4suL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sv8:
	movl $GHC.Int.$fBitsInt8_$c.|._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$c.|._entry, .-GHC.Int.$fBitsInt8_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:11.02141448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.|._info
.type GHC.Int.$fBitsInt8_$c.|._info, @object
GHC.Int.$fBitsInt8_$c.|._info:
	.quad	GHC.Int.$fBitsInt8_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.022087121 UTC

.section .text
.align 8
_c4suK:
_c4suK:
	movq $block_c4suQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4suQ
_c4suR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4suK, .-_c4suK


==================== Asm code ====================
2018-03-16 15:59:11.022773025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4suK_info:
	.quad	_c4suK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.023545091 UTC

.section .text
.align 8
_c4suQ:
_c4suQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4svd
_c4svc:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4svd:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4suQ, .-_c4suQ


==================== Asm code ====================
2018-03-16 15:59:11.024605697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4suQ_info:
	.quad	_c4suQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.028761794 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.&._closure
.type GHC.Int.$fBitsInt8_$c.&._closure, @object
GHC.Int.$fBitsInt8_$c.&._closure:
	.quad	GHC.Int.$fBitsInt8_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:11.029646511 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$c.&._entry
.type GHC.Int.$fBitsInt8_$c.&._entry, @object
GHC.Int.$fBitsInt8_$c.&._entry:
_c4svD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4svY
_c4svZ:
	movq $block_c4svA_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4svA
_c4svB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4svY:
	movl $GHC.Int.$fBitsInt8_$c.&._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$c.&._entry, .-GHC.Int.$fBitsInt8_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:11.030315213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.&._info
.type GHC.Int.$fBitsInt8_$c.&._info, @object
GHC.Int.$fBitsInt8_$c.&._info:
	.quad	GHC.Int.$fBitsInt8_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.030980106 UTC

.section .text
.align 8
_c4svA:
_c4svA:
	movq $block_c4svG_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4svG
_c4svH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4svA, .-_c4svA


==================== Asm code ====================
2018-03-16 15:59:11.031588791 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4svA_info:
	.quad	_c4svA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.032330213 UTC

.section .text
.align 8
_c4svG:
_c4svG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sw3
_c4sw2:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sw3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4svG, .-_c4svG


==================== Asm code ====================
2018-03-16 15:59:11.032997236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4svG_info:
	.quad	_c4svG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.036131491 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.036934639 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry:
_c4swt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4swH
_c4swI:
	movq $block_c4swq_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4swq
_c4swr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4swH:
	movl $GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.037615623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.038411144 UTC

.section .text
.align 8
_c4swq:
_c4swq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4swL
_c4swK:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	bsf %ax,%ax
	movl $8,%ebx
	cmovne %ax,%bx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4swL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4swq, .-_c4swq


==================== Asm code ====================
2018-03-16 15:59:11.039076327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4swq_info:
	.quad	_c4swq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.04246903 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.043331592 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry:
_c4sx6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sxk
_c4sxl:
	movq $block_c4sx3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sx3
_c4sx4:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sxk:
	movl $GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.044461692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.045145271 UTC

.section .text
.align 8
_c4sx3:
_c4sx3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sxo
_c4sxn:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	bsr %ax,%ax
	movl $15,%ebx
	cmovne %ax,%bx
	xorw $7,%bx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sxo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sx3, .-_c4sx3


==================== Asm code ====================
2018-03-16 15:59:11.046501544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sx3_info:
	.quad	_c4sx3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.048155677 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt11_closure
.type GHC.Int.$fBitsInt11_closure, @object
GHC.Int.$fBitsInt11_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:59:11.05041897 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:11.05108621 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_entry:
_c4sxH:
	movl $GHC.Int.$fBitsInt11_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt8_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:11.051665273 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.054730497 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cfromInteger_closure
.type GHC.Int.$fNumInt16_$cfromInteger_closure, @object
GHC.Int.$fNumInt16_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt16_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.055542251 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cfromInteger_entry
.type GHC.Int.$fNumInt16_$cfromInteger_entry, @object
GHC.Int.$fNumInt16_$cfromInteger_entry:
_c4sxV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sy2
_c4sy3:
	movq $block_c4sxT_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_c4sy2:
	movl $GHC.Int.$fNumInt16_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cfromInteger_entry, .-GHC.Int.$fNumInt16_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.056183889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cfromInteger_info
.type GHC.Int.$fNumInt16_$cfromInteger_info, @object
GHC.Int.$fNumInt16_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt16_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.056918152 UTC

.section .text
.align 8
_c4sxT:
_c4sxT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sy6
_c4sy5:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sy6:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4sxT, .-_c4sxT


==================== Asm code ====================
2018-03-16 15:59:11.057586584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sxT_info:
	.quad	_c4sxT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.060799888 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cnegate_closure
.type GHC.Int.$fNumInt16_$cnegate_closure, @object
GHC.Int.$fNumInt16_$cnegate_closure:
	.quad	GHC.Int.$fNumInt16_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:11.062150044 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cnegate_entry
.type GHC.Int.$fNumInt16_$cnegate_entry, @object
GHC.Int.$fNumInt16_$cnegate_entry:
_c4syp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4syz
_c4syA:
	movq $block_c4sym_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sym
_c4syn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4syz:
	movl $GHC.Int.$fNumInt16_$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cnegate_entry, .-GHC.Int.$fNumInt16_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:11.062772605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cnegate_info
.type GHC.Int.$fNumInt16_$cnegate_info, @object
GHC.Int.$fNumInt16_$cnegate_info:
	.quad	GHC.Int.$fNumInt16_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.064038348 UTC

.section .text
.align 8
_c4sym:
_c4sym:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4syD
_c4syC:
	movq 7(%rbx),%rax
	negq %rax
	movswq %ax,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4syD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sym, .-_c4sym


==================== Asm code ====================
2018-03-16 15:59:11.064725678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sym_info:
	.quad	_c4sym
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.068516914 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c*_closure
.type GHC.Int.$fNumInt16_$c*_closure, @object
GHC.Int.$fNumInt16_$c*_closure:
	.quad	GHC.Int.$fNumInt16_$c*_info


==================== Asm code ====================
2018-03-16 15:59:11.069368355 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c*_entry
.type GHC.Int.$fNumInt16_$c*_entry, @object
GHC.Int.$fNumInt16_$c*_entry:
_c4syX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4szc
_c4szd:
	movq $block_c4syU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4syU
_c4syV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4szc:
	movl $GHC.Int.$fNumInt16_$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c*_entry, .-GHC.Int.$fNumInt16_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:11.070047427 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c*_info
.type GHC.Int.$fNumInt16_$c*_info, @object
GHC.Int.$fNumInt16_$c*_info:
	.quad	GHC.Int.$fNumInt16_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.070778746 UTC

.section .text
.align 8
_c4syU:
_c4syU:
	movq $block_c4sz0_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sz0
_c4sz1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4syU, .-_c4syU


==================== Asm code ====================
2018-03-16 15:59:11.071374196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4syU_info:
	.quad	_c4syU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.072119092 UTC

.section .text
.align 8
_c4sz0:
_c4sz0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4szh
_c4szg:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movswq %bx,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4szh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sz0, .-_c4sz0


==================== Asm code ====================
2018-03-16 15:59:11.072747888 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sz0_info:
	.quad	_c4sz0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.076528918 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c-_closure
.type GHC.Int.$fNumInt16_$c-_closure, @object
GHC.Int.$fNumInt16_$c-_closure:
	.quad	GHC.Int.$fNumInt16_$c-_info


==================== Asm code ====================
2018-03-16 15:59:11.077802226 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c-_entry
.type GHC.Int.$fNumInt16_$c-_entry, @object
GHC.Int.$fNumInt16_$c-_entry:
_c4szI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4szX
_c4szY:
	movq $block_c4szF_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4szF
_c4szG:
	movq (%rbx),%rax
	jmp *(%rax)
_c4szX:
	movl $GHC.Int.$fNumInt16_$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c-_entry, .-GHC.Int.$fNumInt16_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:11.078502657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c-_info
.type GHC.Int.$fNumInt16_$c-_info, @object
GHC.Int.$fNumInt16_$c-_info:
	.quad	GHC.Int.$fNumInt16_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.079261086 UTC

.section .text
.align 8
_c4szF:
_c4szF:
	movq $block_c4szL_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4szL
_c4szM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4szF, .-_c4szF


==================== Asm code ====================
2018-03-16 15:59:11.079905623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4szF_info:
	.quad	_c4szF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.080641429 UTC

.section .text
.align 8
_c4szL:
_c4szL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sA2
_c4sA1:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movswq %bx,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sA2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4szL, .-_c4szL


==================== Asm code ====================
2018-03-16 15:59:11.081335244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4szL_info:
	.quad	_c4szL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.085723488 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c+_closure
.type GHC.Int.$fNumInt16_$c+_closure, @object
GHC.Int.$fNumInt16_$c+_closure:
	.quad	GHC.Int.$fNumInt16_$c+_info


==================== Asm code ====================
2018-03-16 15:59:11.08650056 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c+_entry
.type GHC.Int.$fNumInt16_$c+_entry, @object
GHC.Int.$fNumInt16_$c+_entry:
_c4sAt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sAI
_c4sAJ:
	movq $block_c4sAq_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sAq
_c4sAr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sAI:
	movl $GHC.Int.$fNumInt16_$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c+_entry, .-GHC.Int.$fNumInt16_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:11.087159274 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c+_info
.type GHC.Int.$fNumInt16_$c+_info, @object
GHC.Int.$fNumInt16_$c+_info:
	.quad	GHC.Int.$fNumInt16_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.087809633 UTC

.section .text
.align 8
_c4sAq:
_c4sAq:
	movq $block_c4sAw_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sAw
_c4sAx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sAq, .-_c4sAq


==================== Asm code ====================
2018-03-16 15:59:11.088411207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sAq_info:
	.quad	_c4sAq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.089155471 UTC

.section .text
.align 8
_c4sAw:
_c4sAw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sAN
_c4sAM:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movswq %bx,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sAN:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sAw, .-_c4sAw


==================== Asm code ====================
2018-03-16 15:59:11.089842937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sAw_info:
	.quad	_c4sAw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.092718513 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$ctoInteger_closure
.type GHC.Int.$fIntegralInt16_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt16_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.093629407 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$ctoInteger_entry
.type GHC.Int.$fIntegralInt16_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt16_$ctoInteger_entry:
_c4sBe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sBf
_c4sBg:
	movq $block_c4sBb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sBb
_c4sBc:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sBf:
	movl $GHC.Int.$fIntegralInt16_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$ctoInteger_entry, .-GHC.Int.$fIntegralInt16_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.094264784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$ctoInteger_info
.type GHC.Int.$fIntegralInt16_$ctoInteger_info, @object
GHC.Int.$fIntegralInt16_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.094912661 UTC

.section .text
.align 8
_c4sBb:
_c4sBb:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4sBb, .-_c4sBb


==================== Asm code ====================
2018-03-16 15:59:11.095498845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sBb_info:
	.quad	_c4sBb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.098819583 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cpopCount_closure
.type GHC.Int.$fBitsInt16_$cpopCount_closure, @object
GHC.Int.$fBitsInt16_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt16_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:11.099662109 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cpopCount_entry
.type GHC.Int.$fBitsInt16_$cpopCount_entry, @object
GHC.Int.$fBitsInt16_$cpopCount_entry:
_c4sBB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sBP
_c4sBQ:
	movq $block_c4sBy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sBy
_c4sBz:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sBP:
	movl $GHC.Int.$fBitsInt16_$cpopCount_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cpopCount_entry, .-GHC.Int.$fBitsInt16_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:11.100344653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cpopCount_info
.type GHC.Int.$fBitsInt16_$cpopCount_info, @object
GHC.Int.$fBitsInt16_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt16_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.101205422 UTC

.section .text
.align 8
_c4sBy:
_c4sBy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sBT
_c4sBS:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt16
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sBT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sBy, .-_c4sBy


==================== Asm code ====================
2018-03-16 15:59:11.101884868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sBy_info:
	.quad	_c4sBy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.106475249 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.107298007 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_entry:
_c4sCc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sCo
_c4sCp:
	movq $block_c4sC9_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sC9
_c4sCa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sCo:
	movl $GHC.Int.$fBitsInt16_$cunsafeShiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt16_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.107963114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.108661042 UTC

.section .text
.align 8
_c4sC9:
_c4sC9:
	movq $block_c4sCf_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sCf
_c4sCg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sC9, .-_c4sC9


==================== Asm code ====================
2018-03-16 15:59:11.109288819 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sC9_info:
	.quad	_c4sC9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.11001699 UTC

.section .text
.align 8
_c4sCf:
_c4sCf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sCt
_c4sCs:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sCt:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sCf, .-_c4sCf


==================== Asm code ====================
2018-03-16 15:59:11.110648986 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sCf_info:
	.quad	_c4sCf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.112310719 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt3_closure
.type GHC.Int.$fBitsInt3_closure, @object
GHC.Int.$fBitsInt3_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.113976045 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt2_closure
.type GHC.Int.$fNumInt2_closure, @object
GHC.Int.$fNumInt2_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:11.118758091 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftR_closure
.type GHC.Int.$fBitsInt16_$cshiftR_closure, @object
GHC.Int.$fBitsInt16_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt16_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.119646284 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshiftR_entry
.type GHC.Int.$fBitsInt16_$cshiftR_entry, @object
GHC.Int.$fBitsInt16_$cshiftR_entry:
_c4sCU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sCY
_c4sCZ:
	movq $block_c4sCR_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sCR
_c4sCS:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sCY:
	movl $GHC.Int.$fBitsInt16_$cshiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshiftR_entry, .-GHC.Int.$fBitsInt16_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.120383679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftR_info
.type GHC.Int.$fBitsInt16_$cshiftR_info, @object
GHC.Int.$fBitsInt16_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt16_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.121133276 UTC

.section .text
.align 8
_c4sCR:
_c4sCR:
	movq $block_c4sCX_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sCX
_c4sD1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sCR, .-_c4sCR


==================== Asm code ====================
2018-03-16 15:59:11.122264798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sCR_info:
	.quad	_c4sCR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.123193465 UTC

.section .text
.align 8
_c4sCX:
_c4sCX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sD7
_c4sD6:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4sDg
_c4sDn:
	testq %rax,%rax
	jge _c4sDl
_c4sDm:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt2_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sDl:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt3_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sDg:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sD7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sCX, .-_c4sCX


==================== Asm code ====================
2018-03-16 15:59:11.123913757 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sCX_info:
	.quad	_c4sCX
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.127819679 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.128652881 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_entry:
_c4sDO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sE3
_c4sE4:
	movq $block_c4sDL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sDL
_c4sDM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sE3:
	movl $GHC.Int.$fBitsInt16_$cunsafeShiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt16_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.129401724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.130116143 UTC

.section .text
.align 8
_c4sDL:
_c4sDL:
	movq $block_c4sDR_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sDR
_c4sDS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sDL, .-_c4sDL


==================== Asm code ====================
2018-03-16 15:59:11.130756711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sDL_info:
	.quad	_c4sDL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.131545368 UTC

.section .text
.align 8
_c4sDR:
_c4sDR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sE8
_c4sE7:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movswq %ax,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sE8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sDR, .-_c4sDR


==================== Asm code ====================
2018-03-16 15:59:11.132175408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sDR_info:
	.quad	_c4sDR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.137027864 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftL_closure
.type GHC.Int.$fBitsInt16_$cshiftL_closure, @object
GHC.Int.$fBitsInt16_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt16_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.137956288 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshiftL_entry
.type GHC.Int.$fBitsInt16_$cshiftL_entry, @object
GHC.Int.$fBitsInt16_$cshiftL_entry:
_c4sEy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sEC
_c4sED:
	movq $block_c4sEv_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sEv
_c4sEw:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sEC:
	movl $GHC.Int.$fBitsInt16_$cshiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshiftL_entry, .-GHC.Int.$fBitsInt16_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.138641772 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftL_info
.type GHC.Int.$fBitsInt16_$cshiftL_info, @object
GHC.Int.$fBitsInt16_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt16_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.139374501 UTC

.section .text
.align 8
_c4sEv:
_c4sEv:
	movq $block_c4sEB_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sEB
_c4sEF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sEv, .-_c4sEv


==================== Asm code ====================
2018-03-16 15:59:11.140005855 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sEv_info:
	.quad	_c4sEv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.140855349 UTC

.section .text
.align 8
_c4sEB:
_c4sEB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sEL
_c4sEK:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4sEX
_c4sEY:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt3_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sEX:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sEL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sEB, .-_c4sEB


==================== Asm code ====================
2018-03-16 15:59:11.141635687 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sEB_info:
	.quad	_c4sEB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.144254037 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cisSigned_closure
.type GHC.Int.$fBitsInt16_$cisSigned_closure, @object
GHC.Int.$fBitsInt16_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt16_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:11.144949719 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cisSigned_entry
.type GHC.Int.$fBitsInt16_$cisSigned_entry, @object
GHC.Int.$fBitsInt16_$cisSigned_entry:
_c4sFn:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cisSigned_entry, .-GHC.Int.$fBitsInt16_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:11.145595424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cisSigned_info
.type GHC.Int.$fBitsInt16_$cisSigned_info, @object
GHC.Int.$fBitsInt16_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt16_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.150491391 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotate_closure
.type GHC.Int.$fBitsInt16_$crotate_closure, @object
GHC.Int.$fBitsInt16_$crotate_closure:
	.quad	GHC.Int.$fBitsInt16_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:11.151368216 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotate_entry
.type GHC.Int.$fBitsInt16_$crotate_entry, @object
GHC.Int.$fBitsInt16_$crotate_entry:
_c4sFC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sFG
_c4sFH:
	movq $block_c4sFz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sFz
_c4sFA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sFG:
	movl $GHC.Int.$fBitsInt16_$crotate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$crotate_entry, .-GHC.Int.$fBitsInt16_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:11.152060914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotate_info
.type GHC.Int.$fBitsInt16_$crotate_info, @object
GHC.Int.$fBitsInt16_$crotate_info:
	.quad	GHC.Int.$fBitsInt16_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.152839153 UTC

.section .text
.align 8
_c4sFz:
_c4sFz:
	movq $block_c4sFF_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sFF
_c4sFJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sFz, .-_c4sFz


==================== Asm code ====================
2018-03-16 15:59:11.153597766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sFz_info:
	.quad	_c4sFz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.154359657 UTC

.section .text
.align 8
_c4sFF:
_c4sFF:
	movq 7(%rbx),%rax
	andl $15,%eax
	testq %rax,%rax
	jne _u4sGA
_c4sGw:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4sGA:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4sFY
	.size _c4sFF, .-_c4sFF


==================== Asm code ====================
2018-03-16 15:59:11.154980134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sFF_info:
	.quad	_c4sFF
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.155872211 UTC

.section .text
.align 8
_c4sFY:
_c4sFY:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4sGt
_c4sGs:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movzwl %bx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $16,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sGt:
	movq $16,904(%r13)
	movq $block_c4sFX_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4sFY, .-_c4sFY


==================== Asm code ====================
2018-03-16 15:59:11.156653332 UTC

.section .text
.align 8
_c4sFX:
_c4sFX:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4sFY
	.size _c4sFX, .-_c4sFX


==================== Asm code ====================
2018-03-16 15:59:11.157338629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sFX_info:
	.quad	_c4sFX
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.162688051 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshift_closure
.type GHC.Int.$fBitsInt16_$cshift_closure, @object
GHC.Int.$fBitsInt16_$cshift_closure:
	.quad	GHC.Int.$fBitsInt16_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:11.163632697 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshift_entry
.type GHC.Int.$fBitsInt16_$cshift_entry, @object
GHC.Int.$fBitsInt16_$cshift_entry:
_c4sHg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sHk
_c4sHl:
	movq $block_c4sHd_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sHd
_c4sHe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sHk:
	movl $GHC.Int.$fBitsInt16_$cshift_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshift_entry, .-GHC.Int.$fBitsInt16_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:11.16430186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshift_info
.type GHC.Int.$fBitsInt16_$cshift_info, @object
GHC.Int.$fBitsInt16_$cshift_info:
	.quad	GHC.Int.$fBitsInt16_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.165034739 UTC

.section .text
.align 8
_c4sHd:
_c4sHd:
	movq $block_c4sHj_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sHj
_c4sHn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sHd, .-_c4sHd


==================== Asm code ====================
2018-03-16 15:59:11.165720217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sHd_info:
	.quad	_c4sHd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.166763674 UTC

.section .text
.align 8
_c4sHj:
_c4sHj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sHt
_c4sHs:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4sHR
_c4sI6:
	cmpq $64,%rbx
	jge _c4sI5
_c4sI4:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sI5:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt3_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sHR:
	negq %rbx
	cmpq $64,%rbx
	jl _c4sHI
_c4sHP:
	testq %rax,%rax
	jge _c4sI5
_c4sHO:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt2_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sHI:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sHt:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sHj, .-_c4sHj


==================== Asm code ====================
2018-03-16 15:59:11.167570162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sHj_info:
	.quad	_c4sHj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.171786997 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplement_closure
.type GHC.Int.$fBitsInt16_$ccomplement_closure, @object
GHC.Int.$fBitsInt16_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt16_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:11.172641374 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ccomplement_entry
.type GHC.Int.$fBitsInt16_$ccomplement_entry, @object
GHC.Int.$fBitsInt16_$ccomplement_entry:
_c4sIB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sIO
_c4sIP:
	movq $block_c4sIy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sIy
_c4sIz:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sIO:
	movl $GHC.Int.$fBitsInt16_$ccomplement_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ccomplement_entry, .-GHC.Int.$fBitsInt16_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:11.173377486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplement_info
.type GHC.Int.$fBitsInt16_$ccomplement_info, @object
GHC.Int.$fBitsInt16_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt16_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.17411282 UTC

.section .text
.align 8
_c4sIy:
_c4sIy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sIS
_c4sIR:
	movq 7(%rbx),%rax
	notq %rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sIS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sIy, .-_c4sIy


==================== Asm code ====================
2018-03-16 15:59:11.174754303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sIy_info:
	.quad	_c4sIy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.178557154 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cxor_closure
.type GHC.Int.$fBitsInt16_$cxor_closure, @object
GHC.Int.$fBitsInt16_$cxor_closure:
	.quad	GHC.Int.$fBitsInt16_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:11.179423484 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cxor_entry
.type GHC.Int.$fBitsInt16_$cxor_entry, @object
GHC.Int.$fBitsInt16_$cxor_entry:
_c4sJb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sJw
_c4sJx:
	movq $block_c4sJ8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sJ8
_c4sJ9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sJw:
	movl $GHC.Int.$fBitsInt16_$cxor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cxor_entry, .-GHC.Int.$fBitsInt16_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:11.18012518 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cxor_info
.type GHC.Int.$fBitsInt16_$cxor_info, @object
GHC.Int.$fBitsInt16_$cxor_info:
	.quad	GHC.Int.$fBitsInt16_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.180827159 UTC

.section .text
.align 8
_c4sJ8:
_c4sJ8:
	movq $block_c4sJe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sJe
_c4sJf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sJ8, .-_c4sJ8


==================== Asm code ====================
2018-03-16 15:59:11.182014137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sJ8_info:
	.quad	_c4sJ8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.182733108 UTC

.section .text
.align 8
_c4sJe:
_c4sJe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sJB
_c4sJA:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sJB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sJe, .-_c4sJe


==================== Asm code ====================
2018-03-16 15:59:11.183396522 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sJe_info:
	.quad	_c4sJe
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.187628496 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.|._closure
.type GHC.Int.$fBitsInt16_$c.|._closure, @object
GHC.Int.$fBitsInt16_$c.|._closure:
	.quad	GHC.Int.$fBitsInt16_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:11.188460549 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$c.|._entry
.type GHC.Int.$fBitsInt16_$c.|._entry, @object
GHC.Int.$fBitsInt16_$c.|._entry:
_c4sK1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sKm
_c4sKn:
	movq $block_c4sJY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sJY
_c4sJZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sKm:
	movl $GHC.Int.$fBitsInt16_$c.|._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$c.|._entry, .-GHC.Int.$fBitsInt16_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:11.189149469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.|._info
.type GHC.Int.$fBitsInt16_$c.|._info, @object
GHC.Int.$fBitsInt16_$c.|._info:
	.quad	GHC.Int.$fBitsInt16_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.189916492 UTC

.section .text
.align 8
_c4sJY:
_c4sJY:
	movq $block_c4sK4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sK4
_c4sK5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sJY, .-_c4sJY


==================== Asm code ====================
2018-03-16 15:59:11.190563133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sJY_info:
	.quad	_c4sJY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.191306854 UTC

.section .text
.align 8
_c4sK4:
_c4sK4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sKr
_c4sKq:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sKr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sK4, .-_c4sK4


==================== Asm code ====================
2018-03-16 15:59:11.191951529 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sK4_info:
	.quad	_c4sK4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.195883723 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.&._closure
.type GHC.Int.$fBitsInt16_$c.&._closure, @object
GHC.Int.$fBitsInt16_$c.&._closure:
	.quad	GHC.Int.$fBitsInt16_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:11.196755819 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$c.&._entry
.type GHC.Int.$fBitsInt16_$c.&._entry, @object
GHC.Int.$fBitsInt16_$c.&._entry:
_c4sKR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sLc
_c4sLd:
	movq $block_c4sKO_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sKO
_c4sKP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sLc:
	movl $GHC.Int.$fBitsInt16_$c.&._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$c.&._entry, .-GHC.Int.$fBitsInt16_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:11.197427213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.&._info
.type GHC.Int.$fBitsInt16_$c.&._info, @object
GHC.Int.$fBitsInt16_$c.&._info:
	.quad	GHC.Int.$fBitsInt16_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.198160056 UTC

.section .text
.align 8
_c4sKO:
_c4sKO:
	movq $block_c4sKU_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sKU
_c4sKV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sKO, .-_c4sKO


==================== Asm code ====================
2018-03-16 15:59:11.198774313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sKO_info:
	.quad	_c4sKO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.199549138 UTC

.section .text
.align 8
_c4sKU:
_c4sKU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sLh
_c4sLg:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sLh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sKU, .-_c4sKU


==================== Asm code ====================
2018-03-16 15:59:11.200211138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sKU_info:
	.quad	_c4sKU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.204484171 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.206181214 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry:
_c4sLH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sLV
_c4sLW:
	movq $block_c4sLE_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sLE
_c4sLF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sLV:
	movl $GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.207101466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.208185762 UTC

.section .text
.align 8
_c4sLE:
_c4sLE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sLZ
_c4sLY:
	movq 7(%rbx),%rax
	bsf %ax,%ax
	movl $16,%ebx
	cmovne %ax,%bx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sLZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sLE, .-_c4sLE


==================== Asm code ====================
2018-03-16 15:59:11.209082261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sLE_info:
	.quad	_c4sLE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.213731587 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.214870901 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry:
_c4sMk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sMy
_c4sMz:
	movq $block_c4sMh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sMh
_c4sMi:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sMy:
	movl $GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.215844821 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.216878385 UTC

.section .text
.align 8
_c4sMh:
_c4sMh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sMC
_c4sMB:
	movq 7(%rbx),%rax
	bsr %ax,%ax
	movl $31,%ebx
	cmovne %ax,%bx
	xorw $15,%bx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sMC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sMh, .-_c4sMh


==================== Asm code ====================
2018-03-16 15:59:11.217577165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sMh_info:
	.quad	_c4sMh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.219386148 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt1_closure
.type GHC.Int.$fBitsInt1_closure, @object
GHC.Int.$fBitsInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:11.221884239 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:11.222673218 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_entry:
_c4sMV:
	movl $GHC.Int.$fBitsInt1_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt16_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:11.223317338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.226820351 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cfromInteger_closure
.type GHC.Int.$fNumInt32_$cfromInteger_closure, @object
GHC.Int.$fNumInt32_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt32_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.227651765 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cfromInteger_entry
.type GHC.Int.$fNumInt32_$cfromInteger_entry, @object
GHC.Int.$fNumInt32_$cfromInteger_entry:
_c4sN9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sNg
_c4sNh:
	movq $block_c4sN7_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_c4sNg:
	movl $GHC.Int.$fNumInt32_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cfromInteger_entry, .-GHC.Int.$fNumInt32_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.228371223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cfromInteger_info
.type GHC.Int.$fNumInt32_$cfromInteger_info, @object
GHC.Int.$fNumInt32_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt32_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.229148979 UTC

.section .text
.align 8
_c4sN7:
_c4sN7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sNk
_c4sNj:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sNk:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4sN7, .-_c4sN7


==================== Asm code ====================
2018-03-16 15:59:11.229858633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sN7_info:
	.quad	_c4sN7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.233149413 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cnegate_closure
.type GHC.Int.$fNumInt32_$cnegate_closure, @object
GHC.Int.$fNumInt32_$cnegate_closure:
	.quad	GHC.Int.$fNumInt32_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:11.234082592 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cnegate_entry
.type GHC.Int.$fNumInt32_$cnegate_entry, @object
GHC.Int.$fNumInt32_$cnegate_entry:
_c4sNC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sNM
_c4sNN:
	movq $block_c4sNz_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sNz
_c4sNA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sNM:
	movl $GHC.Int.$fNumInt32_$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cnegate_entry, .-GHC.Int.$fNumInt32_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:11.234709329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cnegate_info
.type GHC.Int.$fNumInt32_$cnegate_info, @object
GHC.Int.$fNumInt32_$cnegate_info:
	.quad	GHC.Int.$fNumInt32_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.235460827 UTC

.section .text
.align 8
_c4sNz:
_c4sNz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sNQ
_c4sNP:
	movq 7(%rbx),%rax
	negq %rax
	movslq %eax,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sNQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sNz, .-_c4sNz


==================== Asm code ====================
2018-03-16 15:59:11.236134337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sNz_info:
	.quad	_c4sNz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.240030285 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c*_closure
.type GHC.Int.$fNumInt32_$c*_closure, @object
GHC.Int.$fNumInt32_$c*_closure:
	.quad	GHC.Int.$fNumInt32_$c*_info


==================== Asm code ====================
2018-03-16 15:59:11.240862522 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c*_entry
.type GHC.Int.$fNumInt32_$c*_entry, @object
GHC.Int.$fNumInt32_$c*_entry:
_c4sOa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sOp
_c4sOq:
	movq $block_c4sO7_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sO7
_c4sO8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sOp:
	movl $GHC.Int.$fNumInt32_$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c*_entry, .-GHC.Int.$fNumInt32_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:11.24321779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c*_info
.type GHC.Int.$fNumInt32_$c*_info, @object
GHC.Int.$fNumInt32_$c*_info:
	.quad	GHC.Int.$fNumInt32_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.243948183 UTC

.section .text
.align 8
_c4sO7:
_c4sO7:
	movq $block_c4sOd_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sOd
_c4sOe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sO7, .-_c4sO7


==================== Asm code ====================
2018-03-16 15:59:11.24458159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sO7_info:
	.quad	_c4sO7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.245885936 UTC

.section .text
.align 8
_c4sOd:
_c4sOd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sOu
_c4sOt:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movslq %ebx,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sOu:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sOd, .-_c4sOd


==================== Asm code ====================
2018-03-16 15:59:11.246530811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sOd_info:
	.quad	_c4sOd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.250576811 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c-_closure
.type GHC.Int.$fNumInt32_$c-_closure, @object
GHC.Int.$fNumInt32_$c-_closure:
	.quad	GHC.Int.$fNumInt32_$c-_info


==================== Asm code ====================
2018-03-16 15:59:11.251429485 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c-_entry
.type GHC.Int.$fNumInt32_$c-_entry, @object
GHC.Int.$fNumInt32_$c-_entry:
_c4sOV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sPa
_c4sPb:
	movq $block_c4sOS_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sOS
_c4sOT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sPa:
	movl $GHC.Int.$fNumInt32_$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c-_entry, .-GHC.Int.$fNumInt32_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:11.252169674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c-_info
.type GHC.Int.$fNumInt32_$c-_info, @object
GHC.Int.$fNumInt32_$c-_info:
	.quad	GHC.Int.$fNumInt32_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.25292267 UTC

.section .text
.align 8
_c4sOS:
_c4sOS:
	movq $block_c4sOY_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sOY
_c4sOZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sOS, .-_c4sOS


==================== Asm code ====================
2018-03-16 15:59:11.25360577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sOS_info:
	.quad	_c4sOS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.254321911 UTC

.section .text
.align 8
_c4sOY:
_c4sOY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sPf
_c4sPe:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movslq %ebx,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sPf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sOY, .-_c4sOY


==================== Asm code ====================
2018-03-16 15:59:11.255001527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sOY_info:
	.quad	_c4sOY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.259174261 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c+_closure
.type GHC.Int.$fNumInt32_$c+_closure, @object
GHC.Int.$fNumInt32_$c+_closure:
	.quad	GHC.Int.$fNumInt32_$c+_info


==================== Asm code ====================
2018-03-16 15:59:11.260030488 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c+_entry
.type GHC.Int.$fNumInt32_$c+_entry, @object
GHC.Int.$fNumInt32_$c+_entry:
_c4sPG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sPV
_c4sPW:
	movq $block_c4sPD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sPD
_c4sPE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sPV:
	movl $GHC.Int.$fNumInt32_$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c+_entry, .-GHC.Int.$fNumInt32_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:11.260704601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c+_info
.type GHC.Int.$fNumInt32_$c+_info, @object
GHC.Int.$fNumInt32_$c+_info:
	.quad	GHC.Int.$fNumInt32_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.261484488 UTC

.section .text
.align 8
_c4sPD:
_c4sPD:
	movq $block_c4sPJ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sPJ
_c4sPK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sPD, .-_c4sPD


==================== Asm code ====================
2018-03-16 15:59:11.262092458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sPD_info:
	.quad	_c4sPD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.262849732 UTC

.section .text
.align 8
_c4sPJ:
_c4sPJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sQ0
_c4sPZ:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movslq %ebx,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sQ0:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sPJ, .-_c4sPJ


==================== Asm code ====================
2018-03-16 15:59:11.263585067 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sPJ_info:
	.quad	_c4sPJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.267037047 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$ctoInteger_closure
.type GHC.Int.$fIntegralInt32_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt32_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.267844209 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$ctoInteger_entry
.type GHC.Int.$fIntegralInt32_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt32_$ctoInteger_entry:
_c4sQr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sQs
_c4sQt:
	movq $block_c4sQo_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sQo
_c4sQp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sQs:
	movl $GHC.Int.$fIntegralInt32_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$ctoInteger_entry, .-GHC.Int.$fIntegralInt32_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.268541546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$ctoInteger_info
.type GHC.Int.$fIntegralInt32_$ctoInteger_info, @object
GHC.Int.$fIntegralInt32_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.269195325 UTC

.section .text
.align 8
_c4sQo:
_c4sQo:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4sQo, .-_c4sQo


==================== Asm code ====================
2018-03-16 15:59:11.270139224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sQo_info:
	.quad	_c4sQo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.273445777 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cpopCount_closure
.type GHC.Int.$fBitsInt32_$cpopCount_closure, @object
GHC.Int.$fBitsInt32_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt32_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:11.274276949 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cpopCount_entry
.type GHC.Int.$fBitsInt32_$cpopCount_entry, @object
GHC.Int.$fBitsInt32_$cpopCount_entry:
_c4sQO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sR2
_c4sR3:
	movq $block_c4sQL_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sQL
_c4sQM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sR2:
	movl $GHC.Int.$fBitsInt32_$cpopCount_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cpopCount_entry, .-GHC.Int.$fBitsInt32_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:11.274971645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cpopCount_info
.type GHC.Int.$fBitsInt32_$cpopCount_info, @object
GHC.Int.$fBitsInt32_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt32_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.275736902 UTC

.section .text
.align 8
_c4sQL:
_c4sQL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sR6
_c4sR5:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt32
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sR6:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sQL, .-_c4sQL


==================== Asm code ====================
2018-03-16 15:59:11.276388756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sQL_info:
	.quad	_c4sQL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.28023938 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.281079305 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_entry:
_c4sRp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sRB
_c4sRC:
	movq $block_c4sRm_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sRm
_c4sRn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sRB:
	movl $GHC.Int.$fBitsInt32_$cunsafeShiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt32_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.281808082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.282532021 UTC

.section .text
.align 8
_c4sRm:
_c4sRm:
	movq $block_c4sRs_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sRs
_c4sRt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sRm, .-_c4sRm


==================== Asm code ====================
2018-03-16 15:59:11.283224857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sRm_info:
	.quad	_c4sRm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.284036041 UTC

.section .text
.align 8
_c4sRs:
_c4sRs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sRG
_c4sRF:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sRG:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sRs, .-_c4sRs


==================== Asm code ====================
2018-03-16 15:59:11.285170522 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sRs_info:
	.quad	_c4sRs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.286882016 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt6_closure
.type GHC.Int.$fBitsInt6_closure, @object
GHC.Int.$fBitsInt6_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.288445649 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt4_closure
.type GHC.Int.$fNumInt4_closure, @object
GHC.Int.$fNumInt4_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:11.29279848 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftR_closure
.type GHC.Int.$fBitsInt32_$cshiftR_closure, @object
GHC.Int.$fBitsInt32_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt32_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.293727483 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshiftR_entry
.type GHC.Int.$fBitsInt32_$cshiftR_entry, @object
GHC.Int.$fBitsInt32_$cshiftR_entry:
_c4sS7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sSb
_c4sSc:
	movq $block_c4sS4_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sS4
_c4sS5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sSb:
	movl $GHC.Int.$fBitsInt32_$cshiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshiftR_entry, .-GHC.Int.$fBitsInt32_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.294368591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftR_info
.type GHC.Int.$fBitsInt32_$cshiftR_info, @object
GHC.Int.$fBitsInt32_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt32_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.295057437 UTC

.section .text
.align 8
_c4sS4:
_c4sS4:
	movq $block_c4sSa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sSa
_c4sSe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sS4, .-_c4sS4


==================== Asm code ====================
2018-03-16 15:59:11.295678153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sS4_info:
	.quad	_c4sS4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.296592621 UTC

.section .text
.align 8
_c4sSa:
_c4sSa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sSk
_c4sSj:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4sSt
_c4sSA:
	testq %rax,%rax
	jge _c4sSy
_c4sSz:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt4_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sSy:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sSt:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sSk:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sSa, .-_c4sSa


==================== Asm code ====================
2018-03-16 15:59:11.297422241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sSa_info:
	.quad	_c4sSa
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.302258456 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.303165563 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_entry:
_c4sT1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sTg
_c4sTh:
	movq $block_c4sSY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sSY
_c4sSZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sTg:
	movl $GHC.Int.$fBitsInt32_$cunsafeShiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt32_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.304017779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.305492389 UTC

.section .text
.align 8
_c4sSY:
_c4sSY:
	movq $block_c4sT4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sT4
_c4sT5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sSY, .-_c4sSY


==================== Asm code ====================
2018-03-16 15:59:11.306106887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sSY_info:
	.quad	_c4sSY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.306860021 UTC

.section .text
.align 8
_c4sT4:
_c4sT4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sTl
_c4sTk:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movslq %eax,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sTl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sT4, .-_c4sT4


==================== Asm code ====================
2018-03-16 15:59:11.307505647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sT4_info:
	.quad	_c4sT4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.311712368 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftL_closure
.type GHC.Int.$fBitsInt32_$cshiftL_closure, @object
GHC.Int.$fBitsInt32_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt32_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.312598746 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshiftL_entry
.type GHC.Int.$fBitsInt32_$cshiftL_entry, @object
GHC.Int.$fBitsInt32_$cshiftL_entry:
_c4sTK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sTO
_c4sTP:
	movq $block_c4sTH_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sTH
_c4sTI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sTO:
	movl $GHC.Int.$fBitsInt32_$cshiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshiftL_entry, .-GHC.Int.$fBitsInt32_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.313277792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftL_info
.type GHC.Int.$fBitsInt32_$cshiftL_info, @object
GHC.Int.$fBitsInt32_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt32_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.313970772 UTC

.section .text
.align 8
_c4sTH:
_c4sTH:
	movq $block_c4sTN_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sTN
_c4sTR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sTH, .-_c4sTH


==================== Asm code ====================
2018-03-16 15:59:11.314568635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sTH_info:
	.quad	_c4sTH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.315379354 UTC

.section .text
.align 8
_c4sTN:
_c4sTN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sTX
_c4sTW:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4sU9
_c4sUa:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sU9:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sTX:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sTN, .-_c4sTN


==================== Asm code ====================
2018-03-16 15:59:11.316129759 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sTN_info:
	.quad	_c4sTN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.318722098 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cisSigned_closure
.type GHC.Int.$fBitsInt32_$cisSigned_closure, @object
GHC.Int.$fBitsInt32_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt32_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:11.319422078 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cisSigned_entry
.type GHC.Int.$fBitsInt32_$cisSigned_entry, @object
GHC.Int.$fBitsInt32_$cisSigned_entry:
_c4sUy:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cisSigned_entry, .-GHC.Int.$fBitsInt32_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:11.320045987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cisSigned_info
.type GHC.Int.$fBitsInt32_$cisSigned_info, @object
GHC.Int.$fBitsInt32_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt32_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.325349681 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotate_closure
.type GHC.Int.$fBitsInt32_$crotate_closure, @object
GHC.Int.$fBitsInt32_$crotate_closure:
	.quad	GHC.Int.$fBitsInt32_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:11.326197641 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotate_entry
.type GHC.Int.$fBitsInt32_$crotate_entry, @object
GHC.Int.$fBitsInt32_$crotate_entry:
_c4sUN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sUR
_c4sUS:
	movq $block_c4sUK_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sUK
_c4sUL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sUR:
	movl $GHC.Int.$fBitsInt32_$crotate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$crotate_entry, .-GHC.Int.$fBitsInt32_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:11.326849909 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotate_info
.type GHC.Int.$fBitsInt32_$crotate_info, @object
GHC.Int.$fBitsInt32_$crotate_info:
	.quad	GHC.Int.$fBitsInt32_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.327573561 UTC

.section .text
.align 8
_c4sUK:
_c4sUK:
	movq $block_c4sUQ_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sUQ
_c4sUU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sUK, .-_c4sUK


==================== Asm code ====================
2018-03-16 15:59:11.328231334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sUK_info:
	.quad	_c4sUK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.328877037 UTC

.section .text
.align 8
_c4sUQ:
_c4sUQ:
	movq 7(%rbx),%rax
	andl $31,%eax
	testq %rax,%rax
	jne _u4sVL
_c4sVH:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4sVL:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4sV9
	.size _c4sUQ, .-_c4sUQ


==================== Asm code ====================
2018-03-16 15:59:11.329757394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sUQ_info:
	.quad	_c4sUQ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.330621056 UTC

.section .text
.align 8
_c4sV9:
_c4sV9:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4sVE
_c4sVD:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movl %ebx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $32,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sVE:
	movq $16,904(%r13)
	movq $block_c4sV8_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4sV9, .-_c4sV9


==================== Asm code ====================
2018-03-16 15:59:11.331466444 UTC

.section .text
.align 8
_c4sV8:
_c4sV8:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4sV9
	.size _c4sV8, .-_c4sV8


==================== Asm code ====================
2018-03-16 15:59:11.332072446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sV8_info:
	.quad	_c4sV8
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.33700999 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshift_closure
.type GHC.Int.$fBitsInt32_$cshift_closure, @object
GHC.Int.$fBitsInt32_$cshift_closure:
	.quad	GHC.Int.$fBitsInt32_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:11.337951761 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshift_entry
.type GHC.Int.$fBitsInt32_$cshift_entry, @object
GHC.Int.$fBitsInt32_$cshift_entry:
_c4sWr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sWv
_c4sWw:
	movq $block_c4sWo_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sWo
_c4sWp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sWv:
	movl $GHC.Int.$fBitsInt32_$cshift_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshift_entry, .-GHC.Int.$fBitsInt32_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:11.338683725 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshift_info
.type GHC.Int.$fBitsInt32_$cshift_info, @object
GHC.Int.$fBitsInt32_$cshift_info:
	.quad	GHC.Int.$fBitsInt32_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.339364951 UTC

.section .text
.align 8
_c4sWo:
_c4sWo:
	movq $block_c4sWu_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sWu
_c4sWy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sWo, .-_c4sWo


==================== Asm code ====================
2018-03-16 15:59:11.33998906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sWo_info:
	.quad	_c4sWo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.341000785 UTC

.section .text
.align 8
_c4sWu:
_c4sWu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sWE
_c4sWD:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4sX2
_c4sXh:
	cmpq $64,%rbx
	jge _c4sXg
_c4sXf:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sXg:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sX2:
	negq %rbx
	cmpq $64,%rbx
	jl _c4sWT
_c4sX0:
	testq %rax,%rax
	jge _c4sXg
_c4sWZ:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt4_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sWT:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sWE:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sWu, .-_c4sWu


==================== Asm code ====================
2018-03-16 15:59:11.341865625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sWu_info:
	.quad	_c4sWu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.345611959 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplement_closure
.type GHC.Int.$fBitsInt32_$ccomplement_closure, @object
GHC.Int.$fBitsInt32_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt32_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:11.34645705 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ccomplement_entry
.type GHC.Int.$fBitsInt32_$ccomplement_entry, @object
GHC.Int.$fBitsInt32_$ccomplement_entry:
_c4sXL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sXY
_c4sXZ:
	movq $block_c4sXI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4sXI
_c4sXJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sXY:
	movl $GHC.Int.$fBitsInt32_$ccomplement_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ccomplement_entry, .-GHC.Int.$fBitsInt32_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:11.347086241 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplement_info
.type GHC.Int.$fBitsInt32_$ccomplement_info, @object
GHC.Int.$fBitsInt32_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt32_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.347825582 UTC

.section .text
.align 8
_c4sXI:
_c4sXI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sY2
_c4sY1:
	movq 7(%rbx),%rax
	notq %rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sY2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sXI, .-_c4sXI


==================== Asm code ====================
2018-03-16 15:59:11.34841912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sXI_info:
	.quad	_c4sXI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.35226358 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cxor_closure
.type GHC.Int.$fBitsInt32_$cxor_closure, @object
GHC.Int.$fBitsInt32_$cxor_closure:
	.quad	GHC.Int.$fBitsInt32_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:11.353140948 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cxor_entry
.type GHC.Int.$fBitsInt32_$cxor_entry, @object
GHC.Int.$fBitsInt32_$cxor_entry:
_c4sYl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sYG
_c4sYH:
	movq $block_c4sYi_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sYi
_c4sYj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sYG:
	movl $GHC.Int.$fBitsInt32_$cxor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cxor_entry, .-GHC.Int.$fBitsInt32_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:11.354146546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cxor_info
.type GHC.Int.$fBitsInt32_$cxor_info, @object
GHC.Int.$fBitsInt32_$cxor_info:
	.quad	GHC.Int.$fBitsInt32_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.354907586 UTC

.section .text
.align 8
_c4sYi:
_c4sYi:
	movq $block_c4sYo_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sYo
_c4sYp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sYi, .-_c4sYi


==================== Asm code ====================
2018-03-16 15:59:11.355518653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sYi_info:
	.quad	_c4sYi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.356293748 UTC

.section .text
.align 8
_c4sYo:
_c4sYo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sYL
_c4sYK:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sYL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sYo, .-_c4sYo


==================== Asm code ====================
2018-03-16 15:59:11.356988678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sYo_info:
	.quad	_c4sYo
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.361091495 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.|._closure
.type GHC.Int.$fBitsInt32_$c.|._closure, @object
GHC.Int.$fBitsInt32_$c.|._closure:
	.quad	GHC.Int.$fBitsInt32_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:11.36199808 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$c.|._entry
.type GHC.Int.$fBitsInt32_$c.|._entry, @object
GHC.Int.$fBitsInt32_$c.|._entry:
_c4sZb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4sZw
_c4sZx:
	movq $block_c4sZ8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sZ8
_c4sZ9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4sZw:
	movl $GHC.Int.$fBitsInt32_$c.|._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$c.|._entry, .-GHC.Int.$fBitsInt32_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:11.362720044 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.|._info
.type GHC.Int.$fBitsInt32_$c.|._info, @object
GHC.Int.$fBitsInt32_$c.|._info:
	.quad	GHC.Int.$fBitsInt32_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.36392239 UTC

.section .text
.align 8
_c4sZ8:
_c4sZ8:
	movq $block_c4sZe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4sZe
_c4sZf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sZ8, .-_c4sZ8


==================== Asm code ====================
2018-03-16 15:59:11.364560726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sZ8_info:
	.quad	_c4sZ8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.365400193 UTC

.section .text
.align 8
_c4sZe:
_c4sZe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4sZB
_c4sZA:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4sZB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4sZe, .-_c4sZe


==================== Asm code ====================
2018-03-16 15:59:11.366055057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sZe_info:
	.quad	_c4sZe
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.370293579 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.&._closure
.type GHC.Int.$fBitsInt32_$c.&._closure, @object
GHC.Int.$fBitsInt32_$c.&._closure:
	.quad	GHC.Int.$fBitsInt32_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:11.371126113 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$c.&._entry
.type GHC.Int.$fBitsInt32_$c.&._entry, @object
GHC.Int.$fBitsInt32_$c.&._entry:
_c4t01:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t0m
_c4t0n:
	movq $block_c4sZY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4sZY
_c4sZZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t0m:
	movl $GHC.Int.$fBitsInt32_$c.&._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$c.&._entry, .-GHC.Int.$fBitsInt32_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:11.371811184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.&._info
.type GHC.Int.$fBitsInt32_$c.&._info, @object
GHC.Int.$fBitsInt32_$c.&._info:
	.quad	GHC.Int.$fBitsInt32_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.372516329 UTC

.section .text
.align 8
_c4sZY:
_c4sZY:
	movq $block_c4t04_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t04
_c4t05:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4sZY, .-_c4sZY


==================== Asm code ====================
2018-03-16 15:59:11.373134269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4sZY_info:
	.quad	_c4sZY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.373899918 UTC

.section .text
.align 8
_c4t04:
_c4t04:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t0r
_c4t0q:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t0r:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t04, .-_c4t04


==================== Asm code ====================
2018-03-16 15:59:11.37457841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t04_info:
	.quad	_c4t04
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.377928227 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.378872384 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry:
_c4t0R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t15
_c4t16:
	movq $block_c4t0O_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t0O
_c4t0P:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t15:
	movl $GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.379547916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.380448661 UTC

.section .text
.align 8
_c4t0O:
_c4t0O:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t19
_c4t18:
	movq 7(%rbx),%rax
	bsf %eax,%eax
	movl $32,%ebx
	cmovne %eax,%ebx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t19:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t0O, .-_c4t0O


==================== Asm code ====================
2018-03-16 15:59:11.381125843 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t0O_info:
	.quad	_c4t0O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.385518096 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.386342737 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry:
_c4t1u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t1I
_c4t1J:
	movq $block_c4t1r_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t1r
_c4t1s:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t1I:
	movl $GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.387064975 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.38779883 UTC

.section .text
.align 8
_c4t1r:
_c4t1r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t1M
_c4t1L:
	movq 7(%rbx),%rax
	bsr %eax,%eax
	movl $63,%ebx
	cmovne %eax,%ebx
	xorl $31,%ebx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t1M:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t1r, .-_c4t1r


==================== Asm code ====================
2018-03-16 15:59:11.388465455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t1r_info:
	.quad	_c4t1r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.390262882 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt4_closure
.type GHC.Int.$fBitsInt4_closure, @object
GHC.Int.$fBitsInt4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	32


==================== Asm code ====================
2018-03-16 15:59:11.392637822 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:11.393409241 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_entry:
_c4t25:
	movl $GHC.Int.$fBitsInt4_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt32_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:11.394039862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.397027718 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cfromInteger_closure
.type GHC.Int.$fNumInt64_$cfromInteger_closure, @object
GHC.Int.$fNumInt64_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt64_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.397842279 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cfromInteger_entry
.type GHC.Int.$fNumInt64_$cfromInteger_entry, @object
GHC.Int.$fNumInt64_$cfromInteger_entry:
_c4t2j:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t2n
_c4t2o:
	movq $block_c4t2h_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_c4t2n:
	movl $GHC.Int.$fNumInt64_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cfromInteger_entry, .-GHC.Int.$fNumInt64_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.398516102 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cfromInteger_info
.type GHC.Int.$fNumInt64_$cfromInteger_info, @object
GHC.Int.$fNumInt64_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt64_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.399286652 UTC

.section .text
.align 8
_c4t2h:
_c4t2h:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t2r
_c4t2q:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t2r:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4t2h, .-_c4t2h


==================== Asm code ====================
2018-03-16 15:59:11.399938426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t2h_info:
	.quad	_c4t2h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.403846286 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cnegate_closure
.type GHC.Int.$fNumInt64_$cnegate_closure, @object
GHC.Int.$fNumInt64_$cnegate_closure:
	.quad	GHC.Int.$fNumInt64_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:11.404659426 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cnegate_entry
.type GHC.Int.$fNumInt64_$cnegate_entry, @object
GHC.Int.$fNumInt64_$cnegate_entry:
_c4t2I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t2P
_c4t2Q:
	movq $block_c4t2F_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t2F
_c4t2G:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t2P:
	movl $GHC.Int.$fNumInt64_$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cnegate_entry, .-GHC.Int.$fNumInt64_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:11.405359707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cnegate_info
.type GHC.Int.$fNumInt64_$cnegate_info, @object
GHC.Int.$fNumInt64_$cnegate_info:
	.quad	GHC.Int.$fNumInt64_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.406280501 UTC

.section .text
.align 8
_c4t2F:
_c4t2F:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t2T
_c4t2S:
	movq 7(%rbx),%rax
	negq %rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t2T:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t2F, .-_c4t2F


==================== Asm code ====================
2018-03-16 15:59:11.406982591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t2F_info:
	.quad	_c4t2F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.411839478 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c*_closure
.type GHC.Int.$fNumInt64_$c*_closure, @object
GHC.Int.$fNumInt64_$c*_closure:
	.quad	GHC.Int.$fNumInt64_$c*_info


==================== Asm code ====================
2018-03-16 15:59:11.412715277 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c*_entry
.type GHC.Int.$fNumInt64_$c*_entry, @object
GHC.Int.$fNumInt64_$c*_entry:
_c4t3c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t3o
_c4t3p:
	movq $block_c4t39_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t39
_c4t3a:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t3o:
	movl $GHC.Int.$fNumInt64_$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c*_entry, .-GHC.Int.$fNumInt64_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:11.413561479 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c*_info
.type GHC.Int.$fNumInt64_$c*_info, @object
GHC.Int.$fNumInt64_$c*_info:
	.quad	GHC.Int.$fNumInt64_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.414398362 UTC

.section .text
.align 8
_c4t39:
_c4t39:
	movq $block_c4t3f_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t3f
_c4t3g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t39, .-_c4t39


==================== Asm code ====================
2018-03-16 15:59:11.415017534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t39_info:
	.quad	_c4t39
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.415848122 UTC

.section .text
.align 8
_c4t3f:
_c4t3f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t3t
_c4t3s:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t3t:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t3f, .-_c4t3f


==================== Asm code ====================
2018-03-16 15:59:11.416557071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t3f_info:
	.quad	_c4t3f
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.420380348 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c-_closure
.type GHC.Int.$fNumInt64_$c-_closure, @object
GHC.Int.$fNumInt64_$c-_closure:
	.quad	GHC.Int.$fNumInt64_$c-_info


==================== Asm code ====================
2018-03-16 15:59:11.421312117 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c-_entry
.type GHC.Int.$fNumInt64_$c-_entry, @object
GHC.Int.$fNumInt64_$c-_entry:
_c4t3T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t45
_c4t46:
	movq $block_c4t3Q_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t3Q
_c4t3R:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t45:
	movl $GHC.Int.$fNumInt64_$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c-_entry, .-GHC.Int.$fNumInt64_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:11.422046896 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c-_info
.type GHC.Int.$fNumInt64_$c-_info, @object
GHC.Int.$fNumInt64_$c-_info:
	.quad	GHC.Int.$fNumInt64_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.422759669 UTC

.section .text
.align 8
_c4t3Q:
_c4t3Q:
	movq $block_c4t3W_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t3W
_c4t3X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t3Q, .-_c4t3Q


==================== Asm code ====================
2018-03-16 15:59:11.423987183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t3Q_info:
	.quad	_c4t3Q
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.42476766 UTC

.section .text
.align 8
_c4t3W:
_c4t3W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t4a
_c4t49:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t4a:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t3W, .-_c4t3W


==================== Asm code ====================
2018-03-16 15:59:11.425813327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t3W_info:
	.quad	_c4t3W
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.429567943 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c+_closure
.type GHC.Int.$fNumInt64_$c+_closure, @object
GHC.Int.$fNumInt64_$c+_closure:
	.quad	GHC.Int.$fNumInt64_$c+_info


==================== Asm code ====================
2018-03-16 15:59:11.430426811 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c+_entry
.type GHC.Int.$fNumInt64_$c+_entry, @object
GHC.Int.$fNumInt64_$c+_entry:
_c4t4A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t4M
_c4t4N:
	movq $block_c4t4x_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t4x
_c4t4y:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t4M:
	movl $GHC.Int.$fNumInt64_$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c+_entry, .-GHC.Int.$fNumInt64_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:11.431065988 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c+_info
.type GHC.Int.$fNumInt64_$c+_info, @object
GHC.Int.$fNumInt64_$c+_info:
	.quad	GHC.Int.$fNumInt64_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.43178621 UTC

.section .text
.align 8
_c4t4x:
_c4t4x:
	movq $block_c4t4D_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t4D
_c4t4E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t4x, .-_c4t4x


==================== Asm code ====================
2018-03-16 15:59:11.432340178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t4x_info:
	.quad	_c4t4x
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.4330673 UTC

.section .text
.align 8
_c4t4D:
_c4t4D:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t4R
_c4t4Q:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t4R:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t4D, .-_c4t4D


==================== Asm code ====================
2018-03-16 15:59:11.43374364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t4D_info:
	.quad	_c4t4D
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.436543849 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$ctoInteger_closure
.type GHC.Int.$fIntegralInt64_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt64_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:11.437422898 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$ctoInteger_entry
.type GHC.Int.$fIntegralInt64_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt64_$ctoInteger_entry:
_c4t5h:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t5i
_c4t5j:
	movq $block_c4t5e_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t5e
_c4t5f:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t5i:
	movl $GHC.Int.$fIntegralInt64_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$ctoInteger_entry, .-GHC.Int.$fIntegralInt64_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:11.438100615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$ctoInteger_info
.type GHC.Int.$fIntegralInt64_$ctoInteger_info, @object
GHC.Int.$fIntegralInt64_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.43874007 UTC

.section .text
.align 8
_c4t5e:
_c4t5e:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4t5e, .-_c4t5e


==================== Asm code ====================
2018-03-16 15:59:11.439350624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t5e_info:
	.quad	_c4t5e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.443272466 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cpopCount_closure
.type GHC.Int.$fBitsInt64_$cpopCount_closure, @object
GHC.Int.$fBitsInt64_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt64_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:11.444151713 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cpopCount_entry
.type GHC.Int.$fBitsInt64_$cpopCount_entry, @object
GHC.Int.$fBitsInt64_$cpopCount_entry:
_c4t5E:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t5S
_c4t5T:
	movq $block_c4t5B_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t5B
_c4t5C:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t5S:
	movl $GHC.Int.$fBitsInt64_$cpopCount_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cpopCount_entry, .-GHC.Int.$fBitsInt64_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:11.444791223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cpopCount_info
.type GHC.Int.$fBitsInt64_$cpopCount_info, @object
GHC.Int.$fBitsInt64_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt64_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.445560275 UTC

.section .text
.align 8
_c4t5B:
_c4t5B:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t5W
_c4t5V:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt64
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t5W:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t5B, .-_c4t5B


==================== Asm code ====================
2018-03-16 15:59:11.446176895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t5B_info:
	.quad	_c4t5B
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.449893482 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.450676181 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_entry:
_c4t6f:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t6r
_c4t6s:
	movq $block_c4t6c_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t6c
_c4t6d:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t6r:
	movl $GHC.Int.$fBitsInt64_$cunsafeShiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt64_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.451340247 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.45206193 UTC

.section .text
.align 8
_c4t6c:
_c4t6c:
	movq $block_c4t6i_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t6i
_c4t6j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t6c, .-_c4t6c


==================== Asm code ====================
2018-03-16 15:59:11.452712299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t6c_info:
	.quad	_c4t6c
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.454030841 UTC

.section .text
.align 8
_c4t6i:
_c4t6i:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t6w
_c4t6v:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t6w:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t6i, .-_c4t6i


==================== Asm code ====================
2018-03-16 15:59:11.455057672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t6i_info:
	.quad	_c4t6i
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.457919322 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt10_closure
.type GHC.Int.$fBitsInt10_closure, @object
GHC.Int.$fBitsInt10_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.460666412 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt6_closure
.type GHC.Int.$fNumInt6_closure, @object
GHC.Int.$fNumInt6_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:11.467751717 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftR_closure
.type GHC.Int.$fBitsInt64_$cshiftR_closure, @object
GHC.Int.$fBitsInt64_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt64_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:11.46908523 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshiftR_entry
.type GHC.Int.$fBitsInt64_$cshiftR_entry, @object
GHC.Int.$fBitsInt64_$cshiftR_entry:
_c4t6X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t71
_c4t72:
	movq $block_c4t6U_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t6U
_c4t6V:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t71:
	movl $GHC.Int.$fBitsInt64_$cshiftR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshiftR_entry, .-GHC.Int.$fBitsInt64_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:11.470228004 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftR_info
.type GHC.Int.$fBitsInt64_$cshiftR_info, @object
GHC.Int.$fBitsInt64_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt64_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.471338434 UTC

.section .text
.align 8
_c4t6U:
_c4t6U:
	movq $block_c4t70_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t70
_c4t74:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t6U, .-_c4t6U


==================== Asm code ====================
2018-03-16 15:59:11.472241494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t6U_info:
	.quad	_c4t6U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.473683856 UTC

.section .text
.align 8
_c4t70:
_c4t70:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t7a
_c4t79:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4t7j
_c4t7q:
	testq %rax,%rax
	jge _c4t7o
_c4t7p:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t7o:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t7j:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t7a:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t70, .-_c4t70


==================== Asm code ====================
2018-03-16 15:59:11.474816761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t70_info:
	.quad	_c4t70
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.481141088 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.482391035 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_entry:
_c4t7R:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t83
_c4t84:
	movq $block_c4t7O_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t7O
_c4t7P:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t83:
	movl $GHC.Int.$fBitsInt64_$cunsafeShiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt64_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.483446663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.484551081 UTC

.section .text
.align 8
_c4t7O:
_c4t7O:
	movq $block_c4t7U_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t7U
_c4t7V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t7O, .-_c4t7O


==================== Asm code ====================
2018-03-16 15:59:11.485513047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t7O_info:
	.quad	_c4t7O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.486697139 UTC

.section .text
.align 8
_c4t7U:
_c4t7U:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t88
_c4t87:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t88:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t7U, .-_c4t7U


==================== Asm code ====================
2018-03-16 15:59:11.487758129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t7U_info:
	.quad	_c4t7U
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.494525895 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftL_closure
.type GHC.Int.$fBitsInt64_$cshiftL_closure, @object
GHC.Int.$fBitsInt64_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt64_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:11.495887274 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshiftL_entry
.type GHC.Int.$fBitsInt64_$cshiftL_entry, @object
GHC.Int.$fBitsInt64_$cshiftL_entry:
_c4t8x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t8B
_c4t8C:
	movq $block_c4t8u_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t8u
_c4t8v:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t8B:
	movl $GHC.Int.$fBitsInt64_$cshiftL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshiftL_entry, .-GHC.Int.$fBitsInt64_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:11.497544387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftL_info
.type GHC.Int.$fBitsInt64_$cshiftL_info, @object
GHC.Int.$fBitsInt64_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt64_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.498784857 UTC

.section .text
.align 8
_c4t8u:
_c4t8u:
	movq $block_c4t8A_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4t8A
_c4t8E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t8u, .-_c4t8u


==================== Asm code ====================
2018-03-16 15:59:11.499699501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t8u_info:
	.quad	_c4t8u
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.500929661 UTC

.section .text
.align 8
_c4t8A:
_c4t8A:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4t8K
_c4t8J:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4t8T
_c4t8U:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t8T:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4t8K:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4t8A, .-_c4t8A


==================== Asm code ====================
2018-03-16 15:59:11.502158188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t8A_info:
	.quad	_c4t8A
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.505660986 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cisSigned_closure
.type GHC.Int.$fBitsInt64_$cisSigned_closure, @object
GHC.Int.$fBitsInt64_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt64_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:11.506733028 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cisSigned_entry
.type GHC.Int.$fBitsInt64_$cisSigned_entry, @object
GHC.Int.$fBitsInt64_$cisSigned_entry:
_c4t9h:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cisSigned_entry, .-GHC.Int.$fBitsInt64_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:11.507721446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cisSigned_info
.type GHC.Int.$fBitsInt64_$cisSigned_info, @object
GHC.Int.$fBitsInt64_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt64_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.515416343 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotate_closure
.type GHC.Int.$fBitsInt64_$crotate_closure, @object
GHC.Int.$fBitsInt64_$crotate_closure:
	.quad	GHC.Int.$fBitsInt64_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:11.516660664 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotate_entry
.type GHC.Int.$fBitsInt64_$crotate_entry, @object
GHC.Int.$fBitsInt64_$crotate_entry:
_c4t9w:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4t9A
_c4t9B:
	movq $block_c4t9t_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4t9t
_c4t9u:
	movq (%rbx),%rax
	jmp *(%rax)
_c4t9A:
	movl $GHC.Int.$fBitsInt64_$crotate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$crotate_entry, .-GHC.Int.$fBitsInt64_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:11.517727792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotate_info
.type GHC.Int.$fBitsInt64_$crotate_info, @object
GHC.Int.$fBitsInt64_$crotate_info:
	.quad	GHC.Int.$fBitsInt64_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.51881128 UTC

.section .text
.align 8
_c4t9t:
_c4t9t:
	movq $block_c4t9z_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4t9z
_c4t9D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4t9t, .-_c4t9t


==================== Asm code ====================
2018-03-16 15:59:11.51975876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t9t_info:
	.quad	_c4t9t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.520834833 UTC

.section .text
.align 8
_c4t9z:
_c4t9z:
	movq 7(%rbx),%rax
	andl $63,%eax
	testq %rax,%rax
	jne _u4tao
_c4tak:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4tao:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4t9S
	.size _c4t9z, .-_c4t9z


==================== Asm code ====================
2018-03-16 15:59:11.521679908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t9z_info:
	.quad	_c4t9z
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.522651976 UTC

.section .text
.align 8
_c4t9S:
_c4t9S:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4tah
_c4tag:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $64,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tah:
	movq $16,904(%r13)
	movq $block_c4t9R_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4t9S, .-_c4t9S


==================== Asm code ====================
2018-03-16 15:59:11.52385303 UTC

.section .text
.align 8
_c4t9R:
_c4t9R:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4t9S
	.size _c4t9R, .-_c4t9R


==================== Asm code ====================
2018-03-16 15:59:11.524750016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4t9R_info:
	.quad	_c4t9R
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.533014762 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshift_closure
.type GHC.Int.$fBitsInt64_$cshift_closure, @object
GHC.Int.$fBitsInt64_$cshift_closure:
	.quad	GHC.Int.$fBitsInt64_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:11.534310835 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshift_entry
.type GHC.Int.$fBitsInt64_$cshift_entry, @object
GHC.Int.$fBitsInt64_$cshift_entry:
_c4tb2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tb6
_c4tb7:
	movq $block_c4taZ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4taZ
_c4tb0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tb6:
	movl $GHC.Int.$fBitsInt64_$cshift_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshift_entry, .-GHC.Int.$fBitsInt64_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:11.53533614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshift_info
.type GHC.Int.$fBitsInt64_$cshift_info, @object
GHC.Int.$fBitsInt64_$cshift_info:
	.quad	GHC.Int.$fBitsInt64_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.536365661 UTC

.section .text
.align 8
_c4taZ:
_c4taZ:
	movq $block_c4tb5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tb5
_c4tb9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4taZ, .-_c4taZ


==================== Asm code ====================
2018-03-16 15:59:11.537343798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4taZ_info:
	.quad	_c4taZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.538774256 UTC

.section .text
.align 8
_c4tb5:
_c4tb5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tbf
_c4tbe:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4tbD
_c4tbP:
	cmpq $64,%rbx
	jge _c4tbO
_c4tbN:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tbO:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tbD:
	negq %rbx
	cmpq $64,%rbx
	jl _c4tbu
_c4tbB:
	testq %rax,%rax
	jge _c4tbO
_c4tbA:
	addq $-16,%r12
	movl $GHC.Int.$fNumInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tbu:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tbf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tb5, .-_c4tb5


==================== Asm code ====================
2018-03-16 15:59:11.54007402 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tb5_info:
	.quad	_c4tb5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.545116146 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplement_closure
.type GHC.Int.$fBitsInt64_$ccomplement_closure, @object
GHC.Int.$fBitsInt64_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt64_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:11.546340872 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ccomplement_entry
.type GHC.Int.$fBitsInt64_$ccomplement_entry, @object
GHC.Int.$fBitsInt64_$ccomplement_entry:
_c4tci:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tcv
_c4tcw:
	movq $block_c4tcf_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tcf
_c4tcg:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tcv:
	movl $GHC.Int.$fBitsInt64_$ccomplement_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ccomplement_entry, .-GHC.Int.$fBitsInt64_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:11.547325288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplement_info
.type GHC.Int.$fBitsInt64_$ccomplement_info, @object
GHC.Int.$fBitsInt64_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt64_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.548410874 UTC

.section .text
.align 8
_c4tcf:
_c4tcf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tcz
_c4tcy:
	movq 7(%rbx),%rax
	xorq $-1,%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tcz:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tcf, .-_c4tcf


==================== Asm code ====================
2018-03-16 15:59:11.55001165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tcf_info:
	.quad	_c4tcf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.55556891 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cxor_closure
.type GHC.Int.$fBitsInt64_$cxor_closure, @object
GHC.Int.$fBitsInt64_$cxor_closure:
	.quad	GHC.Int.$fBitsInt64_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:11.557555435 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cxor_entry
.type GHC.Int.$fBitsInt64_$cxor_entry, @object
GHC.Int.$fBitsInt64_$cxor_entry:
_c4tcT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tde
_c4tdf:
	movq $block_c4tcQ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tcQ
_c4tcR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tde:
	movl $GHC.Int.$fBitsInt64_$cxor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cxor_entry, .-GHC.Int.$fBitsInt64_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:11.558521297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cxor_info
.type GHC.Int.$fBitsInt64_$cxor_info, @object
GHC.Int.$fBitsInt64_$cxor_info:
	.quad	GHC.Int.$fBitsInt64_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.559608918 UTC

.section .text
.align 8
_c4tcQ:
_c4tcQ:
	movq $block_c4tcW_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tcW
_c4tcX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tcQ, .-_c4tcQ


==================== Asm code ====================
2018-03-16 15:59:11.560495003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tcQ_info:
	.quad	_c4tcQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.56187453 UTC

.section .text
.align 8
_c4tcW:
_c4tcW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tdj
_c4tdi:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tdj:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tcW, .-_c4tcW


==================== Asm code ====================
2018-03-16 15:59:11.562708023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tcW_info:
	.quad	_c4tcW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.567927716 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.|._closure
.type GHC.Int.$fBitsInt64_$c.|._closure, @object
GHC.Int.$fBitsInt64_$c.|._closure:
	.quad	GHC.Int.$fBitsInt64_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:11.568962427 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$c.|._entry
.type GHC.Int.$fBitsInt64_$c.|._entry, @object
GHC.Int.$fBitsInt64_$c.|._entry:
_c4tdJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4te4
_c4te5:
	movq $block_c4tdG_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tdG
_c4tdH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4te4:
	movl $GHC.Int.$fBitsInt64_$c.|._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$c.|._entry, .-GHC.Int.$fBitsInt64_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:11.569776715 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.|._info
.type GHC.Int.$fBitsInt64_$c.|._info, @object
GHC.Int.$fBitsInt64_$c.|._info:
	.quad	GHC.Int.$fBitsInt64_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.570546978 UTC

.section .text
.align 8
_c4tdG:
_c4tdG:
	movq $block_c4tdM_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tdM
_c4tdN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tdG, .-_c4tdG


==================== Asm code ====================
2018-03-16 15:59:11.571140603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tdG_info:
	.quad	_c4tdG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.571911785 UTC

.section .text
.align 8
_c4tdM:
_c4tdM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4te9
_c4te8:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4te9:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tdM, .-_c4tdM


==================== Asm code ====================
2018-03-16 15:59:11.572540132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tdM_info:
	.quad	_c4tdM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.577653256 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.&._closure
.type GHC.Int.$fBitsInt64_$c.&._closure, @object
GHC.Int.$fBitsInt64_$c.&._closure:
	.quad	GHC.Int.$fBitsInt64_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:11.578747841 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$c.&._entry
.type GHC.Int.$fBitsInt64_$c.&._entry, @object
GHC.Int.$fBitsInt64_$c.&._entry:
_c4tez:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4teU
_c4teV:
	movq $block_c4tew_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tew
_c4tex:
	movq (%rbx),%rax
	jmp *(%rax)
_c4teU:
	movl $GHC.Int.$fBitsInt64_$c.&._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$c.&._entry, .-GHC.Int.$fBitsInt64_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:11.579644591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.&._info
.type GHC.Int.$fBitsInt64_$c.&._info, @object
GHC.Int.$fBitsInt64_$c.&._info:
	.quad	GHC.Int.$fBitsInt64_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.581037201 UTC

.section .text
.align 8
_c4tew:
_c4tew:
	movq $block_c4teC_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4teC
_c4teD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tew, .-_c4tew


==================== Asm code ====================
2018-03-16 15:59:11.581829056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tew_info:
	.quad	_c4tew
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.582813103 UTC

.section .text
.align 8
_c4teC:
_c4teC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4teZ
_c4teY:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4teZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4teC, .-_c4teC


==================== Asm code ====================
2018-03-16 15:59:11.583602993 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4teC_info:
	.quad	_c4teC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.587409922 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.588257358 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry:
_c4tfp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tfD
_c4tfE:
	movq $block_c4tfm_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tfm
_c4tfn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tfD:
	movl $GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.588923451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.589759564 UTC

.section .text
.align 8
_c4tfm:
_c4tfm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tfH
_c4tfG:
	movq 7(%rbx),%rax
	bsf %rax,%rax
	movl $64,%ebx
	cmovne %rax,%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tfH:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tfm, .-_c4tfm


==================== Asm code ====================
2018-03-16 15:59:11.590402829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tfm_info:
	.quad	_c4tfm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.593940588 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:11.594776627 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry:
_c4tg2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tgg
_c4tgh:
	movq $block_c4tfZ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tfZ
_c4tg0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tgg:
	movl $GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:11.595573484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.596431392 UTC

.section .text
.align 8
_c4tfZ:
_c4tfZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tgk
_c4tgj:
	movq 7(%rbx),%rax
	bsr %rax,%rax
	movl $127,%ebx
	cmovne %rax,%rbx
	xorq $63,%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tgk:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tfZ, .-_c4tfZ


==================== Asm code ====================
2018-03-16 15:59:11.597127115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tfZ_info:
	.quad	_c4tfZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.599131632 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt7_closure
.type GHC.Int.$fBitsInt7_closure, @object
GHC.Int.$fBitsInt7_closure:
	.quad	GHC.Types.I#_con_info
	.quad	64


==================== Asm code ====================
2018-03-16 15:59:11.602746277 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:11.603507561 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_entry:
_c4tgD:
	movl $GHC.Int.$fBitsInt7_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt64_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:11.604175386 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.607874486 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt8_closure
.type GHC.Int.eqInt8_closure, @object
GHC.Int.eqInt8_closure:
	.quad	GHC.Int.eqInt8_info


==================== Asm code ====================
2018-03-16 15:59:11.608809922 UTC

.section .text
.align 8
.globl GHC.Int.eqInt8_entry
.type GHC.Int.eqInt8_entry, @object
GHC.Int.eqInt8_entry:
_c4tgS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tgW
_c4tgX:
	movq $block_c4tgP_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tgP
_c4tgQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tgW:
	movl $GHC.Int.eqInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.eqInt8_entry, .-GHC.Int.eqInt8_entry


==================== Asm code ====================
2018-03-16 15:59:11.609614017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt8_info
.type GHC.Int.eqInt8_info, @object
GHC.Int.eqInt8_info:
	.quad	GHC.Int.eqInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.610348975 UTC

.section .text
.align 8
_c4tgP:
_c4tgP:
	movq $block_c4tgV_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tgV
_c4tgZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tgP, .-_c4tgP


==================== Asm code ====================
2018-03-16 15:59:11.611070687 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tgP_info:
	.quad	_c4tgP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.611974051 UTC

.section .text
.align 8
_c4tgV:
_c4tgV:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tgV, .-_c4tgV


==================== Asm code ====================
2018-03-16 15:59:11.612601673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tgV_info:
	.quad	_c4tgV
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.614526313 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt8_closure
.type GHC.Int.$fEqInt8_closure, @object
GHC.Int.$fEqInt8_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt8_closure+2
	.quad	GHC.Int.neInt8_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.6183478 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt8_closure
.type GHC.Int.gtInt8_closure, @object
GHC.Int.gtInt8_closure:
	.quad	GHC.Int.gtInt8_info


==================== Asm code ====================
2018-03-16 15:59:11.619231278 UTC

.section .text
.align 8
.globl GHC.Int.gtInt8_entry
.type GHC.Int.gtInt8_entry, @object
GHC.Int.gtInt8_entry:
_c4thw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4thA
_c4thB:
	movq $block_c4tht_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tht
_c4thu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4thA:
	movl $GHC.Int.gtInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.gtInt8_entry, .-GHC.Int.gtInt8_entry


==================== Asm code ====================
2018-03-16 15:59:11.620087175 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt8_info
.type GHC.Int.gtInt8_info, @object
GHC.Int.gtInt8_info:
	.quad	GHC.Int.gtInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.621108224 UTC

.section .text
.align 8
_c4tht:
_c4tht:
	movq $block_c4thz_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4thz
_c4thD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tht, .-_c4tht


==================== Asm code ====================
2018-03-16 15:59:11.622494125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tht_info:
	.quad	_c4tht
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.623401622 UTC

.section .text
.align 8
_c4thz:
_c4thz:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4thz, .-_c4thz


==================== Asm code ====================
2018-03-16 15:59:11.624226329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4thz_info:
	.quad	_c4thz
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.627996483 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt8_closure
.type GHC.Int.geInt8_closure, @object
GHC.Int.geInt8_closure:
	.quad	GHC.Int.geInt8_info


==================== Asm code ====================
2018-03-16 15:59:11.629200024 UTC

.section .text
.align 8
.globl GHC.Int.geInt8_entry
.type GHC.Int.geInt8_entry, @object
GHC.Int.geInt8_entry:
_c4ti9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tid
_c4tie:
	movq $block_c4ti6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ti6
_c4ti7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tid:
	movl $GHC.Int.geInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.geInt8_entry, .-GHC.Int.geInt8_entry


==================== Asm code ====================
2018-03-16 15:59:11.630297136 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt8_info
.type GHC.Int.geInt8_info, @object
GHC.Int.geInt8_info:
	.quad	GHC.Int.geInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.631431197 UTC

.section .text
.align 8
_c4ti6:
_c4ti6:
	movq $block_c4tic_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tic
_c4tig:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ti6, .-_c4ti6


==================== Asm code ====================
2018-03-16 15:59:11.632354252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ti6_info:
	.quad	_c4ti6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.634248413 UTC

.section .text
.align 8
_c4tic:
_c4tic:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tic, .-_c4tic


==================== Asm code ====================
2018-03-16 15:59:11.635172952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tic_info:
	.quad	_c4tic
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.64074226 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt8_closure
.type GHC.Int.ltInt8_closure, @object
GHC.Int.ltInt8_closure:
	.quad	GHC.Int.ltInt8_info


==================== Asm code ====================
2018-03-16 15:59:11.641950603 UTC

.section .text
.align 8
.globl GHC.Int.ltInt8_entry
.type GHC.Int.ltInt8_entry, @object
GHC.Int.ltInt8_entry:
_c4tiM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tiQ
_c4tiR:
	movq $block_c4tiJ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tiJ
_c4tiK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tiQ:
	movl $GHC.Int.ltInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.ltInt8_entry, .-GHC.Int.ltInt8_entry


==================== Asm code ====================
2018-03-16 15:59:11.642951579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt8_info
.type GHC.Int.ltInt8_info, @object
GHC.Int.ltInt8_info:
	.quad	GHC.Int.ltInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.643998482 UTC

.section .text
.align 8
_c4tiJ:
_c4tiJ:
	movq $block_c4tiP_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tiP
_c4tiT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tiJ, .-_c4tiJ


==================== Asm code ====================
2018-03-16 15:59:11.644874869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tiJ_info:
	.quad	_c4tiJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.646155799 UTC

.section .text
.align 8
_c4tiP:
_c4tiP:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tiP, .-_c4tiP


==================== Asm code ====================
2018-03-16 15:59:11.646985132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tiP_info:
	.quad	_c4tiP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.652815562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt8_closure
.type GHC.Int.leInt8_closure, @object
GHC.Int.leInt8_closure:
	.quad	GHC.Int.leInt8_info


==================== Asm code ====================
2018-03-16 15:59:11.654120863 UTC

.section .text
.align 8
.globl GHC.Int.leInt8_entry
.type GHC.Int.leInt8_entry, @object
GHC.Int.leInt8_entry:
_c4tjp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tjt
_c4tju:
	movq $block_c4tjm_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tjm
_c4tjn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tjt:
	movl $GHC.Int.leInt8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.leInt8_entry, .-GHC.Int.leInt8_entry


==================== Asm code ====================
2018-03-16 15:59:11.655029326 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt8_info
.type GHC.Int.leInt8_info, @object
GHC.Int.leInt8_info:
	.quad	GHC.Int.leInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.65609054 UTC

.section .text
.align 8
_c4tjm:
_c4tjm:
	movq $block_c4tjs_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tjs
_c4tjw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tjm, .-_c4tjm


==================== Asm code ====================
2018-03-16 15:59:11.656802738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tjm_info:
	.quad	_c4tjm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.658020551 UTC

.section .text
.align 8
_c4tjs:
_c4tjs:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tjs, .-_c4tjs


==================== Asm code ====================
2018-03-16 15:59:11.658862149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tjs_info:
	.quad	_c4tjs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.66293242 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$ccompare_closure
.type GHC.Int.$fOrdInt8_$ccompare_closure, @object
GHC.Int.$fOrdInt8_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt8_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:11.663945069 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$ccompare_entry
.type GHC.Int.$fOrdInt8_$ccompare_entry, @object
GHC.Int.$fOrdInt8_$ccompare_entry:
_c4tk2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tk6
_c4tk7:
	movq $block_c4tjZ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tjZ
_c4tk0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tk6:
	movl $GHC.Int.$fOrdInt8_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$ccompare_entry, .-GHC.Int.$fOrdInt8_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:11.664776926 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$ccompare_info
.type GHC.Int.$fOrdInt8_$ccompare_info, @object
GHC.Int.$fOrdInt8_$ccompare_info:
	.quad	GHC.Int.$fOrdInt8_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.665844628 UTC

.section .text
.align 8
_c4tjZ:
_c4tjZ:
	movq $block_c4tk5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tk5
_c4tk9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tjZ, .-_c4tjZ


==================== Asm code ====================
2018-03-16 15:59:11.666698097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tjZ_info:
	.quad	_c4tjZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.66788824 UTC

.section .text
.align 8
_c4tk5:
_c4tk5:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4tko
_c4tkn:
	cmpq %rbx,%rax
	jg _c4tkk
_c4tkl:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tko:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tkk:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tk5, .-_c4tk5


==================== Asm code ====================
2018-03-16 15:59:11.668884155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tk5_info:
	.quad	_c4tk5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.673429402 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmax_closure
.type GHC.Int.$fOrdInt8_$cmax_closure, @object
GHC.Int.$fOrdInt8_$cmax_closure:
	.quad	GHC.Int.$fOrdInt8_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:11.674433251 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$cmax_entry
.type GHC.Int.$fOrdInt8_$cmax_entry, @object
GHC.Int.$fOrdInt8_$cmax_entry:
_c4tkO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tkS
_c4tkT:
	movq $block_c4tkL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tkL
_c4tkM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tkS:
	movl $GHC.Int.$fOrdInt8_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$cmax_entry, .-GHC.Int.$fOrdInt8_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:11.675143484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmax_info
.type GHC.Int.$fOrdInt8_$cmax_info, @object
GHC.Int.$fOrdInt8_$cmax_info:
	.quad	GHC.Int.$fOrdInt8_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.675854211 UTC

.section .text
.align 8
_c4tkL:
_c4tkL:
	movq $block_c4tkR_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tkR
_c4tkV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tkL, .-_c4tkL


==================== Asm code ====================
2018-03-16 15:59:11.676569171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tkL_info:
	.quad	_c4tkL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.677563716 UTC

.section .text
.align 8
_c4tkR:
_c4tkR:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4tl3
_c4tl4:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tl3:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tkR, .-_c4tkR


==================== Asm code ====================
2018-03-16 15:59:11.678165801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tkR_info:
	.quad	_c4tkR
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.682512228 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmin_closure
.type GHC.Int.$fOrdInt8_$cmin_closure, @object
GHC.Int.$fOrdInt8_$cmin_closure:
	.quad	GHC.Int.$fOrdInt8_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:11.68340878 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$cmin_entry
.type GHC.Int.$fOrdInt8_$cmin_entry, @object
GHC.Int.$fOrdInt8_$cmin_entry:
_c4tlw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tlA
_c4tlB:
	movq $block_c4tlt_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tlt
_c4tlu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tlA:
	movl $GHC.Int.$fOrdInt8_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$cmin_entry, .-GHC.Int.$fOrdInt8_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:11.684138648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmin_info
.type GHC.Int.$fOrdInt8_$cmin_info, @object
GHC.Int.$fOrdInt8_$cmin_info:
	.quad	GHC.Int.$fOrdInt8_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.684842827 UTC

.section .text
.align 8
_c4tlt:
_c4tlt:
	movq $block_c4tlz_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tlz
_c4tlD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tlt, .-_c4tlt


==================== Asm code ====================
2018-03-16 15:59:11.685598614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tlt_info:
	.quad	_c4tlt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.686309171 UTC

.section .text
.align 8
_c4tlz:
_c4tlz:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4tlL
_c4tlM:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tlL:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tlz, .-_c4tlz


==================== Asm code ====================
2018-03-16 15:59:11.686954241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tlz_info:
	.quad	_c4tlz
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.688854805 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_closure
.type GHC.Int.$fOrdInt8_closure, @object
GHC.Int.$fOrdInt8_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt8_closure+1
	.quad	GHC.Int.$fOrdInt8_$ccompare_closure+2
	.quad	GHC.Int.ltInt8_closure+2
	.quad	GHC.Int.leInt8_closure+2
	.quad	GHC.Int.gtInt8_closure+2
	.quad	GHC.Int.geInt8_closure+2
	.quad	GHC.Int.$fOrdInt8_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt8_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.694620681 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cinRange_closure
.type GHC.Int.$fIxInt8_$cinRange_closure, @object
GHC.Int.$fIxInt8_$cinRange_closure:
	.quad	GHC.Int.$fIxInt8_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:11.695525041 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cinRange_entry
.type GHC.Int.$fIxInt8_$cinRange_entry, @object
GHC.Int.$fIxInt8_$cinRange_entry:
_c4tmf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tmo
_c4tmp:
	movq $block_c4tmc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tmc
_c4tmd:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tmo:
	movl $GHC.Int.$fIxInt8_$cinRange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cinRange_entry, .-GHC.Int.$fIxInt8_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:11.696294751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cinRange_info
.type GHC.Int.$fIxInt8_$cinRange_info, @object
GHC.Int.$fIxInt8_$cinRange_info:
	.quad	GHC.Int.$fIxInt8_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.697137755 UTC

.section .text
.align 8
_c4tmc:
_c4tmc:
	movq $block_c4tmi_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tmi
_c4tmj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tmc, .-_c4tmc


==================== Asm code ====================
2018-03-16 15:59:11.69781372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tmc_info:
	.quad	_c4tmc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.698504243 UTC

.section .text
.align 8
_c4tmi:
_c4tmi:
	movq $block_c4tmn_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4tmn
_c4tms:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tmi, .-_c4tmi


==================== Asm code ====================
2018-03-16 15:59:11.699158795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tmi_info:
	.quad	_c4tmi
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.699930867 UTC

.section .text
.align 8
_c4tmn:
_c4tmn:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4tmA
_c4tmE:
	movq 8(%rbp),%rbx
	movq $block_c4tmD_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4tmD
_c4tmF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tmA:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tmn, .-_c4tmn


==================== Asm code ====================
2018-03-16 15:59:11.700629239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tmn_info:
	.quad	_c4tmn
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.701384574 UTC

.section .text
.align 8
_c4tmD:
_c4tmD:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tmD, .-_c4tmD


==================== Asm code ====================
2018-03-16 15:59:11.702079199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tmD_info:
	.quad	_c4tmD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.703830654 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt7_closure
.type GHC.Int.$fNumInt7_closure, @object
GHC.Int.$fNumInt7_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:11.7074607 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$csignum_closure
.type GHC.Int.$fNumInt8_$csignum_closure, @object
GHC.Int.$fNumInt8_$csignum_closure:
	.quad	GHC.Int.$fNumInt8_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:11.708298298 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$csignum_entry
.type GHC.Int.$fNumInt8_$csignum_entry, @object
GHC.Int.$fNumInt8_$csignum_entry:
_c4tnn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tno
_c4tnp:
	movq $block_c4tnk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tnk
_c4tnl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tno:
	movl $GHC.Int.$fNumInt8_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$csignum_entry, .-GHC.Int.$fNumInt8_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:11.708949606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$csignum_info
.type GHC.Int.$fNumInt8_$csignum_info, @object
GHC.Int.$fNumInt8_$csignum_info:
	.quad	GHC.Int.$fNumInt8_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.710270765 UTC

.section .text
.align 8
_c4tnk:
_c4tnk:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4tnB
_c4tnC:
	movl $GHC.Int.$fNumInt7_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tnz:
	movl $GHC.Int.$fBitsInt13_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tnB:
	testq %rax,%rax
	je _c4tnz
_c4tny:
	movl $GHC.Int.$fNumInt9_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tnk, .-_c4tnk


==================== Asm code ====================
2018-03-16 15:59:11.711002527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tnk_info:
	.quad	_c4tnk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.715606864 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cabs_closure
.type GHC.Int.$fNumInt8_$cabs_closure, @object
GHC.Int.$fNumInt8_$cabs_closure:
	.quad	GHC.Int.$fNumInt8_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:11.716663579 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cabs_entry
.type GHC.Int.$fNumInt8_$cabs_entry, @object
GHC.Int.$fNumInt8_$cabs_entry:
_c4tnX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tnY
_c4tnZ:
	movq $block_c4tnU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tnU
_c4tnV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tnY:
	movl $GHC.Int.$fNumInt8_$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cabs_entry, .-GHC.Int.$fNumInt8_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:11.717399276 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cabs_info
.type GHC.Int.$fNumInt8_$cabs_info, @object
GHC.Int.$fNumInt8_$cabs_info:
	.quad	GHC.Int.$fNumInt8_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.71827569 UTC

.section .text
.align 8
_c4tnU:
_c4tnU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4to4
_c4to3:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4tog
_c4toh:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tog:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	negq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4to4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tnU, .-_c4tnU


==================== Asm code ====================
2018-03-16 15:59:11.718949276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tnU_info:
	.quad	_c4tnU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.720911677 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_closure
.type GHC.Int.$fNumInt8_closure, @object
GHC.Int.$fNumInt8_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt8_$c+_closure+2
	.quad	GHC.Int.$fNumInt8_$c-_closure+2
	.quad	GHC.Int.$fNumInt8_$c*_closure+2
	.quad	GHC.Int.$fNumInt8_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt8_$cabs_closure+1
	.quad	GHC.Int.$fNumInt8_$csignum_closure+1
	.quad	GHC.Int.$fNumInt8_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.722906693 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt12_closure
.type GHC.Int.$fBitsInt12_closure, @object
GHC.Int.$fBitsInt12_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt11_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.725214572 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:11.727247592 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry:
_c4toD:
	movl $GHC.Int.$fBitsInt12_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:11.728149276 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.733790576 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbit_closure
.type GHC.Int.$fBitsInt8_$cbit_closure, @object
GHC.Int.$fBitsInt8_$cbit_closure:
	.quad	GHC.Int.$fBitsInt8_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:11.735090686 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cbit_entry
.type GHC.Int.$fBitsInt8_$cbit_entry, @object
GHC.Int.$fBitsInt8_$cbit_entry:
_c4toS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4toT
_c4toU:
	movq $block_c4toP_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4toP
_c4toQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4toT:
	movl $GHC.Int.$fBitsInt8_$cbit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cbit_entry, .-GHC.Int.$fBitsInt8_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:11.73668332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbit_info
.type GHC.Int.$fBitsInt8_$cbit_info, @object
GHC.Int.$fBitsInt8_$cbit_info:
	.quad	GHC.Int.$fBitsInt8_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.737827274 UTC

.section .text
.align 8
_c4toP:
_c4toP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4toZ
_c4toY:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4tpb
_c4tpc:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt13_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tpb:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4toZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4toP, .-_c4toP


==================== Asm code ====================
2018-03-16 15:59:11.738878972 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4toP_info:
	.quad	_c4toP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.74537939 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ctestBit_closure
.type GHC.Int.$fBitsInt8_$ctestBit_closure, @object
GHC.Int.$fBitsInt8_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt8_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:11.746229906 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ctestBit_entry
.type GHC.Int.$fBitsInt8_$ctestBit_entry, @object
GHC.Int.$fBitsInt8_$ctestBit_entry:
_c4tpz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tpD
_c4tpE:
	movq $block_c4tpw_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tpw
_c4tpx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tpD:
	movl $GHC.Int.$fBitsInt8_$ctestBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ctestBit_entry, .-GHC.Int.$fBitsInt8_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:11.746914246 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ctestBit_info
.type GHC.Int.$fBitsInt8_$ctestBit_info, @object
GHC.Int.$fBitsInt8_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt8_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.747612066 UTC

.section .text
.align 8
_c4tpw:
_c4tpw:
	movq $block_c4tpC_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tpC
_c4tpG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tpw, .-_c4tpw


==================== Asm code ====================
2018-03-16 15:59:11.748241138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tpw_info:
	.quad	_c4tpw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.74909615 UTC

.section .text
.align 8
_c4tpC:
_c4tpC:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4tqk
_c4tqj:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4tqk
_c4tq8:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tqk:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tpC, .-_c4tpC


==================== Asm code ====================
2018-03-16 15:59:11.749834188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tpC_info:
	.quad	_c4tpC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.75473705 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateR_closure
.type GHC.Int.$fBitsInt8_$crotateR_closure, @object
GHC.Int.$fBitsInt8_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt8_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:11.755649789 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotateR_entry
.type GHC.Int.$fBitsInt8_$crotateR_entry, @object
GHC.Int.$fBitsInt8_$crotateR_entry:
_c4tqO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tqS
_c4tqT:
	movq $block_c4tqL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tqL
_c4tqM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tqS:
	movl $GHC.Int.$fBitsInt8_$crotateR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$crotateR_entry, .-GHC.Int.$fBitsInt8_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:11.756436897 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateR_info
.type GHC.Int.$fBitsInt8_$crotateR_info, @object
GHC.Int.$fBitsInt8_$crotateR_info:
	.quad	GHC.Int.$fBitsInt8_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.757958204 UTC

.section .text
.align 8
_c4tqL:
_c4tqL:
	movq $block_c4tqR_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tqR
_c4tqV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tqL, .-_c4tqL


==================== Asm code ====================
2018-03-16 15:59:11.759554779 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tqL_info:
	.quad	_c4tqL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.760649224 UTC

.section .text
.align 8
_c4tqR:
_c4tqR:
	movq 7(%rbx),%rax
	negq %rax
	andl $7,%eax
	testq %rax,%rax
	jne _u4trP
_c4trL:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4trP:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4trd
	.size _c4tqR, .-_c4tqR


==================== Asm code ====================
2018-03-16 15:59:11.761636459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tqR_info:
	.quad	_c4tqR
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.762731305 UTC

.section .text
.align 8
_c4trd:
_c4trd:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4trI
_c4trH:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movzbl %bl,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $8,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4trI:
	movq $16,904(%r13)
	movq $block_c4trc_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4trd, .-_c4trd


==================== Asm code ====================
2018-03-16 15:59:11.763496354 UTC

.section .text
.align 8
_c4trc:
_c4trc:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4trd
	.size _c4trc, .-_c4trc


==================== Asm code ====================
2018-03-16 15:59:11.764075166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4trc_info:
	.quad	_c4trc
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.768205584 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplementBit_closure
.type GHC.Int.$fBitsInt8_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt8_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:11.769019633 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ccomplementBit_entry
.type GHC.Int.$fBitsInt8_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt8_$ccomplementBit_entry:
_c4tsv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tsz
_c4tsA:
	movq $block_c4tss_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tss
_c4tst:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tsz:
	movl $GHC.Int.$fBitsInt8_$ccomplementBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ccomplementBit_entry, .-GHC.Int.$fBitsInt8_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:11.770031627 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplementBit_info
.type GHC.Int.$fBitsInt8_$ccomplementBit_info, @object
GHC.Int.$fBitsInt8_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.770810639 UTC

.section .text
.align 8
_c4tss:
_c4tss:
	movq $block_c4tsy_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tsy
_c4tsC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tss, .-_c4tss


==================== Asm code ====================
2018-03-16 15:59:11.771475539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tss_info:
	.quad	_c4tss
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.772350234 UTC

.section .text
.align 8
_c4tsy:
_c4tsy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tsI
_c4tsH:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4tt6
_c4tt7:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tt6:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tsI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tsy, .-_c4tsy


==================== Asm code ====================
2018-03-16 15:59:11.773122805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tsy_info:
	.quad	_c4tsy
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.778026398 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cclearBit_closure
.type GHC.Int.$fBitsInt8_$cclearBit_closure, @object
GHC.Int.$fBitsInt8_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt8_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:11.779023738 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cclearBit_entry
.type GHC.Int.$fBitsInt8_$cclearBit_entry, @object
GHC.Int.$fBitsInt8_$cclearBit_entry:
_c4ttC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ttG
_c4ttH:
	movq $block_c4ttz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ttz
_c4ttA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ttG:
	movl $GHC.Int.$fBitsInt8_$cclearBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cclearBit_entry, .-GHC.Int.$fBitsInt8_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:11.779900075 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cclearBit_info
.type GHC.Int.$fBitsInt8_$cclearBit_info, @object
GHC.Int.$fBitsInt8_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt8_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.781304397 UTC

.section .text
.align 8
_c4ttz:
_c4ttz:
	movq $block_c4ttF_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ttF
_c4ttJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ttz, .-_c4ttz


==================== Asm code ====================
2018-03-16 15:59:11.782079201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ttz_info:
	.quad	_c4ttz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.783187966 UTC

.section .text
.align 8
_c4ttF:
_c4ttF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ttP
_c4ttO:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4tug
_c4tus:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tug:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movsbq %dl,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ttP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ttF, .-_c4ttF


==================== Asm code ====================
2018-03-16 15:59:11.784127746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ttF_info:
	.quad	_c4ttF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.78880665 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$csetBit_closure
.type GHC.Int.$fBitsInt8_$csetBit_closure, @object
GHC.Int.$fBitsInt8_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt8_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:11.789705663 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$csetBit_entry
.type GHC.Int.$fBitsInt8_$csetBit_entry, @object
GHC.Int.$fBitsInt8_$csetBit_entry:
_c4tuY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tv2
_c4tv3:
	movq $block_c4tuV_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tuV
_c4tuW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tv2:
	movl $GHC.Int.$fBitsInt8_$csetBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$csetBit_entry, .-GHC.Int.$fBitsInt8_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:11.790408471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$csetBit_info
.type GHC.Int.$fBitsInt8_$csetBit_info, @object
GHC.Int.$fBitsInt8_$csetBit_info:
	.quad	GHC.Int.$fBitsInt8_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.791138559 UTC

.section .text
.align 8
_c4tuV:
_c4tuV:
	movq $block_c4tv1_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tv1
_c4tv5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tuV, .-_c4tuV


==================== Asm code ====================
2018-03-16 15:59:11.791781187 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tuV_info:
	.quad	_c4tuV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.792611265 UTC

.section .text
.align 8
_c4tv1:
_c4tv1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tvb
_c4tva:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4tvz
_c4tvA:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tvz:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tvb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tv1, .-_c4tv1


==================== Asm code ====================
2018-03-16 15:59:11.793341908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tv1_info:
	.quad	_c4tv1
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.795620027 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateL_closure
.type GHC.Int.$fBitsInt8_$crotateL_closure, @object
GHC.Int.$fBitsInt8_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt8_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:11.796251966 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotateL_entry
.type GHC.Int.$fBitsInt8_$crotateL_entry, @object
GHC.Int.$fBitsInt8_$crotateL_entry:
_c4tw2:
	jmp GHC.Int.$fBitsInt8_$crotate_entry
	.size GHC.Int.$fBitsInt8_$crotateL_entry, .-GHC.Int.$fBitsInt8_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:11.79688321 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateL_info
.type GHC.Int.$fBitsInt8_$crotateL_info, @object
GHC.Int.$fBitsInt8_$crotateL_info:
	.quad	GHC.Int.$fBitsInt8_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:11.799168917 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_closure
.type GHC.Int.$fBitsInt8_closure, @object
GHC.Int.$fBitsInt8_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt8_closure+1
	.quad	GHC.Int.$fBitsInt8_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt8_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt8_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt8_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt8_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt13_closure+1
	.quad	GHC.Int.$fBitsInt8_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt8_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt8_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt8_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt8_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt8_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.801646286 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_closure
.type GHC.Int.$fFiniteBitsInt8_closure, @object
GHC.Int.$fFiniteBitsInt8_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt8_closure+1
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:11.807808446 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_go_closure
.type GHC.Int.$fReadInt8_go_closure, @object
GHC.Int.$fReadInt8_go_closure:
	.quad	GHC.Int.$fReadInt8_go_info


==================== Asm code ====================
2018-03-16 15:59:11.808767544 UTC

.section .text
.align 8
sat_s4lbc_entry:
_c4twu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4twv
_c4tww:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt8_go_entry
_c4twv:
	jmp *-16(%r13)
	.size sat_s4lbc_entry, .-sat_s4lbc_entry


==================== Asm code ====================
2018-03-16 15:59:11.80940624 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lbc_info:
	.quad	sat_s4lbc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:11.810124833 UTC

.section .text
.align 8
sat_s4lba_entry:
_c4twE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4twL
_c4twM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c4twB_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4twB
_c4twC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4twL:
	jmp *-16(%r13)
	.size sat_s4lba_entry, .-sat_s4lba_entry


==================== Asm code ====================
2018-03-16 15:59:11.810737265 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lba_info:
	.quad	sat_s4lba_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:11.81152659 UTC

.section .text
.align 8
_c4twB:
_c4twB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4twP
_c4twO:
	movq 7(%rbx),%rax
	movsbq %al,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4twP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4twB, .-_c4twB


==================== Asm code ====================
2018-03-16 15:59:11.812158837 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4twB_info:
	.quad	_c4twB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.813164357 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_go_entry
.type GHC.Int.$fReadInt8_go_entry, @object
GHC.Int.$fReadInt8_go_entry:
_c4twV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4twW
_c4twX:
	movq $block_c4twf_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4twf
_c4twg:
	movq (%rbx),%rax
	jmp *(%rax)
_c4twW:
	movl $GHC.Int.$fReadInt8_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt8_go_entry, .-GHC.Int.$fReadInt8_go_entry


==================== Asm code ====================
2018-03-16 15:59:11.813920893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_go_info
.type GHC.Int.$fReadInt8_go_info, @object
GHC.Int.$fReadInt8_go_info:
	.quad	GHC.Int.$fReadInt8_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:11.814856552 UTC

.section .text
.align 8
_c4twf:
_c4twf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4twS
_c4twT:
	movq $block_c4twl_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4twl
_c4twm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4twS:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4twf, .-_c4twf


==================== Asm code ====================
2018-03-16 15:59:11.815588323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4twf_info:
	.quad	_c4twf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.816657705 UTC

.section .text
.align 8
_c4twl:
_c4twl:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4tx5
_c4tx4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s4lbc_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq $sat_s4lba_info,-64(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tx5:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4twl, .-_c4twl


==================== Asm code ====================
2018-03-16 15:59:11.817637087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4twl_info:
	.quad	_c4twl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.822830542 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadsPrec_closure
.type GHC.Int.$fReadInt8_$creadsPrec_closure, @object
GHC.Int.$fReadInt8_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt8_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.823747799 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_$creadsPrec_entry
.type GHC.Int.$fReadInt8_$creadsPrec_entry, @object
GHC.Int.$fReadInt8_$creadsPrec_entry:
_c4txN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4txR
_c4txS:
	movq $block_c4txL_info,-16(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq %rsi,%rax
	movq %r14,%rsi
	movl $GHC.Read.$fReadInt2_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Read.$fReadInt_$sreadNumber_entry
_c4txR:
	movl $GHC.Int.$fReadInt8_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt8_$creadsPrec_entry, .-GHC.Int.$fReadInt8_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:11.824414495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadsPrec_info
.type GHC.Int.$fReadInt8_$creadsPrec_info, @object
GHC.Int.$fReadInt8_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt8_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4lDl_srt+472


==================== Asm code ====================
2018-03-16 15:59:11.82515822 UTC

.section .text
.align 8
_c4txL:
_c4txL:
	movq 8(%rbp),%rax
	movq $block_c4txQ_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
	.size _c4txL, .-_c4txL


==================== Asm code ====================
2018-03-16 15:59:11.825858544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4txL_info:
	.quad	_c4txL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.82646984 UTC

.section .text
.align 8
_c4txQ:
_c4txQ:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt8_go_entry
	.size _c4txQ, .-_c4txQ


==================== Asm code ====================
2018-03-16 15:59:11.827005389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4txQ_info:
	.quad	_c4txQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.832307669 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt13_closure
.type GHC.Int.$fReadInt13_closure, @object
GHC.Int.$fReadInt13_closure:
	.quad	GHC.Int.$fReadInt13_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.833413572 UTC

.section .text
.align 8
sat_s4lbj_entry:
_c4tyi:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt8_$creadsPrec_entry
	.size sat_s4lbj_entry, .-sat_s4lbj_entry


==================== Asm code ====================
2018-03-16 15:59:11.834273093 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lbj_info:
	.quad	sat_s4lbj_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4lDl_srt+488


==================== Asm code ====================
2018-03-16 15:59:11.835663685 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt13_entry
.type GHC.Int.$fReadInt13_entry, @object
GHC.Int.$fReadInt13_entry:
_c4tyo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4typ
_c4tyq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tys
_c4tyr:
	movq $sat_s4lbj_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_c4tyl_info,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4tys:
	movq $16,904(%r13)
_c4typ:
	movl $GHC.Int.$fReadInt13_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt13_entry, .-GHC.Int.$fReadInt13_entry


==================== Asm code ====================
2018-03-16 15:59:11.836801704 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt13_info
.type GHC.Int.$fReadInt13_info, @object
GHC.Int.$fReadInt13_info:
	.quad	GHC.Int.$fReadInt13_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+488


==================== Asm code ====================
2018-03-16 15:59:11.837907002 UTC

.section .text
.align 8
_c4tyl:
_c4tyl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tyv
_c4tyu:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tyv:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tyl, .-_c4tyl


==================== Asm code ====================
2018-03-16 15:59:11.838989958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tyl_info:
	.quad	_c4tyl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.841761695 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt1_closure
.type GHC.Int.$fIxInt1_closure, @object
GHC.Int.$fIxInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.846457771 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt12_closure
.type GHC.Int.$fReadInt12_closure, @object
GHC.Int.$fReadInt12_closure:
	.quad	GHC.Int.$fReadInt12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.848674825 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt12_entry
.type GHC.Int.$fReadInt12_entry, @object
GHC.Int.$fReadInt12_entry:
_c4tyP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tyQ
_c4tyR:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4tyO
_c4tyN:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$fReadInt13_closure+2,%r14d
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Int.$fIxInt1_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c4tyQ:
	jmp *-16(%r13)
_c4tyO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt12_entry, .-GHC.Int.$fReadInt12_entry


==================== Asm code ====================
2018-03-16 15:59:11.849974362 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt12_info
.type GHC.Int.$fReadInt12_info, @object
GHC.Int.$fReadInt12_info:
	.quad	GHC.Int.$fReadInt12_entry
	.quad	0
	.quad	12884901909
	.quad	S4lDl_srt+496


==================== Asm code ====================
2018-03-16 15:59:11.853454901 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadList_closure
.type GHC.Int.$fReadInt8_$creadList_closure, @object
GHC.Int.$fReadInt8_$creadList_closure:
	.quad	GHC.Int.$fReadInt8_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.854502672 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_$creadList_entry
.type GHC.Int.$fReadInt8_$creadList_entry, @object
GHC.Int.$fReadInt8_$creadList_entry:
_c4tz3:
	movq %r14,%rsi
	movl $GHC.Int.$fReadInt12_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Int.$fReadInt8_$creadList_entry, .-GHC.Int.$fReadInt8_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:11.855392763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadList_info
.type GHC.Int.$fReadInt8_$creadList_info, @object
GHC.Int.$fReadInt8_$creadList_info:
	.quad	GHC.Int.$fReadInt8_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4lDl_srt+512


==================== Asm code ====================
2018-03-16 15:59:11.860907233 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt11_closure
.type GHC.Int.$fReadInt11_closure, @object
GHC.Int.$fReadInt11_closure:
	.quad	GHC.Int.$fReadInt11_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.862260015 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt11_entry
.type GHC.Int.$fReadInt11_entry, @object
GHC.Int.$fReadInt11_entry:
_c4tzh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tzi
_c4tzj:
	movq $block_c4tze_info,-8(%rbp)
	movl $GHC.Int.$fReadInt8_$creadList_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4tzi:
	movl $GHC.Int.$fReadInt11_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt11_entry, .-GHC.Int.$fReadInt11_entry


==================== Asm code ====================
2018-03-16 15:59:11.862985281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt11_info
.type GHC.Int.$fReadInt11_info, @object
GHC.Int.$fReadInt11_info:
	.quad	GHC.Int.$fReadInt11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+520


==================== Asm code ====================
2018-03-16 15:59:11.864137495 UTC

.section .text
.align 8
_c4tze:
_c4tze:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tzm
_c4tzl:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tzm:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tze, .-_c4tze


==================== Asm code ====================
2018-03-16 15:59:11.865157806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tze_info:
	.quad	_c4tze
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.867682005 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_closure
.type GHC.Int.$fReadInt8_closure, @object
GHC.Int.$fReadInt8_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt8_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt8_$creadList_closure+1
	.quad	GHC.Int.$fReadInt13_closure+2
	.quad	GHC.Int.$fReadInt11_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.876015945 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquot_closure
.type GHC.Int.$fIntegralInt8_$cquot_closure, @object
GHC.Int.$fIntegralInt8_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt8_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.877928962 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cquot_entry
.type GHC.Int.$fIntegralInt8_$cquot_entry, @object
GHC.Int.$fIntegralInt8_$cquot_entry:
_c4tzE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tzI
_c4tzJ:
	movq $block_c4tzB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tzB
_c4tzC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tzI:
	movl $GHC.Int.$fIntegralInt8_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cquot_entry, .-GHC.Int.$fIntegralInt8_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:11.879151096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquot_info
.type GHC.Int.$fIntegralInt8_$cquot_info, @object
GHC.Int.$fIntegralInt8_$cquot_info:
	.quad	GHC.Int.$fIntegralInt8_$cquot_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.880279702 UTC

.section .text
.align 8
_c4tzB:
_c4tzB:
	movq $block_c4tzH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tzH
_c4tzL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tzB, .-_c4tzB


==================== Asm code ====================
2018-03-16 15:59:11.881215296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tzB_info:
	.quad	_c4tzB
	.quad	1
	.quad	12884901918
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.882677557 UTC

.section .text
.align 8
_c4tzH:
_c4tzH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tzR
_c4tzQ:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4tAi
_c4tAg:
	cmpq $-128,%rax
	je _c4tAf
_c4tAe:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4tAi:
	testq %rbx,%rbx
	jne _c4tA2
_c4tAh:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4tAf:
	addq $-16,%r12
	movl $GHC.Real.overflowError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4tA2:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	cqto
	idivq %rbx
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tzR:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tzH, .-_c4tzH


==================== Asm code ====================
2018-03-16 15:59:11.883814906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tzH_info:
	.quad	_c4tzH
	.quad	65
	.quad	12884901918
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.889934908 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$crem_closure
.type GHC.Int.$fIntegralInt8_$crem_closure, @object
GHC.Int.$fIntegralInt8_$crem_closure:
	.quad	GHC.Int.$fIntegralInt8_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.89112919 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$crem_entry
.type GHC.Int.$fIntegralInt8_$crem_entry, @object
GHC.Int.$fIntegralInt8_$crem_entry:
_c4tAM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tAQ
_c4tAR:
	movq $block_c4tAJ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tAJ
_c4tAK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tAQ:
	movl $GHC.Int.$fIntegralInt8_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$crem_entry, .-GHC.Int.$fIntegralInt8_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:11.892087287 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$crem_info
.type GHC.Int.$fIntegralInt8_$crem_info, @object
GHC.Int.$fIntegralInt8_$crem_info:
	.quad	GHC.Int.$fIntegralInt8_$crem_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.893043348 UTC

.section .text
.align 8
_c4tAJ:
_c4tAJ:
	movq $block_c4tAP_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tAP
_c4tAT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tAJ, .-_c4tAJ


==================== Asm code ====================
2018-03-16 15:59:11.893887331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tAJ_info:
	.quad	_c4tAJ
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.895064742 UTC

.section .text
.align 8
_c4tAP:
_c4tAP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tAZ
_c4tAY:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4tBa
_c4tBb:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4tBa:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movsbq %dl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tAZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tAP, .-_c4tAP


==================== Asm code ====================
2018-03-16 15:59:11.895982758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tAP_info:
	.quad	_c4tAP
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.901751292 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv3_closure
.type GHC.Int.$w$cdiv3_closure, @object
GHC.Int.$w$cdiv3_closure:
	.quad	GHC.Int.$w$cdiv3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.903147358 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv3_entry
.type GHC.Int.$w$cdiv3_entry, @object
GHC.Int.$w$cdiv3_entry:
_c4tBD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tBE
_c4tBF:
	cmpq $-1,%rsi
	je _c4tBB
_u4tBZ:
	testq %rsi,%rsi
	je _c4tBC
_c4tBA:
	movq $block_c4tBH_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4tBY:
	movl $GHC.Real.overflowError_closure,%ebx
	jmp stg_ap_0_fast
_c4tBB:
	cmpq $-128,%r14
	je _c4tBY
_c4tBW:
	movq $block_c4tBQ_info,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4tBE:
	movl $GHC.Int.$w$cdiv3_closure,%ebx
	jmp *-8(%r13)
_c4tBC:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdiv3_entry, .-GHC.Int.$w$cdiv3_entry


==================== Asm code ====================
2018-03-16 15:59:11.904237358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv3_info
.type GHC.Int.$w$cdiv3_info, @object
GHC.Int.$w$cdiv3_info:
	.quad	GHC.Int.$w$cdiv3_entry
	.quad	0
	.quad	81604378638
	.quad	8589934604
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.905094632 UTC

.section .text
.align 8
_c4tBQ:
_c4tBQ:
	movsbq %bl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tBQ, .-_c4tBQ


==================== Asm code ====================
2018-03-16 15:59:11.906630186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tBQ_info:
	.quad	_c4tBQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.907474373 UTC

.section .text
.align 8
_c4tBH:
_c4tBH:
	movsbq %bl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tBH, .-_c4tBH


==================== Asm code ====================
2018-03-16 15:59:11.908258437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tBH_info:
	.quad	_c4tBH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.914106779 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdiv_closure
.type GHC.Int.$fIntegralInt8_$cdiv_closure, @object
GHC.Int.$fIntegralInt8_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt8_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.915292903 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cdiv_entry
.type GHC.Int.$fIntegralInt8_$cdiv_entry, @object
GHC.Int.$fIntegralInt8_$cdiv_entry:
_c4tCm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tCz
_c4tCA:
	movq $block_c4tCj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tCj
_c4tCk:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tCz:
	movl $GHC.Int.$fIntegralInt8_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cdiv_entry, .-GHC.Int.$fIntegralInt8_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:11.916248922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdiv_info
.type GHC.Int.$fIntegralInt8_$cdiv_info, @object
GHC.Int.$fIntegralInt8_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt8_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+568


==================== Asm code ====================
2018-03-16 15:59:11.91780987 UTC

.section .text
.align 8
_c4tCj:
_c4tCj:
	movq $block_c4tCp_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tCp
_c4tCq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tCj, .-_c4tCj


==================== Asm code ====================
2018-03-16 15:59:11.918605603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tCj_info:
	.quad	_c4tCj
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+568


==================== Asm code ====================
2018-03-16 15:59:11.919563517 UTC

.section .text
.align 8
_c4tCp:
_c4tCp:
	movq 8(%rbp),%rax
	movq $block_c4tCu_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv3_entry
	.size _c4tCp, .-_c4tCp


==================== Asm code ====================
2018-03-16 15:59:11.920316237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tCp_info:
	.quad	_c4tCp
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+568


==================== Asm code ====================
2018-03-16 15:59:11.92135304 UTC

.section .text
.align 8
_c4tCu:
_c4tCu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tCF
_c4tCE:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tCF:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4tCu, .-_c4tCu


==================== Asm code ====================
2018-03-16 15:59:11.922159033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tCu_info:
	.quad	_c4tCu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.928464444 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cmod_closure
.type GHC.Int.$fIntegralInt8_$cmod_closure, @object
GHC.Int.$fIntegralInt8_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt8_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.929664983 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cmod_entry
.type GHC.Int.$fIntegralInt8_$cmod_entry, @object
GHC.Int.$fIntegralInt8_$cmod_entry:
_c4tD6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tDa
_c4tDb:
	movq $block_c4tD3_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tD3
_c4tD4:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tDa:
	movl $GHC.Int.$fIntegralInt8_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cmod_entry, .-GHC.Int.$fIntegralInt8_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:11.930664794 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cmod_info
.type GHC.Int.$fIntegralInt8_$cmod_info, @object
GHC.Int.$fIntegralInt8_$cmod_info:
	.quad	GHC.Int.$fIntegralInt8_$cmod_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.931687393 UTC

.section .text
.align 8
_c4tD3:
_c4tD3:
	movq $block_c4tD9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tD9
_c4tDd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tD3, .-_c4tD3


==================== Asm code ====================
2018-03-16 15:59:11.9331796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tD3_info:
	.quad	_c4tD3
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.934429564 UTC

.section .text
.align 8
_c4tD9:
_c4tD9:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4tDt
_c4tDx:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4tDt:
	movq 8(%rbp),%rbx
	movq $block_c4tDk_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _c4tD9, .-_c4tD9


==================== Asm code ====================
2018-03-16 15:59:11.935232056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tD9_info:
	.quad	_c4tD9
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.936259308 UTC

.section .text
.align 8
_c4tDk:
_c4tDk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tDw
_c4tDv:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tDw:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4tDk, .-_c4tDk


==================== Asm code ====================
2018-03-16 15:59:11.937156905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tDk_info:
	.quad	_c4tDk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.939549576 UTC

.section .data
.align 8
.align 1
lvl6_r4kPx_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt13_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.947021411 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquotRem_closure
.type GHC.Int.$fIntegralInt8_$cquotRem_closure, @object
GHC.Int.$fIntegralInt8_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.948147064 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cquotRem_entry
.type GHC.Int.$fIntegralInt8_$cquotRem_entry, @object
GHC.Int.$fIntegralInt8_$cquotRem_entry:
_c4tE1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tE5
_c4tE6:
	movq $block_c4tDY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tDY
_c4tDZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tE5:
	movl $GHC.Int.$fIntegralInt8_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cquotRem_entry, .-GHC.Int.$fIntegralInt8_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:11.949039726 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquotRem_info
.type GHC.Int.$fIntegralInt8_$cquotRem_info, @object
GHC.Int.$fIntegralInt8_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_entry
	.quad	0
	.quad	1653562408974
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.950511316 UTC

.section .text
.align 8
_c4tDY:
_c4tDY:
	movq $block_c4tE4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tE4
_c4tE8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tDY, .-_c4tDY


==================== Asm code ====================
2018-03-16 15:59:11.951311385 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tDY_info:
	.quad	_c4tDY
	.quad	1
	.quad	1103806595102
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.952876286 UTC

.section .text
.align 8
_c4tE4:
_c4tE4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4tEe
_c4tEd:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4tEJ
_c4tEH:
	cmpq $-128,%rax
	je _c4tEG
_c4tEF:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-48(%r12)
	movsbq %dl,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I8#_con_info,-32(%r12)
	movsbq %al,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4tEJ:
	testq %rbx,%rbx
	jne _c4tEr
_c4tEI:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4tEG:
	addq $-56,%r12
	movl $lvl6_r4kPx_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tEr:
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-48(%r12)
	movsbq %dl,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I8#_con_info,-32(%r12)
	movsbq %al,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tEe:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tE4, .-_c4tE4


==================== Asm code ====================
2018-03-16 15:59:11.954317906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tE4_info:
	.quad	_c4tE4
	.quad	65
	.quad	1103806595102
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.966308003 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod3_closure
.type GHC.Int.$w$cdivMod3_closure, @object
GHC.Int.$w$cdivMod3_closure:
	.quad	GHC.Int.$w$cdivMod3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.967660935 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod3_entry
.type GHC.Int.$w$cdivMod3_entry, @object
GHC.Int.$w$cdivMod3_entry:
_c4tFn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tFo
_c4tFp:
	testq %rsi,%rsi
	je _c4tFm
_c4tFl:
	cmpq $-1,%rsi
	je _c4tHS
_u4tHT:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4tFu
_c4tHS:
	cmpq $-128,%r14
	je _c4tHR
_u4tHU:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4tFu
_c4tHR:
	movl $GHC.Int.$fBitsInt13_closure+1,%r14d
	movl $GHC.Real.overflowError_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4tFo:
	movl $GHC.Int.$w$cdivMod3_closure,%ebx
	jmp *-8(%r13)
_c4tFm:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdivMod3_entry, .-GHC.Int.$w$cdivMod3_entry


==================== Asm code ====================
2018-03-16 15:59:11.968737302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod3_info
.type GHC.Int.$w$cdivMod3_info, @object
GHC.Int.$w$cdivMod3_info:
	.quad	GHC.Int.$w$cdivMod3_entry
	.quad	0
	.quad	2211908157454
	.quad	8589934604
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:11.970917192 UTC

.section .text
.align 8
_c4tFu:
_c4tFu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4tFy
_c4tFx:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4tGr
_c4tHI:
	testq %rbx,%rbx
	jge _c4tHl
_c4tHH:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tHl:
	testq %rax,%rax
	jge _c4tGI
_c4tHj:
	testq %rbx,%rbx
	jle _c4tGW
_c4tHi:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tGW:
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tGI:
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tGr:
	testq %rax,%rax
	jge _c4tFO
_c4tGp:
	testq %rbx,%rbx
	jle _c4tG2
_c4tGo:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tG2:
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tFO:
	cqto
	idivq %rbx
	movq $GHC.Int.I8#_con_info,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tFy:
	movq $32,904(%r13)
	movq $block_c4tFu_info,(%rbp)
	jmp stg_gc_noregs
	.size _c4tFu, .-_c4tFu


==================== Asm code ====================
2018-03-16 15:59:11.972701631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tFu_info:
	.quad	_c4tFu
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.978797864 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdivMod_closure
.type GHC.Int.$fIntegralInt8_$cdivMod_closure, @object
GHC.Int.$fIntegralInt8_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.97993876 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cdivMod_entry
.type GHC.Int.$fIntegralInt8_$cdivMod_entry, @object
GHC.Int.$fIntegralInt8_$cdivMod_entry:
_c4tIS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tJ3
_c4tJ4:
	movq $block_c4tIP_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tIP
_c4tIQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tJ3:
	movl $GHC.Int.$fIntegralInt8_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cdivMod_entry, .-GHC.Int.$fIntegralInt8_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:11.980828087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdivMod_info
.type GHC.Int.$fIntegralInt8_$cdivMod_info, @object
GHC.Int.$fIntegralInt8_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+608


==================== Asm code ====================
2018-03-16 15:59:11.981904329 UTC

.section .text
.align 8
_c4tIP:
_c4tIP:
	movq $block_c4tIV_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tIV
_c4tIW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tIP, .-_c4tIP


==================== Asm code ====================
2018-03-16 15:59:11.982788494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tIP_info:
	.quad	_c4tIP
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+608


==================== Asm code ====================
2018-03-16 15:59:11.983655917 UTC

.section .text
.align 8
_c4tIV:
_c4tIV:
	movq 8(%rbp),%rax
	movq $block_c4tJ0_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod3_entry
	.size _c4tIV, .-_c4tIV


==================== Asm code ====================
2018-03-16 15:59:11.98447525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tIV_info:
	.quad	_c4tIV
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+608


==================== Asm code ====================
2018-03-16 15:59:11.985517798 UTC

.section .text
.align 8
_c4tJ0:
_c4tJ0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4tJ9
_c4tJ8:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tJ9:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4tJ0, .-_c4tJ0


==================== Asm code ====================
2018-03-16 15:59:11.986391071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tJ0_info:
	.quad	_c4tJ0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:11.989382311 UTC

.section .data
.align 8
.align 1
sat_s4ldU_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:11.99186191 UTC

.section .data
.align 8
.align 1
sat_s4ldV_closure:
	.quad	:_con_info
	.quad	sat_s4ldU_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.99562501 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt1_closure
.type GHC.Int.$fRealInt1_closure, @object
GHC.Int.$fRealInt1_closure:
	.quad	GHC.Int.$fRealInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:11.99693362 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt1_entry
.type GHC.Int.$fRealInt1_entry, @object
GHC.Int.$fRealInt1_entry:
_c4tJB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tJC
_c4tJD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4tJA
_c4tJz:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s4ldV_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c4tJC:
	jmp *-16(%r13)
_c4tJA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fRealInt1_entry, .-GHC.Int.$fRealInt1_entry


==================== Asm code ====================
2018-03-16 15:59:11.998422143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt1_info
.type GHC.Int.$fRealInt1_info, @object
GHC.Int.$fRealInt1_info:
	.quad	GHC.Int.$fRealInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S4lDl_srt+624


==================== Asm code ====================
2018-03-16 15:59:12.004389225 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt8_$ctoRational_closure
.type GHC.Int.$fRealInt8_$ctoRational_closure, @object
GHC.Int.$fRealInt8_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt8_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.005522599 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt8_$ctoRational_entry
.type GHC.Int.$fRealInt8_$ctoRational_entry, @object
GHC.Int.$fRealInt8_$ctoRational_entry:
_c4tJS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tK6
_c4tK7:
	movq $block_c4tJP_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tJP
_c4tJQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tK6:
	movl $GHC.Int.$fRealInt8_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt8_$ctoRational_entry, .-GHC.Int.$fRealInt8_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:12.006394116 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt8_$ctoRational_info
.type GHC.Int.$fRealInt8_$ctoRational_info, @object
GHC.Int.$fRealInt8_$ctoRational_info:
	.quad	GHC.Int.$fRealInt8_$ctoRational_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.007231263 UTC

.section .text
.align 8
_c4tJP:
_c4tJP:
	movq $block_c4tJV_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4tJP, .-_c4tJP


==================== Asm code ====================
2018-03-16 15:59:12.00803322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tJP_info:
	.quad	_c4tJP
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.008876102 UTC

.section .text
.align 8
_c4tJV:
_c4tJV:
	movq $block_c4tJZ_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c4tJV, .-_c4tJV


==================== Asm code ====================
2018-03-16 15:59:12.00972329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tJV_info:
	.quad	_c4tJV
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.01059986 UTC

.section .text
.align 8
_c4tJZ:
_c4tJZ:
	movq $block_c4tK3_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c4tJZ, .-_c4tJZ


==================== Asm code ====================
2018-03-16 15:59:12.011449857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tJZ_info:
	.quad	_c4tJZ
	.quad	0
	.quad	12884901918
	.quad	S4lDl_srt+640


==================== Asm code ====================
2018-03-16 15:59:12.012448967 UTC

.section .text
.align 8
_c4tK3:
_c4tK3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4tKd
_c4tKc:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tKd:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4tK3, .-_c4tK3


==================== Asm code ====================
2018-03-16 15:59:12.013411454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tK3_info:
	.quad	_c4tK3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.016504084 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt8_closure
.type GHC.Int.$fRealInt8_closure, @object
GHC.Int.$fRealInt8_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt8_closure+1
	.quad	GHC.Int.$fOrdInt8_closure+1
	.quad	GHC.Int.$fRealInt8_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.022869605 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_closure
.type GHC.Int.$fIntegralInt8_closure, @object
GHC.Int.$fIntegralInt8_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt8_closure+1
	.quad	GHC.Int.$fEnumInt8_closure+1
	.quad	GHC.Int.$fIntegralInt8_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt8_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.028626391 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeIndex_closure
.type GHC.Int.$fIxInt8_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt8_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:12.029778918 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cunsafeIndex_entry
.type GHC.Int.$fIxInt8_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt8_$cunsafeIndex_entry:
_c4tKH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tKY
_c4tKZ:
	movq $block_c4tKE_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tKE
_c4tKF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tKY:
	movl $GHC.Int.$fIxInt8_$cunsafeIndex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cunsafeIndex_entry, .-GHC.Int.$fIxInt8_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:12.030681646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeIndex_info
.type GHC.Int.$fIxInt8_$cunsafeIndex_info, @object
GHC.Int.$fIxInt8_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.031449145 UTC

.section .text
.align 8
_c4tKE:
_c4tKE:
	movq $block_c4tKK_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tKK
_c4tKL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tKE, .-_c4tKE


==================== Asm code ====================
2018-03-16 15:59:12.032048123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tKE_info:
	.quad	_c4tKE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.032725994 UTC

.section .text
.align 8
_c4tKK:
_c4tKK:
	movq $block_c4tKP_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tKP
_c4tKQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tKK, .-_c4tKK


==================== Asm code ====================
2018-03-16 15:59:12.033494941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tKK_info:
	.quad	_c4tKK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.034305746 UTC

.section .text
.align 8
_c4tKP:
_c4tKP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tL4
_c4tL3:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tL4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tKP, .-_c4tKP


==================== Asm code ====================
2018-03-16 15:59:12.034999252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tKP_info:
	.quad	_c4tKP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.038916703 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crange_closure
.type GHC.Int.$fIxInt8_$crange_closure, @object
GHC.Int.$fIxInt8_$crange_closure:
	.quad	GHC.Int.$fIxInt8_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.039963097 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$crange_entry
.type GHC.Int.$fIxInt8_$crange_entry, @object
GHC.Int.$fIxInt8_$crange_entry:
_c4tLz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tLA
_c4tLB:
	movq $block_c4tLw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tLw
_c4tLx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tLA:
	movl $GHC.Int.$fIxInt8_$crange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$crange_entry, .-GHC.Int.$fIxInt8_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:12.040732182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crange_info
.type GHC.Int.$fIxInt8_$crange_info, @object
GHC.Int.$fIxInt8_$crange_info:
	.quad	GHC.Int.$fIxInt8_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+664


==================== Asm code ====================
2018-03-16 15:59:12.041525278 UTC

.section .text
.align 8
_c4tLw:
_c4tLw:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt8_$cenumFromTo_entry
	.size _c4tLw, .-_c4tLw


==================== Asm code ====================
2018-03-16 15:59:12.042162388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tLw_info:
	.quad	_c4tLw
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+672


==================== Asm code ====================
2018-03-16 15:59:12.047558877 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crangeSize_closure
.type GHC.Int.$fIxInt8_$crangeSize_closure, @object
GHC.Int.$fIxInt8_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt8_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.048603411 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$crangeSize_entry
.type GHC.Int.$fIxInt8_$crangeSize_entry, @object
GHC.Int.$fIxInt8_$crangeSize_entry:
_c4tLW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tM5
_c4tM6:
	movq $block_c4tLT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tLT
_c4tLU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tM5:
	movl $GHC.Int.$fIxInt8_$crangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$crangeSize_entry, .-GHC.Int.$fIxInt8_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.049757089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crangeSize_info
.type GHC.Int.$fIxInt8_$crangeSize_info, @object
GHC.Int.$fIxInt8_$crangeSize_info:
	.quad	GHC.Int.$fIxInt8_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.050790533 UTC

.section .text
.align 8
_c4tLT:
_c4tLT:
	movq $block_c4tLZ_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tLZ
_c4tM0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tLT, .-_c4tLT


==================== Asm code ====================
2018-03-16 15:59:12.051561956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tLT_info:
	.quad	_c4tLT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.05225143 UTC

.section .text
.align 8
_c4tLZ:
_c4tLZ:
	movq $block_c4tM4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tM4
_c4tM9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tLZ, .-_c4tLZ


==================== Asm code ====================
2018-03-16 15:59:12.05305402 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tLZ_info:
	.quad	_c4tLZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.054041401 UTC

.section .text
.align 8
_c4tM4:
_c4tM4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tMf
_c4tMe:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4tMj
_c4tMt:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tMj:
	addq $-16,%r12
	movl $GHC.Int.$fIxInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tMf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tM4, .-_c4tM4


==================== Asm code ====================
2018-03-16 15:59:12.054809848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tM4_info:
	.quad	_c4tM4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.060925528 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.062265148 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_entry:
_c4tN0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tNk
_c4tNl:
	movq $block_c4tMX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tMX
_c4tMY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tNk:
	movl $GHC.Int.$fIxInt8_$cunsafeRangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt8_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.063096837 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.063837201 UTC

.section .text
.align 8
_c4tMX:
_c4tMX:
	movq $block_c4tN3_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tN3
_c4tN4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tMX, .-_c4tMX


==================== Asm code ====================
2018-03-16 15:59:12.064640028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tMX_info:
	.quad	_c4tMX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.065836326 UTC

.section .text
.align 8
_c4tN3:
_c4tN3:
	movq $block_c4tN8_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tN8
_c4tN9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tN3, .-_c4tN3


==================== Asm code ====================
2018-03-16 15:59:12.066436419 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tN3_info:
	.quad	_c4tN3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.067976581 UTC

.section .text
.align 8
_c4tN8:
_c4tN8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tNq
_c4tNp:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tNq:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tN8, .-_c4tN8


==================== Asm code ====================
2018-03-16 15:59:12.068722876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tN8_info:
	.quad	_c4tN8
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.07409539 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cindex_closure
.type GHC.Int.$fIxInt8_$cindex_closure, @object
GHC.Int.$fIxInt8_$cindex_closure:
	.quad	GHC.Int.$fIxInt8_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.07498902 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cindex_entry
.type GHC.Int.$fIxInt8_$cindex_entry, @object
GHC.Int.$fIxInt8_$cindex_entry:
_c4tNW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tO5
_c4tO6:
	movq $block_c4tNT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tNT
_c4tNU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tO5:
	movl $GHC.Int.$fIxInt8_$cindex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cindex_entry, .-GHC.Int.$fIxInt8_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:12.075687035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cindex_info
.type GHC.Int.$fIxInt8_$cindex_info, @object
GHC.Int.$fIxInt8_$cindex_info:
	.quad	GHC.Int.$fIxInt8_$cindex_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.076707521 UTC

.section .text
.align 8
_c4tNT:
_c4tNT:
	movq $block_c4tNZ_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tNZ
_c4tO0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tNT, .-_c4tNT


==================== Asm code ====================
2018-03-16 15:59:12.077668712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tNT_info:
	.quad	_c4tNT
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.07850981 UTC

.section .text
.align 8
_c4tNZ:
_c4tNZ:
	movq $block_c4tO4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4tO4
_c4tO9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tNZ, .-_c4tNZ


==================== Asm code ====================
2018-03-16 15:59:12.079112301 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tNZ_info:
	.quad	_c4tNZ
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.079915737 UTC

.section .text
.align 8
_c4tO4:
_c4tO4:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4tOh
_c4tOl:
	movq $block_c4tOk_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tOk
_c4tOm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tOh:
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tO4, .-_c4tO4


==================== Asm code ====================
2018-03-16 15:59:12.080649226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tO4_info:
	.quad	_c4tO4
	.quad	130
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.08182738 UTC

.section .text
.align 8
_c4tOk:
_c4tOk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tOs
_c4tOr:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4tOw
_c4tOD:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tOw:
	addq $-16,%r12
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tOs:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tOk, .-_c4tOk


==================== Asm code ====================
2018-03-16 15:59:12.082636639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tOk_info:
	.quad	_c4tOk
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.084544879 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_closure
.type GHC.Int.$fIxInt8_closure, @object
GHC.Int.$fIxInt8_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt8_closure+1
	.quad	GHC.Int.$fIxInt8_$crange_closure+1
	.quad	GHC.Int.$fIxInt8_$cindex_closure+2
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt8_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt8_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.090004949 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt16_closure
.type GHC.Int.eqInt16_closure, @object
GHC.Int.eqInt16_closure:
	.quad	GHC.Int.eqInt16_info


==================== Asm code ====================
2018-03-16 15:59:12.091285831 UTC

.section .text
.align 8
.globl GHC.Int.eqInt16_entry
.type GHC.Int.eqInt16_entry, @object
GHC.Int.eqInt16_entry:
_c4tPg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tPk
_c4tPl:
	movq $block_c4tPd_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tPd
_c4tPe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tPk:
	movl $GHC.Int.eqInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.eqInt16_entry, .-GHC.Int.eqInt16_entry


==================== Asm code ====================
2018-03-16 15:59:12.092226185 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt16_info
.type GHC.Int.eqInt16_info, @object
GHC.Int.eqInt16_info:
	.quad	GHC.Int.eqInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.093102699 UTC

.section .text
.align 8
_c4tPd:
_c4tPd:
	movq $block_c4tPj_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tPj
_c4tPn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tPd, .-_c4tPd


==================== Asm code ====================
2018-03-16 15:59:12.093807718 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tPd_info:
	.quad	_c4tPd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.094742079 UTC

.section .text
.align 8
_c4tPj:
_c4tPj:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tPj, .-_c4tPj


==================== Asm code ====================
2018-03-16 15:59:12.095621298 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tPj_info:
	.quad	_c4tPj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.098237489 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt16_closure
.type GHC.Int.$fEqInt16_closure, @object
GHC.Int.$fEqInt16_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt16_closure+2
	.quad	GHC.Int.neInt16_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.103530976 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt16_closure
.type GHC.Int.gtInt16_closure, @object
GHC.Int.gtInt16_closure:
	.quad	GHC.Int.gtInt16_info


==================== Asm code ====================
2018-03-16 15:59:12.104490183 UTC

.section .text
.align 8
.globl GHC.Int.gtInt16_entry
.type GHC.Int.gtInt16_entry, @object
GHC.Int.gtInt16_entry:
_c4tPU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tPY
_c4tPZ:
	movq $block_c4tPR_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tPR
_c4tPS:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tPY:
	movl $GHC.Int.gtInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.gtInt16_entry, .-GHC.Int.gtInt16_entry


==================== Asm code ====================
2018-03-16 15:59:12.105215034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt16_info
.type GHC.Int.gtInt16_info, @object
GHC.Int.gtInt16_info:
	.quad	GHC.Int.gtInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.105927845 UTC

.section .text
.align 8
_c4tPR:
_c4tPR:
	movq $block_c4tPX_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tPX
_c4tQ1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tPR, .-_c4tPR


==================== Asm code ====================
2018-03-16 15:59:12.10655494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tPR_info:
	.quad	_c4tPR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.107496645 UTC

.section .text
.align 8
_c4tPX:
_c4tPX:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tPX, .-_c4tPX


==================== Asm code ====================
2018-03-16 15:59:12.108402176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tPX_info:
	.quad	_c4tPX
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.114742479 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt16_closure
.type GHC.Int.geInt16_closure, @object
GHC.Int.geInt16_closure:
	.quad	GHC.Int.geInt16_info


==================== Asm code ====================
2018-03-16 15:59:12.116013996 UTC

.section .text
.align 8
.globl GHC.Int.geInt16_entry
.type GHC.Int.geInt16_entry, @object
GHC.Int.geInt16_entry:
_c4tQx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tQB
_c4tQC:
	movq $block_c4tQu_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tQu
_c4tQv:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tQB:
	movl $GHC.Int.geInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.geInt16_entry, .-GHC.Int.geInt16_entry


==================== Asm code ====================
2018-03-16 15:59:12.116998768 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt16_info
.type GHC.Int.geInt16_info, @object
GHC.Int.geInt16_info:
	.quad	GHC.Int.geInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.118578563 UTC

.section .text
.align 8
_c4tQu:
_c4tQu:
	movq $block_c4tQA_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tQA
_c4tQE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tQu, .-_c4tQu


==================== Asm code ====================
2018-03-16 15:59:12.119191368 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tQu_info:
	.quad	_c4tQu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.119940041 UTC

.section .text
.align 8
_c4tQA:
_c4tQA:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tQA, .-_c4tQA


==================== Asm code ====================
2018-03-16 15:59:12.120526081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tQA_info:
	.quad	_c4tQA
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.124280499 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt16_closure
.type GHC.Int.ltInt16_closure, @object
GHC.Int.ltInt16_closure:
	.quad	GHC.Int.ltInt16_info


==================== Asm code ====================
2018-03-16 15:59:12.125156149 UTC

.section .text
.align 8
.globl GHC.Int.ltInt16_entry
.type GHC.Int.ltInt16_entry, @object
GHC.Int.ltInt16_entry:
_c4tRa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tRe
_c4tRf:
	movq $block_c4tR7_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tR7
_c4tR8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tRe:
	movl $GHC.Int.ltInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.ltInt16_entry, .-GHC.Int.ltInt16_entry


==================== Asm code ====================
2018-03-16 15:59:12.125845265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt16_info
.type GHC.Int.ltInt16_info, @object
GHC.Int.ltInt16_info:
	.quad	GHC.Int.ltInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.126677736 UTC

.section .text
.align 8
_c4tR7:
_c4tR7:
	movq $block_c4tRd_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tRd
_c4tRh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tR7, .-_c4tR7


==================== Asm code ====================
2018-03-16 15:59:12.127376501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tR7_info:
	.quad	_c4tR7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.128037972 UTC

.section .text
.align 8
_c4tRd:
_c4tRd:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tRd, .-_c4tRd


==================== Asm code ====================
2018-03-16 15:59:12.128641378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tRd_info:
	.quad	_c4tRd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.132538324 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt16_closure
.type GHC.Int.leInt16_closure, @object
GHC.Int.leInt16_closure:
	.quad	GHC.Int.leInt16_info


==================== Asm code ====================
2018-03-16 15:59:12.133446841 UTC

.section .text
.align 8
.globl GHC.Int.leInt16_entry
.type GHC.Int.leInt16_entry, @object
GHC.Int.leInt16_entry:
_c4tRN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tRR
_c4tRS:
	movq $block_c4tRK_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tRK
_c4tRL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tRR:
	movl $GHC.Int.leInt16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.leInt16_entry, .-GHC.Int.leInt16_entry


==================== Asm code ====================
2018-03-16 15:59:12.134332121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt16_info
.type GHC.Int.leInt16_info, @object
GHC.Int.leInt16_info:
	.quad	GHC.Int.leInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.135753513 UTC

.section .text
.align 8
_c4tRK:
_c4tRK:
	movq $block_c4tRQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tRQ
_c4tRU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tRK, .-_c4tRK


==================== Asm code ====================
2018-03-16 15:59:12.136523266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tRK_info:
	.quad	_c4tRK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.13717495 UTC

.section .text
.align 8
_c4tRQ:
_c4tRQ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tRQ, .-_c4tRQ


==================== Asm code ====================
2018-03-16 15:59:12.138105333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tRQ_info:
	.quad	_c4tRQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.142191549 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$ccompare_closure
.type GHC.Int.$fOrdInt16_$ccompare_closure, @object
GHC.Int.$fOrdInt16_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt16_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:12.143041293 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$ccompare_entry
.type GHC.Int.$fOrdInt16_$ccompare_entry, @object
GHC.Int.$fOrdInt16_$ccompare_entry:
_c4tSq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tSu
_c4tSv:
	movq $block_c4tSn_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tSn
_c4tSo:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tSu:
	movl $GHC.Int.$fOrdInt16_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$ccompare_entry, .-GHC.Int.$fOrdInt16_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:12.143715935 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$ccompare_info
.type GHC.Int.$fOrdInt16_$ccompare_info, @object
GHC.Int.$fOrdInt16_$ccompare_info:
	.quad	GHC.Int.$fOrdInt16_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.144415624 UTC

.section .text
.align 8
_c4tSn:
_c4tSn:
	movq $block_c4tSt_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tSt
_c4tSx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tSn, .-_c4tSn


==================== Asm code ====================
2018-03-16 15:59:12.144975898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tSn_info:
	.quad	_c4tSn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.145839731 UTC

.section .text
.align 8
_c4tSt:
_c4tSt:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4tSM
_c4tSL:
	cmpq %rbx,%rax
	jg _c4tSI
_c4tSJ:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tSM:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tSI:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tSt, .-_c4tSt


==================== Asm code ====================
2018-03-16 15:59:12.146523364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tSt_info:
	.quad	_c4tSt
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.153210944 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmax_closure
.type GHC.Int.$fOrdInt16_$cmax_closure, @object
GHC.Int.$fOrdInt16_$cmax_closure:
	.quad	GHC.Int.$fOrdInt16_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:12.15415953 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$cmax_entry
.type GHC.Int.$fOrdInt16_$cmax_entry, @object
GHC.Int.$fOrdInt16_$cmax_entry:
_c4tTc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tTg
_c4tTh:
	movq $block_c4tT9_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tT9
_c4tTa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tTg:
	movl $GHC.Int.$fOrdInt16_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$cmax_entry, .-GHC.Int.$fOrdInt16_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:12.154867477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmax_info
.type GHC.Int.$fOrdInt16_$cmax_info, @object
GHC.Int.$fOrdInt16_$cmax_info:
	.quad	GHC.Int.$fOrdInt16_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.155656561 UTC

.section .text
.align 8
_c4tT9:
_c4tT9:
	movq $block_c4tTf_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tTf
_c4tTj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tT9, .-_c4tT9


==================== Asm code ====================
2018-03-16 15:59:12.156430312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tT9_info:
	.quad	_c4tT9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.157212722 UTC

.section .text
.align 8
_c4tTf:
_c4tTf:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4tTr
_c4tTs:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tTr:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tTf, .-_c4tTf


==================== Asm code ====================
2018-03-16 15:59:12.158436444 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tTf_info:
	.quad	_c4tTf
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.162858301 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmin_closure
.type GHC.Int.$fOrdInt16_$cmin_closure, @object
GHC.Int.$fOrdInt16_$cmin_closure:
	.quad	GHC.Int.$fOrdInt16_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:12.163688621 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$cmin_entry
.type GHC.Int.$fOrdInt16_$cmin_entry, @object
GHC.Int.$fOrdInt16_$cmin_entry:
_c4tTU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tTY
_c4tTZ:
	movq $block_c4tTR_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tTR
_c4tTS:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tTY:
	movl $GHC.Int.$fOrdInt16_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$cmin_entry, .-GHC.Int.$fOrdInt16_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:12.164342432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmin_info
.type GHC.Int.$fOrdInt16_$cmin_info, @object
GHC.Int.$fOrdInt16_$cmin_info:
	.quad	GHC.Int.$fOrdInt16_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.165055593 UTC

.section .text
.align 8
_c4tTR:
_c4tTR:
	movq $block_c4tTX_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tTX
_c4tU1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tTR, .-_c4tTR


==================== Asm code ====================
2018-03-16 15:59:12.165755178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tTR_info:
	.quad	_c4tTR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.166453079 UTC

.section .text
.align 8
_c4tTX:
_c4tTX:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4tU9
_c4tUa:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tU9:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tTX, .-_c4tTX


==================== Asm code ====================
2018-03-16 15:59:12.167240152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tTX_info:
	.quad	_c4tTX
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.170338979 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_closure
.type GHC.Int.$fOrdInt16_closure, @object
GHC.Int.$fOrdInt16_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt16_closure+1
	.quad	GHC.Int.$fOrdInt16_$ccompare_closure+2
	.quad	GHC.Int.ltInt16_closure+2
	.quad	GHC.Int.leInt16_closure+2
	.quad	GHC.Int.gtInt16_closure+2
	.quad	GHC.Int.geInt16_closure+2
	.quad	GHC.Int.$fOrdInt16_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt16_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.175332302 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cinRange_closure
.type GHC.Int.$fIxInt16_$cinRange_closure, @object
GHC.Int.$fIxInt16_$cinRange_closure:
	.quad	GHC.Int.$fIxInt16_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:12.176234193 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cinRange_entry
.type GHC.Int.$fIxInt16_$cinRange_entry, @object
GHC.Int.$fIxInt16_$cinRange_entry:
_c4tUD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tUM
_c4tUN:
	movq $block_c4tUA_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tUA
_c4tUB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tUM:
	movl $GHC.Int.$fIxInt16_$cinRange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cinRange_entry, .-GHC.Int.$fIxInt16_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:12.176953739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cinRange_info
.type GHC.Int.$fIxInt16_$cinRange_info, @object
GHC.Int.$fIxInt16_$cinRange_info:
	.quad	GHC.Int.$fIxInt16_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.177808855 UTC

.section .text
.align 8
_c4tUA:
_c4tUA:
	movq $block_c4tUG_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tUG
_c4tUH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tUA, .-_c4tUA


==================== Asm code ====================
2018-03-16 15:59:12.179002555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tUA_info:
	.quad	_c4tUA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.179774113 UTC

.section .text
.align 8
_c4tUG:
_c4tUG:
	movq $block_c4tUL_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4tUL
_c4tUQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tUG, .-_c4tUG


==================== Asm code ====================
2018-03-16 15:59:12.180374531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tUG_info:
	.quad	_c4tUG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.181219852 UTC

.section .text
.align 8
_c4tUL:
_c4tUL:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4tUY
_c4tV2:
	movq 8(%rbp),%rbx
	movq $block_c4tV1_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4tV1
_c4tV3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tUY:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tUL, .-_c4tUL


==================== Asm code ====================
2018-03-16 15:59:12.182456875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tUL_info:
	.quad	_c4tUL
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.18311374 UTC

.section .text
.align 8
_c4tV1:
_c4tV1:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tV1, .-_c4tV1


==================== Asm code ====================
2018-03-16 15:59:12.18389284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tV1_info:
	.quad	_c4tV1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.186508649 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt1_closure
.type GHC.Int.$fNumInt1_closure, @object
GHC.Int.$fNumInt1_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:12.189963685 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$csignum_closure
.type GHC.Int.$fNumInt16_$csignum_closure, @object
GHC.Int.$fNumInt16_$csignum_closure:
	.quad	GHC.Int.$fNumInt16_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:12.190805669 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$csignum_entry
.type GHC.Int.$fNumInt16_$csignum_entry, @object
GHC.Int.$fNumInt16_$csignum_entry:
_c4tVL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tVM
_c4tVN:
	movq $block_c4tVI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tVI
_c4tVJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tVM:
	movl $GHC.Int.$fNumInt16_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$csignum_entry, .-GHC.Int.$fNumInt16_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:12.191471595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$csignum_info
.type GHC.Int.$fNumInt16_$csignum_info, @object
GHC.Int.$fNumInt16_$csignum_info:
	.quad	GHC.Int.$fNumInt16_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.19222807 UTC

.section .text
.align 8
_c4tVI:
_c4tVI:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4tVZ
_c4tW0:
	movl $GHC.Int.$fNumInt1_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tVX:
	movl $GHC.Int.$fBitsInt3_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tVZ:
	testq %rax,%rax
	je _c4tVX
_c4tVW:
	movl $GHC.Int.$fNumInt2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tVI, .-_c4tVI


==================== Asm code ====================
2018-03-16 15:59:12.192906462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tVI_info:
	.quad	_c4tVI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.196845649 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cabs_closure
.type GHC.Int.$fNumInt16_$cabs_closure, @object
GHC.Int.$fNumInt16_$cabs_closure:
	.quad	GHC.Int.$fNumInt16_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:12.198052336 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cabs_entry
.type GHC.Int.$fNumInt16_$cabs_entry, @object
GHC.Int.$fNumInt16_$cabs_entry:
_c4tWl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tWm
_c4tWn:
	movq $block_c4tWi_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tWi
_c4tWj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tWm:
	movl $GHC.Int.$fNumInt16_$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cabs_entry, .-GHC.Int.$fNumInt16_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:12.199217049 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cabs_info
.type GHC.Int.$fNumInt16_$cabs_info, @object
GHC.Int.$fNumInt16_$cabs_info:
	.quad	GHC.Int.$fNumInt16_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.200116043 UTC

.section .text
.align 8
_c4tWi:
_c4tWi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tWs
_c4tWr:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4tWE
_c4tWF:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4tWE:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	negq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tWs:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tWi, .-_c4tWi


==================== Asm code ====================
2018-03-16 15:59:12.200778105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tWi_info:
	.quad	_c4tWi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.202703122 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_closure
.type GHC.Int.$fNumInt16_closure, @object
GHC.Int.$fNumInt16_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt16_$c+_closure+2
	.quad	GHC.Int.$fNumInt16_$c-_closure+2
	.quad	GHC.Int.$fNumInt16_$c*_closure+2
	.quad	GHC.Int.$fNumInt16_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt16_$cabs_closure+1
	.quad	GHC.Int.$fNumInt16_$csignum_closure+1
	.quad	GHC.Int.$fNumInt16_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.205007968 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt2_closure
.type GHC.Int.$fBitsInt2_closure, @object
GHC.Int.$fBitsInt2_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.208374954 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:12.209144141 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry:
_c4tX1:
	movl $GHC.Int.$fBitsInt2_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:12.210053839 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.214980232 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbit_closure
.type GHC.Int.$fBitsInt16_$cbit_closure, @object
GHC.Int.$fBitsInt16_$cbit_closure:
	.quad	GHC.Int.$fBitsInt16_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:12.215890828 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cbit_entry
.type GHC.Int.$fBitsInt16_$cbit_entry, @object
GHC.Int.$fBitsInt16_$cbit_entry:
_c4tXg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tXh
_c4tXi:
	movq $block_c4tXd_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tXd
_c4tXe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tXh:
	movl $GHC.Int.$fBitsInt16_$cbit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cbit_entry, .-GHC.Int.$fBitsInt16_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:12.216589567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbit_info
.type GHC.Int.$fBitsInt16_$cbit_info, @object
GHC.Int.$fBitsInt16_$cbit_info:
	.quad	GHC.Int.$fBitsInt16_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.21790377 UTC

.section .text
.align 8
_c4tXd:
_c4tXd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4tXn
_c4tXm:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4tXz
_c4tXA:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt3_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tXz:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tXn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4tXd, .-_c4tXd


==================== Asm code ====================
2018-03-16 15:59:12.218646015 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tXd_info:
	.quad	_c4tXd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.223660679 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ctestBit_closure
.type GHC.Int.$fBitsInt16_$ctestBit_closure, @object
GHC.Int.$fBitsInt16_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt16_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:12.224540057 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ctestBit_entry
.type GHC.Int.$fBitsInt16_$ctestBit_entry, @object
GHC.Int.$fBitsInt16_$ctestBit_entry:
_c4tXX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tY1
_c4tY2:
	movq $block_c4tXU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tXU
_c4tXV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tY1:
	movl $GHC.Int.$fBitsInt16_$ctestBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ctestBit_entry, .-GHC.Int.$fBitsInt16_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.225208126 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ctestBit_info
.type GHC.Int.$fBitsInt16_$ctestBit_info, @object
GHC.Int.$fBitsInt16_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt16_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.225996576 UTC

.section .text
.align 8
_c4tXU:
_c4tXU:
	movq $block_c4tY0_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4tY0
_c4tY4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tXU, .-_c4tXU


==================== Asm code ====================
2018-03-16 15:59:12.226627065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tXU_info:
	.quad	_c4tXU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.227498194 UTC

.section .text
.align 8
_c4tY0:
_c4tY0:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4tYI
_c4tYH:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4tYI
_c4tYw:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4tYI:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4tY0, .-_c4tY0


==================== Asm code ====================
2018-03-16 15:59:12.228192828 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tY0_info:
	.quad	_c4tY0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.23383664 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateR_closure
.type GHC.Int.$fBitsInt16_$crotateR_closure, @object
GHC.Int.$fBitsInt16_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt16_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:12.234773568 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotateR_entry
.type GHC.Int.$fBitsInt16_$crotateR_entry, @object
GHC.Int.$fBitsInt16_$crotateR_entry:
_c4tZc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4tZg
_c4tZh:
	movq $block_c4tZ9_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4tZ9
_c4tZa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4tZg:
	movl $GHC.Int.$fBitsInt16_$crotateR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$crotateR_entry, .-GHC.Int.$fBitsInt16_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:12.235488378 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateR_info
.type GHC.Int.$fBitsInt16_$crotateR_info, @object
GHC.Int.$fBitsInt16_$crotateR_info:
	.quad	GHC.Int.$fBitsInt16_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.236250539 UTC

.section .text
.align 8
_c4tZ9:
_c4tZ9:
	movq $block_c4tZf_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4tZf
_c4tZj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4tZ9, .-_c4tZ9


==================== Asm code ====================
2018-03-16 15:59:12.236948575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tZ9_info:
	.quad	_c4tZ9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.237712925 UTC

.section .text
.align 8
_c4tZf:
_c4tZf:
	movq 7(%rbx),%rax
	negq %rax
	andl $15,%eax
	testq %rax,%rax
	jne _u4u0d
_c4u09:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4u0d:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4tZB
	.size _c4tZf, .-_c4tZf


==================== Asm code ====================
2018-03-16 15:59:12.238329249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tZf_info:
	.quad	_c4tZf
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.239219076 UTC

.section .text
.align 8
_c4tZB:
_c4tZB:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4u06
_c4u05:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movzwl %bx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $16,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u06:
	movq $16,904(%r13)
	movq $block_c4tZA_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4tZB, .-_c4tZB


==================== Asm code ====================
2018-03-16 15:59:12.240221984 UTC

.section .text
.align 8
_c4tZA:
_c4tZA:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4tZB
	.size _c4tZA, .-_c4tZA


==================== Asm code ====================
2018-03-16 15:59:12.24084486 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4tZA_info:
	.quad	_c4tZA
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.245954641 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplementBit_closure
.type GHC.Int.$fBitsInt16_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt16_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:12.246936372 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ccomplementBit_entry
.type GHC.Int.$fBitsInt16_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt16_$ccomplementBit_entry:
_c4u0T:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u0X
_c4u0Y:
	movq $block_c4u0Q_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4u0Q
_c4u0R:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u0X:
	movl $GHC.Int.$fBitsInt16_$ccomplementBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ccomplementBit_entry, .-GHC.Int.$fBitsInt16_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.247691326 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplementBit_info
.type GHC.Int.$fBitsInt16_$ccomplementBit_info, @object
GHC.Int.$fBitsInt16_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.248488349 UTC

.section .text
.align 8
_c4u0Q:
_c4u0Q:
	movq $block_c4u0W_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4u0W
_c4u10:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4u0Q, .-_c4u0Q


==================== Asm code ====================
2018-03-16 15:59:12.249199056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u0Q_info:
	.quad	_c4u0Q
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.250543816 UTC

.section .text
.align 8
_c4u0W:
_c4u0W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u16
_c4u15:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4u1u
_c4u1v:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4u1u:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u16:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u0W, .-_c4u0W


==================== Asm code ====================
2018-03-16 15:59:12.251244072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u0W_info:
	.quad	_c4u0W
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.2566048 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cclearBit_closure
.type GHC.Int.$fBitsInt16_$cclearBit_closure, @object
GHC.Int.$fBitsInt16_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt16_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:12.25775546 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cclearBit_entry
.type GHC.Int.$fBitsInt16_$cclearBit_entry, @object
GHC.Int.$fBitsInt16_$cclearBit_entry:
_c4u20:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u24
_c4u25:
	movq $block_c4u1X_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4u1X
_c4u1Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u24:
	movl $GHC.Int.$fBitsInt16_$cclearBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cclearBit_entry, .-GHC.Int.$fBitsInt16_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.258560248 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cclearBit_info
.type GHC.Int.$fBitsInt16_$cclearBit_info, @object
GHC.Int.$fBitsInt16_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt16_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.25969109 UTC

.section .text
.align 8
_c4u1X:
_c4u1X:
	movq $block_c4u23_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4u23
_c4u27:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4u1X, .-_c4u1X


==================== Asm code ====================
2018-03-16 15:59:12.260615911 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u1X_info:
	.quad	_c4u1X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.262076536 UTC

.section .text
.align 8
_c4u23:
_c4u23:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u2d
_c4u2c:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4u2E
_c4u2Q:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u2E:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movswq %dx,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u2d:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u23, .-_c4u23


==================== Asm code ====================
2018-03-16 15:59:12.262902209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u23_info:
	.quad	_c4u23
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.268181802 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$csetBit_closure
.type GHC.Int.$fBitsInt16_$csetBit_closure, @object
GHC.Int.$fBitsInt16_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt16_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:12.269007412 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$csetBit_entry
.type GHC.Int.$fBitsInt16_$csetBit_entry, @object
GHC.Int.$fBitsInt16_$csetBit_entry:
_c4u3m:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u3q
_c4u3r:
	movq $block_c4u3j_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4u3j
_c4u3k:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u3q:
	movl $GHC.Int.$fBitsInt16_$csetBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$csetBit_entry, .-GHC.Int.$fBitsInt16_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.269835209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$csetBit_info
.type GHC.Int.$fBitsInt16_$csetBit_info, @object
GHC.Int.$fBitsInt16_$csetBit_info:
	.quad	GHC.Int.$fBitsInt16_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.270559391 UTC

.section .text
.align 8
_c4u3j:
_c4u3j:
	movq $block_c4u3p_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4u3p
_c4u3t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4u3j, .-_c4u3j


==================== Asm code ====================
2018-03-16 15:59:12.271207566 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u3j_info:
	.quad	_c4u3j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.272040953 UTC

.section .text
.align 8
_c4u3p:
_c4u3p:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u3z
_c4u3y:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4u3X
_c4u3Y:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4u3X:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u3z:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u3p, .-_c4u3p


==================== Asm code ====================
2018-03-16 15:59:12.272749628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u3p_info:
	.quad	_c4u3p
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.2751028 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateL_closure
.type GHC.Int.$fBitsInt16_$crotateL_closure, @object
GHC.Int.$fBitsInt16_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt16_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:12.275771256 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotateL_entry
.type GHC.Int.$fBitsInt16_$crotateL_entry, @object
GHC.Int.$fBitsInt16_$crotateL_entry:
_c4u4q:
	jmp GHC.Int.$fBitsInt16_$crotate_entry
	.size GHC.Int.$fBitsInt16_$crotateL_entry, .-GHC.Int.$fBitsInt16_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:12.276356212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateL_info
.type GHC.Int.$fBitsInt16_$crotateL_info, @object
GHC.Int.$fBitsInt16_$crotateL_info:
	.quad	GHC.Int.$fBitsInt16_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.279392562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_closure
.type GHC.Int.$fBitsInt16_closure, @object
GHC.Int.$fBitsInt16_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt16_closure+1
	.quad	GHC.Int.$fBitsInt16_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt16_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt16_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt16_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt16_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt3_closure+1
	.quad	GHC.Int.$fBitsInt16_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt16_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt16_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt16_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt16_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt16_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.281609468 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_closure
.type GHC.Int.$fFiniteBitsInt16_closure, @object
GHC.Int.$fFiniteBitsInt16_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt16_closure+1
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.288736037 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_go_closure
.type GHC.Int.$fReadInt16_go_closure, @object
GHC.Int.$fReadInt16_go_closure:
	.quad	GHC.Int.$fReadInt16_go_info


==================== Asm code ====================
2018-03-16 15:59:12.289760752 UTC

.section .text
.align 8
sat_s4lhF_entry:
_c4u4S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u4T
_c4u4U:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt16_go_entry
_c4u4T:
	jmp *-16(%r13)
	.size sat_s4lhF_entry, .-sat_s4lhF_entry


==================== Asm code ====================
2018-03-16 15:59:12.290754323 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lhF_info:
	.quad	sat_s4lhF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:12.292027054 UTC

.section .text
.align 8
sat_s4lhD_entry:
_c4u52:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u59
_c4u5a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c4u4Z_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4u4Z
_c4u50:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u59:
	jmp *-16(%r13)
	.size sat_s4lhD_entry, .-sat_s4lhD_entry


==================== Asm code ====================
2018-03-16 15:59:12.292878473 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lhD_info:
	.quad	sat_s4lhD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:12.294278675 UTC

.section .text
.align 8
_c4u4Z:
_c4u4Z:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u5d
_c4u5c:
	movq 7(%rbx),%rax
	movswq %ax,%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u5d:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u4Z, .-_c4u4Z


==================== Asm code ====================
2018-03-16 15:59:12.294899723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u4Z_info:
	.quad	_c4u4Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.29573206 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_go_entry
.type GHC.Int.$fReadInt16_go_entry, @object
GHC.Int.$fReadInt16_go_entry:
_c4u5j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u5k
_c4u5l:
	movq $block_c4u4D_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4u4D
_c4u4E:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u5k:
	movl $GHC.Int.$fReadInt16_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt16_go_entry, .-GHC.Int.$fReadInt16_go_entry


==================== Asm code ====================
2018-03-16 15:59:12.296482507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_go_info
.type GHC.Int.$fReadInt16_go_info, @object
GHC.Int.$fReadInt16_go_info:
	.quad	GHC.Int.$fReadInt16_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.297835934 UTC

.section .text
.align 8
_c4u4D:
_c4u4D:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4u5g
_c4u5h:
	movq $block_c4u4J_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4u4J
_c4u4K:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u5g:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4u4D, .-_c4u4D


==================== Asm code ====================
2018-03-16 15:59:12.298832255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u4D_info:
	.quad	_c4u4D
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.300040923 UTC

.section .text
.align 8
_c4u4J:
_c4u4J:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4u5t
_c4u5s:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s4lhF_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq $sat_s4lhD_info,-64(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u5t:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u4J, .-_c4u4J


==================== Asm code ====================
2018-03-16 15:59:12.300737192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u4J_info:
	.quad	_c4u4J
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.306041358 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadsPrec_closure
.type GHC.Int.$fReadInt16_$creadsPrec_closure, @object
GHC.Int.$fReadInt16_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt16_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.307334135 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_$creadsPrec_entry
.type GHC.Int.$fReadInt16_$creadsPrec_entry, @object
GHC.Int.$fReadInt16_$creadsPrec_entry:
_c4u6b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u6f
_c4u6g:
	movq $block_c4u69_info,-16(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq %rsi,%rax
	movq %r14,%rsi
	movl $GHC.Read.$fReadInt2_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Read.$fReadInt_$sreadNumber_entry
_c4u6f:
	movl $GHC.Int.$fReadInt16_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt16_$creadsPrec_entry, .-GHC.Int.$fReadInt16_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:12.308039331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadsPrec_info
.type GHC.Int.$fReadInt16_$creadsPrec_info, @object
GHC.Int.$fReadInt16_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt16_$creadsPrec_entry
	.quad	0
	.quad	1152921517491748878
	.quad	8589934607
	.quad	S4lDl_srt+472


==================== Asm code ====================
2018-03-16 15:59:12.308759336 UTC

.section .text
.align 8
_c4u69:
_c4u69:
	movq 8(%rbp),%rax
	movq $block_c4u6e_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
	.size _c4u69, .-_c4u69


==================== Asm code ====================
2018-03-16 15:59:12.309938452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u69_info:
	.quad	_c4u69
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.310607189 UTC

.section .text
.align 8
_c4u6e:
_c4u6e:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt16_go_entry
	.size _c4u6e, .-_c4u6e


==================== Asm code ====================
2018-03-16 15:59:12.311198552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u6e_info:
	.quad	_c4u6e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.315841875 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt3_closure
.type GHC.Int.$fReadInt3_closure, @object
GHC.Int.$fReadInt3_closure:
	.quad	GHC.Int.$fReadInt3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.316789771 UTC

.section .text
.align 8
sat_s4lhM_entry:
_c4u6G:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt16_$creadsPrec_entry
	.size sat_s4lhM_entry, .-sat_s4lhM_entry


==================== Asm code ====================
2018-03-16 15:59:12.317779686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lhM_info:
	.quad	sat_s4lhM_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4lDl_srt+696


==================== Asm code ====================
2018-03-16 15:59:12.318757281 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt3_entry
.type GHC.Int.$fReadInt3_entry, @object
GHC.Int.$fReadInt3_entry:
_c4u6M:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u6N
_c4u6O:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u6Q
_c4u6P:
	movq $sat_s4lhM_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_c4u6J_info,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4u6Q:
	movq $16,904(%r13)
_c4u6N:
	movl $GHC.Int.$fReadInt3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt3_entry, .-GHC.Int.$fReadInt3_entry


==================== Asm code ====================
2018-03-16 15:59:12.319554562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt3_info
.type GHC.Int.$fReadInt3_info, @object
GHC.Int.$fReadInt3_info:
	.quad	GHC.Int.$fReadInt3_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+696


==================== Asm code ====================
2018-03-16 15:59:12.3203916 UTC

.section .text
.align 8
_c4u6J:
_c4u6J:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u6T
_c4u6S:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u6T:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u6J, .-_c4u6J


==================== Asm code ====================
2018-03-16 15:59:12.320972943 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u6J_info:
	.quad	_c4u6J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.324921627 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt2_closure
.type GHC.Int.$fReadInt2_closure, @object
GHC.Int.$fReadInt2_closure:
	.quad	GHC.Int.$fReadInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.326054046 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt2_entry
.type GHC.Int.$fReadInt2_entry, @object
GHC.Int.$fReadInt2_entry:
_c4u7c:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u7d
_c4u7e:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4u7b
_c4u7a:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$fReadInt3_closure+2,%r14d
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Int.$fIxInt1_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c4u7d:
	jmp *-16(%r13)
_c4u7b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt2_entry, .-GHC.Int.$fReadInt2_entry


==================== Asm code ====================
2018-03-16 15:59:12.326846162 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt2_info
.type GHC.Int.$fReadInt2_info, @object
GHC.Int.$fReadInt2_info:
	.quad	GHC.Int.$fReadInt2_entry
	.quad	0
	.quad	144115192370823189
	.quad	S4lDl_srt+504


==================== Asm code ====================
2018-03-16 15:59:12.329371541 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadList_closure
.type GHC.Int.$fReadInt16_$creadList_closure, @object
GHC.Int.$fReadInt16_$creadList_closure:
	.quad	GHC.Int.$fReadInt16_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.330067383 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_$creadList_entry
.type GHC.Int.$fReadInt16_$creadList_entry, @object
GHC.Int.$fReadInt16_$creadList_entry:
_c4u7q:
	movq %r14,%rsi
	movl $GHC.Int.$fReadInt2_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Int.$fReadInt16_$creadList_entry, .-GHC.Int.$fReadInt16_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:12.330685311 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadList_info
.type GHC.Int.$fReadInt16_$creadList_info, @object
GHC.Int.$fReadInt16_$creadList_info:
	.quad	GHC.Int.$fReadInt16_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4lDl_srt+712


==================== Asm code ====================
2018-03-16 15:59:12.334483648 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt1_closure
.type GHC.Int.$fReadInt1_closure, @object
GHC.Int.$fReadInt1_closure:
	.quad	GHC.Int.$fReadInt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.335304035 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt1_entry
.type GHC.Int.$fReadInt1_entry, @object
GHC.Int.$fReadInt1_entry:
_c4u7E:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u7F
_c4u7G:
	movq $block_c4u7B_info,-8(%rbp)
	movl $GHC.Int.$fReadInt16_$creadList_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4u7F:
	movl $GHC.Int.$fReadInt1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt1_entry, .-GHC.Int.$fReadInt1_entry


==================== Asm code ====================
2018-03-16 15:59:12.336006825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt1_info
.type GHC.Int.$fReadInt1_info, @object
GHC.Int.$fReadInt1_info:
	.quad	GHC.Int.$fReadInt1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+720


==================== Asm code ====================
2018-03-16 15:59:12.337018469 UTC

.section .text
.align 8
_c4u7B:
_c4u7B:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u7J
_c4u7I:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u7J:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u7B, .-_c4u7B


==================== Asm code ====================
2018-03-16 15:59:12.337968273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u7B_info:
	.quad	_c4u7B
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.339830118 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_closure
.type GHC.Int.$fReadInt16_closure, @object
GHC.Int.$fReadInt16_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt16_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt16_$creadList_closure+1
	.quad	GHC.Int.$fReadInt3_closure+2
	.quad	GHC.Int.$fReadInt1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.34462202 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquot_closure
.type GHC.Int.$fIntegralInt16_$cquot_closure, @object
GHC.Int.$fIntegralInt16_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt16_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.345551897 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cquot_entry
.type GHC.Int.$fIntegralInt16_$cquot_entry, @object
GHC.Int.$fIntegralInt16_$cquot_entry:
_c4u81:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u85
_c4u86:
	movq $block_c4u7Y_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4u7Y
_c4u7Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u85:
	movl $GHC.Int.$fIntegralInt16_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cquot_entry, .-GHC.Int.$fIntegralInt16_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:12.346264085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquot_info
.type GHC.Int.$fIntegralInt16_$cquot_info, @object
GHC.Int.$fIntegralInt16_$cquot_info:
	.quad	GHC.Int.$fIntegralInt16_$cquot_entry
	.quad	0
	.quad	144115200960757774
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.347037449 UTC

.section .text
.align 8
_c4u7Y:
_c4u7Y:
	movq $block_c4u84_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4u84
_c4u88:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4u7Y, .-_c4u7Y


==================== Asm code ====================
2018-03-16 15:59:12.347720869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u7Y_info:
	.quad	_c4u7Y
	.quad	1
	.quad	12884901918
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.348744862 UTC

.section .text
.align 8
_c4u84:
_c4u84:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u8e
_c4u8d:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4u8F
_c4u8D:
	cmpq $-32768,%rax
	je _c4u8C
_c4u8B:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4u8F:
	testq %rbx,%rbx
	jne _c4u8p
_c4u8E:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4u8C:
	addq $-16,%r12
	movl $GHC.Real.overflowError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4u8p:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	cqto
	idivq %rbx
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u8e:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u84, .-_c4u84


==================== Asm code ====================
2018-03-16 15:59:12.349728253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u84_info:
	.quad	_c4u84
	.quad	65
	.quad	12884901918
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.354617017 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$crem_closure
.type GHC.Int.$fIntegralInt16_$crem_closure, @object
GHC.Int.$fIntegralInt16_$crem_closure:
	.quad	GHC.Int.$fIntegralInt16_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.355504791 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$crem_entry
.type GHC.Int.$fIntegralInt16_$crem_entry, @object
GHC.Int.$fIntegralInt16_$crem_entry:
_c4u99:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4u9d
_c4u9e:
	movq $block_c4u96_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4u96
_c4u97:
	movq (%rbx),%rax
	jmp *(%rax)
_c4u9d:
	movl $GHC.Int.$fIntegralInt16_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$crem_entry, .-GHC.Int.$fIntegralInt16_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:12.356211315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$crem_info
.type GHC.Int.$fIntegralInt16_$crem_info, @object
GHC.Int.$fIntegralInt16_$crem_info:
	.quad	GHC.Int.$fIntegralInt16_$crem_entry
	.quad	0
	.quad	288230380446679054
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.356988011 UTC

.section .text
.align 8
_c4u96:
_c4u96:
	movq $block_c4u9c_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4u9c
_c4u9g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4u96, .-_c4u96


==================== Asm code ====================
2018-03-16 15:59:12.357839075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u96_info:
	.quad	_c4u96
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.359048979 UTC

.section .text
.align 8
_c4u9c:
_c4u9c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4u9m
_c4u9l:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4u9x
_c4u9y:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4u9x:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movswq %dx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4u9m:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4u9c, .-_c4u9c


==================== Asm code ====================
2018-03-16 15:59:12.359887803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4u9c_info:
	.quad	_c4u9c
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.363859038 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv_closure
.type GHC.Int.$w$cdiv_closure, @object
GHC.Int.$w$cdiv_closure:
	.quad	GHC.Int.$w$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.364825691 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv_entry
.type GHC.Int.$w$cdiv_entry, @object
GHC.Int.$w$cdiv_entry:
_c4ua0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ua1
_c4ua2:
	cmpq $-1,%rsi
	je _c4u9Y
_u4uam:
	testq %rsi,%rsi
	je _c4u9Z
_c4u9X:
	movq $block_c4ua4_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4ual:
	movl $GHC.Real.overflowError_closure,%ebx
	jmp stg_ap_0_fast
_c4u9Y:
	cmpq $-32768,%r14
	je _c4ual
_c4uaj:
	movq $block_c4uad_info,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4ua1:
	movl $GHC.Int.$w$cdiv_closure,%ebx
	jmp *-8(%r13)
_c4u9Z:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdiv_entry, .-GHC.Int.$w$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:12.365687393 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv_info
.type GHC.Int.$w$cdiv_info, @object
GHC.Int.$w$cdiv_info:
	.quad	GHC.Int.$w$cdiv_entry
	.quad	0
	.quad	576460765188325390
	.quad	8589934604
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.366432314 UTC

.section .text
.align 8
_c4uad:
_c4uad:
	movswq %bx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uad, .-_c4uad


==================== Asm code ====================
2018-03-16 15:59:12.367064817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uad_info:
	.quad	_c4uad
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.367781098 UTC

.section .text
.align 8
_c4ua4:
_c4ua4:
	movswq %bx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4ua4, .-_c4ua4


==================== Asm code ====================
2018-03-16 15:59:12.368386718 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ua4_info:
	.quad	_c4ua4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.374048477 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdiv_closure
.type GHC.Int.$fIntegralInt16_$cdiv_closure, @object
GHC.Int.$fIntegralInt16_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt16_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.375106903 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cdiv_entry
.type GHC.Int.$fIntegralInt16_$cdiv_entry, @object
GHC.Int.$fIntegralInt16_$cdiv_entry:
_c4uaJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uaW
_c4uaX:
	movq $block_c4uaG_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uaG
_c4uaH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uaW:
	movl $GHC.Int.$fIntegralInt16_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cdiv_entry, .-GHC.Int.$fIntegralInt16_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:12.375790686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdiv_info
.type GHC.Int.$fIntegralInt16_$cdiv_info, @object
GHC.Int.$fIntegralInt16_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt16_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+752


==================== Asm code ====================
2018-03-16 15:59:12.376519461 UTC

.section .text
.align 8
_c4uaG:
_c4uaG:
	movq $block_c4uaM_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uaM
_c4uaN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uaG, .-_c4uaG


==================== Asm code ====================
2018-03-16 15:59:12.37714437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uaG_info:
	.quad	_c4uaG
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+752


==================== Asm code ====================
2018-03-16 15:59:12.37835973 UTC

.section .text
.align 8
_c4uaM:
_c4uaM:
	movq 8(%rbp),%rax
	movq $block_c4uaR_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv_entry
	.size _c4uaM, .-_c4uaM


==================== Asm code ====================
2018-03-16 15:59:12.378978528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uaM_info:
	.quad	_c4uaM
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+752


==================== Asm code ====================
2018-03-16 15:59:12.379695748 UTC

.section .text
.align 8
_c4uaR:
_c4uaR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ub2
_c4ub1:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ub2:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4uaR, .-_c4uaR


==================== Asm code ====================
2018-03-16 15:59:12.380357413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uaR_info:
	.quad	_c4uaR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.387555279 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cmod_closure
.type GHC.Int.$fIntegralInt16_$cmod_closure, @object
GHC.Int.$fIntegralInt16_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt16_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.388907528 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cmod_entry
.type GHC.Int.$fIntegralInt16_$cmod_entry, @object
GHC.Int.$fIntegralInt16_$cmod_entry:
_c4ubt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ubx
_c4uby:
	movq $block_c4ubq_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ubq
_c4ubr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ubx:
	movl $GHC.Int.$fIntegralInt16_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cmod_entry, .-GHC.Int.$fIntegralInt16_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:12.390412668 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cmod_info
.type GHC.Int.$fIntegralInt16_$cmod_info, @object
GHC.Int.$fIntegralInt16_$cmod_info:
	.quad	GHC.Int.$fIntegralInt16_$cmod_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.391634969 UTC

.section .text
.align 8
_c4ubq:
_c4ubq:
	movq $block_c4ubw_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ubw
_c4ubA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ubq, .-_c4ubq


==================== Asm code ====================
2018-03-16 15:59:12.392449633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ubq_info:
	.quad	_c4ubq
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.393460124 UTC

.section .text
.align 8
_c4ubw:
_c4ubw:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4ubQ
_c4ubU:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4ubQ:
	movq 8(%rbp),%rbx
	movq $block_c4ubH_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _c4ubw, .-_c4ubw


==================== Asm code ====================
2018-03-16 15:59:12.394299129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ubw_info:
	.quad	_c4ubw
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.395300492 UTC

.section .text
.align 8
_c4ubH:
_c4ubH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ubT
_c4ubS:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ubT:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4ubH, .-_c4ubH


==================== Asm code ====================
2018-03-16 15:59:12.396433602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ubH_info:
	.quad	_c4ubH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.398315202 UTC

.section .data
.align 8
.align 1
lvl7_r4kPy_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt3_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.403909114 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquotRem_closure
.type GHC.Int.$fIntegralInt16_$cquotRem_closure, @object
GHC.Int.$fIntegralInt16_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.404811681 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cquotRem_entry
.type GHC.Int.$fIntegralInt16_$cquotRem_entry, @object
GHC.Int.$fIntegralInt16_$cquotRem_entry:
_c4uco:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ucs
_c4uct:
	movq $block_c4ucl_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ucl
_c4ucm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ucs:
	movl $GHC.Int.$fIntegralInt16_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cquotRem_entry, .-GHC.Int.$fIntegralInt16_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:12.405887675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquotRem_info
.type GHC.Int.$fIntegralInt16_$cquotRem_info, @object
GHC.Int.$fIntegralInt16_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_entry
	.quad	0
	.quad	-4611686014132420594
	.quad	8589934607
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.406782017 UTC

.section .text
.align 8
_c4ucl:
_c4ucl:
	movq $block_c4ucr_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ucr
_c4ucv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ucl, .-_c4ucl


==================== Asm code ====================
2018-03-16 15:59:12.4074293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ucl_info:
	.quad	_c4ucl
	.quad	1
	.quad	-9223372032559808482
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.408821142 UTC

.section .text
.align 8
_c4ucr:
_c4ucr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4ucB
_c4ucA:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4ud6
_c4ud4:
	cmpq $-32768,%rax
	je _c4ud3
_c4ud2:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-48(%r12)
	movswq %dx,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I16#_con_info,-32(%r12)
	movswq %ax,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4ud6:
	testq %rbx,%rbx
	jne _c4ucO
_c4ud5:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4ud3:
	addq $-56,%r12
	movl $lvl7_r4kPy_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ucO:
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-48(%r12)
	movswq %dx,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I16#_con_info,-32(%r12)
	movswq %ax,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ucB:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ucr, .-_c4ucr


==================== Asm code ====================
2018-03-16 15:59:12.409889296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ucr_info:
	.quad	_c4ucr
	.quad	65
	.quad	-9223372032559808482
	.quad	S4lDl_srt+536


==================== Asm code ====================
2018-03-16 15:59:12.41896846 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod_closure
.type GHC.Int.$w$cdivMod_closure, @object
GHC.Int.$w$cdivMod_closure:
	.quad	GHC.Int.$w$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.419587306 UTC

.section .data.rel.ro
.align 8
.align 1
u4ugk_srtd:
	.quad	S4lDl_srt+536
	.quad	33
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:12.420586593 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod_entry
.type GHC.Int.$w$cdivMod_entry, @object
GHC.Int.$w$cdivMod_entry:
_c4udK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4udL
_c4udM:
	testq %rsi,%rsi
	je _c4udJ
_c4udI:
	cmpq $-1,%rsi
	je _c4ugf
_u4ugg:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4udR
_c4ugf:
	cmpq $-32768,%r14
	je _c4uge
_u4ugh:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4udR
_c4uge:
	movl $GHC.Int.$fBitsInt3_closure+1,%r14d
	movl $GHC.Real.overflowError_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4udL:
	movl $GHC.Int.$w$cdivMod_closure,%ebx
	jmp *-8(%r13)
_c4udJ:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdivMod_entry, .-GHC.Int.$w$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:12.421489327 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod_info
.type GHC.Int.$w$cdivMod_info, @object
GHC.Int.$w$cdivMod_info:
	.quad	GHC.Int.$w$cdivMod_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934604
	.quad	u4ugk_srtd


==================== Asm code ====================
2018-03-16 15:59:12.42300523 UTC

.section .text
.align 8
_c4udR:
_c4udR:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4udV
_c4udU:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4ueO
_c4ug5:
	testq %rbx,%rbx
	jge _c4ufI
_c4ug4:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ufI:
	testq %rax,%rax
	jge _c4uf5
_c4ufG:
	testq %rbx,%rbx
	jle _c4ufj
_c4ufF:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ufj:
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uf5:
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ueO:
	testq %rax,%rax
	jge _c4ueb
_c4ueM:
	testq %rbx,%rbx
	jle _c4uep
_c4ueL:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uep:
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ueb:
	cqto
	idivq %rbx
	movq $GHC.Int.I16#_con_info,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4udV:
	movq $32,904(%r13)
	movq $block_c4udR_info,(%rbp)
	jmp stg_gc_noregs
	.size _c4udR, .-_c4udR


==================== Asm code ====================
2018-03-16 15:59:12.424225508 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4udR_info:
	.quad	_c4udR
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.428556817 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdivMod_closure
.type GHC.Int.$fIntegralInt16_$cdivMod_closure, @object
GHC.Int.$fIntegralInt16_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.429465054 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cdivMod_entry
.type GHC.Int.$fIntegralInt16_$cdivMod_entry, @object
GHC.Int.$fIntegralInt16_$cdivMod_entry:
_c4uhh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uhs
_c4uht:
	movq $block_c4uhe_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uhe
_c4uhf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uhs:
	movl $GHC.Int.$fIntegralInt16_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cdivMod_entry, .-GHC.Int.$fIntegralInt16_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:12.430152937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdivMod_info
.type GHC.Int.$fIntegralInt16_$cdivMod_info, @object
GHC.Int.$fIntegralInt16_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+792


==================== Asm code ====================
2018-03-16 15:59:12.430893819 UTC

.section .text
.align 8
_c4uhe:
_c4uhe:
	movq $block_c4uhk_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uhk
_c4uhl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uhe, .-_c4uhe


==================== Asm code ====================
2018-03-16 15:59:12.431648816 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uhe_info:
	.quad	_c4uhe
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+792


==================== Asm code ====================
2018-03-16 15:59:12.432498122 UTC

.section .text
.align 8
_c4uhk:
_c4uhk:
	movq 8(%rbp),%rax
	movq $block_c4uhp_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod_entry
	.size _c4uhk, .-_c4uhk


==================== Asm code ====================
2018-03-16 15:59:12.433120003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uhk_info:
	.quad	_c4uhk
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+792


==================== Asm code ====================
2018-03-16 15:59:12.434177317 UTC

.section .text
.align 8
_c4uhp:
_c4uhp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4uhy
_c4uhx:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uhy:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4uhp, .-_c4uhp


==================== Asm code ====================
2018-03-16 15:59:12.434830536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uhp_info:
	.quad	_c4uhp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.440037069 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt16_$ctoRational_closure
.type GHC.Int.$fRealInt16_$ctoRational_closure, @object
GHC.Int.$fRealInt16_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt16_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.440905057 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt16_$ctoRational_entry
.type GHC.Int.$fRealInt16_$ctoRational_entry, @object
GHC.Int.$fRealInt16_$ctoRational_entry:
_c4uhZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uid
_c4uie:
	movq $block_c4uhW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uhW
_c4uhX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uid:
	movl $GHC.Int.$fRealInt16_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt16_$ctoRational_entry, .-GHC.Int.$fRealInt16_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:12.442281471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt16_$ctoRational_info
.type GHC.Int.$fRealInt16_$ctoRational_info, @object
GHC.Int.$fRealInt16_$ctoRational_info:
	.quad	GHC.Int.$fRealInt16_$ctoRational_entry
	.quad	0
	.quad	18014428574253070
	.quad	4294967301
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.443047934 UTC

.section .text
.align 8
_c4uhW:
_c4uhW:
	movq $block_c4ui2_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4uhW, .-_c4uhW


==================== Asm code ====================
2018-03-16 15:59:12.443636332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uhW_info:
	.quad	_c4uhW
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.444293616 UTC

.section .text
.align 8
_c4ui2:
_c4ui2:
	movq $block_c4ui6_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c4ui2, .-_c4ui2


==================== Asm code ====================
2018-03-16 15:59:12.444885224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ui2_info:
	.quad	_c4ui2
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+632


==================== Asm code ====================
2018-03-16 15:59:12.44564304 UTC

.section .text
.align 8
_c4ui6:
_c4ui6:
	movq $block_c4uia_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c4ui6, .-_c4ui6


==================== Asm code ====================
2018-03-16 15:59:12.446230699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ui6_info:
	.quad	_c4ui6
	.quad	0
	.quad	12884901918
	.quad	S4lDl_srt+640


==================== Asm code ====================
2018-03-16 15:59:12.447088467 UTC

.section .text
.align 8
_c4uia:
_c4uia:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4uik
_c4uij:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uik:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4uia, .-_c4uia


==================== Asm code ====================
2018-03-16 15:59:12.447754551 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uia_info:
	.quad	_c4uia
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.4499962 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt16_closure
.type GHC.Int.$fRealInt16_closure, @object
GHC.Int.$fRealInt16_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt16_closure+1
	.quad	GHC.Int.$fOrdInt16_closure+1
	.quad	GHC.Int.$fRealInt16_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.452168587 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_closure
.type GHC.Int.$fIntegralInt16_closure, @object
GHC.Int.$fIntegralInt16_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt16_closure+1
	.quad	GHC.Int.$fEnumInt16_closure+1
	.quad	GHC.Int.$fIntegralInt16_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt16_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.457800472 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeIndex_closure
.type GHC.Int.$fIxInt16_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt16_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:12.459201651 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cunsafeIndex_entry
.type GHC.Int.$fIxInt16_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt16_$cunsafeIndex_entry:
_c4uiO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uj5
_c4uj6:
	movq $block_c4uiL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uiL
_c4uiM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uj5:
	movl $GHC.Int.$fIxInt16_$cunsafeIndex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cunsafeIndex_entry, .-GHC.Int.$fIxInt16_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:12.459937806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeIndex_info
.type GHC.Int.$fIxInt16_$cunsafeIndex_info, @object
GHC.Int.$fIxInt16_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.460666494 UTC

.section .text
.align 8
_c4uiL:
_c4uiL:
	movq $block_c4uiR_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uiR
_c4uiS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uiL, .-_c4uiL


==================== Asm code ====================
2018-03-16 15:59:12.46139082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uiL_info:
	.quad	_c4uiL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.462286024 UTC

.section .text
.align 8
_c4uiR:
_c4uiR:
	movq $block_c4uiW_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uiW
_c4uiX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uiR, .-_c4uiR


==================== Asm code ====================
2018-03-16 15:59:12.463135285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uiR_info:
	.quad	_c4uiR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.464507726 UTC

.section .text
.align 8
_c4uiW:
_c4uiW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ujb
_c4uja:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ujb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uiW, .-_c4uiW


==================== Asm code ====================
2018-03-16 15:59:12.465536948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uiW_info:
	.quad	_c4uiW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.468688144 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crange_closure
.type GHC.Int.$fIxInt16_$crange_closure, @object
GHC.Int.$fIxInt16_$crange_closure:
	.quad	GHC.Int.$fIxInt16_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.469604332 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$crange_entry
.type GHC.Int.$fIxInt16_$crange_entry, @object
GHC.Int.$fIxInt16_$crange_entry:
_c4ujG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ujH
_c4ujI:
	movq $block_c4ujD_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ujD
_c4ujE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ujH:
	movl $GHC.Int.$fIxInt16_$crange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$crange_entry, .-GHC.Int.$fIxInt16_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:12.47031159 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crange_info
.type GHC.Int.$fIxInt16_$crange_info, @object
GHC.Int.$fIxInt16_$crange_info:
	.quad	GHC.Int.$fIxInt16_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+816


==================== Asm code ====================
2018-03-16 15:59:12.47093247 UTC

.section .text
.align 8
_c4ujD:
_c4ujD:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt16_$cenumFromTo_entry
	.size _c4ujD, .-_c4ujD


==================== Asm code ====================
2018-03-16 15:59:12.471496847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ujD_info:
	.quad	_c4ujD
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+824


==================== Asm code ====================
2018-03-16 15:59:12.477099798 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crangeSize_closure
.type GHC.Int.$fIxInt16_$crangeSize_closure, @object
GHC.Int.$fIxInt16_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt16_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.478555829 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$crangeSize_entry
.type GHC.Int.$fIxInt16_$crangeSize_entry, @object
GHC.Int.$fIxInt16_$crangeSize_entry:
_c4uk3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ukc
_c4ukd:
	movq $block_c4uk0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uk0
_c4uk1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ukc:
	movl $GHC.Int.$fIxInt16_$crangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$crangeSize_entry, .-GHC.Int.$fIxInt16_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.479472678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crangeSize_info
.type GHC.Int.$fIxInt16_$crangeSize_info, @object
GHC.Int.$fIxInt16_$crangeSize_info:
	.quad	GHC.Int.$fIxInt16_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.480223001 UTC

.section .text
.align 8
_c4uk0:
_c4uk0:
	movq $block_c4uk6_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uk6
_c4uk7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uk0, .-_c4uk0


==================== Asm code ====================
2018-03-16 15:59:12.4814573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uk0_info:
	.quad	_c4uk0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.48229157 UTC

.section .text
.align 8
_c4uk6:
_c4uk6:
	movq $block_c4ukb_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ukb
_c4ukg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uk6, .-_c4uk6


==================== Asm code ====================
2018-03-16 15:59:12.482896742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uk6_info:
	.quad	_c4uk6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.483700118 UTC

.section .text
.align 8
_c4ukb:
_c4ukb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ukm
_c4ukl:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4ukq
_c4ukA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ukq:
	addq $-16,%r12
	movl $GHC.Int.$fIxInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ukm:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ukb, .-_c4ukb


==================== Asm code ====================
2018-03-16 15:59:12.484364574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ukb_info:
	.quad	_c4ukb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.488517251 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.489587339 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_entry:
_c4ul7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ulr
_c4uls:
	movq $block_c4ul4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ul4
_c4ul5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ulr:
	movl $GHC.Int.$fIxInt16_$cunsafeRangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt16_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.490289919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.491034528 UTC

.section .text
.align 8
_c4ul4:
_c4ul4:
	movq $block_c4ula_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ula
_c4ulb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ul4, .-_c4ul4


==================== Asm code ====================
2018-03-16 15:59:12.491612485 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ul4_info:
	.quad	_c4ul4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.492324701 UTC

.section .text
.align 8
_c4ula:
_c4ula:
	movq $block_c4ulf_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ulf
_c4ulg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ula, .-_c4ula


==================== Asm code ====================
2018-03-16 15:59:12.49320272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ula_info:
	.quad	_c4ula
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.494672876 UTC

.section .text
.align 8
_c4ulf:
_c4ulf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ulx
_c4ulw:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ulx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ulf, .-_c4ulf


==================== Asm code ====================
2018-03-16 15:59:12.495712355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ulf_info:
	.quad	_c4ulf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.506158577 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cindex_closure
.type GHC.Int.$fIxInt16_$cindex_closure, @object
GHC.Int.$fIxInt16_$cindex_closure:
	.quad	GHC.Int.$fIxInt16_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.507529523 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cindex_entry
.type GHC.Int.$fIxInt16_$cindex_entry, @object
GHC.Int.$fIxInt16_$cindex_entry:
_c4um3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4umc
_c4umd:
	movq $block_c4um0_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4um0
_c4um1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4umc:
	movl $GHC.Int.$fIxInt16_$cindex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cindex_entry, .-GHC.Int.$fIxInt16_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:12.508604112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cindex_info
.type GHC.Int.$fIxInt16_$cindex_info, @object
GHC.Int.$fIxInt16_$cindex_info:
	.quad	GHC.Int.$fIxInt16_$cindex_entry
	.quad	0
	.quad	2251804108652558
	.quad	8589934607
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.510068561 UTC

.section .text
.align 8
_c4um0:
_c4um0:
	movq $block_c4um6_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4um6
_c4um7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4um0, .-_c4um0


==================== Asm code ====================
2018-03-16 15:59:12.510996814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4um0_info:
	.quad	_c4um0
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.512109103 UTC

.section .text
.align 8
_c4um6:
_c4um6:
	movq $block_c4umb_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4umb
_c4umg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4um6, .-_c4um6


==================== Asm code ====================
2018-03-16 15:59:12.513112023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4um6_info:
	.quad	_c4um6
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.514406406 UTC

.section .text
.align 8
_c4umb:
_c4umb:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4umo
_c4ums:
	movq $block_c4umr_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4umr
_c4umt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4umo:
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4umb, .-_c4umb


==================== Asm code ====================
2018-03-16 15:59:12.515516665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4umb_info:
	.quad	_c4umb
	.quad	130
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.516774016 UTC

.section .text
.align 8
_c4umr:
_c4umr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4umz
_c4umy:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4umD
_c4umK:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4umD:
	addq $-16,%r12
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4umz:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4umr, .-_c4umr


==================== Asm code ====================
2018-03-16 15:59:12.517953194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4umr_info:
	.quad	_c4umr
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+680


==================== Asm code ====================
2018-03-16 15:59:12.520811605 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_closure
.type GHC.Int.$fIxInt16_closure, @object
GHC.Int.$fIxInt16_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt16_closure+1
	.quad	GHC.Int.$fIxInt16_$crange_closure+1
	.quad	GHC.Int.$fIxInt16_$cindex_closure+2
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt16_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt16_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.526914168 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt32_closure
.type GHC.Int.eqInt32_closure, @object
GHC.Int.eqInt32_closure:
	.quad	GHC.Int.eqInt32_info


==================== Asm code ====================
2018-03-16 15:59:12.528185486 UTC

.section .text
.align 8
.globl GHC.Int.eqInt32_entry
.type GHC.Int.eqInt32_entry, @object
GHC.Int.eqInt32_entry:
_c4unn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4unr
_c4uns:
	movq $block_c4unk_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4unk
_c4unl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4unr:
	movl $GHC.Int.eqInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.eqInt32_entry, .-GHC.Int.eqInt32_entry


==================== Asm code ====================
2018-03-16 15:59:12.529334256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt32_info
.type GHC.Int.eqInt32_info, @object
GHC.Int.eqInt32_info:
	.quad	GHC.Int.eqInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.53033083 UTC

.section .text
.align 8
_c4unk:
_c4unk:
	movq $block_c4unq_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4unq
_c4unu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4unk, .-_c4unk


==================== Asm code ====================
2018-03-16 15:59:12.531358844 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4unk_info:
	.quad	_c4unk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.532388058 UTC

.section .text
.align 8
_c4unq:
_c4unq:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4unq, .-_c4unq


==================== Asm code ====================
2018-03-16 15:59:12.533966758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4unq_info:
	.quad	_c4unq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.536605061 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt32_closure
.type GHC.Int.$fEqInt32_closure, @object
GHC.Int.$fEqInt32_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt32_closure+2
	.quad	GHC.Int.neInt32_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.540916649 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt32_closure
.type GHC.Int.gtInt32_closure, @object
GHC.Int.gtInt32_closure:
	.quad	GHC.Int.gtInt32_info


==================== Asm code ====================
2018-03-16 15:59:12.541917902 UTC

.section .text
.align 8
.globl GHC.Int.gtInt32_entry
.type GHC.Int.gtInt32_entry, @object
GHC.Int.gtInt32_entry:
_c4uo1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uo5
_c4uo6:
	movq $block_c4unY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4unY
_c4unZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uo5:
	movl $GHC.Int.gtInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.gtInt32_entry, .-GHC.Int.gtInt32_entry


==================== Asm code ====================
2018-03-16 15:59:12.542672222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt32_info
.type GHC.Int.gtInt32_info, @object
GHC.Int.gtInt32_info:
	.quad	GHC.Int.gtInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.543420618 UTC

.section .text
.align 8
_c4unY:
_c4unY:
	movq $block_c4uo4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uo4
_c4uo8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4unY, .-_c4unY


==================== Asm code ====================
2018-03-16 15:59:12.544083378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4unY_info:
	.quad	_c4unY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.544796487 UTC

.section .text
.align 8
_c4uo4:
_c4uo4:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uo4, .-_c4uo4


==================== Asm code ====================
2018-03-16 15:59:12.546320493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uo4_info:
	.quad	_c4uo4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.552025153 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt32_closure
.type GHC.Int.geInt32_closure, @object
GHC.Int.geInt32_closure:
	.quad	GHC.Int.geInt32_info


==================== Asm code ====================
2018-03-16 15:59:12.553329216 UTC

.section .text
.align 8
.globl GHC.Int.geInt32_entry
.type GHC.Int.geInt32_entry, @object
GHC.Int.geInt32_entry:
_c4uoE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uoI
_c4uoJ:
	movq $block_c4uoB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uoB
_c4uoC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uoI:
	movl $GHC.Int.geInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.geInt32_entry, .-GHC.Int.geInt32_entry


==================== Asm code ====================
2018-03-16 15:59:12.554321995 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt32_info
.type GHC.Int.geInt32_info, @object
GHC.Int.geInt32_info:
	.quad	GHC.Int.geInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.555187755 UTC

.section .text
.align 8
_c4uoB:
_c4uoB:
	movq $block_c4uoH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uoH
_c4uoL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uoB, .-_c4uoB


==================== Asm code ====================
2018-03-16 15:59:12.556221912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uoB_info:
	.quad	_c4uoB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.557386566 UTC

.section .text
.align 8
_c4uoH:
_c4uoH:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uoH, .-_c4uoH


==================== Asm code ====================
2018-03-16 15:59:12.558796323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uoH_info:
	.quad	_c4uoH
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.562690292 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt32_closure
.type GHC.Int.ltInt32_closure, @object
GHC.Int.ltInt32_closure:
	.quad	GHC.Int.ltInt32_info


==================== Asm code ====================
2018-03-16 15:59:12.563985966 UTC

.section .text
.align 8
.globl GHC.Int.ltInt32_entry
.type GHC.Int.ltInt32_entry, @object
GHC.Int.ltInt32_entry:
_c4uph:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4upl
_c4upm:
	movq $block_c4upe_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4upe
_c4upf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4upl:
	movl $GHC.Int.ltInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.ltInt32_entry, .-GHC.Int.ltInt32_entry


==================== Asm code ====================
2018-03-16 15:59:12.565042978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt32_info
.type GHC.Int.ltInt32_info, @object
GHC.Int.ltInt32_info:
	.quad	GHC.Int.ltInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.566127225 UTC

.section .text
.align 8
_c4upe:
_c4upe:
	movq $block_c4upk_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4upk
_c4upo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4upe, .-_c4upe


==================== Asm code ====================
2018-03-16 15:59:12.567031788 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4upe_info:
	.quad	_c4upe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.568092649 UTC

.section .text
.align 8
_c4upk:
_c4upk:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4upk, .-_c4upk


==================== Asm code ====================
2018-03-16 15:59:12.569050726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4upk_info:
	.quad	_c4upk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.574156053 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt32_closure
.type GHC.Int.leInt32_closure, @object
GHC.Int.leInt32_closure:
	.quad	GHC.Int.leInt32_info


==================== Asm code ====================
2018-03-16 15:59:12.575169677 UTC

.section .text
.align 8
.globl GHC.Int.leInt32_entry
.type GHC.Int.leInt32_entry, @object
GHC.Int.leInt32_entry:
_c4upU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4upY
_c4upZ:
	movq $block_c4upR_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4upR
_c4upS:
	movq (%rbx),%rax
	jmp *(%rax)
_c4upY:
	movl $GHC.Int.leInt32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.leInt32_entry, .-GHC.Int.leInt32_entry


==================== Asm code ====================
2018-03-16 15:59:12.575889545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt32_info
.type GHC.Int.leInt32_info, @object
GHC.Int.leInt32_info:
	.quad	GHC.Int.leInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.57708041 UTC

.section .text
.align 8
_c4upR:
_c4upR:
	movq $block_c4upX_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4upX
_c4uq1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4upR, .-_c4upR


==================== Asm code ====================
2018-03-16 15:59:12.578113124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4upR_info:
	.quad	_c4upR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.579204675 UTC

.section .text
.align 8
_c4upX:
_c4upX:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4upX, .-_c4upX


==================== Asm code ====================
2018-03-16 15:59:12.580116174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4upX_info:
	.quad	_c4upX
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.585943084 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$ccompare_closure
.type GHC.Int.$fOrdInt32_$ccompare_closure, @object
GHC.Int.$fOrdInt32_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt32_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:12.586861863 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$ccompare_entry
.type GHC.Int.$fOrdInt32_$ccompare_entry, @object
GHC.Int.$fOrdInt32_$ccompare_entry:
_c4uqx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uqB
_c4uqC:
	movq $block_c4uqu_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uqu
_c4uqv:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uqB:
	movl $GHC.Int.$fOrdInt32_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$ccompare_entry, .-GHC.Int.$fOrdInt32_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:12.587596152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$ccompare_info
.type GHC.Int.$fOrdInt32_$ccompare_info, @object
GHC.Int.$fOrdInt32_$ccompare_info:
	.quad	GHC.Int.$fOrdInt32_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.588349017 UTC

.section .text
.align 8
_c4uqu:
_c4uqu:
	movq $block_c4uqA_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uqA
_c4uqE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uqu, .-_c4uqu


==================== Asm code ====================
2018-03-16 15:59:12.588965796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uqu_info:
	.quad	_c4uqu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.589816175 UTC

.section .text
.align 8
_c4uqA:
_c4uqA:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4uqT
_c4uqS:
	cmpq %rbx,%rax
	jg _c4uqP
_c4uqQ:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uqT:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uqP:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uqA, .-_c4uqA


==================== Asm code ====================
2018-03-16 15:59:12.590482333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uqA_info:
	.quad	_c4uqA
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.594693445 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmax_closure
.type GHC.Int.$fOrdInt32_$cmax_closure, @object
GHC.Int.$fOrdInt32_$cmax_closure:
	.quad	GHC.Int.$fOrdInt32_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:12.59551576 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$cmax_entry
.type GHC.Int.$fOrdInt32_$cmax_entry, @object
GHC.Int.$fOrdInt32_$cmax_entry:
_c4urj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4urn
_c4uro:
	movq $block_c4urg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4urg
_c4urh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4urn:
	movl $GHC.Int.$fOrdInt32_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$cmax_entry, .-GHC.Int.$fOrdInt32_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:12.596260038 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmax_info
.type GHC.Int.$fOrdInt32_$cmax_info, @object
GHC.Int.$fOrdInt32_$cmax_info:
	.quad	GHC.Int.$fOrdInt32_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.597029339 UTC

.section .text
.align 8
_c4urg:
_c4urg:
	movq $block_c4urm_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4urm
_c4urq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4urg, .-_c4urg


==================== Asm code ====================
2018-03-16 15:59:12.597790037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4urg_info:
	.quad	_c4urg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.598625139 UTC

.section .text
.align 8
_c4urm:
_c4urm:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4ury
_c4urz:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4ury:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4urm, .-_c4urm


==================== Asm code ====================
2018-03-16 15:59:12.599284366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4urm_info:
	.quad	_c4urm
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.60382941 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmin_closure
.type GHC.Int.$fOrdInt32_$cmin_closure, @object
GHC.Int.$fOrdInt32_$cmin_closure:
	.quad	GHC.Int.$fOrdInt32_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:12.604703524 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$cmin_entry
.type GHC.Int.$fOrdInt32_$cmin_entry, @object
GHC.Int.$fOrdInt32_$cmin_entry:
_c4us1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4us5
_c4us6:
	movq $block_c4urY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4urY
_c4urZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4us5:
	movl $GHC.Int.$fOrdInt32_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$cmin_entry, .-GHC.Int.$fOrdInt32_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:12.605453457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmin_info
.type GHC.Int.$fOrdInt32_$cmin_info, @object
GHC.Int.$fOrdInt32_$cmin_info:
	.quad	GHC.Int.$fOrdInt32_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.60621066 UTC

.section .text
.align 8
_c4urY:
_c4urY:
	movq $block_c4us4_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4us4
_c4us8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4urY, .-_c4urY


==================== Asm code ====================
2018-03-16 15:59:12.606814108 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4urY_info:
	.quad	_c4urY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.607651188 UTC

.section .text
.align 8
_c4us4:
_c4us4:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4usg
_c4ush:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4usg:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4us4, .-_c4us4


==================== Asm code ====================
2018-03-16 15:59:12.608327633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4us4_info:
	.quad	_c4us4
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.610401633 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_closure
.type GHC.Int.$fOrdInt32_closure, @object
GHC.Int.$fOrdInt32_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt32_closure+1
	.quad	GHC.Int.$fOrdInt32_$ccompare_closure+2
	.quad	GHC.Int.ltInt32_closure+2
	.quad	GHC.Int.leInt32_closure+2
	.quad	GHC.Int.gtInt32_closure+2
	.quad	GHC.Int.geInt32_closure+2
	.quad	GHC.Int.$fOrdInt32_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt32_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.615615478 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cinRange_closure
.type GHC.Int.$fIxInt32_$cinRange_closure, @object
GHC.Int.$fIxInt32_$cinRange_closure:
	.quad	GHC.Int.$fIxInt32_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:12.616500886 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cinRange_entry
.type GHC.Int.$fIxInt32_$cinRange_entry, @object
GHC.Int.$fIxInt32_$cinRange_entry:
_c4usK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4usT
_c4usU:
	movq $block_c4usH_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4usH
_c4usI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4usT:
	movl $GHC.Int.$fIxInt32_$cinRange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cinRange_entry, .-GHC.Int.$fIxInt32_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:12.617243586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cinRange_info
.type GHC.Int.$fIxInt32_$cinRange_info, @object
GHC.Int.$fIxInt32_$cinRange_info:
	.quad	GHC.Int.$fIxInt32_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.618275475 UTC

.section .text
.align 8
_c4usH:
_c4usH:
	movq $block_c4usN_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4usN
_c4usO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4usH, .-_c4usH


==================== Asm code ====================
2018-03-16 15:59:12.618950239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4usH_info:
	.quad	_c4usH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.619720962 UTC

.section .text
.align 8
_c4usN:
_c4usN:
	movq $block_c4usS_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4usS
_c4usX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4usN, .-_c4usN


==================== Asm code ====================
2018-03-16 15:59:12.620390322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4usN_info:
	.quad	_c4usN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.621760376 UTC

.section .text
.align 8
_c4usS:
_c4usS:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4ut5
_c4ut9:
	movq 8(%rbp),%rbx
	movq $block_c4ut8_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4ut8
_c4uta:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ut5:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4usS, .-_c4usS


==================== Asm code ====================
2018-03-16 15:59:12.622509091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4usS_info:
	.quad	_c4usS
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.623225311 UTC

.section .text
.align 8
_c4ut8:
_c4ut8:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4ut8, .-_c4ut8


==================== Asm code ====================
2018-03-16 15:59:12.623836573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ut8_info:
	.quad	_c4ut8
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.625642041 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt3_closure
.type GHC.Int.$fNumInt3_closure, @object
GHC.Int.$fNumInt3_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:12.629453865 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$csignum_closure
.type GHC.Int.$fNumInt32_$csignum_closure, @object
GHC.Int.$fNumInt32_$csignum_closure:
	.quad	GHC.Int.$fNumInt32_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:12.630287875 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$csignum_entry
.type GHC.Int.$fNumInt32_$csignum_entry, @object
GHC.Int.$fNumInt32_$csignum_entry:
_c4utS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4utT
_c4utU:
	movq $block_c4utP_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4utP
_c4utQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4utT:
	movl $GHC.Int.$fNumInt32_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$csignum_entry, .-GHC.Int.$fNumInt32_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:12.630973277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$csignum_info
.type GHC.Int.$fNumInt32_$csignum_info, @object
GHC.Int.$fNumInt32_$csignum_info:
	.quad	GHC.Int.$fNumInt32_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.63175578 UTC

.section .text
.align 8
_c4utP:
_c4utP:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4uu6
_c4uu7:
	movl $GHC.Int.$fNumInt3_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uu4:
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uu6:
	testq %rax,%rax
	je _c4uu4
_c4uu3:
	movl $GHC.Int.$fNumInt4_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4utP, .-_c4utP


==================== Asm code ====================
2018-03-16 15:59:12.632398355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4utP_info:
	.quad	_c4utP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.636112333 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cabs_closure
.type GHC.Int.$fNumInt32_$cabs_closure, @object
GHC.Int.$fNumInt32_$cabs_closure:
	.quad	GHC.Int.$fNumInt32_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:12.637024109 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cabs_entry
.type GHC.Int.$fNumInt32_$cabs_entry, @object
GHC.Int.$fNumInt32_$cabs_entry:
_c4uus:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uut
_c4uuu:
	movq $block_c4uup_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uup
_c4uuq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uut:
	movl $GHC.Int.$fNumInt32_$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cabs_entry, .-GHC.Int.$fNumInt32_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:12.638240629 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cabs_info
.type GHC.Int.$fNumInt32_$cabs_info, @object
GHC.Int.$fNumInt32_$cabs_info:
	.quad	GHC.Int.$fNumInt32_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.639118213 UTC

.section .text
.align 8
_c4uup:
_c4uup:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uuz
_c4uuy:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4uuL
_c4uuM:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4uuL:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	negq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uuz:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uup, .-_c4uup


==================== Asm code ====================
2018-03-16 15:59:12.639847181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uup_info:
	.quad	_c4uup
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.642441464 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_closure
.type GHC.Int.$fNumInt32_closure, @object
GHC.Int.$fNumInt32_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt32_$c+_closure+2
	.quad	GHC.Int.$fNumInt32_$c-_closure+2
	.quad	GHC.Int.$fNumInt32_$c*_closure+2
	.quad	GHC.Int.$fNumInt32_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt32_$cabs_closure+1
	.quad	GHC.Int.$fNumInt32_$csignum_closure+1
	.quad	GHC.Int.$fNumInt32_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.644195925 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt5_closure
.type GHC.Int.$fBitsInt5_closure, @object
GHC.Int.$fBitsInt5_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt4_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.646918647 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:12.64763261 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry:
_c4uv8:
	movl $GHC.Int.$fBitsInt5_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:12.648245721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.651860099 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbit_closure
.type GHC.Int.$fBitsInt32_$cbit_closure, @object
GHC.Int.$fBitsInt32_$cbit_closure:
	.quad	GHC.Int.$fBitsInt32_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:12.652696869 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cbit_entry
.type GHC.Int.$fBitsInt32_$cbit_entry, @object
GHC.Int.$fBitsInt32_$cbit_entry:
_c4uvn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uvo
_c4uvp:
	movq $block_c4uvk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uvk
_c4uvl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uvo:
	movl $GHC.Int.$fBitsInt32_$cbit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cbit_entry, .-GHC.Int.$fBitsInt32_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:12.653394871 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbit_info
.type GHC.Int.$fBitsInt32_$cbit_info, @object
GHC.Int.$fBitsInt32_$cbit_info:
	.quad	GHC.Int.$fBitsInt32_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.65437744 UTC

.section .text
.align 8
_c4uvk:
_c4uvk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uvu
_c4uvt:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4uvG
_c4uvH:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uvG:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uvu:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uvk, .-_c4uvk


==================== Asm code ====================
2018-03-16 15:59:12.655046561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uvk_info:
	.quad	_c4uvk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.65926833 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ctestBit_closure
.type GHC.Int.$fBitsInt32_$ctestBit_closure, @object
GHC.Int.$fBitsInt32_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt32_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:12.660672506 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ctestBit_entry
.type GHC.Int.$fBitsInt32_$ctestBit_entry, @object
GHC.Int.$fBitsInt32_$ctestBit_entry:
_c4uw3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uw7
_c4uw8:
	movq $block_c4uw0_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uw0
_c4uw1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uw7:
	movl $GHC.Int.$fBitsInt32_$ctestBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ctestBit_entry, .-GHC.Int.$fBitsInt32_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.661900205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ctestBit_info
.type GHC.Int.$fBitsInt32_$ctestBit_info, @object
GHC.Int.$fBitsInt32_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt32_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.662613998 UTC

.section .text
.align 8
_c4uw0:
_c4uw0:
	movq $block_c4uw6_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uw6
_c4uwa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uw0, .-_c4uw0


==================== Asm code ====================
2018-03-16 15:59:12.663249109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uw0_info:
	.quad	_c4uw0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.664026482 UTC

.section .text
.align 8
_c4uw6:
_c4uw6:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4uwO
_c4uwN:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4uwO
_c4uwC:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uwO:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uw6, .-_c4uw6


==================== Asm code ====================
2018-03-16 15:59:12.664707404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uw6_info:
	.quad	_c4uw6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.669624369 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateR_closure
.type GHC.Int.$fBitsInt32_$crotateR_closure, @object
GHC.Int.$fBitsInt32_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt32_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:12.6705142 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotateR_entry
.type GHC.Int.$fBitsInt32_$crotateR_entry, @object
GHC.Int.$fBitsInt32_$crotateR_entry:
_c4uxh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uxl
_c4uxm:
	movq $block_c4uxe_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uxe
_c4uxf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uxl:
	movl $GHC.Int.$fBitsInt32_$crotateR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$crotateR_entry, .-GHC.Int.$fBitsInt32_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:12.67112026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateR_info
.type GHC.Int.$fBitsInt32_$crotateR_info, @object
GHC.Int.$fBitsInt32_$crotateR_info:
	.quad	GHC.Int.$fBitsInt32_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.671832793 UTC

.section .text
.align 8
_c4uxe:
_c4uxe:
	movq $block_c4uxk_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uxk
_c4uxo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uxe, .-_c4uxe


==================== Asm code ====================
2018-03-16 15:59:12.672483395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uxe_info:
	.quad	_c4uxe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.673323099 UTC

.section .text
.align 8
_c4uxk:
_c4uxk:
	movq 7(%rbx),%rax
	negq %rax
	andl $31,%eax
	testq %rax,%rax
	jne _u4uyi
_c4uye:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4uyi:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4uxG
	.size _c4uxk, .-_c4uxk


==================== Asm code ====================
2018-03-16 15:59:12.67401745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uxk_info:
	.quad	_c4uxk
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.674858337 UTC

.section .text
.align 8
_c4uxG:
_c4uxG:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4uyb
_c4uya:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movl %ebx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $32,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uyb:
	movq $16,904(%r13)
	movq $block_c4uxF_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4uxG, .-_c4uxG


==================== Asm code ====================
2018-03-16 15:59:12.675639451 UTC

.section .text
.align 8
_c4uxF:
_c4uxF:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4uxG
	.size _c4uxF, .-_c4uxF


==================== Asm code ====================
2018-03-16 15:59:12.676257053 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uxF_info:
	.quad	_c4uxF
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.681964716 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplementBit_closure
.type GHC.Int.$fBitsInt32_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt32_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:12.682837355 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ccomplementBit_entry
.type GHC.Int.$fBitsInt32_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt32_$ccomplementBit_entry:
_c4uyY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uz2
_c4uz3:
	movq $block_c4uyV_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uyV
_c4uyW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uz2:
	movl $GHC.Int.$fBitsInt32_$ccomplementBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ccomplementBit_entry, .-GHC.Int.$fBitsInt32_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.683507185 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplementBit_info
.type GHC.Int.$fBitsInt32_$ccomplementBit_info, @object
GHC.Int.$fBitsInt32_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.684250849 UTC

.section .text
.align 8
_c4uyV:
_c4uyV:
	movq $block_c4uz1_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uz1
_c4uz5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uyV, .-_c4uyV


==================== Asm code ====================
2018-03-16 15:59:12.684877398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uyV_info:
	.quad	_c4uyV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.685817866 UTC

.section .text
.align 8
_c4uz1:
_c4uz1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uzb
_c4uza:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4uzz
_c4uzA:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4uzz:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uzb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uz1, .-_c4uz1


==================== Asm code ====================
2018-03-16 15:59:12.686541231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uz1_info:
	.quad	_c4uz1
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.690819485 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cclearBit_closure
.type GHC.Int.$fBitsInt32_$cclearBit_closure, @object
GHC.Int.$fBitsInt32_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt32_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:12.691709788 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cclearBit_entry
.type GHC.Int.$fBitsInt32_$cclearBit_entry, @object
GHC.Int.$fBitsInt32_$cclearBit_entry:
_c4uA4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uA8
_c4uA9:
	movq $block_c4uA1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uA1
_c4uA2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uA8:
	movl $GHC.Int.$fBitsInt32_$cclearBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cclearBit_entry, .-GHC.Int.$fBitsInt32_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.69234606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cclearBit_info
.type GHC.Int.$fBitsInt32_$cclearBit_info, @object
GHC.Int.$fBitsInt32_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt32_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.693024993 UTC

.section .text
.align 8
_c4uA1:
_c4uA1:
	movq $block_c4uA7_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uA7
_c4uAb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uA1, .-_c4uA1


==================== Asm code ====================
2018-03-16 15:59:12.693712478 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uA1_info:
	.quad	_c4uA1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.694627144 UTC

.section .text
.align 8
_c4uA7:
_c4uA7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uAh
_c4uAg:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4uAI
_c4uAU:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uAI:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movslq %edx,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uAh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uA7, .-_c4uA7


==================== Asm code ====================
2018-03-16 15:59:12.69544432 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uA7_info:
	.quad	_c4uA7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.700590723 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$csetBit_closure
.type GHC.Int.$fBitsInt32_$csetBit_closure, @object
GHC.Int.$fBitsInt32_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt32_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:12.701535263 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$csetBit_entry
.type GHC.Int.$fBitsInt32_$csetBit_entry, @object
GHC.Int.$fBitsInt32_$csetBit_entry:
_c4uBp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uBt
_c4uBu:
	movq $block_c4uBm_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uBm
_c4uBn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uBt:
	movl $GHC.Int.$fBitsInt32_$csetBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$csetBit_entry, .-GHC.Int.$fBitsInt32_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:12.702263539 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$csetBit_info
.type GHC.Int.$fBitsInt32_$csetBit_info, @object
GHC.Int.$fBitsInt32_$csetBit_info:
	.quad	GHC.Int.$fBitsInt32_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.703033461 UTC

.section .text
.align 8
_c4uBm:
_c4uBm:
	movq $block_c4uBs_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uBs
_c4uBw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uBm, .-_c4uBm


==================== Asm code ====================
2018-03-16 15:59:12.703675959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uBm_info:
	.quad	_c4uBm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.704532993 UTC

.section .text
.align 8
_c4uBs:
_c4uBs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uBC
_c4uBB:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4uC0
_c4uC1:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4uC0:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uBC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uBs, .-_c4uBs


==================== Asm code ====================
2018-03-16 15:59:12.705860071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uBs_info:
	.quad	_c4uBs
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.708971187 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateL_closure
.type GHC.Int.$fBitsInt32_$crotateL_closure, @object
GHC.Int.$fBitsInt32_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt32_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:12.710004408 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotateL_entry
.type GHC.Int.$fBitsInt32_$crotateL_entry, @object
GHC.Int.$fBitsInt32_$crotateL_entry:
_c4uCs:
	jmp GHC.Int.$fBitsInt32_$crotate_entry
	.size GHC.Int.$fBitsInt32_$crotateL_entry, .-GHC.Int.$fBitsInt32_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:12.71087172 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateL_info
.type GHC.Int.$fBitsInt32_$crotateL_info, @object
GHC.Int.$fBitsInt32_$crotateL_info:
	.quad	GHC.Int.$fBitsInt32_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.714140595 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_closure
.type GHC.Int.$fBitsInt32_closure, @object
GHC.Int.$fBitsInt32_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt32_closure+1
	.quad	GHC.Int.$fBitsInt32_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt32_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt32_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt32_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt32_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt6_closure+1
	.quad	GHC.Int.$fBitsInt32_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt32_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt32_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt32_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt32_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt32_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.716579593 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_closure
.type GHC.Int.$fFiniteBitsInt32_closure, @object
GHC.Int.$fFiniteBitsInt32_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt32_closure+1
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.72445298 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_go_closure
.type GHC.Int.$fReadInt32_go_closure, @object
GHC.Int.$fReadInt32_go_closure:
	.quad	GHC.Int.$fReadInt32_go_info


==================== Asm code ====================
2018-03-16 15:59:12.725335805 UTC

.section .text
.align 8
sat_s4lo6_entry:
_c4uCU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uCV
_c4uCW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt32_go_entry
_c4uCV:
	jmp *-16(%r13)
	.size sat_s4lo6_entry, .-sat_s4lo6_entry


==================== Asm code ====================
2018-03-16 15:59:12.725978254 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lo6_info:
	.quad	sat_s4lo6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:12.726746265 UTC

.section .text
.align 8
sat_s4lo4_entry:
_c4uD4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uDb
_c4uDc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c4uD1_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4uD1
_c4uD2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uDb:
	jmp *-16(%r13)
	.size sat_s4lo4_entry, .-sat_s4lo4_entry


==================== Asm code ====================
2018-03-16 15:59:12.727546541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lo4_info:
	.quad	sat_s4lo4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:12.728265024 UTC

.section .text
.align 8
_c4uD1:
_c4uD1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uDf
_c4uDe:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uDf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uD1, .-_c4uD1


==================== Asm code ====================
2018-03-16 15:59:12.728900748 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uD1_info:
	.quad	_c4uD1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.72975321 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_go_entry
.type GHC.Int.$fReadInt32_go_entry, @object
GHC.Int.$fReadInt32_go_entry:
_c4uDl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uDm
_c4uDn:
	movq $block_c4uCF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uCF
_c4uCG:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uDm:
	movl $GHC.Int.$fReadInt32_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt32_go_entry, .-GHC.Int.$fReadInt32_go_entry


==================== Asm code ====================
2018-03-16 15:59:12.730449215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_go_info
.type GHC.Int.$fReadInt32_go_info, @object
GHC.Int.$fReadInt32_go_info:
	.quad	GHC.Int.$fReadInt32_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.731298237 UTC

.section .text
.align 8
_c4uCF:
_c4uCF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4uDi
_c4uDj:
	movq $block_c4uCL_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uCL
_c4uCM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uDi:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uCF, .-_c4uCF


==================== Asm code ====================
2018-03-16 15:59:12.732021344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uCF_info:
	.quad	_c4uCF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.732847188 UTC

.section .text
.align 8
_c4uCL:
_c4uCL:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4uDv
_c4uDu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s4lo6_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq $sat_s4lo4_info,-64(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uDv:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uCL, .-_c4uCL


==================== Asm code ====================
2018-03-16 15:59:12.733723619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uCL_info:
	.quad	_c4uCL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.737290883 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadsPrec_closure
.type GHC.Int.$fReadInt32_$creadsPrec_closure, @object
GHC.Int.$fReadInt32_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt32_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.73820579 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_$creadsPrec_entry
.type GHC.Int.$fReadInt32_$creadsPrec_entry, @object
GHC.Int.$fReadInt32_$creadsPrec_entry:
_c4uEd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uEh
_c4uEi:
	movq $block_c4uEb_info,-16(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq %rsi,%rax
	movq %r14,%rsi
	movl $GHC.Read.$fReadInt2_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Read.$fReadInt_$sreadNumber_entry
_c4uEh:
	movl $GHC.Int.$fReadInt32_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt32_$creadsPrec_entry, .-GHC.Int.$fReadInt32_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:12.738964575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadsPrec_info
.type GHC.Int.$fReadInt32_$creadsPrec_info, @object
GHC.Int.$fReadInt32_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt32_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4lDl_srt+840


==================== Asm code ====================
2018-03-16 15:59:12.739719558 UTC

.section .text
.align 8
_c4uEb:
_c4uEb:
	movq 8(%rbp),%rax
	movq $block_c4uEg_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
	.size _c4uEb, .-_c4uEb


==================== Asm code ====================
2018-03-16 15:59:12.740819186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uEb_info:
	.quad	_c4uEb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.741563882 UTC

.section .text
.align 8
_c4uEg:
_c4uEg:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt32_go_entry
	.size _c4uEg, .-_c4uEg


==================== Asm code ====================
2018-03-16 15:59:12.742122823 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uEg_info:
	.quad	_c4uEg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.746598384 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt6_closure
.type GHC.Int.$fReadInt6_closure, @object
GHC.Int.$fReadInt6_closure:
	.quad	GHC.Int.$fReadInt6_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.747334967 UTC

.section .text
.align 8
sat_s4lod_entry:
_c4uEI:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt32_$creadsPrec_entry
	.size sat_s4lod_entry, .-sat_s4lod_entry


==================== Asm code ====================
2018-03-16 15:59:12.747910348 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lod_info:
	.quad	sat_s4lod_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4lDl_srt+840


==================== Asm code ====================
2018-03-16 15:59:12.748759485 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt6_entry
.type GHC.Int.$fReadInt6_entry, @object
GHC.Int.$fReadInt6_entry:
_c4uEO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uEP
_c4uEQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uES
_c4uER:
	movq $sat_s4lod_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_c4uEL_info,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4uES:
	movq $16,904(%r13)
_c4uEP:
	movl $GHC.Int.$fReadInt6_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt6_entry, .-GHC.Int.$fReadInt6_entry


==================== Asm code ====================
2018-03-16 15:59:12.749809936 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt6_info
.type GHC.Int.$fReadInt6_info, @object
GHC.Int.$fReadInt6_info:
	.quad	GHC.Int.$fReadInt6_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S4lDl_srt+840


==================== Asm code ====================
2018-03-16 15:59:12.750881552 UTC

.section .text
.align 8
_c4uEL:
_c4uEL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uEV
_c4uEU:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uEV:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uEL, .-_c4uEL


==================== Asm code ====================
2018-03-16 15:59:12.751590093 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uEL_info:
	.quad	_c4uEL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.754901773 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt5_closure
.type GHC.Int.$fReadInt5_closure, @object
GHC.Int.$fReadInt5_closure:
	.quad	GHC.Int.$fReadInt5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.755486151 UTC

.section .data.rel.ro
.align 8
.align 1
u4uFh_srtd:
	.quad	S4lDl_srt+504
	.quad	46
	.quad	35184372088833


==================== Asm code ====================
2018-03-16 15:59:12.756392573 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt5_entry
.type GHC.Int.$fReadInt5_entry, @object
GHC.Int.$fReadInt5_entry:
_c4uFe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uFf
_c4uFg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4uFd
_c4uFc:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$fReadInt6_closure+2,%r14d
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Int.$fIxInt1_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c4uFf:
	jmp *-16(%r13)
_c4uFd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt5_entry, .-GHC.Int.$fReadInt5_entry


==================== Asm code ====================
2018-03-16 15:59:12.7571576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt5_info
.type GHC.Int.$fReadInt5_info, @object
GHC.Int.$fReadInt5_info:
	.quad	GHC.Int.$fReadInt5_entry
	.quad	0
	.quad	-4294967275
	.quad	u4uFh_srtd


==================== Asm code ====================
2018-03-16 15:59:12.760724991 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadList_closure
.type GHC.Int.$fReadInt32_$creadList_closure, @object
GHC.Int.$fReadInt32_$creadList_closure:
	.quad	GHC.Int.$fReadInt32_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.763334866 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_$creadList_entry
.type GHC.Int.$fReadInt32_$creadList_entry, @object
GHC.Int.$fReadInt32_$creadList_entry:
_c4uFu:
	movq %r14,%rsi
	movl $GHC.Int.$fReadInt5_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Int.$fReadInt32_$creadList_entry, .-GHC.Int.$fReadInt32_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:12.764277066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadList_info
.type GHC.Int.$fReadInt32_$creadList_info, @object
GHC.Int.$fReadInt32_$creadList_info:
	.quad	GHC.Int.$fReadInt32_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4lDl_srt+872


==================== Asm code ====================
2018-03-16 15:59:12.769374732 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt4_closure
.type GHC.Int.$fReadInt4_closure, @object
GHC.Int.$fReadInt4_closure:
	.quad	GHC.Int.$fReadInt4_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.770603293 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt4_entry
.type GHC.Int.$fReadInt4_entry, @object
GHC.Int.$fReadInt4_entry:
_c4uFI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uFJ
_c4uFK:
	movq $block_c4uFF_info,-8(%rbp)
	movl $GHC.Int.$fReadInt32_$creadList_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4uFJ:
	movl $GHC.Int.$fReadInt4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt4_entry, .-GHC.Int.$fReadInt4_entry


==================== Asm code ====================
2018-03-16 15:59:12.771736044 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt4_info
.type GHC.Int.$fReadInt4_info, @object
GHC.Int.$fReadInt4_info:
	.quad	GHC.Int.$fReadInt4_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+880


==================== Asm code ====================
2018-03-16 15:59:12.772848615 UTC

.section .text
.align 8
_c4uFF:
_c4uFF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uFN
_c4uFM:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uFN:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uFF, .-_c4uFF


==================== Asm code ====================
2018-03-16 15:59:12.773929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uFF_info:
	.quad	_c4uFF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.776725088 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_closure
.type GHC.Int.$fReadInt32_closure, @object
GHC.Int.$fReadInt32_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt32_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt32_$creadList_closure+1
	.quad	GHC.Int.$fReadInt6_closure+2
	.quad	GHC.Int.$fReadInt4_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.784381785 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquot_closure
.type GHC.Int.$fIntegralInt32_$cquot_closure, @object
GHC.Int.$fIntegralInt32_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt32_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.785741844 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cquot_entry
.type GHC.Int.$fIntegralInt32_$cquot_entry, @object
GHC.Int.$fIntegralInt32_$cquot_entry:
_c4uG5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uG9
_c4uGa:
	movq $block_c4uG2_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uG2
_c4uG3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uG9:
	movl $GHC.Int.$fIntegralInt32_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cquot_entry, .-GHC.Int.$fIntegralInt32_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:12.786711112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquot_info
.type GHC.Int.$fIntegralInt32_$cquot_info, @object
GHC.Int.$fIntegralInt32_$cquot_info:
	.quad	GHC.Int.$fIntegralInt32_$cquot_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4lDl_srt+896


==================== Asm code ====================
2018-03-16 15:59:12.787931686 UTC

.section .text
.align 8
_c4uG2:
_c4uG2:
	movq $block_c4uG8_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uG8
_c4uGc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uG2, .-_c4uG2


==================== Asm code ====================
2018-03-16 15:59:12.788985041 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uG2_info:
	.quad	_c4uG2
	.quad	1
	.quad	12884901918
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:12.791925447 UTC

.section .text
.align 8
_c4uG8:
_c4uG8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uGi
_c4uGh:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4uGJ
_c4uGH:
	cmpq $-2147483648,%rax
	je _c4uGG
_c4uGF:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4uGJ:
	testq %rbx,%rbx
	jne _c4uGt
_c4uGI:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4uGG:
	addq $-16,%r12
	movl $GHC.Real.overflowError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4uGt:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	cqto
	idivq %rbx
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uGi:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uG8, .-_c4uG8


==================== Asm code ====================
2018-03-16 15:59:12.793315012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uG8_info:
	.quad	_c4uG8
	.quad	65
	.quad	12884901918
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:12.800709332 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$crem_closure
.type GHC.Int.$fIntegralInt32_$crem_closure, @object
GHC.Int.$fIntegralInt32_$crem_closure:
	.quad	GHC.Int.$fIntegralInt32_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.802156129 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$crem_entry
.type GHC.Int.$fIntegralInt32_$crem_entry, @object
GHC.Int.$fIntegralInt32_$crem_entry:
_c4uHb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uHf
_c4uHg:
	movq $block_c4uH8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uH8
_c4uH9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uHf:
	movl $GHC.Int.$fIntegralInt32_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$crem_entry, .-GHC.Int.$fIntegralInt32_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:12.803179886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$crem_info
.type GHC.Int.$fIntegralInt32_$crem_info, @object
GHC.Int.$fIntegralInt32_$crem_info:
	.quad	GHC.Int.$fIntegralInt32_$crem_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.804268904 UTC

.section .text
.align 8
_c4uH8:
_c4uH8:
	movq $block_c4uHe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uHe
_c4uHi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uH8, .-_c4uH8


==================== Asm code ====================
2018-03-16 15:59:12.805308271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uH8_info:
	.quad	_c4uH8
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.806622198 UTC

.section .text
.align 8
_c4uHe:
_c4uHe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uHo
_c4uHn:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4uHC
_c4uHA:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4uHC:
	testq %rax,%rax
	jne _c4uHz
_c4uHB:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4uHz:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movslq %edx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uHo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uHe, .-_c4uHe


==================== Asm code ====================
2018-03-16 15:59:12.807843609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uHe_info:
	.quad	_c4uHe
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.813775147 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv1_closure
.type GHC.Int.$w$cdiv1_closure, @object
GHC.Int.$w$cdiv1_closure:
	.quad	GHC.Int.$w$cdiv1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.815187517 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv1_entry
.type GHC.Int.$w$cdiv1_entry, @object
GHC.Int.$w$cdiv1_entry:
_c4uI4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uI5
_c4uI6:
	cmpq $-1,%rsi
	je _c4uI2
_u4uIq:
	testq %rsi,%rsi
	je _c4uI3
_c4uI1:
	movq $block_c4uI8_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4uIp:
	movl $GHC.Real.overflowError_closure,%ebx
	jmp stg_ap_0_fast
_c4uI2:
	cmpq $-2147483648,%r14
	je _c4uIp
_c4uIn:
	movq $block_c4uIh_info,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp GHC.Classes.divInt#_entry
_c4uI5:
	movl $GHC.Int.$w$cdiv1_closure,%ebx
	jmp *-8(%r13)
_c4uI3:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdiv1_entry, .-GHC.Int.$w$cdiv1_entry


==================== Asm code ====================
2018-03-16 15:59:12.816346243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv1_info
.type GHC.Int.$w$cdiv1_info, @object
GHC.Int.$w$cdiv1_info:
	.quad	GHC.Int.$w$cdiv1_entry
	.quad	0
	.quad	47244640270
	.quad	8589934604
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:12.817490015 UTC

.section .text
.align 8
_c4uIh:
_c4uIh:
	movslq %ebx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uIh, .-_c4uIh


==================== Asm code ====================
2018-03-16 15:59:12.818400963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uIh_info:
	.quad	_c4uIh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.819285721 UTC

.section .text
.align 8
_c4uI8:
_c4uI8:
	movslq %ebx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uI8, .-_c4uI8


==================== Asm code ====================
2018-03-16 15:59:12.82103426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uI8_info:
	.quad	_c4uI8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.827359763 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdiv_closure
.type GHC.Int.$fIntegralInt32_$cdiv_closure, @object
GHC.Int.$fIntegralInt32_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt32_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.828573007 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cdiv_entry
.type GHC.Int.$fIntegralInt32_$cdiv_entry, @object
GHC.Int.$fIntegralInt32_$cdiv_entry:
_c4uIL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uIY
_c4uIZ:
	movq $block_c4uII_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uII
_c4uIJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uIY:
	movl $GHC.Int.$fIntegralInt32_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cdiv_entry, .-GHC.Int.$fIntegralInt32_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:12.829537025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdiv_info
.type GHC.Int.$fIntegralInt32_$cdiv_info, @object
GHC.Int.$fIntegralInt32_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt32_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+928


==================== Asm code ====================
2018-03-16 15:59:12.830616599 UTC

.section .text
.align 8
_c4uII:
_c4uII:
	movq $block_c4uIO_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uIO
_c4uIP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uII, .-_c4uII


==================== Asm code ====================
2018-03-16 15:59:12.831510718 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uII_info:
	.quad	_c4uII
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+928


==================== Asm code ====================
2018-03-16 15:59:12.832500097 UTC

.section .text
.align 8
_c4uIO:
_c4uIO:
	movq 8(%rbp),%rax
	movq $block_c4uIT_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv1_entry
	.size _c4uIO, .-_c4uIO


==================== Asm code ====================
2018-03-16 15:59:12.83381915 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uIO_info:
	.quad	_c4uIO
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+928


==================== Asm code ====================
2018-03-16 15:59:12.83482014 UTC

.section .text
.align 8
_c4uIT:
_c4uIT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uJ4
_c4uJ3:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uJ4:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4uIT, .-_c4uIT


==================== Asm code ====================
2018-03-16 15:59:12.835695546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uIT_info:
	.quad	_c4uIT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.842610688 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cmod_closure
.type GHC.Int.$fIntegralInt32_$cmod_closure, @object
GHC.Int.$fIntegralInt32_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt32_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.843858554 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cmod_entry
.type GHC.Int.$fIntegralInt32_$cmod_entry, @object
GHC.Int.$fIntegralInt32_$cmod_entry:
_c4uJv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uJz
_c4uJA:
	movq $block_c4uJs_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uJs
_c4uJt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uJz:
	movl $GHC.Int.$fIntegralInt32_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cmod_entry, .-GHC.Int.$fIntegralInt32_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:12.844946176 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cmod_info
.type GHC.Int.$fIntegralInt32_$cmod_info, @object
GHC.Int.$fIntegralInt32_$cmod_info:
	.quad	GHC.Int.$fIntegralInt32_$cmod_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.846076857 UTC

.section .text
.align 8
_c4uJs:
_c4uJs:
	movq $block_c4uJy_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uJy
_c4uJC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uJs, .-_c4uJs


==================== Asm code ====================
2018-03-16 15:59:12.847023311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uJs_info:
	.quad	_c4uJs
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.848834046 UTC

.section .text
.align 8
_c4uJy:
_c4uJy:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4uJY
_c4uJW:
	movl $GHC.Int.$fBitsInt6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4uJY:
	testq %rax,%rax
	jne _c4uJS
_c4uJX:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4uJS:
	movq 8(%rbp),%rbx
	movq $block_c4uJJ_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _c4uJy, .-_c4uJy


==================== Asm code ====================
2018-03-16 15:59:12.850001895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uJy_info:
	.quad	_c4uJy
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.851036979 UTC

.section .text
.align 8
_c4uJJ:
_c4uJJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uJV
_c4uJU:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uJV:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4uJJ, .-_c4uJJ


==================== Asm code ====================
2018-03-16 15:59:12.85197307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uJJ_info:
	.quad	_c4uJJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.85467547 UTC

.section .data
.align 8
.align 1
lvl8_r4kPz_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt6_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.863071821 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquotRem_closure
.type GHC.Int.$fIntegralInt32_$cquotRem_closure, @object
GHC.Int.$fIntegralInt32_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.864358533 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cquotRem_entry
.type GHC.Int.$fIntegralInt32_$cquotRem_entry, @object
GHC.Int.$fIntegralInt32_$cquotRem_entry:
_c4uKs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uKw
_c4uKx:
	movq $block_c4uKp_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uKp
_c4uKq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uKw:
	movl $GHC.Int.$fIntegralInt32_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cquotRem_entry, .-GHC.Int.$fIntegralInt32_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:12.866085213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquotRem_info
.type GHC.Int.$fIntegralInt32_$cquotRem_info, @object
GHC.Int.$fIntegralInt32_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_entry
	.quad	0
	.quad	416611827726
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.867195089 UTC

.section .text
.align 8
_c4uKp:
_c4uKp:
	movq $block_c4uKv_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uKv
_c4uKz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uKp, .-_c4uKp


==================== Asm code ====================
2018-03-16 15:59:12.868146686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uKp_info:
	.quad	_c4uKp
	.quad	1
	.quad	279172874270
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.869812718 UTC

.section .text
.align 8
_c4uKv:
_c4uKv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4uKF
_c4uKE:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4uLa
_c4uL8:
	cmpq $-2147483648,%rax
	je _c4uL7
_c4uL6:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-48(%r12)
	movslq %edx,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movslq %eax,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4uLa:
	testq %rbx,%rbx
	jne _c4uKS
_c4uL9:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4uL7:
	addq $-56,%r12
	movl $lvl8_r4kPz_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uKS:
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-48(%r12)
	movslq %edx,%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movslq %eax,%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uKF:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uKv, .-_c4uKv


==================== Asm code ====================
2018-03-16 15:59:12.87130554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uKv_info:
	.quad	_c4uKv
	.quad	65
	.quad	279172874270
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:12.88273354 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod1_closure
.type GHC.Int.$w$cdivMod1_closure, @object
GHC.Int.$w$cdivMod1_closure:
	.quad	GHC.Int.$w$cdivMod1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.883699113 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod1_entry
.type GHC.Int.$w$cdivMod1_entry, @object
GHC.Int.$w$cdivMod1_entry:
_c4uLK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uLL
_c4uLM:
	testq %rsi,%rsi
	je _c4uLJ
_c4uLI:
	cmpq $-1,%rsi
	je _c4uOf
_u4uOg:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4uLR
_c4uOf:
	cmpq $-2147483648,%r14
	je _c4uOe
_u4uOh:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4uLR
_c4uOe:
	movl $GHC.Int.$fBitsInt6_closure+1,%r14d
	movl $GHC.Real.overflowError_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4uLL:
	movl $GHC.Int.$w$cdivMod1_closure,%ebx
	jmp *-8(%r13)
_c4uLJ:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdivMod1_entry, .-GHC.Int.$w$cdivMod1_entry


==================== Asm code ====================
2018-03-16 15:59:12.884456743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod1_info
.type GHC.Int.$w$cdivMod1_info, @object
GHC.Int.$w$cdivMod1_info:
	.quad	GHC.Int.$w$cdivMod1_entry
	.quad	0
	.quad	1112396529678
	.quad	8589934604
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:12.886237706 UTC

.section .text
.align 8
_c4uLR:
_c4uLR:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4uLV
_c4uLU:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4uMO
_c4uO5:
	testq %rbx,%rbx
	jge _c4uNI
_c4uO4:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uNI:
	testq %rax,%rax
	jge _c4uN5
_c4uNG:
	testq %rbx,%rbx
	jle _c4uNj
_c4uNF:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uNj:
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uN5:
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uMO:
	testq %rax,%rax
	jge _c4uMb
_c4uMM:
	testq %rbx,%rbx
	jle _c4uMp
_c4uML:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uMp:
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uMb:
	cqto
	idivq %rbx
	movq $GHC.Int.I32#_con_info,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uLV:
	movq $32,904(%r13)
	movq $block_c4uLR_info,(%rbp)
	jmp stg_gc_noregs
	.size _c4uLR, .-_c4uLR


==================== Asm code ====================
2018-03-16 15:59:12.887604078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uLR_info:
	.quad	_c4uLR
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.891800773 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdivMod_closure
.type GHC.Int.$fIntegralInt32_$cdivMod_closure, @object
GHC.Int.$fIntegralInt32_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.892725589 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cdivMod_entry
.type GHC.Int.$fIntegralInt32_$cdivMod_entry, @object
GHC.Int.$fIntegralInt32_$cdivMod_entry:
_c4uP7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uPi
_c4uPj:
	movq $block_c4uP4_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uP4
_c4uP5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uPi:
	movl $GHC.Int.$fIntegralInt32_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cdivMod_entry, .-GHC.Int.$fIntegralInt32_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:12.893419266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdivMod_info
.type GHC.Int.$fIntegralInt32_$cdivMod_info, @object
GHC.Int.$fIntegralInt32_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+968


==================== Asm code ====================
2018-03-16 15:59:12.894163399 UTC

.section .text
.align 8
_c4uP4:
_c4uP4:
	movq $block_c4uPa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uPa
_c4uPb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uP4, .-_c4uP4


==================== Asm code ====================
2018-03-16 15:59:12.894770401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uP4_info:
	.quad	_c4uP4
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+968


==================== Asm code ====================
2018-03-16 15:59:12.895458809 UTC

.section .text
.align 8
_c4uPa:
_c4uPa:
	movq 8(%rbp),%rax
	movq $block_c4uPf_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod1_entry
	.size _c4uPa, .-_c4uPa


==================== Asm code ====================
2018-03-16 15:59:12.896153007 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uPa_info:
	.quad	_c4uPa
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+968


==================== Asm code ====================
2018-03-16 15:59:12.897422878 UTC

.section .text
.align 8
_c4uPf:
_c4uPf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4uPo
_c4uPn:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uPo:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4uPf, .-_c4uPf


==================== Asm code ====================
2018-03-16 15:59:12.898093297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uPf_info:
	.quad	_c4uPf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.902313812 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt32_$ctoRational_closure
.type GHC.Int.$fRealInt32_$ctoRational_closure, @object
GHC.Int.$fRealInt32_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt32_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.903179768 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt32_$ctoRational_entry
.type GHC.Int.$fRealInt32_$ctoRational_entry, @object
GHC.Int.$fRealInt32_$ctoRational_entry:
_c4uPP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uQ3
_c4uQ4:
	movq $block_c4uPM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uPM
_c4uPN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uQ3:
	movl $GHC.Int.$fRealInt32_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt32_$ctoRational_entry, .-GHC.Int.$fRealInt32_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:12.90383621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt32_$ctoRational_info
.type GHC.Int.$fRealInt32_$ctoRational_info, @object
GHC.Int.$fRealInt32_$ctoRational_info:
	.quad	GHC.Int.$fRealInt32_$ctoRational_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S4lDl_srt+984


==================== Asm code ====================
2018-03-16 15:59:12.904468977 UTC

.section .text
.align 8
_c4uPM:
_c4uPM:
	movq $block_c4uPS_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4uPM, .-_c4uPM


==================== Asm code ====================
2018-03-16 15:59:12.905079377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uPM_info:
	.quad	_c4uPM
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:12.905821867 UTC

.section .text
.align 8
_c4uPS:
_c4uPS:
	movq $block_c4uPW_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c4uPS, .-_c4uPS


==================== Asm code ====================
2018-03-16 15:59:12.906422489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uPS_info:
	.quad	_c4uPS
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:12.907096463 UTC

.section .text
.align 8
_c4uPW:
_c4uPW:
	movq $block_c4uQ0_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c4uPW, .-_c4uPW


==================== Asm code ====================
2018-03-16 15:59:12.907689459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uPW_info:
	.quad	_c4uPW
	.quad	0
	.quad	12884901918
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:12.908427321 UTC

.section .text
.align 8
_c4uQ0:
_c4uQ0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4uQa
_c4uQ9:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uQa:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4uQ0, .-_c4uQ0


==================== Asm code ====================
2018-03-16 15:59:12.909044999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uQ0_info:
	.quad	_c4uQ0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.911225209 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt32_closure
.type GHC.Int.$fRealInt32_closure, @object
GHC.Int.$fRealInt32_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt32_closure+1
	.quad	GHC.Int.$fOrdInt32_closure+1
	.quad	GHC.Int.$fRealInt32_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.913149072 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_closure
.type GHC.Int.$fIntegralInt32_closure, @object
GHC.Int.$fIntegralInt32_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt32_closure+1
	.quad	GHC.Int.$fEnumInt32_closure+1
	.quad	GHC.Int.$fIntegralInt32_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt32_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.916936562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crange_closure
.type GHC.Int.$fIxInt32_$crange_closure, @object
GHC.Int.$fIxInt32_$crange_closure:
	.quad	GHC.Int.$fIxInt32_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.917845231 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$crange_entry
.type GHC.Int.$fIxInt32_$crange_entry, @object
GHC.Int.$fIxInt32_$crange_entry:
_c4uQE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uQF
_c4uQG:
	movq $block_c4uQB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uQB
_c4uQC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uQF:
	movl $GHC.Int.$fIxInt32_$crange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$crange_entry, .-GHC.Int.$fIxInt32_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:12.91851751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crange_info
.type GHC.Int.$fIxInt32_$crange_info, @object
GHC.Int.$fIxInt32_$crange_info:
	.quad	GHC.Int.$fIxInt32_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4lDl_srt+1016


==================== Asm code ====================
2018-03-16 15:59:12.919188733 UTC

.section .text
.align 8
_c4uQB:
_c4uQB:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt32_$cenumFromTo_entry
	.size _c4uQB, .-_c4uQB


==================== Asm code ====================
2018-03-16 15:59:12.919776154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uQB_info:
	.quad	_c4uQB
	.quad	0
	.quad	4294967326
	.quad	S4lDl_srt+1024


==================== Asm code ====================
2018-03-16 15:59:12.924057186 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeIndex_closure
.type GHC.Int.$fIxInt32_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt32_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:12.924955562 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cunsafeIndex_entry
.type GHC.Int.$fIxInt32_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt32_$cunsafeIndex_entry:
_c4uR1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uRi
_c4uRj:
	movq $block_c4uQY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uQY
_c4uQZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uRi:
	movl $GHC.Int.$fIxInt32_$cunsafeIndex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cunsafeIndex_entry, .-GHC.Int.$fIxInt32_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:12.926047722 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeIndex_info
.type GHC.Int.$fIxInt32_$cunsafeIndex_info, @object
GHC.Int.$fIxInt32_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.92675782 UTC

.section .text
.align 8
_c4uQY:
_c4uQY:
	movq $block_c4uR4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uR4
_c4uR5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uQY, .-_c4uQY


==================== Asm code ====================
2018-03-16 15:59:12.927378192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uQY_info:
	.quad	_c4uQY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.92806423 UTC

.section .text
.align 8
_c4uR4:
_c4uR4:
	movq $block_c4uR9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uR9
_c4uRa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uR4, .-_c4uR4


==================== Asm code ====================
2018-03-16 15:59:12.928664783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uR4_info:
	.quad	_c4uR4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.929520921 UTC

.section .text
.align 8
_c4uR9:
_c4uR9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uRo
_c4uRn:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uRo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uR9, .-_c4uR9


==================== Asm code ====================
2018-03-16 15:59:12.93019668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uR9_info:
	.quad	_c4uR9
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.935354291 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crangeSize_closure
.type GHC.Int.$fIxInt32_$crangeSize_closure, @object
GHC.Int.$fIxInt32_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt32_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.936251842 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$crangeSize_entry
.type GHC.Int.$fIxInt32_$crangeSize_entry, @object
GHC.Int.$fIxInt32_$crangeSize_entry:
_c4uRT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uS2
_c4uS3:
	movq $block_c4uRQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uRQ
_c4uRR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uS2:
	movl $GHC.Int.$fIxInt32_$crangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$crangeSize_entry, .-GHC.Int.$fIxInt32_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.936944195 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crangeSize_info
.type GHC.Int.$fIxInt32_$crangeSize_info, @object
GHC.Int.$fIxInt32_$crangeSize_info:
	.quad	GHC.Int.$fIxInt32_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.938356965 UTC

.section .text
.align 8
_c4uRQ:
_c4uRQ:
	movq $block_c4uRW_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uRW
_c4uRX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uRQ, .-_c4uRQ


==================== Asm code ====================
2018-03-16 15:59:12.938966913 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uRQ_info:
	.quad	_c4uRQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.939634919 UTC

.section .text
.align 8
_c4uRW:
_c4uRW:
	movq $block_c4uS1_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uS1
_c4uS6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uRW, .-_c4uRW


==================== Asm code ====================
2018-03-16 15:59:12.940246809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uRW_info:
	.quad	_c4uRW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.941077329 UTC

.section .text
.align 8
_c4uS1:
_c4uS1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uSc
_c4uSb:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4uSg
_c4uSq:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uSg:
	addq $-16,%r12
	movl $GHC.Int.$fIxInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uSc:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uS1, .-_c4uS1


==================== Asm code ====================
2018-03-16 15:59:12.9418101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uS1_info:
	.quad	_c4uS1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.94608736 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:12.946952931 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_entry:
_c4uSX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uTh
_c4uTi:
	movq $block_c4uSU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uSU
_c4uSV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uTh:
	movl $GHC.Int.$fIxInt32_$cunsafeRangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt32_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:12.947671205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:12.948406986 UTC

.section .text
.align 8
_c4uSU:
_c4uSU:
	movq $block_c4uT0_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uT0
_c4uT1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uSU, .-_c4uSU


==================== Asm code ====================
2018-03-16 15:59:12.949049689 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uSU_info:
	.quad	_c4uSU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.949815039 UTC

.section .text
.align 8
_c4uT0:
_c4uT0:
	movq $block_c4uT5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uT5
_c4uT6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uT0, .-_c4uT0


==================== Asm code ====================
2018-03-16 15:59:12.950485727 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uT0_info:
	.quad	_c4uT0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.951301238 UTC

.section .text
.align 8
_c4uT5:
_c4uT5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uTn
_c4uTm:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uTn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uT5, .-_c4uT5


==================== Asm code ====================
2018-03-16 15:59:12.952019628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uT5_info:
	.quad	_c4uT5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.958216709 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cindex_closure
.type GHC.Int.$fIxInt32_$cindex_closure, @object
GHC.Int.$fIxInt32_$cindex_closure:
	.quad	GHC.Int.$fIxInt32_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.959089956 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cindex_entry
.type GHC.Int.$fIxInt32_$cindex_entry, @object
GHC.Int.$fIxInt32_$cindex_entry:
_c4uTT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uU2
_c4uU3:
	movq $block_c4uTQ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uTQ
_c4uTR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uU2:
	movl $GHC.Int.$fIxInt32_$cindex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cindex_entry, .-GHC.Int.$fIxInt32_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:12.959770214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cindex_info
.type GHC.Int.$fIxInt32_$cindex_info, @object
GHC.Int.$fIxInt32_$cindex_info:
	.quad	GHC.Int.$fIxInt32_$cindex_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+1032


==================== Asm code ====================
2018-03-16 15:59:12.960484995 UTC

.section .text
.align 8
_c4uTQ:
_c4uTQ:
	movq $block_c4uTW_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uTW
_c4uTX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uTQ, .-_c4uTQ


==================== Asm code ====================
2018-03-16 15:59:12.96108659 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uTQ_info:
	.quad	_c4uTQ
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:12.961885625 UTC

.section .text
.align 8
_c4uTW:
_c4uTW:
	movq $block_c4uU1_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4uU1
_c4uU6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uTW, .-_c4uTW


==================== Asm code ====================
2018-03-16 15:59:12.962444767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uTW_info:
	.quad	_c4uTW
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:12.963274752 UTC

.section .text
.align 8
_c4uU1:
_c4uU1:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4uUe
_c4uUi:
	movq $block_c4uUh_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uUh
_c4uUj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uUe:
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uU1, .-_c4uU1


==================== Asm code ====================
2018-03-16 15:59:12.963890833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uU1_info:
	.quad	_c4uU1
	.quad	130
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:12.964731511 UTC

.section .text
.align 8
_c4uUh:
_c4uUh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4uUp
_c4uUo:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4uUt
_c4uUA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uUt:
	addq $-16,%r12
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4uUp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4uUh, .-_c4uUh


==================== Asm code ====================
2018-03-16 15:59:12.965530927 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uUh_info:
	.quad	_c4uUh
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:12.967517423 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_closure
.type GHC.Int.$fIxInt32_closure, @object
GHC.Int.$fIxInt32_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt32_closure+1
	.quad	GHC.Int.$fIxInt32_$crange_closure+1
	.quad	GHC.Int.$fIxInt32_$cindex_closure+2
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt32_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt32_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:12.972254641 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt64_closure
.type GHC.Int.eqInt64_closure, @object
GHC.Int.eqInt64_closure:
	.quad	GHC.Int.eqInt64_info


==================== Asm code ====================
2018-03-16 15:59:12.973157195 UTC

.section .text
.align 8
.globl GHC.Int.eqInt64_entry
.type GHC.Int.eqInt64_entry, @object
GHC.Int.eqInt64_entry:
_c4uVd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uVh
_c4uVi:
	movq $block_c4uVa_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uVa
_c4uVb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uVh:
	movl $GHC.Int.eqInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.eqInt64_entry, .-GHC.Int.eqInt64_entry


==================== Asm code ====================
2018-03-16 15:59:12.973899545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt64_info
.type GHC.Int.eqInt64_info, @object
GHC.Int.eqInt64_info:
	.quad	GHC.Int.eqInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.974598339 UTC

.section .text
.align 8
_c4uVa:
_c4uVa:
	movq $block_c4uVg_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uVg
_c4uVk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uVa, .-_c4uVa


==================== Asm code ====================
2018-03-16 15:59:12.975220826 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uVa_info:
	.quad	_c4uVa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.975920118 UTC

.section .text
.align 8
_c4uVg:
_c4uVg:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uVg, .-_c4uVg


==================== Asm code ====================
2018-03-16 15:59:12.976519546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uVg_info:
	.quad	_c4uVg
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.978316676 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt64_closure
.type GHC.Int.$fEqInt64_closure, @object
GHC.Int.$fEqInt64_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt64_closure+2
	.quad	GHC.Int.neInt64_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:12.981957958 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt64_closure
.type GHC.Int.gtInt64_closure, @object
GHC.Int.gtInt64_closure:
	.quad	GHC.Int.gtInt64_info


==================== Asm code ====================
2018-03-16 15:59:12.98284575 UTC

.section .text
.align 8
.globl GHC.Int.gtInt64_entry
.type GHC.Int.gtInt64_entry, @object
GHC.Int.gtInt64_entry:
_c4uVR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uVV
_c4uVW:
	movq $block_c4uVO_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uVO
_c4uVP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uVV:
	movl $GHC.Int.gtInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.gtInt64_entry, .-GHC.Int.gtInt64_entry


==================== Asm code ====================
2018-03-16 15:59:12.983504139 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt64_info
.type GHC.Int.gtInt64_info, @object
GHC.Int.gtInt64_info:
	.quad	GHC.Int.gtInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.984275158 UTC

.section .text
.align 8
_c4uVO:
_c4uVO:
	movq $block_c4uVU_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uVU
_c4uVY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uVO, .-_c4uVO


==================== Asm code ====================
2018-03-16 15:59:12.984960561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uVO_info:
	.quad	_c4uVO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.98570927 UTC

.section .text
.align 8
_c4uVU:
_c4uVU:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uVU, .-_c4uVU


==================== Asm code ====================
2018-03-16 15:59:12.98635253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uVU_info:
	.quad	_c4uVU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.991015955 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt64_closure
.type GHC.Int.geInt64_closure, @object
GHC.Int.geInt64_closure:
	.quad	GHC.Int.geInt64_info


==================== Asm code ====================
2018-03-16 15:59:12.991878435 UTC

.section .text
.align 8
.globl GHC.Int.geInt64_entry
.type GHC.Int.geInt64_entry, @object
GHC.Int.geInt64_entry:
_c4uWu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uWy
_c4uWz:
	movq $block_c4uWr_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uWr
_c4uWs:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uWy:
	movl $GHC.Int.geInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.geInt64_entry, .-GHC.Int.geInt64_entry


==================== Asm code ====================
2018-03-16 15:59:12.99248844 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt64_info
.type GHC.Int.geInt64_info, @object
GHC.Int.geInt64_info:
	.quad	GHC.Int.geInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:12.99317017 UTC

.section .text
.align 8
_c4uWr:
_c4uWr:
	movq $block_c4uWx_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uWx
_c4uWB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uWr, .-_c4uWr


==================== Asm code ====================
2018-03-16 15:59:12.99380889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uWr_info:
	.quad	_c4uWr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.994488452 UTC

.section .text
.align 8
_c4uWx:
_c4uWx:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uWx, .-_c4uWx


==================== Asm code ====================
2018-03-16 15:59:12.995082026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uWx_info:
	.quad	_c4uWx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:12.998700034 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt64_closure
.type GHC.Int.ltInt64_closure, @object
GHC.Int.ltInt64_closure:
	.quad	GHC.Int.ltInt64_info


==================== Asm code ====================
2018-03-16 15:59:12.999553328 UTC

.section .text
.align 8
.globl GHC.Int.ltInt64_entry
.type GHC.Int.ltInt64_entry, @object
GHC.Int.ltInt64_entry:
_c4uX7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uXb
_c4uXc:
	movq $block_c4uX4_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uX4
_c4uX5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uXb:
	movl $GHC.Int.ltInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.ltInt64_entry, .-GHC.Int.ltInt64_entry


==================== Asm code ====================
2018-03-16 15:59:13.000215982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt64_info
.type GHC.Int.ltInt64_info, @object
GHC.Int.ltInt64_info:
	.quad	GHC.Int.ltInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.000887915 UTC

.section .text
.align 8
_c4uX4:
_c4uX4:
	movq $block_c4uXa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uXa
_c4uXe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uX4, .-_c4uX4


==================== Asm code ====================
2018-03-16 15:59:13.001548568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uX4_info:
	.quad	_c4uX4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.002194033 UTC

.section .text
.align 8
_c4uXa:
_c4uXa:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uXa, .-_c4uXa


==================== Asm code ====================
2018-03-16 15:59:13.002844532 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uXa_info:
	.quad	_c4uXa
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.006536431 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt64_closure
.type GHC.Int.leInt64_closure, @object
GHC.Int.leInt64_closure:
	.quad	GHC.Int.leInt64_info


==================== Asm code ====================
2018-03-16 15:59:13.007398685 UTC

.section .text
.align 8
.globl GHC.Int.leInt64_entry
.type GHC.Int.leInt64_entry, @object
GHC.Int.leInt64_entry:
_c4uXK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uXO
_c4uXP:
	movq $block_c4uXH_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uXH
_c4uXI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uXO:
	movl $GHC.Int.leInt64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.leInt64_entry, .-GHC.Int.leInt64_entry


==================== Asm code ====================
2018-03-16 15:59:13.008100014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt64_info
.type GHC.Int.leInt64_info, @object
GHC.Int.leInt64_info:
	.quad	GHC.Int.leInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.009334261 UTC

.section .text
.align 8
_c4uXH:
_c4uXH:
	movq $block_c4uXN_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uXN
_c4uXR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uXH, .-_c4uXH


==================== Asm code ====================
2018-03-16 15:59:13.0099717 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uXH_info:
	.quad	_c4uXH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.010605171 UTC

.section .text
.align 8
_c4uXN:
_c4uXN:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uXN, .-_c4uXN


==================== Asm code ====================
2018-03-16 15:59:13.011221086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uXN_info:
	.quad	_c4uXN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.01514143 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$ccompare_closure
.type GHC.Int.$fOrdInt64_$ccompare_closure, @object
GHC.Int.$fOrdInt64_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt64_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:13.015984587 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$ccompare_entry
.type GHC.Int.$fOrdInt64_$ccompare_entry, @object
GHC.Int.$fOrdInt64_$ccompare_entry:
_c4uYn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uYr
_c4uYs:
	movq $block_c4uYk_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uYk
_c4uYl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uYr:
	movl $GHC.Int.$fOrdInt64_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$ccompare_entry, .-GHC.Int.$fOrdInt64_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:13.016669553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$ccompare_info
.type GHC.Int.$fOrdInt64_$ccompare_info, @object
GHC.Int.$fOrdInt64_$ccompare_info:
	.quad	GHC.Int.$fOrdInt64_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.017992373 UTC

.section .text
.align 8
_c4uYk:
_c4uYk:
	movq $block_c4uYq_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4uYq
_c4uYu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uYk, .-_c4uYk


==================== Asm code ====================
2018-03-16 15:59:13.018630672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uYk_info:
	.quad	_c4uYk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.019401567 UTC

.section .text
.align 8
_c4uYq:
_c4uYq:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4uYJ
_c4uYI:
	cmpq %rbx,%rax
	jg _c4uYF
_c4uYG:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uYJ:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4uYF:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4uYq, .-_c4uYq


==================== Asm code ====================
2018-03-16 15:59:13.020067658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uYq_info:
	.quad	_c4uYq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.023961673 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmax_closure
.type GHC.Int.$fOrdInt64_$cmax_closure, @object
GHC.Int.$fOrdInt64_$cmax_closure:
	.quad	GHC.Int.$fOrdInt64_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:13.024835561 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$cmax_entry
.type GHC.Int.$fOrdInt64_$cmax_entry, @object
GHC.Int.$fOrdInt64_$cmax_entry:
_c4uZ9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uZd
_c4uZe:
	movq $block_c4uZ6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uZ6
_c4uZ7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uZd:
	movl $GHC.Int.$fOrdInt64_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$cmax_entry, .-GHC.Int.$fOrdInt64_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:13.025632017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmax_info
.type GHC.Int.$fOrdInt64_$cmax_info, @object
GHC.Int.$fOrdInt64_$cmax_info:
	.quad	GHC.Int.$fOrdInt64_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.02640387 UTC

.section .text
.align 8
_c4uZ6:
_c4uZ6:
	movq $block_c4uZc_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uZc
_c4uZg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uZ6, .-_c4uZ6


==================== Asm code ====================
2018-03-16 15:59:13.02744979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uZ6_info:
	.quad	_c4uZ6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.028217263 UTC

.section .text
.align 8
_c4uZc:
_c4uZc:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4uZo
_c4uZp:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4uZo:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uZc, .-_c4uZc


==================== Asm code ====================
2018-03-16 15:59:13.028894351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uZc_info:
	.quad	_c4uZc
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.032738734 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmin_closure
.type GHC.Int.$fOrdInt64_$cmin_closure, @object
GHC.Int.$fOrdInt64_$cmin_closure:
	.quad	GHC.Int.$fOrdInt64_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:13.034412244 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$cmin_entry
.type GHC.Int.$fOrdInt64_$cmin_entry, @object
GHC.Int.$fOrdInt64_$cmin_entry:
_c4uZR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4uZV
_c4uZW:
	movq $block_c4uZO_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4uZO
_c4uZP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4uZV:
	movl $GHC.Int.$fOrdInt64_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$cmin_entry, .-GHC.Int.$fOrdInt64_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:13.035465432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmin_info
.type GHC.Int.$fOrdInt64_$cmin_info, @object
GHC.Int.$fOrdInt64_$cmin_info:
	.quad	GHC.Int.$fOrdInt64_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.036549228 UTC

.section .text
.align 8
_c4uZO:
_c4uZO:
	movq $block_c4uZU_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4uZU
_c4uZY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uZO, .-_c4uZO


==================== Asm code ====================
2018-03-16 15:59:13.037597226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uZO_info:
	.quad	_c4uZO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.03867995 UTC

.section .text
.align 8
_c4uZU:
_c4uZU:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4v06
_c4v07:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4v06:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4uZU, .-_c4uZU


==================== Asm code ====================
2018-03-16 15:59:13.039599459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4uZU_info:
	.quad	_c4uZU
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.042377943 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_closure
.type GHC.Int.$fOrdInt64_closure, @object
GHC.Int.$fOrdInt64_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt64_closure+1
	.quad	GHC.Int.$fOrdInt64_$ccompare_closure+2
	.quad	GHC.Int.ltInt64_closure+2
	.quad	GHC.Int.leInt64_closure+2
	.quad	GHC.Int.gtInt64_closure+2
	.quad	GHC.Int.geInt64_closure+2
	.quad	GHC.Int.$fOrdInt64_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt64_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.050443996 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cinRange_closure
.type GHC.Int.$fIxInt64_$cinRange_closure, @object
GHC.Int.$fIxInt64_$cinRange_closure:
	.quad	GHC.Int.$fIxInt64_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:13.051829933 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cinRange_entry
.type GHC.Int.$fIxInt64_$cinRange_entry, @object
GHC.Int.$fIxInt64_$cinRange_entry:
_c4v0A:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v0J
_c4v0K:
	movq $block_c4v0x_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v0x
_c4v0y:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v0J:
	movl $GHC.Int.$fIxInt64_$cinRange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cinRange_entry, .-GHC.Int.$fIxInt64_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:13.05374479 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cinRange_info
.type GHC.Int.$fIxInt64_$cinRange_info, @object
GHC.Int.$fIxInt64_$cinRange_info:
	.quad	GHC.Int.$fIxInt64_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.05486248 UTC

.section .text
.align 8
_c4v0x:
_c4v0x:
	movq $block_c4v0D_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v0D
_c4v0E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v0x, .-_c4v0x


==================== Asm code ====================
2018-03-16 15:59:13.055755697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v0x_info:
	.quad	_c4v0x
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.056773258 UTC

.section .text
.align 8
_c4v0D:
_c4v0D:
	movq $block_c4v0I_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4v0I
_c4v0N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v0D, .-_c4v0D


==================== Asm code ====================
2018-03-16 15:59:13.057736375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v0D_info:
	.quad	_c4v0D
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.058853981 UTC

.section .text
.align 8
_c4v0I:
_c4v0I:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4v0V
_c4v0Z:
	movq 8(%rbp),%rbx
	movq $block_c4v0Y_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4v0Y
_c4v10:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v0V:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4v0I, .-_c4v0I


==================== Asm code ====================
2018-03-16 15:59:13.059852861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v0I_info:
	.quad	_c4v0I
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.06092443 UTC

.section .text
.align 8
_c4v0Y:
_c4v0Y:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4v0Y, .-_c4v0Y


==================== Asm code ====================
2018-03-16 15:59:13.061865586 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v0Y_info:
	.quad	_c4v0Y
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.064579338 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt5_closure
.type GHC.Int.$fNumInt5_closure, @object
GHC.Int.$fNumInt5_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:13.070003954 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$csignum_closure
.type GHC.Int.$fNumInt64_$csignum_closure, @object
GHC.Int.$fNumInt64_$csignum_closure:
	.quad	GHC.Int.$fNumInt64_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:13.071336442 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$csignum_entry
.type GHC.Int.$fNumInt64_$csignum_entry, @object
GHC.Int.$fNumInt64_$csignum_entry:
_c4v1I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v1J
_c4v1K:
	movq $block_c4v1F_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v1F
_c4v1G:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v1J:
	movl $GHC.Int.$fNumInt64_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$csignum_entry, .-GHC.Int.$fNumInt64_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:13.072337801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$csignum_info
.type GHC.Int.$fNumInt64_$csignum_info, @object
GHC.Int.$fNumInt64_$csignum_info:
	.quad	GHC.Int.$fNumInt64_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.07360197 UTC

.section .text
.align 8
_c4v1F:
_c4v1F:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4v1W
_c4v1X:
	movl $GHC.Int.$fNumInt5_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v1U:
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v1W:
	testq %rax,%rax
	je _c4v1U
_c4v1T:
	movl $GHC.Int.$fNumInt6_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4v1F, .-_c4v1F


==================== Asm code ====================
2018-03-16 15:59:13.074677621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v1F_info:
	.quad	_c4v1F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.080811634 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cabs_closure
.type GHC.Int.$fNumInt64_$cabs_closure, @object
GHC.Int.$fNumInt64_$cabs_closure:
	.quad	GHC.Int.$fNumInt64_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:13.08218841 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cabs_entry
.type GHC.Int.$fNumInt64_$cabs_entry, @object
GHC.Int.$fNumInt64_$cabs_entry:
_c4v2i:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v2j
_c4v2k:
	movq $block_c4v2f_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v2f
_c4v2g:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v2j:
	movl $GHC.Int.$fNumInt64_$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cabs_entry, .-GHC.Int.$fNumInt64_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:13.083162939 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cabs_info
.type GHC.Int.$fNumInt64_$cabs_info, @object
GHC.Int.$fNumInt64_$cabs_info:
	.quad	GHC.Int.$fNumInt64_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.084350691 UTC

.section .text
.align 8
_c4v2f:
_c4v2f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4v2p
_c4v2o:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4v2y
_c4v2z:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4v2y:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v2p:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4v2f, .-_c4v2f


==================== Asm code ====================
2018-03-16 15:59:13.085957688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v2f_info:
	.quad	_c4v2f
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.088818295 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_closure
.type GHC.Int.$fNumInt64_closure, @object
GHC.Int.$fNumInt64_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt64_$c+_closure+2
	.quad	GHC.Int.$fNumInt64_$c-_closure+2
	.quad	GHC.Int.$fNumInt64_$c*_closure+2
	.quad	GHC.Int.$fNumInt64_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt64_$cabs_closure+1
	.quad	GHC.Int.$fNumInt64_$csignum_closure+1
	.quad	GHC.Int.$fNumInt64_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.091457569 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt9_closure
.type GHC.Int.$fBitsInt9_closure, @object
GHC.Int.$fBitsInt9_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt7_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.094964431 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:13.096073413 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry:
_c4v2U:
	movl $GHC.Int.$fBitsInt9_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:13.096984767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.102025933 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbit_closure
.type GHC.Int.$fBitsInt64_$cbit_closure, @object
GHC.Int.$fBitsInt64_$cbit_closure:
	.quad	GHC.Int.$fBitsInt64_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:13.103308313 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cbit_entry
.type GHC.Int.$fBitsInt64_$cbit_entry, @object
GHC.Int.$fBitsInt64_$cbit_entry:
_c4v39:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v3a
_c4v3b:
	movq $block_c4v36_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v36
_c4v37:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v3a:
	movl $GHC.Int.$fBitsInt64_$cbit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cbit_entry, .-GHC.Int.$fBitsInt64_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:13.104352869 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbit_info
.type GHC.Int.$fBitsInt64_$cbit_info, @object
GHC.Int.$fBitsInt64_$cbit_info:
	.quad	GHC.Int.$fBitsInt64_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.10611637 UTC

.section .text
.align 8
_c4v36:
_c4v36:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4v3g
_c4v3f:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4v3p
_c4v3q:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v3p:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v3g:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4v36, .-_c4v36


==================== Asm code ====================
2018-03-16 15:59:13.107901202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v36_info:
	.quad	_c4v36
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.114357005 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ctestBit_closure
.type GHC.Int.$fBitsInt64_$ctestBit_closure, @object
GHC.Int.$fBitsInt64_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt64_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:13.115777062 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ctestBit_entry
.type GHC.Int.$fBitsInt64_$ctestBit_entry, @object
GHC.Int.$fBitsInt64_$ctestBit_entry:
_c4v3L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v3P
_c4v3Q:
	movq $block_c4v3I_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v3I
_c4v3J:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v3P:
	movl $GHC.Int.$fBitsInt64_$ctestBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ctestBit_entry, .-GHC.Int.$fBitsInt64_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:13.11688604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ctestBit_info
.type GHC.Int.$fBitsInt64_$ctestBit_info, @object
GHC.Int.$fBitsInt64_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt64_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.118017194 UTC

.section .text
.align 8
_c4v3I:
_c4v3I:
	movq $block_c4v3O_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4v3O
_c4v3S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v3I, .-_c4v3I


==================== Asm code ====================
2018-03-16 15:59:13.118926252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v3I_info:
	.quad	_c4v3I
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.120144179 UTC

.section .text
.align 8
_c4v3O:
_c4v3O:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4v4t
_c4v4s:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	andq %rbx,%rax
	testq %rax,%rax
	je _c4v4t
_c4v4h:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v4t:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4v3O, .-_c4v3O


==================== Asm code ====================
2018-03-16 15:59:13.12115276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v3O_info:
	.quad	_c4v3O
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.12890807 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateR_closure
.type GHC.Int.$fBitsInt64_$crotateR_closure, @object
GHC.Int.$fBitsInt64_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt64_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:13.130232425 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotateR_entry
.type GHC.Int.$fBitsInt64_$crotateR_entry, @object
GHC.Int.$fBitsInt64_$crotateR_entry:
_c4v4V:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v4Z
_c4v50:
	movq $block_c4v4S_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v4S
_c4v4T:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v4Z:
	movl $GHC.Int.$fBitsInt64_$crotateR_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$crotateR_entry, .-GHC.Int.$fBitsInt64_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:13.131200085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateR_info
.type GHC.Int.$fBitsInt64_$crotateR_info, @object
GHC.Int.$fBitsInt64_$crotateR_info:
	.quad	GHC.Int.$fBitsInt64_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.132243989 UTC

.section .text
.align 8
_c4v4S:
_c4v4S:
	movq $block_c4v4Y_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v4Y
_c4v52:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v4S, .-_c4v4S


==================== Asm code ====================
2018-03-16 15:59:13.133843266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v4S_info:
	.quad	_c4v4S
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.135066193 UTC

.section .text
.align 8
_c4v4Y:
_c4v4Y:
	movq 7(%rbx),%rax
	negq %rax
	andl $63,%eax
	testq %rax,%rax
	jne _u4v5Q
_c4v5M:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4v5Q:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4v5k
	.size _c4v4Y, .-_c4v4Y


==================== Asm code ====================
2018-03-16 15:59:13.136100708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v4Y_info:
	.quad	_c4v4Y
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.138130311 UTC

.section .text
.align 8
_c4v5k:
_c4v5k:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4v5J
_c4v5I:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $64,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v5J:
	movq $16,904(%r13)
	movq $block_c4v5j_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c4v5k, .-_c4v5k


==================== Asm code ====================
2018-03-16 15:59:13.139400195 UTC

.section .text
.align 8
_c4v5j:
_c4v5j:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4v5k
	.size _c4v5j, .-_c4v5j


==================== Asm code ====================
2018-03-16 15:59:13.140262696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v5j_info:
	.quad	_c4v5j
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.146909328 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplementBit_closure
.type GHC.Int.$fBitsInt64_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt64_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:13.148191543 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ccomplementBit_entry
.type GHC.Int.$fBitsInt64_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt64_$ccomplementBit_entry:
_c4v6u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v6y
_c4v6z:
	movq $block_c4v6r_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v6r
_c4v6s:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v6y:
	movl $GHC.Int.$fBitsInt64_$ccomplementBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ccomplementBit_entry, .-GHC.Int.$fBitsInt64_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:13.149185613 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplementBit_info
.type GHC.Int.$fBitsInt64_$ccomplementBit_info, @object
GHC.Int.$fBitsInt64_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.150909477 UTC

.section .text
.align 8
_c4v6r:
_c4v6r:
	movq $block_c4v6x_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v6x
_c4v6B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v6r, .-_c4v6r


==================== Asm code ====================
2018-03-16 15:59:13.151860052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v6r_info:
	.quad	_c4v6r
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.153155021 UTC

.section .text
.align 8
_c4v6x:
_c4v6x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4v6H
_c4v6G:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4v72
_c4v73:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4v72:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	xorq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v6H:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4v6x, .-_c4v6x


==================== Asm code ====================
2018-03-16 15:59:13.154257766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v6x_info:
	.quad	_c4v6x
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.161119166 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cclearBit_closure
.type GHC.Int.$fBitsInt64_$cclearBit_closure, @object
GHC.Int.$fBitsInt64_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt64_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:13.162829495 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cclearBit_entry
.type GHC.Int.$fBitsInt64_$cclearBit_entry, @object
GHC.Int.$fBitsInt64_$cclearBit_entry:
_c4v7w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v7A
_c4v7B:
	movq $block_c4v7t_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v7t
_c4v7u:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v7A:
	movl $GHC.Int.$fBitsInt64_$cclearBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cclearBit_entry, .-GHC.Int.$fBitsInt64_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:13.163935263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cclearBit_info
.type GHC.Int.$fBitsInt64_$cclearBit_info, @object
GHC.Int.$fBitsInt64_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt64_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.165011804 UTC

.section .text
.align 8
_c4v7t:
_c4v7t:
	movq $block_c4v7z_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4v7z
_c4v7D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v7t, .-_c4v7t


==================== Asm code ====================
2018-03-16 15:59:13.166631376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v7t_info:
	.quad	_c4v7t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.167919707 UTC

.section .text
.align 8
_c4v7z:
_c4v7z:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4v7J
_c4v7I:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4v87
_c4v8j:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v87:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	xorq $-1,%rdx
	andq %rdx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v7J:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4v7z, .-_c4v7z


==================== Asm code ====================
2018-03-16 15:59:13.169080115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v7z_info:
	.quad	_c4v7z
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.175855245 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$csetBit_closure
.type GHC.Int.$fBitsInt64_$csetBit_closure, @object
GHC.Int.$fBitsInt64_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt64_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:13.177111685 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$csetBit_entry
.type GHC.Int.$fBitsInt64_$csetBit_entry, @object
GHC.Int.$fBitsInt64_$csetBit_entry:
_c4v8P:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4v8T
_c4v8U:
	movq $block_c4v8M_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4v8M
_c4v8N:
	movq (%rbx),%rax
	jmp *(%rax)
_c4v8T:
	movl $GHC.Int.$fBitsInt64_$csetBit_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$csetBit_entry, .-GHC.Int.$fBitsInt64_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:13.178404262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$csetBit_info
.type GHC.Int.$fBitsInt64_$csetBit_info, @object
GHC.Int.$fBitsInt64_$csetBit_info:
	.quad	GHC.Int.$fBitsInt64_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.17958732 UTC

.section .text
.align 8
_c4v8M:
_c4v8M:
	movq $block_c4v8S_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4v8S
_c4v8W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4v8M, .-_c4v8M


==================== Asm code ====================
2018-03-16 15:59:13.180614208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v8M_info:
	.quad	_c4v8M
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.181994544 UTC

.section .text
.align 8
_c4v8S:
_c4v8S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4v92
_c4v91:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4v9n
_c4v9o:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4v9n:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	orq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4v92:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4v8S, .-_c4v8S


==================== Asm code ====================
2018-03-16 15:59:13.183028983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4v8S_info:
	.quad	_c4v8S
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.186449083 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateL_closure
.type GHC.Int.$fBitsInt64_$crotateL_closure, @object
GHC.Int.$fBitsInt64_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt64_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:13.187488878 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotateL_entry
.type GHC.Int.$fBitsInt64_$crotateL_entry, @object
GHC.Int.$fBitsInt64_$crotateL_entry:
_c4v9O:
	jmp GHC.Int.$fBitsInt64_$crotate_entry
	.size GHC.Int.$fBitsInt64_$crotateL_entry, .-GHC.Int.$fBitsInt64_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:13.188384147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateL_info
.type GHC.Int.$fBitsInt64_$crotateL_info, @object
GHC.Int.$fBitsInt64_$crotateL_info:
	.quad	GHC.Int.$fBitsInt64_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.192001559 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_closure
.type GHC.Int.$fBitsInt64_closure, @object
GHC.Int.$fBitsInt64_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt64_closure+1
	.quad	GHC.Int.$fBitsInt64_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt64_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt64_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt64_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt64_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt10_closure+1
	.quad	GHC.Int.$fBitsInt64_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt64_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt64_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt64_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt64_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt64_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.196025257 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_closure
.type GHC.Int.$fFiniteBitsInt64_closure, @object
GHC.Int.$fFiniteBitsInt64_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt64_closure+1
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.206033441 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_go_closure
.type GHC.Int.$fReadInt64_go_closure, @object
GHC.Int.$fReadInt64_go_closure:
	.quad	GHC.Int.$fReadInt64_go_info


==================== Asm code ====================
2018-03-16 15:59:13.207340162 UTC

.section .text
.align 8
sat_s4luo_entry:
_c4vag:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vah
_c4vai:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt64_go_entry
_c4vah:
	jmp *-16(%r13)
	.size sat_s4luo_entry, .-sat_s4luo_entry


==================== Asm code ====================
2018-03-16 15:59:13.208323727 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4luo_info:
	.quad	sat_s4luo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:13.20957494 UTC

.section .text
.align 8
sat_s4lum_entry:
_c4vaq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vau
_c4vav:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c4van_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4van
_c4vao:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vau:
	jmp *-16(%r13)
	.size sat_s4lum_entry, .-sat_s4lum_entry


==================== Asm code ====================
2018-03-16 15:59:13.21058141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4lum_info:
	.quad	sat_s4lum_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:13.211763054 UTC

.section .text
.align 8
_c4van:
_c4van:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vay
_c4vax:
	movq 7(%rbx),%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vay:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4van, .-_c4van


==================== Asm code ====================
2018-03-16 15:59:13.212738548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4van_info:
	.quad	_c4van
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.214782766 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_go_entry
.type GHC.Int.$fReadInt64_go_entry, @object
GHC.Int.$fReadInt64_go_entry:
_c4vaE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vaF
_c4vaG:
	movq $block_c4va1_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4va1
_c4va2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vaF:
	movl $GHC.Int.$fReadInt64_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt64_go_entry, .-GHC.Int.$fReadInt64_go_entry


==================== Asm code ====================
2018-03-16 15:59:13.215845394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_go_info
.type GHC.Int.$fReadInt64_go_info, @object
GHC.Int.$fReadInt64_go_info:
	.quad	GHC.Int.$fReadInt64_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.217168267 UTC

.section .text
.align 8
_c4va1:
_c4va1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4vaB
_c4vaC:
	movq $block_c4va7_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4va7
_c4va8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vaB:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4va1, .-_c4va1


==================== Asm code ====================
2018-03-16 15:59:13.218347915 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4va1_info:
	.quad	_c4va1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.219612838 UTC

.section .text
.align 8
_c4va7:
_c4va7:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4vaO
_c4vaN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s4luo_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq $sat_s4lum_info,-64(%r12)
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vaO:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4va7, .-_c4va7


==================== Asm code ====================
2018-03-16 15:59:13.22080149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4va7_info:
	.quad	_c4va7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.225127618 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadsPrec_closure
.type GHC.Int.$fReadInt64_$creadsPrec_closure, @object
GHC.Int.$fReadInt64_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt64_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.226083289 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_$creadsPrec_entry
.type GHC.Int.$fReadInt64_$creadsPrec_entry, @object
GHC.Int.$fReadInt64_$creadsPrec_entry:
_c4vbv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vbz
_c4vbA:
	movq $block_c4vbt_info,-16(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq %rsi,%rax
	movq %r14,%rsi
	movl $GHC.Read.$fReadInt2_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Read.$fReadInt_$sreadNumber_entry
_c4vbz:
	movl $GHC.Int.$fReadInt64_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt64_$creadsPrec_entry, .-GHC.Int.$fReadInt64_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:13.226821907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadsPrec_info
.type GHC.Int.$fReadInt64_$creadsPrec_info, @object
GHC.Int.$fReadInt64_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt64_$creadsPrec_entry
	.quad	0
	.quad	144115200960757774
	.quad	8589934607
	.quad	S4lDl_srt+848


==================== Asm code ====================
2018-03-16 15:59:13.227504149 UTC

.section .text
.align 8
_c4vbt:
_c4vbt:
	movq 8(%rbp),%rax
	movq $block_c4vby_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp Text.ParserCombinators.ReadP.run_entry
	.size _c4vbt, .-_c4vbt


==================== Asm code ====================
2018-03-16 15:59:13.228112284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vbt_info:
	.quad	_c4vbt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.228777769 UTC

.section .text
.align 8
_c4vby:
_c4vby:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt64_go_entry
	.size _c4vby, .-_c4vby


==================== Asm code ====================
2018-03-16 15:59:13.229442742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vby_info:
	.quad	_c4vby
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.233914245 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt10_closure
.type GHC.Int.$fReadInt10_closure, @object
GHC.Int.$fReadInt10_closure:
	.quad	GHC.Int.$fReadInt10_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.23463222 UTC

.section .text
.align 8
sat_s4luv_entry:
_c4vc0:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt64_$creadsPrec_entry
	.size sat_s4luv_entry, .-sat_s4luv_entry


==================== Asm code ====================
2018-03-16 15:59:13.235177534 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4luv_info:
	.quad	sat_s4luv_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4lDl_srt+1048


==================== Asm code ====================
2018-03-16 15:59:13.236082547 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt10_entry
.type GHC.Int.$fReadInt10_entry, @object
GHC.Int.$fReadInt10_entry:
_c4vc6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vc7
_c4vc8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vca
_c4vc9:
	movq $sat_s4luv_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_c4vc3_info,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4vca:
	movq $16,904(%r13)
_c4vc7:
	movl $GHC.Int.$fReadInt10_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt10_entry, .-GHC.Int.$fReadInt10_entry


==================== Asm code ====================
2018-03-16 15:59:13.236817222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt10_info
.type GHC.Int.$fReadInt10_info, @object
GHC.Int.$fReadInt10_info:
	.quad	GHC.Int.$fReadInt10_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+1048


==================== Asm code ====================
2018-03-16 15:59:13.23767724 UTC

.section .text
.align 8
_c4vc3:
_c4vc3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vcd
_c4vcc:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vcd:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vc3, .-_c4vc3


==================== Asm code ====================
2018-03-16 15:59:13.238299493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vc3_info:
	.quad	_c4vc3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.241812863 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt9_closure
.type GHC.Int.$fReadInt9_closure, @object
GHC.Int.$fReadInt9_closure:
	.quad	GHC.Int.$fReadInt9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.243394584 UTC

.section .data.rel.ro
.align 8
.align 1
u4vcz_srtd:
	.quad	S4lDl_srt+504
	.quad	70
	.quad	1
	.quad	32


==================== Asm code ====================
2018-03-16 15:59:13.244895325 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt9_entry
.type GHC.Int.$fReadInt9_entry, @object
GHC.Int.$fReadInt9_entry:
_c4vcw:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vcx
_c4vcy:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c4vcv
_c4vcu:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Int.$fReadInt10_closure+2,%r14d
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Int.$fIxInt1_closure+1,-32(%rbp)
	movq $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Read.list_entry
_c4vcx:
	jmp *-16(%r13)
_c4vcv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt9_entry, .-GHC.Int.$fReadInt9_entry


==================== Asm code ====================
2018-03-16 15:59:13.246097149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt9_info
.type GHC.Int.$fReadInt9_info, @object
GHC.Int.$fReadInt9_info:
	.quad	GHC.Int.$fReadInt9_entry
	.quad	0
	.quad	-4294967275
	.quad	u4vcz_srtd


==================== Asm code ====================
2018-03-16 15:59:13.249668773 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadList_closure
.type GHC.Int.$fReadInt64_$creadList_closure, @object
GHC.Int.$fReadInt64_$creadList_closure:
	.quad	GHC.Int.$fReadInt64_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.250717088 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_$creadList_entry
.type GHC.Int.$fReadInt64_$creadList_entry, @object
GHC.Int.$fReadInt64_$creadList_entry:
_c4vcM:
	movq %r14,%rsi
	movl $GHC.Int.$fReadInt9_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Int.$fReadInt64_$creadList_entry, .-GHC.Int.$fReadInt64_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:13.251424487 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadList_info
.type GHC.Int.$fReadInt64_$creadList_info, @object
GHC.Int.$fReadInt64_$creadList_info:
	.quad	GHC.Int.$fReadInt64_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4lDl_srt+1064


==================== Asm code ====================
2018-03-16 15:59:13.254798598 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt7_closure
.type GHC.Int.$fReadInt7_closure, @object
GHC.Int.$fReadInt7_closure:
	.quad	GHC.Int.$fReadInt7_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.255667891 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt7_entry
.type GHC.Int.$fReadInt7_entry, @object
GHC.Int.$fReadInt7_entry:
_c4vd0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vd1
_c4vd2:
	movq $block_c4vcX_info,-8(%rbp)
	movl $GHC.Int.$fReadInt64_$creadList_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_c4vd1:
	movl $GHC.Int.$fReadInt7_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt7_entry, .-GHC.Int.$fReadInt7_entry


==================== Asm code ====================
2018-03-16 15:59:13.256351012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt7_info
.type GHC.Int.$fReadInt7_info, @object
GHC.Int.$fReadInt7_info:
	.quad	GHC.Int.$fReadInt7_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+1072


==================== Asm code ====================
2018-03-16 15:59:13.257056763 UTC

.section .text
.align 8
_c4vcX:
_c4vcX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vd5
_c4vd4:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vd5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vcX, .-_c4vcX


==================== Asm code ====================
2018-03-16 15:59:13.257765095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vcX_info:
	.quad	_c4vcX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.259695035 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_closure
.type GHC.Int.$fReadInt64_closure, @object
GHC.Int.$fReadInt64_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt64_$creadList_closure+1
	.quad	GHC.Int.$fReadInt10_closure+2
	.quad	GHC.Int.$fReadInt7_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.26520489 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquot_closure
.type GHC.Int.$fIntegralInt64_$cquot_closure, @object
GHC.Int.$fIntegralInt64_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt64_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.266558931 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cquot_entry
.type GHC.Int.$fIntegralInt64_$cquot_entry, @object
GHC.Int.$fIntegralInt64_$cquot_entry:
_c4vdn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vdr
_c4vds:
	movq $block_c4vdk_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vdk
_c4vdl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vdr:
	movl $GHC.Int.$fIntegralInt64_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cquot_entry, .-GHC.Int.$fIntegralInt64_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:13.267212686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquot_info
.type GHC.Int.$fIntegralInt64_$cquot_info, @object
GHC.Int.$fIntegralInt64_$cquot_info:
	.quad	GHC.Int.$fIntegralInt64_$cquot_entry
	.quad	0
	.quad	36028809903865870
	.quad	8589934607
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:13.267951359 UTC

.section .text
.align 8
_c4vdk:
_c4vdk:
	movq $block_c4vdq_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vdq
_c4vdu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vdk, .-_c4vdk


==================== Asm code ====================
2018-03-16 15:59:13.268578167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vdk_info:
	.quad	_c4vdk
	.quad	1
	.quad	12884901918
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:13.269630818 UTC

.section .text
.align 8
_c4vdq:
_c4vdq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vdA
_c4vdz:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4vdV
_c4vdT:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c4vdS
_c4vdR:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4vdV:
	testq %rbx,%rbx
	jne _c4vdI
_c4vdU:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4vdS:
	addq $-16,%r12
	movl $GHC.Real.overflowError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4vdI:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vdA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vdq, .-_c4vdq


==================== Asm code ====================
2018-03-16 15:59:13.27047412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vdq_info:
	.quad	_c4vdq
	.quad	65
	.quad	12884901918
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:13.274990746 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$crem_closure
.type GHC.Int.$fIntegralInt64_$crem_closure, @object
GHC.Int.$fIntegralInt64_$crem_closure:
	.quad	GHC.Int.$fIntegralInt64_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.275905812 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$crem_entry
.type GHC.Int.$fIntegralInt64_$crem_entry, @object
GHC.Int.$fIntegralInt64_$crem_entry:
_c4veo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ves
_c4vet:
	movq $block_c4vel_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vel
_c4vem:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ves:
	movl $GHC.Int.$fIntegralInt64_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$crem_entry, .-GHC.Int.$fIntegralInt64_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:13.27664431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$crem_info
.type GHC.Int.$fIntegralInt64_$crem_info, @object
GHC.Int.$fIntegralInt64_$crem_info:
	.quad	GHC.Int.$fIntegralInt64_$crem_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.277435167 UTC

.section .text
.align 8
_c4vel:
_c4vel:
	movq $block_c4ver_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ver
_c4vev:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vel, .-_c4vel


==================== Asm code ====================
2018-03-16 15:59:13.278091593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vel_info:
	.quad	_c4vel
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.279027384 UTC

.section .text
.align 8
_c4ver:
_c4ver:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4veB
_c4veA:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4veM
_c4veK:
	addq $-16,%r12
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4veM:
	testq %rax,%rax
	jne _c4veJ
_c4veL:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4veJ:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4veB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ver, .-_c4ver


==================== Asm code ====================
2018-03-16 15:59:13.279801538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ver_info:
	.quad	_c4ver
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.283503192 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv2_closure
.type GHC.Int.$w$cdiv2_closure, @object
GHC.Int.$w$cdiv2_closure:
	.quad	GHC.Int.$w$cdiv2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.284921079 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv2_entry
.type GHC.Int.$w$cdiv2_entry, @object
GHC.Int.$w$cdiv2_entry:
_c4vfe:
	cmpq $-1,%rsi
	je _c4vfc
_u4vfn:
	testq %rsi,%rsi
	je _c4vfd
_c4vfb:
	jmp GHC.Classes.divInt#_entry
_c4vfm:
	movl $GHC.Real.overflowError_closure,%ebx
	jmp stg_ap_0_fast
_c4vfc:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c4vfm
_c4vfl:
	movq $-1,%rsi
	jmp GHC.Classes.divInt#_entry
_c4vfd:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdiv2_entry, .-GHC.Int.$w$cdiv2_entry


==================== Asm code ====================
2018-03-16 15:59:13.285704652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv2_info
.type GHC.Int.$w$cdiv2_info, @object
GHC.Int.$w$cdiv2_info:
	.quad	GHC.Int.$w$cdiv2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934604
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:13.29018373 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdiv_closure
.type GHC.Int.$fIntegralInt64_$cdiv_closure, @object
GHC.Int.$fIntegralInt64_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt64_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.291142902 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cdiv_entry
.type GHC.Int.$fIntegralInt64_$cdiv_entry, @object
GHC.Int.$fIntegralInt64_$cdiv_entry:
_c4vfA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vfN
_c4vfO:
	movq $block_c4vfx_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vfx
_c4vfy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vfN:
	movl $GHC.Int.$fIntegralInt64_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cdiv_entry, .-GHC.Int.$fIntegralInt64_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:13.291787996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdiv_info
.type GHC.Int.$fIntegralInt64_$cdiv_info, @object
GHC.Int.$fIntegralInt64_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt64_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+1104


==================== Asm code ====================
2018-03-16 15:59:13.292520254 UTC

.section .text
.align 8
_c4vfx:
_c4vfx:
	movq $block_c4vfD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vfD
_c4vfE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vfx, .-_c4vfx


==================== Asm code ====================
2018-03-16 15:59:13.293152144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vfx_info:
	.quad	_c4vfx
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+1112


==================== Asm code ====================
2018-03-16 15:59:13.293878568 UTC

.section .text
.align 8
_c4vfD:
_c4vfD:
	movq 8(%rbp),%rax
	movq $block_c4vfI_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv2_entry
	.size _c4vfD, .-_c4vfD


==================== Asm code ====================
2018-03-16 15:59:13.294488769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vfD_info:
	.quad	_c4vfD
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+1112


==================== Asm code ====================
2018-03-16 15:59:13.295284463 UTC

.section .text
.align 8
_c4vfI:
_c4vfI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vfT
_c4vfS:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vfT:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4vfI, .-_c4vfI


==================== Asm code ====================
2018-03-16 15:59:13.295946995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vfI_info:
	.quad	_c4vfI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.300950586 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cmod_closure
.type GHC.Int.$fIntegralInt64_$cmod_closure, @object
GHC.Int.$fIntegralInt64_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt64_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.302420906 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cmod_entry
.type GHC.Int.$fIntegralInt64_$cmod_entry, @object
GHC.Int.$fIntegralInt64_$cmod_entry:
_c4vgk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vgo
_c4vgp:
	movq $block_c4vgh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vgh
_c4vgi:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vgo:
	movl $GHC.Int.$fIntegralInt64_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cmod_entry, .-GHC.Int.$fIntegralInt64_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:13.303473587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cmod_info
.type GHC.Int.$fIntegralInt64_$cmod_info, @object
GHC.Int.$fIntegralInt64_$cmod_info:
	.quad	GHC.Int.$fIntegralInt64_$cmod_entry
	.quad	0
	.quad	288230380446679054
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.305308222 UTC

.section .text
.align 8
_c4vgh:
_c4vgh:
	movq $block_c4vgn_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vgn
_c4vgr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vgh, .-_c4vgh


==================== Asm code ====================
2018-03-16 15:59:13.306279014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vgh_info:
	.quad	_c4vgh
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.307617027 UTC

.section .text
.align 8
_c4vgn:
_c4vgn:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4vgK
_c4vgI:
	movl $GHC.Int.$fBitsInt10_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4vgK:
	testq %rax,%rax
	jne _c4vgE
_c4vgJ:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4vgE:
	movq 8(%rbp),%rbx
	movq $block_c4vgy_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _c4vgn, .-_c4vgn


==================== Asm code ====================
2018-03-16 15:59:13.308636314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vgn_info:
	.quad	_c4vgn
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.309771372 UTC

.section .text
.align 8
_c4vgy:
_c4vgy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vgH
_c4vgG:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vgH:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c4vgy, .-_c4vgy


==================== Asm code ====================
2018-03-16 15:59:13.310655621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vgy_info:
	.quad	_c4vgy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.313351391 UTC

.section .data
.align 8
.align 1
lvl9_r4kPA_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt10_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.321731987 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquotRem_closure
.type GHC.Int.$fIntegralInt64_$cquotRem_closure, @object
GHC.Int.$fIntegralInt64_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.323040459 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cquotRem_entry
.type GHC.Int.$fIntegralInt64_$cquotRem_entry, @object
GHC.Int.$fIntegralInt64_$cquotRem_entry:
_c4vhd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vhh
_c4vhi:
	movq $block_c4vha_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vha
_c4vhb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vhh:
	movl $GHC.Int.$fIntegralInt64_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cquotRem_entry, .-GHC.Int.$fIntegralInt64_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:13.324019234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquotRem_info
.type GHC.Int.$fIntegralInt64_$cquotRem_info, @object
GHC.Int.$fIntegralInt64_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_entry
	.quad	0
	.quad	1729382261205237774
	.quad	8589934607
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.325131306 UTC

.section .text
.align 8
_c4vha:
_c4vha:
	movq $block_c4vhg_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vhg
_c4vhk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vha, .-_c4vha


==================== Asm code ====================
2018-03-16 15:59:13.326087957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vha_info:
	.quad	_c4vha
	.quad	1
	.quad	1152921508901814302
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.327751287 UTC

.section .text
.align 8
_c4vhg:
_c4vhg:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4vhq
_c4vhp:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4vhJ
_c4vhH:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c4vhG
_c4vhF:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4vhJ:
	testq %rbx,%rbx
	jne _c4vhx
_c4vhI:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c4vhG:
	addq $-56,%r12
	movl $lvl9_r4kPA_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vhx:
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Int.I64#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vhq:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vhg, .-_c4vhg


==================== Asm code ====================
2018-03-16 15:59:13.329296008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vhg_info:
	.quad	_c4vhg
	.quad	65
	.quad	1152921508901814302
	.quad	S4lDl_srt+912


==================== Asm code ====================
2018-03-16 15:59:13.341375198 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod2_closure
.type GHC.Int.$w$cdivMod2_closure, @object
GHC.Int.$w$cdivMod2_closure:
	.quad	GHC.Int.$w$cdivMod2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.34285167 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod2_entry
.type GHC.Int.$w$cdivMod2_entry, @object
GHC.Int.$w$cdivMod2_entry:
_c4vig:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vih
_c4vii:
	testq %rsi,%rsi
	je _c4vif
_c4vie:
	cmpq $-1,%rsi
	je _c4vk5
_u4vk6:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4vin
_c4vk5:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c4vk4
_u4vk7:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4vin
_c4vk4:
	movl $GHC.Int.$fBitsInt10_closure+1,%r14d
	movl $GHC.Real.overflowError_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c4vih:
	movl $GHC.Int.$w$cdivMod2_closure,%ebx
	jmp *-8(%r13)
_c4vif:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Int.$w$cdivMod2_entry, .-GHC.Int.$w$cdivMod2_entry


==================== Asm code ====================
2018-03-16 15:59:13.344029384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod2_info
.type GHC.Int.$w$cdivMod2_info, @object
GHC.Int.$w$cdivMod2_info:
	.quad	GHC.Int.$w$cdivMod2_entry
	.quad	0
	.quad	4611686031312289806
	.quad	8589934604
	.quad	S4lDl_srt+904


==================== Asm code ====================
2018-03-16 15:59:13.346387917 UTC

.section .text
.align 8
_c4vin:
_c4vin:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4vir
_c4viq:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4vj2
_c4vjV:
	testq %rbx,%rbx
	jge _c4vjE
_c4vjU:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vjE:
	testq %rax,%rax
	jge _c4vjd
_c4vjC:
	testq %rbx,%rbx
	jle _c4vjl
_c4vjB:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vjl:
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	movq %rdx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vjd:
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	movq %rdx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vj2:
	testq %rax,%rax
	jge _c4viB
_c4vj0:
	testq %rbx,%rbx
	jle _c4viJ
_c4viZ:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4viJ:
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	movq %rdx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4viB:
	cqto
	idivq %rbx
	movq $GHC.Int.I64#_con_info,-24(%r12)
	movq %rdx,-16(%r12)
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vir:
	movq $32,904(%r13)
	movq $block_c4vin_info,(%rbp)
	jmp stg_gc_noregs
	.size _c4vin, .-_c4vin


==================== Asm code ====================
2018-03-16 15:59:13.348489035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vin_info:
	.quad	_c4vin
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.355422358 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdivMod_closure
.type GHC.Int.$fIntegralInt64_$cdivMod_closure, @object
GHC.Int.$fIntegralInt64_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.356746299 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cdivMod_entry
.type GHC.Int.$fIntegralInt64_$cdivMod_entry, @object
GHC.Int.$fIntegralInt64_$cdivMod_entry:
_c4vkK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vkV
_c4vkW:
	movq $block_c4vkH_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vkH
_c4vkI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vkV:
	movl $GHC.Int.$fIntegralInt64_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cdivMod_entry, .-GHC.Int.$fIntegralInt64_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:13.357828196 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdivMod_info
.type GHC.Int.$fIntegralInt64_$cdivMod_info, @object
GHC.Int.$fIntegralInt64_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4lDl_srt+1144


==================== Asm code ====================
2018-03-16 15:59:13.358949416 UTC

.section .text
.align 8
_c4vkH:
_c4vkH:
	movq $block_c4vkN_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vkN
_c4vkO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vkH, .-_c4vkH


==================== Asm code ====================
2018-03-16 15:59:13.359852088 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vkH_info:
	.quad	_c4vkH
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+1144


==================== Asm code ====================
2018-03-16 15:59:13.360803355 UTC

.section .text
.align 8
_c4vkN:
_c4vkN:
	movq 8(%rbp),%rax
	movq $block_c4vkS_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod2_entry
	.size _c4vkN, .-_c4vkN


==================== Asm code ====================
2018-03-16 15:59:13.361910775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vkN_info:
	.quad	_c4vkN
	.quad	65
	.quad	4294967326
	.quad	S4lDl_srt+1144


==================== Asm code ====================
2018-03-16 15:59:13.363645985 UTC

.section .text
.align 8
_c4vkS:
_c4vkS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4vl1
_c4vl0:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vl1:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4vkS, .-_c4vkS


==================== Asm code ====================
2018-03-16 15:59:13.364639736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vkS_info:
	.quad	_c4vkS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.367955534 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crange_closure
.type GHC.Int.$fIxInt64_$crange_closure, @object
GHC.Int.$fIxInt64_$crange_closure:
	.quad	GHC.Int.$fIxInt64_$crange_info


==================== Asm code ====================
2018-03-16 15:59:13.36881628 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$crange_entry
.type GHC.Int.$fIxInt64_$crange_entry, @object
GHC.Int.$fIxInt64_$crange_entry:
_c4vls:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vlt
_c4vlu:
	movq $block_c4vlp_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vlp
_c4vlq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vlt:
	movl $GHC.Int.$fIxInt64_$crange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$crange_entry, .-GHC.Int.$fIxInt64_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:13.369630858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crange_info
.type GHC.Int.$fIxInt64_$crange_info, @object
GHC.Int.$fIxInt64_$crange_info:
	.quad	GHC.Int.$fIxInt64_$crange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.370363196 UTC

.section .text
.align 8
_c4vlp:
_c4vlp:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt64_$cenumFromTo_entry
	.size _c4vlp, .-_c4vlp


==================== Asm code ====================
2018-03-16 15:59:13.370914812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vlp_info:
	.quad	_c4vlp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.375371434 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt64_$ctoRational_closure
.type GHC.Int.$fRealInt64_$ctoRational_closure, @object
GHC.Int.$fRealInt64_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt64_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.376279282 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt64_$ctoRational_entry
.type GHC.Int.$fRealInt64_$ctoRational_entry, @object
GHC.Int.$fRealInt64_$ctoRational_entry:
_c4vlP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vm3
_c4vm4:
	movq $block_c4vlM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vlM
_c4vlN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vm3:
	movl $GHC.Int.$fRealInt64_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt64_$ctoRational_entry, .-GHC.Int.$fRealInt64_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:13.376939664 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt64_$ctoRational_info
.type GHC.Int.$fRealInt64_$ctoRational_info, @object
GHC.Int.$fRealInt64_$ctoRational_info:
	.quad	GHC.Int.$fRealInt64_$ctoRational_entry
	.quad	0
	.quad	9007229319512078
	.quad	4294967301
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:13.377669485 UTC

.section .text
.align 8
_c4vlM:
_c4vlM:
	movq $block_c4vlS_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c4vlM, .-_c4vlM


==================== Asm code ====================
2018-03-16 15:59:13.378268643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vlM_info:
	.quad	_c4vlM
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:13.378945263 UTC

.section .text
.align 8
_c4vlS:
_c4vlS:
	movq $block_c4vlW_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c4vlS, .-_c4vlS


==================== Asm code ====================
2018-03-16 15:59:13.379545113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vlS_info:
	.quad	_c4vlS
	.quad	0
	.quad	30064771102
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:13.380228953 UTC

.section .text
.align 8
_c4vlW:
_c4vlW:
	movq $block_c4vm0_info,(%rbp)
	movl $GHC.Int.$fRealInt1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c4vlW, .-_c4vlW


==================== Asm code ====================
2018-03-16 15:59:13.380880445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vlW_info:
	.quad	_c4vlW
	.quad	0
	.quad	12884901918
	.quad	S4lDl_srt+992


==================== Asm code ====================
2018-03-16 15:59:13.381704386 UTC

.section .text
.align 8
_c4vm0:
_c4vm0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4vma
_c4vm9:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vma:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4vm0, .-_c4vm0


==================== Asm code ====================
2018-03-16 15:59:13.382440282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vm0_info:
	.quad	_c4vm0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.385963168 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt64_closure
.type GHC.Int.$fRealInt64_closure, @object
GHC.Int.$fRealInt64_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt64_closure+1
	.quad	GHC.Int.$fOrdInt64_closure+1
	.quad	GHC.Int.$fRealInt64_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.388865268 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_closure
.type GHC.Int.$fIntegralInt64_closure, @object
GHC.Int.$fIntegralInt64_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt64_closure+1
	.quad	GHC.Int.$fEnumInt64_closure+1
	.quad	GHC.Int.$fIntegralInt64_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt64_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.395882816 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeIndex_closure
.type GHC.Int.$fIxInt64_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt64_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:13.397281408 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cunsafeIndex_entry
.type GHC.Int.$fIxInt64_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt64_$cunsafeIndex_entry:
_c4vmE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vmV
_c4vmW:
	movq $block_c4vmB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vmB
_c4vmC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vmV:
	movl $GHC.Int.$fIxInt64_$cunsafeIndex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cunsafeIndex_entry, .-GHC.Int.$fIxInt64_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:13.398081056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeIndex_info
.type GHC.Int.$fIxInt64_$cunsafeIndex_info, @object
GHC.Int.$fIxInt64_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.398763957 UTC

.section .text
.align 8
_c4vmB:
_c4vmB:
	movq $block_c4vmH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vmH
_c4vmI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vmB, .-_c4vmB


==================== Asm code ====================
2018-03-16 15:59:13.399386592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vmB_info:
	.quad	_c4vmB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.400078736 UTC

.section .text
.align 8
_c4vmH:
_c4vmH:
	movq $block_c4vmM_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vmM
_c4vmN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vmH, .-_c4vmH


==================== Asm code ====================
2018-03-16 15:59:13.400677605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vmH_info:
	.quad	_c4vmH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.401498062 UTC

.section .text
.align 8
_c4vmM:
_c4vmM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vn1
_c4vn0:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vn1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vmM, .-_c4vmM


==================== Asm code ====================
2018-03-16 15:59:13.402493867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vmM_info:
	.quad	_c4vmM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.410568761 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crangeSize_closure
.type GHC.Int.$fIxInt64_$crangeSize_closure, @object
GHC.Int.$fIxInt64_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt64_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:13.412103213 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$crangeSize_entry
.type GHC.Int.$fIxInt64_$crangeSize_entry, @object
GHC.Int.$fIxInt64_$crangeSize_entry:
_c4vnw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vnF
_c4vnG:
	movq $block_c4vnt_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vnt
_c4vnu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vnF:
	movl $GHC.Int.$fIxInt64_$crangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$crangeSize_entry, .-GHC.Int.$fIxInt64_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:13.412913505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crangeSize_info
.type GHC.Int.$fIxInt64_$crangeSize_info, @object
GHC.Int.$fIxInt64_$crangeSize_info:
	.quad	GHC.Int.$fIxInt64_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.413698067 UTC

.section .text
.align 8
_c4vnt:
_c4vnt:
	movq $block_c4vnz_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vnz
_c4vnA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vnt, .-_c4vnt


==================== Asm code ====================
2018-03-16 15:59:13.414440624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vnt_info:
	.quad	_c4vnt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.415095137 UTC

.section .text
.align 8
_c4vnz:
_c4vnz:
	movq $block_c4vnE_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vnE
_c4vnJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vnz, .-_c4vnz


==================== Asm code ====================
2018-03-16 15:59:13.415678963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vnz_info:
	.quad	_c4vnz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.416652573 UTC

.section .text
.align 8
_c4vnE:
_c4vnE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vnP
_c4vnO:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4vnT
_c4vo3:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vnT:
	addq $-16,%r12
	movl $GHC.Int.$fIxInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vnP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vnE, .-_c4vnE


==================== Asm code ====================
2018-03-16 15:59:13.417383201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vnE_info:
	.quad	_c4vnE
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.422938394 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:13.424235628 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_entry:
_c4voA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4voU
_c4voV:
	movq $block_c4vox_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vox
_c4voy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4voU:
	movl $GHC.Int.$fIxInt64_$cunsafeRangeSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt64_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:13.424928708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.425745754 UTC

.section .text
.align 8
_c4vox:
_c4vox:
	movq $block_c4voD_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4voD
_c4voE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vox, .-_c4vox


==================== Asm code ====================
2018-03-16 15:59:13.426400839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vox_info:
	.quad	_c4vox
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.427164755 UTC

.section .text
.align 8
_c4voD:
_c4voD:
	movq $block_c4voI_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4voI
_c4voJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4voD, .-_c4voD


==================== Asm code ====================
2018-03-16 15:59:13.427755503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4voD_info:
	.quad	_c4voD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.428494403 UTC

.section .text
.align 8
_c4voI:
_c4voI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vp0
_c4voZ:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vp0:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4voI, .-_c4voI


==================== Asm code ====================
2018-03-16 15:59:13.429133709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4voI_info:
	.quad	_c4voI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.436390808 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cindex_closure
.type GHC.Int.$fIxInt64_$cindex_closure, @object
GHC.Int.$fIxInt64_$cindex_closure:
	.quad	GHC.Int.$fIxInt64_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.437338332 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cindex_entry
.type GHC.Int.$fIxInt64_$cindex_entry, @object
GHC.Int.$fIxInt64_$cindex_entry:
_c4vpw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vpF
_c4vpG:
	movq $block_c4vpt_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vpt
_c4vpu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vpF:
	movl $GHC.Int.$fIxInt64_$cindex_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cindex_entry, .-GHC.Int.$fIxInt64_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:13.438040892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cindex_info
.type GHC.Int.$fIxInt64_$cindex_info, @object
GHC.Int.$fIxInt64_$cindex_info:
	.quad	GHC.Int.$fIxInt64_$cindex_entry
	.quad	0
	.quad	281479271677966
	.quad	8589934607
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:13.43881477 UTC

.section .text
.align 8
_c4vpt:
_c4vpt:
	movq $block_c4vpz_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vpz
_c4vpA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vpt, .-_c4vpt


==================== Asm code ====================
2018-03-16 15:59:13.439456828 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vpt_info:
	.quad	_c4vpt
	.quad	1
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:13.440175786 UTC

.section .text
.align 8
_c4vpz:
_c4vpz:
	movq $block_c4vpE_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4vpE
_c4vpJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vpz, .-_c4vpz


==================== Asm code ====================
2018-03-16 15:59:13.440818537 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vpz_info:
	.quad	_c4vpz
	.quad	2
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:13.44168018 UTC

.section .text
.align 8
_c4vpE:
_c4vpE:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4vpR
_c4vpV:
	movq $block_c4vpU_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vpU
_c4vpW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vpR:
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vpE, .-_c4vpE


==================== Asm code ====================
2018-03-16 15:59:13.44246734 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vpE_info:
	.quad	_c4vpE
	.quad	130
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:13.443271471 UTC

.section .text
.align 8
_c4vpU:
_c4vpU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vq2
_c4vq1:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4vq6
_c4vqd:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vq6:
	addq $-16,%r12
	movl $GHC.Arr.hopelessIndexError_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4vq2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4vpU, .-_c4vpU


==================== Asm code ====================
2018-03-16 15:59:13.444023391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vpU_info:
	.quad	_c4vpU
	.quad	194
	.quad	4294967326
	.quad	S4lDl_srt+1040


==================== Asm code ====================
2018-03-16 15:59:13.446105599 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_closure
.type GHC.Int.$fIxInt64_closure, @object
GHC.Int.$fIxInt64_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt64_closure+1
	.quad	GHC.Int.$fIxInt64_$crange_closure+1
	.quad	GHC.Int.$fIxInt64_$cindex_closure+2
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt64_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt64_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:13.452053337 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowsPrec_closure
.type GHC.Int.$fShowInt64_$cshowsPrec_closure, @object
GHC.Int.$fShowInt64_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:13.453207018 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshowsPrec_entry
.type GHC.Int.$fShowInt64_$cshowsPrec_entry, @object
GHC.Int.$fShowInt64_$cshowsPrec_entry:
_c4vqQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vr1
_c4vr2:
	movq $block_c4vqN_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4vqN
_c4vqO:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vr1:
	movl $GHC.Int.$fShowInt64_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt64_$cshowsPrec_entry, .-GHC.Int.$fShowInt64_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:13.454057706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowsPrec_info
.type GHC.Int.$fShowInt64_$cshowsPrec_info, @object
GHC.Int.$fShowInt64_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:13.454928012 UTC

.section .text
.align 8
_c4vqN:
_c4vqN:
	movq $block_c4vqT_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4vqT
_c4vqU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4vqN, .-_c4vqN


==================== Asm code ====================
2018-03-16 15:59:13.455669054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vqN_info:
	.quad	_c4vqN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.456328183 UTC

.section .text
.align 8
_c4vqT:
_c4vqT:
	movq 16(%rbp),%rax
	movq $block_c4vqY_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4vqT, .-_c4vqT


==================== Asm code ====================
2018-03-16 15:59:13.456944276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vqT_info:
	.quad	_c4vqT
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.457782235 UTC

.section .text
.align 8
_c4vqY:
_c4vqY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4vr7
_c4vr6:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vr7:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4vqY, .-_c4vqY


==================== Asm code ====================
2018-03-16 15:59:13.458457247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vqY_info:
	.quad	_c4vqY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.462405883 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshow_closure
.type GHC.Int.$fShowInt64_$cshow_closure, @object
GHC.Int.$fShowInt64_$cshow_closure:
	.quad	GHC.Int.$fShowInt64_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:13.463586901 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshow_entry
.type GHC.Int.$fShowInt64_$cshow_entry, @object
GHC.Int.$fShowInt64_$cshow_entry:
_c4vry:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vrE
_c4vrF:
	movq $block_c4vrv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4vrv
_c4vrw:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vrE:
	movl $GHC.Int.$fShowInt64_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt64_$cshow_entry, .-GHC.Int.$fShowInt64_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:13.464457806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshow_info
.type GHC.Int.$fShowInt64_$cshow_info, @object
GHC.Int.$fShowInt64_$cshow_info:
	.quad	GHC.Int.$fShowInt64_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:13.465140555 UTC

.section .text
.align 8
_c4vrv:
_c4vrv:
	movq $block_c4vrB_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4vrv, .-_c4vrv


==================== Asm code ====================
2018-03-16 15:59:13.465969468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vrv_info:
	.quad	_c4vrv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.466718765 UTC

.section .text
.align 8
_c4vrB:
_c4vrB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4vrJ
_c4vrI:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vrJ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4vrB, .-_c4vrB


==================== Asm code ====================
2018-03-16 15:59:13.467442188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vrB_info:
	.quad	_c4vrB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.471400815 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt3_closure
.type GHC.Int.$fShowInt3_closure, @object
GHC.Int.$fShowInt3_closure:
	.quad	GHC.Int.$fShowInt3_info


==================== Asm code ====================
2018-03-16 15:59:13.472829698 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt3_entry
.type GHC.Int.$fShowInt3_entry, @object
GHC.Int.$fShowInt3_entry:
_c4vs5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4vsb
_c4vsc:
	movq $block_c4vs2_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4vs2
_c4vs3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4vsb:
	movl $GHC.Int.$fShowInt3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt3_entry, .-GHC.Int.$fShowInt3_entry


==================== Asm code ====================
2018-03-16 15:59:13.473649562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt3_info
.type GHC.Int.$fShowInt3_info, @object
GHC.Int.$fShowInt3_info:
	.quad	GHC.Int.$fShowInt3_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.474338102 UTC

.section .text
.align 8
_c4vs2:
_c4vs2:
	movq 8(%rbp),%rax
	movq $block_c4vs8_info,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c4vs2, .-_c4vs2


==================== Asm code ====================
2018-03-16 15:59:13.47492443 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vs2_info:
	.quad	_c4vs2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.475614181 UTC

.section .text
.align 8
_c4vs8:
_c4vs8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4vsg
_c4vsf:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4vsg:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c4vs8, .-_c4vs8


==================== Asm code ====================
2018-03-16 15:59:13.476299409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4vs8_info:
	.quad	_c4vs8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:13.478847547 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowList_closure
.type GHC.Int.$fShowInt64_$cshowList_closure, @object
GHC.Int.$fShowInt64_$cshowList_closure:
	.quad	GHC.Int.$fShowInt64_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:13.479669645 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshowList_entry
.type GHC.Int.$fShowInt64_$cshowList_entry, @object
GHC.Int.$fShowInt64_$cshowList_entry:
_c4vsz:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Int.$fShowInt3_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Int.$fShowInt64_$cshowList_entry, .-GHC.Int.$fShowInt64_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:13.480333755 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowList_info
.type GHC.Int.$fShowInt64_$cshowList_info, @object
GHC.Int.$fShowInt64_$cshowList_info:
	.quad	GHC.Int.$fShowInt64_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:13.483053502 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_closure
.type GHC.Int.$fShowInt64_closure, @object
GHC.Int.$fShowInt64_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt64_$cshow_closure+1
	.quad	GHC.Int.$fShowInt64_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.485922242 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftL64#_closure
.type GHC.Int.uncheckedIShiftL64#_closure, @object
GHC.Int.uncheckedIShiftL64#_closure:
	.quad	GHC.Int.uncheckedIShiftL64#_info


==================== Asm code ====================
2018-03-16 15:59:13.487011986 UTC

.section .text
.align 8
.globl GHC.Int.uncheckedIShiftL64#_entry
.type GHC.Int.uncheckedIShiftL64#_entry, @object
GHC.Int.uncheckedIShiftL64#_entry:
_c4vsM:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.uncheckedIShiftL64#_entry, .-GHC.Int.uncheckedIShiftL64#_entry


==================== Asm code ====================
2018-03-16 15:59:13.488012207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftL64#_info
.type GHC.Int.uncheckedIShiftL64#_info, @object
GHC.Int.uncheckedIShiftL64#_info:
	.quad	GHC.Int.uncheckedIShiftL64#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:13.491481004 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftRA64#_closure
.type GHC.Int.uncheckedIShiftRA64#_closure, @object
GHC.Int.uncheckedIShiftRA64#_closure:
	.quad	GHC.Int.uncheckedIShiftRA64#_info


==================== Asm code ====================
2018-03-16 15:59:13.492294544 UTC

.section .text
.align 8
.globl GHC.Int.uncheckedIShiftRA64#_entry
.type GHC.Int.uncheckedIShiftRA64#_entry, @object
GHC.Int.uncheckedIShiftRA64#_entry:
_c4vt0:
	movq %rsi,%rcx
	sarq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.uncheckedIShiftRA64#_entry, .-GHC.Int.uncheckedIShiftRA64#_entry


==================== Asm code ====================
2018-03-16 15:59:13.492947916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftRA64#_info
.type GHC.Int.uncheckedIShiftRA64#_info, @object
GHC.Int.uncheckedIShiftRA64#_info:
	.quad	GHC.Int.uncheckedIShiftRA64#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:13.495947048 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$trModule4_bytes
.type GHC.Int.$trModule4_bytes, @object
GHC.Int.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:13.497863082 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule3_closure
.type GHC.Int.$trModule3_closure, @object
GHC.Int.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:13.499411956 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$trModule2_bytes
.type GHC.Int.$trModule2_bytes, @object
GHC.Int.$trModule2_bytes:
	.asciz "GHC.Int"


==================== Asm code ====================
2018-03-16 15:59:13.500992047 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule1_closure
.type GHC.Int.$trModule1_closure, @object
GHC.Int.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:13.502764739 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule_closure
.type GHC.Int.$trModule_closure, @object
GHC.Int.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Int.$trModule3_closure+1
	.quad	GHC.Int.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.504648111 UTC

.section .data
.align 8
.align 1
$krep_r4kPB_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.506574115 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt7_closure
.type GHC.Int.$tcInt7_closure, @object
GHC.Int.$tcInt7_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt9_bytes


==================== Asm code ====================
2018-03-16 15:59:13.508523327 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt8_closure
.type GHC.Int.$tcInt8_closure, @object
GHC.Int.$tcInt8_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt7_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1422706860619545536
	.quad	2126344328513082648
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.511812566 UTC

.section .data
.align 8
.align 1
$krep1_r4kPC_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt8_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.514562052 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#1_closure
.type GHC.Int.$tc'I8#1_closure, @object
GHC.Int.$tc'I8#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep1_r4kPC_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.517034803 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I8#3_bytes
.type GHC.Int.$tc'I8#3_bytes, @object
GHC.Int.$tc'I8#3_bytes:
	.asciz "'I8#"


==================== Asm code ====================
2018-03-16 15:59:13.51889123 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#2_closure
.type GHC.Int.$tc'I8#2_closure, @object
GHC.Int.$tc'I8#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I8#3_bytes


==================== Asm code ====================
2018-03-16 15:59:13.520808592 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#_closure
.type GHC.Int.$tc'I8#_closure, @object
GHC.Int.$tc'I8#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I8#2_closure+1
	.quad	GHC.Int.$tc'I8#1_closure+4
	.quad	5349338056284818619
	.quad	-5148706792580450210
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.522682566 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt1_closure
.type GHC.Int.$tcInt1_closure, @object
GHC.Int.$tcInt1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt2_bytes


==================== Asm code ====================
2018-03-16 15:59:13.52463662 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt16_closure
.type GHC.Int.$tcInt16_closure, @object
GHC.Int.$tcInt16_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-2117626482027928378
	.quad	-5083513270378941521
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.526970715 UTC

.section .data
.align 8
.align 1
$krep2_r4kPD_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt16_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.528945967 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#1_closure
.type GHC.Int.$tc'I16#1_closure, @object
GHC.Int.$tc'I16#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep2_r4kPD_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.531582943 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I16#3_bytes
.type GHC.Int.$tc'I16#3_bytes, @object
GHC.Int.$tc'I16#3_bytes:
	.asciz "'I16#"


==================== Asm code ====================
2018-03-16 15:59:13.533702187 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#2_closure
.type GHC.Int.$tc'I16#2_closure, @object
GHC.Int.$tc'I16#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I16#3_bytes


==================== Asm code ====================
2018-03-16 15:59:13.535603431 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#_closure
.type GHC.Int.$tc'I16#_closure, @object
GHC.Int.$tc'I16#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I16#2_closure+1
	.quad	GHC.Int.$tc'I16#1_closure+4
	.quad	1077432500071562197
	.quad	-4770492822361039015
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.537981539 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt3_closure
.type GHC.Int.$tcInt3_closure, @object
GHC.Int.$tcInt3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt4_bytes


==================== Asm code ====================
2018-03-16 15:59:13.539845616 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt32_closure
.type GHC.Int.$tcInt32_closure, @object
GHC.Int.$tcInt32_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt3_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	5115671124548181797
	.quad	6203735229629729265
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.541758078 UTC

.section .data
.align 8
.align 1
$krep3_r4kPE_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt32_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.544332355 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#1_closure
.type GHC.Int.$tc'I32#1_closure, @object
GHC.Int.$tc'I32#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep3_r4kPE_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.54689762 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I32#3_bytes
.type GHC.Int.$tc'I32#3_bytes, @object
GHC.Int.$tc'I32#3_bytes:
	.asciz "'I32#"


==================== Asm code ====================
2018-03-16 15:59:13.550119262 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#2_closure
.type GHC.Int.$tc'I32#2_closure, @object
GHC.Int.$tc'I32#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I32#3_bytes


==================== Asm code ====================
2018-03-16 15:59:13.552798441 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#_closure
.type GHC.Int.$tc'I32#_closure, @object
GHC.Int.$tc'I32#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I32#2_closure+1
	.quad	GHC.Int.$tc'I32#1_closure+4
	.quad	-4409126545255331954
	.quad	2752255350980319305
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.55550692 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt5_closure
.type GHC.Int.$tcInt5_closure, @object
GHC.Int.$tcInt5_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt6_bytes


==================== Asm code ====================
2018-03-16 15:59:13.558245165 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt64_closure
.type GHC.Int.$tcInt64_closure, @object
GHC.Int.$tcInt64_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt5_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-3397400749365311557
	.quad	-4001423308330387898
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.560844328 UTC

.section .data
.align 8
.align 1
$krep4_r4kPF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt64_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.565058512 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#1_closure
.type GHC.Int.$tc'I64#1_closure, @object
GHC.Int.$tc'I64#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep4_r4kPF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.566879762 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I64#3_bytes
.type GHC.Int.$tc'I64#3_bytes, @object
GHC.Int.$tc'I64#3_bytes:
	.asciz "'I64#"


==================== Asm code ====================
2018-03-16 15:59:13.568612599 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#2_closure
.type GHC.Int.$tc'I64#2_closure, @object
GHC.Int.$tc'I64#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I64#3_bytes


==================== Asm code ====================
2018-03-16 15:59:13.571057362 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#_closure
.type GHC.Int.$tc'I64#_closure, @object
GHC.Int.$tc'I64#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I64#2_closure+1
	.quad	GHC.Int.$tc'I64#1_closure+4
	.quad	7755385358338959724
	.quad	8520529638322167079
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:13.573728602 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I8#_closure
.type GHC.Int.I8#_closure, @object
GHC.Int.I8#_closure:
	.quad	GHC.Int.I8#_info


==================== Asm code ====================
2018-03-16 15:59:13.574589349 UTC

.section .text
.align 8
GHC.Int.I8#_entry:
_c4vtM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vtQ
_c4vtP:
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4vtQ:
	movq $16,904(%r13)
	movl $GHC.Int.I8#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.I8#_entry, .-GHC.Int.I8#_entry


==================== Asm code ====================
2018-03-16 15:59:13.575252748 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I8#_info:
	.quad	GHC.Int.I8#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:13.577882026 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I16#_closure
.type GHC.Int.I16#_closure, @object
GHC.Int.I16#_closure:
	.quad	GHC.Int.I16#_info


==================== Asm code ====================
2018-03-16 15:59:13.578766481 UTC

.section .text
.align 8
GHC.Int.I16#_entry:
_c4vu1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vu5
_c4vu4:
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4vu5:
	movq $16,904(%r13)
	movl $GHC.Int.I16#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.I16#_entry, .-GHC.Int.I16#_entry


==================== Asm code ====================
2018-03-16 15:59:13.579446709 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I16#_info:
	.quad	GHC.Int.I16#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:13.582366867 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I32#_closure
.type GHC.Int.I32#_closure, @object
GHC.Int.I32#_closure:
	.quad	GHC.Int.I32#_info


==================== Asm code ====================
2018-03-16 15:59:13.583268475 UTC

.section .text
.align 8
GHC.Int.I32#_entry:
_c4vug:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vuk
_c4vuj:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4vuk:
	movq $16,904(%r13)
	movl $GHC.Int.I32#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.I32#_entry, .-GHC.Int.I32#_entry


==================== Asm code ====================
2018-03-16 15:59:13.583923741 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I32#_info:
	.quad	GHC.Int.I32#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:13.58659267 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I64#_closure
.type GHC.Int.I64#_closure, @object
GHC.Int.I64#_closure:
	.quad	GHC.Int.I64#_info


==================== Asm code ====================
2018-03-16 15:59:13.58741871 UTC

.section .text
.align 8
GHC.Int.I64#_entry:
_c4vuv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4vuz
_c4vuy:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4vuz:
	movq $16,904(%r13)
	movl $GHC.Int.I64#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Int.I64#_entry, .-GHC.Int.I64#_entry


==================== Asm code ====================
2018-03-16 15:59:13.588111542 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I64#_info:
	.quad	GHC.Int.I64#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:13.591070532 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4rfo_str:
	.asciz "base:GHC.Int.I8#"


==================== Asm code ====================
2018-03-16 15:59:13.591717799 UTC

.section .text
.align 8
.globl GHC.Int.I8#_con_entry
.type GHC.Int.I8#_con_entry, @object
GHC.Int.I8#_con_entry:
_c4vuF:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I8#_con_entry, .-GHC.Int.I8#_con_entry


==================== Asm code ====================
2018-03-16 15:59:13.592329934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I8#_con_info
.type GHC.Int.I8#_con_info, @object
GHC.Int.I8#_con_info:
	.quad	GHC.Int.I8#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4rfo_str


==================== Asm code ====================
2018-03-16 15:59:13.594469123 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4rfq_str:
	.asciz "base:GHC.Int.I16#"


==================== Asm code ====================
2018-03-16 15:59:13.59515945 UTC

.section .text
.align 8
.globl GHC.Int.I16#_con_entry
.type GHC.Int.I16#_con_entry, @object
GHC.Int.I16#_con_entry:
_c4vuL:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I16#_con_entry, .-GHC.Int.I16#_con_entry


==================== Asm code ====================
2018-03-16 15:59:13.595713135 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I16#_con_info
.type GHC.Int.I16#_con_info, @object
GHC.Int.I16#_con_info:
	.quad	GHC.Int.I16#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4rfq_str


==================== Asm code ====================
2018-03-16 15:59:13.597906693 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4rfs_str:
	.asciz "base:GHC.Int.I32#"


==================== Asm code ====================
2018-03-16 15:59:13.598610758 UTC

.section .text
.align 8
.globl GHC.Int.I32#_con_entry
.type GHC.Int.I32#_con_entry, @object
GHC.Int.I32#_con_entry:
_c4vuR:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I32#_con_entry, .-GHC.Int.I32#_con_entry


==================== Asm code ====================
2018-03-16 15:59:13.599213645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I32#_con_info
.type GHC.Int.I32#_con_info, @object
GHC.Int.I32#_con_info:
	.quad	GHC.Int.I32#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4rfs_str


==================== Asm code ====================
2018-03-16 15:59:13.601306294 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4rfu_str:
	.asciz "base:GHC.Int.I64#"


==================== Asm code ====================
2018-03-16 15:59:13.601978451 UTC

.section .text
.align 8
.globl GHC.Int.I64#_con_entry
.type GHC.Int.I64#_con_entry, @object
GHC.Int.I64#_con_entry:
_c4vuX:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I64#_con_entry, .-GHC.Int.I64#_con_entry


==================== Asm code ====================
2018-03-16 15:59:13.602621845 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I64#_con_info
.type GHC.Int.I64#_con_info, @object
GHC.Int.I64#_con_info:
	.quad	GHC.Int.I64#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4rfu_str


==================== Asm code ====================
2018-03-16 15:59:13.607356163 UTC

.section .data.rel.ro
.align 8
.align 1
S4lDl_srt:
	.quad	GHC.Enum.predError_closure
	.quad	GHC.Enum.succError_closure
	.quad	GHC.Int.$fEnumInt8_$cpred_closure
	.quad	GHC.Int.$fEnumInt7_closure
	.quad	GHC.Int.$fEnumInt8_$csucc_closure
	.quad	GHC.Int.$fEnumInt9_closure
	.quad	GHC.Enum.$wtoEnumError_closure
	.quad	lvl_r4kPr_closure
	.quad	GHC.Int.$wlvl2_closure
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum2_closure
	.quad	GHC.Int.$w$cenumFromThenTo3_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_closure
	.quad	GHC.Int.$w$cenumFromTo3_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure
	.quad	GHC.Int.$wgo3_closure
	.quad	GHC.Int.$fEnumInt8_go_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_closure
	.quad	GHC.Int.$fEnumInt8_closure
	.quad	GHC.Int.$fEnumInt16_$cpred_closure
	.quad	GHC.Int.$fEnumInt1_closure
	.quad	GHC.Int.$fEnumInt16_$csucc_closure
	.quad	GHC.Int.$fEnumInt2_closure
	.quad	lvl2_r4kPt_closure
	.quad	GHC.Int.$wlvl_closure
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum_closure
	.quad	GHC.Int.$w$cenumFromThenTo_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_closure
	.quad	GHC.Int.$w$cenumFromTo_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure
	.quad	GHC.Int.$wgo_closure
	.quad	GHC.Int.$fEnumInt16_go_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_closure
	.quad	GHC.Int.$fEnumInt16_closure
	.quad	GHC.Enum.predError_closure
	.quad	GHC.Enum.succError_closure
	.quad	GHC.Int.$fEnumInt32_$cpred_closure
	.quad	GHC.Int.$fEnumInt3_closure
	.quad	GHC.Int.$fEnumInt32_$csucc_closure
	.quad	GHC.Int.$fEnumInt4_closure
	.quad	lvl4_r4kPv_closure
	.quad	GHC.Enum.$wtoEnumError_closure
	.quad	GHC.Int.$wlvl1_closure
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum1_closure
	.quad	GHC.Int.$w$cenumFromTo1_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure
	.quad	GHC.Int.$wgo1_closure
	.quad	GHC.Int.$fEnumInt32_go_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_closure
	.quad	GHC.Int.$w$cenumFromThenTo1_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_closure
	.quad	GHC.Int.$fEnumInt32_closure
	.quad	GHC.Int.$fEnumInt64_$cpred_closure
	.quad	GHC.Int.$fEnumInt5_closure
	.quad	GHC.Int.$fEnumInt64_$csucc_closure
	.quad	GHC.Int.$fEnumInt6_closure
	.quad	GHC.Int.$fEnumInt64_closure
	.quad	GHC.Read.$fReadInt2_closure
	.quad	GHC.Read.$fReadInt_$sreadNumber_closure
	.quad	GHC.Int.$fReadInt8_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt13_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.Int.$fReadInt12_closure
	.quad	GHC.Int.$fReadInt11_closure
	.quad	GHC.Int.$fReadInt8_$creadList_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fIntegralInt8_$cquot_closure
	.quad	GHC.Int.$fIntegralInt8_$crem_closure
	.quad	GHC.Int.$w$cdiv3_closure
	.quad	GHC.Int.$fIntegralInt8_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt8_$cmod_closure
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_closure
	.quad	lvl6_r4kPx_closure
	.quad	GHC.Int.$w$cdivMod3_closure
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_closure
	.quad	sat_s4ldV_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Int.$fRealInt1_closure
	.quad	GHC.Int.$fRealInt8_$ctoRational_closure
	.quad	GHC.Int.$fIxInt8_$crange_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure
	.quad	GHC.Arr.hopelessIndexError_closure
	.quad	GHC.Int.$fIxInt8_$cindex_closure
	.quad	GHC.Int.$fReadInt16_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt3_closure
	.quad	GHC.Int.$fReadInt2_closure
	.quad	GHC.Int.$fReadInt1_closure
	.quad	GHC.Int.$fReadInt16_$creadList_closure
	.quad	GHC.Int.$fIntegralInt16_$cquot_closure
	.quad	GHC.Int.$fIntegralInt16_$crem_closure
	.quad	GHC.Int.$w$cdiv_closure
	.quad	GHC.Int.$fIntegralInt16_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt16_$cmod_closure
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_closure
	.quad	lvl7_r4kPy_closure
	.quad	GHC.Int.$w$cdivMod_closure
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_closure
	.quad	GHC.Int.$fRealInt16_$ctoRational_closure
	.quad	GHC.Int.$fIxInt16_$crange_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure
	.quad	GHC.Int.$fIxInt16_$cindex_closure
	.quad	GHC.Int.$fReadInt32_$creadsPrec_closure
	.quad	GHC.Read.$fReadInt_$sreadNumber_closure
	.quad	GHC.Read.$fReadInt2_closure
	.quad	GHC.Int.$fReadInt6_closure
	.quad	GHC.Int.$fReadInt5_closure
	.quad	GHC.Int.$fReadInt4_closure
	.quad	GHC.Int.$fReadInt32_$creadList_closure
	.quad	GHC.Int.$fIntegralInt32_$cquot_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Int.$fIntegralInt32_$crem_closure
	.quad	GHC.Int.$w$cdiv1_closure
	.quad	GHC.Int.$fIntegralInt32_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt32_$cmod_closure
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_closure
	.quad	lvl8_r4kPz_closure
	.quad	GHC.Int.$w$cdivMod1_closure
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_closure
	.quad	GHC.Int.$fRealInt32_$ctoRational_closure
	.quad	GHC.Int.$fRealInt1_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Int.$fIxInt32_$crange_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure
	.quad	GHC.Int.$fIxInt32_$cindex_closure
	.quad	GHC.Arr.hopelessIndexError_closure
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt10_closure
	.quad	GHC.Int.$fReadInt9_closure
	.quad	GHC.Int.$fReadInt7_closure
	.quad	GHC.Int.$fReadInt64_$creadList_closure
	.quad	GHC.Int.$fIntegralInt64_$cquot_closure
	.quad	GHC.Int.$fIntegralInt64_$crem_closure
	.quad	GHC.Int.$fIntegralInt64_$cdiv_closure
	.quad	GHC.Int.$w$cdiv2_closure
	.quad	GHC.Int.$fIntegralInt64_$cmod_closure
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_closure
	.quad	lvl9_r4kPA_closure
	.quad	GHC.Int.$w$cdivMod2_closure
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_closure
	.quad	GHC.Int.$fRealInt64_$ctoRational_closure
	.quad	GHC.Int.$fIxInt64_$cindex_closure


==================== Asm code ====================
2018-03-16 15:59:23.934163873 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cfromEnum_closure
.type GHC.Int.$fEnumInt8_$cfromEnum_closure, @object
GHC.Int.$fEnumInt8_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:23.935083309 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cfromEnum_entry
.type GHC.Int.$fEnumInt8_$cfromEnum_entry, @object
GHC.Int.$fEnumInt8_$cfromEnum_entry:
_c4wdw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wdA
_c4wdB:
	leaq block_c4wdt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wdt
_c4wdu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wdA:
	leaq GHC.Int.$fEnumInt8_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cfromEnum_entry, .-GHC.Int.$fEnumInt8_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:23.935760443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cfromEnum_info
.type GHC.Int.$fEnumInt8_$cfromEnum_info, @object
GHC.Int.$fEnumInt8_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:23.936561862 UTC

.section .text
.align 8
_c4wdt:
_c4wdt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wdE
_c4wdD:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wdE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wdt, .-_c4wdt


==================== Asm code ====================
2018-03-16 15:59:23.937203236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wdt_info:
	.quad	_c4wdt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.940507467 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cfromEnum_closure
.type GHC.Int.$fEnumInt16_$cfromEnum_closure, @object
GHC.Int.$fEnumInt16_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:23.941524952 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cfromEnum_entry
.type GHC.Int.$fEnumInt16_$cfromEnum_entry, @object
GHC.Int.$fEnumInt16_$cfromEnum_entry:
_c4wdZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4we3
_c4we4:
	leaq block_c4wdW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wdW
_c4wdX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4we3:
	leaq GHC.Int.$fEnumInt16_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cfromEnum_entry, .-GHC.Int.$fEnumInt16_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:23.942245961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cfromEnum_info
.type GHC.Int.$fEnumInt16_$cfromEnum_info, @object
GHC.Int.$fEnumInt16_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:23.943042661 UTC

.section .text
.align 8
_c4wdW:
_c4wdW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4we7
_c4we6:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4we7:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wdW, .-_c4wdW


==================== Asm code ====================
2018-03-16 15:59:23.943755699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wdW_info:
	.quad	_c4wdW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.949946941 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cfromEnum_closure
.type GHC.Int.$fEnumInt32_$cfromEnum_closure, @object
GHC.Int.$fEnumInt32_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:23.950800293 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cfromEnum_entry
.type GHC.Int.$fEnumInt32_$cfromEnum_entry, @object
GHC.Int.$fEnumInt32_$cfromEnum_entry:
_c4wes:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wew
_c4wex:
	leaq block_c4wep_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wep
_c4weq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wew:
	leaq GHC.Int.$fEnumInt32_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cfromEnum_entry, .-GHC.Int.$fEnumInt32_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:23.951465582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cfromEnum_info
.type GHC.Int.$fEnumInt32_$cfromEnum_info, @object
GHC.Int.$fEnumInt32_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:23.952302115 UTC

.section .text
.align 8
_c4wep:
_c4wep:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4weA
_c4wez:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4weA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wep, .-_c4wep


==================== Asm code ====================
2018-03-16 15:59:23.952942052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wep_info:
	.quad	_c4wep
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.956240979 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cfromEnum_closure
.type GHC.Int.$fEnumInt64_$cfromEnum_closure, @object
GHC.Int.$fEnumInt64_$cfromEnum_closure:
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:59:23.957099657 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cfromEnum_entry
.type GHC.Int.$fEnumInt64_$cfromEnum_entry, @object
GHC.Int.$fEnumInt64_$cfromEnum_entry:
_c4weV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4weZ
_c4wf0:
	leaq block_c4weS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4weS
_c4weT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4weZ:
	leaq GHC.Int.$fEnumInt64_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cfromEnum_entry, .-GHC.Int.$fEnumInt64_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:59:23.957834884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cfromEnum_info
.type GHC.Int.$fEnumInt64_$cfromEnum_info, @object
GHC.Int.$fEnumInt64_$cfromEnum_info:
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:23.958582548 UTC

.section .text
.align 8
_c4weS:
_c4weS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wf3
_c4wf2:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wf3:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4weS, .-_c4weS


==================== Asm code ====================
2018-03-16 15:59:23.959220317 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4weS_info:
	.quad	_c4weS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.962510747 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$ctoEnum_closure
.type GHC.Int.$fEnumInt64_$ctoEnum_closure, @object
GHC.Int.$fEnumInt64_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_info


==================== Asm code ====================
2018-03-16 15:59:23.963418566 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$ctoEnum_entry
.type GHC.Int.$fEnumInt64_$ctoEnum_entry, @object
GHC.Int.$fEnumInt64_$ctoEnum_entry:
_c4wfo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wfs
_c4wft:
	leaq block_c4wfl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wfl
_c4wfm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wfs:
	leaq GHC.Int.$fEnumInt64_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$ctoEnum_entry, .-GHC.Int.$fEnumInt64_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:23.964079294 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$ctoEnum_info
.type GHC.Int.$fEnumInt64_$ctoEnum_info, @object
GHC.Int.$fEnumInt64_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:23.964840722 UTC

.section .text
.align 8
_c4wfl:
_c4wfl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wfw
_c4wfv:
	movq 7(%rbx),%rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wfw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wfl, .-_c4wfl


==================== Asm code ====================
2018-03-16 15:59:23.965569426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wfl_info:
	.quad	_c4wfl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.976200847 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo2_closure
.type GHC.Int.$w$cenumFromThenTo2_closure, @object
GHC.Int.$w$cenumFromThenTo2_closure:
	.quad	GHC.Int.$w$cenumFromThenTo2_info


==================== Asm code ====================
2018-03-16 15:59:23.977108268 UTC

.section .text
.align 8
sat_s4vvw_entry:
_c4wgi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wgj
_c4wgk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vvr_entry
_c4wgj:
	jmp *-16(%r13)
	.size sat_s4vvw_entry, .-sat_s4vvw_entry


==================== Asm code ====================
2018-03-16 15:59:23.978329814 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vvw_info:
	.quad	sat_s4vvw_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:23.979311816 UTC

.section .text
.align 8
go_dn_s4vvr_entry:
_c4wgo:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4wgs
_c4wgr:
	cmpq 15(%rbx),%r14
	jge _c4wgm
_c4wgn:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wgs:
	movq $80,904(%r13)
	jmp *-8(%r13)
_c4wgm:
	movq 7(%rbx),%rax
	leaq sat_s4vvw_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4vvr_entry, .-go_dn_s4vvr_entry


==================== Asm code ====================
2018-03-16 15:59:23.980120438 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4vvr_info:
	.quad	go_dn_s4vvr_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:23.98093459 UTC

.section .text
.align 8
sat_s4vvy_entry:
_c4wgy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wgz
_c4wgA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wgC
_c4wgB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_dn_s4vvr_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vvr_entry
_c4wgC:
	movq $24,904(%r13)
_c4wgz:
	jmp *-16(%r13)
	.size sat_s4vvy_entry, .-sat_s4vvy_entry


==================== Asm code ====================
2018-03-16 15:59:23.981717765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vvy_info:
	.quad	sat_s4vvy_entry
	.quad	12884901888
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:23.982475926 UTC

.section .text
.align 8
sat_s4vvK_entry:
_c4wh5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wh6
_c4wh7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4vvF_entry
_c4wh6:
	jmp *-16(%r13)
	.size sat_s4vvK_entry, .-sat_s4vvK_entry


==================== Asm code ====================
2018-03-16 15:59:23.983150759 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vvK_info:
	.quad	sat_s4vvK_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:23.984068832 UTC

.section .text
.align 8
go_up_s4vvF_entry:
_c4whb:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4whf
_c4whe:
	cmpq 15(%rbx),%r14
	jle _c4wh9
_c4wha:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whf:
	movq $80,904(%r13)
	jmp *-8(%r13)
_c4wh9:
	movq 7(%rbx),%rax
	leaq sat_s4vvK_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4vvF_entry, .-go_up_s4vvF_entry


==================== Asm code ====================
2018-03-16 15:59:23.984888839 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4vvF_info:
	.quad	go_up_s4vvF_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:23.985782353 UTC

.section .text
.align 8
sat_s4vvM_entry:
_c4whl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4whm
_c4whn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4whp
_c4who:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_up_s4vvF_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4vvF_entry
_c4whp:
	movq $24,904(%r13)
_c4whm:
	jmp *-16(%r13)
	.size sat_s4vvM_entry, .-sat_s4vvM_entry


==================== Asm code ====================
2018-03-16 15:59:23.986499773 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vvM_info:
	.quad	sat_s4vvM_entry
	.quad	12884901888
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:23.987715141 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo2_entry
.type GHC.Int.$w$cenumFromThenTo2_entry, @object
GHC.Int.$w$cenumFromThenTo2_entry:
_c4wht:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4whx
_c4whw:
	cmpq %r14,%rsi
	jl _c4whr
_c4whs:
	cmpq %rsi,%rdi
	jge _c4whP
_c4whZ:
	cmpq %r14,%rdi
	jl _c4whY
_c4whX:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whY:
	addq $-80,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whP:
	leaq sat_s4vvM_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whr:
	cmpq %rsi,%rdi
	jle _c4whB
_c4whL:
	cmpq %r14,%rdi
	jg _c4whY
_c4whJ:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -71(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whB:
	leaq sat_s4vvy_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4whx:
	movq $80,904(%r13)
	leaq GHC.Int.$w$cenumFromThenTo2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo2_entry, .-GHC.Int.$w$cenumFromThenTo2_entry


==================== Asm code ====================
2018-03-16 15:59:23.988885716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo2_info
.type GHC.Int.$w$cenumFromThenTo2_info, @object
GHC.Int.$w$cenumFromThenTo2_info:
	.quad	GHC.Int.$w$cenumFromThenTo2_entry
	.quad	0
	.quad	14
	.quad	12884901904


==================== Asm code ====================
2018-03-16 15:59:23.993992992 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_info


==================== Asm code ====================
2018-03-16 15:59:23.994803508 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_entry:
_c4wjz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wjI
_c4wjJ:
	leaq block_c4wjw_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4wjw
_c4wjx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wjI:
	leaq GHC.Int.$fEnumInt64_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt64_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:23.995452049 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt64_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt64_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:23.996137309 UTC

.section .text
.align 8
_c4wjw:
_c4wjw:
	leaq block_c4wjC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wjC
_c4wjD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wjw, .-_c4wjw


==================== Asm code ====================
2018-03-16 15:59:23.996763634 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wjw_info:
	.quad	_c4wjw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.997482497 UTC

.section .text
.align 8
_c4wjC:
_c4wjC:
	leaq block_c4wjH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4wjH
_c4wjM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wjC, .-_c4wjC


==================== Asm code ====================
2018-03-16 15:59:23.998103855 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wjC_info:
	.quad	_c4wjC
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:23.998699066 UTC

.section .text
.align 8
_c4wjH:
_c4wjH:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo2_entry
	.size _c4wjH, .-_c4wjH


==================== Asm code ====================
2018-03-16 15:59:23.999271459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wjH_info:
	.quad	_c4wjH
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.003813562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo2_closure
.type GHC.Int.$w$cenumFromTo2_closure, @object
GHC.Int.$w$cenumFromTo2_closure:
	.quad	GHC.Int.$w$cenumFromTo2_info


==================== Asm code ====================
2018-03-16 15:59:24.004663759 UTC

.section .text
.align 8
sat_s4vw6_entry:
_c4wkz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wkA
_c4wkB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4wky
_c4wkx:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4vw1_entry
_c4wkA:
	jmp *-16(%r13)
_c4wky:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4vw6_entry, .-sat_s4vw6_entry


==================== Asm code ====================
2018-03-16 15:59:24.00537367 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vw6_info:
	.quad	sat_s4vw6_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:59:24.006137482 UTC

.section .text
.align 8
go_s4vw1_entry:
_c4wkG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c4wkK
_c4wkJ:
	movq 7(%rbx),%rax
	leaq sat_s4vw6_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wkK:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size go_s4vw1_entry, .-go_s4vw1_entry


==================== Asm code ====================
2018-03-16 15:59:24.006831331 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4vw1_info:
	.quad	go_s4vw1_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:24.007636212 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo2_entry
.type GHC.Int.$w$cenumFromTo2_entry, @object
GHC.Int.$w$cenumFromTo2_entry:
_c4wkO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wkS
_c4wkR:
	cmpq %rsi,%r14
	jle _c4wkM
_c4wkN:
	addq $-16,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wkS:
	movq $16,904(%r13)
	leaq GHC.Int.$w$cenumFromTo2_closure(%rip),%rbx
	jmp *-8(%r13)
_c4wkM:
	leaq go_s4vw1_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4vw1_entry
	.size GHC.Int.$w$cenumFromTo2_entry, .-GHC.Int.$w$cenumFromTo2_entry


==================== Asm code ====================
2018-03-16 15:59:24.008328752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo2_info
.type GHC.Int.$w$cenumFromTo2_info, @object
GHC.Int.$w$cenumFromTo2_info:
	.quad	GHC.Int.$w$cenumFromTo2_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:24.01193402 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromTo_closure
.type GHC.Int.$fEnumInt64_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt64_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_info


==================== Asm code ====================
2018-03-16 15:59:24.012851889 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromTo_entry
.type GHC.Int.$fEnumInt64_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt64_$cenumFromTo_entry:
_c4wln:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wlr
_c4wls:
	leaq block_c4wlk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wlk
_c4wll:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wlr:
	leaq GHC.Int.$fEnumInt64_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFromTo_entry, .-GHC.Int.$fEnumInt64_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.013985488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromTo_info
.type GHC.Int.$fEnumInt64_$cenumFromTo_info, @object
GHC.Int.$fEnumInt64_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.014679675 UTC

.section .text
.align 8
_c4wlk:
_c4wlk:
	leaq block_c4wlq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wlq
_c4wlu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wlk, .-_c4wlk


==================== Asm code ====================
2018-03-16 15:59:24.015206445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wlk_info:
	.quad	_c4wlk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.015801206 UTC

.section .text
.align 8
_c4wlq:
_c4wlq:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo2_entry
	.size _c4wlq, .-_c4wlq


==================== Asm code ====================
2018-03-16 15:59:24.016348865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wlq_info:
	.quad	_c4wlq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.018347553 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt9_bytes
.type GHC.Int.$tcInt9_bytes, @object
GHC.Int.$tcInt9_bytes:
	.asciz "Int8"


==================== Asm code ====================
2018-03-16 15:59:24.021294634 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt7_closure
.type GHC.Int.$fEnumInt7_closure, @object
GHC.Int.$fEnumInt7_closure:
	.quad	GHC.Int.$fEnumInt7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.022230248 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt7_entry
.type GHC.Int.$fEnumInt7_entry, @object
GHC.Int.$fEnumInt7_entry:
_c4wlZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wm0
_c4wm1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wlW
_c4wlV:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wlX_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt9_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wm0:
	jmp *-16(%r13)
_c4wlW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt7_entry, .-GHC.Int.$fEnumInt7_entry


==================== Asm code ====================
2018-03-16 15:59:24.022938919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt7_info
.type GHC.Int.$fEnumInt7_info, @object
GHC.Int.$fEnumInt7_info:
	.quad	GHC.Int.$fEnumInt7_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt


==================== Asm code ====================
2018-03-16 15:59:24.023571889 UTC

.section .text
.align 8
_c4wlX:
_c4wlX:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.predError_entry@gotpcrel(%rip)
	.size _c4wlX, .-_c4wlX


==================== Asm code ====================
2018-03-16 15:59:24.024124981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wlX_info:
	.quad	_c4wlX
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt


==================== Asm code ====================
2018-03-16 15:59:24.027155707 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt9_closure
.type GHC.Int.$fEnumInt9_closure, @object
GHC.Int.$fEnumInt9_closure:
	.quad	GHC.Int.$fEnumInt9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.0280965 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt9_entry
.type GHC.Int.$fEnumInt9_entry, @object
GHC.Int.$fEnumInt9_entry:
_c4wmq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wmr
_c4wms:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wmn
_c4wmm:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wmo_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt9_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wmr:
	jmp *-16(%r13)
_c4wmn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt9_entry, .-GHC.Int.$fEnumInt9_entry


==================== Asm code ====================
2018-03-16 15:59:24.028815149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt9_info
.type GHC.Int.$fEnumInt9_info, @object
GHC.Int.$fEnumInt9_info:
	.quad	GHC.Int.$fEnumInt9_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+8


==================== Asm code ====================
2018-03-16 15:59:24.029563149 UTC

.section .text
.align 8
_c4wmo:
_c4wmo:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.succError_entry@gotpcrel(%rip)
	.size _c4wmo, .-_c4wmo


==================== Asm code ====================
2018-03-16 15:59:24.03013983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wmo_info:
	.quad	_c4wmo
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+8


==================== Asm code ====================
2018-03-16 15:59:24.033892314 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt8_closure
.type GHC.Int.neInt8_closure, @object
GHC.Int.neInt8_closure:
	.quad	GHC.Int.neInt8_info


==================== Asm code ====================
2018-03-16 15:59:24.034777748 UTC

.section .text
.align 8
.globl GHC.Int.neInt8_entry
.type GHC.Int.neInt8_entry, @object
GHC.Int.neInt8_entry:
_c4wmP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wmT
_c4wmU:
	leaq block_c4wmM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wmM
_c4wmN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wmT:
	leaq GHC.Int.neInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.neInt8_entry, .-GHC.Int.neInt8_entry


==================== Asm code ====================
2018-03-16 15:59:24.03594121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt8_info
.type GHC.Int.neInt8_info, @object
GHC.Int.neInt8_info:
	.quad	GHC.Int.neInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.036658452 UTC

.section .text
.align 8
_c4wmM:
_c4wmM:
	leaq block_c4wmS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wmS
_c4wmW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wmM, .-_c4wmM


==================== Asm code ====================
2018-03-16 15:59:24.037227026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wmM_info:
	.quad	_c4wmM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.037987875 UTC

.section .text
.align 8
_c4wmS:
_c4wmS:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4wmS, .-_c4wmS


==================== Asm code ====================
2018-03-16 15:59:24.038564201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wmS_info:
	.quad	_c4wmS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.041162961 UTC

.section .data
.align 8
.align 1
lvl_r4kPr_closure:
	.quad	lvl_r4kPr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.042164775 UTC

.section .text
.align 8
lvl_r4kPr_entry:
_c4wnu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wnv
_c4wnw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wnt
_c4wns:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$tcInt9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wnv:
	jmp *-16(%r13)
_c4wnt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_r4kPr_entry, .-lvl_r4kPr_entry


==================== Asm code ====================
2018-03-16 15:59:24.042819567 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r4kPr_info:
	.quad	lvl_r4kPr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:24.044508826 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_$cminBound_closure
.type GHC.Int.$fBoundedInt8_$cminBound_closure, @object
GHC.Int.$fBoundedInt8_$cminBound_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	-128


==================== Asm code ====================
2018-03-16 15:59:24.048081479 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cpred_closure
.type GHC.Int.$fEnumInt8_$cpred_closure, @object
GHC.Int.$fEnumInt8_$cpred_closure:
	.quad	GHC.Int.$fEnumInt8_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.048967664 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cpred_entry
.type GHC.Int.$fEnumInt8_$cpred_entry, @object
GHC.Int.$fEnumInt8_$cpred_entry:
_c4wnN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wnO
_c4wnP:
	leaq block_c4wnK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wnK
_c4wnL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wnO:
	leaq GHC.Int.$fEnumInt8_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cpred_entry, .-GHC.Int.$fEnumInt8_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:24.050251558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cpred_info
.type GHC.Int.$fEnumInt8_$cpred_info, @object
GHC.Int.$fEnumInt8_$cpred_info:
	.quad	GHC.Int.$fEnumInt8_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+16


==================== Asm code ====================
2018-03-16 15:59:24.051076068 UTC

.section .text
.align 8
_c4wnK:
_c4wnK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wnU
_c4wnT:
	movq 7(%rbx),%rax
	cmpq $-128,%rax
	jne _c4wo5
_c4wo6:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt7_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4wo5:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wnU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wnK, .-_c4wnK


==================== Asm code ====================
2018-03-16 15:59:24.051804411 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wnK_info:
	.quad	_c4wnK
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+24


==================== Asm code ====================
2018-03-16 15:59:24.053609782 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_$cmaxBound_closure
.type GHC.Int.$fBoundedInt8_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt8_$cmaxBound_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	127


==================== Asm code ====================
2018-03-16 15:59:24.05547765 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt8_closure
.type GHC.Int.$fBoundedInt8_closure, @object
GHC.Int.$fBoundedInt8_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt8_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt8_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.059499074 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$csucc_closure
.type GHC.Int.$fEnumInt8_$csucc_closure, @object
GHC.Int.$fEnumInt8_$csucc_closure:
	.quad	GHC.Int.$fEnumInt8_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.060369466 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$csucc_entry
.type GHC.Int.$fEnumInt8_$csucc_entry, @object
GHC.Int.$fEnumInt8_$csucc_entry:
_c4wow:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wox
_c4woy:
	leaq block_c4wot_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wot
_c4wou:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wox:
	leaq GHC.Int.$fEnumInt8_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$csucc_entry, .-GHC.Int.$fEnumInt8_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:24.061020058 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$csucc_info
.type GHC.Int.$fEnumInt8_$csucc_info, @object
GHC.Int.$fEnumInt8_$csucc_info:
	.quad	GHC.Int.$fEnumInt8_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+32


==================== Asm code ====================
2018-03-16 15:59:24.06192061 UTC

.section .text
.align 8
_c4wot:
_c4wot:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4woD
_c4woC:
	movq 7(%rbx),%rax
	cmpq $127,%rax
	jne _c4woO
_c4woP:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt9_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4woO:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4woD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wot, .-_c4wot


==================== Asm code ====================
2018-03-16 15:59:24.062613486 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wot_info:
	.quad	_c4wot
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+40


==================== Asm code ====================
2018-03-16 15:59:24.067615044 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowsPrec_closure
.type GHC.Int.$fShowInt8_$cshowsPrec_closure, @object
GHC.Int.$fShowInt8_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:24.068507263 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshowsPrec_entry
.type GHC.Int.$fShowInt8_$cshowsPrec_entry, @object
GHC.Int.$fShowInt8_$cshowsPrec_entry:
_c4wpd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wpo
_c4wpp:
	leaq block_c4wpa_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4wpa
_c4wpb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wpo:
	leaq GHC.Int.$fShowInt8_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt8_$cshowsPrec_entry, .-GHC.Int.$fShowInt8_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:24.069289858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowsPrec_info
.type GHC.Int.$fShowInt8_$cshowsPrec_info, @object
GHC.Int.$fShowInt8_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:24.070050806 UTC

.section .text
.align 8
_c4wpa:
_c4wpa:
	leaq block_c4wpg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wpg
_c4wph:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wpa, .-_c4wpa


==================== Asm code ====================
2018-03-16 15:59:24.070714735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wpa_info:
	.quad	_c4wpa
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.071360085 UTC

.section .text
.align 8
_c4wpg:
_c4wpg:
	movq 16(%rbp),%rax
	leaq block_c4wpl_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wpg, .-_c4wpg


==================== Asm code ====================
2018-03-16 15:59:24.0719764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wpg_info:
	.quad	_c4wpg
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.072678953 UTC

.section .text
.align 8
_c4wpl:
_c4wpl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wpu
_c4wpt:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wpu:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wpl, .-_c4wpl


==================== Asm code ====================
2018-03-16 15:59:24.073406014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wpl_info:
	.quad	_c4wpl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.077019751 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshow_closure
.type GHC.Int.$fShowInt8_$cshow_closure, @object
GHC.Int.$fShowInt8_$cshow_closure:
	.quad	GHC.Int.$fShowInt8_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:24.077953309 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshow_entry
.type GHC.Int.$fShowInt8_$cshow_entry, @object
GHC.Int.$fShowInt8_$cshow_entry:
_c4wpZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wq5
_c4wq6:
	leaq block_c4wpW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wpW
_c4wpX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wq5:
	leaq GHC.Int.$fShowInt8_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt8_$cshow_entry, .-GHC.Int.$fShowInt8_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:24.079120006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshow_info
.type GHC.Int.$fShowInt8_$cshow_info, @object
GHC.Int.$fShowInt8_$cshow_info:
	.quad	GHC.Int.$fShowInt8_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.079785456 UTC

.section .text
.align 8
_c4wpW:
_c4wpW:
	leaq block_c4wq2_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wpW, .-_c4wpW


==================== Asm code ====================
2018-03-16 15:59:24.080358112 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wpW_info:
	.quad	_c4wpW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.081047195 UTC

.section .text
.align 8
_c4wq2:
_c4wq2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wqa
_c4wq9:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wqa:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wq2, .-_c4wq2


==================== Asm code ====================
2018-03-16 15:59:24.082019739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wq2_info:
	.quad	_c4wq2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.08571304 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt4_closure
.type GHC.Int.$fShowInt4_closure, @object
GHC.Int.$fShowInt4_closure:
	.quad	GHC.Int.$fShowInt4_info


==================== Asm code ====================
2018-03-16 15:59:24.086549427 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt4_entry
.type GHC.Int.$fShowInt4_entry, @object
GHC.Int.$fShowInt4_entry:
_c4wqA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wqG
_c4wqH:
	leaq block_c4wqx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wqx
_c4wqy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wqG:
	leaq GHC.Int.$fShowInt4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt4_entry, .-GHC.Int.$fShowInt4_entry


==================== Asm code ====================
2018-03-16 15:59:24.087285117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt4_info
.type GHC.Int.$fShowInt4_info, @object
GHC.Int.$fShowInt4_info:
	.quad	GHC.Int.$fShowInt4_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.087979507 UTC

.section .text
.align 8
_c4wqx:
_c4wqx:
	movq 8(%rbp),%rax
	leaq block_c4wqD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wqx, .-_c4wqx


==================== Asm code ====================
2018-03-16 15:59:24.088592581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wqx_info:
	.quad	_c4wqx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.089536327 UTC

.section .text
.align 8
_c4wqD:
_c4wqD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wqL
_c4wqK:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wqL:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wqD, .-_c4wqD


==================== Asm code ====================
2018-03-16 15:59:24.090135029 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wqD_info:
	.quad	_c4wqD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.092452771 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowList_closure
.type GHC.Int.$fShowInt8_$cshowList_closure, @object
GHC.Int.$fShowInt8_$cshowList_closure:
	.quad	GHC.Int.$fShowInt8_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:24.093214572 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt8_$cshowList_entry
.type GHC.Int.$fShowInt8_$cshowList_entry, @object
GHC.Int.$fShowInt8_$cshowList_entry:
_c4wr7:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Int.$fShowInt4_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Int.$fShowInt8_$cshowList_entry, .-GHC.Int.$fShowInt8_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:24.093910568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt8_$cshowList_info
.type GHC.Int.$fShowInt8_$cshowList_info, @object
GHC.Int.$fShowInt8_$cshowList_info:
	.quad	GHC.Int.$fShowInt8_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.095695332 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt8_closure
.type GHC.Int.$fShowInt8_closure, @object
GHC.Int.$fShowInt8_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt8_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt8_$cshow_closure+1
	.quad	GHC.Int.$fShowInt8_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.098280467 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl2_closure
.type GHC.Int.$wlvl2_closure, @object
GHC.Int.$wlvl2_closure:
	.quad	GHC.Int.$wlvl2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.099063978 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl2_entry
.type GHC.Int.$wlvl2_entry, @object
GHC.Int.$wlvl2_entry:
_c4wrj:
	leaq GHC.Int.$fBoundedInt8_$cmaxBound_closure+1(%rip),%r9
	leaq GHC.Int.$fBoundedInt8_$cminBound_closure+1(%rip),%r8
	movq %r14,%rdi
	leaq lvl_r4kPr_closure(%rip),%rsi
	leaq GHC.Int.$fShowInt8_closure+1(%rip),%r14
	jmp *GHC.Enum.$wtoEnumError_entry@gotpcrel(%rip)
	.size GHC.Int.$wlvl2_entry, .-GHC.Int.$wlvl2_entry


==================== Asm code ====================
2018-03-16 15:59:24.099714336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl2_info
.type GHC.Int.$wlvl2_info, @object
GHC.Int.$wlvl2_info:
	.quad	GHC.Int.$wlvl2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4wm5_srt+48


==================== Asm code ====================
2018-03-16 15:59:24.10310914 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum2_closure
.type GHC.Int.$w$ctoEnum2_closure, @object
GHC.Int.$w$ctoEnum2_closure:
	.quad	GHC.Int.$w$ctoEnum2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.103910107 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum2_entry
.type GHC.Int.$w$ctoEnum2_entry, @object
GHC.Int.$w$ctoEnum2_entry:
_c4wrz:
	movq %r14,%rax
	cmpq $-128,%r14
	jl _c4wrH
_c4wry:
	cmpq $127,%rax
	jg _c4wrH
_c4wrI:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wrH:
	movq %rax,%r14
	jmp GHC.Int.$wlvl2_entry
	.size GHC.Int.$w$ctoEnum2_entry, .-GHC.Int.$w$ctoEnum2_entry


==================== Asm code ====================
2018-03-16 15:59:24.104568447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum2_info
.type GHC.Int.$w$ctoEnum2_info, @object
GHC.Int.$w$ctoEnum2_info:
	.quad	GHC.Int.$w$ctoEnum2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.108177011 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$ctoEnum_closure
.type GHC.Int.$fEnumInt8_$ctoEnum_closure, @object
GHC.Int.$fEnumInt8_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.10907902 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$ctoEnum_entry
.type GHC.Int.$fEnumInt8_$ctoEnum_entry, @object
GHC.Int.$fEnumInt8_$ctoEnum_entry:
_c4wrV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ws3
_c4ws4:
	leaq block_c4wrS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wrS
_c4wrT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ws3:
	leaq GHC.Int.$fEnumInt8_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$ctoEnum_entry, .-GHC.Int.$fEnumInt8_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:24.109751725 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$ctoEnum_info
.type GHC.Int.$fEnumInt8_$ctoEnum_info, @object
GHC.Int.$fEnumInt8_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+72


==================== Asm code ====================
2018-03-16 15:59:24.110384809 UTC

.section .text
.align 8
_c4wrS:
_c4wrS:
	leaq block_c4wrY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum2_entry
	.size _c4wrS, .-_c4wrS


==================== Asm code ====================
2018-03-16 15:59:24.110962677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wrS_info:
	.quad	_c4wrS
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+80


==================== Asm code ====================
2018-03-16 15:59:24.111680489 UTC

.section .text
.align 8
_c4wrY:
_c4wrY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ws8
_c4ws7:
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ws8:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4wrY, .-_c4wrY


==================== Asm code ====================
2018-03-16 15:59:24.112346632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wrY_info:
	.quad	_c4wrY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.13245903 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo3_closure
.type GHC.Int.$w$cenumFromThenTo3_closure, @object
GHC.Int.$w$cenumFromThenTo3_closure:
	.quad	GHC.Int.$w$cenumFromThenTo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.133682016 UTC

.section .text
.align 8
sat_s4vxo_entry:
_c4wsY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wsZ
_c4wt0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vxh_entry
_c4wsZ:
	jmp *-16(%r13)
	.size sat_s4vxo_entry, .-sat_s4vxo_entry


==================== Asm code ====================
2018-03-16 15:59:24.134296915 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxo_info:
	.quad	sat_s4vxo_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.135159807 UTC

.section .text
.align 8
sat_s4vxm_entry:
_c4wta:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wtb
_c4wtc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wte
_c4wtd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wtk
_c4wt9:
	cmpq $127,%rax
	jg _c4wtk
_c4wto:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wtk:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wte:
	movq $16,904(%r13)
_c4wtb:
	jmp *-16(%r13)
	.size sat_s4vxm_entry, .-sat_s4vxm_entry


==================== Asm code ====================
2018-03-16 15:59:24.13590297 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxm_info:
	.quad	sat_s4vxm_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.136774007 UTC

.section .text
.align 8
sat_s4vxr_entry:
_c4wtz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wtA
_c4wtB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wtD
_c4wtC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wtJ
_c4wty:
	cmpq $127,%rax
	jg _c4wtJ
_c4wtN:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wtJ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wtD:
	movq $16,904(%r13)
_c4wtA:
	jmp *-16(%r13)
	.size sat_s4vxr_entry, .-sat_s4vxr_entry


==================== Asm code ====================
2018-03-16 15:59:24.13762498 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxr_info:
	.quad	sat_s4vxr_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.138546448 UTC

.section .text
.align 8
go_dn_s4vxh_entry:
_c4wtR:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wtV
_c4wtU:
	cmpq 15(%rbx),%r14
	jge _c4wtP
_c4wtQ:
	leaq sat_s4vxr_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wtV:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4wtP:
	movq 7(%rbx),%rax
	leaq sat_s4vxo_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vxm_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4vxh_entry, .-go_dn_s4vxh_entry


==================== Asm code ====================
2018-03-16 15:59:24.13939044 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4vxh_info:
	.quad	go_dn_s4vxh_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.140253873 UTC

.section .text
.align 8
sat_s4vxs_entry:
_c4wtY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wtZ
_c4wu0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wu2
_c4wu1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_dn_s4vxh_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vxh_entry
_c4wu2:
	movq $24,904(%r13)
_c4wtZ:
	jmp *-16(%r13)
	.size sat_s4vxs_entry, .-sat_s4vxs_entry


==================== Asm code ====================
2018-03-16 15:59:24.141034195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxs_info:
	.quad	sat_s4vxs_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.142014391 UTC

.section .text
.align 8
sat_s4vxe_entry:
_c4wuc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wud
_c4wue:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wug
_c4wuf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wum
_c4wub:
	cmpq $127,%rax
	jg _c4wum
_c4wuq:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wum:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wug:
	movq $16,904(%r13)
_c4wud:
	jmp *-16(%r13)
	.size sat_s4vxe_entry, .-sat_s4vxe_entry


==================== Asm code ====================
2018-03-16 15:59:24.142795736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxe_info:
	.quad	sat_s4vxe_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.144157677 UTC

.section .text
.align 8
sat_s4vxw_entry:
_c4wuE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wuF
_c4wuG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wuI
_c4wuH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wuO
_c4wuD:
	cmpq $127,%rax
	jg _c4wuO
_c4wuS:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wuO:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wuI:
	movq $16,904(%r13)
_c4wuF:
	jmp *-16(%r13)
	.size sat_s4vxw_entry, .-sat_s4vxw_entry


==================== Asm code ====================
2018-03-16 15:59:24.144858841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxw_info:
	.quad	sat_s4vxw_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.14577061 UTC

.section .text
.align 8
sat_s4vxK_entry:
_c4wvl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wvm
_c4wvn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4vxD_entry
_c4wvm:
	jmp *-16(%r13)
	.size sat_s4vxK_entry, .-sat_s4vxK_entry


==================== Asm code ====================
2018-03-16 15:59:24.146410284 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxK_info:
	.quad	sat_s4vxK_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.147280735 UTC

.section .text
.align 8
sat_s4vxI_entry:
_c4wvx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wvy
_c4wvz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wvB
_c4wvA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wvH
_c4wvw:
	cmpq $127,%rax
	jg _c4wvH
_c4wvL:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wvH:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wvB:
	movq $16,904(%r13)
_c4wvy:
	jmp *-16(%r13)
	.size sat_s4vxI_entry, .-sat_s4vxI_entry


==================== Asm code ====================
2018-03-16 15:59:24.148030787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxI_info:
	.quad	sat_s4vxI_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.148904316 UTC

.section .text
.align 8
sat_s4vxN_entry:
_c4wvW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wvX
_c4wvY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ww0
_c4wvZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4ww6
_c4wvV:
	cmpq $127,%rax
	jg _c4ww6
_c4wwa:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ww6:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4ww0:
	movq $16,904(%r13)
_c4wvX:
	jmp *-16(%r13)
	.size sat_s4vxN_entry, .-sat_s4vxN_entry


==================== Asm code ====================
2018-03-16 15:59:24.149800934 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxN_info:
	.quad	sat_s4vxN_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.150734483 UTC

.section .text
.align 8
go_up_s4vxD_entry:
_c4wwe:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wwi
_c4wwh:
	cmpq 15(%rbx),%r14
	jle _c4wwc
_c4wwd:
	leaq sat_s4vxN_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wwi:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4wwc:
	movq 7(%rbx),%rax
	leaq sat_s4vxK_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vxI_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4vxD_entry, .-go_up_s4vxD_entry


==================== Asm code ====================
2018-03-16 15:59:24.151578749 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4vxD_info:
	.quad	go_up_s4vxD_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.152474878 UTC

.section .text
.align 8
sat_s4vxO_entry:
_c4wwl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wwm
_c4wwn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wwp
_c4wwo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_up_s4vxD_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4vxD_entry
_c4wwp:
	movq $24,904(%r13)
_c4wwm:
	jmp *-16(%r13)
	.size sat_s4vxO_entry, .-sat_s4vxO_entry


==================== Asm code ====================
2018-03-16 15:59:24.153186995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxO_info:
	.quad	sat_s4vxO_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.154177644 UTC

.section .text
.align 8
sat_s4vxA_entry:
_c4wwz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wwA
_c4wwB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wwD
_c4wwC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wwJ
_c4wwy:
	cmpq $127,%rax
	jg _c4wwJ
_c4wwN:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wwJ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wwD:
	movq $16,904(%r13)
_c4wwA:
	jmp *-16(%r13)
	.size sat_s4vxA_entry, .-sat_s4vxA_entry


==================== Asm code ====================
2018-03-16 15:59:24.154916302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxA_info:
	.quad	sat_s4vxA_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.155776317 UTC

.section .text
.align 8
sat_s4vxS_entry:
_c4wx1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wx2
_c4wx3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wx5
_c4wx4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wxb
_c4wx0:
	cmpq $127,%rax
	jg _c4wxb
_c4wxf:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxb:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wx5:
	movq $16,904(%r13)
_c4wx2:
	jmp *-16(%r13)
	.size sat_s4vxS_entry, .-sat_s4vxS_entry


==================== Asm code ====================
2018-03-16 15:59:24.156486766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vxS_info:
	.quad	sat_s4vxS_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.157802911 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo3_entry
.type GHC.Int.$w$cenumFromThenTo3_entry, @object
GHC.Int.$w$cenumFromThenTo3_entry:
_c4wxj:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wxn
_c4wxm:
	cmpq %r14,%rsi
	jl _c4wxh
_c4wxi:
	cmpq %rsi,%rdi
	jge _c4wxy
_c4wxD:
	cmpq %r14,%rdi
	jl _c4wxC
_c4wxB:
	leaq sat_s4vxS_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxC:
	addq $-88,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxy:
	leaq sat_s4vxO_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vxA_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxh:
	cmpq %rsi,%rdi
	jle _c4wxq
_c4wxv:
	cmpq %r14,%rdi
	jg _c4wxC
_c4wxt:
	leaq sat_s4vxw_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxq:
	leaq sat_s4vxs_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vxe_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wxn:
	movq $88,904(%r13)
	leaq GHC.Int.$w$cenumFromThenTo3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo3_entry, .-GHC.Int.$w$cenumFromThenTo3_entry


==================== Asm code ====================
2018-03-16 15:59:24.158992488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo3_info
.type GHC.Int.$w$cenumFromThenTo3_info, @object
GHC.Int.$w$cenumFromThenTo3_info:
	.quad	GHC.Int.$w$cenumFromThenTo3_entry
	.quad	0
	.quad	38654705678
	.quad	12884901904
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.163461775 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.164367594 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_entry:
_c4wA7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wAg
_c4wAh:
	leaq block_c4wA4_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4wA4
_c4wA5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wAg:
	leaq GHC.Int.$fEnumInt8_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt8_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.165830182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt8_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt8_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4wm5_srt+88


==================== Asm code ====================
2018-03-16 15:59:24.166524202 UTC

.section .text
.align 8
_c4wA4:
_c4wA4:
	leaq block_c4wAa_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wAa
_c4wAb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wA4, .-_c4wA4


==================== Asm code ====================
2018-03-16 15:59:24.16707806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wA4_info:
	.quad	_c4wA4
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+88


==================== Asm code ====================
2018-03-16 15:59:24.167763625 UTC

.section .text
.align 8
_c4wAa:
_c4wAa:
	leaq block_c4wAf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4wAf
_c4wAk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wAa, .-_c4wAa


==================== Asm code ====================
2018-03-16 15:59:24.168360755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wAa_info:
	.quad	_c4wAa
	.quad	66
	.quad	4294967326
	.quad	S4wm5_srt+88


==================== Asm code ====================
2018-03-16 15:59:24.169011444 UTC

.section .text
.align 8
_c4wAf:
_c4wAf:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo3_entry
	.size _c4wAf, .-_c4wAf


==================== Asm code ====================
2018-03-16 15:59:24.169604881 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wAf_info:
	.quad	_c4wAf
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+88


==================== Asm code ====================
2018-03-16 15:59:24.17541365 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo3_closure
.type GHC.Int.$w$cenumFromTo3_closure, @object
GHC.Int.$w$cenumFromTo3_closure:
	.quad	GHC.Int.$w$cenumFromTo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.176350707 UTC

.section .text
.align 8
sat_s4vyc_entry:
_c4wB7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wB8
_c4wB9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4wB6
_c4wB5:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4vy5_entry
_c4wB8:
	jmp *-16(%r13)
_c4wB6:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4vyc_entry, .-sat_s4vyc_entry


==================== Asm code ====================
2018-03-16 15:59:24.177026105 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vyc_info:
	.quad	sat_s4vyc_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.178141291 UTC

.section .text
.align 8
sat_s4vy9_entry:
_c4wBl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wBm
_c4wBn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wBp
_c4wBo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wBv
_c4wBk:
	cmpq $127,%rax
	jg _c4wBv
_c4wBz:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wBv:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wBp:
	movq $16,904(%r13)
_c4wBm:
	jmp *-16(%r13)
	.size sat_s4vy9_entry, .-sat_s4vy9_entry


==================== Asm code ====================
2018-03-16 15:59:24.178910565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vy9_info:
	.quad	sat_s4vy9_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.179758936 UTC

.section .text
.align 8
go_s4vy5_entry:
_c4wBB:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wBF
_c4wBE:
	movq 7(%rbx),%rax
	leaq sat_s4vyc_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vy9_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wBF:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4vy5_entry, .-go_s4vy5_entry


==================== Asm code ====================
2018-03-16 15:59:24.18042224 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4vy5_info:
	.quad	go_s4vy5_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.181204355 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo3_entry
.type GHC.Int.$w$cenumFromTo3_entry, @object
GHC.Int.$w$cenumFromTo3_entry:
_c4wBJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wBN
_c4wBM:
	cmpq %rsi,%r14
	jle _c4wBH
_c4wBI:
	addq $-16,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wBN:
	movq $16,904(%r13)
	leaq GHC.Int.$w$cenumFromTo3_closure(%rip),%rbx
	jmp *-8(%r13)
_c4wBH:
	leaq go_s4vy5_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4vy5_entry
	.size GHC.Int.$w$cenumFromTo3_entry, .-GHC.Int.$w$cenumFromTo3_entry


==================== Asm code ====================
2018-03-16 15:59:24.182004648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo3_info
.type GHC.Int.$w$cenumFromTo3_info, @object
GHC.Int.$w$cenumFromTo3_info:
	.quad	GHC.Int.$w$cenumFromTo3_entry
	.quad	0
	.quad	141733920782
	.quad	8589934604
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.185796826 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromTo_closure
.type GHC.Int.$fEnumInt8_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt8_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.187161538 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromTo_entry
.type GHC.Int.$fEnumInt8_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt8_$cenumFromTo_entry:
_c4wCp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wCt
_c4wCu:
	leaq block_c4wCm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wCm
_c4wCn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wCt:
	leaq GHC.Int.$fEnumInt8_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFromTo_entry, .-GHC.Int.$fEnumInt8_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.187826752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromTo_info
.type GHC.Int.$fEnumInt8_$cenumFromTo_info, @object
GHC.Int.$fEnumInt8_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+104


==================== Asm code ====================
2018-03-16 15:59:24.188522801 UTC

.section .text
.align 8
_c4wCm:
_c4wCm:
	leaq block_c4wCs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wCs
_c4wCw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wCm, .-_c4wCm


==================== Asm code ====================
2018-03-16 15:59:24.189093856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wCm_info:
	.quad	_c4wCm
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+104


==================== Asm code ====================
2018-03-16 15:59:24.190125299 UTC

.section .text
.align 8
_c4wCs:
_c4wCs:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo3_entry
	.size _c4wCs, .-_c4wCs


==================== Asm code ====================
2018-03-16 15:59:24.190716328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wCs_info:
	.quad	_c4wCs
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+104


==================== Asm code ====================
2018-03-16 15:59:24.196035058 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo3_closure
.type GHC.Int.$wgo3_closure, @object
GHC.Int.$wgo3_closure:
	.quad	GHC.Int.$wgo3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.196952144 UTC

.section .text
.align 8
sat_s4vys_entry:
_c4wD4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wD5
_c4wDg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $127,%rax
	jne _c4wD2
_c4wD3:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wD5:
	jmp *-16(%r13)
_c4wD2:
	leaq block_c4wDa_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo3_entry
	.size sat_s4vys_entry, .-sat_s4vys_entry


==================== Asm code ====================
2018-03-16 15:59:24.197663154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vys_info:
	.quad	sat_s4vys_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+120


==================== Asm code ====================
2018-03-16 15:59:24.198373791 UTC

.section .text
.align 8
_c4wDa:
_c4wDa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wDf
_c4wDe:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wDf:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wDa, .-_c4wDa


==================== Asm code ====================
2018-03-16 15:59:24.199045245 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wDa_info:
	.quad	_c4wDa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.199938094 UTC

.section .text
.align 8
sat_s4vym_entry:
_c4wDq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wDr
_c4wDs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wDu
_c4wDt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-128,%rax
	jl _c4wDA
_c4wDp:
	cmpq $127,%rax
	jg _c4wDA
_c4wDE:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wDA:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl2_entry
_c4wDu:
	movq $16,904(%r13)
_c4wDr:
	jmp *-16(%r13)
	.size sat_s4vym_entry, .-sat_s4vym_entry


==================== Asm code ====================
2018-03-16 15:59:24.200648673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vym_info:
	.quad	sat_s4vym_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.201872361 UTC

.section .text
.align 8
.globl GHC.Int.$wgo3_entry
.type GHC.Int.$wgo3_entry, @object
GHC.Int.$wgo3_entry:
_c4wDF:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4wDJ
_c4wDI:
	leaq sat_s4vys_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s4vym_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wDJ:
	movq $48,904(%r13)
	leaq GHC.Int.$wgo3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$wgo3_entry, .-GHC.Int.$wgo3_entry


==================== Asm code ====================
2018-03-16 15:59:24.202631011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo3_info
.type GHC.Int.$wgo3_info, @object
GHC.Int.$wgo3_info:
	.quad	GHC.Int.$wgo3_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	S4wm5_srt+64


==================== Asm code ====================
2018-03-16 15:59:24.205822547 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_go_closure
.type GHC.Int.$fEnumInt8_go_closure, @object
GHC.Int.$fEnumInt8_go_closure:
	.quad	GHC.Int.$fEnumInt8_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.206678196 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_go_entry
.type GHC.Int.$fEnumInt8_go_entry, @object
GHC.Int.$fEnumInt8_go_entry:
_c4wEi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wEj
_c4wEk:
	leaq block_c4wEf_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo3_entry
_c4wEj:
	leaq GHC.Int.$fEnumInt8_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_go_entry, .-GHC.Int.$fEnumInt8_go_entry


==================== Asm code ====================
2018-03-16 15:59:24.207372147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_go_info
.type GHC.Int.$fEnumInt8_go_info, @object
GHC.Int.$fEnumInt8_go_info:
	.quad	GHC.Int.$fEnumInt8_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4wm5_srt+120


==================== Asm code ====================
2018-03-16 15:59:24.208640501 UTC

.section .text
.align 8
_c4wEf:
_c4wEf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wEn
_c4wEm:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wEn:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wEf, .-_c4wEf


==================== Asm code ====================
2018-03-16 15:59:24.209380764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wEf_info:
	.quad	_c4wEf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.212482463 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFrom_closure
.type GHC.Int.$fEnumInt8_$cenumFrom_closure, @object
GHC.Int.$fEnumInt8_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.213359188 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFrom_entry
.type GHC.Int.$fEnumInt8_$cenumFrom_entry, @object
GHC.Int.$fEnumInt8_$cenumFrom_entry:
_c4wEG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wEH
_c4wEI:
	leaq block_c4wED_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wED
_c4wEE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wEH:
	leaq GHC.Int.$fEnumInt8_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt8_$cenumFrom_entry, .-GHC.Int.$fEnumInt8_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:24.214049033 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFrom_info
.type GHC.Int.$fEnumInt8_$cenumFrom_info, @object
GHC.Int.$fEnumInt8_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+128


==================== Asm code ====================
2018-03-16 15:59:24.214775541 UTC

.section .text
.align 8
_c4wED:
_c4wED:
	movq 7(%rbx),%rax
	cmpq $127,%rax
	jle _c4wEP
_c4wEQ:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wEP:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt8_go_entry
	.size _c4wED, .-_c4wED


==================== Asm code ====================
2018-03-16 15:59:24.215426483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wED_info:
	.quad	_c4wED
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+128


==================== Asm code ====================
2018-03-16 15:59:24.218166723 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_closure
.type GHC.Int.$fEnumInt8_closure, @object
GHC.Int.$fEnumInt8_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt8_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt8_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt8_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.218760463 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThen_closure
.type GHC.Int.$fEnumInt8_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt8_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.219480222 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt8_$cenumFromThen_entry
.type GHC.Int.$fEnumInt8_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt8_$cenumFromThen_entry:
_c4wF8:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Int.$fBoundedInt8_closure+1(%rip),%rsi
	leaq GHC.Int.$fEnumInt8_closure+1(%rip),%r14
	jmp *GHC.Enum.boundedEnumFromThen_entry@gotpcrel(%rip)
	.size GHC.Int.$fEnumInt8_$cenumFromThen_entry, .-GHC.Int.$fEnumInt8_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:24.22013414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt8_$cenumFromThen_info
.type GHC.Int.$fEnumInt8_$cenumFromThen_info, @object
GHC.Int.$fEnumInt8_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt8_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4wm5_srt+144


==================== Asm code ====================
2018-03-16 15:59:24.222022565 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt2_bytes
.type GHC.Int.$tcInt2_bytes, @object
GHC.Int.$tcInt2_bytes:
	.asciz "Int16"


==================== Asm code ====================
2018-03-16 15:59:24.225141472 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt1_closure
.type GHC.Int.$fEnumInt1_closure, @object
GHC.Int.$fEnumInt1_closure:
	.quad	GHC.Int.$fEnumInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.226180961 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt1_entry
.type GHC.Int.$fEnumInt1_entry, @object
GHC.Int.$fEnumInt1_entry:
_c4wFp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wFq
_c4wFr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wFm
_c4wFl:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wFn_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt2_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wFq:
	jmp *-16(%r13)
_c4wFm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt1_entry, .-GHC.Int.$fEnumInt1_entry


==================== Asm code ====================
2018-03-16 15:59:24.227027718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt1_info
.type GHC.Int.$fEnumInt1_info, @object
GHC.Int.$fEnumInt1_info:
	.quad	GHC.Int.$fEnumInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt


==================== Asm code ====================
2018-03-16 15:59:24.22768304 UTC

.section .text
.align 8
_c4wFn:
_c4wFn:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.predError_entry@gotpcrel(%rip)
	.size _c4wFn, .-_c4wFn


==================== Asm code ====================
2018-03-16 15:59:24.228242333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wFn_info:
	.quad	_c4wFn
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt


==================== Asm code ====================
2018-03-16 15:59:24.232048357 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt2_closure
.type GHC.Int.$fEnumInt2_closure, @object
GHC.Int.$fEnumInt2_closure:
	.quad	GHC.Int.$fEnumInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.233004377 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt2_entry
.type GHC.Int.$fEnumInt2_entry, @object
GHC.Int.$fEnumInt2_entry:
_c4wFP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wFQ
_c4wFR:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wFM
_c4wFL:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wFN_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt2_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wFQ:
	jmp *-16(%r13)
_c4wFM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt2_entry, .-GHC.Int.$fEnumInt2_entry


==================== Asm code ====================
2018-03-16 15:59:24.233799487 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt2_info
.type GHC.Int.$fEnumInt2_info, @object
GHC.Int.$fEnumInt2_info:
	.quad	GHC.Int.$fEnumInt2_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+8


==================== Asm code ====================
2018-03-16 15:59:24.234473759 UTC

.section .text
.align 8
_c4wFN:
_c4wFN:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.succError_entry@gotpcrel(%rip)
	.size _c4wFN, .-_c4wFN


==================== Asm code ====================
2018-03-16 15:59:24.235077948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wFN_info:
	.quad	_c4wFN
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+8


==================== Asm code ====================
2018-03-16 15:59:24.238623782 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt16_closure
.type GHC.Int.neInt16_closure, @object
GHC.Int.neInt16_closure:
	.quad	GHC.Int.neInt16_info


==================== Asm code ====================
2018-03-16 15:59:24.239471637 UTC

.section .text
.align 8
.globl GHC.Int.neInt16_entry
.type GHC.Int.neInt16_entry, @object
GHC.Int.neInt16_entry:
_c4wGe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wGi
_c4wGj:
	leaq block_c4wGb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wGb
_c4wGc:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wGi:
	leaq GHC.Int.neInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.neInt16_entry, .-GHC.Int.neInt16_entry


==================== Asm code ====================
2018-03-16 15:59:24.240182691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt16_info
.type GHC.Int.neInt16_info, @object
GHC.Int.neInt16_info:
	.quad	GHC.Int.neInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.240921724 UTC

.section .text
.align 8
_c4wGb:
_c4wGb:
	leaq block_c4wGh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wGh
_c4wGl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wGb, .-_c4wGb


==================== Asm code ====================
2018-03-16 15:59:24.241684084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wGb_info:
	.quad	_c4wGb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.242437716 UTC

.section .text
.align 8
_c4wGh:
_c4wGh:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4wGh, .-_c4wGh


==================== Asm code ====================
2018-03-16 15:59:24.243046118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wGh_info:
	.quad	_c4wGh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.246434037 UTC

.section .data
.align 8
.align 1
lvl2_r4kPt_closure:
	.quad	lvl2_r4kPt_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.247405269 UTC

.section .text
.align 8
lvl2_r4kPt_entry:
_c4wGT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wGU
_c4wGV:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wGS
_c4wGR:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$tcInt2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wGU:
	jmp *-16(%r13)
_c4wGS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r4kPt_entry, .-lvl2_r4kPt_entry


==================== Asm code ====================
2018-03-16 15:59:24.248132196 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r4kPt_info:
	.quad	lvl2_r4kPt_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:24.250604028 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_$cminBound_closure
.type GHC.Int.$fBoundedInt16_$cminBound_closure, @object
GHC.Int.$fBoundedInt16_$cminBound_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	-32768


==================== Asm code ====================
2018-03-16 15:59:24.254240106 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cpred_closure
.type GHC.Int.$fEnumInt16_$cpred_closure, @object
GHC.Int.$fEnumInt16_$cpred_closure:
	.quad	GHC.Int.$fEnumInt16_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.255087976 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cpred_entry
.type GHC.Int.$fEnumInt16_$cpred_entry, @object
GHC.Int.$fEnumInt16_$cpred_entry:
_c4wHc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wHd
_c4wHe:
	leaq block_c4wH9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wH9
_c4wHa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wHd:
	leaq GHC.Int.$fEnumInt16_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cpred_entry, .-GHC.Int.$fEnumInt16_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:24.255733052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cpred_info
.type GHC.Int.$fEnumInt16_$cpred_info, @object
GHC.Int.$fEnumInt16_$cpred_info:
	.quad	GHC.Int.$fEnumInt16_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+152


==================== Asm code ====================
2018-03-16 15:59:24.256530561 UTC

.section .text
.align 8
_c4wH9:
_c4wH9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wHj
_c4wHi:
	movq 7(%rbx),%rax
	cmpq $-32768,%rax
	jne _c4wHu
_c4wHv:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt1_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4wHu:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wHj:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wH9, .-_c4wH9


==================== Asm code ====================
2018-03-16 15:59:24.257234811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wH9_info:
	.quad	_c4wH9
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+160


==================== Asm code ====================
2018-03-16 15:59:24.259111033 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_$cmaxBound_closure
.type GHC.Int.$fBoundedInt16_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt16_$cmaxBound_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	32767


==================== Asm code ====================
2018-03-16 15:59:24.26084175 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt16_closure
.type GHC.Int.$fBoundedInt16_closure, @object
GHC.Int.$fBoundedInt16_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt16_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt16_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.26457962 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$csucc_closure
.type GHC.Int.$fEnumInt16_$csucc_closure, @object
GHC.Int.$fEnumInt16_$csucc_closure:
	.quad	GHC.Int.$fEnumInt16_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.265624001 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$csucc_entry
.type GHC.Int.$fEnumInt16_$csucc_entry, @object
GHC.Int.$fEnumInt16_$csucc_entry:
_c4wHV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wHW
_c4wHX:
	leaq block_c4wHS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wHS
_c4wHT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wHW:
	leaq GHC.Int.$fEnumInt16_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$csucc_entry, .-GHC.Int.$fEnumInt16_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:24.266307893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$csucc_info
.type GHC.Int.$fEnumInt16_$csucc_info, @object
GHC.Int.$fEnumInt16_$csucc_info:
	.quad	GHC.Int.$fEnumInt16_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+168


==================== Asm code ====================
2018-03-16 15:59:24.267146022 UTC

.section .text
.align 8
_c4wHS:
_c4wHS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wI2
_c4wI1:
	movq 7(%rbx),%rax
	cmpq $32767,%rax
	jne _c4wId
_c4wIe:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt2_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4wId:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wI2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4wHS, .-_c4wHS


==================== Asm code ====================
2018-03-16 15:59:24.267861629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wHS_info:
	.quad	_c4wHS
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+176


==================== Asm code ====================
2018-03-16 15:59:24.273360841 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowsPrec_closure
.type GHC.Int.$fShowInt16_$cshowsPrec_closure, @object
GHC.Int.$fShowInt16_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:24.274272493 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshowsPrec_entry
.type GHC.Int.$fShowInt16_$cshowsPrec_entry, @object
GHC.Int.$fShowInt16_$cshowsPrec_entry:
_c4wIC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wIN
_c4wIO:
	leaq block_c4wIz_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4wIz
_c4wIA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wIN:
	leaq GHC.Int.$fShowInt16_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt16_$cshowsPrec_entry, .-GHC.Int.$fShowInt16_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:24.274965368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowsPrec_info
.type GHC.Int.$fShowInt16_$cshowsPrec_info, @object
GHC.Int.$fShowInt16_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:24.275648218 UTC

.section .text
.align 8
_c4wIz:
_c4wIz:
	leaq block_c4wIF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wIF
_c4wIG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wIz, .-_c4wIz


==================== Asm code ====================
2018-03-16 15:59:24.276277831 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wIz_info:
	.quad	_c4wIz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.276933661 UTC

.section .text
.align 8
_c4wIF:
_c4wIF:
	movq 16(%rbp),%rax
	leaq block_c4wIK_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wIF, .-_c4wIF


==================== Asm code ====================
2018-03-16 15:59:24.277602811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wIF_info:
	.quad	_c4wIF
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.278300957 UTC

.section .text
.align 8
_c4wIK:
_c4wIK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wIT
_c4wIS:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wIT:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wIK, .-_c4wIK


==================== Asm code ====================
2018-03-16 15:59:24.278984866 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wIK_info:
	.quad	_c4wIK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.282956691 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshow_closure
.type GHC.Int.$fShowInt16_$cshow_closure, @object
GHC.Int.$fShowInt16_$cshow_closure:
	.quad	GHC.Int.$fShowInt16_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:24.283829264 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshow_entry
.type GHC.Int.$fShowInt16_$cshow_entry, @object
GHC.Int.$fShowInt16_$cshow_entry:
_c4wJo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wJu
_c4wJv:
	leaq block_c4wJl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wJl
_c4wJm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wJu:
	leaq GHC.Int.$fShowInt16_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt16_$cshow_entry, .-GHC.Int.$fShowInt16_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:24.284480208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshow_info
.type GHC.Int.$fShowInt16_$cshow_info, @object
GHC.Int.$fShowInt16_$cshow_info:
	.quad	GHC.Int.$fShowInt16_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.285174014 UTC

.section .text
.align 8
_c4wJl:
_c4wJl:
	leaq block_c4wJr_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wJl, .-_c4wJl


==================== Asm code ====================
2018-03-16 15:59:24.285849126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wJl_info:
	.quad	_c4wJl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.286643888 UTC

.section .text
.align 8
_c4wJr:
_c4wJr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wJz
_c4wJy:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wJz:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wJr, .-_c4wJr


==================== Asm code ====================
2018-03-16 15:59:24.28730621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wJr_info:
	.quad	_c4wJr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.291171628 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt1_closure
.type GHC.Int.$fShowInt1_closure, @object
GHC.Int.$fShowInt1_closure:
	.quad	GHC.Int.$fShowInt1_info


==================== Asm code ====================
2018-03-16 15:59:24.292121275 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt1_entry
.type GHC.Int.$fShowInt1_entry, @object
GHC.Int.$fShowInt1_entry:
_c4wJZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wK5
_c4wK6:
	leaq block_c4wJW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wJW
_c4wJX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wK5:
	leaq GHC.Int.$fShowInt1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt1_entry, .-GHC.Int.$fShowInt1_entry


==================== Asm code ====================
2018-03-16 15:59:24.293438438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt1_info
.type GHC.Int.$fShowInt1_info, @object
GHC.Int.$fShowInt1_info:
	.quad	GHC.Int.$fShowInt1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.294196792 UTC

.section .text
.align 8
_c4wJW:
_c4wJW:
	movq 8(%rbp),%rax
	leaq block_c4wK2_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4wJW, .-_c4wJW


==================== Asm code ====================
2018-03-16 15:59:24.294805763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wJW_info:
	.quad	_c4wJW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.295544871 UTC

.section .text
.align 8
_c4wK2:
_c4wK2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wKa
_c4wK9:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wKa:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wK2, .-_c4wK2


==================== Asm code ====================
2018-03-16 15:59:24.296194808 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wK2_info:
	.quad	_c4wK2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.298606547 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowList_closure
.type GHC.Int.$fShowInt16_$cshowList_closure, @object
GHC.Int.$fShowInt16_$cshowList_closure:
	.quad	GHC.Int.$fShowInt16_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:24.299338422 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt16_$cshowList_entry
.type GHC.Int.$fShowInt16_$cshowList_entry, @object
GHC.Int.$fShowInt16_$cshowList_entry:
_c4wKw:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Int.$fShowInt1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Int.$fShowInt16_$cshowList_entry, .-GHC.Int.$fShowInt16_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:24.299980616 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt16_$cshowList_info
.type GHC.Int.$fShowInt16_$cshowList_info, @object
GHC.Int.$fShowInt16_$cshowList_info:
	.quad	GHC.Int.$fShowInt16_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.302039112 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt16_closure
.type GHC.Int.$fShowInt16_closure, @object
GHC.Int.$fShowInt16_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt16_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt16_$cshow_closure+1
	.quad	GHC.Int.$fShowInt16_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.304543636 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl_closure
.type GHC.Int.$wlvl_closure, @object
GHC.Int.$wlvl_closure:
	.quad	GHC.Int.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.305316269 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl_entry
.type GHC.Int.$wlvl_entry, @object
GHC.Int.$wlvl_entry:
_c4wKI:
	leaq GHC.Int.$fBoundedInt16_$cmaxBound_closure+1(%rip),%r9
	leaq GHC.Int.$fBoundedInt16_$cminBound_closure+1(%rip),%r8
	movq %r14,%rdi
	leaq lvl2_r4kPt_closure(%rip),%rsi
	leaq GHC.Int.$fShowInt16_closure+1(%rip),%r14
	jmp *GHC.Enum.$wtoEnumError_entry@gotpcrel(%rip)
	.size GHC.Int.$wlvl_entry, .-GHC.Int.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:59:24.30597774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl_info
.type GHC.Int.$wlvl_info, @object
GHC.Int.$wlvl_info:
	.quad	GHC.Int.$wlvl_entry
	.quad	0
	.quad	562954248388622
	.quad	4294967300
	.quad	S4wm5_srt+48


==================== Asm code ====================
2018-03-16 15:59:24.30864771 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum_closure
.type GHC.Int.$w$ctoEnum_closure, @object
GHC.Int.$w$ctoEnum_closure:
	.quad	GHC.Int.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.309564264 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum_entry
.type GHC.Int.$w$ctoEnum_entry, @object
GHC.Int.$w$ctoEnum_entry:
_c4wKY:
	movq %r14,%rax
	cmpq $-32768,%r14
	jl _c4wL6
_c4wKX:
	cmpq $32767,%rax
	jg _c4wL6
_c4wL7:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wL6:
	movq %rax,%r14
	jmp GHC.Int.$wlvl_entry
	.size GHC.Int.$w$ctoEnum_entry, .-GHC.Int.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:24.310220783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum_info
.type GHC.Int.$w$ctoEnum_info, @object
GHC.Int.$w$ctoEnum_info:
	.quad	GHC.Int.$w$ctoEnum_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.315887347 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$ctoEnum_closure
.type GHC.Int.$fEnumInt16_$ctoEnum_closure, @object
GHC.Int.$fEnumInt16_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.317147905 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$ctoEnum_entry
.type GHC.Int.$fEnumInt16_$ctoEnum_entry, @object
GHC.Int.$fEnumInt16_$ctoEnum_entry:
_c4wLk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wLs
_c4wLt:
	leaq block_c4wLh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wLh
_c4wLi:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wLs:
	leaq GHC.Int.$fEnumInt16_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$ctoEnum_entry, .-GHC.Int.$fEnumInt16_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:24.318515244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$ctoEnum_info
.type GHC.Int.$fEnumInt16_$ctoEnum_info, @object
GHC.Int.$fEnumInt16_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+200


==================== Asm code ====================
2018-03-16 15:59:24.319524451 UTC

.section .text
.align 8
_c4wLh:
_c4wLh:
	leaq block_c4wLn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum_entry
	.size _c4wLh, .-_c4wLh


==================== Asm code ====================
2018-03-16 15:59:24.320256344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wLh_info:
	.quad	_c4wLh
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+208


==================== Asm code ====================
2018-03-16 15:59:24.320952836 UTC

.section .text
.align 8
_c4wLn:
_c4wLn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wLx
_c4wLw:
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wLx:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4wLn, .-_c4wLn


==================== Asm code ====================
2018-03-16 15:59:24.321762085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wLn_info:
	.quad	_c4wLn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.352455155 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo_closure
.type GHC.Int.$w$cenumFromThenTo_closure, @object
GHC.Int.$w$cenumFromThenTo_closure:
	.quad	GHC.Int.$w$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.353964259 UTC

.section .text
.align 8
sat_s4vzM_entry:
_c4wMn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wMo
_c4wMp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vzF_entry
_c4wMo:
	jmp *-16(%r13)
	.size sat_s4vzM_entry, .-sat_s4vzM_entry


==================== Asm code ====================
2018-03-16 15:59:24.354937897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzM_info:
	.quad	sat_s4vzM_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.356013566 UTC

.section .text
.align 8
sat_s4vzK_entry:
_c4wMz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wMA
_c4wMB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wMD
_c4wMC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wMJ
_c4wMy:
	cmpq $32767,%rax
	jg _c4wMJ
_c4wMN:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wMJ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wMD:
	movq $16,904(%r13)
_c4wMA:
	jmp *-16(%r13)
	.size sat_s4vzK_entry, .-sat_s4vzK_entry


==================== Asm code ====================
2018-03-16 15:59:24.357053946 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzK_info:
	.quad	sat_s4vzK_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.35818368 UTC

.section .text
.align 8
sat_s4vzP_entry:
_c4wMY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wMZ
_c4wN0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wN2
_c4wN1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wN8
_c4wMX:
	cmpq $32767,%rax
	jg _c4wN8
_c4wNc:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wN8:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wN2:
	movq $16,904(%r13)
_c4wMZ:
	jmp *-16(%r13)
	.size sat_s4vzP_entry, .-sat_s4vzP_entry


==================== Asm code ====================
2018-03-16 15:59:24.359153308 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzP_info:
	.quad	sat_s4vzP_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.360380608 UTC

.section .text
.align 8
go_dn_s4vzF_entry:
_c4wNg:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wNk
_c4wNj:
	cmpq 15(%rbx),%r14
	jge _c4wNe
_c4wNf:
	leaq sat_s4vzP_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wNk:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4wNe:
	movq 7(%rbx),%rax
	leaq sat_s4vzM_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vzK_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4vzF_entry, .-go_dn_s4vzF_entry


==================== Asm code ====================
2018-03-16 15:59:24.361514942 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4vzF_info:
	.quad	go_dn_s4vzF_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.362634936 UTC

.section .text
.align 8
sat_s4vzQ_entry:
_c4wNn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wNo
_c4wNp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wNr
_c4wNq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_dn_s4vzF_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vzF_entry
_c4wNr:
	movq $24,904(%r13)
_c4wNo:
	jmp *-16(%r13)
	.size sat_s4vzQ_entry, .-sat_s4vzQ_entry


==================== Asm code ====================
2018-03-16 15:59:24.363607842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzQ_info:
	.quad	sat_s4vzQ_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.364665303 UTC

.section .text
.align 8
sat_s4vzC_entry:
_c4wNB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wNC
_c4wND:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wNF
_c4wNE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wNL
_c4wNA:
	cmpq $32767,%rax
	jg _c4wNL
_c4wNP:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wNL:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wNF:
	movq $16,904(%r13)
_c4wNC:
	jmp *-16(%r13)
	.size sat_s4vzC_entry, .-sat_s4vzC_entry


==================== Asm code ====================
2018-03-16 15:59:24.365806732 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzC_info:
	.quad	sat_s4vzC_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.366960201 UTC

.section .text
.align 8
sat_s4vzU_entry:
_c4wO3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wO4
_c4wO5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wO7
_c4wO6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wOd
_c4wO2:
	cmpq $32767,%rax
	jg _c4wOd
_c4wOh:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wOd:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wO7:
	movq $16,904(%r13)
_c4wO4:
	jmp *-16(%r13)
	.size sat_s4vzU_entry, .-sat_s4vzU_entry


==================== Asm code ====================
2018-03-16 15:59:24.368000334 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzU_info:
	.quad	sat_s4vzU_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.368785854 UTC

.section .text
.align 8
sat_s4vA8_entry:
_c4wOK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wOL
_c4wOM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4vA1_entry
_c4wOL:
	jmp *-16(%r13)
	.size sat_s4vA8_entry, .-sat_s4vA8_entry


==================== Asm code ====================
2018-03-16 15:59:24.369546972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vA8_info:
	.quad	sat_s4vA8_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.370397833 UTC

.section .text
.align 8
sat_s4vA6_entry:
_c4wOW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wOX
_c4wOY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wP0
_c4wOZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wP6
_c4wOV:
	cmpq $32767,%rax
	jg _c4wP6
_c4wPa:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wP6:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wP0:
	movq $16,904(%r13)
_c4wOX:
	jmp *-16(%r13)
	.size sat_s4vA6_entry, .-sat_s4vA6_entry


==================== Asm code ====================
2018-03-16 15:59:24.371230595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vA6_info:
	.quad	sat_s4vA6_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.37212913 UTC

.section .text
.align 8
sat_s4vAb_entry:
_c4wPl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wPm
_c4wPn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wPp
_c4wPo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wPv
_c4wPk:
	cmpq $32767,%rax
	jg _c4wPv
_c4wPz:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wPv:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wPp:
	movq $16,904(%r13)
_c4wPm:
	jmp *-16(%r13)
	.size sat_s4vAb_entry, .-sat_s4vAb_entry


==================== Asm code ====================
2018-03-16 15:59:24.372910969 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAb_info:
	.quad	sat_s4vAb_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.374580646 UTC

.section .text
.align 8
go_up_s4vA1_entry:
_c4wPD:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wPH
_c4wPG:
	cmpq 15(%rbx),%r14
	jle _c4wPB
_c4wPC:
	leaq sat_s4vAb_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wPH:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4wPB:
	movq 7(%rbx),%rax
	leaq sat_s4vA8_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vA6_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4vA1_entry, .-go_up_s4vA1_entry


==================== Asm code ====================
2018-03-16 15:59:24.375383459 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4vA1_info:
	.quad	go_up_s4vA1_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.376227426 UTC

.section .text
.align 8
sat_s4vAc_entry:
_c4wPK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wPL
_c4wPM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wPO
_c4wPN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_up_s4vA1_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4vA1_entry
_c4wPO:
	movq $24,904(%r13)
_c4wPL:
	jmp *-16(%r13)
	.size sat_s4vAc_entry, .-sat_s4vAc_entry


==================== Asm code ====================
2018-03-16 15:59:24.376946144 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAc_info:
	.quad	sat_s4vAc_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.377891694 UTC

.section .text
.align 8
sat_s4vzY_entry:
_c4wPY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wPZ
_c4wQ0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wQ2
_c4wQ1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wQ8
_c4wPX:
	cmpq $32767,%rax
	jg _c4wQ8
_c4wQc:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQ8:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wQ2:
	movq $16,904(%r13)
_c4wPZ:
	jmp *-16(%r13)
	.size sat_s4vzY_entry, .-sat_s4vzY_entry


==================== Asm code ====================
2018-03-16 15:59:24.37865325 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vzY_info:
	.quad	sat_s4vzY_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.379473799 UTC

.section .text
.align 8
sat_s4vAg_entry:
_c4wQq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wQr
_c4wQs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wQu
_c4wQt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wQA
_c4wQp:
	cmpq $32767,%rax
	jg _c4wQA
_c4wQE:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQA:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wQu:
	movq $16,904(%r13)
_c4wQr:
	jmp *-16(%r13)
	.size sat_s4vAg_entry, .-sat_s4vAg_entry


==================== Asm code ====================
2018-03-16 15:59:24.380205567 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAg_info:
	.quad	sat_s4vAg_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.381442795 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo_entry
.type GHC.Int.$w$cenumFromThenTo_entry, @object
GHC.Int.$w$cenumFromThenTo_entry:
_c4wQI:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wQM
_c4wQL:
	cmpq %r14,%rsi
	jl _c4wQG
_c4wQH:
	cmpq %rsi,%rdi
	jge _c4wQX
_c4wR2:
	cmpq %r14,%rdi
	jl _c4wR1
_c4wR0:
	leaq sat_s4vAg_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wR1:
	addq $-88,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQX:
	leaq sat_s4vAc_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vzY_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQG:
	cmpq %rsi,%rdi
	jle _c4wQP
_c4wQU:
	cmpq %r14,%rdi
	jg _c4wR1
_c4wQS:
	leaq sat_s4vzU_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQP:
	leaq sat_s4vzQ_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vzC_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wQM:
	movq $88,904(%r13)
	leaq GHC.Int.$w$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo_entry, .-GHC.Int.$w$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.382590607 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo_info
.type GHC.Int.$w$cenumFromThenTo_info, @object
GHC.Int.$w$cenumFromThenTo_info:
	.quad	GHC.Int.$w$cenumFromThenTo_entry
	.quad	0
	.quad	38654705678
	.quad	12884901904
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.386832312 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.38770641 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_entry:
_c4wTw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wTF
_c4wTG:
	leaq block_c4wTt_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4wTt
_c4wTu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wTF:
	leaq GHC.Int.$fEnumInt16_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt16_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.388441662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt16_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt16_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4wm5_srt+216


==================== Asm code ====================
2018-03-16 15:59:24.389182432 UTC

.section .text
.align 8
_c4wTt:
_c4wTt:
	leaq block_c4wTz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wTz
_c4wTA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wTt, .-_c4wTt


==================== Asm code ====================
2018-03-16 15:59:24.390124531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wTt_info:
	.quad	_c4wTt
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+216


==================== Asm code ====================
2018-03-16 15:59:24.390802974 UTC

.section .text
.align 8
_c4wTz:
_c4wTz:
	leaq block_c4wTE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4wTE
_c4wTJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wTz, .-_c4wTz


==================== Asm code ====================
2018-03-16 15:59:24.391444082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wTz_info:
	.quad	_c4wTz
	.quad	66
	.quad	4294967326
	.quad	S4wm5_srt+216


==================== Asm code ====================
2018-03-16 15:59:24.392144084 UTC

.section .text
.align 8
_c4wTE:
_c4wTE:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo_entry
	.size _c4wTE, .-_c4wTE


==================== Asm code ====================
2018-03-16 15:59:24.39281519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wTE_info:
	.quad	_c4wTE
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+216


==================== Asm code ====================
2018-03-16 15:59:24.399231714 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo_closure
.type GHC.Int.$w$cenumFromTo_closure, @object
GHC.Int.$w$cenumFromTo_closure:
	.quad	GHC.Int.$w$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.400151315 UTC

.section .text
.align 8
sat_s4vAA_entry:
_c4wUw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wUx
_c4wUy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4wUv
_c4wUu:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4vAt_entry
_c4wUx:
	jmp *-16(%r13)
_c4wUv:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4vAA_entry, .-sat_s4vAA_entry


==================== Asm code ====================
2018-03-16 15:59:24.400825592 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAA_info:
	.quad	sat_s4vAA_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.40190236 UTC

.section .text
.align 8
sat_s4vAx_entry:
_c4wUK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wUL
_c4wUM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wUO
_c4wUN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wUU
_c4wUJ:
	cmpq $32767,%rax
	jg _c4wUU
_c4wUY:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wUU:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wUO:
	movq $16,904(%r13)
_c4wUL:
	jmp *-16(%r13)
	.size sat_s4vAx_entry, .-sat_s4vAx_entry


==================== Asm code ====================
2018-03-16 15:59:24.40265147 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAx_info:
	.quad	sat_s4vAx_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.403508487 UTC

.section .text
.align 8
go_s4vAt_entry:
_c4wV0:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4wV4
_c4wV3:
	movq 7(%rbx),%rax
	leaq sat_s4vAA_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vAx_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wV4:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4vAt_entry, .-go_s4vAt_entry


==================== Asm code ====================
2018-03-16 15:59:24.404228198 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4vAt_info:
	.quad	go_s4vAt_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.405049955 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo_entry
.type GHC.Int.$w$cenumFromTo_entry, @object
GHC.Int.$w$cenumFromTo_entry:
_c4wV8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wVc
_c4wVb:
	cmpq %rsi,%r14
	jle _c4wV6
_c4wV7:
	addq $-16,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wVc:
	movq $16,904(%r13)
	leaq GHC.Int.$w$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
_c4wV6:
	leaq go_s4vAt_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4vAt_entry
	.size GHC.Int.$w$cenumFromTo_entry, .-GHC.Int.$w$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.405800438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo_info
.type GHC.Int.$w$cenumFromTo_info, @object
GHC.Int.$w$cenumFromTo_info:
	.quad	GHC.Int.$w$cenumFromTo_entry
	.quad	0
	.quad	141733920782
	.quad	8589934604
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.409368175 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromTo_closure
.type GHC.Int.$fEnumInt16_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt16_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.410230945 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromTo_entry
.type GHC.Int.$fEnumInt16_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt16_$cenumFromTo_entry:
_c4wVO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wVS
_c4wVT:
	leaq block_c4wVL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wVL
_c4wVM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wVS:
	leaq GHC.Int.$fEnumInt16_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFromTo_entry, .-GHC.Int.$fEnumInt16_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.410916033 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromTo_info
.type GHC.Int.$fEnumInt16_$cenumFromTo_info, @object
GHC.Int.$fEnumInt16_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+232


==================== Asm code ====================
2018-03-16 15:59:24.411677211 UTC

.section .text
.align 8
_c4wVL:
_c4wVL:
	leaq block_c4wVR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wVR
_c4wVV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wVL, .-_c4wVL


==================== Asm code ====================
2018-03-16 15:59:24.412286249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wVL_info:
	.quad	_c4wVL
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+232


==================== Asm code ====================
2018-03-16 15:59:24.412985486 UTC

.section .text
.align 8
_c4wVR:
_c4wVR:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo_entry
	.size _c4wVR, .-_c4wVR


==================== Asm code ====================
2018-03-16 15:59:24.413659882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wVR_info:
	.quad	_c4wVR
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+232


==================== Asm code ====================
2018-03-16 15:59:24.41977142 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo_closure
.type GHC.Int.$wgo_closure, @object
GHC.Int.$wgo_closure:
	.quad	GHC.Int.$wgo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.420696016 UTC

.section .text
.align 8
sat_s4vAQ_entry:
_c4wWt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wWu
_c4wWF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $32767,%rax
	jne _c4wWr
_c4wWs:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wWu:
	jmp *-16(%r13)
_c4wWr:
	leaq block_c4wWz_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo_entry
	.size sat_s4vAQ_entry, .-sat_s4vAQ_entry


==================== Asm code ====================
2018-03-16 15:59:24.421429692 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAQ_info:
	.quad	sat_s4vAQ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+248


==================== Asm code ====================
2018-03-16 15:59:24.422134956 UTC

.section .text
.align 8
_c4wWz:
_c4wWz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wWE
_c4wWD:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wWE:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wWz, .-_c4wWz


==================== Asm code ====================
2018-03-16 15:59:24.42276295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wWz_info:
	.quad	_c4wWz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.423640205 UTC

.section .text
.align 8
sat_s4vAK_entry:
_c4wWP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wWQ
_c4wWR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4wWT
_c4wWS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-32768,%rax
	jl _c4wWZ
_c4wWO:
	cmpq $32767,%rax
	jg _c4wWZ
_c4wX3:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wWZ:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl_entry
_c4wWT:
	movq $16,904(%r13)
_c4wWQ:
	jmp *-16(%r13)
	.size sat_s4vAK_entry, .-sat_s4vAK_entry


==================== Asm code ====================
2018-03-16 15:59:24.424416456 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vAK_info:
	.quad	sat_s4vAK_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.425189904 UTC

.section .text
.align 8
.globl GHC.Int.$wgo_entry
.type GHC.Int.$wgo_entry, @object
GHC.Int.$wgo_entry:
_c4wX4:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4wX8
_c4wX7:
	leaq sat_s4vAQ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s4vAK_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4wX8:
	movq $48,904(%r13)
	leaq GHC.Int.$wgo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$wgo_entry, .-GHC.Int.$wgo_entry


==================== Asm code ====================
2018-03-16 15:59:24.426028012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo_info
.type GHC.Int.$wgo_info, @object
GHC.Int.$wgo_info:
	.quad	GHC.Int.$wgo_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	S4wm5_srt+192


==================== Asm code ====================
2018-03-16 15:59:24.429208694 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_go_closure
.type GHC.Int.$fEnumInt16_go_closure, @object
GHC.Int.$fEnumInt16_go_closure:
	.quad	GHC.Int.$fEnumInt16_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.430063164 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_go_entry
.type GHC.Int.$fEnumInt16_go_entry, @object
GHC.Int.$fEnumInt16_go_entry:
_c4wXH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wXI
_c4wXJ:
	leaq block_c4wXE_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo_entry
_c4wXI:
	leaq GHC.Int.$fEnumInt16_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_go_entry, .-GHC.Int.$fEnumInt16_go_entry


==================== Asm code ====================
2018-03-16 15:59:24.43073157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_go_info
.type GHC.Int.$fEnumInt16_go_info, @object
GHC.Int.$fEnumInt16_go_info:
	.quad	GHC.Int.$fEnumInt16_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4wm5_srt+248


==================== Asm code ====================
2018-03-16 15:59:24.431502453 UTC

.section .text
.align 8
_c4wXE:
_c4wXE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4wXM
_c4wXL:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wXM:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4wXE, .-_c4wXE


==================== Asm code ====================
2018-03-16 15:59:24.432171138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wXE_info:
	.quad	_c4wXE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.435598705 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFrom_closure
.type GHC.Int.$fEnumInt16_$cenumFrom_closure, @object
GHC.Int.$fEnumInt16_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.436944662 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFrom_entry
.type GHC.Int.$fEnumInt16_$cenumFrom_entry, @object
GHC.Int.$fEnumInt16_$cenumFrom_entry:
_c4wY5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wY6
_c4wY7:
	leaq block_c4wY2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4wY2
_c4wY3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wY6:
	leaq GHC.Int.$fEnumInt16_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt16_$cenumFrom_entry, .-GHC.Int.$fEnumInt16_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:24.437841483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFrom_info
.type GHC.Int.$fEnumInt16_$cenumFrom_info, @object
GHC.Int.$fEnumInt16_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+256


==================== Asm code ====================
2018-03-16 15:59:24.438574078 UTC

.section .text
.align 8
_c4wY2:
_c4wY2:
	movq 7(%rbx),%rax
	cmpq $32767,%rax
	jle _c4wYe
_c4wYf:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4wYe:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt16_go_entry
	.size _c4wY2, .-_c4wY2


==================== Asm code ====================
2018-03-16 15:59:24.439183137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wY2_info:
	.quad	_c4wY2
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+256


==================== Asm code ====================
2018-03-16 15:59:24.441764297 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_closure
.type GHC.Int.$fEnumInt16_closure, @object
GHC.Int.$fEnumInt16_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt16_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt16_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt16_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.44237999 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThen_closure
.type GHC.Int.$fEnumInt16_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt16_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.443057906 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt16_$cenumFromThen_entry
.type GHC.Int.$fEnumInt16_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt16_$cenumFromThen_entry:
_c4wYx:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Int.$fBoundedInt16_closure+1(%rip),%rsi
	leaq GHC.Int.$fEnumInt16_closure+1(%rip),%r14
	jmp *GHC.Enum.boundedEnumFromThen_entry@gotpcrel(%rip)
	.size GHC.Int.$fEnumInt16_$cenumFromThen_entry, .-GHC.Int.$fEnumInt16_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:24.443676692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt16_$cenumFromThen_info
.type GHC.Int.$fEnumInt16_$cenumFromThen_info, @object
GHC.Int.$fEnumInt16_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt16_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4wm5_srt+272


==================== Asm code ====================
2018-03-16 15:59:24.445367109 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt4_bytes
.type GHC.Int.$tcInt4_bytes, @object
GHC.Int.$tcInt4_bytes:
	.asciz "Int32"


==================== Asm code ====================
2018-03-16 15:59:24.448348211 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt3_closure
.type GHC.Int.$fEnumInt3_closure, @object
GHC.Int.$fEnumInt3_closure:
	.quad	GHC.Int.$fEnumInt3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.449567823 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt3_entry
.type GHC.Int.$fEnumInt3_entry, @object
GHC.Int.$fEnumInt3_entry:
_c4wYO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wYP
_c4wYQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wYL
_c4wYK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wYM_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt4_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wYP:
	jmp *-16(%r13)
_c4wYL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt3_entry, .-GHC.Int.$fEnumInt3_entry


==================== Asm code ====================
2018-03-16 15:59:24.450285317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt3_info
.type GHC.Int.$fEnumInt3_info, @object
GHC.Int.$fEnumInt3_info:
	.quad	GHC.Int.$fEnumInt3_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+280


==================== Asm code ====================
2018-03-16 15:59:24.450975245 UTC

.section .text
.align 8
_c4wYM:
_c4wYM:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.predError_entry@gotpcrel(%rip)
	.size _c4wYM, .-_c4wYM


==================== Asm code ====================
2018-03-16 15:59:24.451591244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wYM_info:
	.quad	_c4wYM
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+280


==================== Asm code ====================
2018-03-16 15:59:24.454813602 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt4_closure
.type GHC.Int.$fEnumInt4_closure, @object
GHC.Int.$fEnumInt4_closure:
	.quad	GHC.Int.$fEnumInt4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.455798889 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt4_entry
.type GHC.Int.$fEnumInt4_entry, @object
GHC.Int.$fEnumInt4_entry:
_c4wZe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wZf
_c4wZg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4wZb
_c4wZa:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4wZc_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt4_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4wZf:
	jmp *-16(%r13)
_c4wZb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt4_entry, .-GHC.Int.$fEnumInt4_entry


==================== Asm code ====================
2018-03-16 15:59:24.456608352 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt4_info
.type GHC.Int.$fEnumInt4_info, @object
GHC.Int.$fEnumInt4_info:
	.quad	GHC.Int.$fEnumInt4_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+288


==================== Asm code ====================
2018-03-16 15:59:24.457806139 UTC

.section .text
.align 8
_c4wZc:
_c4wZc:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.succError_entry@gotpcrel(%rip)
	.size _c4wZc, .-_c4wZc


==================== Asm code ====================
2018-03-16 15:59:24.458400099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wZc_info:
	.quad	_c4wZc
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+288


==================== Asm code ====================
2018-03-16 15:59:24.461973106 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt32_closure
.type GHC.Int.neInt32_closure, @object
GHC.Int.neInt32_closure:
	.quad	GHC.Int.neInt32_info


==================== Asm code ====================
2018-03-16 15:59:24.462867945 UTC

.section .text
.align 8
.globl GHC.Int.neInt32_entry
.type GHC.Int.neInt32_entry, @object
GHC.Int.neInt32_entry:
_c4wZD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4wZH
_c4wZI:
	leaq block_c4wZA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4wZA
_c4wZB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4wZH:
	leaq GHC.Int.neInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.neInt32_entry, .-GHC.Int.neInt32_entry


==================== Asm code ====================
2018-03-16 15:59:24.463537269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt32_info
.type GHC.Int.neInt32_info, @object
GHC.Int.neInt32_info:
	.quad	GHC.Int.neInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.464208577 UTC

.section .text
.align 8
_c4wZA:
_c4wZA:
	leaq block_c4wZG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4wZG
_c4wZK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4wZA, .-_c4wZA


==================== Asm code ====================
2018-03-16 15:59:24.464808179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wZA_info:
	.quad	_c4wZA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.465572616 UTC

.section .text
.align 8
_c4wZG:
_c4wZG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4wZG, .-_c4wZG


==================== Asm code ====================
2018-03-16 15:59:24.466180677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4wZG_info:
	.quad	_c4wZG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.468845136 UTC

.section .data
.align 8
.align 1
lvl4_r4kPv_closure:
	.quad	lvl4_r4kPv_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.470225248 UTC

.section .text
.align 8
lvl4_r4kPv_entry:
_c4x0i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x0j
_c4x0k:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4x0h
_c4x0g:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$tcInt4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4x0j:
	jmp *-16(%r13)
_c4x0h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r4kPv_entry, .-lvl4_r4kPv_entry


==================== Asm code ====================
2018-03-16 15:59:24.470914151 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r4kPv_info:
	.quad	lvl4_r4kPv_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:59:24.472676923 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_$cminBound_closure
.type GHC.Int.$fBoundedInt32_$cminBound_closure, @object
GHC.Int.$fBoundedInt32_$cminBound_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	-2147483648


==================== Asm code ====================
2018-03-16 15:59:24.476305487 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cpred_closure
.type GHC.Int.$fEnumInt32_$cpred_closure, @object
GHC.Int.$fEnumInt32_$cpred_closure:
	.quad	GHC.Int.$fEnumInt32_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.477283363 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cpred_entry
.type GHC.Int.$fEnumInt32_$cpred_entry, @object
GHC.Int.$fEnumInt32_$cpred_entry:
_c4x0B:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x0C
_c4x0D:
	leaq block_c4x0y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4x0y
_c4x0z:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x0C:
	leaq GHC.Int.$fEnumInt32_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cpred_entry, .-GHC.Int.$fEnumInt32_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:24.47848075 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cpred_info
.type GHC.Int.$fEnumInt32_$cpred_info, @object
GHC.Int.$fEnumInt32_$cpred_info:
	.quad	GHC.Int.$fEnumInt32_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+296


==================== Asm code ====================
2018-03-16 15:59:24.479361765 UTC

.section .text
.align 8
_c4x0y:
_c4x0y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x0I
_c4x0H:
	movq 7(%rbx),%rax
	cmpq $-2147483648,%rax
	jne _c4x0T
_c4x0U:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4x0T:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x0I:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4x0y, .-_c4x0y


==================== Asm code ====================
2018-03-16 15:59:24.480084038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x0y_info:
	.quad	_c4x0y
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+304


==================== Asm code ====================
2018-03-16 15:59:24.481882042 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_$cmaxBound_closure
.type GHC.Int.$fBoundedInt32_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt32_$cmaxBound_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	2147483647


==================== Asm code ====================
2018-03-16 15:59:24.483651332 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt32_closure
.type GHC.Int.$fBoundedInt32_closure, @object
GHC.Int.$fBoundedInt32_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt32_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt32_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.487609653 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$csucc_closure
.type GHC.Int.$fEnumInt32_$csucc_closure, @object
GHC.Int.$fEnumInt32_$csucc_closure:
	.quad	GHC.Int.$fEnumInt32_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.488502204 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$csucc_entry
.type GHC.Int.$fEnumInt32_$csucc_entry, @object
GHC.Int.$fEnumInt32_$csucc_entry:
_c4x1k:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x1l
_c4x1m:
	leaq block_c4x1h_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4x1h
_c4x1i:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x1l:
	leaq GHC.Int.$fEnumInt32_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$csucc_entry, .-GHC.Int.$fEnumInt32_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:24.489181317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$csucc_info
.type GHC.Int.$fEnumInt32_$csucc_info, @object
GHC.Int.$fEnumInt32_$csucc_info:
	.quad	GHC.Int.$fEnumInt32_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+312


==================== Asm code ====================
2018-03-16 15:59:24.490065398 UTC

.section .text
.align 8
_c4x1h:
_c4x1h:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x1r
_c4x1q:
	movq 7(%rbx),%rax
	cmpq $2147483647,%rax
	jne _c4x1C
_c4x1D:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt4_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4x1C:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x1r:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4x1h, .-_c4x1h


==================== Asm code ====================
2018-03-16 15:59:24.490777978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x1h_info:
	.quad	_c4x1h
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+320


==================== Asm code ====================
2018-03-16 15:59:24.494991646 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowsPrec_closure
.type GHC.Int.$fShowInt32_$cshowsPrec_closure, @object
GHC.Int.$fShowInt32_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:24.495896403 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshowsPrec_entry
.type GHC.Int.$fShowInt32_$cshowsPrec_entry, @object
GHC.Int.$fShowInt32_$cshowsPrec_entry:
_c4x21:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x2c
_c4x2d:
	leaq block_c4x1Y_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4x1Y
_c4x1Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x2c:
	leaq GHC.Int.$fShowInt32_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt32_$cshowsPrec_entry, .-GHC.Int.$fShowInt32_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:24.496613875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowsPrec_info
.type GHC.Int.$fShowInt32_$cshowsPrec_info, @object
GHC.Int.$fShowInt32_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:24.497355095 UTC

.section .text
.align 8
_c4x1Y:
_c4x1Y:
	leaq block_c4x24_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4x24
_c4x25:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4x1Y, .-_c4x1Y


==================== Asm code ====================
2018-03-16 15:59:24.497971188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x1Y_info:
	.quad	_c4x1Y
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.499165514 UTC

.section .text
.align 8
_c4x24:
_c4x24:
	movq 16(%rbp),%rax
	leaq block_c4x29_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4x24, .-_c4x24


==================== Asm code ====================
2018-03-16 15:59:24.499811878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x24_info:
	.quad	_c4x24
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.500498115 UTC

.section .text
.align 8
_c4x29:
_c4x29:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4x2i
_c4x2h:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x2i:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4x29, .-_c4x29


==================== Asm code ====================
2018-03-16 15:59:24.501127061 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x29_info:
	.quad	_c4x29
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.504839352 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshow_closure
.type GHC.Int.$fShowInt32_$cshow_closure, @object
GHC.Int.$fShowInt32_$cshow_closure:
	.quad	GHC.Int.$fShowInt32_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:24.506018177 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshow_entry
.type GHC.Int.$fShowInt32_$cshow_entry, @object
GHC.Int.$fShowInt32_$cshow_entry:
_c4x2N:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x2T
_c4x2U:
	leaq block_c4x2K_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4x2K
_c4x2L:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x2T:
	leaq GHC.Int.$fShowInt32_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt32_$cshow_entry, .-GHC.Int.$fShowInt32_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:24.506662596 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshow_info
.type GHC.Int.$fShowInt32_$cshow_info, @object
GHC.Int.$fShowInt32_$cshow_info:
	.quad	GHC.Int.$fShowInt32_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.507341346 UTC

.section .text
.align 8
_c4x2K:
_c4x2K:
	leaq block_c4x2Q_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4x2K, .-_c4x2K


==================== Asm code ====================
2018-03-16 15:59:24.507978838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x2K_info:
	.quad	_c4x2K
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.508696416 UTC

.section .text
.align 8
_c4x2Q:
_c4x2Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4x2Y
_c4x2X:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x2Y:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4x2Q, .-_c4x2Q


==================== Asm code ====================
2018-03-16 15:59:24.509390125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x2Q_info:
	.quad	_c4x2Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.513088981 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt2_closure
.type GHC.Int.$fShowInt2_closure, @object
GHC.Int.$fShowInt2_closure:
	.quad	GHC.Int.$fShowInt2_info


==================== Asm code ====================
2018-03-16 15:59:24.514092611 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt2_entry
.type GHC.Int.$fShowInt2_entry, @object
GHC.Int.$fShowInt2_entry:
_c4x3o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x3u
_c4x3v:
	leaq block_c4x3l_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4x3l
_c4x3m:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x3u:
	leaq GHC.Int.$fShowInt2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt2_entry, .-GHC.Int.$fShowInt2_entry


==================== Asm code ====================
2018-03-16 15:59:24.514804799 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt2_info
.type GHC.Int.$fShowInt2_info, @object
GHC.Int.$fShowInt2_info:
	.quad	GHC.Int.$fShowInt2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.515550611 UTC

.section .text
.align 8
_c4x3l:
_c4x3l:
	movq 8(%rbp),%rax
	leaq block_c4x3r_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4x3l, .-_c4x3l


==================== Asm code ====================
2018-03-16 15:59:24.516209812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x3l_info:
	.quad	_c4x3l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.516941492 UTC

.section .text
.align 8
_c4x3r:
_c4x3r:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4x3z
_c4x3y:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x3z:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4x3r, .-_c4x3r


==================== Asm code ====================
2018-03-16 15:59:24.517786541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x3r_info:
	.quad	_c4x3r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.520676281 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowList_closure
.type GHC.Int.$fShowInt32_$cshowList_closure, @object
GHC.Int.$fShowInt32_$cshowList_closure:
	.quad	GHC.Int.$fShowInt32_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:24.521468674 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt32_$cshowList_entry
.type GHC.Int.$fShowInt32_$cshowList_entry, @object
GHC.Int.$fShowInt32_$cshowList_entry:
_c4x3V:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Int.$fShowInt2_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Int.$fShowInt32_$cshowList_entry, .-GHC.Int.$fShowInt32_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:24.522078645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt32_$cshowList_info
.type GHC.Int.$fShowInt32_$cshowList_info, @object
GHC.Int.$fShowInt32_$cshowList_info:
	.quad	GHC.Int.$fShowInt32_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.523881269 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt32_closure
.type GHC.Int.$fShowInt32_closure, @object
GHC.Int.$fShowInt32_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt32_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt32_$cshow_closure+1
	.quad	GHC.Int.$fShowInt32_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.526402525 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wlvl1_closure
.type GHC.Int.$wlvl1_closure, @object
GHC.Int.$wlvl1_closure:
	.quad	GHC.Int.$wlvl1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.527130278 UTC

.section .text
.align 8
.globl GHC.Int.$wlvl1_entry
.type GHC.Int.$wlvl1_entry, @object
GHC.Int.$wlvl1_entry:
_c4x47:
	leaq GHC.Int.$fBoundedInt32_$cmaxBound_closure+1(%rip),%r9
	leaq GHC.Int.$fBoundedInt32_$cminBound_closure+1(%rip),%r8
	movq %r14,%rdi
	leaq lvl4_r4kPv_closure(%rip),%rsi
	leaq GHC.Int.$fShowInt32_closure+1(%rip),%r14
	jmp *GHC.Enum.$wtoEnumError_entry@gotpcrel(%rip)
	.size GHC.Int.$wlvl1_entry, .-GHC.Int.$wlvl1_entry


==================== Asm code ====================
2018-03-16 15:59:24.527800733 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wlvl1_info
.type GHC.Int.$wlvl1_info, @object
GHC.Int.$wlvl1_info:
	.quad	GHC.Int.$wlvl1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4wm5_srt+328


==================== Asm code ====================
2018-03-16 15:59:24.530773705 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum1_closure
.type GHC.Int.$w$ctoEnum1_closure, @object
GHC.Int.$w$ctoEnum1_closure:
	.quad	GHC.Int.$w$ctoEnum1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.531617737 UTC

.section .text
.align 8
.globl GHC.Int.$w$ctoEnum1_entry
.type GHC.Int.$w$ctoEnum1_entry, @object
GHC.Int.$w$ctoEnum1_entry:
_c4x4n:
	movq %r14,%rax
	cmpq $-2147483648,%r14
	jl _c4x4v
_c4x4m:
	cmpq $2147483647,%rax
	jg _c4x4v
_c4x4w:
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4x4v:
	movq %rax,%r14
	jmp GHC.Int.$wlvl1_entry
	.size GHC.Int.$w$ctoEnum1_entry, .-GHC.Int.$w$ctoEnum1_entry


==================== Asm code ====================
2018-03-16 15:59:24.532277927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$ctoEnum1_info
.type GHC.Int.$w$ctoEnum1_info, @object
GHC.Int.$w$ctoEnum1_info:
	.quad	GHC.Int.$w$ctoEnum1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.535872786 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$ctoEnum_closure
.type GHC.Int.$fEnumInt32_$ctoEnum_closure, @object
GHC.Int.$fEnumInt32_$ctoEnum_closure:
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.536761442 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$ctoEnum_entry
.type GHC.Int.$fEnumInt32_$ctoEnum_entry, @object
GHC.Int.$fEnumInt32_$ctoEnum_entry:
_c4x4J:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x4R
_c4x4S:
	leaq block_c4x4G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4x4G
_c4x4H:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x4R:
	leaq GHC.Int.$fEnumInt32_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$ctoEnum_entry, .-GHC.Int.$fEnumInt32_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:59:24.537573268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$ctoEnum_info
.type GHC.Int.$fEnumInt32_$ctoEnum_info, @object
GHC.Int.$fEnumInt32_$ctoEnum_info:
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+352


==================== Asm code ====================
2018-03-16 15:59:24.538257552 UTC

.section .text
.align 8
_c4x4G:
_c4x4G:
	leaq block_c4x4M_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Int.$w$ctoEnum1_entry
	.size _c4x4G, .-_c4x4G


==================== Asm code ====================
2018-03-16 15:59:24.53884722 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x4G_info:
	.quad	_c4x4G
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+360


==================== Asm code ====================
2018-03-16 15:59:24.539614716 UTC

.section .text
.align 8
_c4x4M:
_c4x4M:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x4W
_c4x4V:
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x4W:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4x4M, .-_c4x4M


==================== Asm code ====================
2018-03-16 15:59:24.540241959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x4M_info:
	.quad	_c4x4M
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.546930919 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo1_closure
.type GHC.Int.$w$cenumFromTo1_closure, @object
GHC.Int.$w$cenumFromTo1_closure:
	.quad	GHC.Int.$w$cenumFromTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.547797839 UTC

.section .text
.align 8
sat_s4vC3_entry:
_c4x5z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x5A
_c4x5B:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rax
	cmpq 24(%rbx),%rax
	je _c4x5y
_c4x5x:
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_s4vBW_entry
_c4x5A:
	jmp *-16(%r13)
_c4x5y:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s4vC3_entry, .-sat_s4vC3_entry


==================== Asm code ====================
2018-03-16 15:59:24.548506438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vC3_info:
	.quad	sat_s4vC3_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.549455724 UTC

.section .text
.align 8
sat_s4vC0_entry:
_c4x5N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x5O
_c4x5P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x5R
_c4x5Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4x5X
_c4x5M:
	cmpq $2147483647,%rax
	jg _c4x5X
_c4x61:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x5X:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4x5R:
	movq $16,904(%r13)
_c4x5O:
	jmp *-16(%r13)
	.size sat_s4vC0_entry, .-sat_s4vC0_entry


==================== Asm code ====================
2018-03-16 15:59:24.550202038 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vC0_info:
	.quad	sat_s4vC0_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.550968965 UTC

.section .text
.align 8
go_s4vBW_entry:
_c4x63:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4x67
_c4x66:
	movq 7(%rbx),%rax
	leaq sat_s4vC3_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vC0_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4x67:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size go_s4vBW_entry, .-go_s4vBW_entry


==================== Asm code ====================
2018-03-16 15:59:24.551726659 UTC

.section .data.rel.ro
.align 8
.align 1
go_s4vBW_info:
	.quad	go_s4vBW_entry
	.quad	4294967296
	.quad	4294967306
	.quad	4294967300
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.552533073 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromTo1_entry
.type GHC.Int.$w$cenumFromTo1_entry, @object
GHC.Int.$w$cenumFromTo1_entry:
_c4x6b:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x6f
_c4x6e:
	cmpq %rsi,%r14
	jle _c4x69
_c4x6a:
	addq $-16,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4x6f:
	movq $16,904(%r13)
	leaq GHC.Int.$w$cenumFromTo1_closure(%rip),%rbx
	jmp *-8(%r13)
_c4x69:
	leaq go_s4vBW_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s4vBW_entry
	.size GHC.Int.$w$cenumFromTo1_entry, .-GHC.Int.$w$cenumFromTo1_entry


==================== Asm code ====================
2018-03-16 15:59:24.553333833 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromTo1_info
.type GHC.Int.$w$cenumFromTo1_info, @object
GHC.Int.$w$cenumFromTo1_info:
	.quad	GHC.Int.$w$cenumFromTo1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934604
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.556900853 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromTo_closure
.type GHC.Int.$fEnumInt32_$cenumFromTo_closure, @object
GHC.Int.$fEnumInt32_$cenumFromTo_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.557839616 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromTo_entry
.type GHC.Int.$fEnumInt32_$cenumFromTo_entry, @object
GHC.Int.$fEnumInt32_$cenumFromTo_entry:
_c4x6R:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x6V
_c4x6W:
	leaq block_c4x6O_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4x6O
_c4x6P:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x6V:
	leaq GHC.Int.$fEnumInt32_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFromTo_entry, .-GHC.Int.$fEnumInt32_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.558545875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromTo_info
.type GHC.Int.$fEnumInt32_$cenumFromTo_info, @object
GHC.Int.$fEnumInt32_$cenumFromTo_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+368


==================== Asm code ====================
2018-03-16 15:59:24.559273453 UTC

.section .text
.align 8
_c4x6O:
_c4x6O:
	leaq block_c4x6U_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4x6U
_c4x6Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4x6O, .-_c4x6O


==================== Asm code ====================
2018-03-16 15:59:24.559969898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x6O_info:
	.quad	_c4x6O
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+368


==================== Asm code ====================
2018-03-16 15:59:24.560689102 UTC

.section .text
.align 8
_c4x6U:
_c4x6U:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Int.$w$cenumFromTo1_entry
	.size _c4x6U, .-_c4x6U


==================== Asm code ====================
2018-03-16 15:59:24.561850994 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x6U_info:
	.quad	_c4x6U
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+368


==================== Asm code ====================
2018-03-16 15:59:24.567619356 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo1_closure
.type GHC.Int.$wgo1_closure, @object
GHC.Int.$wgo1_closure:
	.quad	GHC.Int.$wgo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.568526451 UTC

.section .text
.align 8
sat_s4vCj_entry:
_c4x7w:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x7x
_c4x7I:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $2147483647,%rax
	jne _c4x7u
_c4x7v:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x7x:
	jmp *-16(%r13)
_c4x7u:
	leaq block_c4x7C_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo1_entry
	.size sat_s4vCj_entry, .-sat_s4vCj_entry


==================== Asm code ====================
2018-03-16 15:59:24.569226678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCj_info:
	.quad	sat_s4vCj_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+384


==================== Asm code ====================
2018-03-16 15:59:24.570023906 UTC

.section .text
.align 8
_c4x7C:
_c4x7C:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4x7H
_c4x7G:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x7H:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4x7C, .-_c4x7C


==================== Asm code ====================
2018-03-16 15:59:24.570692221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x7C_info:
	.quad	_c4x7C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.571546395 UTC

.section .text
.align 8
sat_s4vCd_entry:
_c4x7S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x7T
_c4x7U:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4x7W
_c4x7V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4x82
_c4x7R:
	cmpq $2147483647,%rax
	jg _c4x82
_c4x86:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x82:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4x7W:
	movq $16,904(%r13)
_c4x7T:
	jmp *-16(%r13)
	.size sat_s4vCd_entry, .-sat_s4vCd_entry


==================== Asm code ====================
2018-03-16 15:59:24.572287977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCd_info:
	.quad	sat_s4vCd_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.573051179 UTC

.section .text
.align 8
.globl GHC.Int.$wgo1_entry
.type GHC.Int.$wgo1_entry, @object
GHC.Int.$wgo1_entry:
_c4x87:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c4x8b
_c4x8a:
	leaq sat_s4vCj_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s4vCd_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4x8b:
	movq $48,904(%r13)
	leaq GHC.Int.$wgo1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$wgo1_entry, .-GHC.Int.$wgo1_entry


==================== Asm code ====================
2018-03-16 15:59:24.573806392 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo1_info
.type GHC.Int.$wgo1_info, @object
GHC.Int.$wgo1_info:
	.quad	GHC.Int.$wgo1_entry
	.quad	0
	.quad	141733920782
	.quad	4294967300
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.577117119 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_go_closure
.type GHC.Int.$fEnumInt32_go_closure, @object
GHC.Int.$fEnumInt32_go_closure:
	.quad	GHC.Int.$fEnumInt32_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.578262307 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_go_entry
.type GHC.Int.$fEnumInt32_go_entry, @object
GHC.Int.$fEnumInt32_go_entry:
_c4x8K:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x8L
_c4x8M:
	leaq block_c4x8H_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo1_entry
_c4x8L:
	leaq GHC.Int.$fEnumInt32_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_go_entry, .-GHC.Int.$fEnumInt32_go_entry


==================== Asm code ====================
2018-03-16 15:59:24.578953594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_go_info
.type GHC.Int.$fEnumInt32_go_info, @object
GHC.Int.$fEnumInt32_go_info:
	.quad	GHC.Int.$fEnumInt32_go_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S4wm5_srt+384


==================== Asm code ====================
2018-03-16 15:59:24.579725658 UTC

.section .text
.align 8
_c4x8H:
_c4x8H:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4x8P
_c4x8O:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x8P:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4x8H, .-_c4x8H


==================== Asm code ====================
2018-03-16 15:59:24.580423118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x8H_info:
	.quad	_c4x8H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.584400053 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFrom_closure
.type GHC.Int.$fEnumInt32_$cenumFrom_closure, @object
GHC.Int.$fEnumInt32_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.585424795 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFrom_entry
.type GHC.Int.$fEnumInt32_$cenumFrom_entry, @object
GHC.Int.$fEnumInt32_$cenumFrom_entry:
_c4x98:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4x99
_c4x9a:
	leaq block_c4x95_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4x95
_c4x96:
	movq (%rbx),%rax
	jmp *(%rax)
_c4x99:
	leaq GHC.Int.$fEnumInt32_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFrom_entry, .-GHC.Int.$fEnumInt32_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:24.58611522 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFrom_info
.type GHC.Int.$fEnumInt32_$cenumFrom_info, @object
GHC.Int.$fEnumInt32_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+392


==================== Asm code ====================
2018-03-16 15:59:24.586886624 UTC

.section .text
.align 8
_c4x95:
_c4x95:
	movq 7(%rbx),%rax
	cmpq $2147483647,%rax
	jle _c4x9h
_c4x9i:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4x9h:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt32_go_entry
	.size _c4x95, .-_c4x95


==================== Asm code ====================
2018-03-16 15:59:24.587531083 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4x95_info:
	.quad	_c4x95
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+392


==================== Asm code ====================
2018-03-16 15:59:24.608201014 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo1_closure
.type GHC.Int.$w$cenumFromThenTo1_closure, @object
GHC.Int.$w$cenumFromThenTo1_closure:
	.quad	GHC.Int.$w$cenumFromThenTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.609136798 UTC

.section .text
.align 8
sat_s4vCJ_entry:
_c4xa4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xa5
_c4xa6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vCC_entry
_c4xa5:
	jmp *-16(%r13)
	.size sat_s4vCJ_entry, .-sat_s4vCJ_entry


==================== Asm code ====================
2018-03-16 15:59:24.609976562 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCJ_info:
	.quad	sat_s4vCJ_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.610865398 UTC

.section .text
.align 8
sat_s4vCH_entry:
_c4xag:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xah
_c4xai:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xak
_c4xaj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xaq
_c4xaf:
	cmpq $2147483647,%rax
	jg _c4xaq
_c4xau:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xaq:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xak:
	movq $16,904(%r13)
_c4xah:
	jmp *-16(%r13)
	.size sat_s4vCH_entry, .-sat_s4vCH_entry


==================== Asm code ====================
2018-03-16 15:59:24.611601365 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCH_info:
	.quad	sat_s4vCH_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.612490456 UTC

.section .text
.align 8
sat_s4vCM_entry:
_c4xaF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xaG
_c4xaH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xaJ
_c4xaI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xaP
_c4xaE:
	cmpq $2147483647,%rax
	jg _c4xaP
_c4xaT:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xaP:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xaJ:
	movq $16,904(%r13)
_c4xaG:
	jmp *-16(%r13)
	.size sat_s4vCM_entry, .-sat_s4vCM_entry


==================== Asm code ====================
2018-03-16 15:59:24.613224191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCM_info:
	.quad	sat_s4vCM_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.614209934 UTC

.section .text
.align 8
go_dn_s4vCC_entry:
_c4xaX:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4xb1
_c4xb0:
	cmpq 15(%rbx),%r14
	jge _c4xaV
_c4xaW:
	leaq sat_s4vCM_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xb1:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4xaV:
	movq 7(%rbx),%rax
	leaq sat_s4vCJ_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vCH_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_s4vCC_entry, .-go_dn_s4vCC_entry


==================== Asm code ====================
2018-03-16 15:59:24.615033261 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_s4vCC_info:
	.quad	go_dn_s4vCC_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.615844532 UTC

.section .text
.align 8
sat_s4vCN_entry:
_c4xb4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xb5
_c4xb6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4xb8
_c4xb7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_dn_s4vCC_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_s4vCC_entry
_c4xb8:
	movq $24,904(%r13)
_c4xb5:
	jmp *-16(%r13)
	.size sat_s4vCN_entry, .-sat_s4vCN_entry


==================== Asm code ====================
2018-03-16 15:59:24.616546611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCN_info:
	.quad	sat_s4vCN_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.617482067 UTC

.section .text
.align 8
sat_s4vCz_entry:
_c4xbi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xbj
_c4xbk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xbm
_c4xbl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xbs
_c4xbh:
	cmpq $2147483647,%rax
	jg _c4xbs
_c4xbw:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xbs:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xbm:
	movq $16,904(%r13)
_c4xbj:
	jmp *-16(%r13)
	.size sat_s4vCz_entry, .-sat_s4vCz_entry


==================== Asm code ====================
2018-03-16 15:59:24.618244122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCz_info:
	.quad	sat_s4vCz_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.619125099 UTC

.section .text
.align 8
sat_s4vCR_entry:
_c4xbK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xbL
_c4xbM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xbO
_c4xbN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xbU
_c4xbJ:
	cmpq $2147483647,%rax
	jg _c4xbU
_c4xbY:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xbU:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xbO:
	movq $16,904(%r13)
_c4xbL:
	jmp *-16(%r13)
	.size sat_s4vCR_entry, .-sat_s4vCR_entry


==================== Asm code ====================
2018-03-16 15:59:24.619915137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCR_info:
	.quad	sat_s4vCR_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.620681954 UTC

.section .text
.align 8
sat_s4vD5_entry:
_c4xcr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xcs
_c4xct:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_s4vCY_entry
_c4xcs:
	jmp *-16(%r13)
	.size sat_s4vD5_entry, .-sat_s4vD5_entry


==================== Asm code ====================
2018-03-16 15:59:24.621362748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vD5_info:
	.quad	sat_s4vD5_entry
	.quad	8589934593
	.quad	4294967311
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.622220313 UTC

.section .text
.align 8
sat_s4vD3_entry:
_c4xcD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xcE
_c4xcF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xcH
_c4xcG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xcN
_c4xcC:
	cmpq $2147483647,%rax
	jg _c4xcN
_c4xcR:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xcN:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xcH:
	movq $16,904(%r13)
_c4xcE:
	jmp *-16(%r13)
	.size sat_s4vD3_entry, .-sat_s4vD3_entry


==================== Asm code ====================
2018-03-16 15:59:24.623001371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vD3_info:
	.quad	sat_s4vD3_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.623925933 UTC

.section .text
.align 8
sat_s4vD8_entry:
_c4xd2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xd3
_c4xd4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xd6
_c4xd5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xdc
_c4xd1:
	cmpq $2147483647,%rax
	jg _c4xdc
_c4xdg:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xdc:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xd6:
	movq $16,904(%r13)
_c4xd3:
	jmp *-16(%r13)
	.size sat_s4vD8_entry, .-sat_s4vD8_entry


==================== Asm code ====================
2018-03-16 15:59:24.624735343 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vD8_info:
	.quad	sat_s4vD8_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.626272971 UTC

.section .text
.align 8
go_up_s4vCY_entry:
_c4xdk:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4xdo
_c4xdn:
	cmpq 15(%rbx),%r14
	jle _c4xdi
_c4xdj:
	leaq sat_s4vD8_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xdo:
	movq $88,904(%r13)
	jmp *-8(%r13)
_c4xdi:
	movq 7(%rbx),%rax
	leaq sat_s4vD5_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s4vD3_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_s4vCY_entry, .-go_up_s4vCY_entry


==================== Asm code ====================
2018-03-16 15:59:24.627100349 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_s4vCY_info:
	.quad	go_up_s4vCY_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.627970772 UTC

.section .text
.align 8
sat_s4vD9_entry:
_c4xdr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xds
_c4xdt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4xdv
_c4xdu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq 32(%rbx),%rbx
	subq %rcx,%rbx
	leaq go_up_s4vCY_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_s4vCY_entry
_c4xdv:
	movq $24,904(%r13)
_c4xds:
	jmp *-16(%r13)
	.size sat_s4vD9_entry, .-sat_s4vD9_entry


==================== Asm code ====================
2018-03-16 15:59:24.62872346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vD9_info:
	.quad	sat_s4vD9_entry
	.quad	12884901888
	.quad	4294967311
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.629615934 UTC

.section .text
.align 8
sat_s4vCV_entry:
_c4xdF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xdG
_c4xdH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xdJ
_c4xdI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xdP
_c4xdE:
	cmpq $2147483647,%rax
	jg _c4xdP
_c4xdT:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xdP:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xdJ:
	movq $16,904(%r13)
_c4xdG:
	jmp *-16(%r13)
	.size sat_s4vCV_entry, .-sat_s4vCV_entry


==================== Asm code ====================
2018-03-16 15:59:24.630330679 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vCV_info:
	.quad	sat_s4vCV_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.63119387 UTC

.section .text
.align 8
sat_s4vDd_entry:
_c4xe7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xe8
_c4xe9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xeb
_c4xea:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $-2147483648,%rax
	jl _c4xeh
_c4xe6:
	cmpq $2147483647,%rax
	jg _c4xeh
_c4xel:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xeh:
	addq $-16,%r12
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Int.$wlvl1_entry
_c4xeb:
	movq $16,904(%r13)
_c4xe8:
	jmp *-16(%r13)
	.size sat_s4vDd_entry, .-sat_s4vDd_entry


==================== Asm code ====================
2018-03-16 15:59:24.631951661 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vDd_info:
	.quad	sat_s4vDd_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.633155959 UTC

.section .text
.align 8
.globl GHC.Int.$w$cenumFromThenTo1_entry
.type GHC.Int.$w$cenumFromThenTo1_entry, @object
GHC.Int.$w$cenumFromThenTo1_entry:
_c4xep:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c4xet
_c4xes:
	cmpq %r14,%rsi
	jl _c4xen
_c4xeo:
	cmpq %rsi,%rdi
	jge _c4xeE
_c4xeJ:
	cmpq %r14,%rdi
	jl _c4xeI
_c4xeH:
	leaq sat_s4vDd_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xeI:
	addq $-88,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xeE:
	leaq sat_s4vD9_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vCV_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xen:
	cmpq %rsi,%rdi
	jle _c4xew
_c4xeB:
	cmpq %r14,%rdi
	jg _c4xeI
_c4xez:
	leaq sat_s4vCR_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xew:
	leaq sat_s4vCN_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	leaq sat_s4vCz_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xet:
	movq $88,904(%r13)
	leaq GHC.Int.$w$cenumFromThenTo1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$w$cenumFromThenTo1_entry, .-GHC.Int.$w$cenumFromThenTo1_entry


==================== Asm code ====================
2018-03-16 15:59:24.634376265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cenumFromThenTo1_info
.type GHC.Int.$w$cenumFromThenTo1_info, @object
GHC.Int.$w$cenumFromThenTo1_info:
	.quad	GHC.Int.$w$cenumFromThenTo1_entry
	.quad	0
	.quad	1103806595086
	.quad	12884901904
	.quad	S4wm5_srt+344


==================== Asm code ====================
2018-03-16 15:59:24.63875785 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_closure
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_closure, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.639667399 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_entry
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_entry, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_entry:
_c4xhd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xhm
_c4xhn:
	leaq block_c4xha_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4xha
_c4xhb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xhm:
	leaq GHC.Int.$fEnumInt32_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt32_$cenumFromThenTo_entry, .-GHC.Int.$fEnumInt32_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:59:24.640420596 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThenTo_info
.type GHC.Int.$fEnumInt32_$cenumFromThenTo_info, @object
GHC.Int.$fEnumInt32_$cenumFromThenTo_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S4wm5_srt+408


==================== Asm code ====================
2018-03-16 15:59:24.641154219 UTC

.section .text
.align 8
_c4xha:
_c4xha:
	leaq block_c4xhg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xhg
_c4xhh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xha, .-_c4xha


==================== Asm code ====================
2018-03-16 15:59:24.641810332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xha_info:
	.quad	_c4xha
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+408


==================== Asm code ====================
2018-03-16 15:59:24.642577715 UTC

.section .text
.align 8
_c4xhg:
_c4xhg:
	leaq block_c4xhl_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4xhl
_c4xhq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xhg, .-_c4xhg


==================== Asm code ====================
2018-03-16 15:59:24.643216501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xhg_info:
	.quad	_c4xhg
	.quad	66
	.quad	4294967326
	.quad	S4wm5_srt+408


==================== Asm code ====================
2018-03-16 15:59:24.643882736 UTC

.section .text
.align 8
_c4xhl:
_c4xhl:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Int.$w$cenumFromThenTo1_entry
	.size _c4xhl, .-_c4xhl


==================== Asm code ====================
2018-03-16 15:59:24.644514227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xhl_info:
	.quad	_c4xhl
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+408


==================== Asm code ====================
2018-03-16 15:59:24.647624596 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_closure
.type GHC.Int.$fEnumInt32_closure, @object
GHC.Int.$fEnumInt32_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt32_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt32_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt32_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.648236466 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThen_closure
.type GHC.Int.$fEnumInt32_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt32_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.648972151 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt32_$cenumFromThen_entry
.type GHC.Int.$fEnumInt32_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt32_$cenumFromThen_entry:
_c4xhW:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Int.$fBoundedInt32_closure+1(%rip),%rsi
	leaq GHC.Int.$fEnumInt32_closure+1(%rip),%r14
	jmp *GHC.Enum.boundedEnumFromThen_entry@gotpcrel(%rip)
	.size GHC.Int.$fEnumInt32_$cenumFromThen_entry, .-GHC.Int.$fEnumInt32_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:24.650013845 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt32_$cenumFromThen_info
.type GHC.Int.$fEnumInt32_$cenumFromThen_info, @object
GHC.Int.$fEnumInt32_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt32_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4wm5_srt+424


==================== Asm code ====================
2018-03-16 15:59:24.651698739 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tcInt6_bytes
.type GHC.Int.$tcInt6_bytes, @object
GHC.Int.$tcInt6_bytes:
	.asciz "Int64"


==================== Asm code ====================
2018-03-16 15:59:24.654753664 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt5_closure
.type GHC.Int.$fEnumInt5_closure, @object
GHC.Int.$fEnumInt5_closure:
	.quad	GHC.Int.$fEnumInt5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.655702574 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt5_entry
.type GHC.Int.$fEnumInt5_entry, @object
GHC.Int.$fEnumInt5_entry:
_c4xid:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xie
_c4xif:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4xia
_c4xi9:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4xib_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt6_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4xie:
	jmp *-16(%r13)
_c4xia:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt5_entry, .-GHC.Int.$fEnumInt5_entry


==================== Asm code ====================
2018-03-16 15:59:24.656465307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt5_info
.type GHC.Int.$fEnumInt5_info, @object
GHC.Int.$fEnumInt5_info:
	.quad	GHC.Int.$fEnumInt5_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+280


==================== Asm code ====================
2018-03-16 15:59:24.657111563 UTC

.section .text
.align 8
_c4xib:
_c4xib:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.predError_entry@gotpcrel(%rip)
	.size _c4xib, .-_c4xib


==================== Asm code ====================
2018-03-16 15:59:24.657719346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xib_info:
	.quad	_c4xib
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+280


==================== Asm code ====================
2018-03-16 15:59:24.660696521 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt6_closure
.type GHC.Int.$fEnumInt6_closure, @object
GHC.Int.$fEnumInt6_closure:
	.quad	GHC.Int.$fEnumInt6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.662027655 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt6_entry
.type GHC.Int.$fEnumInt6_entry, @object
GHC.Int.$fEnumInt6_entry:
_c4xiD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xiE
_c4xiF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4xiA
_c4xiz:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c4xiB_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Int.$tcInt6_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c4xiE:
	jmp *-16(%r13)
_c4xiA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fEnumInt6_entry, .-GHC.Int.$fEnumInt6_entry


==================== Asm code ====================
2018-03-16 15:59:24.662771444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt6_info
.type GHC.Int.$fEnumInt6_info, @object
GHC.Int.$fEnumInt6_info:
	.quad	GHC.Int.$fEnumInt6_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+288


==================== Asm code ====================
2018-03-16 15:59:24.663451583 UTC

.section .text
.align 8
_c4xiB:
_c4xiB:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Enum.succError_entry@gotpcrel(%rip)
	.size _c4xiB, .-_c4xiB


==================== Asm code ====================
2018-03-16 15:59:24.664087564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xiB_info:
	.quad	_c4xiB
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+288


==================== Asm code ====================
2018-03-16 15:59:24.66805174 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.neInt64_closure
.type GHC.Int.neInt64_closure, @object
GHC.Int.neInt64_closure:
	.quad	GHC.Int.neInt64_info


==================== Asm code ====================
2018-03-16 15:59:24.668853972 UTC

.section .text
.align 8
.globl GHC.Int.neInt64_entry
.type GHC.Int.neInt64_entry, @object
GHC.Int.neInt64_entry:
_c4xj2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xj6
_c4xj7:
	leaq block_c4xiZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xiZ
_c4xj0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xj6:
	leaq GHC.Int.neInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.neInt64_entry, .-GHC.Int.neInt64_entry


==================== Asm code ====================
2018-03-16 15:59:24.669576609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.neInt64_info
.type GHC.Int.neInt64_info, @object
GHC.Int.neInt64_info:
	.quad	GHC.Int.neInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.670273816 UTC

.section .text
.align 8
_c4xiZ:
_c4xiZ:
	leaq block_c4xj5_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xj5
_c4xj9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xiZ, .-_c4xiZ


==================== Asm code ====================
2018-03-16 15:59:24.670959683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xiZ_info:
	.quad	_c4xiZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.671667167 UTC

.section .text
.align 8
_c4xj5:
_c4xj5:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setne %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4xj5, .-_c4xj5


==================== Asm code ====================
2018-03-16 15:59:24.672314447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xj5_info:
	.quad	_c4xj5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.674334883 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_$cminBound_closure
.type GHC.Int.$fBoundedInt64_$cminBound_closure, @object
GHC.Int.$fBoundedInt64_$cminBound_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:59:24.677846606 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cpred_closure
.type GHC.Int.$fEnumInt64_$cpred_closure, @object
GHC.Int.$fEnumInt64_$cpred_closure:
	.quad	GHC.Int.$fEnumInt64_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.678684205 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cpred_entry
.type GHC.Int.$fEnumInt64_$cpred_entry, @object
GHC.Int.$fEnumInt64_$cpred_entry:
_c4xjJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xjK
_c4xjL:
	leaq block_c4xjG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xjG
_c4xjH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xjK:
	leaq GHC.Int.$fEnumInt64_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cpred_entry, .-GHC.Int.$fEnumInt64_$cpred_entry


==================== Asm code ====================
2018-03-16 15:59:24.679320325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cpred_info
.type GHC.Int.$fEnumInt64_$cpred_info, @object
GHC.Int.$fEnumInt64_$cpred_info:
	.quad	GHC.Int.$fEnumInt64_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+432


==================== Asm code ====================
2018-03-16 15:59:24.680151996 UTC

.section .text
.align 8
_c4xjG:
_c4xjG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xjQ
_c4xjP:
	movq 7(%rbx),%rax
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	jne _c4xjY
_c4xjZ:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt5_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4xjY:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xjQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xjG, .-_c4xjG


==================== Asm code ====================
2018-03-16 15:59:24.680873423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xjG_info:
	.quad	_c4xjG
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+440


==================== Asm code ====================
2018-03-16 15:59:24.682701697 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_$cmaxBound_closure
.type GHC.Int.$fBoundedInt64_$cmaxBound_closure, @object
GHC.Int.$fBoundedInt64_$cmaxBound_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:59:24.684534565 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBoundedInt64_closure
.type GHC.Int.$fBoundedInt64_closure, @object
GHC.Int.$fBoundedInt64_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.Int.$fBoundedInt64_$cminBound_closure+1
	.quad	GHC.Int.$fBoundedInt64_$cmaxBound_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:24.691925248 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$csucc_closure
.type GHC.Int.$fEnumInt64_$csucc_closure, @object
GHC.Int.$fEnumInt64_$csucc_closure:
	.quad	GHC.Int.$fEnumInt64_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.692837888 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$csucc_entry
.type GHC.Int.$fEnumInt64_$csucc_entry, @object
GHC.Int.$fEnumInt64_$csucc_entry:
_c4xkp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xkq
_c4xkr:
	leaq block_c4xkm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xkm
_c4xkn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xkq:
	leaq GHC.Int.$fEnumInt64_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$csucc_entry, .-GHC.Int.$fEnumInt64_$csucc_entry


==================== Asm code ====================
2018-03-16 15:59:24.693778301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$csucc_info
.type GHC.Int.$fEnumInt64_$csucc_info, @object
GHC.Int.$fEnumInt64_$csucc_info:
	.quad	GHC.Int.$fEnumInt64_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+448


==================== Asm code ====================
2018-03-16 15:59:24.694693762 UTC

.section .text
.align 8
_c4xkm:
_c4xkm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xkw
_c4xkv:
	movq 7(%rbx),%rax
	movq $9223372036854775807,%rbx
	cmpq %rbx,%rax
	jne _c4xkE
_c4xkF:
	addq $-16,%r12
	leaq GHC.Int.$fEnumInt6_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4xkE:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xkw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xkm, .-_c4xkm


==================== Asm code ====================
2018-03-16 15:59:24.695520489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xkm_info:
	.quad	_c4xkm
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+456


==================== Asm code ====================
2018-03-16 15:59:24.69994516 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$wgo2_closure
.type GHC.Int.$wgo2_closure, @object
GHC.Int.$wgo2_closure:
	.quad	GHC.Int.$wgo2_info


==================== Asm code ====================
2018-03-16 15:59:24.700873944 UTC

.section .text
.align 8
sat_s4vDN_entry:
_c4xl8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xl9
_c4xlk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $9223372036854775807,%rbx
	cmpq %rbx,%rax
	jne _c4xl6
_c4xl7:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xl9:
	jmp *-16(%r13)
_c4xl6:
	leaq block_c4xle_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq 1(%rax),%r14
	addq $-24,%rbp
	jmp GHC.Int.$wgo2_entry
	.size sat_s4vDN_entry, .-sat_s4vDN_entry


==================== Asm code ====================
2018-03-16 15:59:24.701645113 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vDN_info:
	.quad	sat_s4vDN_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:59:24.702452897 UTC

.section .text
.align 8
_c4xle:
_c4xle:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4xlj
_c4xli:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xlj:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4xle, .-_c4xle


==================== Asm code ====================
2018-03-16 15:59:24.703109443 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xle_info:
	.quad	_c4xle
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.703915182 UTC

.section .text
.align 8
.globl GHC.Int.$wgo2_entry
.type GHC.Int.$wgo2_entry, @object
GHC.Int.$wgo2_entry:
_c4xlm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c4xlq
_c4xlp:
	leaq sat_s4vDN_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -32(%r12),%r14
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4xlq:
	movq $40,904(%r13)
	leaq GHC.Int.$wgo2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$wgo2_entry, .-GHC.Int.$wgo2_entry


==================== Asm code ====================
2018-03-16 15:59:24.704689401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$wgo2_info
.type GHC.Int.$wgo2_info, @object
GHC.Int.$wgo2_info:
	.quad	GHC.Int.$wgo2_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:24.708297947 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_go_closure
.type GHC.Int.$fEnumInt64_go_closure, @object
GHC.Int.$fEnumInt64_go_closure:
	.quad	GHC.Int.$fEnumInt64_go_info


==================== Asm code ====================
2018-03-16 15:59:24.709134333 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_go_entry
.type GHC.Int.$fEnumInt64_go_entry, @object
GHC.Int.$fEnumInt64_go_entry:
_c4xlT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xlU
_c4xlV:
	leaq block_c4xlQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Int.$wgo2_entry
_c4xlU:
	leaq GHC.Int.$fEnumInt64_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_go_entry, .-GHC.Int.$fEnumInt64_go_entry


==================== Asm code ====================
2018-03-16 15:59:24.710204107 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_go_info
.type GHC.Int.$fEnumInt64_go_info, @object
GHC.Int.$fEnumInt64_go_info:
	.quad	GHC.Int.$fEnumInt64_go_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:24.711385099 UTC

.section .text
.align 8
_c4xlQ:
_c4xlQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4xlY
_c4xlX:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xlY:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4xlQ, .-_c4xlQ


==================== Asm code ====================
2018-03-16 15:59:24.712082888 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xlQ_info:
	.quad	_c4xlQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.714939633 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFrom_closure
.type GHC.Int.$fEnumInt64_$cenumFrom_closure, @object
GHC.Int.$fEnumInt64_$cenumFrom_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_info


==================== Asm code ====================
2018-03-16 15:59:24.715777651 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFrom_entry
.type GHC.Int.$fEnumInt64_$cenumFrom_entry, @object
GHC.Int.$fEnumInt64_$cenumFrom_entry:
_c4xmh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xmi
_c4xmj:
	leaq block_c4xme_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xme
_c4xmf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xmi:
	leaq GHC.Int.$fEnumInt64_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fEnumInt64_$cenumFrom_entry, .-GHC.Int.$fEnumInt64_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:59:24.716457402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFrom_info
.type GHC.Int.$fEnumInt64_$cenumFrom_info, @object
GHC.Int.$fEnumInt64_$cenumFrom_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.717104256 UTC

.section .text
.align 8
_c4xme:
_c4xme:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt64_go_entry
	.size _c4xme, .-_c4xme


==================== Asm code ====================
2018-03-16 15:59:24.717686784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xme_info:
	.quad	_c4xme
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.720278353 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_closure
.type GHC.Int.$fEnumInt64_closure, @object
GHC.Int.$fEnumInt64_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Int.$fEnumInt64_$csucc_closure+1
	.quad	GHC.Int.$fEnumInt64_$cpred_closure+1
	.quad	GHC.Int.$fEnumInt64_$ctoEnum_closure+1
	.quad	GHC.Int.$fEnumInt64_$cfromEnum_closure+1
	.quad	GHC.Int.$fEnumInt64_$cenumFrom_closure+1
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_closure+2
	.quad	GHC.Int.$fEnumInt64_$cenumFromTo_closure+2
	.quad	GHC.Int.$fEnumInt64_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.720896713 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThen_closure
.type GHC.Int.$fEnumInt64_$cenumFromThen_closure, @object
GHC.Int.$fEnumInt64_$cenumFromThen_closure:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.721723895 UTC

.section .text
.align 8
.globl GHC.Int.$fEnumInt64_$cenumFromThen_entry
.type GHC.Int.$fEnumInt64_$cenumFromThen_entry, @object
GHC.Int.$fEnumInt64_$cenumFromThen_entry:
_c4xmC:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Int.$fBoundedInt64_closure+1(%rip),%rsi
	leaq GHC.Int.$fEnumInt64_closure+1(%rip),%r14
	jmp *GHC.Enum.boundedEnumFromThen_entry@gotpcrel(%rip)
	.size GHC.Int.$fEnumInt64_$cenumFromThen_entry, .-GHC.Int.$fEnumInt64_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:59:24.722324927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fEnumInt64_$cenumFromThen_info
.type GHC.Int.$fEnumInt64_$cenumFromThen_info, @object
GHC.Int.$fEnumInt64_$cenumFromThen_info:
	.quad	GHC.Int.$fEnumInt64_$cenumFromThen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S4wm5_srt+464


==================== Asm code ====================
2018-03-16 15:59:24.725719958 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cfromInteger_closure
.type GHC.Int.$fNumInt8_$cfromInteger_closure, @object
GHC.Int.$fNumInt8_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt8_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:24.726580326 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cfromInteger_entry
.type GHC.Int.$fNumInt8_$cfromInteger_entry, @object
GHC.Int.$fNumInt8_$cfromInteger_entry:
_c4xmQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xmX
_c4xmY:
	leaq block_c4xmO_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c4xmX:
	leaq GHC.Int.$fNumInt8_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cfromInteger_entry, .-GHC.Int.$fNumInt8_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:24.727255281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cfromInteger_info
.type GHC.Int.$fNumInt8_$cfromInteger_info, @object
GHC.Int.$fNumInt8_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt8_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.728028384 UTC

.section .text
.align 8
_c4xmO:
_c4xmO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xn1
_c4xn0:
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xn1:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4xmO, .-_c4xmO


==================== Asm code ====================
2018-03-16 15:59:24.728690973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xmO_info:
	.quad	_c4xmO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.732663539 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cnegate_closure
.type GHC.Int.$fNumInt8_$cnegate_closure, @object
GHC.Int.$fNumInt8_$cnegate_closure:
	.quad	GHC.Int.$fNumInt8_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:24.733589856 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cnegate_entry
.type GHC.Int.$fNumInt8_$cnegate_entry, @object
GHC.Int.$fNumInt8_$cnegate_entry:
_c4xnm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xnw
_c4xnx:
	leaq block_c4xnj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xnj
_c4xnk:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xnw:
	leaq GHC.Int.$fNumInt8_$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cnegate_entry, .-GHC.Int.$fNumInt8_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:24.734244111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cnegate_info
.type GHC.Int.$fNumInt8_$cnegate_info, @object
GHC.Int.$fNumInt8_$cnegate_info:
	.quad	GHC.Int.$fNumInt8_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.735027598 UTC

.section .text
.align 8
_c4xnj:
_c4xnj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xnA
_c4xnz:
	movq 7(%rbx),%rax
	negq %rax
	movsbq %al,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xnA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xnj, .-_c4xnj


==================== Asm code ====================
2018-03-16 15:59:24.735718238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xnj_info:
	.quad	_c4xnj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.739510466 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c*_closure
.type GHC.Int.$fNumInt8_$c*_closure, @object
GHC.Int.$fNumInt8_$c*_closure:
	.quad	GHC.Int.$fNumInt8_$c*_info


==================== Asm code ====================
2018-03-16 15:59:24.740359793 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c*_entry
.type GHC.Int.$fNumInt8_$c*_entry, @object
GHC.Int.$fNumInt8_$c*_entry:
_c4xnW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xob
_c4xoc:
	leaq block_c4xnT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xnT
_c4xnU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xob:
	leaq GHC.Int.$fNumInt8_$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c*_entry, .-GHC.Int.$fNumInt8_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:24.741020563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c*_info
.type GHC.Int.$fNumInt8_$c*_info, @object
GHC.Int.$fNumInt8_$c*_info:
	.quad	GHC.Int.$fNumInt8_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.742040026 UTC

.section .text
.align 8
_c4xnT:
_c4xnT:
	leaq block_c4xnZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xnZ
_c4xo0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xnT, .-_c4xnT


==================== Asm code ====================
2018-03-16 15:59:24.742637231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xnT_info:
	.quad	_c4xnT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.74342036 UTC

.section .text
.align 8
_c4xnZ:
_c4xnZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xog
_c4xof:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movsbq %bl,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xog:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xnZ, .-_c4xnZ


==================== Asm code ====================
2018-03-16 15:59:24.744087945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xnZ_info:
	.quad	_c4xnZ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.748015163 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c-_closure
.type GHC.Int.$fNumInt8_$c-_closure, @object
GHC.Int.$fNumInt8_$c-_closure:
	.quad	GHC.Int.$fNumInt8_$c-_info


==================== Asm code ====================
2018-03-16 15:59:24.748905965 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c-_entry
.type GHC.Int.$fNumInt8_$c-_entry, @object
GHC.Int.$fNumInt8_$c-_entry:
_c4xoK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xoZ
_c4xp0:
	leaq block_c4xoH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xoH
_c4xoI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xoZ:
	leaq GHC.Int.$fNumInt8_$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c-_entry, .-GHC.Int.$fNumInt8_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:24.749673884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c-_info
.type GHC.Int.$fNumInt8_$c-_info, @object
GHC.Int.$fNumInt8_$c-_info:
	.quad	GHC.Int.$fNumInt8_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.750410691 UTC

.section .text
.align 8
_c4xoH:
_c4xoH:
	leaq block_c4xoN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xoN
_c4xoO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xoH, .-_c4xoH


==================== Asm code ====================
2018-03-16 15:59:24.751044344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xoH_info:
	.quad	_c4xoH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.752265751 UTC

.section .text
.align 8
_c4xoN:
_c4xoN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xp4
_c4xp3:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movsbq %bl,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xp4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xoN, .-_c4xoN


==================== Asm code ====================
2018-03-16 15:59:24.752952652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xoN_info:
	.quad	_c4xoN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.75665493 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c+_closure
.type GHC.Int.$fNumInt8_$c+_closure, @object
GHC.Int.$fNumInt8_$c+_closure:
	.quad	GHC.Int.$fNumInt8_$c+_info


==================== Asm code ====================
2018-03-16 15:59:24.758052982 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$c+_entry
.type GHC.Int.$fNumInt8_$c+_entry, @object
GHC.Int.$fNumInt8_$c+_entry:
_c4xpy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xpN
_c4xpO:
	leaq block_c4xpv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xpv
_c4xpw:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xpN:
	leaq GHC.Int.$fNumInt8_$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$c+_entry, .-GHC.Int.$fNumInt8_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:24.758728219 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$c+_info
.type GHC.Int.$fNumInt8_$c+_info, @object
GHC.Int.$fNumInt8_$c+_info:
	.quad	GHC.Int.$fNumInt8_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.759427423 UTC

.section .text
.align 8
_c4xpv:
_c4xpv:
	leaq block_c4xpB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xpB
_c4xpC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xpv, .-_c4xpv


==================== Asm code ====================
2018-03-16 15:59:24.760070879 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xpv_info:
	.quad	_c4xpv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.76085161 UTC

.section .text
.align 8
_c4xpB:
_c4xpB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xpS
_c4xpR:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movsbq %bl,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xpS:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xpB, .-_c4xpB


==================== Asm code ====================
2018-03-16 15:59:24.76156583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xpB_info:
	.quad	_c4xpB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.764382845 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$ctoInteger_closure
.type GHC.Int.$fIntegralInt8_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt8_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:24.765193274 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$ctoInteger_entry
.type GHC.Int.$fIntegralInt8_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt8_$ctoInteger_entry:
_c4xqm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xqn
_c4xqo:
	leaq block_c4xqj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xqj
_c4xqk:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xqn:
	leaq GHC.Int.$fIntegralInt8_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$ctoInteger_entry, .-GHC.Int.$fIntegralInt8_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:24.765917457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$ctoInteger_info
.type GHC.Int.$fIntegralInt8_$ctoInteger_info, @object
GHC.Int.$fIntegralInt8_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.766569625 UTC

.section .text
.align 8
_c4xqj:
_c4xqj:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4xqj, .-_c4xqj


==================== Asm code ====================
2018-03-16 15:59:24.767154222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xqj_info:
	.quad	_c4xqj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.77055591 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cpopCount_closure
.type GHC.Int.$fBitsInt8_$cpopCount_closure, @object
GHC.Int.$fBitsInt8_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt8_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:24.771456311 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cpopCount_entry
.type GHC.Int.$fBitsInt8_$cpopCount_entry, @object
GHC.Int.$fBitsInt8_$cpopCount_entry:
_c4xqK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xqY
_c4xqZ:
	leaq block_c4xqH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xqH
_c4xqI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xqY:
	leaq GHC.Int.$fBitsInt8_$cpopCount_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cpopCount_entry, .-GHC.Int.$fBitsInt8_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:24.772594897 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cpopCount_info
.type GHC.Int.$fBitsInt8_$cpopCount_info, @object
GHC.Int.$fBitsInt8_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt8_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.773497206 UTC

.section .text
.align 8
_c4xqH:
_c4xqH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xr2
_c4xr1:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt8@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xr2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xqH, .-_c4xqH


==================== Asm code ====================
2018-03-16 15:59:24.774194271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xqH_info:
	.quad	_c4xqH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.778229647 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:24.7791167 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_entry:
_c4xrn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xrz
_c4xrA:
	leaq block_c4xrk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xrk
_c4xrl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xrz:
	leaq GHC.Int.$fBitsInt8_$cunsafeShiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt8_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:24.779752524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt8_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt8_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.780489254 UTC

.section .text
.align 8
_c4xrk:
_c4xrk:
	leaq block_c4xrq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xrq
_c4xrr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xrk, .-_c4xrk


==================== Asm code ====================
2018-03-16 15:59:24.781122362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xrk_info:
	.quad	_c4xrk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.781933109 UTC

.section .text
.align 8
_c4xrq:
_c4xrq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xrE
_c4xrD:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xrE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xrq, .-_c4xrq


==================== Asm code ====================
2018-03-16 15:59:24.782555589 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xrq_info:
	.quad	_c4xrq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.784328979 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt13_closure
.type GHC.Int.$fBitsInt13_closure, @object
GHC.Int.$fBitsInt13_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.786096277 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt9_closure
.type GHC.Int.$fNumInt9_closure, @object
GHC.Int.$fNumInt9_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:24.790485229 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftR_closure
.type GHC.Int.$fBitsInt8_$cshiftR_closure, @object
GHC.Int.$fBitsInt8_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt8_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:24.791444895 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshiftR_entry
.type GHC.Int.$fBitsInt8_$cshiftR_entry, @object
GHC.Int.$fBitsInt8_$cshiftR_entry:
_c4xs8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xsc
_c4xsd:
	leaq block_c4xs5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xs5
_c4xs6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xsc:
	leaq GHC.Int.$fBitsInt8_$cshiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshiftR_entry, .-GHC.Int.$fBitsInt8_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:24.792160587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftR_info
.type GHC.Int.$fBitsInt8_$cshiftR_info, @object
GHC.Int.$fBitsInt8_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt8_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.793595759 UTC

.section .text
.align 8
_c4xs5:
_c4xs5:
	leaq block_c4xsb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xsb
_c4xsf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xs5, .-_c4xs5


==================== Asm code ====================
2018-03-16 15:59:24.794226904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xs5_info:
	.quad	_c4xs5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.795108563 UTC

.section .text
.align 8
_c4xsb:
_c4xsb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xsl
_c4xsk:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4xsu
_c4xsB:
	testq %rax,%rax
	jge _c4xsz
_c4xsA:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt9_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xsz:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xsu:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xsl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xsb, .-_c4xsb


==================== Asm code ====================
2018-03-16 15:59:24.795900675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xsb_info:
	.quad	_c4xsb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.799760339 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:24.800639584 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_entry:
_c4xt5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xtk
_c4xtl:
	leaq block_c4xt2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xt2
_c4xt3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xtk:
	leaq GHC.Int.$fBitsInt8_$cunsafeShiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt8_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:24.801338263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt8_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt8_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.802089034 UTC

.section .text
.align 8
_c4xt2:
_c4xt2:
	leaq block_c4xt8_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xt8
_c4xt9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xt2, .-_c4xt2


==================== Asm code ====================
2018-03-16 15:59:24.802705823 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xt2_info:
	.quad	_c4xt2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.803486628 UTC

.section .text
.align 8
_c4xt8:
_c4xt8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xtp
_c4xto:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movsbq %al,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xtp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xt8, .-_c4xt8


==================== Asm code ====================
2018-03-16 15:59:24.804195713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xt8_info:
	.quad	_c4xt8
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.808365556 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftL_closure
.type GHC.Int.$fBitsInt8_$cshiftL_closure, @object
GHC.Int.$fBitsInt8_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt8_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:24.809576244 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshiftL_entry
.type GHC.Int.$fBitsInt8_$cshiftL_entry, @object
GHC.Int.$fBitsInt8_$cshiftL_entry:
_c4xtS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xtW
_c4xtX:
	leaq block_c4xtP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xtP
_c4xtQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xtW:
	leaq GHC.Int.$fBitsInt8_$cshiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshiftL_entry, .-GHC.Int.$fBitsInt8_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:24.81025986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshiftL_info
.type GHC.Int.$fBitsInt8_$cshiftL_info, @object
GHC.Int.$fBitsInt8_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt8_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.811018393 UTC

.section .text
.align 8
_c4xtP:
_c4xtP:
	leaq block_c4xtV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xtV
_c4xtZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xtP, .-_c4xtP


==================== Asm code ====================
2018-03-16 15:59:24.811674095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xtP_info:
	.quad	_c4xtP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.812515638 UTC

.section .text
.align 8
_c4xtV:
_c4xtV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xu5
_c4xu4:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4xuh
_c4xui:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xuh:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xu5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xtV, .-_c4xtV


==================== Asm code ====================
2018-03-16 15:59:24.813727536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xtV_info:
	.quad	_c4xtV
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.816052395 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cisSigned_closure
.type GHC.Int.$fBitsInt8_$cisSigned_closure, @object
GHC.Int.$fBitsInt8_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt8_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:24.816826789 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cisSigned_entry
.type GHC.Int.$fBitsInt8_$cisSigned_entry, @object
GHC.Int.$fBitsInt8_$cisSigned_entry:
_c4xuK:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cisSigned_entry, .-GHC.Int.$fBitsInt8_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:24.817500207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cisSigned_info
.type GHC.Int.$fBitsInt8_$cisSigned_info, @object
GHC.Int.$fBitsInt8_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt8_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.822610015 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotate_closure
.type GHC.Int.$fBitsInt8_$crotate_closure, @object
GHC.Int.$fBitsInt8_$crotate_closure:
	.quad	GHC.Int.$fBitsInt8_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:24.823483931 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotate_entry
.type GHC.Int.$fBitsInt8_$crotate_entry, @object
GHC.Int.$fBitsInt8_$crotate_entry:
_c4xv0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xv4
_c4xv5:
	leaq block_c4xuX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xuX
_c4xuY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xv4:
	leaq GHC.Int.$fBitsInt8_$crotate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$crotate_entry, .-GHC.Int.$fBitsInt8_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:24.824245608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotate_info
.type GHC.Int.$fBitsInt8_$crotate_info, @object
GHC.Int.$fBitsInt8_$crotate_info:
	.quad	GHC.Int.$fBitsInt8_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.824986816 UTC

.section .text
.align 8
_c4xuX:
_c4xuX:
	leaq block_c4xv3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xv3
_c4xv7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xuX, .-_c4xuX


==================== Asm code ====================
2018-03-16 15:59:24.825640669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xuX_info:
	.quad	_c4xuX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.826382551 UTC

.section .text
.align 8
_c4xv3:
_c4xv3:
	movq 7(%rbx),%rax
	andl $7,%eax
	testq %rax,%rax
	jne _u4xvY
_c4xvU:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4xvY:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4xvm
	.size _c4xv3, .-_c4xv3


==================== Asm code ====================
2018-03-16 15:59:24.827033753 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xv3_info:
	.quad	_c4xv3
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.827974361 UTC

.section .text
.align 8
_c4xvm:
_c4xvm:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4xvR
_c4xvQ:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movzbl %bl,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $8,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xvR:
	movq $16,904(%r13)
	leaq block_c4xvl_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4xvm, .-_c4xvm


==================== Asm code ====================
2018-03-16 15:59:24.82878049 UTC

.section .text
.align 8
_c4xvl:
_c4xvl:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4xvm
	.size _c4xvl, .-_c4xvl


==================== Asm code ====================
2018-03-16 15:59:24.829657251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xvl_info:
	.quad	_c4xvl
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.836016105 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshift_closure
.type GHC.Int.$fBitsInt8_$cshift_closure, @object
GHC.Int.$fBitsInt8_$cshift_closure:
	.quad	GHC.Int.$fBitsInt8_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:24.836990523 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cshift_entry
.type GHC.Int.$fBitsInt8_$cshift_entry, @object
GHC.Int.$fBitsInt8_$cshift_entry:
_c4xwI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xwM
_c4xwN:
	leaq block_c4xwF_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xwF
_c4xwG:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xwM:
	leaq GHC.Int.$fBitsInt8_$cshift_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cshift_entry, .-GHC.Int.$fBitsInt8_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:24.837715454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cshift_info
.type GHC.Int.$fBitsInt8_$cshift_info, @object
GHC.Int.$fBitsInt8_$cshift_info:
	.quad	GHC.Int.$fBitsInt8_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.838412528 UTC

.section .text
.align 8
_c4xwF:
_c4xwF:
	leaq block_c4xwL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xwL
_c4xwP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xwF, .-_c4xwF


==================== Asm code ====================
2018-03-16 15:59:24.839030905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xwF_info:
	.quad	_c4xwF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.840045596 UTC

.section .text
.align 8
_c4xwL:
_c4xwL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xwV
_c4xwU:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4xxj
_c4xxy:
	cmpq $64,%rbx
	jge _c4xxx
_c4xxw:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xxx:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xxj:
	negq %rbx
	cmpq $64,%rbx
	jl _c4xxa
_c4xxh:
	testq %rax,%rax
	jge _c4xxx
_c4xxg:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt9_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xxa:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xwV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xwL, .-_c4xwL


==================== Asm code ====================
2018-03-16 15:59:24.840921073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xwL_info:
	.quad	_c4xwL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.84479373 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplement_closure
.type GHC.Int.$fBitsInt8_$ccomplement_closure, @object
GHC.Int.$fBitsInt8_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt8_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:24.845945314 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ccomplement_entry
.type GHC.Int.$fBitsInt8_$ccomplement_entry, @object
GHC.Int.$fBitsInt8_$ccomplement_entry:
_c4xy7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xyk
_c4xyl:
	leaq block_c4xy4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xy4
_c4xy5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xyk:
	leaq GHC.Int.$fBitsInt8_$ccomplement_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ccomplement_entry, .-GHC.Int.$fBitsInt8_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:24.846610942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplement_info
.type GHC.Int.$fBitsInt8_$ccomplement_info, @object
GHC.Int.$fBitsInt8_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt8_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.847426477 UTC

.section .text
.align 8
_c4xy4:
_c4xy4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xyo
_c4xyn:
	movq 7(%rbx),%rax
	notq %rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xyo:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xy4, .-_c4xy4


==================== Asm code ====================
2018-03-16 15:59:24.848044615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xy4_info:
	.quad	_c4xy4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.852426107 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cxor_closure
.type GHC.Int.$fBitsInt8_$cxor_closure, @object
GHC.Int.$fBitsInt8_$cxor_closure:
	.quad	GHC.Int.$fBitsInt8_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:24.853489599 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cxor_entry
.type GHC.Int.$fBitsInt8_$cxor_entry, @object
GHC.Int.$fBitsInt8_$cxor_entry:
_c4xyJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xz4
_c4xz5:
	leaq block_c4xyG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xyG
_c4xyH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xz4:
	leaq GHC.Int.$fBitsInt8_$cxor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cxor_entry, .-GHC.Int.$fBitsInt8_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:24.85419669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cxor_info
.type GHC.Int.$fBitsInt8_$cxor_info, @object
GHC.Int.$fBitsInt8_$cxor_info:
	.quad	GHC.Int.$fBitsInt8_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.854959719 UTC

.section .text
.align 8
_c4xyG:
_c4xyG:
	leaq block_c4xyM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xyM
_c4xyN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xyG, .-_c4xyG


==================== Asm code ====================
2018-03-16 15:59:24.855622204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xyG_info:
	.quad	_c4xyG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.856458627 UTC

.section .text
.align 8
_c4xyM:
_c4xyM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xz9
_c4xz8:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xz9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xyM, .-_c4xyM


==================== Asm code ====================
2018-03-16 15:59:24.857709102 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xyM_info:
	.quad	_c4xyM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.861800003 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.|._closure
.type GHC.Int.$fBitsInt8_$c.|._closure, @object
GHC.Int.$fBitsInt8_$c.|._closure:
	.quad	GHC.Int.$fBitsInt8_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:24.86269271 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$c.|._entry
.type GHC.Int.$fBitsInt8_$c.|._entry, @object
GHC.Int.$fBitsInt8_$c.|._entry:
_c4xzC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xzX
_c4xzY:
	leaq block_c4xzz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xzz
_c4xzA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xzX:
	leaq GHC.Int.$fBitsInt8_$c.|._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$c.|._entry, .-GHC.Int.$fBitsInt8_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:24.863437544 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.|._info
.type GHC.Int.$fBitsInt8_$c.|._info, @object
GHC.Int.$fBitsInt8_$c.|._info:
	.quad	GHC.Int.$fBitsInt8_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.864204464 UTC

.section .text
.align 8
_c4xzz:
_c4xzz:
	leaq block_c4xzF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xzF
_c4xzG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xzz, .-_c4xzz


==================== Asm code ====================
2018-03-16 15:59:24.864816693 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xzz_info:
	.quad	_c4xzz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.865727105 UTC

.section .text
.align 8
_c4xzF:
_c4xzF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xA2
_c4xA1:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xA2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xzF, .-_c4xzF


==================== Asm code ====================
2018-03-16 15:59:24.866690966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xzF_info:
	.quad	_c4xzF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.870737675 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.&._closure
.type GHC.Int.$fBitsInt8_$c.&._closure, @object
GHC.Int.$fBitsInt8_$c.&._closure:
	.quad	GHC.Int.$fBitsInt8_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:24.871679329 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$c.&._entry
.type GHC.Int.$fBitsInt8_$c.&._entry, @object
GHC.Int.$fBitsInt8_$c.&._entry:
_c4xAv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xAQ
_c4xAR:
	leaq block_c4xAs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xAs
_c4xAt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xAQ:
	leaq GHC.Int.$fBitsInt8_$c.&._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$c.&._entry, .-GHC.Int.$fBitsInt8_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:24.872405315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$c.&._info
.type GHC.Int.$fBitsInt8_$c.&._info, @object
GHC.Int.$fBitsInt8_$c.&._info:
	.quad	GHC.Int.$fBitsInt8_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.873188585 UTC

.section .text
.align 8
_c4xAs:
_c4xAs:
	leaq block_c4xAy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xAy
_c4xAz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xAs, .-_c4xAs


==================== Asm code ====================
2018-03-16 15:59:24.873883118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xAs_info:
	.quad	_c4xAs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.874678505 UTC

.section .text
.align 8
_c4xAy:
_c4xAy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xAV
_c4xAU:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xAV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xAy, .-_c4xAy


==================== Asm code ====================
2018-03-16 15:59:24.87558955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xAy_info:
	.quad	_c4xAy
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.879763655 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:24.880735211 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry:
_c4xBo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xBC
_c4xBD:
	leaq block_c4xBl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xBl
_c4xBm:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xBC:
	leaq GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:24.881765364 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.882775589 UTC

.section .text
.align 8
_c4xBl:
_c4xBl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xBG
_c4xBF:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	bsf %ax,%ax
	movl $8,%ebx
	cmovne %ax,%bx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xBG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xBl, .-_c4xBl


==================== Asm code ====================
2018-03-16 15:59:24.883519616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xBl_info:
	.quad	_c4xBl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.887369064 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:24.888246809 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry:
_c4xC3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xCh
_c4xCi:
	leaq block_c4xC0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xC0
_c4xC1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xCh:
	leaq GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:24.888951242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.890112328 UTC

.section .text
.align 8
_c4xC0:
_c4xC0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xCl
_c4xCk:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	bsr %ax,%ax
	movl $15,%ebx
	cmovne %ax,%bx
	xorw $7,%bx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xCl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xC0, .-_c4xC0


==================== Asm code ====================
2018-03-16 15:59:24.891180534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xC0_info:
	.quad	_c4xC0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.893966161 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt11_closure
.type GHC.Int.$fBitsInt11_closure, @object
GHC.Int.$fBitsInt11_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:59:24.897727831 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:24.898852354 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_entry:
_c4xCG:
	leaq GHC.Int.$fBitsInt11_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt8_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:24.899891224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt8_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt8_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.904792502 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cfromInteger_closure
.type GHC.Int.$fNumInt16_$cfromInteger_closure, @object
GHC.Int.$fNumInt16_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt16_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:24.90614318 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cfromInteger_entry
.type GHC.Int.$fNumInt16_$cfromInteger_entry, @object
GHC.Int.$fNumInt16_$cfromInteger_entry:
_c4xCU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xD1
_c4xD2:
	leaq block_c4xCS_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c4xD1:
	leaq GHC.Int.$fNumInt16_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cfromInteger_entry, .-GHC.Int.$fNumInt16_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:24.907133021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cfromInteger_info
.type GHC.Int.$fNumInt16_$cfromInteger_info, @object
GHC.Int.$fNumInt16_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt16_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.908958696 UTC

.section .text
.align 8
_c4xCS:
_c4xCS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xD5
_c4xD4:
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xD5:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4xCS, .-_c4xCS


==================== Asm code ====================
2018-03-16 15:59:24.910705424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xCS_info:
	.quad	_c4xCS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.916057668 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cnegate_closure
.type GHC.Int.$fNumInt16_$cnegate_closure, @object
GHC.Int.$fNumInt16_$cnegate_closure:
	.quad	GHC.Int.$fNumInt16_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:24.917446788 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cnegate_entry
.type GHC.Int.$fNumInt16_$cnegate_entry, @object
GHC.Int.$fNumInt16_$cnegate_entry:
_c4xDq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xDA
_c4xDB:
	leaq block_c4xDn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xDn
_c4xDo:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xDA:
	leaq GHC.Int.$fNumInt16_$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cnegate_entry, .-GHC.Int.$fNumInt16_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:24.918532523 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cnegate_info
.type GHC.Int.$fNumInt16_$cnegate_info, @object
GHC.Int.$fNumInt16_$cnegate_info:
	.quad	GHC.Int.$fNumInt16_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.919876286 UTC

.section .text
.align 8
_c4xDn:
_c4xDn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xDE
_c4xDD:
	movq 7(%rbx),%rax
	negq %rax
	movswq %ax,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xDE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xDn, .-_c4xDn


==================== Asm code ====================
2018-03-16 15:59:24.920952172 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xDn_info:
	.quad	_c4xDn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.924933454 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c*_closure
.type GHC.Int.$fNumInt16_$c*_closure, @object
GHC.Int.$fNumInt16_$c*_closure:
	.quad	GHC.Int.$fNumInt16_$c*_info


==================== Asm code ====================
2018-03-16 15:59:24.92586886 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c*_entry
.type GHC.Int.$fNumInt16_$c*_entry, @object
GHC.Int.$fNumInt16_$c*_entry:
_c4xE0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xEf
_c4xEg:
	leaq block_c4xDX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xDX
_c4xDY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xEf:
	leaq GHC.Int.$fNumInt16_$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c*_entry, .-GHC.Int.$fNumInt16_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:24.926537119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c*_info
.type GHC.Int.$fNumInt16_$c*_info, @object
GHC.Int.$fNumInt16_$c*_info:
	.quad	GHC.Int.$fNumInt16_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.927256776 UTC

.section .text
.align 8
_c4xDX:
_c4xDX:
	leaq block_c4xE3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xE3
_c4xE4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xDX, .-_c4xDX


==================== Asm code ====================
2018-03-16 15:59:24.927860554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xDX_info:
	.quad	_c4xDX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.92862826 UTC

.section .text
.align 8
_c4xE3:
_c4xE3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xEk
_c4xEj:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movswq %bx,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xEk:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xE3, .-_c4xE3


==================== Asm code ====================
2018-03-16 15:59:24.929667057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xE3_info:
	.quad	_c4xE3
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.936142712 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c-_closure
.type GHC.Int.$fNumInt16_$c-_closure, @object
GHC.Int.$fNumInt16_$c-_closure:
	.quad	GHC.Int.$fNumInt16_$c-_info


==================== Asm code ====================
2018-03-16 15:59:24.938133073 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c-_entry
.type GHC.Int.$fNumInt16_$c-_entry, @object
GHC.Int.$fNumInt16_$c-_entry:
_c4xEO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xF3
_c4xF4:
	leaq block_c4xEL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xEL
_c4xEM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xF3:
	leaq GHC.Int.$fNumInt16_$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c-_entry, .-GHC.Int.$fNumInt16_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:24.939159244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c-_info
.type GHC.Int.$fNumInt16_$c-_info, @object
GHC.Int.$fNumInt16_$c-_info:
	.quad	GHC.Int.$fNumInt16_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.940193095 UTC

.section .text
.align 8
_c4xEL:
_c4xEL:
	leaq block_c4xER_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xER
_c4xES:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xEL, .-_c4xEL


==================== Asm code ====================
2018-03-16 15:59:24.941177163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xEL_info:
	.quad	_c4xEL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.942334069 UTC

.section .text
.align 8
_c4xER:
_c4xER:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xF8
_c4xF7:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movswq %bx,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xF8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xER, .-_c4xER


==================== Asm code ====================
2018-03-16 15:59:24.943424421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xER_info:
	.quad	_c4xER
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.949506577 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c+_closure
.type GHC.Int.$fNumInt16_$c+_closure, @object
GHC.Int.$fNumInt16_$c+_closure:
	.quad	GHC.Int.$fNumInt16_$c+_info


==================== Asm code ====================
2018-03-16 15:59:24.950821053 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$c+_entry
.type GHC.Int.$fNumInt16_$c+_entry, @object
GHC.Int.$fNumInt16_$c+_entry:
_c4xFC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xFR
_c4xFS:
	leaq block_c4xFz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xFz
_c4xFA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xFR:
	leaq GHC.Int.$fNumInt16_$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$c+_entry, .-GHC.Int.$fNumInt16_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:24.951823578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$c+_info
.type GHC.Int.$fNumInt16_$c+_info, @object
GHC.Int.$fNumInt16_$c+_info:
	.quad	GHC.Int.$fNumInt16_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.95287807 UTC

.section .text
.align 8
_c4xFz:
_c4xFz:
	leaq block_c4xFF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xFF
_c4xFG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xFz, .-_c4xFz


==================== Asm code ====================
2018-03-16 15:59:24.9538799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xFz_info:
	.quad	_c4xFz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.955127812 UTC

.section .text
.align 8
_c4xFF:
_c4xFF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xFW
_c4xFV:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movswq %bx,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xFW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xFF, .-_c4xFF


==================== Asm code ====================
2018-03-16 15:59:24.956139369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xFF_info:
	.quad	_c4xFF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.960622076 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$ctoInteger_closure
.type GHC.Int.$fIntegralInt16_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt16_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:24.962319856 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$ctoInteger_entry
.type GHC.Int.$fIntegralInt16_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt16_$ctoInteger_entry:
_c4xGq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xGr
_c4xGs:
	leaq block_c4xGn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xGn
_c4xGo:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xGr:
	leaq GHC.Int.$fIntegralInt16_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$ctoInteger_entry, .-GHC.Int.$fIntegralInt16_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:24.963327077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$ctoInteger_info
.type GHC.Int.$fIntegralInt16_$ctoInteger_info, @object
GHC.Int.$fIntegralInt16_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.964363056 UTC

.section .text
.align 8
_c4xGn:
_c4xGn:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4xGn, .-_c4xGn


==================== Asm code ====================
2018-03-16 15:59:24.965426214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xGn_info:
	.quad	_c4xGn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.970574921 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cpopCount_closure
.type GHC.Int.$fBitsInt16_$cpopCount_closure, @object
GHC.Int.$fBitsInt16_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt16_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:24.971393437 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cpopCount_entry
.type GHC.Int.$fBitsInt16_$cpopCount_entry, @object
GHC.Int.$fBitsInt16_$cpopCount_entry:
_c4xGO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xH2
_c4xH3:
	leaq block_c4xGL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xGL
_c4xGM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xH2:
	leaq GHC.Int.$fBitsInt16_$cpopCount_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cpopCount_entry, .-GHC.Int.$fBitsInt16_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:24.972041572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cpopCount_info
.type GHC.Int.$fBitsInt16_$cpopCount_info, @object
GHC.Int.$fBitsInt16_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt16_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:24.972849779 UTC

.section .text
.align 8
_c4xGL:
_c4xGL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xH6
_c4xH5:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt16@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xH6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xGL, .-_c4xGL


==================== Asm code ====================
2018-03-16 15:59:24.973561303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xGL_info:
	.quad	_c4xGL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.977209207 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:24.978364266 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_entry:
_c4xHr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xHD
_c4xHE:
	leaq block_c4xHo_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xHo
_c4xHp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xHD:
	leaq GHC.Int.$fBitsInt16_$cunsafeShiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt16_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:24.979036358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt16_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt16_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.979738928 UTC

.section .text
.align 8
_c4xHo:
_c4xHo:
	leaq block_c4xHu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xHu
_c4xHv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xHo, .-_c4xHo


==================== Asm code ====================
2018-03-16 15:59:24.980359787 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xHo_info:
	.quad	_c4xHo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.981095635 UTC

.section .text
.align 8
_c4xHu:
_c4xHu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xHI
_c4xHH:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xHI:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xHu, .-_c4xHu


==================== Asm code ====================
2018-03-16 15:59:24.981845157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xHu_info:
	.quad	_c4xHu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.983518775 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt3_closure
.type GHC.Int.$fBitsInt3_closure, @object
GHC.Int.$fBitsInt3_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:24.98593397 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt2_closure
.type GHC.Int.$fNumInt2_closure, @object
GHC.Int.$fNumInt2_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:24.994194763 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftR_closure
.type GHC.Int.$fBitsInt16_$cshiftR_closure, @object
GHC.Int.$fBitsInt16_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt16_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:24.995583393 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshiftR_entry
.type GHC.Int.$fBitsInt16_$cshiftR_entry, @object
GHC.Int.$fBitsInt16_$cshiftR_entry:
_c4xIc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xIg
_c4xIh:
	leaq block_c4xI9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xI9
_c4xIa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xIg:
	leaq GHC.Int.$fBitsInt16_$cshiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshiftR_entry, .-GHC.Int.$fBitsInt16_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:24.99655268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftR_info
.type GHC.Int.$fBitsInt16_$cshiftR_info, @object
GHC.Int.$fBitsInt16_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt16_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:24.997671496 UTC

.section .text
.align 8
_c4xI9:
_c4xI9:
	leaq block_c4xIf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xIf
_c4xIj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xI9, .-_c4xI9


==================== Asm code ====================
2018-03-16 15:59:24.998536205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xI9_info:
	.quad	_c4xI9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:24.999824342 UTC

.section .text
.align 8
_c4xIf:
_c4xIf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xIp
_c4xIo:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4xIy
_c4xIF:
	testq %rax,%rax
	jge _c4xID
_c4xIE:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt2_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xID:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xIy:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xIp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xIf, .-_c4xIf


==================== Asm code ====================
2018-03-16 15:59:25.001045611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xIf_info:
	.quad	_c4xIf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.006922184 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.00814216 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_entry:
_c4xJ9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xJo
_c4xJp:
	leaq block_c4xJ6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xJ6
_c4xJ7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xJo:
	leaq GHC.Int.$fBitsInt16_$cunsafeShiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt16_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.009094818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt16_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt16_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.010601244 UTC

.section .text
.align 8
_c4xJ6:
_c4xJ6:
	leaq block_c4xJc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xJc
_c4xJd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xJ6, .-_c4xJ6


==================== Asm code ====================
2018-03-16 15:59:25.011505399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xJ6_info:
	.quad	_c4xJ6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.012703907 UTC

.section .text
.align 8
_c4xJc:
_c4xJc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xJt
_c4xJs:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movswq %ax,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xJt:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xJc, .-_c4xJc


==================== Asm code ====================
2018-03-16 15:59:25.013739612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xJc_info:
	.quad	_c4xJc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.019882254 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftL_closure
.type GHC.Int.$fBitsInt16_$cshiftL_closure, @object
GHC.Int.$fBitsInt16_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt16_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.021014965 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshiftL_entry
.type GHC.Int.$fBitsInt16_$cshiftL_entry, @object
GHC.Int.$fBitsInt16_$cshiftL_entry:
_c4xJW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xK0
_c4xK1:
	leaq block_c4xJT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xJT
_c4xJU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xK0:
	leaq GHC.Int.$fBitsInt16_$cshiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshiftL_entry, .-GHC.Int.$fBitsInt16_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.022005344 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshiftL_info
.type GHC.Int.$fBitsInt16_$cshiftL_info, @object
GHC.Int.$fBitsInt16_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt16_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.022738631 UTC

.section .text
.align 8
_c4xJT:
_c4xJT:
	leaq block_c4xJZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xJZ
_c4xK3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xJT, .-_c4xJT


==================== Asm code ====================
2018-03-16 15:59:25.02335179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xJT_info:
	.quad	_c4xJT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.024679576 UTC

.section .text
.align 8
_c4xJZ:
_c4xJZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xK9
_c4xK8:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4xKl
_c4xKm:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xKl:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xK9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xJZ, .-_c4xJZ


==================== Asm code ====================
2018-03-16 15:59:25.025487523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xJZ_info:
	.quad	_c4xJZ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.027705428 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cisSigned_closure
.type GHC.Int.$fBitsInt16_$cisSigned_closure, @object
GHC.Int.$fBitsInt16_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt16_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:25.028409709 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cisSigned_entry
.type GHC.Int.$fBitsInt16_$cisSigned_entry, @object
GHC.Int.$fBitsInt16_$cisSigned_entry:
_c4xKO:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cisSigned_entry, .-GHC.Int.$fBitsInt16_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:25.028996531 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cisSigned_info
.type GHC.Int.$fBitsInt16_$cisSigned_info, @object
GHC.Int.$fBitsInt16_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt16_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.033861837 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotate_closure
.type GHC.Int.$fBitsInt16_$crotate_closure, @object
GHC.Int.$fBitsInt16_$crotate_closure:
	.quad	GHC.Int.$fBitsInt16_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:25.034761636 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotate_entry
.type GHC.Int.$fBitsInt16_$crotate_entry, @object
GHC.Int.$fBitsInt16_$crotate_entry:
_c4xL4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xL8
_c4xL9:
	leaq block_c4xL1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xL1
_c4xL2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xL8:
	leaq GHC.Int.$fBitsInt16_$crotate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$crotate_entry, .-GHC.Int.$fBitsInt16_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:25.035424922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotate_info
.type GHC.Int.$fBitsInt16_$crotate_info, @object
GHC.Int.$fBitsInt16_$crotate_info:
	.quad	GHC.Int.$fBitsInt16_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.036146863 UTC

.section .text
.align 8
_c4xL1:
_c4xL1:
	leaq block_c4xL7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xL7
_c4xLb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xL1, .-_c4xL1


==================== Asm code ====================
2018-03-16 15:59:25.036779763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xL1_info:
	.quad	_c4xL1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.037573163 UTC

.section .text
.align 8
_c4xL7:
_c4xL7:
	movq 7(%rbx),%rax
	andl $15,%eax
	testq %rax,%rax
	jne _u4xM2
_c4xLY:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4xM2:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4xLq
	.size _c4xL7, .-_c4xL7


==================== Asm code ====================
2018-03-16 15:59:25.038227371 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xL7_info:
	.quad	_c4xL7
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.039120255 UTC

.section .text
.align 8
_c4xLq:
_c4xLq:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4xLV
_c4xLU:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movzwl %bx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $16,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xLV:
	movq $16,904(%r13)
	leaq block_c4xLp_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4xLq, .-_c4xLq


==================== Asm code ====================
2018-03-16 15:59:25.039923742 UTC

.section .text
.align 8
_c4xLp:
_c4xLp:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4xLq
	.size _c4xLp, .-_c4xLp


==================== Asm code ====================
2018-03-16 15:59:25.040496889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xLp_info:
	.quad	_c4xLp
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.046314759 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshift_closure
.type GHC.Int.$fBitsInt16_$cshift_closure, @object
GHC.Int.$fBitsInt16_$cshift_closure:
	.quad	GHC.Int.$fBitsInt16_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:25.047234166 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cshift_entry
.type GHC.Int.$fBitsInt16_$cshift_entry, @object
GHC.Int.$fBitsInt16_$cshift_entry:
_c4xMM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xMQ
_c4xMR:
	leaq block_c4xMJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xMJ
_c4xMK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xMQ:
	leaq GHC.Int.$fBitsInt16_$cshift_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cshift_entry, .-GHC.Int.$fBitsInt16_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:25.047913402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cshift_info
.type GHC.Int.$fBitsInt16_$cshift_info, @object
GHC.Int.$fBitsInt16_$cshift_info:
	.quad	GHC.Int.$fBitsInt16_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.048610234 UTC

.section .text
.align 8
_c4xMJ:
_c4xMJ:
	leaq block_c4xMP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xMP
_c4xMT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xMJ, .-_c4xMJ


==================== Asm code ====================
2018-03-16 15:59:25.049193374 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xMJ_info:
	.quad	_c4xMJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.050232276 UTC

.section .text
.align 8
_c4xMP:
_c4xMP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xMZ
_c4xMY:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4xNn
_c4xNC:
	cmpq $64,%rbx
	jge _c4xNB
_c4xNA:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xNB:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xNn:
	negq %rbx
	cmpq $64,%rbx
	jl _c4xNe
_c4xNl:
	testq %rax,%rax
	jge _c4xNB
_c4xNk:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt2_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xNe:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xMZ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xMP, .-_c4xMP


==================== Asm code ====================
2018-03-16 15:59:25.051061393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xMP_info:
	.quad	_c4xMP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.054346747 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplement_closure
.type GHC.Int.$fBitsInt16_$ccomplement_closure, @object
GHC.Int.$fBitsInt16_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt16_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:25.055200075 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ccomplement_entry
.type GHC.Int.$fBitsInt16_$ccomplement_entry, @object
GHC.Int.$fBitsInt16_$ccomplement_entry:
_c4xOb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xOo
_c4xOp:
	leaq block_c4xO8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xO8
_c4xO9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xOo:
	leaq GHC.Int.$fBitsInt16_$ccomplement_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ccomplement_entry, .-GHC.Int.$fBitsInt16_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:25.055873243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplement_info
.type GHC.Int.$fBitsInt16_$ccomplement_info, @object
GHC.Int.$fBitsInt16_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt16_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.056615663 UTC

.section .text
.align 8
_c4xO8:
_c4xO8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xOs
_c4xOr:
	movq 7(%rbx),%rax
	notq %rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xOs:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xO8, .-_c4xO8


==================== Asm code ====================
2018-03-16 15:59:25.057377474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xO8_info:
	.quad	_c4xO8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.061182308 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cxor_closure
.type GHC.Int.$fBitsInt16_$cxor_closure, @object
GHC.Int.$fBitsInt16_$cxor_closure:
	.quad	GHC.Int.$fBitsInt16_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:25.062122536 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cxor_entry
.type GHC.Int.$fBitsInt16_$cxor_entry, @object
GHC.Int.$fBitsInt16_$cxor_entry:
_c4xON:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xP8
_c4xP9:
	leaq block_c4xOK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xOK
_c4xOL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xP8:
	leaq GHC.Int.$fBitsInt16_$cxor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cxor_entry, .-GHC.Int.$fBitsInt16_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:25.062780324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cxor_info
.type GHC.Int.$fBitsInt16_$cxor_info, @object
GHC.Int.$fBitsInt16_$cxor_info:
	.quad	GHC.Int.$fBitsInt16_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.063472733 UTC

.section .text
.align 8
_c4xOK:
_c4xOK:
	leaq block_c4xOQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xOQ
_c4xOR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xOK, .-_c4xOK


==================== Asm code ====================
2018-03-16 15:59:25.064113124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xOK_info:
	.quad	_c4xOK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.064879953 UTC

.section .text
.align 8
_c4xOQ:
_c4xOQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xPd
_c4xPc:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xPd:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xOQ, .-_c4xOQ


==================== Asm code ====================
2018-03-16 15:59:25.06617159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xOQ_info:
	.quad	_c4xOQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.070363855 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.|._closure
.type GHC.Int.$fBitsInt16_$c.|._closure, @object
GHC.Int.$fBitsInt16_$c.|._closure:
	.quad	GHC.Int.$fBitsInt16_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:25.071236469 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$c.|._entry
.type GHC.Int.$fBitsInt16_$c.|._entry, @object
GHC.Int.$fBitsInt16_$c.|._entry:
_c4xPG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xQ1
_c4xQ2:
	leaq block_c4xPD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xPD
_c4xPE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xQ1:
	leaq GHC.Int.$fBitsInt16_$c.|._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$c.|._entry, .-GHC.Int.$fBitsInt16_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:25.071908647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.|._info
.type GHC.Int.$fBitsInt16_$c.|._info, @object
GHC.Int.$fBitsInt16_$c.|._info:
	.quad	GHC.Int.$fBitsInt16_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.072678738 UTC

.section .text
.align 8
_c4xPD:
_c4xPD:
	leaq block_c4xPJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xPJ
_c4xPK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xPD, .-_c4xPD


==================== Asm code ====================
2018-03-16 15:59:25.073366072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xPD_info:
	.quad	_c4xPD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.074144437 UTC

.section .text
.align 8
_c4xPJ:
_c4xPJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xQ6
_c4xQ5:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xQ6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xPJ, .-_c4xPJ


==================== Asm code ====================
2018-03-16 15:59:25.074793614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xPJ_info:
	.quad	_c4xPJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.078580578 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.&._closure
.type GHC.Int.$fBitsInt16_$c.&._closure, @object
GHC.Int.$fBitsInt16_$c.&._closure:
	.quad	GHC.Int.$fBitsInt16_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:25.079462906 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$c.&._entry
.type GHC.Int.$fBitsInt16_$c.&._entry, @object
GHC.Int.$fBitsInt16_$c.&._entry:
_c4xQz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xQU
_c4xQV:
	leaq block_c4xQw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xQw
_c4xQx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xQU:
	leaq GHC.Int.$fBitsInt16_$c.&._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$c.&._entry, .-GHC.Int.$fBitsInt16_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:25.080164301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$c.&._info
.type GHC.Int.$fBitsInt16_$c.&._info, @object
GHC.Int.$fBitsInt16_$c.&._info:
	.quad	GHC.Int.$fBitsInt16_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.080905338 UTC

.section .text
.align 8
_c4xQw:
_c4xQw:
	leaq block_c4xQC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xQC
_c4xQD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xQw, .-_c4xQw


==================== Asm code ====================
2018-03-16 15:59:25.081940676 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xQw_info:
	.quad	_c4xQw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.082697776 UTC

.section .text
.align 8
_c4xQC:
_c4xQC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xQZ
_c4xQY:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xQZ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xQC, .-_c4xQC


==================== Asm code ====================
2018-03-16 15:59:25.083345626 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xQC_info:
	.quad	_c4xQC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.086726433 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.088126788 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry:
_c4xRs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xRG
_c4xRH:
	leaq block_c4xRp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xRp
_c4xRq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xRG:
	leaq GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.088799138 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.08960176 UTC

.section .text
.align 8
_c4xRp:
_c4xRp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xRK
_c4xRJ:
	movq 7(%rbx),%rax
	bsf %ax,%ax
	movl $16,%ebx
	cmovne %ax,%bx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xRK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xRp, .-_c4xRp


==================== Asm code ====================
2018-03-16 15:59:25.090236882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xRp_info:
	.quad	_c4xRp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.093628893 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.094458289 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry:
_c4xS7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xSl
_c4xSm:
	leaq block_c4xS4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xS4
_c4xS5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xSl:
	leaq GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.095138956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.09591134 UTC

.section .text
.align 8
_c4xS4:
_c4xS4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xSp
_c4xSo:
	movq 7(%rbx),%rax
	bsr %ax,%ax
	movl $31,%ebx
	cmovne %ax,%bx
	xorw $15,%bx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xSp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xS4, .-_c4xS4


==================== Asm code ====================
2018-03-16 15:59:25.096549361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xS4_info:
	.quad	_c4xS4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.098360361 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt1_closure
.type GHC.Int.$fBitsInt1_closure, @object
GHC.Int.$fBitsInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:25.100563443 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:25.101360646 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_entry:
_c4xSK:
	leaq GHC.Int.$fBitsInt1_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt16_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:25.101983461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt16_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt16_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.104997568 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cfromInteger_closure
.type GHC.Int.$fNumInt32_$cfromInteger_closure, @object
GHC.Int.$fNumInt32_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt32_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:25.105843749 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cfromInteger_entry
.type GHC.Int.$fNumInt32_$cfromInteger_entry, @object
GHC.Int.$fNumInt32_$cfromInteger_entry:
_c4xSY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xT5
_c4xT6:
	leaq block_c4xSW_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c4xT5:
	leaq GHC.Int.$fNumInt32_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cfromInteger_entry, .-GHC.Int.$fNumInt32_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:25.106544555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cfromInteger_info
.type GHC.Int.$fNumInt32_$cfromInteger_info, @object
GHC.Int.$fNumInt32_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt32_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.107761019 UTC

.section .text
.align 8
_c4xSW:
_c4xSW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xT9
_c4xT8:
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xT9:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4xSW, .-_c4xSW


==================== Asm code ====================
2018-03-16 15:59:25.108422138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xSW_info:
	.quad	_c4xSW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.111620371 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cnegate_closure
.type GHC.Int.$fNumInt32_$cnegate_closure, @object
GHC.Int.$fNumInt32_$cnegate_closure:
	.quad	GHC.Int.$fNumInt32_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:25.112431231 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cnegate_entry
.type GHC.Int.$fNumInt32_$cnegate_entry, @object
GHC.Int.$fNumInt32_$cnegate_entry:
_c4xTt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xTD
_c4xTE:
	leaq block_c4xTq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xTq
_c4xTr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xTD:
	leaq GHC.Int.$fNumInt32_$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cnegate_entry, .-GHC.Int.$fNumInt32_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:25.113069924 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cnegate_info
.type GHC.Int.$fNumInt32_$cnegate_info, @object
GHC.Int.$fNumInt32_$cnegate_info:
	.quad	GHC.Int.$fNumInt32_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.113865191 UTC

.section .text
.align 8
_c4xTq:
_c4xTq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xTH
_c4xTG:
	movq 7(%rbx),%rax
	negq %rax
	movslq %eax,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xTH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xTq, .-_c4xTq


==================== Asm code ====================
2018-03-16 15:59:25.114492868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xTq_info:
	.quad	_c4xTq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.118504106 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c*_closure
.type GHC.Int.$fNumInt32_$c*_closure, @object
GHC.Int.$fNumInt32_$c*_closure:
	.quad	GHC.Int.$fNumInt32_$c*_info


==================== Asm code ====================
2018-03-16 15:59:25.119413178 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c*_entry
.type GHC.Int.$fNumInt32_$c*_entry, @object
GHC.Int.$fNumInt32_$c*_entry:
_c4xU3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xUi
_c4xUj:
	leaq block_c4xU0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xU0
_c4xU1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xUi:
	leaq GHC.Int.$fNumInt32_$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c*_entry, .-GHC.Int.$fNumInt32_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:25.120098883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c*_info
.type GHC.Int.$fNumInt32_$c*_info, @object
GHC.Int.$fNumInt32_$c*_info:
	.quad	GHC.Int.$fNumInt32_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.120805035 UTC

.section .text
.align 8
_c4xU0:
_c4xU0:
	leaq block_c4xU6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xU6
_c4xU7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xU0, .-_c4xU0


==================== Asm code ====================
2018-03-16 15:59:25.121468632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xU0_info:
	.quad	_c4xU0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.122210744 UTC

.section .text
.align 8
_c4xU6:
_c4xU6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xUn
_c4xUm:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	movslq %ebx,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xUn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xU6, .-_c4xU6


==================== Asm code ====================
2018-03-16 15:59:25.122850847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xU6_info:
	.quad	_c4xU6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.127182155 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c-_closure
.type GHC.Int.$fNumInt32_$c-_closure, @object
GHC.Int.$fNumInt32_$c-_closure:
	.quad	GHC.Int.$fNumInt32_$c-_info


==================== Asm code ====================
2018-03-16 15:59:25.128032002 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c-_entry
.type GHC.Int.$fNumInt32_$c-_entry, @object
GHC.Int.$fNumInt32_$c-_entry:
_c4xUR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xV6
_c4xV7:
	leaq block_c4xUO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xUO
_c4xUP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xV6:
	leaq GHC.Int.$fNumInt32_$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c-_entry, .-GHC.Int.$fNumInt32_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:25.12928702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c-_info
.type GHC.Int.$fNumInt32_$c-_info, @object
GHC.Int.$fNumInt32_$c-_info:
	.quad	GHC.Int.$fNumInt32_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.130005785 UTC

.section .text
.align 8
_c4xUO:
_c4xUO:
	leaq block_c4xUU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xUU
_c4xUV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xUO, .-_c4xUO


==================== Asm code ====================
2018-03-16 15:59:25.130624094 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xUO_info:
	.quad	_c4xUO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.131344804 UTC

.section .text
.align 8
_c4xUU:
_c4xUU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xVb
_c4xVa:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movslq %ebx,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xVb:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xUU, .-_c4xUU


==================== Asm code ====================
2018-03-16 15:59:25.132014434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xUU_info:
	.quad	_c4xUU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.135800358 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c+_closure
.type GHC.Int.$fNumInt32_$c+_closure, @object
GHC.Int.$fNumInt32_$c+_closure:
	.quad	GHC.Int.$fNumInt32_$c+_info


==================== Asm code ====================
2018-03-16 15:59:25.136612272 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$c+_entry
.type GHC.Int.$fNumInt32_$c+_entry, @object
GHC.Int.$fNumInt32_$c+_entry:
_c4xVF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xVU
_c4xVV:
	leaq block_c4xVC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xVC
_c4xVD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xVU:
	leaq GHC.Int.$fNumInt32_$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$c+_entry, .-GHC.Int.$fNumInt32_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:25.137423234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$c+_info
.type GHC.Int.$fNumInt32_$c+_info, @object
GHC.Int.$fNumInt32_$c+_info:
	.quad	GHC.Int.$fNumInt32_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.138141709 UTC

.section .text
.align 8
_c4xVC:
_c4xVC:
	leaq block_c4xVI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xVI
_c4xVJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xVC, .-_c4xVC


==================== Asm code ====================
2018-03-16 15:59:25.138755688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xVC_info:
	.quad	_c4xVC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.139513863 UTC

.section .text
.align 8
_c4xVI:
_c4xVI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xVZ
_c4xVY:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movslq %ebx,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xVZ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xVI, .-_c4xVI


==================== Asm code ====================
2018-03-16 15:59:25.140183719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xVI_info:
	.quad	_c4xVI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.143109282 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$ctoInteger_closure
.type GHC.Int.$fIntegralInt32_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt32_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:25.143966148 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$ctoInteger_entry
.type GHC.Int.$fIntegralInt32_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt32_$ctoInteger_entry:
_c4xWt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xWu
_c4xWv:
	leaq block_c4xWq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xWq
_c4xWr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xWu:
	leaq GHC.Int.$fIntegralInt32_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$ctoInteger_entry, .-GHC.Int.$fIntegralInt32_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:25.144658288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$ctoInteger_info
.type GHC.Int.$fIntegralInt32_$ctoInteger_info, @object
GHC.Int.$fIntegralInt32_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.145391032 UTC

.section .text
.align 8
_c4xWq:
_c4xWq:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4xWq, .-_c4xWq


==================== Asm code ====================
2018-03-16 15:59:25.145984919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xWq_info:
	.quad	_c4xWq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.15012493 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cpopCount_closure
.type GHC.Int.$fBitsInt32_$cpopCount_closure, @object
GHC.Int.$fBitsInt32_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt32_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:25.150993874 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cpopCount_entry
.type GHC.Int.$fBitsInt32_$cpopCount_entry, @object
GHC.Int.$fBitsInt32_$cpopCount_entry:
_c4xWR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xX5
_c4xX6:
	leaq block_c4xWO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4xWO
_c4xWP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xX5:
	leaq GHC.Int.$fBitsInt32_$cpopCount_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cpopCount_entry, .-GHC.Int.$fBitsInt32_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:25.151688057 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cpopCount_info
.type GHC.Int.$fBitsInt32_$cpopCount_info, @object
GHC.Int.$fBitsInt32_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt32_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.152527144 UTC

.section .text
.align 8
_c4xWO:
_c4xWO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xX9
_c4xX8:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt32@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xX9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xWO, .-_c4xWO


==================== Asm code ====================
2018-03-16 15:59:25.153205481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xWO_info:
	.quad	_c4xWO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.156975733 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:25.157887749 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_entry:
_c4xXu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xXG
_c4xXH:
	leaq block_c4xXr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xXr
_c4xXs:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xXG:
	leaq GHC.Int.$fBitsInt32_$cunsafeShiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt32_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:25.158572443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt32_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt32_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.159331257 UTC

.section .text
.align 8
_c4xXr:
_c4xXr:
	leaq block_c4xXx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xXx
_c4xXy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xXr, .-_c4xXr


==================== Asm code ====================
2018-03-16 15:59:25.159971071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xXr_info:
	.quad	_c4xXr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.160744499 UTC

.section .text
.align 8
_c4xXx:
_c4xXx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xXL
_c4xXK:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xXL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xXx, .-_c4xXx


==================== Asm code ====================
2018-03-16 15:59:25.161630421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xXx_info:
	.quad	_c4xXx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.163356672 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt6_closure
.type GHC.Int.$fBitsInt6_closure, @object
GHC.Int.$fBitsInt6_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.165031899 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt4_closure
.type GHC.Int.$fNumInt4_closure, @object
GHC.Int.$fNumInt4_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:25.169977711 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftR_closure
.type GHC.Int.$fBitsInt32_$cshiftR_closure, @object
GHC.Int.$fBitsInt32_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt32_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:25.170896129 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshiftR_entry
.type GHC.Int.$fBitsInt32_$cshiftR_entry, @object
GHC.Int.$fBitsInt32_$cshiftR_entry:
_c4xYf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xYj
_c4xYk:
	leaq block_c4xYc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xYc
_c4xYd:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xYj:
	leaq GHC.Int.$fBitsInt32_$cshiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshiftR_entry, .-GHC.Int.$fBitsInt32_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:25.171585447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftR_info
.type GHC.Int.$fBitsInt32_$cshiftR_info, @object
GHC.Int.$fBitsInt32_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt32_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.172289899 UTC

.section .text
.align 8
_c4xYc:
_c4xYc:
	leaq block_c4xYi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xYi
_c4xYm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xYc, .-_c4xYc


==================== Asm code ====================
2018-03-16 15:59:25.172953981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xYc_info:
	.quad	_c4xYc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.173911819 UTC

.section .text
.align 8
_c4xYi:
_c4xYi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xYs
_c4xYr:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4xYB
_c4xYI:
	testq %rax,%rax
	jge _c4xYG
_c4xYH:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt4_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xYG:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xYB:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xYs:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xYi, .-_c4xYi


==================== Asm code ====================
2018-03-16 15:59:25.17466036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xYi_info:
	.quad	_c4xYi
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.178885489 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.179724107 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_entry:
_c4xZc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4xZr
_c4xZs:
	leaq block_c4xZ9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xZ9
_c4xZa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4xZr:
	leaq GHC.Int.$fBitsInt32_$cunsafeShiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt32_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.180434587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt32_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt32_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.181186522 UTC

.section .text
.align 8
_c4xZ9:
_c4xZ9:
	leaq block_c4xZf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4xZf
_c4xZg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xZ9, .-_c4xZ9


==================== Asm code ====================
2018-03-16 15:59:25.181867732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xZ9_info:
	.quad	_c4xZ9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.182616415 UTC

.section .text
.align 8
_c4xZf:
_c4xZf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4xZw
_c4xZv:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	movslq %eax,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4xZw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4xZf, .-_c4xZf


==================== Asm code ====================
2018-03-16 15:59:25.183317936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xZf_info:
	.quad	_c4xZf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.187413679 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftL_closure
.type GHC.Int.$fBitsInt32_$cshiftL_closure, @object
GHC.Int.$fBitsInt32_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt32_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.188300817 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshiftL_entry
.type GHC.Int.$fBitsInt32_$cshiftL_entry, @object
GHC.Int.$fBitsInt32_$cshiftL_entry:
_c4xZY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y02
_c4y03:
	leaq block_c4xZV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4xZV
_c4xZW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y02:
	leaq GHC.Int.$fBitsInt32_$cshiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshiftL_entry, .-GHC.Int.$fBitsInt32_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.189033526 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshiftL_info
.type GHC.Int.$fBitsInt32_$cshiftL_info, @object
GHC.Int.$fBitsInt32_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt32_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.190295251 UTC

.section .text
.align 8
_c4xZV:
_c4xZV:
	leaq block_c4y01_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y01
_c4y05:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4xZV, .-_c4xZV


==================== Asm code ====================
2018-03-16 15:59:25.19094497 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4xZV_info:
	.quad	_c4xZV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.191796425 UTC

.section .text
.align 8
_c4y01:
_c4y01:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y0b
_c4y0a:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4y0n
_c4y0o:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y0n:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y0b:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y01, .-_c4y01


==================== Asm code ====================
2018-03-16 15:59:25.192461678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y01_info:
	.quad	_c4y01
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.194753419 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cisSigned_closure
.type GHC.Int.$fBitsInt32_$cisSigned_closure, @object
GHC.Int.$fBitsInt32_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt32_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:25.195498615 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cisSigned_entry
.type GHC.Int.$fBitsInt32_$cisSigned_entry, @object
GHC.Int.$fBitsInt32_$cisSigned_entry:
_c4y0P:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cisSigned_entry, .-GHC.Int.$fBitsInt32_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:25.196123972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cisSigned_info
.type GHC.Int.$fBitsInt32_$cisSigned_info, @object
GHC.Int.$fBitsInt32_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt32_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.200978245 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotate_closure
.type GHC.Int.$fBitsInt32_$crotate_closure, @object
GHC.Int.$fBitsInt32_$crotate_closure:
	.quad	GHC.Int.$fBitsInt32_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:25.201843348 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotate_entry
.type GHC.Int.$fBitsInt32_$crotate_entry, @object
GHC.Int.$fBitsInt32_$crotate_entry:
_c4y15:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y19
_c4y1a:
	leaq block_c4y12_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y12
_c4y13:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y19:
	leaq GHC.Int.$fBitsInt32_$crotate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$crotate_entry, .-GHC.Int.$fBitsInt32_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:25.202526074 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotate_info
.type GHC.Int.$fBitsInt32_$crotate_info, @object
GHC.Int.$fBitsInt32_$crotate_info:
	.quad	GHC.Int.$fBitsInt32_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.203298814 UTC

.section .text
.align 8
_c4y12:
_c4y12:
	leaq block_c4y18_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4y18
_c4y1c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y12, .-_c4y12


==================== Asm code ====================
2018-03-16 15:59:25.203939072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y12_info:
	.quad	_c4y12
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.204663519 UTC

.section .text
.align 8
_c4y18:
_c4y18:
	movq 7(%rbx),%rax
	andl $31,%eax
	testq %rax,%rax
	jne _u4y23
_c4y1Z:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4y23:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4y1r
	.size _c4y18, .-_c4y18


==================== Asm code ====================
2018-03-16 15:59:25.205741451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y18_info:
	.quad	_c4y18
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.206578197 UTC

.section .text
.align 8
_c4y1r:
_c4y1r:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4y1W
_c4y1V:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movl %ebx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $32,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y1W:
	movq $16,904(%r13)
	leaq block_c4y1q_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4y1r, .-_c4y1r


==================== Asm code ====================
2018-03-16 15:59:25.207419149 UTC

.section .text
.align 8
_c4y1q:
_c4y1q:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4y1r
	.size _c4y1q, .-_c4y1q


==================== Asm code ====================
2018-03-16 15:59:25.208077896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y1q_info:
	.quad	_c4y1q
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.213418211 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshift_closure
.type GHC.Int.$fBitsInt32_$cshift_closure, @object
GHC.Int.$fBitsInt32_$cshift_closure:
	.quad	GHC.Int.$fBitsInt32_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:25.214269298 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cshift_entry
.type GHC.Int.$fBitsInt32_$cshift_entry, @object
GHC.Int.$fBitsInt32_$cshift_entry:
_c4y2N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y2R
_c4y2S:
	leaq block_c4y2K_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y2K
_c4y2L:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y2R:
	leaq GHC.Int.$fBitsInt32_$cshift_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cshift_entry, .-GHC.Int.$fBitsInt32_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:25.214942178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cshift_info
.type GHC.Int.$fBitsInt32_$cshift_info, @object
GHC.Int.$fBitsInt32_$cshift_info:
	.quad	GHC.Int.$fBitsInt32_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.2156429 UTC

.section .text
.align 8
_c4y2K:
_c4y2K:
	leaq block_c4y2Q_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y2Q
_c4y2U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y2K, .-_c4y2K


==================== Asm code ====================
2018-03-16 15:59:25.216258677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y2K_info:
	.quad	_c4y2K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.217570507 UTC

.section .text
.align 8
_c4y2Q:
_c4y2Q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y30
_c4y2Z:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4y3o
_c4y3D:
	cmpq $64,%rbx
	jge _c4y3C
_c4y3B:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y3C:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y3o:
	negq %rbx
	cmpq $64,%rbx
	jl _c4y3f
_c4y3m:
	testq %rax,%rax
	jge _c4y3C
_c4y3l:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt4_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y3f:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y30:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y2Q, .-_c4y2Q


==================== Asm code ====================
2018-03-16 15:59:25.218398307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y2Q_info:
	.quad	_c4y2Q
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.221623528 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplement_closure
.type GHC.Int.$fBitsInt32_$ccomplement_closure, @object
GHC.Int.$fBitsInt32_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt32_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:25.222441064 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ccomplement_entry
.type GHC.Int.$fBitsInt32_$ccomplement_entry, @object
GHC.Int.$fBitsInt32_$ccomplement_entry:
_c4y4b:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y4o
_c4y4p:
	leaq block_c4y48_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4y48
_c4y49:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y4o:
	leaq GHC.Int.$fBitsInt32_$ccomplement_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ccomplement_entry, .-GHC.Int.$fBitsInt32_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:25.223110908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplement_info
.type GHC.Int.$fBitsInt32_$ccomplement_info, @object
GHC.Int.$fBitsInt32_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt32_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.22387736 UTC

.section .text
.align 8
_c4y48:
_c4y48:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y4s
_c4y4r:
	movq 7(%rbx),%rax
	notq %rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y4s:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y48, .-_c4y48


==================== Asm code ====================
2018-03-16 15:59:25.224493689 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y48_info:
	.quad	_c4y48
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.228277691 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cxor_closure
.type GHC.Int.$fBitsInt32_$cxor_closure, @object
GHC.Int.$fBitsInt32_$cxor_closure:
	.quad	GHC.Int.$fBitsInt32_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:25.229189361 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cxor_entry
.type GHC.Int.$fBitsInt32_$cxor_entry, @object
GHC.Int.$fBitsInt32_$cxor_entry:
_c4y4N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y58
_c4y59:
	leaq block_c4y4K_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y4K
_c4y4L:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y58:
	leaq GHC.Int.$fBitsInt32_$cxor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cxor_entry, .-GHC.Int.$fBitsInt32_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:25.230208415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cxor_info
.type GHC.Int.$fBitsInt32_$cxor_info, @object
GHC.Int.$fBitsInt32_$cxor_info:
	.quad	GHC.Int.$fBitsInt32_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.23140162 UTC

.section .text
.align 8
_c4y4K:
_c4y4K:
	leaq block_c4y4Q_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y4Q
_c4y4R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y4K, .-_c4y4K


==================== Asm code ====================
2018-03-16 15:59:25.232002038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y4K_info:
	.quad	_c4y4K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.232748927 UTC

.section .text
.align 8
_c4y4Q:
_c4y4Q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y5d
_c4y5c:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y5d:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y4Q, .-_c4y4Q


==================== Asm code ====================
2018-03-16 15:59:25.23344849 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y4Q_info:
	.quad	_c4y4Q
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.237142971 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.|._closure
.type GHC.Int.$fBitsInt32_$c.|._closure, @object
GHC.Int.$fBitsInt32_$c.|._closure:
	.quad	GHC.Int.$fBitsInt32_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:25.238019845 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$c.|._entry
.type GHC.Int.$fBitsInt32_$c.|._entry, @object
GHC.Int.$fBitsInt32_$c.|._entry:
_c4y5G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y61
_c4y62:
	leaq block_c4y5D_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y5D
_c4y5E:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y61:
	leaq GHC.Int.$fBitsInt32_$c.|._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$c.|._entry, .-GHC.Int.$fBitsInt32_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:25.238692278 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.|._info
.type GHC.Int.$fBitsInt32_$c.|._info, @object
GHC.Int.$fBitsInt32_$c.|._info:
	.quad	GHC.Int.$fBitsInt32_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.239442521 UTC

.section .text
.align 8
_c4y5D:
_c4y5D:
	leaq block_c4y5J_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y5J
_c4y5K:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y5D, .-_c4y5D


==================== Asm code ====================
2018-03-16 15:59:25.240076746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y5D_info:
	.quad	_c4y5D
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.240826597 UTC

.section .text
.align 8
_c4y5J:
_c4y5J:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y66
_c4y65:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y66:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y5J, .-_c4y5J


==================== Asm code ====================
2018-03-16 15:59:25.241721185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y5J_info:
	.quad	_c4y5J
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.245545806 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.&._closure
.type GHC.Int.$fBitsInt32_$c.&._closure, @object
GHC.Int.$fBitsInt32_$c.&._closure:
	.quad	GHC.Int.$fBitsInt32_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:25.24638021 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$c.&._entry
.type GHC.Int.$fBitsInt32_$c.&._entry, @object
GHC.Int.$fBitsInt32_$c.&._entry:
_c4y6z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y6U
_c4y6V:
	leaq block_c4y6w_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y6w
_c4y6x:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y6U:
	leaq GHC.Int.$fBitsInt32_$c.&._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$c.&._entry, .-GHC.Int.$fBitsInt32_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:25.247052858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$c.&._info
.type GHC.Int.$fBitsInt32_$c.&._info, @object
GHC.Int.$fBitsInt32_$c.&._info:
	.quad	GHC.Int.$fBitsInt32_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.247739835 UTC

.section .text
.align 8
_c4y6w:
_c4y6w:
	leaq block_c4y6C_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y6C
_c4y6D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y6w, .-_c4y6w


==================== Asm code ====================
2018-03-16 15:59:25.248378291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y6w_info:
	.quad	_c4y6w
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.249161852 UTC

.section .text
.align 8
_c4y6C:
_c4y6C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y6Z
_c4y6Y:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y6Z:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y6C, .-_c4y6C


==================== Asm code ====================
2018-03-16 15:59:25.249999651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y6C_info:
	.quad	_c4y6C
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.253927337 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.254768201 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry:
_c4y7s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y7G
_c4y7H:
	leaq block_c4y7p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4y7p
_c4y7q:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y7G:
	leaq GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.255431194 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.256186822 UTC

.section .text
.align 8
_c4y7p:
_c4y7p:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y7K
_c4y7J:
	movq 7(%rbx),%rax
	bsf %eax,%eax
	movl $32,%ebx
	cmovne %eax,%ebx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y7K:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y7p, .-_c4y7p


==================== Asm code ====================
2018-03-16 15:59:25.256815873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y7p_info:
	.quad	_c4y7p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.260095149 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.260980982 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry:
_c4y87:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y8l
_c4y8m:
	leaq block_c4y84_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4y84
_c4y85:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y8l:
	leaq GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.261701653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.262485105 UTC

.section .text
.align 8
_c4y84:
_c4y84:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y8p
_c4y8o:
	movq 7(%rbx),%rax
	bsr %eax,%eax
	movl $63,%ebx
	cmovne %eax,%ebx
	xorl $31,%ebx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y8p:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y84, .-_c4y84


==================== Asm code ====================
2018-03-16 15:59:25.263143922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y84_info:
	.quad	_c4y84
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.264837861 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt4_closure
.type GHC.Int.$fBitsInt4_closure, @object
GHC.Int.$fBitsInt4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	32


==================== Asm code ====================
2018-03-16 15:59:25.267255771 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:25.267965967 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_entry:
_c4y8K:
	leaq GHC.Int.$fBitsInt4_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt32_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:25.268561881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt32_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt32_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.272262784 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cfromInteger_closure
.type GHC.Int.$fNumInt64_$cfromInteger_closure, @object
GHC.Int.$fNumInt64_$cfromInteger_closure:
	.quad	GHC.Int.$fNumInt64_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:59:25.273018444 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cfromInteger_entry
.type GHC.Int.$fNumInt64_$cfromInteger_entry, @object
GHC.Int.$fNumInt64_$cfromInteger_entry:
_c4y8Y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y92
_c4y93:
	leaq block_c4y8W_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c4y92:
	leaq GHC.Int.$fNumInt64_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cfromInteger_entry, .-GHC.Int.$fNumInt64_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:59:25.273707966 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cfromInteger_info
.type GHC.Int.$fNumInt64_$cfromInteger_info, @object
GHC.Int.$fNumInt64_$cfromInteger_info:
	.quad	GHC.Int.$fNumInt64_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.274488136 UTC

.section .text
.align 8
_c4y8W:
_c4y8W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y96
_c4y95:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y96:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4y8W, .-_c4y8W


==================== Asm code ====================
2018-03-16 15:59:25.275122623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y8W_info:
	.quad	_c4y8W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.278746827 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cnegate_closure
.type GHC.Int.$fNumInt64_$cnegate_closure, @object
GHC.Int.$fNumInt64_$cnegate_closure:
	.quad	GHC.Int.$fNumInt64_$cnegate_info


==================== Asm code ====================
2018-03-16 15:59:25.279609873 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cnegate_entry
.type GHC.Int.$fNumInt64_$cnegate_entry, @object
GHC.Int.$fNumInt64_$cnegate_entry:
_c4y9p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4y9w
_c4y9x:
	leaq block_c4y9m_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4y9m
_c4y9n:
	movq (%rbx),%rax
	jmp *(%rax)
_c4y9w:
	leaq GHC.Int.$fNumInt64_$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cnegate_entry, .-GHC.Int.$fNumInt64_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:59:25.280311515 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cnegate_info
.type GHC.Int.$fNumInt64_$cnegate_info, @object
GHC.Int.$fNumInt64_$cnegate_info:
	.quad	GHC.Int.$fNumInt64_$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.281072458 UTC

.section .text
.align 8
_c4y9m:
_c4y9m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4y9A
_c4y9z:
	movq 7(%rbx),%rax
	negq %rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4y9A:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y9m, .-_c4y9m


==================== Asm code ====================
2018-03-16 15:59:25.281785392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y9m_info:
	.quad	_c4y9m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.285597021 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c*_closure
.type GHC.Int.$fNumInt64_$c*_closure, @object
GHC.Int.$fNumInt64_$c*_closure:
	.quad	GHC.Int.$fNumInt64_$c*_info


==================== Asm code ====================
2018-03-16 15:59:25.28646208 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c*_entry
.type GHC.Int.$fNumInt64_$c*_entry, @object
GHC.Int.$fNumInt64_$c*_entry:
_c4y9V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ya7
_c4ya8:
	leaq block_c4y9S_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4y9S
_c4y9T:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ya7:
	leaq GHC.Int.$fNumInt64_$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c*_entry, .-GHC.Int.$fNumInt64_$c*_entry


==================== Asm code ====================
2018-03-16 15:59:25.287143286 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c*_info
.type GHC.Int.$fNumInt64_$c*_info, @object
GHC.Int.$fNumInt64_$c*_info:
	.quad	GHC.Int.$fNumInt64_$c*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.28786297 UTC

.section .text
.align 8
_c4y9S:
_c4y9S:
	leaq block_c4y9Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4y9Y
_c4y9Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4y9S, .-_c4y9S


==================== Asm code ====================
2018-03-16 15:59:25.28849401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y9S_info:
	.quad	_c4y9S
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.289288852 UTC

.section .text
.align 8
_c4y9Y:
_c4y9Y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yac
_c4yab:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	imulq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yac:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4y9Y, .-_c4y9Y


==================== Asm code ====================
2018-03-16 15:59:25.289991575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4y9Y_info:
	.quad	_c4y9Y
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.294853982 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c-_closure
.type GHC.Int.$fNumInt64_$c-_closure, @object
GHC.Int.$fNumInt64_$c-_closure:
	.quad	GHC.Int.$fNumInt64_$c-_info


==================== Asm code ====================
2018-03-16 15:59:25.295741904 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c-_entry
.type GHC.Int.$fNumInt64_$c-_entry, @object
GHC.Int.$fNumInt64_$c-_entry:
_c4yaF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yaR
_c4yaS:
	leaq block_c4yaC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yaC
_c4yaD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yaR:
	leaq GHC.Int.$fNumInt64_$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c-_entry, .-GHC.Int.$fNumInt64_$c-_entry


==================== Asm code ====================
2018-03-16 15:59:25.296439102 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c-_info
.type GHC.Int.$fNumInt64_$c-_info, @object
GHC.Int.$fNumInt64_$c-_info:
	.quad	GHC.Int.$fNumInt64_$c-_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.297157221 UTC

.section .text
.align 8
_c4yaC:
_c4yaC:
	leaq block_c4yaI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yaI
_c4yaJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yaC, .-_c4yaC


==================== Asm code ====================
2018-03-16 15:59:25.297857076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yaC_info:
	.quad	_c4yaC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.298631464 UTC

.section .text
.align 8
_c4yaI:
_c4yaI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yaW
_c4yaV:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yaW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yaI, .-_c4yaI


==================== Asm code ====================
2018-03-16 15:59:25.299296649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yaI_info:
	.quad	_c4yaI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.303043372 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c+_closure
.type GHC.Int.$fNumInt64_$c+_closure, @object
GHC.Int.$fNumInt64_$c+_closure:
	.quad	GHC.Int.$fNumInt64_$c+_info


==================== Asm code ====================
2018-03-16 15:59:25.303917521 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$c+_entry
.type GHC.Int.$fNumInt64_$c+_entry, @object
GHC.Int.$fNumInt64_$c+_entry:
_c4ybp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ybB
_c4ybC:
	leaq block_c4ybm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ybm
_c4ybn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ybB:
	leaq GHC.Int.$fNumInt64_$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$c+_entry, .-GHC.Int.$fNumInt64_$c+_entry


==================== Asm code ====================
2018-03-16 15:59:25.30462157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$c+_info
.type GHC.Int.$fNumInt64_$c+_info, @object
GHC.Int.$fNumInt64_$c+_info:
	.quad	GHC.Int.$fNumInt64_$c+_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.305397543 UTC

.section .text
.align 8
_c4ybm:
_c4ybm:
	leaq block_c4ybs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ybs
_c4ybt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ybm, .-_c4ybm


==================== Asm code ====================
2018-03-16 15:59:25.306035739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ybm_info:
	.quad	_c4ybm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.306829444 UTC

.section .text
.align 8
_c4ybs:
_c4ybs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ybG
_c4ybF:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ybG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ybs, .-_c4ybs


==================== Asm code ====================
2018-03-16 15:59:25.307506375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ybs_info:
	.quad	_c4ybs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.31071594 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$ctoInteger_closure
.type GHC.Int.$fIntegralInt64_$ctoInteger_closure, @object
GHC.Int.$fIntegralInt64_$ctoInteger_closure:
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:59:25.311611886 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$ctoInteger_entry
.type GHC.Int.$fIntegralInt64_$ctoInteger_entry, @object
GHC.Int.$fIntegralInt64_$ctoInteger_entry:
_c4yc9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yca
_c4ycb:
	leaq block_c4yc6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yc6
_c4yc7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yca:
	leaq GHC.Int.$fIntegralInt64_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$ctoInteger_entry, .-GHC.Int.$fIntegralInt64_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:59:25.312377459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$ctoInteger_info
.type GHC.Int.$fIntegralInt64_$ctoInteger_info, @object
GHC.Int.$fIntegralInt64_$ctoInteger_info:
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.313031178 UTC

.section .text
.align 8
_c4yc6:
_c4yc6:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4yc6, .-_c4yc6


==================== Asm code ====================
2018-03-16 15:59:25.314125304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yc6_info:
	.quad	_c4yc6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.317614228 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cpopCount_closure
.type GHC.Int.$fBitsInt64_$cpopCount_closure, @object
GHC.Int.$fBitsInt64_$cpopCount_closure:
	.quad	GHC.Int.$fBitsInt64_$cpopCount_info


==================== Asm code ====================
2018-03-16 15:59:25.318509171 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cpopCount_entry
.type GHC.Int.$fBitsInt64_$cpopCount_entry, @object
GHC.Int.$fBitsInt64_$cpopCount_entry:
_c4ycx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ycL
_c4ycM:
	leaq block_c4ycu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ycu
_c4ycv:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ycL:
	leaq GHC.Int.$fBitsInt64_$cpopCount_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cpopCount_entry, .-GHC.Int.$fBitsInt64_$cpopCount_entry


==================== Asm code ====================
2018-03-16 15:59:25.319189657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cpopCount_info
.type GHC.Int.$fBitsInt64_$cpopCount_info, @object
GHC.Int.$fBitsInt64_$cpopCount_info:
	.quad	GHC.Int.$fBitsInt64_$cpopCount_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.320021056 UTC

.section .text
.align 8
_c4ycu:
_c4ycu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ycP
_c4ycO:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_popcnt64@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ycP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ycu, .-_c4ycu


==================== Asm code ====================
2018-03-16 15:59:25.320650054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ycu_info:
	.quad	_c4ycu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.324537131 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_closure
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_closure, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_closure:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_info


==================== Asm code ====================
2018-03-16 15:59:25.325440879 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_entry
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_entry, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_entry:
_c4yda:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ydm
_c4ydn:
	leaq block_c4yd7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yd7
_c4yd8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ydm:
	leaq GHC.Int.$fBitsInt64_$cunsafeShiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cunsafeShiftR_entry, .-GHC.Int.$fBitsInt64_$cunsafeShiftR_entry


==================== Asm code ====================
2018-03-16 15:59:25.326130881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftR_info
.type GHC.Int.$fBitsInt64_$cunsafeShiftR_info, @object
GHC.Int.$fBitsInt64_$cunsafeShiftR_info:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.326844459 UTC

.section .text
.align 8
_c4yd7:
_c4yd7:
	leaq block_c4ydd_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ydd
_c4yde:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yd7, .-_c4yd7


==================== Asm code ====================
2018-03-16 15:59:25.327438631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yd7_info:
	.quad	_c4yd7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.32821713 UTC

.section .text
.align 8
_c4ydd:
_c4ydd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ydr
_c4ydq:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	sarq %cl,%rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ydr:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ydd, .-_c4ydd


==================== Asm code ====================
2018-03-16 15:59:25.32896384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ydd_info:
	.quad	_c4ydd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.331018591 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt10_closure
.type GHC.Int.$fBitsInt10_closure, @object
GHC.Int.$fBitsInt10_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.33278128 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt6_closure
.type GHC.Int.$fNumInt6_closure, @object
GHC.Int.$fNumInt6_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:59:25.337469891 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftR_closure
.type GHC.Int.$fBitsInt64_$cshiftR_closure, @object
GHC.Int.$fBitsInt64_$cshiftR_closure:
	.quad	GHC.Int.$fBitsInt64_$cshiftR_info


==================== Asm code ====================
2018-03-16 15:59:25.3383436 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshiftR_entry
.type GHC.Int.$fBitsInt64_$cshiftR_entry, @object
GHC.Int.$fBitsInt64_$cshiftR_entry:
_c4ydV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ydZ
_c4ye0:
	leaq block_c4ydS_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ydS
_c4ydT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ydZ:
	leaq GHC.Int.$fBitsInt64_$cshiftR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshiftR_entry, .-GHC.Int.$fBitsInt64_$cshiftR_entry


==================== Asm code ====================
2018-03-16 15:59:25.338992245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftR_info
.type GHC.Int.$fBitsInt64_$cshiftR_info, @object
GHC.Int.$fBitsInt64_$cshiftR_info:
	.quad	GHC.Int.$fBitsInt64_$cshiftR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.339694529 UTC

.section .text
.align 8
_c4ydS:
_c4ydS:
	leaq block_c4ydY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ydY
_c4ye2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ydS, .-_c4ydS


==================== Asm code ====================
2018-03-16 15:59:25.340296947 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ydS_info:
	.quad	_c4ydS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.341170039 UTC

.section .text
.align 8
_c4ydY:
_c4ydY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ye8
_c4ye7:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4yeh
_c4yeo:
	testq %rax,%rax
	jge _c4yem
_c4yen:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yem:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yeh:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ye8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ydY, .-_c4ydY


==================== Asm code ====================
2018-03-16 15:59:25.341965733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ydY_info:
	.quad	_c4ydY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.346092213 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_closure
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_closure, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_closure:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.346993055 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_entry
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_entry, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_entry:
_c4yeS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yf4
_c4yf5:
	leaq block_c4yeP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yeP
_c4yeQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yf4:
	leaq GHC.Int.$fBitsInt64_$cunsafeShiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cunsafeShiftL_entry, .-GHC.Int.$fBitsInt64_$cunsafeShiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.347646459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cunsafeShiftL_info
.type GHC.Int.$fBitsInt64_$cunsafeShiftL_info, @object
GHC.Int.$fBitsInt64_$cunsafeShiftL_info:
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.348380544 UTC

.section .text
.align 8
_c4yeP:
_c4yeP:
	leaq block_c4yeV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yeV
_c4yeW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yeP, .-_c4yeP


==================== Asm code ====================
2018-03-16 15:59:25.348960597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yeP_info:
	.quad	_c4yeP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.349795898 UTC

.section .text
.align 8
_c4yeV:
_c4yeV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yf9
_c4yf8:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	shlq %cl,%rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yf9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yeV, .-_c4yeV


==================== Asm code ====================
2018-03-16 15:59:25.350454189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yeV_info:
	.quad	_c4yeV
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.355094422 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftL_closure
.type GHC.Int.$fBitsInt64_$cshiftL_closure, @object
GHC.Int.$fBitsInt64_$cshiftL_closure:
	.quad	GHC.Int.$fBitsInt64_$cshiftL_info


==================== Asm code ====================
2018-03-16 15:59:25.356048693 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshiftL_entry
.type GHC.Int.$fBitsInt64_$cshiftL_entry, @object
GHC.Int.$fBitsInt64_$cshiftL_entry:
_c4yfB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yfF
_c4yfG:
	leaq block_c4yfy_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yfy
_c4yfz:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yfF:
	leaq GHC.Int.$fBitsInt64_$cshiftL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshiftL_entry, .-GHC.Int.$fBitsInt64_$cshiftL_entry


==================== Asm code ====================
2018-03-16 15:59:25.356753187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshiftL_info
.type GHC.Int.$fBitsInt64_$cshiftL_info, @object
GHC.Int.$fBitsInt64_$cshiftL_info:
	.quad	GHC.Int.$fBitsInt64_$cshiftL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.357787433 UTC

.section .text
.align 8
_c4yfy:
_c4yfy:
	leaq block_c4yfE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yfE
_c4yfI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yfy, .-_c4yfy


==================== Asm code ====================
2018-03-16 15:59:25.358436015 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yfy_info:
	.quad	_c4yfy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.359223259 UTC

.section .text
.align 8
_c4yfE:
_c4yfE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yfO
_c4yfN:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4yfX
_c4yfY:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yfX:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yfO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yfE, .-_c4yfE


==================== Asm code ====================
2018-03-16 15:59:25.359918606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yfE_info:
	.quad	_c4yfE
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.362223609 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cisSigned_closure
.type GHC.Int.$fBitsInt64_$cisSigned_closure, @object
GHC.Int.$fBitsInt64_$cisSigned_closure:
	.quad	GHC.Int.$fBitsInt64_$cisSigned_info


==================== Asm code ====================
2018-03-16 15:59:25.362952856 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cisSigned_entry
.type GHC.Int.$fBitsInt64_$cisSigned_entry, @object
GHC.Int.$fBitsInt64_$cisSigned_entry:
_c4ygo:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cisSigned_entry, .-GHC.Int.$fBitsInt64_$cisSigned_entry


==================== Asm code ====================
2018-03-16 15:59:25.363573337 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cisSigned_info
.type GHC.Int.$fBitsInt64_$cisSigned_info, @object
GHC.Int.$fBitsInt64_$cisSigned_info:
	.quad	GHC.Int.$fBitsInt64_$cisSigned_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.368231629 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotate_closure
.type GHC.Int.$fBitsInt64_$crotate_closure, @object
GHC.Int.$fBitsInt64_$crotate_closure:
	.quad	GHC.Int.$fBitsInt64_$crotate_info


==================== Asm code ====================
2018-03-16 15:59:25.36912599 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotate_entry
.type GHC.Int.$fBitsInt64_$crotate_entry, @object
GHC.Int.$fBitsInt64_$crotate_entry:
_c4ygE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ygI
_c4ygJ:
	leaq block_c4ygB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ygB
_c4ygC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ygI:
	leaq GHC.Int.$fBitsInt64_$crotate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$crotate_entry, .-GHC.Int.$fBitsInt64_$crotate_entry


==================== Asm code ====================
2018-03-16 15:59:25.369845797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotate_info
.type GHC.Int.$fBitsInt64_$crotate_info, @object
GHC.Int.$fBitsInt64_$crotate_info:
	.quad	GHC.Int.$fBitsInt64_$crotate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.370629648 UTC

.section .text
.align 8
_c4ygB:
_c4ygB:
	leaq block_c4ygH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ygH
_c4ygL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ygB, .-_c4ygB


==================== Asm code ====================
2018-03-16 15:59:25.371248251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ygB_info:
	.quad	_c4ygB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.37200624 UTC

.section .text
.align 8
_c4ygH:
_c4ygH:
	movq 7(%rbx),%rax
	andl $63,%eax
	testq %rax,%rax
	jne _u4yhw
_c4yhs:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4yhw:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4yh0
	.size _c4ygH, .-_c4ygH


==================== Asm code ====================
2018-03-16 15:59:25.372677437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ygH_info:
	.quad	_c4ygH
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.37361718 UTC

.section .text
.align 8
_c4yh0:
_c4yh0:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4yhp
_c4yho:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $64,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yhp:
	movq $16,904(%r13)
	leaq block_c4ygZ_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4yh0, .-_c4yh0


==================== Asm code ====================
2018-03-16 15:59:25.374937146 UTC

.section .text
.align 8
_c4ygZ:
_c4ygZ:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4yh0
	.size _c4ygZ, .-_c4ygZ


==================== Asm code ====================
2018-03-16 15:59:25.375539882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ygZ_info:
	.quad	_c4ygZ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.380542358 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshift_closure
.type GHC.Int.$fBitsInt64_$cshift_closure, @object
GHC.Int.$fBitsInt64_$cshift_closure:
	.quad	GHC.Int.$fBitsInt64_$cshift_info


==================== Asm code ====================
2018-03-16 15:59:25.381481704 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cshift_entry
.type GHC.Int.$fBitsInt64_$cshift_entry, @object
GHC.Int.$fBitsInt64_$cshift_entry:
_c4yie:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yii
_c4yij:
	leaq block_c4yib_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yib
_c4yic:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yii:
	leaq GHC.Int.$fBitsInt64_$cshift_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cshift_entry, .-GHC.Int.$fBitsInt64_$cshift_entry


==================== Asm code ====================
2018-03-16 15:59:25.382140802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cshift_info
.type GHC.Int.$fBitsInt64_$cshift_info, @object
GHC.Int.$fBitsInt64_$cshift_info:
	.quad	GHC.Int.$fBitsInt64_$cshift_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.382857014 UTC

.section .text
.align 8
_c4yib:
_c4yib:
	leaq block_c4yih_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yih
_c4yil:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yib, .-_c4yib


==================== Asm code ====================
2018-03-16 15:59:25.383458504 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yib_info:
	.quad	_c4yib
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.384444979 UTC

.section .text
.align 8
_c4yih:
_c4yih:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yir
_c4yiq:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c4yiP
_c4yj1:
	cmpq $64,%rbx
	jge _c4yj0
_c4yiZ:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	shlq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yj0:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yiP:
	negq %rbx
	cmpq $64,%rbx
	jl _c4yiG
_c4yiN:
	testq %rax,%rax
	jge _c4yj0
_c4yiM:
	addq $-16,%r12
	leaq GHC.Int.$fNumInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yiG:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yir:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yih, .-_c4yih


==================== Asm code ====================
2018-03-16 15:59:25.385313231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yih_info:
	.quad	_c4yih
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.388507636 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplement_closure
.type GHC.Int.$fBitsInt64_$ccomplement_closure, @object
GHC.Int.$fBitsInt64_$ccomplement_closure:
	.quad	GHC.Int.$fBitsInt64_$ccomplement_info


==================== Asm code ====================
2018-03-16 15:59:25.389445865 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ccomplement_entry
.type GHC.Int.$fBitsInt64_$ccomplement_entry, @object
GHC.Int.$fBitsInt64_$ccomplement_entry:
_c4yjy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yjL
_c4yjM:
	leaq block_c4yjv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yjv
_c4yjw:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yjL:
	leaq GHC.Int.$fBitsInt64_$ccomplement_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ccomplement_entry, .-GHC.Int.$fBitsInt64_$ccomplement_entry


==================== Asm code ====================
2018-03-16 15:59:25.390143415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplement_info
.type GHC.Int.$fBitsInt64_$ccomplement_info, @object
GHC.Int.$fBitsInt64_$ccomplement_info:
	.quad	GHC.Int.$fBitsInt64_$ccomplement_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.390916387 UTC

.section .text
.align 8
_c4yjv:
_c4yjv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yjP
_c4yjO:
	movq 7(%rbx),%rax
	xorq $-1,%rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yjP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yjv, .-_c4yjv


==================== Asm code ====================
2018-03-16 15:59:25.391610826 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yjv_info:
	.quad	_c4yjv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.395582827 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cxor_closure
.type GHC.Int.$fBitsInt64_$cxor_closure, @object
GHC.Int.$fBitsInt64_$cxor_closure:
	.quad	GHC.Int.$fBitsInt64_$cxor_info


==================== Asm code ====================
2018-03-16 15:59:25.396983312 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cxor_entry
.type GHC.Int.$fBitsInt64_$cxor_entry, @object
GHC.Int.$fBitsInt64_$cxor_entry:
_c4ykb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ykw
_c4ykx:
	leaq block_c4yk8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yk8
_c4yk9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ykw:
	leaq GHC.Int.$fBitsInt64_$cxor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cxor_entry, .-GHC.Int.$fBitsInt64_$cxor_entry


==================== Asm code ====================
2018-03-16 15:59:25.39785271 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cxor_info
.type GHC.Int.$fBitsInt64_$cxor_info, @object
GHC.Int.$fBitsInt64_$cxor_info:
	.quad	GHC.Int.$fBitsInt64_$cxor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.398561355 UTC

.section .text
.align 8
_c4yk8:
_c4yk8:
	leaq block_c4yke_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yke
_c4ykf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yk8, .-_c4yk8


==================== Asm code ====================
2018-03-16 15:59:25.399143617 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yk8_info:
	.quad	_c4yk8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.399906099 UTC

.section .text
.align 8
_c4yke:
_c4yke:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ykB
_c4ykA:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	xorq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ykB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yke, .-_c4yke


==================== Asm code ====================
2018-03-16 15:59:25.400577784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yke_info:
	.quad	_c4yke
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.404382318 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.|._closure
.type GHC.Int.$fBitsInt64_$c.|._closure, @object
GHC.Int.$fBitsInt64_$c.|._closure:
	.quad	GHC.Int.$fBitsInt64_$c.|._info


==================== Asm code ====================
2018-03-16 15:59:25.405548137 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$c.|._entry
.type GHC.Int.$fBitsInt64_$c.|._entry, @object
GHC.Int.$fBitsInt64_$c.|._entry:
_c4yl4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ylp
_c4ylq:
	leaq block_c4yl1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yl1
_c4yl2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ylp:
	leaq GHC.Int.$fBitsInt64_$c.|._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$c.|._entry, .-GHC.Int.$fBitsInt64_$c.|._entry


==================== Asm code ====================
2018-03-16 15:59:25.406225602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.|._info
.type GHC.Int.$fBitsInt64_$c.|._info, @object
GHC.Int.$fBitsInt64_$c.|._info:
	.quad	GHC.Int.$fBitsInt64_$c.|._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.406950324 UTC

.section .text
.align 8
_c4yl1:
_c4yl1:
	leaq block_c4yl7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yl7
_c4yl8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yl1, .-_c4yl1


==================== Asm code ====================
2018-03-16 15:59:25.407573732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yl1_info:
	.quad	_c4yl1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.408309947 UTC

.section .text
.align 8
_c4yl7:
_c4yl7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ylu
_c4ylt:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	orq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ylu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yl7, .-_c4yl7


==================== Asm code ====================
2018-03-16 15:59:25.408958935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yl7_info:
	.quad	_c4yl7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.412826697 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.&._closure
.type GHC.Int.$fBitsInt64_$c.&._closure, @object
GHC.Int.$fBitsInt64_$c.&._closure:
	.quad	GHC.Int.$fBitsInt64_$c.&._info


==================== Asm code ====================
2018-03-16 15:59:25.41374695 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$c.&._entry
.type GHC.Int.$fBitsInt64_$c.&._entry, @object
GHC.Int.$fBitsInt64_$c.&._entry:
_c4ylX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ymi
_c4ymj:
	leaq block_c4ylU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ylU
_c4ylV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ymi:
	leaq GHC.Int.$fBitsInt64_$c.&._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$c.&._entry, .-GHC.Int.$fBitsInt64_$c.&._entry


==================== Asm code ====================
2018-03-16 15:59:25.414416338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$c.&._info
.type GHC.Int.$fBitsInt64_$c.&._info, @object
GHC.Int.$fBitsInt64_$c.&._info:
	.quad	GHC.Int.$fBitsInt64_$c.&._entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.415190533 UTC

.section .text
.align 8
_c4ylU:
_c4ylU:
	leaq block_c4ym0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ym0
_c4ym1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ylU, .-_c4ylU


==================== Asm code ====================
2018-03-16 15:59:25.41590052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ylU_info:
	.quad	_c4ylU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.417127063 UTC

.section .text
.align 8
_c4ym0:
_c4ym0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ymn
_c4ymm:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	andq (%rax),%rbx
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ymn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ym0, .-_c4ym0


==================== Asm code ====================
2018-03-16 15:59:25.417887392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ym0_info:
	.quad	_c4ym0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.421118509 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.422392839 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry:
_c4ymQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yn4
_c4yn5:
	leaq block_c4ymN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ymN
_c4ymO:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yn4:
	leaq GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry, .-GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.423086039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info
.type GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info, @object
GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.423808002 UTC

.section .text
.align 8
_c4ymN:
_c4ymN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yn8
_c4yn7:
	movq 7(%rbx),%rax
	bsf %rax,%rax
	movl $64,%ebx
	cmovne %rax,%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yn8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ymN, .-_c4ymN


==================== Asm code ====================
2018-03-16 15:59:25.424467063 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ymN_info:
	.quad	_c4ymN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.427771355 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info


==================== Asm code ====================
2018-03-16 15:59:25.428606622 UTC

.section .text
.align 8
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry:
_c4ynv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ynJ
_c4ynK:
	leaq block_c4yns_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yns
_c4ynt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ynJ:
	leaq GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry, .-GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry


==================== Asm code ====================
2018-03-16 15:59:25.429305242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info
.type GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info, @object
GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_info:
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.430129795 UTC

.section .text
.align 8
_c4yns:
_c4yns:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ynN
_c4ynM:
	movq 7(%rbx),%rax
	bsr %rax,%rax
	movl $127,%ebx
	cmovne %rax,%rbx
	xorq $63,%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ynN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yns, .-_c4yns


==================== Asm code ====================
2018-03-16 15:59:25.430822903 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yns_info:
	.quad	_c4yns
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.432657257 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt7_closure
.type GHC.Int.$fBitsInt7_closure, @object
GHC.Int.$fBitsInt7_closure:
	.quad	GHC.Types.I#_con_info
	.quad	64


==================== Asm code ====================
2018-03-16 15:59:25.435284782 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_closure
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_closure, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_closure:
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_info


==================== Asm code ====================
2018-03-16 15:59:25.436063515 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_entry
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_entry, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_entry:
_c4yo8:
	leaq GHC.Int.$fBitsInt7_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cfiniteBitSize_entry, .-GHC.Int.$fBitsInt64_$cfiniteBitSize_entry


==================== Asm code ====================
2018-03-16 15:59:25.437164356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cfiniteBitSize_info
.type GHC.Int.$fBitsInt64_$cfiniteBitSize_info, @object
GHC.Int.$fBitsInt64_$cfiniteBitSize_info:
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.440819268 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt8_closure
.type GHC.Int.eqInt8_closure, @object
GHC.Int.eqInt8_closure:
	.quad	GHC.Int.eqInt8_info


==================== Asm code ====================
2018-03-16 15:59:25.441734648 UTC

.section .text
.align 8
.globl GHC.Int.eqInt8_entry
.type GHC.Int.eqInt8_entry, @object
GHC.Int.eqInt8_entry:
_c4yon:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yor
_c4yos:
	leaq block_c4yok_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yok
_c4yol:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yor:
	leaq GHC.Int.eqInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.eqInt8_entry, .-GHC.Int.eqInt8_entry


==================== Asm code ====================
2018-03-16 15:59:25.442411395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt8_info
.type GHC.Int.eqInt8_info, @object
GHC.Int.eqInt8_info:
	.quad	GHC.Int.eqInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.443148961 UTC

.section .text
.align 8
_c4yok:
_c4yok:
	leaq block_c4yoq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yoq
_c4you:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yok, .-_c4yok


==================== Asm code ====================
2018-03-16 15:59:25.443781925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yok_info:
	.quad	_c4yok
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.444478049 UTC

.section .text
.align 8
_c4yoq:
_c4yoq:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yoq, .-_c4yoq


==================== Asm code ====================
2018-03-16 15:59:25.445091998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yoq_info:
	.quad	_c4yoq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.447192857 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt8_closure
.type GHC.Int.$fEqInt8_closure, @object
GHC.Int.$fEqInt8_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt8_closure+2
	.quad	GHC.Int.neInt8_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.450766729 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt8_closure
.type GHC.Int.gtInt8_closure, @object
GHC.Int.gtInt8_closure:
	.quad	GHC.Int.gtInt8_info


==================== Asm code ====================
2018-03-16 15:59:25.451773751 UTC

.section .text
.align 8
.globl GHC.Int.gtInt8_entry
.type GHC.Int.gtInt8_entry, @object
GHC.Int.gtInt8_entry:
_c4yp4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yp8
_c4yp9:
	leaq block_c4yp1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yp1
_c4yp2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yp8:
	leaq GHC.Int.gtInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.gtInt8_entry, .-GHC.Int.gtInt8_entry


==================== Asm code ====================
2018-03-16 15:59:25.452816221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt8_info
.type GHC.Int.gtInt8_info, @object
GHC.Int.gtInt8_info:
	.quad	GHC.Int.gtInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.454035032 UTC

.section .text
.align 8
_c4yp1:
_c4yp1:
	leaq block_c4yp7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yp7
_c4ypb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yp1, .-_c4yp1


==================== Asm code ====================
2018-03-16 15:59:25.454928825 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yp1_info:
	.quad	_c4yp1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.455918283 UTC

.section .text
.align 8
_c4yp7:
_c4yp7:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yp7, .-_c4yp7


==================== Asm code ====================
2018-03-16 15:59:25.456884454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yp7_info:
	.quad	_c4yp7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.462051159 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt8_closure
.type GHC.Int.geInt8_closure, @object
GHC.Int.geInt8_closure:
	.quad	GHC.Int.geInt8_info


==================== Asm code ====================
2018-03-16 15:59:25.463098858 UTC

.section .text
.align 8
.globl GHC.Int.geInt8_entry
.type GHC.Int.geInt8_entry, @object
GHC.Int.geInt8_entry:
_c4ypK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ypO
_c4ypP:
	leaq block_c4ypH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ypH
_c4ypI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ypO:
	leaq GHC.Int.geInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.geInt8_entry, .-GHC.Int.geInt8_entry


==================== Asm code ====================
2018-03-16 15:59:25.464142329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt8_info
.type GHC.Int.geInt8_info, @object
GHC.Int.geInt8_info:
	.quad	GHC.Int.geInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.465133317 UTC

.section .text
.align 8
_c4ypH:
_c4ypH:
	leaq block_c4ypN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ypN
_c4ypR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ypH, .-_c4ypH


==================== Asm code ====================
2018-03-16 15:59:25.466106014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ypH_info:
	.quad	_c4ypH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.46709195 UTC

.section .text
.align 8
_c4ypN:
_c4ypN:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4ypN, .-_c4ypN


==================== Asm code ====================
2018-03-16 15:59:25.468087477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ypN_info:
	.quad	_c4ypN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.47219081 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt8_closure
.type GHC.Int.ltInt8_closure, @object
GHC.Int.ltInt8_closure:
	.quad	GHC.Int.ltInt8_info


==================== Asm code ====================
2018-03-16 15:59:25.473042292 UTC

.section .text
.align 8
.globl GHC.Int.ltInt8_entry
.type GHC.Int.ltInt8_entry, @object
GHC.Int.ltInt8_entry:
_c4yqq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yqu
_c4yqv:
	leaq block_c4yqn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yqn
_c4yqo:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yqu:
	leaq GHC.Int.ltInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.ltInt8_entry, .-GHC.Int.ltInt8_entry


==================== Asm code ====================
2018-03-16 15:59:25.473764965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt8_info
.type GHC.Int.ltInt8_info, @object
GHC.Int.ltInt8_info:
	.quad	GHC.Int.ltInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.474475608 UTC

.section .text
.align 8
_c4yqn:
_c4yqn:
	leaq block_c4yqt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yqt
_c4yqx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yqn, .-_c4yqn


==================== Asm code ====================
2018-03-16 15:59:25.475108795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yqn_info:
	.quad	_c4yqn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.475806587 UTC

.section .text
.align 8
_c4yqt:
_c4yqt:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yqt, .-_c4yqt


==================== Asm code ====================
2018-03-16 15:59:25.476453508 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yqt_info:
	.quad	_c4yqt
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.480117777 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt8_closure
.type GHC.Int.leInt8_closure, @object
GHC.Int.leInt8_closure:
	.quad	GHC.Int.leInt8_info


==================== Asm code ====================
2018-03-16 15:59:25.48104997 UTC

.section .text
.align 8
.globl GHC.Int.leInt8_entry
.type GHC.Int.leInt8_entry, @object
GHC.Int.leInt8_entry:
_c4yr6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yra
_c4yrb:
	leaq block_c4yr3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yr3
_c4yr4:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yra:
	leaq GHC.Int.leInt8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.leInt8_entry, .-GHC.Int.leInt8_entry


==================== Asm code ====================
2018-03-16 15:59:25.482263493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt8_info
.type GHC.Int.leInt8_info, @object
GHC.Int.leInt8_info:
	.quad	GHC.Int.leInt8_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.483596686 UTC

.section .text
.align 8
_c4yr3:
_c4yr3:
	leaq block_c4yr9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yr9
_c4yrd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yr3, .-_c4yr3


==================== Asm code ====================
2018-03-16 15:59:25.484295917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yr3_info:
	.quad	_c4yr3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.485076014 UTC

.section .text
.align 8
_c4yr9:
_c4yr9:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yr9, .-_c4yr9


==================== Asm code ====================
2018-03-16 15:59:25.485782877 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yr9_info:
	.quad	_c4yr9
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.489760514 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$ccompare_closure
.type GHC.Int.$fOrdInt8_$ccompare_closure, @object
GHC.Int.$fOrdInt8_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt8_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:25.490652876 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$ccompare_entry
.type GHC.Int.$fOrdInt8_$ccompare_entry, @object
GHC.Int.$fOrdInt8_$ccompare_entry:
_c4yrM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yrQ
_c4yrR:
	leaq block_c4yrJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yrJ
_c4yrK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yrQ:
	leaq GHC.Int.$fOrdInt8_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$ccompare_entry, .-GHC.Int.$fOrdInt8_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:25.491353775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$ccompare_info
.type GHC.Int.$fOrdInt8_$ccompare_info, @object
GHC.Int.$fOrdInt8_$ccompare_info:
	.quad	GHC.Int.$fOrdInt8_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.492051889 UTC

.section .text
.align 8
_c4yrJ:
_c4yrJ:
	leaq block_c4yrP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yrP
_c4yrT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yrJ, .-_c4yrJ


==================== Asm code ====================
2018-03-16 15:59:25.492649284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yrJ_info:
	.quad	_c4yrJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.493519037 UTC

.section .text
.align 8
_c4yrP:
_c4yrP:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4ys8
_c4ys7:
	cmpq %rbx,%rax
	jg _c4ys4
_c4ys5:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ys8:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ys4:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yrP, .-_c4yrP


==================== Asm code ====================
2018-03-16 15:59:25.494233645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yrP_info:
	.quad	_c4yrP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.498143473 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmax_closure
.type GHC.Int.$fOrdInt8_$cmax_closure, @object
GHC.Int.$fOrdInt8_$cmax_closure:
	.quad	GHC.Int.$fOrdInt8_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:25.499033429 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$cmax_entry
.type GHC.Int.$fOrdInt8_$cmax_entry, @object
GHC.Int.$fOrdInt8_$cmax_entry:
_c4ysD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ysH
_c4ysI:
	leaq block_c4ysA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ysA
_c4ysB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ysH:
	leaq GHC.Int.$fOrdInt8_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$cmax_entry, .-GHC.Int.$fOrdInt8_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:25.499730808 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmax_info
.type GHC.Int.$fOrdInt8_$cmax_info, @object
GHC.Int.$fOrdInt8_$cmax_info:
	.quad	GHC.Int.$fOrdInt8_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.500428892 UTC

.section .text
.align 8
_c4ysA:
_c4ysA:
	leaq block_c4ysG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ysG
_c4ysK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ysA, .-_c4ysA


==================== Asm code ====================
2018-03-16 15:59:25.501086498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ysA_info:
	.quad	_c4ysA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.50224538 UTC

.section .text
.align 8
_c4ysG:
_c4ysG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4ysS
_c4ysT:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4ysS:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ysG, .-_c4ysG


==================== Asm code ====================
2018-03-16 15:59:25.502870092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ysG_info:
	.quad	_c4ysG
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.507233074 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmin_closure
.type GHC.Int.$fOrdInt8_$cmin_closure, @object
GHC.Int.$fOrdInt8_$cmin_closure:
	.quad	GHC.Int.$fOrdInt8_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:25.508080686 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt8_$cmin_entry
.type GHC.Int.$fOrdInt8_$cmin_entry, @object
GHC.Int.$fOrdInt8_$cmin_entry:
_c4ytn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ytr
_c4yts:
	leaq block_c4ytk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ytk
_c4ytl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ytr:
	leaq GHC.Int.$fOrdInt8_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt8_$cmin_entry, .-GHC.Int.$fOrdInt8_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:25.508773234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_$cmin_info
.type GHC.Int.$fOrdInt8_$cmin_info, @object
GHC.Int.$fOrdInt8_$cmin_info:
	.quad	GHC.Int.$fOrdInt8_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.509543277 UTC

.section .text
.align 8
_c4ytk:
_c4ytk:
	leaq block_c4ytq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ytq
_c4ytu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ytk, .-_c4ytk


==================== Asm code ====================
2018-03-16 15:59:25.51020231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ytk_info:
	.quad	_c4ytk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.51085204 UTC

.section .text
.align 8
_c4ytq:
_c4ytq:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4ytC
_c4ytD:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4ytC:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ytq, .-_c4ytq


==================== Asm code ====================
2018-03-16 15:59:25.511447218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ytq_info:
	.quad	_c4ytq
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.513400476 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt8_closure
.type GHC.Int.$fOrdInt8_closure, @object
GHC.Int.$fOrdInt8_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt8_closure+1
	.quad	GHC.Int.$fOrdInt8_$ccompare_closure+2
	.quad	GHC.Int.ltInt8_closure+2
	.quad	GHC.Int.leInt8_closure+2
	.quad	GHC.Int.gtInt8_closure+2
	.quad	GHC.Int.geInt8_closure+2
	.quad	GHC.Int.$fOrdInt8_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt8_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.518529352 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cinRange_closure
.type GHC.Int.$fIxInt8_$cinRange_closure, @object
GHC.Int.$fIxInt8_$cinRange_closure:
	.quad	GHC.Int.$fIxInt8_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:25.519445696 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cinRange_entry
.type GHC.Int.$fIxInt8_$cinRange_entry, @object
GHC.Int.$fIxInt8_$cinRange_entry:
_c4yu8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yuh
_c4yui:
	leaq block_c4yu5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yu5
_c4yu6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yuh:
	leaq GHC.Int.$fIxInt8_$cinRange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cinRange_entry, .-GHC.Int.$fIxInt8_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:25.520106351 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cinRange_info
.type GHC.Int.$fIxInt8_$cinRange_info, @object
GHC.Int.$fIxInt8_$cinRange_info:
	.quad	GHC.Int.$fIxInt8_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.52088253 UTC

.section .text
.align 8
_c4yu5:
_c4yu5:
	leaq block_c4yub_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yub
_c4yuc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yu5, .-_c4yu5


==================== Asm code ====================
2018-03-16 15:59:25.521571548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yu5_info:
	.quad	_c4yu5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.522307036 UTC

.section .text
.align 8
_c4yub:
_c4yub:
	leaq block_c4yug_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4yug
_c4yul:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yub, .-_c4yub


==================== Asm code ====================
2018-03-16 15:59:25.523007932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yub_info:
	.quad	_c4yub
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.52386863 UTC

.section .text
.align 8
_c4yug:
_c4yug:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4yut
_c4yux:
	movq 8(%rbp),%rbx
	leaq block_c4yuw_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4yuw
_c4yuy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yut:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yug, .-_c4yug


==================== Asm code ====================
2018-03-16 15:59:25.525113383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yug_info:
	.quad	_c4yug
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.525911283 UTC

.section .text
.align 8
_c4yuw:
_c4yuw:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yuw, .-_c4yuw


==================== Asm code ====================
2018-03-16 15:59:25.526557027 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yuw_info:
	.quad	_c4yuw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.528322451 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt7_closure
.type GHC.Int.$fNumInt7_closure, @object
GHC.Int.$fNumInt7_closure:
	.quad	GHC.Int.I8#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:25.531730041 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$csignum_closure
.type GHC.Int.$fNumInt8_$csignum_closure, @object
GHC.Int.$fNumInt8_$csignum_closure:
	.quad	GHC.Int.$fNumInt8_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:25.532624196 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$csignum_entry
.type GHC.Int.$fNumInt8_$csignum_entry, @object
GHC.Int.$fNumInt8_$csignum_entry:
_c4yvm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yvn
_c4yvo:
	leaq block_c4yvj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yvj
_c4yvk:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yvn:
	leaq GHC.Int.$fNumInt8_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$csignum_entry, .-GHC.Int.$fNumInt8_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:25.533362369 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$csignum_info
.type GHC.Int.$fNumInt8_$csignum_info, @object
GHC.Int.$fNumInt8_$csignum_info:
	.quad	GHC.Int.$fNumInt8_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.534153325 UTC

.section .text
.align 8
_c4yvj:
_c4yvj:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4yvA
_c4yvB:
	leaq GHC.Int.$fNumInt7_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yvy:
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yvA:
	testq %rax,%rax
	je _c4yvy
_c4yvx:
	leaq GHC.Int.$fNumInt9_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yvj, .-_c4yvj


==================== Asm code ====================
2018-03-16 15:59:25.534827369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yvj_info:
	.quad	_c4yvj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.53903487 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cabs_closure
.type GHC.Int.$fNumInt8_$cabs_closure, @object
GHC.Int.$fNumInt8_$cabs_closure:
	.quad	GHC.Int.$fNumInt8_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:25.539909524 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt8_$cabs_entry
.type GHC.Int.$fNumInt8_$cabs_entry, @object
GHC.Int.$fNumInt8_$cabs_entry:
_c4yvX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yvY
_c4yvZ:
	leaq block_c4yvU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yvU
_c4yvV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yvY:
	leaq GHC.Int.$fNumInt8_$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt8_$cabs_entry, .-GHC.Int.$fNumInt8_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:25.540597821 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt8_$cabs_info
.type GHC.Int.$fNumInt8_$cabs_info, @object
GHC.Int.$fNumInt8_$cabs_info:
	.quad	GHC.Int.$fNumInt8_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.541502424 UTC

.section .text
.align 8
_c4yvU:
_c4yvU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yw4
_c4yw3:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4ywg
_c4ywh:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4ywg:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yw4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yvU, .-_c4yvU


==================== Asm code ====================
2018-03-16 15:59:25.542231162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yvU_info:
	.quad	_c4yvU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.544241986 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt8_closure
.type GHC.Int.$fNumInt8_closure, @object
GHC.Int.$fNumInt8_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt8_$c+_closure+2
	.quad	GHC.Int.$fNumInt8_$c-_closure+2
	.quad	GHC.Int.$fNumInt8_$c*_closure+2
	.quad	GHC.Int.$fNumInt8_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt8_$cabs_closure+1
	.quad	GHC.Int.$fNumInt8_$csignum_closure+1
	.quad	GHC.Int.$fNumInt8_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.546716178 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt12_closure
.type GHC.Int.$fBitsInt12_closure, @object
GHC.Int.$fBitsInt12_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt11_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.549049949 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:25.550066637 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry:
_c4ywF:
	leaq GHC.Int.$fBitsInt12_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:25.550995359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt8_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt8_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.556287308 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbit_closure
.type GHC.Int.$fBitsInt8_$cbit_closure, @object
GHC.Int.$fBitsInt8_$cbit_closure:
	.quad	GHC.Int.$fBitsInt8_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:25.557649271 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cbit_entry
.type GHC.Int.$fBitsInt8_$cbit_entry, @object
GHC.Int.$fBitsInt8_$cbit_entry:
_c4ywU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ywV
_c4ywW:
	leaq block_c4ywR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ywR
_c4ywS:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ywV:
	leaq GHC.Int.$fBitsInt8_$cbit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cbit_entry, .-GHC.Int.$fBitsInt8_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:25.558682794 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cbit_info
.type GHC.Int.$fBitsInt8_$cbit_info, @object
GHC.Int.$fBitsInt8_$cbit_info:
	.quad	GHC.Int.$fBitsInt8_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.559941574 UTC

.section .text
.align 8
_c4ywR:
_c4ywR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yx1
_c4yx0:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4yxd
_c4yxe:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yxd:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yx1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ywR, .-_c4ywR


==================== Asm code ====================
2018-03-16 15:59:25.561144513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ywR_info:
	.quad	_c4ywR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.56823754 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ctestBit_closure
.type GHC.Int.$fBitsInt8_$ctestBit_closure, @object
GHC.Int.$fBitsInt8_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt8_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:25.569382587 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ctestBit_entry
.type GHC.Int.$fBitsInt8_$ctestBit_entry, @object
GHC.Int.$fBitsInt8_$ctestBit_entry:
_c4yxD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yxH
_c4yxI:
	leaq block_c4yxA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yxA
_c4yxB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yxH:
	leaq GHC.Int.$fBitsInt8_$ctestBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ctestBit_entry, .-GHC.Int.$fBitsInt8_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.57039136 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ctestBit_info
.type GHC.Int.$fBitsInt8_$ctestBit_info, @object
GHC.Int.$fBitsInt8_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt8_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.57136896 UTC

.section .text
.align 8
_c4yxA:
_c4yxA:
	leaq block_c4yxG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yxG
_c4yxK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yxA, .-_c4yxA


==================== Asm code ====================
2018-03-16 15:59:25.572166091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yxA_info:
	.quad	_c4yxA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.573359764 UTC

.section .text
.align 8
_c4yxG:
_c4yxG:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4yyo
_c4yyn:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4yyo
_c4yyc:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yyo:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yxG, .-_c4yxG


==================== Asm code ====================
2018-03-16 15:59:25.57486769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yxG_info:
	.quad	_c4yxG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.581625235 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateR_closure
.type GHC.Int.$fBitsInt8_$crotateR_closure, @object
GHC.Int.$fBitsInt8_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt8_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:25.582765987 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotateR_entry
.type GHC.Int.$fBitsInt8_$crotateR_entry, @object
GHC.Int.$fBitsInt8_$crotateR_entry:
_c4yyW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yz0
_c4yz1:
	leaq block_c4yyT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yyT
_c4yyU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yz0:
	leaq GHC.Int.$fBitsInt8_$crotateR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$crotateR_entry, .-GHC.Int.$fBitsInt8_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:25.583746064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateR_info
.type GHC.Int.$fBitsInt8_$crotateR_info, @object
GHC.Int.$fBitsInt8_$crotateR_info:
	.quad	GHC.Int.$fBitsInt8_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.584726135 UTC

.section .text
.align 8
_c4yyT:
_c4yyT:
	leaq block_c4yyZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yyZ
_c4yz3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yyT, .-_c4yyT


==================== Asm code ====================
2018-03-16 15:59:25.585638972 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yyT_info:
	.quad	_c4yyT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.586603778 UTC

.section .text
.align 8
_c4yyZ:
_c4yyZ:
	movq 7(%rbx),%rax
	negq %rax
	andl $7,%eax
	testq %rax,%rax
	jne _u4yzX
_c4yzT:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4yzX:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4yzl
	.size _c4yyZ, .-_c4yyZ


==================== Asm code ====================
2018-03-16 15:59:25.587476357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yyZ_info:
	.quad	_c4yyZ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.588622642 UTC

.section .text
.align 8
_c4yzl:
_c4yzl:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4yzQ
_c4yzP:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movzbl %bl,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $8,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yzQ:
	movq $16,904(%r13)
	leaq block_c4yzk_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4yzl, .-_c4yzl


==================== Asm code ====================
2018-03-16 15:59:25.58972843 UTC

.section .text
.align 8
_c4yzk:
_c4yzk:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4yzl
	.size _c4yzk, .-_c4yzk


==================== Asm code ====================
2018-03-16 15:59:25.590296702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yzk_info:
	.quad	_c4yzk
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.594666047 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplementBit_closure
.type GHC.Int.$fBitsInt8_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt8_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:25.595980167 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$ccomplementBit_entry
.type GHC.Int.$fBitsInt8_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt8_$ccomplementBit_entry:
_c4yAH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yAL
_c4yAM:
	leaq block_c4yAE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yAE
_c4yAF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yAL:
	leaq GHC.Int.$fBitsInt8_$ccomplementBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$ccomplementBit_entry, .-GHC.Int.$fBitsInt8_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.59717408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$ccomplementBit_info
.type GHC.Int.$fBitsInt8_$ccomplementBit_info, @object
GHC.Int.$fBitsInt8_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.598486699 UTC

.section .text
.align 8
_c4yAE:
_c4yAE:
	leaq block_c4yAK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yAK
_c4yAO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yAE, .-_c4yAE


==================== Asm code ====================
2018-03-16 15:59:25.599146699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yAE_info:
	.quad	_c4yAE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.600520981 UTC

.section .text
.align 8
_c4yAK:
_c4yAK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yAU
_c4yAT:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4yBi
_c4yBj:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4yBi:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yAU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yAK, .-_c4yAK


==================== Asm code ====================
2018-03-16 15:59:25.601359593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yAK_info:
	.quad	_c4yAK
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.605601115 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cclearBit_closure
.type GHC.Int.$fBitsInt8_$cclearBit_closure, @object
GHC.Int.$fBitsInt8_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt8_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:25.606492013 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$cclearBit_entry
.type GHC.Int.$fBitsInt8_$cclearBit_entry, @object
GHC.Int.$fBitsInt8_$cclearBit_entry:
_c4yBR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yBV
_c4yBW:
	leaq block_c4yBO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yBO
_c4yBP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yBV:
	leaq GHC.Int.$fBitsInt8_$cclearBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$cclearBit_entry, .-GHC.Int.$fBitsInt8_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.607192693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$cclearBit_info
.type GHC.Int.$fBitsInt8_$cclearBit_info, @object
GHC.Int.$fBitsInt8_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt8_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.607922905 UTC

.section .text
.align 8
_c4yBO:
_c4yBO:
	leaq block_c4yBU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yBU
_c4yBY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yBO, .-_c4yBO


==================== Asm code ====================
2018-03-16 15:59:25.608545186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yBO_info:
	.quad	_c4yBO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.609427367 UTC

.section .text
.align 8
_c4yBU:
_c4yBU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yC4
_c4yC3:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4yCv
_c4yCH:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yCv:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movsbq %dl,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yC4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yBU, .-_c4yBU


==================== Asm code ====================
2018-03-16 15:59:25.61020386 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yBU_info:
	.quad	_c4yBU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.614622824 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$csetBit_closure
.type GHC.Int.$fBitsInt8_$csetBit_closure, @object
GHC.Int.$fBitsInt8_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt8_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:25.615448719 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$csetBit_entry
.type GHC.Int.$fBitsInt8_$csetBit_entry, @object
GHC.Int.$fBitsInt8_$csetBit_entry:
_c4yDh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yDl
_c4yDm:
	leaq block_c4yDe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yDe
_c4yDf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yDl:
	leaq GHC.Int.$fBitsInt8_$csetBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt8_$csetBit_entry, .-GHC.Int.$fBitsInt8_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.616127905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$csetBit_info
.type GHC.Int.$fBitsInt8_$csetBit_info, @object
GHC.Int.$fBitsInt8_$csetBit_info:
	.quad	GHC.Int.$fBitsInt8_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.616859926 UTC

.section .text
.align 8
_c4yDe:
_c4yDe:
	leaq block_c4yDk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yDk
_c4yDo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yDe, .-_c4yDe


==================== Asm code ====================
2018-03-16 15:59:25.617561628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yDe_info:
	.quad	_c4yDe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.618431306 UTC

.section .text
.align 8
_c4yDk:
_c4yDk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yDu
_c4yDt:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4yDS
_c4yDT:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4yDS:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movsbq %bl,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yDu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yDk, .-_c4yDk


==================== Asm code ====================
2018-03-16 15:59:25.619223047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yDk_info:
	.quad	_c4yDk
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.621973214 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateL_closure
.type GHC.Int.$fBitsInt8_$crotateL_closure, @object
GHC.Int.$fBitsInt8_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt8_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:25.622596298 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt8_$crotateL_entry
.type GHC.Int.$fBitsInt8_$crotateL_entry, @object
GHC.Int.$fBitsInt8_$crotateL_entry:
_c4yEo:
	jmp GHC.Int.$fBitsInt8_$crotate_entry
	.size GHC.Int.$fBitsInt8_$crotateL_entry, .-GHC.Int.$fBitsInt8_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:25.623176783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_$crotateL_info
.type GHC.Int.$fBitsInt8_$crotateL_info, @object
GHC.Int.$fBitsInt8_$crotateL_info:
	.quad	GHC.Int.$fBitsInt8_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.625476562 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt8_closure
.type GHC.Int.$fBitsInt8_closure, @object
GHC.Int.$fBitsInt8_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt8_closure+1
	.quad	GHC.Int.$fBitsInt8_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt8_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt8_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt8_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt8_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt13_closure+1
	.quad	GHC.Int.$fBitsInt8_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt8_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt8_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt8_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt8_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt8_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt8_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt8_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt8_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.627321461 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt8_closure
.type GHC.Int.$fFiniteBitsInt8_closure, @object
GHC.Int.$fFiniteBitsInt8_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt8_closure+1
	.quad	GHC.Int.$fBitsInt8_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.635228828 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_go_closure
.type GHC.Int.$fReadInt8_go_closure, @object
GHC.Int.$fReadInt8_go_closure:
	.quad	GHC.Int.$fReadInt8_go_info


==================== Asm code ====================
2018-03-16 15:59:25.636389539 UTC

.section .text
.align 8
sat_s4vQz_entry:
_c4yEQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yER
_c4yES:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt8_go_entry
_c4yER:
	jmp *-16(%r13)
	.size sat_s4vQz_entry, .-sat_s4vQz_entry


==================== Asm code ====================
2018-03-16 15:59:25.637224298 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vQz_info:
	.quad	sat_s4vQz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:25.638253968 UTC

.section .text
.align 8
sat_s4vQx_entry:
_c4yF0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yF7
_c4yF8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c4yEX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4yEX
_c4yEY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yF7:
	jmp *-16(%r13)
	.size sat_s4vQx_entry, .-sat_s4vQx_entry


==================== Asm code ====================
2018-03-16 15:59:25.639168389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vQx_info:
	.quad	sat_s4vQx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:25.640215567 UTC

.section .text
.align 8
_c4yEX:
_c4yEX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yFb
_c4yFa:
	movq 7(%rbx),%rax
	movsbq %al,%rax
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yFb:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yEX, .-_c4yEX


==================== Asm code ====================
2018-03-16 15:59:25.641161381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yEX_info:
	.quad	_c4yEX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.642758536 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_go_entry
.type GHC.Int.$fReadInt8_go_entry, @object
GHC.Int.$fReadInt8_go_entry:
_c4yFh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yFi
_c4yFj:
	leaq block_c4yEB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yEB
_c4yEC:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yFi:
	leaq GHC.Int.$fReadInt8_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt8_go_entry, .-GHC.Int.$fReadInt8_go_entry


==================== Asm code ====================
2018-03-16 15:59:25.644204659 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_go_info
.type GHC.Int.$fReadInt8_go_info, @object
GHC.Int.$fReadInt8_go_info:
	.quad	GHC.Int.$fReadInt8_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.645381323 UTC

.section .text
.align 8
_c4yEB:
_c4yEB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4yFe
_c4yFf:
	leaq block_c4yEH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yEH
_c4yEI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yFe:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yEB, .-_c4yEB


==================== Asm code ====================
2018-03-16 15:59:25.646318351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yEB_info:
	.quad	_c4yEB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.64739926 UTC

.section .text
.align 8
_c4yEH:
_c4yEH:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4yFr
_c4yFq:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s4vQz_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	leaq sat_s4vQx_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yFr:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yEH, .-_c4yEH


==================== Asm code ====================
2018-03-16 15:59:25.648150547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yEH_info:
	.quad	_c4yEH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.65150219 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadsPrec_closure
.type GHC.Int.$fReadInt8_$creadsPrec_closure, @object
GHC.Int.$fReadInt8_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt8_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.652396334 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_$creadsPrec_entry
.type GHC.Int.$fReadInt8_$creadsPrec_entry, @object
GHC.Int.$fReadInt8_$creadsPrec_entry:
_c4yGk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yGo
_c4yGp:
	leaq block_c4yGi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rsi,%rax
	movq %r14,%rsi
	movq GHC.Read.$fReadInt2_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Read.$fReadInt_$sreadNumber_entry@gotpcrel(%rip)
_c4yGo:
	leaq GHC.Int.$fReadInt8_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt8_$creadsPrec_entry, .-GHC.Int.$fReadInt8_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:25.653079865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadsPrec_info
.type GHC.Int.$fReadInt8_$creadsPrec_info, @object
GHC.Int.$fReadInt8_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt8_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4wm5_srt+472


==================== Asm code ====================
2018-03-16 15:59:25.653808741 UTC

.section .text
.align 8
_c4yGi:
_c4yGi:
	movq 8(%rbp),%rax
	leaq block_c4yGn_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size _c4yGi, .-_c4yGi


==================== Asm code ====================
2018-03-16 15:59:25.654421805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yGi_info:
	.quad	_c4yGi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.655026061 UTC

.section .text
.align 8
_c4yGn:
_c4yGn:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt8_go_entry
	.size _c4yGn, .-_c4yGn


==================== Asm code ====================
2018-03-16 15:59:25.655599928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yGn_info:
	.quad	_c4yGn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.659485186 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt13_closure
.type GHC.Int.$fReadInt13_closure, @object
GHC.Int.$fReadInt13_closure:
	.quad	GHC.Int.$fReadInt13_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.660218091 UTC

.section .text
.align 8
sat_s4vQG_entry:
_c4yGT:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt8_$creadsPrec_entry
	.size sat_s4vQG_entry, .-sat_s4vQG_entry


==================== Asm code ====================
2018-03-16 15:59:25.660805496 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vQG_info:
	.quad	sat_s4vQG_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4wm5_srt+488


==================== Asm code ====================
2018-03-16 15:59:25.661663871 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt13_entry
.type GHC.Int.$fReadInt13_entry, @object
GHC.Int.$fReadInt13_entry:
_c4yGZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yH0
_c4yH1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yH3
_c4yH2:
	leaq sat_s4vQG_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c4yGW_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4yH3:
	movq $16,904(%r13)
_c4yH0:
	leaq GHC.Int.$fReadInt13_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt13_entry, .-GHC.Int.$fReadInt13_entry


==================== Asm code ====================
2018-03-16 15:59:25.662425476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt13_info
.type GHC.Int.$fReadInt13_info, @object
GHC.Int.$fReadInt13_info:
	.quad	GHC.Int.$fReadInt13_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+488


==================== Asm code ====================
2018-03-16 15:59:25.663208609 UTC

.section .text
.align 8
_c4yGW:
_c4yGW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yH6
_c4yH5:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yH6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yGW, .-_c4yGW


==================== Asm code ====================
2018-03-16 15:59:25.663908833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yGW_info:
	.quad	_c4yGW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.666156367 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt1_closure
.type GHC.Int.$fIxInt1_closure, @object
GHC.Int.$fIxInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.668874526 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt12_closure
.type GHC.Int.$fReadInt12_closure, @object
GHC.Int.$fReadInt12_closure:
	.quad	GHC.Int.$fReadInt12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.669841288 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt12_entry
.type GHC.Int.$fReadInt12_entry, @object
GHC.Int.$fReadInt12_entry:
_c4yHt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yHu
_c4yHv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4yHs
_c4yHr:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt13_closure+2(%rip),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c4yHu:
	jmp *-16(%r13)
_c4yHs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt12_entry, .-GHC.Int.$fReadInt12_entry


==================== Asm code ====================
2018-03-16 15:59:25.670552256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt12_info
.type GHC.Int.$fReadInt12_info, @object
GHC.Int.$fReadInt12_info:
	.quad	GHC.Int.$fReadInt12_entry
	.quad	0
	.quad	12884901909
	.quad	S4wm5_srt+496


==================== Asm code ====================
2018-03-16 15:59:25.672691766 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadList_closure
.type GHC.Int.$fReadInt8_$creadList_closure, @object
GHC.Int.$fReadInt8_$creadList_closure:
	.quad	GHC.Int.$fReadInt8_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.673494437 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt8_$creadList_entry
.type GHC.Int.$fReadInt8_$creadList_entry, @object
GHC.Int.$fReadInt8_$creadList_entry:
_c4yHM:
	movq %r14,%rsi
	leaq GHC.Int.$fReadInt12_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Int.$fReadInt8_$creadList_entry, .-GHC.Int.$fReadInt8_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:25.674139893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt8_$creadList_info
.type GHC.Int.$fReadInt8_$creadList_info, @object
GHC.Int.$fReadInt8_$creadList_info:
	.quad	GHC.Int.$fReadInt8_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4wm5_srt+512


==================== Asm code ====================
2018-03-16 15:59:25.67710848 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt11_closure
.type GHC.Int.$fReadInt11_closure, @object
GHC.Int.$fReadInt11_closure:
	.quad	GHC.Int.$fReadInt11_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.677865448 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt11_entry
.type GHC.Int.$fReadInt11_entry, @object
GHC.Int.$fReadInt11_entry:
_c4yI0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yI1
_c4yI2:
	leaq block_c4yHX_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt8_$creadList_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4yI1:
	leaq GHC.Int.$fReadInt11_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt11_entry, .-GHC.Int.$fReadInt11_entry


==================== Asm code ====================
2018-03-16 15:59:25.678562394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt11_info
.type GHC.Int.$fReadInt11_info, @object
GHC.Int.$fReadInt11_info:
	.quad	GHC.Int.$fReadInt11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+520


==================== Asm code ====================
2018-03-16 15:59:25.67928987 UTC

.section .text
.align 8
_c4yHX:
_c4yHX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yI5
_c4yI4:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yI5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yHX, .-_c4yHX


==================== Asm code ====================
2018-03-16 15:59:25.679945802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yHX_info:
	.quad	_c4yHX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.681729922 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt8_closure
.type GHC.Int.$fReadInt8_closure, @object
GHC.Int.$fReadInt8_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt8_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt8_$creadList_closure+1
	.quad	GHC.Int.$fReadInt13_closure+2
	.quad	GHC.Int.$fReadInt11_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.688002178 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquot_closure
.type GHC.Int.$fIntegralInt8_$cquot_closure, @object
GHC.Int.$fIntegralInt8_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt8_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.689214901 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cquot_entry
.type GHC.Int.$fIntegralInt8_$cquot_entry, @object
GHC.Int.$fIntegralInt8_$cquot_entry:
_c4yIp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yIt
_c4yIu:
	leaq block_c4yIm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yIm
_c4yIn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yIt:
	leaq GHC.Int.$fIntegralInt8_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cquot_entry, .-GHC.Int.$fIntegralInt8_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:25.689967881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquot_info
.type GHC.Int.$fIntegralInt8_$cquot_info, @object
GHC.Int.$fIntegralInt8_$cquot_info:
	.quad	GHC.Int.$fIntegralInt8_$cquot_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.690698007 UTC

.section .text
.align 8
_c4yIm:
_c4yIm:
	leaq block_c4yIs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yIs
_c4yIw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yIm, .-_c4yIm


==================== Asm code ====================
2018-03-16 15:59:25.691309713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yIm_info:
	.quad	_c4yIm
	.quad	1
	.quad	12884901918
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.692307501 UTC

.section .text
.align 8
_c4yIs:
_c4yIs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yIC
_c4yIB:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4yJ3
_c4yJ1:
	cmpq $-128,%rax
	je _c4yJ0
_c4yIZ:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4yJ3:
	testq %rbx,%rbx
	jne _c4yIN
_c4yJ2:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yJ0:
	addq $-16,%r12
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yIN:
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	cqto
	idivq %rbx
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yIC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yIs, .-_c4yIs


==================== Asm code ====================
2018-03-16 15:59:25.693059177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yIs_info:
	.quad	_c4yIs
	.quad	65
	.quad	12884901918
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.697309761 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$crem_closure
.type GHC.Int.$fIntegralInt8_$crem_closure, @object
GHC.Int.$fIntegralInt8_$crem_closure:
	.quad	GHC.Int.$fIntegralInt8_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.69823257 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$crem_entry
.type GHC.Int.$fIntegralInt8_$crem_entry, @object
GHC.Int.$fIntegralInt8_$crem_entry:
_c4yJB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yJF
_c4yJG:
	leaq block_c4yJy_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yJy
_c4yJz:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yJF:
	leaq GHC.Int.$fIntegralInt8_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$crem_entry, .-GHC.Int.$fIntegralInt8_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:25.698943335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$crem_info
.type GHC.Int.$fIntegralInt8_$crem_info, @object
GHC.Int.$fIntegralInt8_$crem_info:
	.quad	GHC.Int.$fIntegralInt8_$crem_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.699639237 UTC

.section .text
.align 8
_c4yJy:
_c4yJy:
	leaq block_c4yJE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yJE
_c4yJI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yJy, .-_c4yJy


==================== Asm code ====================
2018-03-16 15:59:25.700253235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yJy_info:
	.quad	_c4yJy
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.701104191 UTC

.section .text
.align 8
_c4yJE:
_c4yJE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yJO
_c4yJN:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4yJZ
_c4yK0:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yJZ:
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movsbq %dl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yJO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yJE, .-_c4yJE


==================== Asm code ====================
2018-03-16 15:59:25.701964584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yJE_info:
	.quad	_c4yJE
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.706083003 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv3_closure
.type GHC.Int.$w$cdiv3_closure, @object
GHC.Int.$w$cdiv3_closure:
	.quad	GHC.Int.$w$cdiv3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.707634153 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv3_entry
.type GHC.Int.$w$cdiv3_entry, @object
GHC.Int.$w$cdiv3_entry:
_c4yKv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yKw
_c4yKx:
	cmpq $-1,%rsi
	je _c4yKt
_u4yKR:
	testq %rsi,%rsi
	je _c4yKu
_c4yKs:
	leaq block_c4yKz_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4yKQ:
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yKt:
	cmpq $-128,%r14
	je _c4yKQ
_c4yKO:
	leaq block_c4yKI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4yKw:
	leaq GHC.Int.$w$cdiv3_closure(%rip),%rbx
	jmp *-8(%r13)
_c4yKu:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdiv3_entry, .-GHC.Int.$w$cdiv3_entry


==================== Asm code ====================
2018-03-16 15:59:25.708488511 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv3_info
.type GHC.Int.$w$cdiv3_info, @object
GHC.Int.$w$cdiv3_info:
	.quad	GHC.Int.$w$cdiv3_entry
	.quad	0
	.quad	81604378638
	.quad	8589934604
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.709120308 UTC

.section .text
.align 8
_c4yKI:
_c4yKI:
	movsbq %bl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yKI, .-_c4yKI


==================== Asm code ====================
2018-03-16 15:59:25.709725631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yKI_info:
	.quad	_c4yKI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.71036079 UTC

.section .text
.align 8
_c4yKz:
_c4yKz:
	movsbq %bl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yKz, .-_c4yKz


==================== Asm code ====================
2018-03-16 15:59:25.710962372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yKz_info:
	.quad	_c4yKz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.714922424 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdiv_closure
.type GHC.Int.$fIntegralInt8_$cdiv_closure, @object
GHC.Int.$fIntegralInt8_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt8_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.715713208 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cdiv_entry
.type GHC.Int.$fIntegralInt8_$cdiv_entry, @object
GHC.Int.$fIntegralInt8_$cdiv_entry:
_c4yLg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yLt
_c4yLu:
	leaq block_c4yLd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yLd
_c4yLe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yLt:
	leaq GHC.Int.$fIntegralInt8_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cdiv_entry, .-GHC.Int.$fIntegralInt8_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:25.716382023 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdiv_info
.type GHC.Int.$fIntegralInt8_$cdiv_info, @object
GHC.Int.$fIntegralInt8_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt8_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+568


==================== Asm code ====================
2018-03-16 15:59:25.717076721 UTC

.section .text
.align 8
_c4yLd:
_c4yLd:
	leaq block_c4yLj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yLj
_c4yLk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yLd, .-_c4yLd


==================== Asm code ====================
2018-03-16 15:59:25.717723568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yLd_info:
	.quad	_c4yLd
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+568


==================== Asm code ====================
2018-03-16 15:59:25.718357718 UTC

.section .text
.align 8
_c4yLj:
_c4yLj:
	movq 8(%rbp),%rax
	leaq block_c4yLo_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv3_entry
	.size _c4yLj, .-_c4yLj


==================== Asm code ====================
2018-03-16 15:59:25.718950883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yLj_info:
	.quad	_c4yLj
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+568


==================== Asm code ====================
2018-03-16 15:59:25.719662979 UTC

.section .text
.align 8
_c4yLo:
_c4yLo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yLz
_c4yLy:
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yLz:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4yLo, .-_c4yLo


==================== Asm code ====================
2018-03-16 15:59:25.720283254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yLo_info:
	.quad	_c4yLo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.724743715 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cmod_closure
.type GHC.Int.$fIntegralInt8_$cmod_closure, @object
GHC.Int.$fIntegralInt8_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt8_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.725585139 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cmod_entry
.type GHC.Int.$fIntegralInt8_$cmod_entry, @object
GHC.Int.$fIntegralInt8_$cmod_entry:
_c4yM4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yM8
_c4yM9:
	leaq block_c4yM1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yM1
_c4yM2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yM8:
	leaq GHC.Int.$fIntegralInt8_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cmod_entry, .-GHC.Int.$fIntegralInt8_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:25.726254545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cmod_info
.type GHC.Int.$fIntegralInt8_$cmod_info, @object
GHC.Int.$fIntegralInt8_$cmod_info:
	.quad	GHC.Int.$fIntegralInt8_$cmod_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.726955992 UTC

.section .text
.align 8
_c4yM1:
_c4yM1:
	leaq block_c4yM7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yM7
_c4yMb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yM1, .-_c4yM1


==================== Asm code ====================
2018-03-16 15:59:25.728027374 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yM1_info:
	.quad	_c4yM1
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.728824078 UTC

.section .text
.align 8
_c4yM7:
_c4yM7:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4yMr
_c4yMv:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yMr:
	movq 8(%rbp),%rbx
	leaq block_c4yMi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _c4yM7, .-_c4yM7


==================== Asm code ====================
2018-03-16 15:59:25.729522698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yM7_info:
	.quad	_c4yM7
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.730238621 UTC

.section .text
.align 8
_c4yMi:
_c4yMi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yMu
_c4yMt:
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movsbq %bl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yMu:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4yMi, .-_c4yMi


==================== Asm code ====================
2018-03-16 15:59:25.730896312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yMi_info:
	.quad	_c4yMi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.732532131 UTC

.section .data
.align 8
.align 1
lvl6_r4kPx_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt13_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.737795143 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquotRem_closure
.type GHC.Int.$fIntegralInt8_$cquotRem_closure, @object
GHC.Int.$fIntegralInt8_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.738634852 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cquotRem_entry
.type GHC.Int.$fIntegralInt8_$cquotRem_entry, @object
GHC.Int.$fIntegralInt8_$cquotRem_entry:
_c4yN3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yN7
_c4yN8:
	leaq block_c4yN0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yN0
_c4yN1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yN7:
	leaq GHC.Int.$fIntegralInt8_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cquotRem_entry, .-GHC.Int.$fIntegralInt8_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:25.739271414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cquotRem_info
.type GHC.Int.$fIntegralInt8_$cquotRem_info, @object
GHC.Int.$fIntegralInt8_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_entry
	.quad	0
	.quad	1653562408974
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.73995491 UTC

.section .text
.align 8
_c4yN0:
_c4yN0:
	leaq block_c4yN6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yN6
_c4yNa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yN0, .-_c4yN0


==================== Asm code ====================
2018-03-16 15:59:25.740552705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yN0_info:
	.quad	_c4yN0
	.quad	1
	.quad	1103806595102
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.741741039 UTC

.section .text
.align 8
_c4yN6:
_c4yN6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4yNg
_c4yNf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4yNL
_c4yNJ:
	cmpq $-128,%rax
	je _c4yNI
_c4yNH:
	movq $-1,%rbx
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movsbq %dl,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movsbq %al,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4yNL:
	testq %rbx,%rbx
	jne _c4yNt
_c4yNK:
	addq $-56,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4yNI:
	addq $-56,%r12
	leaq lvl6_r4kPx_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yNt:
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movsbq %dl,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movsbq %al,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yNg:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yN6, .-_c4yN6


==================== Asm code ====================
2018-03-16 15:59:25.742715113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yN6_info:
	.quad	_c4yN6
	.quad	65
	.quad	1103806595102
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.750196969 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod3_closure
.type GHC.Int.$w$cdivMod3_closure, @object
GHC.Int.$w$cdivMod3_closure:
	.quad	GHC.Int.$w$cdivMod3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.751048663 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod3_entry
.type GHC.Int.$w$cdivMod3_entry, @object
GHC.Int.$w$cdivMod3_entry:
_c4yOx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yOy
_c4yOz:
	testq %rsi,%rsi
	je _c4yOw
_c4yOv:
	cmpq $-1,%rsi
	je _c4yR2
_u4yR3:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4yOE
_c4yR2:
	cmpq $-128,%r14
	je _c4yR1
_u4yR4:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4yOE
_c4yR1:
	leaq GHC.Int.$fBitsInt13_closure+1(%rip),%r14
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4yOy:
	leaq GHC.Int.$w$cdivMod3_closure(%rip),%rbx
	jmp *-8(%r13)
_c4yOw:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdivMod3_entry, .-GHC.Int.$w$cdivMod3_entry


==================== Asm code ====================
2018-03-16 15:59:25.751792074 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod3_info
.type GHC.Int.$w$cdivMod3_info, @object
GHC.Int.$w$cdivMod3_info:
	.quad	GHC.Int.$w$cdivMod3_entry
	.quad	0
	.quad	2211908157454
	.quad	8589934604
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:25.7536318 UTC

.section .text
.align 8
_c4yOE:
_c4yOE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4yOI
_c4yOH:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4yPB
_c4yQS:
	testq %rbx,%rbx
	jge _c4yQv
_c4yQR:
	decq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yQv:
	testq %rax,%rax
	jge _c4yPS
_c4yQt:
	testq %rbx,%rbx
	jle _c4yQ6
_c4yQs:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yQ6:
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yPS:
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yPB:
	testq %rax,%rax
	jge _c4yOY
_c4yPz:
	testq %rbx,%rbx
	jle _c4yPc
_c4yPy:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movsbq %bl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yPc:
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yOY:
	cqto
	idivq %rbx
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movsbq %dl,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I8#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movsbq %al,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yOI:
	movq $32,904(%r13)
	leaq block_c4yOE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c4yOE, .-_c4yOE


==================== Asm code ====================
2018-03-16 15:59:25.754860413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yOE_info:
	.quad	_c4yOE
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.75884553 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdivMod_closure
.type GHC.Int.$fIntegralInt8_$cdivMod_closure, @object
GHC.Int.$fIntegralInt8_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.759635544 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt8_$cdivMod_entry
.type GHC.Int.$fIntegralInt8_$cdivMod_entry, @object
GHC.Int.$fIntegralInt8_$cdivMod_entry:
_c4ySh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ySs
_c4ySt:
	leaq block_c4ySe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ySe
_c4ySf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ySs:
	leaq GHC.Int.$fIntegralInt8_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt8_$cdivMod_entry, .-GHC.Int.$fIntegralInt8_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:25.760300486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_$cdivMod_info
.type GHC.Int.$fIntegralInt8_$cdivMod_info, @object
GHC.Int.$fIntegralInt8_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+608


==================== Asm code ====================
2018-03-16 15:59:25.761024998 UTC

.section .text
.align 8
_c4ySe:
_c4ySe:
	leaq block_c4ySk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ySk
_c4ySl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ySe, .-_c4ySe


==================== Asm code ====================
2018-03-16 15:59:25.761697694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ySe_info:
	.quad	_c4ySe
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+608


==================== Asm code ====================
2018-03-16 15:59:25.762395649 UTC

.section .text
.align 8
_c4ySk:
_c4ySk:
	movq 8(%rbp),%rax
	leaq block_c4ySp_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod3_entry
	.size _c4ySk, .-_c4ySk


==================== Asm code ====================
2018-03-16 15:59:25.763004914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ySk_info:
	.quad	_c4ySk
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+608


==================== Asm code ====================
2018-03-16 15:59:25.763748972 UTC

.section .text
.align 8
_c4ySp:
_c4ySp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4ySy
_c4ySx:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ySy:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4ySp, .-_c4ySp


==================== Asm code ====================
2018-03-16 15:59:25.764421324 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ySp_info:
	.quad	_c4ySp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.766546232 UTC

.section .data
.align 8
.align 1
sat_s4vTh_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:25.768762327 UTC

.section .data
.align 8
.align 1
sat_s4vTi_closure:
	.quad	:_con_info
	.quad	sat_s4vTh_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.771573766 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt1_closure
.type GHC.Int.$fRealInt1_closure, @object
GHC.Int.$fRealInt1_closure:
	.quad	GHC.Int.$fRealInt1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.772561067 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt1_entry
.type GHC.Int.$fRealInt1_entry, @object
GHC.Int.$fRealInt1_entry:
_c4yT4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yT5
_c4yT6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4yT3
_c4yT2:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s4vTi_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c4yT5:
	jmp *-16(%r13)
_c4yT3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fRealInt1_entry, .-GHC.Int.$fRealInt1_entry


==================== Asm code ====================
2018-03-16 15:59:25.773336496 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt1_info
.type GHC.Int.$fRealInt1_info, @object
GHC.Int.$fRealInt1_info:
	.quad	GHC.Int.$fRealInt1_entry
	.quad	0
	.quad	4294967317
	.quad	S4wm5_srt+624


==================== Asm code ====================
2018-03-16 15:59:25.77769203 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt8_$ctoRational_closure
.type GHC.Int.$fRealInt8_$ctoRational_closure, @object
GHC.Int.$fRealInt8_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt8_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.778517713 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt8_$ctoRational_entry
.type GHC.Int.$fRealInt8_$ctoRational_entry, @object
GHC.Int.$fRealInt8_$ctoRational_entry:
_c4yTn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yTB
_c4yTC:
	leaq block_c4yTk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yTk
_c4yTl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yTB:
	leaq GHC.Int.$fRealInt8_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt8_$ctoRational_entry, .-GHC.Int.$fRealInt8_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:25.779176968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt8_$ctoRational_info
.type GHC.Int.$fRealInt8_$ctoRational_info, @object
GHC.Int.$fRealInt8_$ctoRational_info:
	.quad	GHC.Int.$fRealInt8_$ctoRational_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:25.77983385 UTC

.section .text
.align 8
_c4yTk:
_c4yTk:
	leaq block_c4yTq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4yTk, .-_c4yTk


==================== Asm code ====================
2018-03-16 15:59:25.78040684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yTk_info:
	.quad	_c4yTk
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:25.781029442 UTC

.section .text
.align 8
_c4yTq:
_c4yTq:
	leaq block_c4yTu_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c4yTq, .-_c4yTq


==================== Asm code ====================
2018-03-16 15:59:25.781700357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yTq_info:
	.quad	_c4yTq
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:25.782418564 UTC

.section .text
.align 8
_c4yTu:
_c4yTu:
	leaq block_c4yTy_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Real.$w$sreduce_entry@gotpcrel(%rip)
	.size _c4yTu, .-_c4yTu


==================== Asm code ====================
2018-03-16 15:59:25.783069112 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yTu_info:
	.quad	_c4yTu
	.quad	0
	.quad	12884901918
	.quad	S4wm5_srt+640


==================== Asm code ====================
2018-03-16 15:59:25.783842823 UTC

.section .text
.align 8
_c4yTy:
_c4yTy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4yTI
_c4yTH:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yTI:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4yTy, .-_c4yTy


==================== Asm code ====================
2018-03-16 15:59:25.784525833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yTy_info:
	.quad	_c4yTy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.78655583 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt8_closure
.type GHC.Int.$fRealInt8_closure, @object
GHC.Int.$fRealInt8_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt8_closure+1
	.quad	GHC.Int.$fOrdInt8_closure+1
	.quad	GHC.Int.$fRealInt8_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.789018283 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt8_closure
.type GHC.Int.$fIntegralInt8_closure, @object
GHC.Int.$fIntegralInt8_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt8_closure+1
	.quad	GHC.Int.$fEnumInt8_closure+1
	.quad	GHC.Int.$fIntegralInt8_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt8_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt8_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.793669661 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeIndex_closure
.type GHC.Int.$fIxInt8_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt8_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:25.794576362 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cunsafeIndex_entry
.type GHC.Int.$fIxInt8_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt8_$cunsafeIndex_entry:
_c4yUh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yUy
_c4yUz:
	leaq block_c4yUe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yUe
_c4yUf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yUy:
	leaq GHC.Int.$fIxInt8_$cunsafeIndex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cunsafeIndex_entry, .-GHC.Int.$fIxInt8_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:25.795265359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeIndex_info
.type GHC.Int.$fIxInt8_$cunsafeIndex_info, @object
GHC.Int.$fIxInt8_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.796029479 UTC

.section .text
.align 8
_c4yUe:
_c4yUe:
	leaq block_c4yUk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yUk
_c4yUl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yUe, .-_c4yUe


==================== Asm code ====================
2018-03-16 15:59:25.796631932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yUe_info:
	.quad	_c4yUe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.797343529 UTC

.section .text
.align 8
_c4yUk:
_c4yUk:
	leaq block_c4yUp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yUp
_c4yUq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yUk, .-_c4yUk


==================== Asm code ====================
2018-03-16 15:59:25.797963579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yUk_info:
	.quad	_c4yUk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.7987187 UTC

.section .text
.align 8
_c4yUp:
_c4yUp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yUE
_c4yUD:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yUE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yUp, .-_c4yUp


==================== Asm code ====================
2018-03-16 15:59:25.799380938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yUp_info:
	.quad	_c4yUp
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.802365644 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crange_closure
.type GHC.Int.$fIxInt8_$crange_closure, @object
GHC.Int.$fIxInt8_$crange_closure:
	.quad	GHC.Int.$fIxInt8_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.803217213 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$crange_entry
.type GHC.Int.$fIxInt8_$crange_entry, @object
GHC.Int.$fIxInt8_$crange_entry:
_c4yVd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yVe
_c4yVf:
	leaq block_c4yVa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yVa
_c4yVb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yVe:
	leaq GHC.Int.$fIxInt8_$crange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$crange_entry, .-GHC.Int.$fIxInt8_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:25.803901662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crange_info
.type GHC.Int.$fIxInt8_$crange_info, @object
GHC.Int.$fIxInt8_$crange_info:
	.quad	GHC.Int.$fIxInt8_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+664


==================== Asm code ====================
2018-03-16 15:59:25.804565211 UTC

.section .text
.align 8
_c4yVa:
_c4yVa:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt8_$cenumFromTo_entry
	.size _c4yVa, .-_c4yVa


==================== Asm code ====================
2018-03-16 15:59:25.80519328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yVa_info:
	.quad	_c4yVa
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+672


==================== Asm code ====================
2018-03-16 15:59:25.810703663 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crangeSize_closure
.type GHC.Int.$fIxInt8_$crangeSize_closure, @object
GHC.Int.$fIxInt8_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt8_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:25.811563797 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$crangeSize_entry
.type GHC.Int.$fIxInt8_$crangeSize_entry, @object
GHC.Int.$fIxInt8_$crangeSize_entry:
_c4yVB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yVK
_c4yVL:
	leaq block_c4yVy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yVy
_c4yVz:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yVK:
	leaq GHC.Int.$fIxInt8_$crangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$crangeSize_entry, .-GHC.Int.$fIxInt8_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:25.812229039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$crangeSize_info
.type GHC.Int.$fIxInt8_$crangeSize_info, @object
GHC.Int.$fIxInt8_$crangeSize_info:
	.quad	GHC.Int.$fIxInt8_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.812988335 UTC

.section .text
.align 8
_c4yVy:
_c4yVy:
	leaq block_c4yVE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yVE
_c4yVF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yVy, .-_c4yVy


==================== Asm code ====================
2018-03-16 15:59:25.813642596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yVy_info:
	.quad	_c4yVy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.814304895 UTC

.section .text
.align 8
_c4yVE:
_c4yVE:
	leaq block_c4yVJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yVJ
_c4yVO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yVE, .-_c4yVE


==================== Asm code ====================
2018-03-16 15:59:25.814869984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yVE_info:
	.quad	_c4yVE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.815657484 UTC

.section .text
.align 8
_c4yVJ:
_c4yVJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yVU
_c4yVT:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4yVY
_c4yW8:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yVY:
	addq $-16,%r12
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yVU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yVJ, .-_c4yVJ


==================== Asm code ====================
2018-03-16 15:59:25.81639422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yVJ_info:
	.quad	_c4yVJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.820579725 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:25.821454002 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_entry:
_c4yWJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yX3
_c4yX4:
	leaq block_c4yWG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yWG
_c4yWH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yX3:
	leaq GHC.Int.$fIxInt8_$cunsafeRangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt8_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:25.822147466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt8_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt8_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.822856512 UTC

.section .text
.align 8
_c4yWG:
_c4yWG:
	leaq block_c4yWM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yWM
_c4yWN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yWG, .-_c4yWG


==================== Asm code ====================
2018-03-16 15:59:25.823415379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yWG_info:
	.quad	_c4yWG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.824092896 UTC

.section .text
.align 8
_c4yWM:
_c4yWM:
	leaq block_c4yWR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yWR
_c4yWS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yWM, .-_c4yWM


==================== Asm code ====================
2018-03-16 15:59:25.824740501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yWM_info:
	.quad	_c4yWM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.82559206 UTC

.section .text
.align 8
_c4yWR:
_c4yWR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yX9
_c4yX8:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yX9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yWR, .-_c4yWR


==================== Asm code ====================
2018-03-16 15:59:25.826311611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yWR_info:
	.quad	_c4yWR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.832712775 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cindex_closure
.type GHC.Int.$fIxInt8_$cindex_closure, @object
GHC.Int.$fIxInt8_$cindex_closure:
	.quad	GHC.Int.$fIxInt8_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.833595662 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt8_$cindex_entry
.type GHC.Int.$fIxInt8_$cindex_entry, @object
GHC.Int.$fIxInt8_$cindex_entry:
_c4yXJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yXS
_c4yXT:
	leaq block_c4yXG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yXG
_c4yXH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yXS:
	leaq GHC.Int.$fIxInt8_$cindex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt8_$cindex_entry, .-GHC.Int.$fIxInt8_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:25.834284743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt8_$cindex_info
.type GHC.Int.$fIxInt8_$cindex_info, @object
GHC.Int.$fIxInt8_$cindex_info:
	.quad	GHC.Int.$fIxInt8_$cindex_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:25.834985771 UTC

.section .text
.align 8
_c4yXG:
_c4yXG:
	leaq block_c4yXM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4yXM
_c4yXN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yXG, .-_c4yXG


==================== Asm code ====================
2018-03-16 15:59:25.835604356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yXG_info:
	.quad	_c4yXG
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:25.836294694 UTC

.section .text
.align 8
_c4yXM:
_c4yXM:
	leaq block_c4yXR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4yXR
_c4yXW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yXM, .-_c4yXM


==================== Asm code ====================
2018-03-16 15:59:25.836906132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yXM_info:
	.quad	_c4yXM
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:25.837750926 UTC

.section .text
.align 8
_c4yXR:
_c4yXR:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4yY4
_c4yY8:
	leaq block_c4yY7_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yY7
_c4yY9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yY4:
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yXR, .-_c4yXR


==================== Asm code ====================
2018-03-16 15:59:25.838418101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yXR_info:
	.quad	_c4yXR
	.quad	130
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:25.839266336 UTC

.section .text
.align 8
_c4yY7:
_c4yY7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4yYf
_c4yYe:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4yYj
_c4yYq:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4yYj:
	addq $-16,%r12
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4yYf:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4yY7, .-_c4yY7


==================== Asm code ====================
2018-03-16 15:59:25.8399655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yY7_info:
	.quad	_c4yY7
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:25.841864694 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt8_closure
.type GHC.Int.$fIxInt8_closure, @object
GHC.Int.$fIxInt8_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt8_closure+1
	.quad	GHC.Int.$fIxInt8_$crange_closure+1
	.quad	GHC.Int.$fIxInt8_$cindex_closure+2
	.quad	GHC.Int.$fIxInt8_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt8_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt8_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt8_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:25.845522328 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt16_closure
.type GHC.Int.eqInt16_closure, @object
GHC.Int.eqInt16_closure:
	.quad	GHC.Int.eqInt16_info


==================== Asm code ====================
2018-03-16 15:59:25.846390094 UTC

.section .text
.align 8
.globl GHC.Int.eqInt16_entry
.type GHC.Int.eqInt16_entry, @object
GHC.Int.eqInt16_entry:
_c4yZ8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yZc
_c4yZd:
	leaq block_c4yZ5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yZ5
_c4yZ6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yZc:
	leaq GHC.Int.eqInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.eqInt16_entry, .-GHC.Int.eqInt16_entry


==================== Asm code ====================
2018-03-16 15:59:25.847062953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt16_info
.type GHC.Int.eqInt16_info, @object
GHC.Int.eqInt16_info:
	.quad	GHC.Int.eqInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.847847805 UTC

.section .text
.align 8
_c4yZ5:
_c4yZ5:
	leaq block_c4yZb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yZb
_c4yZf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yZ5, .-_c4yZ5


==================== Asm code ====================
2018-03-16 15:59:25.848490762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yZ5_info:
	.quad	_c4yZ5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.849236739 UTC

.section .text
.align 8
_c4yZb:
_c4yZb:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yZb, .-_c4yZb


==================== Asm code ====================
2018-03-16 15:59:25.850620777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yZb_info:
	.quad	_c4yZb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.852431183 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt16_closure
.type GHC.Int.$fEqInt16_closure, @object
GHC.Int.$fEqInt16_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt16_closure+2
	.quad	GHC.Int.neInt16_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.856019413 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt16_closure
.type GHC.Int.gtInt16_closure, @object
GHC.Int.gtInt16_closure:
	.quad	GHC.Int.gtInt16_info


==================== Asm code ====================
2018-03-16 15:59:25.856884974 UTC

.section .text
.align 8
.globl GHC.Int.gtInt16_entry
.type GHC.Int.gtInt16_entry, @object
GHC.Int.gtInt16_entry:
_c4yZP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4yZT
_c4yZU:
	leaq block_c4yZM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4yZM
_c4yZN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4yZT:
	leaq GHC.Int.gtInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.gtInt16_entry, .-GHC.Int.gtInt16_entry


==================== Asm code ====================
2018-03-16 15:59:25.857604477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt16_info
.type GHC.Int.gtInt16_info, @object
GHC.Int.gtInt16_info:
	.quad	GHC.Int.gtInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.858325637 UTC

.section .text
.align 8
_c4yZM:
_c4yZM:
	leaq block_c4yZS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4yZS
_c4yZW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4yZM, .-_c4yZM


==================== Asm code ====================
2018-03-16 15:59:25.858964303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yZM_info:
	.quad	_c4yZM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.85961765 UTC

.section .text
.align 8
_c4yZS:
_c4yZS:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4yZS, .-_c4yZS


==================== Asm code ====================
2018-03-16 15:59:25.860218858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4yZS_info:
	.quad	_c4yZS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.864030405 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt16_closure
.type GHC.Int.geInt16_closure, @object
GHC.Int.geInt16_closure:
	.quad	GHC.Int.geInt16_info


==================== Asm code ====================
2018-03-16 15:59:25.864909321 UTC

.section .text
.align 8
.globl GHC.Int.geInt16_entry
.type GHC.Int.geInt16_entry, @object
GHC.Int.geInt16_entry:
_c4z0v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z0z
_c4z0A:
	leaq block_c4z0s_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z0s
_c4z0t:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z0z:
	leaq GHC.Int.geInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.geInt16_entry, .-GHC.Int.geInt16_entry


==================== Asm code ====================
2018-03-16 15:59:25.865644981 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt16_info
.type GHC.Int.geInt16_info, @object
GHC.Int.geInt16_info:
	.quad	GHC.Int.geInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.866420196 UTC

.section .text
.align 8
_c4z0s:
_c4z0s:
	leaq block_c4z0y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4z0y
_c4z0C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z0s, .-_c4z0s


==================== Asm code ====================
2018-03-16 15:59:25.867037393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z0s_info:
	.quad	_c4z0s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.86779075 UTC

.section .text
.align 8
_c4z0y:
_c4z0y:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z0y, .-_c4z0y


==================== Asm code ====================
2018-03-16 15:59:25.868478439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z0y_info:
	.quad	_c4z0y
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.8726316 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt16_closure
.type GHC.Int.ltInt16_closure, @object
GHC.Int.ltInt16_closure:
	.quad	GHC.Int.ltInt16_info


==================== Asm code ====================
2018-03-16 15:59:25.873453815 UTC

.section .text
.align 8
.globl GHC.Int.ltInt16_entry
.type GHC.Int.ltInt16_entry, @object
GHC.Int.ltInt16_entry:
_c4z1b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z1f
_c4z1g:
	leaq block_c4z18_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z18
_c4z19:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z1f:
	leaq GHC.Int.ltInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.ltInt16_entry, .-GHC.Int.ltInt16_entry


==================== Asm code ====================
2018-03-16 15:59:25.874162864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt16_info
.type GHC.Int.ltInt16_info, @object
GHC.Int.ltInt16_info:
	.quad	GHC.Int.ltInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.874880278 UTC

.section .text
.align 8
_c4z18:
_c4z18:
	leaq block_c4z1e_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4z1e
_c4z1i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z18, .-_c4z18


==================== Asm code ====================
2018-03-16 15:59:25.875484712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z18_info:
	.quad	_c4z18
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.876168542 UTC

.section .text
.align 8
_c4z1e:
_c4z1e:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z1e, .-_c4z1e


==================== Asm code ====================
2018-03-16 15:59:25.876780159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z1e_info:
	.quad	_c4z1e
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.880771407 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt16_closure
.type GHC.Int.leInt16_closure, @object
GHC.Int.leInt16_closure:
	.quad	GHC.Int.leInt16_info


==================== Asm code ====================
2018-03-16 15:59:25.881719426 UTC

.section .text
.align 8
.globl GHC.Int.leInt16_entry
.type GHC.Int.leInt16_entry, @object
GHC.Int.leInt16_entry:
_c4z1R:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z1V
_c4z1W:
	leaq block_c4z1O_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z1O
_c4z1P:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z1V:
	leaq GHC.Int.leInt16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.leInt16_entry, .-GHC.Int.leInt16_entry


==================== Asm code ====================
2018-03-16 15:59:25.882360787 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt16_info
.type GHC.Int.leInt16_info, @object
GHC.Int.leInt16_info:
	.quad	GHC.Int.leInt16_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.883040966 UTC

.section .text
.align 8
_c4z1O:
_c4z1O:
	leaq block_c4z1U_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4z1U
_c4z1Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z1O, .-_c4z1O


==================== Asm code ====================
2018-03-16 15:59:25.883605656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z1O_info:
	.quad	_c4z1O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.884322664 UTC

.section .text
.align 8
_c4z1U:
_c4z1U:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z1U, .-_c4z1U


==================== Asm code ====================
2018-03-16 15:59:25.884949117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z1U_info:
	.quad	_c4z1U
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.889045497 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$ccompare_closure
.type GHC.Int.$fOrdInt16_$ccompare_closure, @object
GHC.Int.$fOrdInt16_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt16_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:25.890253898 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$ccompare_entry
.type GHC.Int.$fOrdInt16_$ccompare_entry, @object
GHC.Int.$fOrdInt16_$ccompare_entry:
_c4z2x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z2B
_c4z2C:
	leaq block_c4z2u_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z2u
_c4z2v:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z2B:
	leaq GHC.Int.$fOrdInt16_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$ccompare_entry, .-GHC.Int.$fOrdInt16_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:25.890980673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$ccompare_info
.type GHC.Int.$fOrdInt16_$ccompare_info, @object
GHC.Int.$fOrdInt16_$ccompare_info:
	.quad	GHC.Int.$fOrdInt16_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.892197889 UTC

.section .text
.align 8
_c4z2u:
_c4z2u:
	leaq block_c4z2A_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4z2A
_c4z2E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z2u, .-_c4z2u


==================== Asm code ====================
2018-03-16 15:59:25.892898073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z2u_info:
	.quad	_c4z2u
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.893725459 UTC

.section .text
.align 8
_c4z2A:
_c4z2A:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4z2T
_c4z2S:
	cmpq %rbx,%rax
	jg _c4z2P
_c4z2Q:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z2T:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z2P:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z2A, .-_c4z2A


==================== Asm code ====================
2018-03-16 15:59:25.89441282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z2A_info:
	.quad	_c4z2A
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.898199743 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmax_closure
.type GHC.Int.$fOrdInt16_$cmax_closure, @object
GHC.Int.$fOrdInt16_$cmax_closure:
	.quad	GHC.Int.$fOrdInt16_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:25.899068659 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$cmax_entry
.type GHC.Int.$fOrdInt16_$cmax_entry, @object
GHC.Int.$fOrdInt16_$cmax_entry:
_c4z3o:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z3s
_c4z3t:
	leaq block_c4z3l_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z3l
_c4z3m:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z3s:
	leaq GHC.Int.$fOrdInt16_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$cmax_entry, .-GHC.Int.$fOrdInt16_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:25.899719759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmax_info
.type GHC.Int.$fOrdInt16_$cmax_info, @object
GHC.Int.$fOrdInt16_$cmax_info:
	.quad	GHC.Int.$fOrdInt16_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.900444398 UTC

.section .text
.align 8
_c4z3l:
_c4z3l:
	leaq block_c4z3r_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z3r
_c4z3v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z3l, .-_c4z3l


==================== Asm code ====================
2018-03-16 15:59:25.901078742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z3l_info:
	.quad	_c4z3l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.901837175 UTC

.section .text
.align 8
_c4z3r:
_c4z3r:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4z3D
_c4z3E:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4z3D:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z3r, .-_c4z3r


==================== Asm code ====================
2018-03-16 15:59:25.902449293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z3r_info:
	.quad	_c4z3r
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.906403088 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmin_closure
.type GHC.Int.$fOrdInt16_$cmin_closure, @object
GHC.Int.$fOrdInt16_$cmin_closure:
	.quad	GHC.Int.$fOrdInt16_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:25.907298155 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt16_$cmin_entry
.type GHC.Int.$fOrdInt16_$cmin_entry, @object
GHC.Int.$fOrdInt16_$cmin_entry:
_c4z48:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z4c
_c4z4d:
	leaq block_c4z45_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z45
_c4z46:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z4c:
	leaq GHC.Int.$fOrdInt16_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt16_$cmin_entry, .-GHC.Int.$fOrdInt16_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:25.907988671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_$cmin_info
.type GHC.Int.$fOrdInt16_$cmin_info, @object
GHC.Int.$fOrdInt16_$cmin_info:
	.quad	GHC.Int.$fOrdInt16_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.908762988 UTC

.section .text
.align 8
_c4z45:
_c4z45:
	leaq block_c4z4b_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z4b
_c4z4f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z45, .-_c4z45


==================== Asm code ====================
2018-03-16 15:59:25.909772665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z45_info:
	.quad	_c4z45
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.910521209 UTC

.section .text
.align 8
_c4z4b:
_c4z4b:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4z4n
_c4z4o:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4z4n:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z4b, .-_c4z4b


==================== Asm code ====================
2018-03-16 15:59:25.911211896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z4b_info:
	.quad	_c4z4b
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.913722744 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt16_closure
.type GHC.Int.$fOrdInt16_closure, @object
GHC.Int.$fOrdInt16_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt16_closure+1
	.quad	GHC.Int.$fOrdInt16_$ccompare_closure+2
	.quad	GHC.Int.ltInt16_closure+2
	.quad	GHC.Int.leInt16_closure+2
	.quad	GHC.Int.gtInt16_closure+2
	.quad	GHC.Int.geInt16_closure+2
	.quad	GHC.Int.$fOrdInt16_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt16_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.918482273 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cinRange_closure
.type GHC.Int.$fIxInt16_$cinRange_closure, @object
GHC.Int.$fIxInt16_$cinRange_closure:
	.quad	GHC.Int.$fIxInt16_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:25.919405493 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cinRange_entry
.type GHC.Int.$fIxInt16_$cinRange_entry, @object
GHC.Int.$fIxInt16_$cinRange_entry:
_c4z4T:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z52
_c4z53:
	leaq block_c4z4Q_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z4Q
_c4z4R:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z52:
	leaq GHC.Int.$fIxInt16_$cinRange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cinRange_entry, .-GHC.Int.$fIxInt16_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:25.920078477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cinRange_info
.type GHC.Int.$fIxInt16_$cinRange_info, @object
GHC.Int.$fIxInt16_$cinRange_info:
	.quad	GHC.Int.$fIxInt16_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.920812448 UTC

.section .text
.align 8
_c4z4Q:
_c4z4Q:
	leaq block_c4z4W_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z4W
_c4z4X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z4Q, .-_c4z4Q


==================== Asm code ====================
2018-03-16 15:59:25.921509926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z4Q_info:
	.quad	_c4z4Q
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.922251144 UTC

.section .text
.align 8
_c4z4W:
_c4z4W:
	leaq block_c4z51_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4z51
_c4z56:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z4W, .-_c4z4W


==================== Asm code ====================
2018-03-16 15:59:25.922873251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z4W_info:
	.quad	_c4z4W
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.923667752 UTC

.section .text
.align 8
_c4z51:
_c4z51:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4z5e
_c4z5i:
	movq 8(%rbp),%rbx
	leaq block_c4z5h_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4z5h
_c4z5j:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z5e:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z51, .-_c4z51


==================== Asm code ====================
2018-03-16 15:59:25.924354081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z51_info:
	.quad	_c4z51
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.925044754 UTC

.section .text
.align 8
_c4z5h:
_c4z5h:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z5h, .-_c4z5h


==================== Asm code ====================
2018-03-16 15:59:25.925729252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z5h_info:
	.quad	_c4z5h
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.927508079 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt1_closure
.type GHC.Int.$fNumInt1_closure, @object
GHC.Int.$fNumInt1_closure:
	.quad	GHC.Int.I16#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:25.931030128 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$csignum_closure
.type GHC.Int.$fNumInt16_$csignum_closure, @object
GHC.Int.$fNumInt16_$csignum_closure:
	.quad	GHC.Int.$fNumInt16_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:25.932371268 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$csignum_entry
.type GHC.Int.$fNumInt16_$csignum_entry, @object
GHC.Int.$fNumInt16_$csignum_entry:
_c4z67:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z68
_c4z69:
	leaq block_c4z64_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z64
_c4z65:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z68:
	leaq GHC.Int.$fNumInt16_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$csignum_entry, .-GHC.Int.$fNumInt16_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:25.933092025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$csignum_info
.type GHC.Int.$fNumInt16_$csignum_info, @object
GHC.Int.$fNumInt16_$csignum_info:
	.quad	GHC.Int.$fNumInt16_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.934455834 UTC

.section .text
.align 8
_c4z64:
_c4z64:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4z6l
_c4z6m:
	leaq GHC.Int.$fNumInt1_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z6j:
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z6l:
	testq %rax,%rax
	je _c4z6j
_c4z6i:
	leaq GHC.Int.$fNumInt2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z64, .-_c4z64


==================== Asm code ====================
2018-03-16 15:59:25.935110736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z64_info:
	.quad	_c4z64
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.938566628 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cabs_closure
.type GHC.Int.$fNumInt16_$cabs_closure, @object
GHC.Int.$fNumInt16_$cabs_closure:
	.quad	GHC.Int.$fNumInt16_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:25.939380967 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt16_$cabs_entry
.type GHC.Int.$fNumInt16_$cabs_entry, @object
GHC.Int.$fNumInt16_$cabs_entry:
_c4z6I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z6J
_c4z6K:
	leaq block_c4z6F_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z6F
_c4z6G:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z6J:
	leaq GHC.Int.$fNumInt16_$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt16_$cabs_entry, .-GHC.Int.$fNumInt16_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:25.940038916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt16_$cabs_info
.type GHC.Int.$fNumInt16_$cabs_info, @object
GHC.Int.$fNumInt16_$cabs_info:
	.quad	GHC.Int.$fNumInt16_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.940844661 UTC

.section .text
.align 8
_c4z6F:
_c4z6F:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4z6P
_c4z6O:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4z71
_c4z72:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4z71:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z6P:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4z6F, .-_c4z6F


==================== Asm code ====================
2018-03-16 15:59:25.941601517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z6F_info:
	.quad	_c4z6F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.943481099 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt16_closure
.type GHC.Int.$fNumInt16_closure, @object
GHC.Int.$fNumInt16_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt16_$c+_closure+2
	.quad	GHC.Int.$fNumInt16_$c-_closure+2
	.quad	GHC.Int.$fNumInt16_$c*_closure+2
	.quad	GHC.Int.$fNumInt16_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt16_$cabs_closure+1
	.quad	GHC.Int.$fNumInt16_$csignum_closure+1
	.quad	GHC.Int.$fNumInt16_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.945284634 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt2_closure
.type GHC.Int.$fBitsInt2_closure, @object
GHC.Int.$fBitsInt2_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:25.947532231 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:25.94823859 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry:
_c4z7q:
	leaq GHC.Int.$fBitsInt2_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:25.948860945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt16_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt16_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.952953048 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbit_closure
.type GHC.Int.$fBitsInt16_$cbit_closure, @object
GHC.Int.$fBitsInt16_$cbit_closure:
	.quad	GHC.Int.$fBitsInt16_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:25.954027012 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cbit_entry
.type GHC.Int.$fBitsInt16_$cbit_entry, @object
GHC.Int.$fBitsInt16_$cbit_entry:
_c4z7F:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z7G
_c4z7H:
	leaq block_c4z7C_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z7C
_c4z7D:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z7G:
	leaq GHC.Int.$fBitsInt16_$cbit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cbit_entry, .-GHC.Int.$fBitsInt16_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:25.954644297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cbit_info
.type GHC.Int.$fBitsInt16_$cbit_info, @object
GHC.Int.$fBitsInt16_$cbit_info:
	.quad	GHC.Int.$fBitsInt16_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:25.955456511 UTC

.section .text
.align 8
_c4z7C:
_c4z7C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4z7M
_c4z7L:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4z7Y
_c4z7Z:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z7Y:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z7M:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4z7C, .-_c4z7C


==================== Asm code ====================
2018-03-16 15:59:25.956162083 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z7C_info:
	.quad	_c4z7C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.960222704 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ctestBit_closure
.type GHC.Int.$fBitsInt16_$ctestBit_closure, @object
GHC.Int.$fBitsInt16_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt16_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:25.961080283 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ctestBit_entry
.type GHC.Int.$fBitsInt16_$ctestBit_entry, @object
GHC.Int.$fBitsInt16_$ctestBit_entry:
_c4z8o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z8s
_c4z8t:
	leaq block_c4z8l_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z8l
_c4z8m:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z8s:
	leaq GHC.Int.$fBitsInt16_$ctestBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ctestBit_entry, .-GHC.Int.$fBitsInt16_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.961807699 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ctestBit_info
.type GHC.Int.$fBitsInt16_$ctestBit_info, @object
GHC.Int.$fBitsInt16_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt16_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.962542134 UTC

.section .text
.align 8
_c4z8l:
_c4z8l:
	leaq block_c4z8r_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4z8r
_c4z8v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z8l, .-_c4z8l


==================== Asm code ====================
2018-03-16 15:59:25.963185862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z8l_info:
	.quad	_c4z8l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.964005617 UTC

.section .text
.align 8
_c4z8r:
_c4z8r:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4z99
_c4z98:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4z99
_c4z8X:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4z99:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4z8r, .-_c4z8r


==================== Asm code ====================
2018-03-16 15:59:25.964761414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z8r_info:
	.quad	_c4z8r
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.97013822 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateR_closure
.type GHC.Int.$fBitsInt16_$crotateR_closure, @object
GHC.Int.$fBitsInt16_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt16_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:25.97106452 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotateR_entry
.type GHC.Int.$fBitsInt16_$crotateR_entry, @object
GHC.Int.$fBitsInt16_$crotateR_entry:
_c4z9H:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4z9L
_c4z9M:
	leaq block_c4z9E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4z9E
_c4z9F:
	movq (%rbx),%rax
	jmp *(%rax)
_c4z9L:
	leaq GHC.Int.$fBitsInt16_$crotateR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$crotateR_entry, .-GHC.Int.$fBitsInt16_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:25.971789769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateR_info
.type GHC.Int.$fBitsInt16_$crotateR_info, @object
GHC.Int.$fBitsInt16_$crotateR_info:
	.quad	GHC.Int.$fBitsInt16_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.972562151 UTC

.section .text
.align 8
_c4z9E:
_c4z9E:
	leaq block_c4z9K_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4z9K
_c4z9O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4z9E, .-_c4z9E


==================== Asm code ====================
2018-03-16 15:59:25.973812619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z9E_info:
	.quad	_c4z9E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.974585879 UTC

.section .text
.align 8
_c4z9K:
_c4z9K:
	movq 7(%rbx),%rax
	negq %rax
	andl $15,%eax
	testq %rax,%rax
	jne _u4zaI
_c4zaE:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4zaI:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4za6
	.size _c4z9K, .-_c4z9K


==================== Asm code ====================
2018-03-16 15:59:25.975261961 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4z9K_info:
	.quad	_c4z9K
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.976123795 UTC

.section .text
.align 8
_c4za6:
_c4za6:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4zaB
_c4zaA:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movzwl %bx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $16,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zaB:
	movq $16,904(%r13)
	leaq block_c4za5_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4za6, .-_c4za6


==================== Asm code ====================
2018-03-16 15:59:25.976918211 UTC

.section .text
.align 8
_c4za5:
_c4za5:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4za6
	.size _c4za5, .-_c4za5


==================== Asm code ====================
2018-03-16 15:59:25.977587648 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4za5_info:
	.quad	_c4za5
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.981905619 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplementBit_closure
.type GHC.Int.$fBitsInt16_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt16_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:25.982873645 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$ccomplementBit_entry
.type GHC.Int.$fBitsInt16_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt16_$ccomplementBit_entry:
_c4zbs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zbw
_c4zbx:
	leaq block_c4zbp_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zbp
_c4zbq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zbw:
	leaq GHC.Int.$fBitsInt16_$ccomplementBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$ccomplementBit_entry, .-GHC.Int.$fBitsInt16_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.983549367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$ccomplementBit_info
.type GHC.Int.$fBitsInt16_$ccomplementBit_info, @object
GHC.Int.$fBitsInt16_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.98436437 UTC

.section .text
.align 8
_c4zbp:
_c4zbp:
	leaq block_c4zbv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zbv
_c4zbz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zbp, .-_c4zbp


==================== Asm code ====================
2018-03-16 15:59:25.984954207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zbp_info:
	.quad	_c4zbp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.986726553 UTC

.section .text
.align 8
_c4zbv:
_c4zbv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zbF
_c4zbE:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4zc3
_c4zc4:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zc3:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zbF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zbv, .-_c4zbv


==================== Asm code ====================
2018-03-16 15:59:25.987457526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zbv_info:
	.quad	_c4zbv
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.991871954 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cclearBit_closure
.type GHC.Int.$fBitsInt16_$cclearBit_closure, @object
GHC.Int.$fBitsInt16_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt16_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:25.992734218 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$cclearBit_entry
.type GHC.Int.$fBitsInt16_$cclearBit_entry, @object
GHC.Int.$fBitsInt16_$cclearBit_entry:
_c4zcC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zcG
_c4zcH:
	leaq block_c4zcz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zcz
_c4zcA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zcG:
	leaq GHC.Int.$fBitsInt16_$cclearBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$cclearBit_entry, .-GHC.Int.$fBitsInt16_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:25.993581738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$cclearBit_info
.type GHC.Int.$fBitsInt16_$cclearBit_info, @object
GHC.Int.$fBitsInt16_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt16_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:25.994326303 UTC

.section .text
.align 8
_c4zcz:
_c4zcz:
	leaq block_c4zcF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zcF
_c4zcJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zcz, .-_c4zcz


==================== Asm code ====================
2018-03-16 15:59:25.995461874 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zcz_info:
	.quad	_c4zcz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:25.996366732 UTC

.section .text
.align 8
_c4zcF:
_c4zcF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zcP
_c4zcO:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4zdg
_c4zds:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zdg:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movswq %dx,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zcP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zcF, .-_c4zcF


==================== Asm code ====================
2018-03-16 15:59:25.997161716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zcF_info:
	.quad	_c4zcF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.001509979 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$csetBit_closure
.type GHC.Int.$fBitsInt16_$csetBit_closure, @object
GHC.Int.$fBitsInt16_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt16_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:26.002360253 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$csetBit_entry
.type GHC.Int.$fBitsInt16_$csetBit_entry, @object
GHC.Int.$fBitsInt16_$csetBit_entry:
_c4ze2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ze6
_c4ze7:
	leaq block_c4zdZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zdZ
_c4ze0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ze6:
	leaq GHC.Int.$fBitsInt16_$csetBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt16_$csetBit_entry, .-GHC.Int.$fBitsInt16_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.003040438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$csetBit_info
.type GHC.Int.$fBitsInt16_$csetBit_info, @object
GHC.Int.$fBitsInt16_$csetBit_info:
	.quad	GHC.Int.$fBitsInt16_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.003723999 UTC

.section .text
.align 8
_c4zdZ:
_c4zdZ:
	leaq block_c4ze5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ze5
_c4ze9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zdZ, .-_c4zdZ


==================== Asm code ====================
2018-03-16 15:59:26.004333027 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zdZ_info:
	.quad	_c4zdZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.005170601 UTC

.section .text
.align 8
_c4ze5:
_c4ze5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zef
_c4zee:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4zeD
_c4zeE:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zeD:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movswq %bx,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zef:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ze5, .-_c4ze5


==================== Asm code ====================
2018-03-16 15:59:26.006029379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ze5_info:
	.quad	_c4ze5
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.008356161 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateL_closure
.type GHC.Int.$fBitsInt16_$crotateL_closure, @object
GHC.Int.$fBitsInt16_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt16_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:26.009050672 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt16_$crotateL_entry
.type GHC.Int.$fBitsInt16_$crotateL_entry, @object
GHC.Int.$fBitsInt16_$crotateL_entry:
_c4zf9:
	jmp GHC.Int.$fBitsInt16_$crotate_entry
	.size GHC.Int.$fBitsInt16_$crotateL_entry, .-GHC.Int.$fBitsInt16_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:26.009756637 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_$crotateL_info
.type GHC.Int.$fBitsInt16_$crotateL_info, @object
GHC.Int.$fBitsInt16_$crotateL_info:
	.quad	GHC.Int.$fBitsInt16_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.011902129 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt16_closure
.type GHC.Int.$fBitsInt16_closure, @object
GHC.Int.$fBitsInt16_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt16_closure+1
	.quad	GHC.Int.$fBitsInt16_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt16_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt16_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt16_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt16_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt3_closure+1
	.quad	GHC.Int.$fBitsInt16_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt16_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt16_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt16_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt16_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt16_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt16_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt16_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt16_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.013968298 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt16_closure
.type GHC.Int.$fFiniteBitsInt16_closure, @object
GHC.Int.$fFiniteBitsInt16_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt16_closure+1
	.quad	GHC.Int.$fBitsInt16_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.020779046 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_go_closure
.type GHC.Int.$fReadInt16_go_closure, @object
GHC.Int.$fReadInt16_go_closure:
	.quad	GHC.Int.$fReadInt16_go_info


==================== Asm code ====================
2018-03-16 15:59:26.02176235 UTC

.section .text
.align 8
sat_s4vX2_entry:
_c4zfB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zfC
_c4zfD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt16_go_entry
_c4zfC:
	jmp *-16(%r13)
	.size sat_s4vX2_entry, .-sat_s4vX2_entry


==================== Asm code ====================
2018-03-16 15:59:26.022386107 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vX2_info:
	.quad	sat_s4vX2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.023168109 UTC

.section .text
.align 8
sat_s4vX0_entry:
_c4zfL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zfS
_c4zfT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c4zfI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4zfI
_c4zfJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zfS:
	jmp *-16(%r13)
	.size sat_s4vX0_entry, .-sat_s4vX0_entry


==================== Asm code ====================
2018-03-16 15:59:26.02382213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vX0_info:
	.quad	sat_s4vX0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.024515671 UTC

.section .text
.align 8
_c4zfI:
_c4zfI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zfW
_c4zfV:
	movq 7(%rbx),%rax
	movswq %ax,%rax
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zfW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zfI, .-_c4zfI


==================== Asm code ====================
2018-03-16 15:59:26.02518192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zfI_info:
	.quad	_c4zfI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.026041059 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_go_entry
.type GHC.Int.$fReadInt16_go_entry, @object
GHC.Int.$fReadInt16_go_entry:
_c4zg2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zg3
_c4zg4:
	leaq block_c4zfm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zfm
_c4zfn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zg3:
	leaq GHC.Int.$fReadInt16_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt16_go_entry, .-GHC.Int.$fReadInt16_go_entry


==================== Asm code ====================
2018-03-16 15:59:26.026700847 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_go_info
.type GHC.Int.$fReadInt16_go_info, @object
GHC.Int.$fReadInt16_go_info:
	.quad	GHC.Int.$fReadInt16_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.027543715 UTC

.section .text
.align 8
_c4zfm:
_c4zfm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4zfZ
_c4zg0:
	leaq block_c4zfs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zfs
_c4zft:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zfZ:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zfm, .-_c4zfm


==================== Asm code ====================
2018-03-16 15:59:26.028235032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zfm_info:
	.quad	_c4zfm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.029034241 UTC

.section .text
.align 8
_c4zfs:
_c4zfs:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4zgc
_c4zgb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s4vX2_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	leaq sat_s4vX0_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zgc:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zfs, .-_c4zfs


==================== Asm code ====================
2018-03-16 15:59:26.029899604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zfs_info:
	.quad	_c4zfs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.033456829 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadsPrec_closure
.type GHC.Int.$fReadInt16_$creadsPrec_closure, @object
GHC.Int.$fReadInt16_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt16_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.03437108 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_$creadsPrec_entry
.type GHC.Int.$fReadInt16_$creadsPrec_entry, @object
GHC.Int.$fReadInt16_$creadsPrec_entry:
_c4zh5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zh9
_c4zha:
	leaq block_c4zh3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rsi,%rax
	movq %r14,%rsi
	movq GHC.Read.$fReadInt2_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Read.$fReadInt_$sreadNumber_entry@gotpcrel(%rip)
_c4zh9:
	leaq GHC.Int.$fReadInt16_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt16_$creadsPrec_entry, .-GHC.Int.$fReadInt16_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:26.035136595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadsPrec_info
.type GHC.Int.$fReadInt16_$creadsPrec_info, @object
GHC.Int.$fReadInt16_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt16_$creadsPrec_entry
	.quad	0
	.quad	1152921517491748878
	.quad	8589934607
	.quad	S4wm5_srt+472


==================== Asm code ====================
2018-03-16 15:59:26.035865384 UTC

.section .text
.align 8
_c4zh3:
_c4zh3:
	movq 8(%rbp),%rax
	leaq block_c4zh8_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size _c4zh3, .-_c4zh3


==================== Asm code ====================
2018-03-16 15:59:26.036484841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zh3_info:
	.quad	_c4zh3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.037668788 UTC

.section .text
.align 8
_c4zh8:
_c4zh8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt16_go_entry
	.size _c4zh8, .-_c4zh8


==================== Asm code ====================
2018-03-16 15:59:26.038308168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zh8_info:
	.quad	_c4zh8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.042230599 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt3_closure
.type GHC.Int.$fReadInt3_closure, @object
GHC.Int.$fReadInt3_closure:
	.quad	GHC.Int.$fReadInt3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.042916003 UTC

.section .text
.align 8
sat_s4vX9_entry:
_c4zhE:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt16_$creadsPrec_entry
	.size sat_s4vX9_entry, .-sat_s4vX9_entry


==================== Asm code ====================
2018-03-16 15:59:26.043500812 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4vX9_info:
	.quad	sat_s4vX9_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4wm5_srt+696


==================== Asm code ====================
2018-03-16 15:59:26.044343527 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt3_entry
.type GHC.Int.$fReadInt3_entry, @object
GHC.Int.$fReadInt3_entry:
_c4zhK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zhL
_c4zhM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zhO
_c4zhN:
	leaq sat_s4vX9_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c4zhH_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4zhO:
	movq $16,904(%r13)
_c4zhL:
	leaq GHC.Int.$fReadInt3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt3_entry, .-GHC.Int.$fReadInt3_entry


==================== Asm code ====================
2018-03-16 15:59:26.04509769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt3_info
.type GHC.Int.$fReadInt3_info, @object
GHC.Int.$fReadInt3_info:
	.quad	GHC.Int.$fReadInt3_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+696


==================== Asm code ====================
2018-03-16 15:59:26.045918245 UTC

.section .text
.align 8
_c4zhH:
_c4zhH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zhR
_c4zhQ:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zhR:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zhH, .-_c4zhH


==================== Asm code ====================
2018-03-16 15:59:26.046538799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zhH_info:
	.quad	_c4zhH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.049508061 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt2_closure
.type GHC.Int.$fReadInt2_closure, @object
GHC.Int.$fReadInt2_closure:
	.quad	GHC.Int.$fReadInt2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.050520203 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt2_entry
.type GHC.Int.$fReadInt2_entry, @object
GHC.Int.$fReadInt2_entry:
_c4zid:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zie
_c4zif:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4zic
_c4zib:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt3_closure+2(%rip),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c4zie:
	jmp *-16(%r13)
_c4zic:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt2_entry, .-GHC.Int.$fReadInt2_entry


==================== Asm code ====================
2018-03-16 15:59:26.051312669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt2_info
.type GHC.Int.$fReadInt2_info, @object
GHC.Int.$fReadInt2_info:
	.quad	GHC.Int.$fReadInt2_entry
	.quad	0
	.quad	144115192370823189
	.quad	S4wm5_srt+504


==================== Asm code ====================
2018-03-16 15:59:26.053735533 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadList_closure
.type GHC.Int.$fReadInt16_$creadList_closure, @object
GHC.Int.$fReadInt16_$creadList_closure:
	.quad	GHC.Int.$fReadInt16_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.054516875 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt16_$creadList_entry
.type GHC.Int.$fReadInt16_$creadList_entry, @object
GHC.Int.$fReadInt16_$creadList_entry:
_c4ziw:
	movq %r14,%rsi
	leaq GHC.Int.$fReadInt2_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Int.$fReadInt16_$creadList_entry, .-GHC.Int.$fReadInt16_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:26.055079272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt16_$creadList_info
.type GHC.Int.$fReadInt16_$creadList_info, @object
GHC.Int.$fReadInt16_$creadList_info:
	.quad	GHC.Int.$fReadInt16_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4wm5_srt+712


==================== Asm code ====================
2018-03-16 15:59:26.05920281 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt1_closure
.type GHC.Int.$fReadInt1_closure, @object
GHC.Int.$fReadInt1_closure:
	.quad	GHC.Int.$fReadInt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.060112867 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt1_entry
.type GHC.Int.$fReadInt1_entry, @object
GHC.Int.$fReadInt1_entry:
_c4ziK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ziL
_c4ziM:
	leaq block_c4ziH_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt16_$creadList_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4ziL:
	leaq GHC.Int.$fReadInt1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt1_entry, .-GHC.Int.$fReadInt1_entry


==================== Asm code ====================
2018-03-16 15:59:26.060820263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt1_info
.type GHC.Int.$fReadInt1_info, @object
GHC.Int.$fReadInt1_info:
	.quad	GHC.Int.$fReadInt1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+720


==================== Asm code ====================
2018-03-16 15:59:26.061615417 UTC

.section .text
.align 8
_c4ziH:
_c4ziH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ziP
_c4ziO:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ziP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ziH, .-_c4ziH


==================== Asm code ====================
2018-03-16 15:59:26.062271592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ziH_info:
	.quad	_c4ziH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.064039126 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt16_closure
.type GHC.Int.$fReadInt16_closure, @object
GHC.Int.$fReadInt16_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt16_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt16_$creadList_closure+1
	.quad	GHC.Int.$fReadInt3_closure+2
	.quad	GHC.Int.$fReadInt1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.068858886 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquot_closure
.type GHC.Int.$fIntegralInt16_$cquot_closure, @object
GHC.Int.$fIntegralInt16_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt16_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.071098766 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cquot_entry
.type GHC.Int.$fIntegralInt16_$cquot_entry, @object
GHC.Int.$fIntegralInt16_$cquot_entry:
_c4zj9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zjd
_c4zje:
	leaq block_c4zj6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zj6
_c4zj7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zjd:
	leaq GHC.Int.$fIntegralInt16_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cquot_entry, .-GHC.Int.$fIntegralInt16_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:26.071812101 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquot_info
.type GHC.Int.$fIntegralInt16_$cquot_info, @object
GHC.Int.$fIntegralInt16_$cquot_info:
	.quad	GHC.Int.$fIntegralInt16_$cquot_entry
	.quad	0
	.quad	144115200960757774
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.072586209 UTC

.section .text
.align 8
_c4zj6:
_c4zj6:
	leaq block_c4zjc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zjc
_c4zjg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zj6, .-_c4zj6


==================== Asm code ====================
2018-03-16 15:59:26.073298101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zj6_info:
	.quad	_c4zj6
	.quad	1
	.quad	12884901918
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.074318416 UTC

.section .text
.align 8
_c4zjc:
_c4zjc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zjm
_c4zjl:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4zjN
_c4zjL:
	cmpq $-32768,%rax
	je _c4zjK
_c4zjJ:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zjN:
	testq %rbx,%rbx
	jne _c4zjx
_c4zjM:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zjK:
	addq $-16,%r12
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zjx:
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	cqto
	idivq %rbx
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zjm:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zjc, .-_c4zjc


==================== Asm code ====================
2018-03-16 15:59:26.07515997 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zjc_info:
	.quad	_c4zjc
	.quad	65
	.quad	12884901918
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.079668103 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$crem_closure
.type GHC.Int.$fIntegralInt16_$crem_closure, @object
GHC.Int.$fIntegralInt16_$crem_closure:
	.quad	GHC.Int.$fIntegralInt16_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.081146848 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$crem_entry
.type GHC.Int.$fIntegralInt16_$crem_entry, @object
GHC.Int.$fIntegralInt16_$crem_entry:
_c4zkl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zkp
_c4zkq:
	leaq block_c4zki_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zki
_c4zkj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zkp:
	leaq GHC.Int.$fIntegralInt16_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$crem_entry, .-GHC.Int.$fIntegralInt16_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:26.081909047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$crem_info
.type GHC.Int.$fIntegralInt16_$crem_info, @object
GHC.Int.$fIntegralInt16_$crem_info:
	.quad	GHC.Int.$fIntegralInt16_$crem_entry
	.quad	0
	.quad	288230380446679054
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.082633611 UTC

.section .text
.align 8
_c4zki:
_c4zki:
	leaq block_c4zko_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zko
_c4zks:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zki, .-_c4zki


==================== Asm code ====================
2018-03-16 15:59:26.083259019 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zki_info:
	.quad	_c4zki
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.084078094 UTC

.section .text
.align 8
_c4zko:
_c4zko:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zky
_c4zkx:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4zkJ
_c4zkK:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zkJ:
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movswq %dx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zky:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zko, .-_c4zko


==================== Asm code ====================
2018-03-16 15:59:26.084759787 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zko_info:
	.quad	_c4zko
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.088900401 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv_closure
.type GHC.Int.$w$cdiv_closure, @object
GHC.Int.$w$cdiv_closure:
	.quad	GHC.Int.$w$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.089967938 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv_entry
.type GHC.Int.$w$cdiv_entry, @object
GHC.Int.$w$cdiv_entry:
_c4zlf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zlg
_c4zlh:
	cmpq $-1,%rsi
	je _c4zld
_u4zlB:
	testq %rsi,%rsi
	je _c4zle
_c4zlc:
	leaq block_c4zlj_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4zlA:
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zld:
	cmpq $-32768,%r14
	je _c4zlA
_c4zly:
	leaq block_c4zls_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4zlg:
	leaq GHC.Int.$w$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
_c4zle:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdiv_entry, .-GHC.Int.$w$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:26.090780609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv_info
.type GHC.Int.$w$cdiv_info, @object
GHC.Int.$w$cdiv_info:
	.quad	GHC.Int.$w$cdiv_entry
	.quad	0
	.quad	576460765188325390
	.quad	8589934604
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.091502136 UTC

.section .text
.align 8
_c4zls:
_c4zls:
	movswq %bx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zls, .-_c4zls


==================== Asm code ====================
2018-03-16 15:59:26.092089922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zls_info:
	.quad	_c4zls
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.09270753 UTC

.section .text
.align 8
_c4zlj:
_c4zlj:
	movswq %bx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zlj, .-_c4zlj


==================== Asm code ====================
2018-03-16 15:59:26.093314952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zlj_info:
	.quad	_c4zlj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.097562063 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdiv_closure
.type GHC.Int.$fIntegralInt16_$cdiv_closure, @object
GHC.Int.$fIntegralInt16_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt16_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.098447268 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cdiv_entry
.type GHC.Int.$fIntegralInt16_$cdiv_entry, @object
GHC.Int.$fIntegralInt16_$cdiv_entry:
_c4zm0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zmd
_c4zme:
	leaq block_c4zlX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zlX
_c4zlY:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zmd:
	leaq GHC.Int.$fIntegralInt16_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cdiv_entry, .-GHC.Int.$fIntegralInt16_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:26.099135249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdiv_info
.type GHC.Int.$fIntegralInt16_$cdiv_info, @object
GHC.Int.$fIntegralInt16_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt16_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+752


==================== Asm code ====================
2018-03-16 15:59:26.099958062 UTC

.section .text
.align 8
_c4zlX:
_c4zlX:
	leaq block_c4zm3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zm3
_c4zm4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zlX, .-_c4zlX


==================== Asm code ====================
2018-03-16 15:59:26.100565346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zlX_info:
	.quad	_c4zlX
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+752


==================== Asm code ====================
2018-03-16 15:59:26.10139146 UTC

.section .text
.align 8
_c4zm3:
_c4zm3:
	movq 8(%rbp),%rax
	leaq block_c4zm8_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv_entry
	.size _c4zm3, .-_c4zm3


==================== Asm code ====================
2018-03-16 15:59:26.102504499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zm3_info:
	.quad	_c4zm3
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+752


==================== Asm code ====================
2018-03-16 15:59:26.103387517 UTC

.section .text
.align 8
_c4zm8:
_c4zm8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zmj
_c4zmi:
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zmj:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4zm8, .-_c4zm8


==================== Asm code ====================
2018-03-16 15:59:26.104060813 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zm8_info:
	.quad	_c4zm8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.108864379 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cmod_closure
.type GHC.Int.$fIntegralInt16_$cmod_closure, @object
GHC.Int.$fIntegralInt16_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt16_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.109822892 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cmod_entry
.type GHC.Int.$fIntegralInt16_$cmod_entry, @object
GHC.Int.$fIntegralInt16_$cmod_entry:
_c4zmO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zmS
_c4zmT:
	leaq block_c4zmL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zmL
_c4zmM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zmS:
	leaq GHC.Int.$fIntegralInt16_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cmod_entry, .-GHC.Int.$fIntegralInt16_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:26.110515882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cmod_info
.type GHC.Int.$fIntegralInt16_$cmod_info, @object
GHC.Int.$fIntegralInt16_$cmod_info:
	.quad	GHC.Int.$fIntegralInt16_$cmod_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.111265708 UTC

.section .text
.align 8
_c4zmL:
_c4zmL:
	leaq block_c4zmR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zmR
_c4zmV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zmL, .-_c4zmL


==================== Asm code ====================
2018-03-16 15:59:26.111872251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zmL_info:
	.quad	_c4zmL
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.112630997 UTC

.section .text
.align 8
_c4zmR:
_c4zmR:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c4znb
_c4znf:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4znb:
	movq 8(%rbp),%rbx
	leaq block_c4zn2_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _c4zmR, .-_c4zmR


==================== Asm code ====================
2018-03-16 15:59:26.113324183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zmR_info:
	.quad	_c4zmR
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.114089985 UTC

.section .text
.align 8
_c4zn2:
_c4zn2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zne
_c4znd:
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movswq %bx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zne:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4zn2, .-_c4zn2


==================== Asm code ====================
2018-03-16 15:59:26.114762894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zn2_info:
	.quad	_c4zn2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.116576548 UTC

.section .data
.align 8
.align 1
lvl7_r4kPy_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt3_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.122201769 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquotRem_closure
.type GHC.Int.$fIntegralInt16_$cquotRem_closure, @object
GHC.Int.$fIntegralInt16_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.123781036 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cquotRem_entry
.type GHC.Int.$fIntegralInt16_$cquotRem_entry, @object
GHC.Int.$fIntegralInt16_$cquotRem_entry:
_c4znN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4znR
_c4znS:
	leaq block_c4znK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4znK
_c4znL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4znR:
	leaq GHC.Int.$fIntegralInt16_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cquotRem_entry, .-GHC.Int.$fIntegralInt16_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:26.124535424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cquotRem_info
.type GHC.Int.$fIntegralInt16_$cquotRem_info, @object
GHC.Int.$fIntegralInt16_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_entry
	.quad	0
	.quad	-4611686014132420594
	.quad	8589934607
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.125201568 UTC

.section .text
.align 8
_c4znK:
_c4znK:
	leaq block_c4znQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4znQ
_c4znU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4znK, .-_c4znK


==================== Asm code ====================
2018-03-16 15:59:26.125864888 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4znK_info:
	.quad	_c4znK
	.quad	1
	.quad	-9223372032559808482
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.126982688 UTC

.section .text
.align 8
_c4znQ:
_c4znQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4zo0
_c4znZ:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4zov
_c4zot:
	cmpq $-32768,%rax
	je _c4zos
_c4zor:
	movq $-1,%rbx
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movswq %dx,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movswq %ax,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zov:
	testq %rbx,%rbx
	jne _c4zod
_c4zou:
	addq $-56,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zos:
	addq $-56,%r12
	leaq lvl7_r4kPy_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zod:
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movswq %dx,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movswq %ax,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zo0:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4znQ, .-_c4znQ


==================== Asm code ====================
2018-03-16 15:59:26.127891905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4znQ_info:
	.quad	_c4znQ
	.quad	65
	.quad	-9223372032559808482
	.quad	S4wm5_srt+536


==================== Asm code ====================
2018-03-16 15:59:26.135876316 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod_closure
.type GHC.Int.$w$cdivMod_closure, @object
GHC.Int.$w$cdivMod_closure:
	.quad	GHC.Int.$w$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.136510367 UTC

.section .data.rel.ro
.align 8
.align 1
u4zrR_srtd:
	.quad	S4wm5_srt+536
	.quad	33
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:26.137604012 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod_entry
.type GHC.Int.$w$cdivMod_entry, @object
GHC.Int.$w$cdivMod_entry:
_c4zph:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zpi
_c4zpj:
	testq %rsi,%rsi
	je _c4zpg
_c4zpf:
	cmpq $-1,%rsi
	je _c4zrM
_u4zrN:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4zpo
_c4zrM:
	cmpq $-32768,%r14
	je _c4zrL
_u4zrO:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4zpo
_c4zrL:
	leaq GHC.Int.$fBitsInt3_closure+1(%rip),%r14
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4zpi:
	leaq GHC.Int.$w$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
_c4zpg:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdivMod_entry, .-GHC.Int.$w$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:26.138397528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod_info
.type GHC.Int.$w$cdivMod_info, @object
GHC.Int.$w$cdivMod_info:
	.quad	GHC.Int.$w$cdivMod_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934604
	.quad	u4zrR_srtd


==================== Asm code ====================
2018-03-16 15:59:26.140088742 UTC

.section .text
.align 8
_c4zpo:
_c4zpo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4zps
_c4zpr:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4zql
_c4zrC:
	testq %rbx,%rbx
	jge _c4zrf
_c4zrB:
	decq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zrf:
	testq %rax,%rax
	jge _c4zqC
_c4zrd:
	testq %rbx,%rbx
	jle _c4zqQ
_c4zrc:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zqQ:
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zqC:
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zql:
	testq %rax,%rax
	jge _c4zpI
_c4zqj:
	testq %rbx,%rbx
	jle _c4zpW
_c4zqi:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movswq %bx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zpW:
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zpI:
	cqto
	idivq %rbx
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movswq %dx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I16#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movswq %ax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zps:
	movq $32,904(%r13)
	leaq block_c4zpo_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c4zpo, .-_c4zpo


==================== Asm code ====================
2018-03-16 15:59:26.14164446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zpo_info:
	.quad	_c4zpo
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.147047911 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdivMod_closure
.type GHC.Int.$fIntegralInt16_$cdivMod_closure, @object
GHC.Int.$fIntegralInt16_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.147964371 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt16_$cdivMod_entry
.type GHC.Int.$fIntegralInt16_$cdivMod_entry, @object
GHC.Int.$fIntegralInt16_$cdivMod_entry:
_c4zt3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zte
_c4ztf:
	leaq block_c4zt0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zt0
_c4zt1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zte:
	leaq GHC.Int.$fIntegralInt16_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt16_$cdivMod_entry, .-GHC.Int.$fIntegralInt16_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:26.148674686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_$cdivMod_info
.type GHC.Int.$fIntegralInt16_$cdivMod_info, @object
GHC.Int.$fIntegralInt16_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+792


==================== Asm code ====================
2018-03-16 15:59:26.149451637 UTC

.section .text
.align 8
_c4zt0:
_c4zt0:
	leaq block_c4zt6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zt6
_c4zt7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zt0, .-_c4zt0


==================== Asm code ====================
2018-03-16 15:59:26.150140451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zt0_info:
	.quad	_c4zt0
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+792


==================== Asm code ====================
2018-03-16 15:59:26.150801305 UTC

.section .text
.align 8
_c4zt6:
_c4zt6:
	movq 8(%rbp),%rax
	leaq block_c4ztb_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod_entry
	.size _c4zt6, .-_c4zt6


==================== Asm code ====================
2018-03-16 15:59:26.151437512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zt6_info:
	.quad	_c4zt6
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+792


==================== Asm code ====================
2018-03-16 15:59:26.152189465 UTC

.section .text
.align 8
_c4ztb:
_c4ztb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4ztk
_c4ztj:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ztk:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4ztb, .-_c4ztb


==================== Asm code ====================
2018-03-16 15:59:26.152829315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ztb_info:
	.quad	_c4ztb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.157081332 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt16_$ctoRational_closure
.type GHC.Int.$fRealInt16_$ctoRational_closure, @object
GHC.Int.$fRealInt16_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt16_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.158063107 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt16_$ctoRational_entry
.type GHC.Int.$fRealInt16_$ctoRational_entry, @object
GHC.Int.$fRealInt16_$ctoRational_entry:
_c4ztP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zu3
_c4zu4:
	leaq block_c4ztM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ztM
_c4ztN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zu3:
	leaq GHC.Int.$fRealInt16_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt16_$ctoRational_entry, .-GHC.Int.$fRealInt16_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:26.158791016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt16_$ctoRational_info
.type GHC.Int.$fRealInt16_$ctoRational_info, @object
GHC.Int.$fRealInt16_$ctoRational_info:
	.quad	GHC.Int.$fRealInt16_$ctoRational_entry
	.quad	0
	.quad	18014428574253070
	.quad	4294967301
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:26.159508903 UTC

.section .text
.align 8
_c4ztM:
_c4ztM:
	leaq block_c4ztS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4ztM, .-_c4ztM


==================== Asm code ====================
2018-03-16 15:59:26.160122213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ztM_info:
	.quad	_c4ztM
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:26.160807345 UTC

.section .text
.align 8
_c4ztS:
_c4ztS:
	leaq block_c4ztW_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c4ztS, .-_c4ztS


==================== Asm code ====================
2018-03-16 15:59:26.161629002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ztS_info:
	.quad	_c4ztS
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+632


==================== Asm code ====================
2018-03-16 15:59:26.162293613 UTC

.section .text
.align 8
_c4ztW:
_c4ztW:
	leaq block_c4zu0_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Real.$w$sreduce_entry@gotpcrel(%rip)
	.size _c4ztW, .-_c4ztW


==================== Asm code ====================
2018-03-16 15:59:26.162925497 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ztW_info:
	.quad	_c4ztW
	.quad	0
	.quad	12884901918
	.quad	S4wm5_srt+640


==================== Asm code ====================
2018-03-16 15:59:26.16377601 UTC

.section .text
.align 8
_c4zu0:
_c4zu0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4zua
_c4zu9:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zua:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4zu0, .-_c4zu0


==================== Asm code ====================
2018-03-16 15:59:26.164501077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zu0_info:
	.quad	_c4zu0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.16699979 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt16_closure
.type GHC.Int.$fRealInt16_closure, @object
GHC.Int.$fRealInt16_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt16_closure+1
	.quad	GHC.Int.$fOrdInt16_closure+1
	.quad	GHC.Int.$fRealInt16_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.16912799 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt16_closure
.type GHC.Int.$fIntegralInt16_closure, @object
GHC.Int.$fIntegralInt16_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt16_closure+1
	.quad	GHC.Int.$fEnumInt16_closure+1
	.quad	GHC.Int.$fIntegralInt16_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt16_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt16_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.174243291 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeIndex_closure
.type GHC.Int.$fIxInt16_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt16_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:26.175133876 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cunsafeIndex_entry
.type GHC.Int.$fIxInt16_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt16_$cunsafeIndex_entry:
_c4zuJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zv0
_c4zv1:
	leaq block_c4zuG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zuG
_c4zuH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zv0:
	leaq GHC.Int.$fIxInt16_$cunsafeIndex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cunsafeIndex_entry, .-GHC.Int.$fIxInt16_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:26.175812639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeIndex_info
.type GHC.Int.$fIxInt16_$cunsafeIndex_info, @object
GHC.Int.$fIxInt16_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.176554226 UTC

.section .text
.align 8
_c4zuG:
_c4zuG:
	leaq block_c4zuM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zuM
_c4zuN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zuG, .-_c4zuG


==================== Asm code ====================
2018-03-16 15:59:26.177204334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zuG_info:
	.quad	_c4zuG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.178001586 UTC

.section .text
.align 8
_c4zuM:
_c4zuM:
	leaq block_c4zuR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zuR
_c4zuS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zuM, .-_c4zuM


==================== Asm code ====================
2018-03-16 15:59:26.178645256 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zuM_info:
	.quad	_c4zuM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.179399725 UTC

.section .text
.align 8
_c4zuR:
_c4zuR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zv6
_c4zv5:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zv6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zuR, .-_c4zuR


==================== Asm code ====================
2018-03-16 15:59:26.180040513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zuR_info:
	.quad	_c4zuR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.183271086 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crange_closure
.type GHC.Int.$fIxInt16_$crange_closure, @object
GHC.Int.$fIxInt16_$crange_closure:
	.quad	GHC.Int.$fIxInt16_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.184169869 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$crange_entry
.type GHC.Int.$fIxInt16_$crange_entry, @object
GHC.Int.$fIxInt16_$crange_entry:
_c4zvF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zvG
_c4zvH:
	leaq block_c4zvC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zvC
_c4zvD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zvG:
	leaq GHC.Int.$fIxInt16_$crange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$crange_entry, .-GHC.Int.$fIxInt16_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:26.184884474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crange_info
.type GHC.Int.$fIxInt16_$crange_info, @object
GHC.Int.$fIxInt16_$crange_info:
	.quad	GHC.Int.$fIxInt16_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+816


==================== Asm code ====================
2018-03-16 15:59:26.185646871 UTC

.section .text
.align 8
_c4zvC:
_c4zvC:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt16_$cenumFromTo_entry
	.size _c4zvC, .-_c4zvC


==================== Asm code ====================
2018-03-16 15:59:26.186721843 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zvC_info:
	.quad	_c4zvC
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+824


==================== Asm code ====================
2018-03-16 15:59:26.191423175 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crangeSize_closure
.type GHC.Int.$fIxInt16_$crangeSize_closure, @object
GHC.Int.$fIxInt16_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt16_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:26.192273276 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$crangeSize_entry
.type GHC.Int.$fIxInt16_$crangeSize_entry, @object
GHC.Int.$fIxInt16_$crangeSize_entry:
_c4zw3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zwc
_c4zwd:
	leaq block_c4zw0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zw0
_c4zw1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zwc:
	leaq GHC.Int.$fIxInt16_$crangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$crangeSize_entry, .-GHC.Int.$fIxInt16_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:26.192952287 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$crangeSize_info
.type GHC.Int.$fIxInt16_$crangeSize_info, @object
GHC.Int.$fIxInt16_$crangeSize_info:
	.quad	GHC.Int.$fIxInt16_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.194191848 UTC

.section .text
.align 8
_c4zw0:
_c4zw0:
	leaq block_c4zw6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zw6
_c4zw7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zw0, .-_c4zw0


==================== Asm code ====================
2018-03-16 15:59:26.194776081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zw0_info:
	.quad	_c4zw0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.195441398 UTC

.section .text
.align 8
_c4zw6:
_c4zw6:
	leaq block_c4zwb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zwb
_c4zwg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zw6, .-_c4zw6


==================== Asm code ====================
2018-03-16 15:59:26.196110756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zw6_info:
	.quad	_c4zw6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.196915482 UTC

.section .text
.align 8
_c4zwb:
_c4zwb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zwm
_c4zwl:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4zwq
_c4zwA:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zwq:
	addq $-16,%r12
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zwm:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zwb, .-_c4zwb


==================== Asm code ====================
2018-03-16 15:59:26.197694775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zwb_info:
	.quad	_c4zwb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.202058587 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:26.203000538 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_entry:
_c4zxb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zxv
_c4zxw:
	leaq block_c4zx8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zx8
_c4zx9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zxv:
	leaq GHC.Int.$fIxInt16_$cunsafeRangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt16_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:26.20376446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt16_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt16_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.204500081 UTC

.section .text
.align 8
_c4zx8:
_c4zx8:
	leaq block_c4zxe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zxe
_c4zxf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zx8, .-_c4zx8


==================== Asm code ====================
2018-03-16 15:59:26.20515867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zx8_info:
	.quad	_c4zx8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.206226155 UTC

.section .text
.align 8
_c4zxe:
_c4zxe:
	leaq block_c4zxj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zxj
_c4zxk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zxe, .-_c4zxe


==================== Asm code ====================
2018-03-16 15:59:26.206858796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zxe_info:
	.quad	_c4zxe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.208110036 UTC

.section .text
.align 8
_c4zxj:
_c4zxj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zxB
_c4zxA:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zxB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zxj, .-_c4zxj


==================== Asm code ====================
2018-03-16 15:59:26.20884751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zxj_info:
	.quad	_c4zxj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.21427609 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cindex_closure
.type GHC.Int.$fIxInt16_$cindex_closure, @object
GHC.Int.$fIxInt16_$cindex_closure:
	.quad	GHC.Int.$fIxInt16_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.21512179 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt16_$cindex_entry
.type GHC.Int.$fIxInt16_$cindex_entry, @object
GHC.Int.$fIxInt16_$cindex_entry:
_c4zyb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zyk
_c4zyl:
	leaq block_c4zy8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zy8
_c4zy9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zyk:
	leaq GHC.Int.$fIxInt16_$cindex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt16_$cindex_entry, .-GHC.Int.$fIxInt16_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:26.215789397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt16_$cindex_info
.type GHC.Int.$fIxInt16_$cindex_info, @object
GHC.Int.$fIxInt16_$cindex_info:
	.quad	GHC.Int.$fIxInt16_$cindex_entry
	.quad	0
	.quad	2251804108652558
	.quad	8589934607
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:26.216497976 UTC

.section .text
.align 8
_c4zy8:
_c4zy8:
	leaq block_c4zye_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zye
_c4zyf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zy8, .-_c4zy8


==================== Asm code ====================
2018-03-16 15:59:26.217141538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zy8_info:
	.quad	_c4zy8
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:26.218151176 UTC

.section .text
.align 8
_c4zye:
_c4zye:
	leaq block_c4zyj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4zyj
_c4zyo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zye, .-_c4zye


==================== Asm code ====================
2018-03-16 15:59:26.218784924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zye_info:
	.quad	_c4zye
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:26.219531984 UTC

.section .text
.align 8
_c4zyj:
_c4zyj:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4zyw
_c4zyA:
	leaq block_c4zyz_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zyz
_c4zyB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zyw:
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zyj, .-_c4zyj


==================== Asm code ====================
2018-03-16 15:59:26.220187555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zyj_info:
	.quad	_c4zyj
	.quad	130
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:26.221001 UTC

.section .text
.align 8
_c4zyz:
_c4zyz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zyH
_c4zyG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4zyL
_c4zyS:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zyL:
	addq $-16,%r12
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zyH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zyz, .-_c4zyz


==================== Asm code ====================
2018-03-16 15:59:26.221757208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zyz_info:
	.quad	_c4zyz
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+680


==================== Asm code ====================
2018-03-16 15:59:26.223652652 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt16_closure
.type GHC.Int.$fIxInt16_closure, @object
GHC.Int.$fIxInt16_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt16_closure+1
	.quad	GHC.Int.$fIxInt16_$crange_closure+1
	.quad	GHC.Int.$fIxInt16_$cindex_closure+2
	.quad	GHC.Int.$fIxInt16_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt16_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt16_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt16_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.227465426 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt32_closure
.type GHC.Int.eqInt32_closure, @object
GHC.Int.eqInt32_closure:
	.quad	GHC.Int.eqInt32_info


==================== Asm code ====================
2018-03-16 15:59:26.228856161 UTC

.section .text
.align 8
.globl GHC.Int.eqInt32_entry
.type GHC.Int.eqInt32_entry, @object
GHC.Int.eqInt32_entry:
_c4zzA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zzE
_c4zzF:
	leaq block_c4zzx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zzx
_c4zzy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zzE:
	leaq GHC.Int.eqInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.eqInt32_entry, .-GHC.Int.eqInt32_entry


==================== Asm code ====================
2018-03-16 15:59:26.229642432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt32_info
.type GHC.Int.eqInt32_info, @object
GHC.Int.eqInt32_info:
	.quad	GHC.Int.eqInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.23036431 UTC

.section .text
.align 8
_c4zzx:
_c4zzx:
	leaq block_c4zzD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zzD
_c4zzH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zzx, .-_c4zzx


==================== Asm code ====================
2018-03-16 15:59:26.230944974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zzx_info:
	.quad	_c4zzx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.231672545 UTC

.section .text
.align 8
_c4zzD:
_c4zzD:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zzD, .-_c4zzD


==================== Asm code ====================
2018-03-16 15:59:26.232310594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zzD_info:
	.quad	_c4zzD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.23772793 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt32_closure
.type GHC.Int.$fEqInt32_closure, @object
GHC.Int.$fEqInt32_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt32_closure+2
	.quad	GHC.Int.neInt32_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.241685286 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt32_closure
.type GHC.Int.gtInt32_closure, @object
GHC.Int.gtInt32_closure:
	.quad	GHC.Int.gtInt32_info


==================== Asm code ====================
2018-03-16 15:59:26.242590166 UTC

.section .text
.align 8
.globl GHC.Int.gtInt32_entry
.type GHC.Int.gtInt32_entry, @object
GHC.Int.gtInt32_entry:
_c4zAh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zAl
_c4zAm:
	leaq block_c4zAe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zAe
_c4zAf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zAl:
	leaq GHC.Int.gtInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.gtInt32_entry, .-GHC.Int.gtInt32_entry


==================== Asm code ====================
2018-03-16 15:59:26.243259884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt32_info
.type GHC.Int.gtInt32_info, @object
GHC.Int.gtInt32_info:
	.quad	GHC.Int.gtInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.243994648 UTC

.section .text
.align 8
_c4zAe:
_c4zAe:
	leaq block_c4zAk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zAk
_c4zAo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zAe, .-_c4zAe


==================== Asm code ====================
2018-03-16 15:59:26.244647169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zAe_info:
	.quad	_c4zAe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.245480074 UTC

.section .text
.align 8
_c4zAk:
_c4zAk:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zAk, .-_c4zAk


==================== Asm code ====================
2018-03-16 15:59:26.246162786 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zAk_info:
	.quad	_c4zAk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.250259782 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt32_closure
.type GHC.Int.geInt32_closure, @object
GHC.Int.geInt32_closure:
	.quad	GHC.Int.geInt32_info


==================== Asm code ====================
2018-03-16 15:59:26.251133219 UTC

.section .text
.align 8
.globl GHC.Int.geInt32_entry
.type GHC.Int.geInt32_entry, @object
GHC.Int.geInt32_entry:
_c4zAX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zB1
_c4zB2:
	leaq block_c4zAU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zAU
_c4zAV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zB1:
	leaq GHC.Int.geInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.geInt32_entry, .-GHC.Int.geInt32_entry


==================== Asm code ====================
2018-03-16 15:59:26.251934411 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt32_info
.type GHC.Int.geInt32_info, @object
GHC.Int.geInt32_info:
	.quad	GHC.Int.geInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.25273356 UTC

.section .text
.align 8
_c4zAU:
_c4zAU:
	leaq block_c4zB0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zB0
_c4zB4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zAU, .-_c4zAU


==================== Asm code ====================
2018-03-16 15:59:26.253440096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zAU_info:
	.quad	_c4zAU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.254719878 UTC

.section .text
.align 8
_c4zB0:
_c4zB0:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zB0, .-_c4zB0


==================== Asm code ====================
2018-03-16 15:59:26.255431136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zB0_info:
	.quad	_c4zB0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.259217543 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt32_closure
.type GHC.Int.ltInt32_closure, @object
GHC.Int.ltInt32_closure:
	.quad	GHC.Int.ltInt32_info


==================== Asm code ====================
2018-03-16 15:59:26.260125859 UTC

.section .text
.align 8
.globl GHC.Int.ltInt32_entry
.type GHC.Int.ltInt32_entry, @object
GHC.Int.ltInt32_entry:
_c4zBD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zBH
_c4zBI:
	leaq block_c4zBA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zBA
_c4zBB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zBH:
	leaq GHC.Int.ltInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.ltInt32_entry, .-GHC.Int.ltInt32_entry


==================== Asm code ====================
2018-03-16 15:59:26.260836714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt32_info
.type GHC.Int.ltInt32_info, @object
GHC.Int.ltInt32_info:
	.quad	GHC.Int.ltInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.26187943 UTC

.section .text
.align 8
_c4zBA:
_c4zBA:
	leaq block_c4zBG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zBG
_c4zBK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zBA, .-_c4zBA


==================== Asm code ====================
2018-03-16 15:59:26.262478971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zBA_info:
	.quad	_c4zBA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.263193251 UTC

.section .text
.align 8
_c4zBG:
_c4zBG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zBG, .-_c4zBG


==================== Asm code ====================
2018-03-16 15:59:26.263855187 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zBG_info:
	.quad	_c4zBG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.267499296 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt32_closure
.type GHC.Int.leInt32_closure, @object
GHC.Int.leInt32_closure:
	.quad	GHC.Int.leInt32_info


==================== Asm code ====================
2018-03-16 15:59:26.268374889 UTC

.section .text
.align 8
.globl GHC.Int.leInt32_entry
.type GHC.Int.leInt32_entry, @object
GHC.Int.leInt32_entry:
_c4zCj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zCn
_c4zCo:
	leaq block_c4zCg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zCg
_c4zCh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zCn:
	leaq GHC.Int.leInt32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.leInt32_entry, .-GHC.Int.leInt32_entry


==================== Asm code ====================
2018-03-16 15:59:26.269095428 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt32_info
.type GHC.Int.leInt32_info, @object
GHC.Int.leInt32_info:
	.quad	GHC.Int.leInt32_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.269912228 UTC

.section .text
.align 8
_c4zCg:
_c4zCg:
	leaq block_c4zCm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zCm
_c4zCq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zCg, .-_c4zCg


==================== Asm code ====================
2018-03-16 15:59:26.270550281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zCg_info:
	.quad	_c4zCg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.271345103 UTC

.section .text
.align 8
_c4zCm:
_c4zCm:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zCm, .-_c4zCm


==================== Asm code ====================
2018-03-16 15:59:26.272071907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zCm_info:
	.quad	_c4zCm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.276879761 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$ccompare_closure
.type GHC.Int.$fOrdInt32_$ccompare_closure, @object
GHC.Int.$fOrdInt32_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt32_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:26.278149482 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$ccompare_entry
.type GHC.Int.$fOrdInt32_$ccompare_entry, @object
GHC.Int.$fOrdInt32_$ccompare_entry:
_c4zCZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zD3
_c4zD4:
	leaq block_c4zCW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zCW
_c4zCX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zD3:
	leaq GHC.Int.$fOrdInt32_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$ccompare_entry, .-GHC.Int.$fOrdInt32_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:26.278863965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$ccompare_info
.type GHC.Int.$fOrdInt32_$ccompare_info, @object
GHC.Int.$fOrdInt32_$ccompare_info:
	.quad	GHC.Int.$fOrdInt32_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.279616275 UTC

.section .text
.align 8
_c4zCW:
_c4zCW:
	leaq block_c4zD2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zD2
_c4zD6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zCW, .-_c4zCW


==================== Asm code ====================
2018-03-16 15:59:26.280268501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zCW_info:
	.quad	_c4zCW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.281085714 UTC

.section .text
.align 8
_c4zD2:
_c4zD2:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4zDl
_c4zDk:
	cmpq %rbx,%rax
	jg _c4zDh
_c4zDi:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zDl:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zDh:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zD2, .-_c4zD2


==================== Asm code ====================
2018-03-16 15:59:26.281873711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zD2_info:
	.quad	_c4zD2
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.285782621 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmax_closure
.type GHC.Int.$fOrdInt32_$cmax_closure, @object
GHC.Int.$fOrdInt32_$cmax_closure:
	.quad	GHC.Int.$fOrdInt32_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:26.286677258 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$cmax_entry
.type GHC.Int.$fOrdInt32_$cmax_entry, @object
GHC.Int.$fOrdInt32_$cmax_entry:
_c4zDQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zDU
_c4zDV:
	leaq block_c4zDN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zDN
_c4zDO:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zDU:
	leaq GHC.Int.$fOrdInt32_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$cmax_entry, .-GHC.Int.$fOrdInt32_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:26.287368296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmax_info
.type GHC.Int.$fOrdInt32_$cmax_info, @object
GHC.Int.$fOrdInt32_$cmax_info:
	.quad	GHC.Int.$fOrdInt32_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.288083229 UTC

.section .text
.align 8
_c4zDN:
_c4zDN:
	leaq block_c4zDT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zDT
_c4zDX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zDN, .-_c4zDN


==================== Asm code ====================
2018-03-16 15:59:26.288771125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zDN_info:
	.quad	_c4zDN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.28951492 UTC

.section .text
.align 8
_c4zDT:
_c4zDT:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4zE5
_c4zE6:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zE5:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zDT, .-_c4zDT


==================== Asm code ====================
2018-03-16 15:59:26.290136541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zDT_info:
	.quad	_c4zDT
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.294253369 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmin_closure
.type GHC.Int.$fOrdInt32_$cmin_closure, @object
GHC.Int.$fOrdInt32_$cmin_closure:
	.quad	GHC.Int.$fOrdInt32_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:26.295236658 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt32_$cmin_entry
.type GHC.Int.$fOrdInt32_$cmin_entry, @object
GHC.Int.$fOrdInt32_$cmin_entry:
_c4zEA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zEE
_c4zEF:
	leaq block_c4zEx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zEx
_c4zEy:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zEE:
	leaq GHC.Int.$fOrdInt32_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt32_$cmin_entry, .-GHC.Int.$fOrdInt32_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:26.296454098 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_$cmin_info
.type GHC.Int.$fOrdInt32_$cmin_info, @object
GHC.Int.$fOrdInt32_$cmin_info:
	.quad	GHC.Int.$fOrdInt32_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.297230992 UTC

.section .text
.align 8
_c4zEx:
_c4zEx:
	leaq block_c4zED_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zED
_c4zEH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zEx, .-_c4zEx


==================== Asm code ====================
2018-03-16 15:59:26.298097982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zEx_info:
	.quad	_c4zEx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.298798555 UTC

.section .text
.align 8
_c4zED:
_c4zED:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4zEP
_c4zEQ:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zEP:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zED, .-_c4zED


==================== Asm code ====================
2018-03-16 15:59:26.299415389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zED_info:
	.quad	_c4zED
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.301350688 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt32_closure
.type GHC.Int.$fOrdInt32_closure, @object
GHC.Int.$fOrdInt32_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt32_closure+1
	.quad	GHC.Int.$fOrdInt32_$ccompare_closure+2
	.quad	GHC.Int.ltInt32_closure+2
	.quad	GHC.Int.leInt32_closure+2
	.quad	GHC.Int.gtInt32_closure+2
	.quad	GHC.Int.geInt32_closure+2
	.quad	GHC.Int.$fOrdInt32_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt32_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.306297042 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cinRange_closure
.type GHC.Int.$fIxInt32_$cinRange_closure, @object
GHC.Int.$fIxInt32_$cinRange_closure:
	.quad	GHC.Int.$fIxInt32_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:26.307234923 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cinRange_entry
.type GHC.Int.$fIxInt32_$cinRange_entry, @object
GHC.Int.$fIxInt32_$cinRange_entry:
_c4zFl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zFu
_c4zFv:
	leaq block_c4zFi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zFi
_c4zFj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zFu:
	leaq GHC.Int.$fIxInt32_$cinRange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cinRange_entry, .-GHC.Int.$fIxInt32_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:26.30794449 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cinRange_info
.type GHC.Int.$fIxInt32_$cinRange_info, @object
GHC.Int.$fIxInt32_$cinRange_info:
	.quad	GHC.Int.$fIxInt32_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.308672631 UTC

.section .text
.align 8
_c4zFi:
_c4zFi:
	leaq block_c4zFo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zFo
_c4zFp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zFi, .-_c4zFi


==================== Asm code ====================
2018-03-16 15:59:26.309684524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zFi_info:
	.quad	_c4zFi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.310442889 UTC

.section .text
.align 8
_c4zFo:
_c4zFo:
	leaq block_c4zFt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4zFt
_c4zFy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zFo, .-_c4zFo


==================== Asm code ====================
2018-03-16 15:59:26.311133349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zFo_info:
	.quad	_c4zFo
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.312039378 UTC

.section .text
.align 8
_c4zFt:
_c4zFt:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4zFG
_c4zFK:
	movq 8(%rbp),%rbx
	leaq block_c4zFJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4zFJ
_c4zFL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zFG:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zFt, .-_c4zFt


==================== Asm code ====================
2018-03-16 15:59:26.31274731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zFt_info:
	.quad	_c4zFt
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.313555805 UTC

.section .text
.align 8
_c4zFJ:
_c4zFJ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zFJ, .-_c4zFJ


==================== Asm code ====================
2018-03-16 15:59:26.314254163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zFJ_info:
	.quad	_c4zFJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.316595389 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt3_closure
.type GHC.Int.$fNumInt3_closure, @object
GHC.Int.$fNumInt3_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:26.320231614 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$csignum_closure
.type GHC.Int.$fNumInt32_$csignum_closure, @object
GHC.Int.$fNumInt32_$csignum_closure:
	.quad	GHC.Int.$fNumInt32_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:26.321151715 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$csignum_entry
.type GHC.Int.$fNumInt32_$csignum_entry, @object
GHC.Int.$fNumInt32_$csignum_entry:
_c4zGz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zGA
_c4zGB:
	leaq block_c4zGw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zGw
_c4zGx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zGA:
	leaq GHC.Int.$fNumInt32_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$csignum_entry, .-GHC.Int.$fNumInt32_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:26.322392386 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$csignum_info
.type GHC.Int.$fNumInt32_$csignum_info, @object
GHC.Int.$fNumInt32_$csignum_info:
	.quad	GHC.Int.$fNumInt32_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.323231589 UTC

.section .text
.align 8
_c4zGw:
_c4zGw:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4zGN
_c4zGO:
	leaq GHC.Int.$fNumInt3_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zGL:
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zGN:
	testq %rax,%rax
	je _c4zGL
_c4zGK:
	leaq GHC.Int.$fNumInt4_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zGw, .-_c4zGw


==================== Asm code ====================
2018-03-16 15:59:26.323920811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zGw_info:
	.quad	_c4zGw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.327776545 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cabs_closure
.type GHC.Int.$fNumInt32_$cabs_closure, @object
GHC.Int.$fNumInt32_$cabs_closure:
	.quad	GHC.Int.$fNumInt32_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:26.328687375 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt32_$cabs_entry
.type GHC.Int.$fNumInt32_$cabs_entry, @object
GHC.Int.$fNumInt32_$cabs_entry:
_c4zHa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zHb
_c4zHc:
	leaq block_c4zH7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zH7
_c4zH8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zHb:
	leaq GHC.Int.$fNumInt32_$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt32_$cabs_entry, .-GHC.Int.$fNumInt32_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:26.329439747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt32_$cabs_info
.type GHC.Int.$fNumInt32_$cabs_info, @object
GHC.Int.$fNumInt32_$cabs_info:
	.quad	GHC.Int.$fNumInt32_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.330345122 UTC

.section .text
.align 8
_c4zH7:
_c4zH7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zHh
_c4zHg:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4zHt
_c4zHu:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zHt:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zHh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zH7, .-_c4zH7


==================== Asm code ====================
2018-03-16 15:59:26.331046237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zH7_info:
	.quad	_c4zH7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.332988534 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt32_closure
.type GHC.Int.$fNumInt32_closure, @object
GHC.Int.$fNumInt32_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt32_$c+_closure+2
	.quad	GHC.Int.$fNumInt32_$c-_closure+2
	.quad	GHC.Int.$fNumInt32_$c*_closure+2
	.quad	GHC.Int.$fNumInt32_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt32_$cabs_closure+1
	.quad	GHC.Int.$fNumInt32_$csignum_closure+1
	.quad	GHC.Int.$fNumInt32_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.335164635 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt5_closure
.type GHC.Int.$fBitsInt5_closure, @object
GHC.Int.$fBitsInt5_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt4_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.33825086 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:26.33904598 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry:
_c4zHS:
	leaq GHC.Int.$fBitsInt5_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:26.339675604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt32_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt32_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.343480767 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbit_closure
.type GHC.Int.$fBitsInt32_$cbit_closure, @object
GHC.Int.$fBitsInt32_$cbit_closure:
	.quad	GHC.Int.$fBitsInt32_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:26.344366665 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cbit_entry
.type GHC.Int.$fBitsInt32_$cbit_entry, @object
GHC.Int.$fBitsInt32_$cbit_entry:
_c4zI7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zI8
_c4zI9:
	leaq block_c4zI4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zI4
_c4zI5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zI8:
	leaq GHC.Int.$fBitsInt32_$cbit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cbit_entry, .-GHC.Int.$fBitsInt32_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:26.345041892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cbit_info
.type GHC.Int.$fBitsInt32_$cbit_info, @object
GHC.Int.$fBitsInt32_$cbit_info:
	.quad	GHC.Int.$fBitsInt32_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.346053656 UTC

.section .text
.align 8
_c4zI4:
_c4zI4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zIe
_c4zId:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4zIq
_c4zIr:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zIq:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zIe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zI4, .-_c4zI4


==================== Asm code ====================
2018-03-16 15:59:26.346763434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zI4_info:
	.quad	_c4zI4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.350977187 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ctestBit_closure
.type GHC.Int.$fBitsInt32_$ctestBit_closure, @object
GHC.Int.$fBitsInt32_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt32_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:26.35192891 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ctestBit_entry
.type GHC.Int.$fBitsInt32_$ctestBit_entry, @object
GHC.Int.$fBitsInt32_$ctestBit_entry:
_c4zIP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zIT
_c4zIU:
	leaq block_c4zIM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zIM
_c4zIN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zIT:
	leaq GHC.Int.$fBitsInt32_$ctestBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ctestBit_entry, .-GHC.Int.$fBitsInt32_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.352666575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ctestBit_info
.type GHC.Int.$fBitsInt32_$ctestBit_info, @object
GHC.Int.$fBitsInt32_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt32_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.354007589 UTC

.section .text
.align 8
_c4zIM:
_c4zIM:
	leaq block_c4zIS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zIS
_c4zIW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zIM, .-_c4zIM


==================== Asm code ====================
2018-03-16 15:59:26.3546729 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zIM_info:
	.quad	_c4zIM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.355577122 UTC

.section .text
.align 8
_c4zIS:
_c4zIS:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4zJA
_c4zJz:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	andq %rax,%rbx
	testq %rbx,%rbx
	je _c4zJA
_c4zJo:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zJA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zIS, .-_c4zIS


==================== Asm code ====================
2018-03-16 15:59:26.356346587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zIS_info:
	.quad	_c4zIS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.362602916 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateR_closure
.type GHC.Int.$fBitsInt32_$crotateR_closure, @object
GHC.Int.$fBitsInt32_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt32_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:26.36357394 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotateR_entry
.type GHC.Int.$fBitsInt32_$crotateR_entry, @object
GHC.Int.$fBitsInt32_$crotateR_entry:
_c4zK7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zKb
_c4zKc:
	leaq block_c4zK4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zK4
_c4zK5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zKb:
	leaq GHC.Int.$fBitsInt32_$crotateR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$crotateR_entry, .-GHC.Int.$fBitsInt32_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:26.364184601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateR_info
.type GHC.Int.$fBitsInt32_$crotateR_info, @object
GHC.Int.$fBitsInt32_$crotateR_info:
	.quad	GHC.Int.$fBitsInt32_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.364971021 UTC

.section .text
.align 8
_c4zK4:
_c4zK4:
	leaq block_c4zKa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zKa
_c4zKe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zK4, .-_c4zK4


==================== Asm code ====================
2018-03-16 15:59:26.365835693 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zK4_info:
	.quad	_c4zK4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.366641428 UTC

.section .text
.align 8
_c4zKa:
_c4zKa:
	movq 7(%rbx),%rax
	negq %rax
	andl $31,%eax
	testq %rax,%rax
	jne _u4zL8
_c4zL4:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4zL8:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4zKw
	.size _c4zKa, .-_c4zKa


==================== Asm code ====================
2018-03-16 15:59:26.367287144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zKa_info:
	.quad	_c4zKa
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.368195334 UTC

.section .text
.align 8
_c4zKw:
_c4zKw:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4zL1
_c4zL0:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movl %ebx,%ebx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $32,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zL1:
	movq $16,904(%r13)
	leaq block_c4zKv_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4zKw, .-_c4zKw


==================== Asm code ====================
2018-03-16 15:59:26.369074544 UTC

.section .text
.align 8
_c4zKv:
_c4zKv:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4zKw
	.size _c4zKv, .-_c4zKv


==================== Asm code ====================
2018-03-16 15:59:26.369772741 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zKv_info:
	.quad	_c4zKv
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.374278305 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplementBit_closure
.type GHC.Int.$fBitsInt32_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt32_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:26.375257094 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$ccomplementBit_entry
.type GHC.Int.$fBitsInt32_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt32_$ccomplementBit_entry:
_c4zLS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zLW
_c4zLX:
	leaq block_c4zLP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zLP
_c4zLQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zLW:
	leaq GHC.Int.$fBitsInt32_$ccomplementBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$ccomplementBit_entry, .-GHC.Int.$fBitsInt32_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.375971104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$ccomplementBit_info
.type GHC.Int.$fBitsInt32_$ccomplementBit_info, @object
GHC.Int.$fBitsInt32_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.37673665 UTC

.section .text
.align 8
_c4zLP:
_c4zLP:
	leaq block_c4zLV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zLV
_c4zLZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zLP, .-_c4zLP


==================== Asm code ====================
2018-03-16 15:59:26.377484422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zLP_info:
	.quad	_c4zLP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.378390846 UTC

.section .text
.align 8
_c4zLV:
_c4zLV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zM5
_c4zM4:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4zMt
_c4zMu:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zMt:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	xorq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zM5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zLV, .-_c4zLV


==================== Asm code ====================
2018-03-16 15:59:26.379188682 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zLV_info:
	.quad	_c4zLV
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.384236461 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cclearBit_closure
.type GHC.Int.$fBitsInt32_$cclearBit_closure, @object
GHC.Int.$fBitsInt32_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt32_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:26.385143101 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$cclearBit_entry
.type GHC.Int.$fBitsInt32_$cclearBit_entry, @object
GHC.Int.$fBitsInt32_$cclearBit_entry:
_c4zN1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zN5
_c4zN6:
	leaq block_c4zMY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zMY
_c4zMZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zN5:
	leaq GHC.Int.$fBitsInt32_$cclearBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$cclearBit_entry, .-GHC.Int.$fBitsInt32_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.386496159 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$cclearBit_info
.type GHC.Int.$fBitsInt32_$cclearBit_info, @object
GHC.Int.$fBitsInt32_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt32_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.387306216 UTC

.section .text
.align 8
_c4zMY:
_c4zMY:
	leaq block_c4zN4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zN4
_c4zN8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zMY, .-_c4zMY


==================== Asm code ====================
2018-03-16 15:59:26.387947028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zMY_info:
	.quad	_c4zMY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.388849859 UTC

.section .text
.align 8
_c4zN4:
_c4zN4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zNe
_c4zNd:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4zNF
_c4zNR:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zNF:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	movslq %edx,%rbx
	notq %rbx
	andq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zNe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zN4, .-_c4zN4


==================== Asm code ====================
2018-03-16 15:59:26.389674812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zN4_info:
	.quad	_c4zN4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.394126006 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$csetBit_closure
.type GHC.Int.$fBitsInt32_$csetBit_closure, @object
GHC.Int.$fBitsInt32_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt32_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:26.395079195 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$csetBit_entry
.type GHC.Int.$fBitsInt32_$csetBit_entry, @object
GHC.Int.$fBitsInt32_$csetBit_entry:
_c4zOq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zOu
_c4zOv:
	leaq block_c4zOn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zOn
_c4zOo:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zOu:
	leaq GHC.Int.$fBitsInt32_$csetBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt32_$csetBit_entry, .-GHC.Int.$fBitsInt32_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.395780785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$csetBit_info
.type GHC.Int.$fBitsInt32_$csetBit_info, @object
GHC.Int.$fBitsInt32_$csetBit_info:
	.quad	GHC.Int.$fBitsInt32_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.39653416 UTC

.section .text
.align 8
_c4zOn:
_c4zOn:
	leaq block_c4zOt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zOt
_c4zOx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zOn, .-_c4zOn


==================== Asm code ====================
2018-03-16 15:59:26.397148321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zOn_info:
	.quad	_c4zOn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.398220313 UTC

.section .text
.align 8
_c4zOt:
_c4zOt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zOD
_c4zOC:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4zP1
_c4zP2:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4zP1:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movslq %ebx,%rax
	movq 8(%rbp),%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zOD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zOt, .-_c4zOt


==================== Asm code ====================
2018-03-16 15:59:26.398972003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zOt_info:
	.quad	_c4zOt
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.401440726 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateL_closure
.type GHC.Int.$fBitsInt32_$crotateL_closure, @object
GHC.Int.$fBitsInt32_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt32_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:26.402598105 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt32_$crotateL_entry
.type GHC.Int.$fBitsInt32_$crotateL_entry, @object
GHC.Int.$fBitsInt32_$crotateL_entry:
_c4zPw:
	jmp GHC.Int.$fBitsInt32_$crotate_entry
	.size GHC.Int.$fBitsInt32_$crotateL_entry, .-GHC.Int.$fBitsInt32_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:26.403226907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_$crotateL_info
.type GHC.Int.$fBitsInt32_$crotateL_info, @object
GHC.Int.$fBitsInt32_$crotateL_info:
	.quad	GHC.Int.$fBitsInt32_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.405483874 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt32_closure
.type GHC.Int.$fBitsInt32_closure, @object
GHC.Int.$fBitsInt32_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt32_closure+1
	.quad	GHC.Int.$fBitsInt32_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt32_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt32_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt32_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt32_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt6_closure+1
	.quad	GHC.Int.$fBitsInt32_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt32_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt32_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt32_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt32_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt32_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt32_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt32_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt32_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.407376446 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt32_closure
.type GHC.Int.$fFiniteBitsInt32_closure, @object
GHC.Int.$fFiniteBitsInt32_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt32_closure+1
	.quad	GHC.Int.$fBitsInt32_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.41397339 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_go_closure
.type GHC.Int.$fReadInt32_go_closure, @object
GHC.Int.$fReadInt32_go_closure:
	.quad	GHC.Int.$fReadInt32_go_info


==================== Asm code ====================
2018-03-16 15:59:26.414834519 UTC

.section .text
.align 8
sat_s4w3t_entry:
_c4zPY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zPZ
_c4zQ0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt32_go_entry
_c4zPZ:
	jmp *-16(%r13)
	.size sat_s4w3t_entry, .-sat_s4w3t_entry


==================== Asm code ====================
2018-03-16 15:59:26.41547348 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w3t_info:
	.quad	sat_s4w3t_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.416251604 UTC

.section .text
.align 8
sat_s4w3r_entry:
_c4zQ8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zQf
_c4zQg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c4zQ5_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4zQ5
_c4zQ6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zQf:
	jmp *-16(%r13)
	.size sat_s4w3r_entry, .-sat_s4w3r_entry


==================== Asm code ====================
2018-03-16 15:59:26.416957374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w3r_info:
	.quad	sat_s4w3r_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.417793801 UTC

.section .text
.align 8
_c4zQ5:
_c4zQ5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zQj
_c4zQi:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zQj:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zQ5, .-_c4zQ5


==================== Asm code ====================
2018-03-16 15:59:26.418473322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zQ5_info:
	.quad	_c4zQ5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.419256074 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_go_entry
.type GHC.Int.$fReadInt32_go_entry, @object
GHC.Int.$fReadInt32_go_entry:
_c4zQp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zQq
_c4zQr:
	leaq block_c4zPJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zPJ
_c4zPK:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zQq:
	leaq GHC.Int.$fReadInt32_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt32_go_entry, .-GHC.Int.$fReadInt32_go_entry


==================== Asm code ====================
2018-03-16 15:59:26.419943169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_go_info
.type GHC.Int.$fReadInt32_go_info, @object
GHC.Int.$fReadInt32_go_info:
	.quad	GHC.Int.$fReadInt32_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.420866655 UTC

.section .text
.align 8
_c4zPJ:
_c4zPJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4zQm
_c4zQn:
	leaq block_c4zPP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4zPP
_c4zPQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zQm:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zPJ, .-_c4zPJ


==================== Asm code ====================
2018-03-16 15:59:26.421641533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zPJ_info:
	.quad	_c4zPJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.423117184 UTC

.section .text
.align 8
_c4zPP:
_c4zPP:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4zQz
_c4zQy:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s4w3t_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	leaq sat_s4w3r_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zQz:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zPP, .-_c4zPP


==================== Asm code ====================
2018-03-16 15:59:26.423949908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zPP_info:
	.quad	_c4zPP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.427582806 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadsPrec_closure
.type GHC.Int.$fReadInt32_$creadsPrec_closure, @object
GHC.Int.$fReadInt32_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt32_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.428506032 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_$creadsPrec_entry
.type GHC.Int.$fReadInt32_$creadsPrec_entry, @object
GHC.Int.$fReadInt32_$creadsPrec_entry:
_c4zRs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zRw
_c4zRx:
	leaq block_c4zRq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rsi,%rax
	movq %r14,%rsi
	movq GHC.Read.$fReadInt2_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Read.$fReadInt_$sreadNumber_entry@gotpcrel(%rip)
_c4zRw:
	leaq GHC.Int.$fReadInt32_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt32_$creadsPrec_entry, .-GHC.Int.$fReadInt32_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:26.429210984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadsPrec_info
.type GHC.Int.$fReadInt32_$creadsPrec_info, @object
GHC.Int.$fReadInt32_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt32_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4wm5_srt+840


==================== Asm code ====================
2018-03-16 15:59:26.42992346 UTC

.section .text
.align 8
_c4zRq:
_c4zRq:
	movq 8(%rbp),%rax
	leaq block_c4zRv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size _c4zRq, .-_c4zRq


==================== Asm code ====================
2018-03-16 15:59:26.430537023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zRq_info:
	.quad	_c4zRq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.43121354 UTC

.section .text
.align 8
_c4zRv:
_c4zRv:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt32_go_entry
	.size _c4zRv, .-_c4zRv


==================== Asm code ====================
2018-03-16 15:59:26.431800054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zRv_info:
	.quad	_c4zRv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.435906749 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt6_closure
.type GHC.Int.$fReadInt6_closure, @object
GHC.Int.$fReadInt6_closure:
	.quad	GHC.Int.$fReadInt6_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.436632006 UTC

.section .text
.align 8
sat_s4w3A_entry:
_c4zS1:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt32_$creadsPrec_entry
	.size sat_s4w3A_entry, .-sat_s4w3A_entry


==================== Asm code ====================
2018-03-16 15:59:26.437306108 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w3A_info:
	.quad	sat_s4w3A_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4wm5_srt+840


==================== Asm code ====================
2018-03-16 15:59:26.438202732 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt6_entry
.type GHC.Int.$fReadInt6_entry, @object
GHC.Int.$fReadInt6_entry:
_c4zS7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zS8
_c4zS9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zSb
_c4zSa:
	leaq sat_s4w3A_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c4zS4_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4zSb:
	movq $16,904(%r13)
_c4zS8:
	leaq GHC.Int.$fReadInt6_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt6_entry, .-GHC.Int.$fReadInt6_entry


==================== Asm code ====================
2018-03-16 15:59:26.438964663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt6_info
.type GHC.Int.$fReadInt6_info, @object
GHC.Int.$fReadInt6_info:
	.quad	GHC.Int.$fReadInt6_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S4wm5_srt+840


==================== Asm code ====================
2018-03-16 15:59:26.439746921 UTC

.section .text
.align 8
_c4zS4:
_c4zS4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zSe
_c4zSd:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zSe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zS4, .-_c4zS4


==================== Asm code ====================
2018-03-16 15:59:26.440432363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zS4_info:
	.quad	_c4zS4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.444423015 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt5_closure
.type GHC.Int.$fReadInt5_closure, @object
GHC.Int.$fReadInt5_closure:
	.quad	GHC.Int.$fReadInt5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.445008551 UTC

.section .data.rel.ro
.align 8
.align 1
u4zSD_srtd:
	.quad	S4wm5_srt+504
	.quad	46
	.quad	35184372088833


==================== Asm code ====================
2018-03-16 15:59:26.446141532 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt5_entry
.type GHC.Int.$fReadInt5_entry, @object
GHC.Int.$fReadInt5_entry:
_c4zSA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zSB
_c4zSC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4zSz
_c4zSy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt6_closure+2(%rip),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c4zSB:
	jmp *-16(%r13)
_c4zSz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt5_entry, .-GHC.Int.$fReadInt5_entry


==================== Asm code ====================
2018-03-16 15:59:26.446949716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt5_info
.type GHC.Int.$fReadInt5_info, @object
GHC.Int.$fReadInt5_info:
	.quad	GHC.Int.$fReadInt5_entry
	.quad	0
	.quad	-4294967275
	.quad	u4zSD_srtd


==================== Asm code ====================
2018-03-16 15:59:26.449472971 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadList_closure
.type GHC.Int.$fReadInt32_$creadList_closure, @object
GHC.Int.$fReadInt32_$creadList_closure:
	.quad	GHC.Int.$fReadInt32_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.450313896 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt32_$creadList_entry
.type GHC.Int.$fReadInt32_$creadList_entry, @object
GHC.Int.$fReadInt32_$creadList_entry:
_c4zSV:
	movq %r14,%rsi
	leaq GHC.Int.$fReadInt5_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Int.$fReadInt32_$creadList_entry, .-GHC.Int.$fReadInt32_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:26.450928371 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt32_$creadList_info
.type GHC.Int.$fReadInt32_$creadList_info, @object
GHC.Int.$fReadInt32_$creadList_info:
	.quad	GHC.Int.$fReadInt32_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4wm5_srt+872


==================== Asm code ====================
2018-03-16 15:59:26.455404034 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt4_closure
.type GHC.Int.$fReadInt4_closure, @object
GHC.Int.$fReadInt4_closure:
	.quad	GHC.Int.$fReadInt4_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.456645731 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt4_entry
.type GHC.Int.$fReadInt4_entry, @object
GHC.Int.$fReadInt4_entry:
_c4zT9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zTa
_c4zTb:
	leaq block_c4zT6_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt32_$creadList_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4zTa:
	leaq GHC.Int.$fReadInt4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt4_entry, .-GHC.Int.$fReadInt4_entry


==================== Asm code ====================
2018-03-16 15:59:26.458098734 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt4_info
.type GHC.Int.$fReadInt4_info, @object
GHC.Int.$fReadInt4_info:
	.quad	GHC.Int.$fReadInt4_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+880


==================== Asm code ====================
2018-03-16 15:59:26.459369595 UTC

.section .text
.align 8
_c4zT6:
_c4zT6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zTe
_c4zTd:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zTe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zT6, .-_c4zT6


==================== Asm code ====================
2018-03-16 15:59:26.460318186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zT6_info:
	.quad	_c4zT6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.463180407 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt32_closure
.type GHC.Int.$fReadInt32_closure, @object
GHC.Int.$fReadInt32_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt32_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt32_$creadList_closure+1
	.quad	GHC.Int.$fReadInt6_closure+2
	.quad	GHC.Int.$fReadInt4_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.468449909 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquot_closure
.type GHC.Int.$fIntegralInt32_$cquot_closure, @object
GHC.Int.$fIntegralInt32_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt32_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.470008985 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cquot_entry
.type GHC.Int.$fIntegralInt32_$cquot_entry, @object
GHC.Int.$fIntegralInt32_$cquot_entry:
_c4zTy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zTC
_c4zTD:
	leaq block_c4zTv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zTv
_c4zTw:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zTC:
	leaq GHC.Int.$fIntegralInt32_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cquot_entry, .-GHC.Int.$fIntegralInt32_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:26.470775997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquot_info
.type GHC.Int.$fIntegralInt32_$cquot_info, @object
GHC.Int.$fIntegralInt32_$cquot_info:
	.quad	GHC.Int.$fIntegralInt32_$cquot_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S4wm5_srt+896


==================== Asm code ====================
2018-03-16 15:59:26.471477818 UTC

.section .text
.align 8
_c4zTv:
_c4zTv:
	leaq block_c4zTB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zTB
_c4zTF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zTv, .-_c4zTv


==================== Asm code ====================
2018-03-16 15:59:26.472071958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zTv_info:
	.quad	_c4zTv
	.quad	1
	.quad	12884901918
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.47304852 UTC

.section .text
.align 8
_c4zTB:
_c4zTB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zTL
_c4zTK:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4zUc
_c4zUa:
	cmpq $-2147483648,%rax
	je _c4zU9
_c4zU8:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zUc:
	testq %rbx,%rbx
	jne _c4zTW
_c4zUb:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zU9:
	addq $-16,%r12
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zTW:
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	cqto
	idivq %rbx
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zTL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zTB, .-_c4zTB


==================== Asm code ====================
2018-03-16 15:59:26.474224212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zTB_info:
	.quad	_c4zTB
	.quad	65
	.quad	12884901918
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.478663501 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$crem_closure
.type GHC.Int.$fIntegralInt32_$crem_closure, @object
GHC.Int.$fIntegralInt32_$crem_closure:
	.quad	GHC.Int.$fIntegralInt32_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.479624944 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$crem_entry
.type GHC.Int.$fIntegralInt32_$crem_entry, @object
GHC.Int.$fIntegralInt32_$crem_entry:
_c4zUI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zUM
_c4zUN:
	leaq block_c4zUF_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zUF
_c4zUG:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zUM:
	leaq GHC.Int.$fIntegralInt32_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$crem_entry, .-GHC.Int.$fIntegralInt32_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:26.480297356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$crem_info
.type GHC.Int.$fIntegralInt32_$crem_info, @object
GHC.Int.$fIntegralInt32_$crem_info:
	.quad	GHC.Int.$fIntegralInt32_$crem_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.48098935 UTC

.section .text
.align 8
_c4zUF:
_c4zUF:
	leaq block_c4zUL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zUL
_c4zUP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zUF, .-_c4zUF


==================== Asm code ====================
2018-03-16 15:59:26.481665437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zUF_info:
	.quad	_c4zUF
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.482655989 UTC

.section .text
.align 8
_c4zUL:
_c4zUL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zUV
_c4zUU:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4zV9
_c4zV7:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zV9:
	testq %rax,%rax
	jne _c4zV6
_c4zV8:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zV6:
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movslq %edx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zUV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zUL, .-_c4zUL


==================== Asm code ====================
2018-03-16 15:59:26.483443079 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zUL_info:
	.quad	_c4zUL
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.487698158 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv1_closure
.type GHC.Int.$w$cdiv1_closure, @object
GHC.Int.$w$cdiv1_closure:
	.quad	GHC.Int.$w$cdiv1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.488766869 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv1_entry
.type GHC.Int.$w$cdiv1_entry, @object
GHC.Int.$w$cdiv1_entry:
_c4zVE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zVF
_c4zVG:
	cmpq $-1,%rsi
	je _c4zVC
_u4zW0:
	testq %rsi,%rsi
	je _c4zVD
_c4zVB:
	leaq block_c4zVI_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4zVZ:
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zVC:
	cmpq $-2147483648,%r14
	je _c4zVZ
_c4zVX:
	leaq block_c4zVR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq $-1,%rsi
	addq $-8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4zVF:
	leaq GHC.Int.$w$cdiv1_closure(%rip),%rbx
	jmp *-8(%r13)
_c4zVD:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdiv1_entry, .-GHC.Int.$w$cdiv1_entry


==================== Asm code ====================
2018-03-16 15:59:26.48968053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv1_info
.type GHC.Int.$w$cdiv1_info, @object
GHC.Int.$w$cdiv1_info:
	.quad	GHC.Int.$w$cdiv1_entry
	.quad	0
	.quad	47244640270
	.quad	8589934604
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.490845443 UTC

.section .text
.align 8
_c4zVR:
_c4zVR:
	movslq %ebx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zVR, .-_c4zVR


==================== Asm code ====================
2018-03-16 15:59:26.491535473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zVR_info:
	.quad	_c4zVR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.492253206 UTC

.section .text
.align 8
_c4zVI:
_c4zVI:
	movslq %ebx,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4zVI, .-_c4zVI


==================== Asm code ====================
2018-03-16 15:59:26.492872603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zVI_info:
	.quad	_c4zVI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.497471882 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdiv_closure
.type GHC.Int.$fIntegralInt32_$cdiv_closure, @object
GHC.Int.$fIntegralInt32_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt32_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.49840356 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cdiv_entry
.type GHC.Int.$fIntegralInt32_$cdiv_entry, @object
GHC.Int.$fIntegralInt32_$cdiv_entry:
_c4zWn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zWA
_c4zWB:
	leaq block_c4zWk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zWk
_c4zWl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zWA:
	leaq GHC.Int.$fIntegralInt32_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cdiv_entry, .-GHC.Int.$fIntegralInt32_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:26.4991281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdiv_info
.type GHC.Int.$fIntegralInt32_$cdiv_info, @object
GHC.Int.$fIntegralInt32_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt32_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+928


==================== Asm code ====================
2018-03-16 15:59:26.499862151 UTC

.section .text
.align 8
_c4zWk:
_c4zWk:
	leaq block_c4zWq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zWq
_c4zWr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zWk, .-_c4zWk


==================== Asm code ====================
2018-03-16 15:59:26.500502052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zWk_info:
	.quad	_c4zWk
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+928


==================== Asm code ====================
2018-03-16 15:59:26.501216664 UTC

.section .text
.align 8
_c4zWq:
_c4zWq:
	movq 8(%rbp),%rax
	leaq block_c4zWv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv1_entry
	.size _c4zWq, .-_c4zWq


==================== Asm code ====================
2018-03-16 15:59:26.501837798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zWq_info:
	.quad	_c4zWq
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+928


==================== Asm code ====================
2018-03-16 15:59:26.502581898 UTC

.section .text
.align 8
_c4zWv:
_c4zWv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zWG
_c4zWF:
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zWG:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4zWv, .-_c4zWv


==================== Asm code ====================
2018-03-16 15:59:26.503246874 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zWv_info:
	.quad	_c4zWv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.508111668 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cmod_closure
.type GHC.Int.$fIntegralInt32_$cmod_closure, @object
GHC.Int.$fIntegralInt32_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt32_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.509018546 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cmod_entry
.type GHC.Int.$fIntegralInt32_$cmod_entry, @object
GHC.Int.$fIntegralInt32_$cmod_entry:
_c4zXb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zXf
_c4zXg:
	leaq block_c4zX8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zX8
_c4zX9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zXf:
	leaq GHC.Int.$fIntegralInt32_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cmod_entry, .-GHC.Int.$fIntegralInt32_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:26.510038639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cmod_info
.type GHC.Int.$fIntegralInt32_$cmod_info, @object
GHC.Int.$fIntegralInt32_$cmod_info:
	.quad	GHC.Int.$fIntegralInt32_$cmod_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.510849883 UTC

.section .text
.align 8
_c4zX8:
_c4zX8:
	leaq block_c4zXe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zXe
_c4zXi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zX8, .-_c4zX8


==================== Asm code ====================
2018-03-16 15:59:26.511492539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zX8_info:
	.quad	_c4zX8
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.512858916 UTC

.section .text
.align 8
_c4zXe:
_c4zXe:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4zXE
_c4zXC:
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zXE:
	testq %rax,%rax
	jne _c4zXy
_c4zXD:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zXy:
	movq 8(%rbp),%rbx
	leaq block_c4zXp_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _c4zXe, .-_c4zXe


==================== Asm code ====================
2018-03-16 15:59:26.513668883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zXe_info:
	.quad	_c4zXe
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.51441002 UTC

.section .text
.align 8
_c4zXp:
_c4zXp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4zXB
_c4zXA:
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zXB:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4zXp, .-_c4zXp


==================== Asm code ====================
2018-03-16 15:59:26.515062674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zXp_info:
	.quad	_c4zXp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.516856254 UTC

.section .data
.align 8
.align 1
lvl8_r4kPz_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt6_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.522304209 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquotRem_closure
.type GHC.Int.$fIntegralInt32_$cquotRem_closure, @object
GHC.Int.$fIntegralInt32_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.523234853 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cquotRem_entry
.type GHC.Int.$fIntegralInt32_$cquotRem_entry, @object
GHC.Int.$fIntegralInt32_$cquotRem_entry:
_c4zYc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zYg
_c4zYh:
	leaq block_c4zY9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4zY9
_c4zYa:
	movq (%rbx),%rax
	jmp *(%rax)
_c4zYg:
	leaq GHC.Int.$fIntegralInt32_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cquotRem_entry, .-GHC.Int.$fIntegralInt32_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:26.523957385 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cquotRem_info
.type GHC.Int.$fIntegralInt32_$cquotRem_info, @object
GHC.Int.$fIntegralInt32_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_entry
	.quad	0
	.quad	416611827726
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.524705191 UTC

.section .text
.align 8
_c4zY9:
_c4zY9:
	leaq block_c4zYf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4zYf
_c4zYj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4zY9, .-_c4zY9


==================== Asm code ====================
2018-03-16 15:59:26.52539822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zY9_info:
	.quad	_c4zY9
	.quad	1
	.quad	279172874270
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.52661374 UTC

.section .text
.align 8
_c4zYf:
_c4zYf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4zYp
_c4zYo:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4zYU
_c4zYS:
	cmpq $-2147483648,%rax
	je _c4zYR
_c4zYQ:
	movq $-1,%rbx
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movslq %edx,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movslq %eax,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4zYU:
	testq %rbx,%rbx
	jne _c4zYC
_c4zYT:
	addq $-56,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4zYR:
	addq $-56,%r12
	leaq lvl8_r4kPz_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zYC:
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movslq %edx,%rbx
	movq %rbx,-40(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movslq %eax,%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zYp:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4zYf, .-_c4zYf


==================== Asm code ====================
2018-03-16 15:59:26.527835331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zYf_info:
	.quad	_c4zYf
	.quad	65
	.quad	279172874270
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.536489029 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod1_closure
.type GHC.Int.$w$cdivMod1_closure, @object
GHC.Int.$w$cdivMod1_closure:
	.quad	GHC.Int.$w$cdivMod1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.537615548 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod1_entry
.type GHC.Int.$w$cdivMod1_entry, @object
GHC.Int.$w$cdivMod1_entry:
_c4zZC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4zZD
_c4zZE:
	testq %rsi,%rsi
	je _c4zZB
_c4zZA:
	cmpq $-1,%rsi
	je _c4A27
_u4A28:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4zZJ
_c4A27:
	cmpq $-2147483648,%r14
	je _c4A26
_u4A29:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4zZJ
_c4A26:
	leaq GHC.Int.$fBitsInt6_closure+1(%rip),%r14
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4zZD:
	leaq GHC.Int.$w$cdivMod1_closure(%rip),%rbx
	jmp *-8(%r13)
_c4zZB:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdivMod1_entry, .-GHC.Int.$w$cdivMod1_entry


==================== Asm code ====================
2018-03-16 15:59:26.538372206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod1_info
.type GHC.Int.$w$cdivMod1_info, @object
GHC.Int.$w$cdivMod1_info:
	.quad	GHC.Int.$w$cdivMod1_entry
	.quad	0
	.quad	1112396529678
	.quad	8589934604
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.539859554 UTC

.section .text
.align 8
_c4zZJ:
_c4zZJ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4zZN
_c4zZM:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4A0G
_c4A1X:
	testq %rbx,%rbx
	jge _c4A1A
_c4A1W:
	decq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A1A:
	testq %rax,%rax
	jge _c4A0X
_c4A1y:
	testq %rbx,%rbx
	jle _c4A1b
_c4A1x:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A1b:
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A0X:
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A0G:
	testq %rax,%rax
	jge _c4A03
_c4A0E:
	testq %rbx,%rbx
	jle _c4A0h
_c4A0D:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movslq %ebx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A0h:
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A03:
	cqto
	idivq %rbx
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movslq %edx,%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I32#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4zZN:
	movq $32,904(%r13)
	leaq block_c4zZJ_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c4zZJ, .-_c4zZJ


==================== Asm code ====================
2018-03-16 15:59:26.541210235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4zZJ_info:
	.quad	_c4zZJ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.545901684 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdivMod_closure
.type GHC.Int.$fIntegralInt32_$cdivMod_closure, @object
GHC.Int.$fIntegralInt32_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.546795489 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt32_$cdivMod_entry
.type GHC.Int.$fIntegralInt32_$cdivMod_entry, @object
GHC.Int.$fIntegralInt32_$cdivMod_entry:
_c4A3e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A3p
_c4A3q:
	leaq block_c4A3b_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4A3b
_c4A3c:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A3p:
	leaq GHC.Int.$fIntegralInt32_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt32_$cdivMod_entry, .-GHC.Int.$fIntegralInt32_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:26.547498804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_$cdivMod_info
.type GHC.Int.$fIntegralInt32_$cdivMod_info, @object
GHC.Int.$fIntegralInt32_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+968


==================== Asm code ====================
2018-03-16 15:59:26.548252825 UTC

.section .text
.align 8
_c4A3b:
_c4A3b:
	leaq block_c4A3h_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A3h
_c4A3i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A3b, .-_c4A3b


==================== Asm code ====================
2018-03-16 15:59:26.548932836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A3b_info:
	.quad	_c4A3b
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+968


==================== Asm code ====================
2018-03-16 15:59:26.550023061 UTC

.section .text
.align 8
_c4A3h:
_c4A3h:
	movq 8(%rbp),%rax
	leaq block_c4A3m_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod1_entry
	.size _c4A3h, .-_c4A3h


==================== Asm code ====================
2018-03-16 15:59:26.550640043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A3h_info:
	.quad	_c4A3h
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+968


==================== Asm code ====================
2018-03-16 15:59:26.551477192 UTC

.section .text
.align 8
_c4A3m:
_c4A3m:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4A3v
_c4A3u:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A3v:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4A3m, .-_c4A3m


==================== Asm code ====================
2018-03-16 15:59:26.552175143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A3m_info:
	.quad	_c4A3m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.557600959 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt32_$ctoRational_closure
.type GHC.Int.$fRealInt32_$ctoRational_closure, @object
GHC.Int.$fRealInt32_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt32_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.558480891 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt32_$ctoRational_entry
.type GHC.Int.$fRealInt32_$ctoRational_entry, @object
GHC.Int.$fRealInt32_$ctoRational_entry:
_c4A40:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A4e
_c4A4f:
	leaq block_c4A3X_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A3X
_c4A3Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A4e:
	leaq GHC.Int.$fRealInt32_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt32_$ctoRational_entry, .-GHC.Int.$fRealInt32_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:26.559163766 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt32_$ctoRational_info
.type GHC.Int.$fRealInt32_$ctoRational_info, @object
GHC.Int.$fRealInt32_$ctoRational_info:
	.quad	GHC.Int.$fRealInt32_$ctoRational_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S4wm5_srt+984


==================== Asm code ====================
2018-03-16 15:59:26.559883031 UTC

.section .text
.align 8
_c4A3X:
_c4A3X:
	leaq block_c4A43_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4A3X, .-_c4A3X


==================== Asm code ====================
2018-03-16 15:59:26.560476973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A3X_info:
	.quad	_c4A3X
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.561150995 UTC

.section .text
.align 8
_c4A43:
_c4A43:
	leaq block_c4A47_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c4A43, .-_c4A43


==================== Asm code ====================
2018-03-16 15:59:26.56179104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A43_info:
	.quad	_c4A43
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.562412063 UTC

.section .text
.align 8
_c4A47:
_c4A47:
	leaq block_c4A4b_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Real.$w$sreduce_entry@gotpcrel(%rip)
	.size _c4A47, .-_c4A47


==================== Asm code ====================
2018-03-16 15:59:26.563048976 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A47_info:
	.quad	_c4A47
	.quad	0
	.quad	12884901918
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.5638818 UTC

.section .text
.align 8
_c4A4b:
_c4A4b:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4A4l
_c4A4k:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A4l:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4A4b, .-_c4A4b


==================== Asm code ====================
2018-03-16 15:59:26.564509921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A4b_info:
	.quad	_c4A4b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.56639969 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt32_closure
.type GHC.Int.$fRealInt32_closure, @object
GHC.Int.$fRealInt32_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt32_closure+1
	.quad	GHC.Int.$fOrdInt32_closure+1
	.quad	GHC.Int.$fRealInt32_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.568281766 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt32_closure
.type GHC.Int.$fIntegralInt32_closure, @object
GHC.Int.$fIntegralInt32_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt32_closure+1
	.quad	GHC.Int.$fEnumInt32_closure+1
	.quad	GHC.Int.$fIntegralInt32_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt32_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt32_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.571617808 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crange_closure
.type GHC.Int.$fIxInt32_$crange_closure, @object
GHC.Int.$fIxInt32_$crange_closure:
	.quad	GHC.Int.$fIxInt32_$crange_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.572498394 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$crange_entry
.type GHC.Int.$fIxInt32_$crange_entry, @object
GHC.Int.$fIxInt32_$crange_entry:
_c4A4U:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A4V
_c4A4W:
	leaq block_c4A4R_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A4R
_c4A4S:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A4V:
	leaq GHC.Int.$fIxInt32_$crange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$crange_entry, .-GHC.Int.$fIxInt32_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:26.573327244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crange_info
.type GHC.Int.$fIxInt32_$crange_info, @object
GHC.Int.$fIxInt32_$crange_info:
	.quad	GHC.Int.$fIxInt32_$crange_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S4wm5_srt+1016


==================== Asm code ====================
2018-03-16 15:59:26.574020454 UTC

.section .text
.align 8
_c4A4R:
_c4A4R:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt32_$cenumFromTo_entry
	.size _c4A4R, .-_c4A4R


==================== Asm code ====================
2018-03-16 15:59:26.575116125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A4R_info:
	.quad	_c4A4R
	.quad	0
	.quad	4294967326
	.quad	S4wm5_srt+1024


==================== Asm code ====================
2018-03-16 15:59:26.579735776 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeIndex_closure
.type GHC.Int.$fIxInt32_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt32_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:26.580616653 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cunsafeIndex_entry
.type GHC.Int.$fIxInt32_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt32_$cunsafeIndex_entry:
_c4A5i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A5z
_c4A5A:
	leaq block_c4A5f_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4A5f
_c4A5g:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A5z:
	leaq GHC.Int.$fIxInt32_$cunsafeIndex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cunsafeIndex_entry, .-GHC.Int.$fIxInt32_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:26.581347017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeIndex_info
.type GHC.Int.$fIxInt32_$cunsafeIndex_info, @object
GHC.Int.$fIxInt32_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.582110784 UTC

.section .text
.align 8
_c4A5f:
_c4A5f:
	leaq block_c4A5l_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A5l
_c4A5m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A5f, .-_c4A5f


==================== Asm code ====================
2018-03-16 15:59:26.582675242 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A5f_info:
	.quad	_c4A5f
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.583357153 UTC

.section .text
.align 8
_c4A5l:
_c4A5l:
	leaq block_c4A5q_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A5q
_c4A5r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A5l, .-_c4A5l


==================== Asm code ====================
2018-03-16 15:59:26.583958807 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A5l_info:
	.quad	_c4A5l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.584783232 UTC

.section .text
.align 8
_c4A5q:
_c4A5q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4A5F
_c4A5E:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A5F:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4A5q, .-_c4A5q


==================== Asm code ====================
2018-03-16 15:59:26.585496235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A5q_info:
	.quad	_c4A5q
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.590121908 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crangeSize_closure
.type GHC.Int.$fIxInt32_$crangeSize_closure, @object
GHC.Int.$fIxInt32_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt32_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:26.591003255 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$crangeSize_entry
.type GHC.Int.$fIxInt32_$crangeSize_entry, @object
GHC.Int.$fIxInt32_$crangeSize_entry:
_c4A6e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A6n
_c4A6o:
	leaq block_c4A6b_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A6b
_c4A6c:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A6n:
	leaq GHC.Int.$fIxInt32_$crangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$crangeSize_entry, .-GHC.Int.$fIxInt32_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:26.591670502 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$crangeSize_info
.type GHC.Int.$fIxInt32_$crangeSize_info, @object
GHC.Int.$fIxInt32_$crangeSize_info:
	.quad	GHC.Int.$fIxInt32_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.592426812 UTC

.section .text
.align 8
_c4A6b:
_c4A6b:
	leaq block_c4A6h_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A6h
_c4A6i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A6b, .-_c4A6b


==================== Asm code ====================
2018-03-16 15:59:26.593078029 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A6b_info:
	.quad	_c4A6b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.594436598 UTC

.section .text
.align 8
_c4A6h:
_c4A6h:
	leaq block_c4A6m_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A6m
_c4A6r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A6h, .-_c4A6h


==================== Asm code ====================
2018-03-16 15:59:26.595111942 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A6h_info:
	.quad	_c4A6h
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.596464101 UTC

.section .text
.align 8
_c4A6m:
_c4A6m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4A6x
_c4A6w:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4A6B
_c4A6L:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A6B:
	addq $-16,%r12
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A6x:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4A6m, .-_c4A6m


==================== Asm code ====================
2018-03-16 15:59:26.597414164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A6m_info:
	.quad	_c4A6m
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.601776381 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:26.602712529 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_entry:
_c4A7m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A7G
_c4A7H:
	leaq block_c4A7j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A7j
_c4A7k:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A7G:
	leaq GHC.Int.$fIxInt32_$cunsafeRangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt32_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:26.603385125 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt32_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt32_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.604120116 UTC

.section .text
.align 8
_c4A7j:
_c4A7j:
	leaq block_c4A7p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A7p
_c4A7q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A7j, .-_c4A7j


==================== Asm code ====================
2018-03-16 15:59:26.604737894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A7j_info:
	.quad	_c4A7j
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.605564331 UTC

.section .text
.align 8
_c4A7p:
_c4A7p:
	leaq block_c4A7u_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A7u
_c4A7v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A7p, .-_c4A7p


==================== Asm code ====================
2018-03-16 15:59:26.606239606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A7p_info:
	.quad	_c4A7p
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.607055522 UTC

.section .text
.align 8
_c4A7u:
_c4A7u:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4A7M
_c4A7L:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A7M:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4A7u, .-_c4A7u


==================== Asm code ====================
2018-03-16 15:59:26.607735236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A7u_info:
	.quad	_c4A7u
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.613720282 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cindex_closure
.type GHC.Int.$fIxInt32_$cindex_closure, @object
GHC.Int.$fIxInt32_$cindex_closure:
	.quad	GHC.Int.$fIxInt32_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.614710452 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt32_$cindex_entry
.type GHC.Int.$fIxInt32_$cindex_entry, @object
GHC.Int.$fIxInt32_$cindex_entry:
_c4A8m:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A8v
_c4A8w:
	leaq block_c4A8j_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4A8j
_c4A8k:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A8v:
	leaq GHC.Int.$fIxInt32_$cindex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt32_$cindex_entry, .-GHC.Int.$fIxInt32_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:26.615470407 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt32_$cindex_info
.type GHC.Int.$fIxInt32_$cindex_info, @object
GHC.Int.$fIxInt32_$cindex_info:
	.quad	GHC.Int.$fIxInt32_$cindex_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+1032


==================== Asm code ====================
2018-03-16 15:59:26.616755877 UTC

.section .text
.align 8
_c4A8j:
_c4A8j:
	leaq block_c4A8p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4A8p
_c4A8q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A8j, .-_c4A8j


==================== Asm code ====================
2018-03-16 15:59:26.61753304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A8j_info:
	.quad	_c4A8j
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:26.618299727 UTC

.section .text
.align 8
_c4A8p:
_c4A8p:
	leaq block_c4A8u_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4A8u
_c4A8z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A8p, .-_c4A8p


==================== Asm code ====================
2018-03-16 15:59:26.618943359 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A8p_info:
	.quad	_c4A8p
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:26.619713568 UTC

.section .text
.align 8
_c4A8u:
_c4A8u:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4A8H
_c4A8L:
	leaq block_c4A8K_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A8K
_c4A8M:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A8H:
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A8u, .-_c4A8u


==================== Asm code ====================
2018-03-16 15:59:26.62035261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A8u_info:
	.quad	_c4A8u
	.quad	130
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:26.621184667 UTC

.section .text
.align 8
_c4A8K:
_c4A8K:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4A8S
_c4A8R:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4A8W
_c4A93:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4A8W:
	addq $-16,%r12
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4A8S:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4A8K, .-_c4A8K


==================== Asm code ====================
2018-03-16 15:59:26.622030833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A8K_info:
	.quad	_c4A8K
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:26.623995558 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt32_closure
.type GHC.Int.$fIxInt32_closure, @object
GHC.Int.$fIxInt32_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt32_closure+1
	.quad	GHC.Int.$fIxInt32_$crange_closure+1
	.quad	GHC.Int.$fIxInt32_$cindex_closure+2
	.quad	GHC.Int.$fIxInt32_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt32_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt32_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt32_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.628166377 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.eqInt64_closure
.type GHC.Int.eqInt64_closure, @object
GHC.Int.eqInt64_closure:
	.quad	GHC.Int.eqInt64_info


==================== Asm code ====================
2018-03-16 15:59:26.62905299 UTC

.section .text
.align 8
.globl GHC.Int.eqInt64_entry
.type GHC.Int.eqInt64_entry, @object
GHC.Int.eqInt64_entry:
_c4A9L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4A9P
_c4A9Q:
	leaq block_c4A9I_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4A9I
_c4A9J:
	movq (%rbx),%rax
	jmp *(%rax)
_c4A9P:
	leaq GHC.Int.eqInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.eqInt64_entry, .-GHC.Int.eqInt64_entry


==================== Asm code ====================
2018-03-16 15:59:26.629891586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.eqInt64_info
.type GHC.Int.eqInt64_info, @object
GHC.Int.eqInt64_info:
	.quad	GHC.Int.eqInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.630645665 UTC

.section .text
.align 8
_c4A9I:
_c4A9I:
	leaq block_c4A9O_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4A9O
_c4A9S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4A9I, .-_c4A9I


==================== Asm code ====================
2018-03-16 15:59:26.63129132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A9I_info:
	.quad	_c4A9I
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.631986467 UTC

.section .text
.align 8
_c4A9O:
_c4A9O:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4A9O, .-_c4A9O


==================== Asm code ====================
2018-03-16 15:59:26.632638853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4A9O_info:
	.quad	_c4A9O
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.634679845 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fEqInt64_closure
.type GHC.Int.$fEqInt64_closure, @object
GHC.Int.$fEqInt64_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Int.eqInt64_closure+2
	.quad	GHC.Int.neInt64_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.639093698 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.gtInt64_closure
.type GHC.Int.gtInt64_closure, @object
GHC.Int.gtInt64_closure:
	.quad	GHC.Int.gtInt64_info


==================== Asm code ====================
2018-03-16 15:59:26.639975318 UTC

.section .text
.align 8
.globl GHC.Int.gtInt64_entry
.type GHC.Int.gtInt64_entry, @object
GHC.Int.gtInt64_entry:
_c4Aas:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Aaw
_c4Aax:
	leaq block_c4Aap_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Aap
_c4Aaq:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aaw:
	leaq GHC.Int.gtInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.gtInt64_entry, .-GHC.Int.gtInt64_entry


==================== Asm code ====================
2018-03-16 15:59:26.640661134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.gtInt64_info
.type GHC.Int.gtInt64_info, @object
GHC.Int.gtInt64_info:
	.quad	GHC.Int.gtInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.641536288 UTC

.section .text
.align 8
_c4Aap:
_c4Aap:
	leaq block_c4Aav_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Aav
_c4Aaz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Aap, .-_c4Aap


==================== Asm code ====================
2018-03-16 15:59:26.642112099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aap_info:
	.quad	_c4Aap
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.642853716 UTC

.section .text
.align 8
_c4Aav:
_c4Aav:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setg %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Aav, .-_c4Aav


==================== Asm code ====================
2018-03-16 15:59:26.643462216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aav_info:
	.quad	_c4Aav
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.647177635 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.geInt64_closure
.type GHC.Int.geInt64_closure, @object
GHC.Int.geInt64_closure:
	.quad	GHC.Int.geInt64_info


==================== Asm code ====================
2018-03-16 15:59:26.648031527 UTC

.section .text
.align 8
.globl GHC.Int.geInt64_entry
.type GHC.Int.geInt64_entry, @object
GHC.Int.geInt64_entry:
_c4Ab8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Abc
_c4Abd:
	leaq block_c4Ab5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Ab5
_c4Ab6:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Abc:
	leaq GHC.Int.geInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.geInt64_entry, .-GHC.Int.geInt64_entry


==================== Asm code ====================
2018-03-16 15:59:26.648706497 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.geInt64_info
.type GHC.Int.geInt64_info, @object
GHC.Int.geInt64_info:
	.quad	GHC.Int.geInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.649535972 UTC

.section .text
.align 8
_c4Ab5:
_c4Ab5:
	leaq block_c4Abb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Abb
_c4Abf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ab5, .-_c4Ab5


==================== Asm code ====================
2018-03-16 15:59:26.650169251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ab5_info:
	.quad	_c4Ab5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.650874153 UTC

.section .text
.align 8
_c4Abb:
_c4Abb:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setge %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Abb, .-_c4Abb


==================== Asm code ====================
2018-03-16 15:59:26.651546608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Abb_info:
	.quad	_c4Abb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.655410549 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.ltInt64_closure
.type GHC.Int.ltInt64_closure, @object
GHC.Int.ltInt64_closure:
	.quad	GHC.Int.ltInt64_info


==================== Asm code ====================
2018-03-16 15:59:26.656304135 UTC

.section .text
.align 8
.globl GHC.Int.ltInt64_entry
.type GHC.Int.ltInt64_entry, @object
GHC.Int.ltInt64_entry:
_c4AbO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AbS
_c4AbT:
	leaq block_c4AbL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AbL
_c4AbM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AbS:
	leaq GHC.Int.ltInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.ltInt64_entry, .-GHC.Int.ltInt64_entry


==================== Asm code ====================
2018-03-16 15:59:26.657028728 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.ltInt64_info
.type GHC.Int.ltInt64_info, @object
GHC.Int.ltInt64_info:
	.quad	GHC.Int.ltInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.658242663 UTC

.section .text
.align 8
_c4AbL:
_c4AbL:
	leaq block_c4AbR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AbR
_c4AbV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AbL, .-_c4AbL


==================== Asm code ====================
2018-03-16 15:59:26.658974883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AbL_info:
	.quad	_c4AbL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.659690612 UTC

.section .text
.align 8
_c4AbR:
_c4AbR:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4AbR, .-_c4AbR


==================== Asm code ====================
2018-03-16 15:59:26.660274531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AbR_info:
	.quad	_c4AbR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.664077958 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.leInt64_closure
.type GHC.Int.leInt64_closure, @object
GHC.Int.leInt64_closure:
	.quad	GHC.Int.leInt64_info


==================== Asm code ====================
2018-03-16 15:59:26.664956752 UTC

.section .text
.align 8
.globl GHC.Int.leInt64_entry
.type GHC.Int.leInt64_entry, @object
GHC.Int.leInt64_entry:
_c4Acu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Acy
_c4Acz:
	leaq block_c4Acr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Acr
_c4Acs:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Acy:
	leaq GHC.Int.leInt64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.leInt64_entry, .-GHC.Int.leInt64_entry


==================== Asm code ====================
2018-03-16 15:59:26.665624194 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.leInt64_info
.type GHC.Int.leInt64_info, @object
GHC.Int.leInt64_info:
	.quad	GHC.Int.leInt64_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.666297669 UTC

.section .text
.align 8
_c4Acr:
_c4Acr:
	leaq block_c4Acx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Acx
_c4AcB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Acr, .-_c4Acr


==================== Asm code ====================
2018-03-16 15:59:26.66688824 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Acr_info:
	.quad	_c4Acr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.667528516 UTC

.section .text
.align 8
_c4Acx:
_c4Acx:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Acx, .-_c4Acx


==================== Asm code ====================
2018-03-16 15:59:26.668126148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Acx_info:
	.quad	_c4Acx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.672026324 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$ccompare_closure
.type GHC.Int.$fOrdInt64_$ccompare_closure, @object
GHC.Int.$fOrdInt64_$ccompare_closure:
	.quad	GHC.Int.$fOrdInt64_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:26.672900128 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$ccompare_entry
.type GHC.Int.$fOrdInt64_$ccompare_entry, @object
GHC.Int.$fOrdInt64_$ccompare_entry:
_c4Ada:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ade
_c4Adf:
	leaq block_c4Ad7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Ad7
_c4Ad8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Ade:
	leaq GHC.Int.$fOrdInt64_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$ccompare_entry, .-GHC.Int.$fOrdInt64_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:26.673625652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$ccompare_info
.type GHC.Int.$fOrdInt64_$ccompare_info, @object
GHC.Int.$fOrdInt64_$ccompare_info:
	.quad	GHC.Int.$fOrdInt64_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.674365755 UTC

.section .text
.align 8
_c4Ad7:
_c4Ad7:
	leaq block_c4Add_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Add
_c4Adh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ad7, .-_c4Ad7


==================== Asm code ====================
2018-03-16 15:59:26.674937261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ad7_info:
	.quad	_c4Ad7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.675746395 UTC

.section .text
.align 8
_c4Add:
_c4Add:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c4Adw
_c4Adv:
	cmpq %rbx,%rax
	jg _c4Ads
_c4Adt:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Adw:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ads:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Add, .-_c4Add


==================== Asm code ====================
2018-03-16 15:59:26.6765387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Add_info:
	.quad	_c4Add
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.681702498 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmax_closure
.type GHC.Int.$fOrdInt64_$cmax_closure, @object
GHC.Int.$fOrdInt64_$cmax_closure:
	.quad	GHC.Int.$fOrdInt64_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:26.682630675 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$cmax_entry
.type GHC.Int.$fOrdInt64_$cmax_entry, @object
GHC.Int.$fOrdInt64_$cmax_entry:
_c4Ae1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ae5
_c4Ae6:
	leaq block_c4AdY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AdY
_c4AdZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Ae5:
	leaq GHC.Int.$fOrdInt64_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$cmax_entry, .-GHC.Int.$fOrdInt64_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:26.68326753 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmax_info
.type GHC.Int.$fOrdInt64_$cmax_info, @object
GHC.Int.$fOrdInt64_$cmax_info:
	.quad	GHC.Int.$fOrdInt64_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.683989888 UTC

.section .text
.align 8
_c4AdY:
_c4AdY:
	leaq block_c4Ae4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Ae4
_c4Ae8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AdY, .-_c4AdY


==================== Asm code ====================
2018-03-16 15:59:26.684593141 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AdY_info:
	.quad	_c4AdY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.685356049 UTC

.section .text
.align 8
_c4Ae4:
_c4Ae4:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4Aeg
_c4Aeh:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aeg:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ae4, .-_c4Ae4


==================== Asm code ====================
2018-03-16 15:59:26.685969688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ae4_info:
	.quad	_c4Ae4
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.689855173 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmin_closure
.type GHC.Int.$fOrdInt64_$cmin_closure, @object
GHC.Int.$fOrdInt64_$cmin_closure:
	.quad	GHC.Int.$fOrdInt64_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:26.690745337 UTC

.section .text
.align 8
.globl GHC.Int.$fOrdInt64_$cmin_entry
.type GHC.Int.$fOrdInt64_$cmin_entry, @object
GHC.Int.$fOrdInt64_$cmin_entry:
_c4AeL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AeP
_c4AeQ:
	leaq block_c4AeI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AeI
_c4AeJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AeP:
	leaq GHC.Int.$fOrdInt64_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fOrdInt64_$cmin_entry, .-GHC.Int.$fOrdInt64_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:26.691429663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_$cmin_info
.type GHC.Int.$fOrdInt64_$cmin_info, @object
GHC.Int.$fOrdInt64_$cmin_info:
	.quad	GHC.Int.$fOrdInt64_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.692191415 UTC

.section .text
.align 8
_c4AeI:
_c4AeI:
	leaq block_c4AeO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AeO
_c4AeS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AeI, .-_c4AeI


==================== Asm code ====================
2018-03-16 15:59:26.69282846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AeI_info:
	.quad	_c4AeI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.693701869 UTC

.section .text
.align 8
_c4AeO:
_c4AeO:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4Af0
_c4Af1:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4Af0:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AeO, .-_c4AeO


==================== Asm code ====================
2018-03-16 15:59:26.694339103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AeO_info:
	.quad	_c4AeO
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.696299084 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fOrdInt64_closure
.type GHC.Int.$fOrdInt64_closure, @object
GHC.Int.$fOrdInt64_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Int.$fEqInt64_closure+1
	.quad	GHC.Int.$fOrdInt64_$ccompare_closure+2
	.quad	GHC.Int.ltInt64_closure+2
	.quad	GHC.Int.leInt64_closure+2
	.quad	GHC.Int.gtInt64_closure+2
	.quad	GHC.Int.geInt64_closure+2
	.quad	GHC.Int.$fOrdInt64_$cmax_closure+2
	.quad	GHC.Int.$fOrdInt64_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.702104214 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cinRange_closure
.type GHC.Int.$fIxInt64_$cinRange_closure, @object
GHC.Int.$fIxInt64_$cinRange_closure:
	.quad	GHC.Int.$fIxInt64_$cinRange_info


==================== Asm code ====================
2018-03-16 15:59:26.70300004 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cinRange_entry
.type GHC.Int.$fIxInt64_$cinRange_entry, @object
GHC.Int.$fIxInt64_$cinRange_entry:
_c4Afw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AfF
_c4AfG:
	leaq block_c4Aft_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Aft
_c4Afu:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AfF:
	leaq GHC.Int.$fIxInt64_$cinRange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cinRange_entry, .-GHC.Int.$fIxInt64_$cinRange_entry


==================== Asm code ====================
2018-03-16 15:59:26.703700321 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cinRange_info
.type GHC.Int.$fIxInt64_$cinRange_info, @object
GHC.Int.$fIxInt64_$cinRange_info:
	.quad	GHC.Int.$fIxInt64_$cinRange_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.704454465 UTC

.section .text
.align 8
_c4Aft:
_c4Aft:
	leaq block_c4Afz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Afz
_c4AfA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Aft, .-_c4Aft


==================== Asm code ====================
2018-03-16 15:59:26.705031763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aft_info:
	.quad	_c4Aft
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.70610377 UTC

.section .text
.align 8
_c4Afz:
_c4Afz:
	leaq block_c4AfE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4AfE
_c4AfJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Afz, .-_c4Afz


==================== Asm code ====================
2018-03-16 15:59:26.706733224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Afz_info:
	.quad	_c4Afz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.70752606 UTC

.section .text
.align 8
_c4AfE:
_c4AfE:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4AfR
_c4AfV:
	movq 8(%rbp),%rbx
	leaq block_c4AfU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c4AfU
_c4AfW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AfR:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4AfE, .-_c4AfE


==================== Asm code ====================
2018-03-16 15:59:26.708231553 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AfE_info:
	.quad	_c4AfE
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.708945563 UTC

.section .text
.align 8
_c4AfU:
_c4AfU:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setle %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4AfU, .-_c4AfU


==================== Asm code ====================
2018-03-16 15:59:26.70968836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AfU_info:
	.quad	_c4AfU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.711411612 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt5_closure
.type GHC.Int.$fNumInt5_closure, @object
GHC.Int.$fNumInt5_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:59:26.714920895 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$csignum_closure
.type GHC.Int.$fNumInt64_$csignum_closure, @object
GHC.Int.$fNumInt64_$csignum_closure:
	.quad	GHC.Int.$fNumInt64_$csignum_info


==================== Asm code ====================
2018-03-16 15:59:26.715814913 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$csignum_entry
.type GHC.Int.$fNumInt64_$csignum_entry, @object
GHC.Int.$fNumInt64_$csignum_entry:
_c4AgK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AgL
_c4AgM:
	leaq block_c4AgH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AgH
_c4AgI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AgL:
	leaq GHC.Int.$fNumInt64_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$csignum_entry, .-GHC.Int.$fNumInt64_$csignum_entry


==================== Asm code ====================
2018-03-16 15:59:26.71650824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$csignum_info
.type GHC.Int.$fNumInt64_$csignum_info, @object
GHC.Int.$fNumInt64_$csignum_info:
	.quad	GHC.Int.$fNumInt64_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.717360866 UTC

.section .text
.align 8
_c4AgH:
_c4AgH:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jle _c4AgY
_c4AgZ:
	leaq GHC.Int.$fNumInt5_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AgW:
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AgY:
	testq %rax,%rax
	je _c4AgW
_c4AgV:
	leaq GHC.Int.$fNumInt6_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4AgH, .-_c4AgH


==================== Asm code ====================
2018-03-16 15:59:26.718117097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AgH_info:
	.quad	_c4AgH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.722694251 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cabs_closure
.type GHC.Int.$fNumInt64_$cabs_closure, @object
GHC.Int.$fNumInt64_$cabs_closure:
	.quad	GHC.Int.$fNumInt64_$cabs_info


==================== Asm code ====================
2018-03-16 15:59:26.723578501 UTC

.section .text
.align 8
.globl GHC.Int.$fNumInt64_$cabs_entry
.type GHC.Int.$fNumInt64_$cabs_entry, @object
GHC.Int.$fNumInt64_$cabs_entry:
_c4Ahl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ahm
_c4Ahn:
	leaq block_c4Ahi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Ahi
_c4Ahj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Ahm:
	leaq GHC.Int.$fNumInt64_$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fNumInt64_$cabs_entry, .-GHC.Int.$fNumInt64_$cabs_entry


==================== Asm code ====================
2018-03-16 15:59:26.724261114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fNumInt64_$cabs_info
.type GHC.Int.$fNumInt64_$cabs_info, @object
GHC.Int.$fNumInt64_$cabs_info:
	.quad	GHC.Int.$fNumInt64_$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.725101904 UTC

.section .text
.align 8
_c4Ahi:
_c4Ahi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Ahs
_c4Ahr:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c4AhB
_c4AhC:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4AhB:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ahs:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Ahi, .-_c4Ahi


==================== Asm code ====================
2018-03-16 15:59:26.725858981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ahi_info:
	.quad	_c4Ahi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.727701122 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fNumInt64_closure
.type GHC.Int.$fNumInt64_closure, @object
GHC.Int.$fNumInt64_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Int.$fNumInt64_$c+_closure+2
	.quad	GHC.Int.$fNumInt64_$c-_closure+2
	.quad	GHC.Int.$fNumInt64_$c*_closure+2
	.quad	GHC.Int.$fNumInt64_$cnegate_closure+1
	.quad	GHC.Int.$fNumInt64_$cabs_closure+1
	.quad	GHC.Int.$fNumInt64_$csignum_closure+1
	.quad	GHC.Int.$fNumInt64_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.729484274 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt9_closure
.type GHC.Int.$fBitsInt9_closure, @object
GHC.Int.$fBitsInt9_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Int.$fBitsInt7_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.731807171 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure:
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_info


==================== Asm code ====================
2018-03-16 15:59:26.732574283 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry:
_c4AhZ:
	leaq GHC.Int.$fBitsInt9_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry, .-GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry


==================== Asm code ====================
2018-03-16 15:59:26.733142976 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbitSizeMaybe_info
.type GHC.Int.$fBitsInt64_$cbitSizeMaybe_info, @object
GHC.Int.$fBitsInt64_$cbitSizeMaybe_info:
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.736749986 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbit_closure
.type GHC.Int.$fBitsInt64_$cbit_closure, @object
GHC.Int.$fBitsInt64_$cbit_closure:
	.quad	GHC.Int.$fBitsInt64_$cbit_info


==================== Asm code ====================
2018-03-16 15:59:26.737988342 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cbit_entry
.type GHC.Int.$fBitsInt64_$cbit_entry, @object
GHC.Int.$fBitsInt64_$cbit_entry:
_c4Aie:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Aif
_c4Aig:
	leaq block_c4Aib_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Aib
_c4Aic:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aif:
	leaq GHC.Int.$fBitsInt64_$cbit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cbit_entry, .-GHC.Int.$fBitsInt64_$cbit_entry


==================== Asm code ====================
2018-03-16 15:59:26.738741154 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cbit_info
.type GHC.Int.$fBitsInt64_$cbit_info, @object
GHC.Int.$fBitsInt64_$cbit_info:
	.quad	GHC.Int.$fBitsInt64_$cbit_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.739683414 UTC

.section .text
.align 8
_c4Aib:
_c4Aib:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Ail
_c4Aik:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4Aiu
_c4Aiv:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Aiu:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ail:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Aib, .-_c4Aib


==================== Asm code ====================
2018-03-16 15:59:26.740893055 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aib_info:
	.quad	_c4Aib
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.744940535 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ctestBit_closure
.type GHC.Int.$fBitsInt64_$ctestBit_closure, @object
GHC.Int.$fBitsInt64_$ctestBit_closure:
	.quad	GHC.Int.$fBitsInt64_$ctestBit_info


==================== Asm code ====================
2018-03-16 15:59:26.74591387 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ctestBit_entry
.type GHC.Int.$fBitsInt64_$ctestBit_entry, @object
GHC.Int.$fBitsInt64_$ctestBit_entry:
_c4AiS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AiW
_c4AiX:
	leaq block_c4AiP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AiP
_c4AiQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AiW:
	leaq GHC.Int.$fBitsInt64_$ctestBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ctestBit_entry, .-GHC.Int.$fBitsInt64_$ctestBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.746563112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ctestBit_info
.type GHC.Int.$fBitsInt64_$ctestBit_info, @object
GHC.Int.$fBitsInt64_$ctestBit_info:
	.quad	GHC.Int.$fBitsInt64_$ctestBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.747352241 UTC

.section .text
.align 8
_c4AiP:
_c4AiP:
	leaq block_c4AiV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AiV
_c4AiZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AiP, .-_c4AiP


==================== Asm code ====================
2018-03-16 15:59:26.747940281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AiP_info:
	.quad	_c4AiP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.748762705 UTC

.section .text
.align 8
_c4AiV:
_c4AiV:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jge _c4AjA
_c4Ajz:
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	andq %rbx,%rax
	testq %rax,%rax
	je _c4AjA
_c4Ajo:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AjA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4AiV, .-_c4AiV


==================== Asm code ====================
2018-03-16 15:59:26.749517473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AiV_info:
	.quad	_c4AiV
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.754398775 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateR_closure
.type GHC.Int.$fBitsInt64_$crotateR_closure, @object
GHC.Int.$fBitsInt64_$crotateR_closure:
	.quad	GHC.Int.$fBitsInt64_$crotateR_info


==================== Asm code ====================
2018-03-16 15:59:26.755266671 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotateR_entry
.type GHC.Int.$fBitsInt64_$crotateR_entry, @object
GHC.Int.$fBitsInt64_$crotateR_entry:
_c4Ak6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Aka
_c4Akb:
	leaq block_c4Ak3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Ak3
_c4Ak4:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aka:
	leaq GHC.Int.$fBitsInt64_$crotateR_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$crotateR_entry, .-GHC.Int.$fBitsInt64_$crotateR_entry


==================== Asm code ====================
2018-03-16 15:59:26.755982663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateR_info
.type GHC.Int.$fBitsInt64_$crotateR_info, @object
GHC.Int.$fBitsInt64_$crotateR_info:
	.quad	GHC.Int.$fBitsInt64_$crotateR_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.756749575 UTC

.section .text
.align 8
_c4Ak3:
_c4Ak3:
	leaq block_c4Ak9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Ak9
_c4Akd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ak3, .-_c4Ak3


==================== Asm code ====================
2018-03-16 15:59:26.757385211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ak3_info:
	.quad	_c4Ak3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.758177799 UTC

.section .text
.align 8
_c4Ak9:
_c4Ak9:
	movq 7(%rbx),%rax
	negq %rax
	andl $63,%eax
	testq %rax,%rax
	jne _u4Al1
_c4AkX:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u4Al1:
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c4Akv
	.size _c4Ak9, .-_c4Ak9


==================== Asm code ====================
2018-03-16 15:59:26.758904114 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ak9_info:
	.quad	_c4Ak9
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.759761141 UTC

.section .text
.align 8
_c4Akv:
_c4Akv:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c4AkU
_c4AkT:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,%rcx
	movq %rcx,%rdx
	movl $64,%ecx
	subq %rax,%rcx
	shrq %cl,%rdx
	movq %rax,%rcx
	shlq %cl,%rbx
	orq %rdx,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AkU:
	movq $16,904(%r13)
	leaq block_c4Aku_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4Akv, .-_c4Akv


==================== Asm code ====================
2018-03-16 15:59:26.761055761 UTC

.section .text
.align 8
_c4Aku:
_c4Aku:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c4Akv
	.size _c4Aku, .-_c4Aku


==================== Asm code ====================
2018-03-16 15:59:26.761740384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aku_info:
	.quad	_c4Aku
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.766036003 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplementBit_closure
.type GHC.Int.$fBitsInt64_$ccomplementBit_closure, @object
GHC.Int.$fBitsInt64_$ccomplementBit_closure:
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_info


==================== Asm code ====================
2018-03-16 15:59:26.766954838 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$ccomplementBit_entry
.type GHC.Int.$fBitsInt64_$ccomplementBit_entry, @object
GHC.Int.$fBitsInt64_$ccomplementBit_entry:
_c4AlJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AlN
_c4AlO:
	leaq block_c4AlG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AlG
_c4AlH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AlN:
	leaq GHC.Int.$fBitsInt64_$ccomplementBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$ccomplementBit_entry, .-GHC.Int.$fBitsInt64_$ccomplementBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.767636179 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$ccomplementBit_info
.type GHC.Int.$fBitsInt64_$ccomplementBit_info, @object
GHC.Int.$fBitsInt64_$ccomplementBit_info:
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.768406028 UTC

.section .text
.align 8
_c4AlG:
_c4AlG:
	leaq block_c4AlM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AlM
_c4AlQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AlG, .-_c4AlG


==================== Asm code ====================
2018-03-16 15:59:26.769016501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AlG_info:
	.quad	_c4AlG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.769916992 UTC

.section .text
.align 8
_c4AlM:
_c4AlM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AlW
_c4AlV:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4Amh
_c4Ami:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4Amh:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	xorq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AlW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AlM, .-_c4AlM


==================== Asm code ====================
2018-03-16 15:59:26.770607091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AlM_info:
	.quad	_c4AlM
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.774987346 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cclearBit_closure
.type GHC.Int.$fBitsInt64_$cclearBit_closure, @object
GHC.Int.$fBitsInt64_$cclearBit_closure:
	.quad	GHC.Int.$fBitsInt64_$cclearBit_info


==================== Asm code ====================
2018-03-16 15:59:26.775970583 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$cclearBit_entry
.type GHC.Int.$fBitsInt64_$cclearBit_entry, @object
GHC.Int.$fBitsInt64_$cclearBit_entry:
_c4AmO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AmS
_c4AmT:
	leaq block_c4AmL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AmL
_c4AmM:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AmS:
	leaq GHC.Int.$fBitsInt64_$cclearBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$cclearBit_entry, .-GHC.Int.$fBitsInt64_$cclearBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.776701695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$cclearBit_info
.type GHC.Int.$fBitsInt64_$cclearBit_info, @object
GHC.Int.$fBitsInt64_$cclearBit_info:
	.quad	GHC.Int.$fBitsInt64_$cclearBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.777511205 UTC

.section .text
.align 8
_c4AmL:
_c4AmL:
	leaq block_c4AmR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AmR
_c4AmV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AmL, .-_c4AmL


==================== Asm code ====================
2018-03-16 15:59:26.778147992 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AmL_info:
	.quad	_c4AmL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.779097262 UTC

.section .text
.align 8
_c4AmR:
_c4AmR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4An1
_c4An0:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $64,%rbx
	jl _c4Anp
_c4AnB:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	andq $-1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Anp:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movl $1,%ecx
	movq %rcx,%rdx
	movq %rbx,%rcx
	shlq %cl,%rdx
	xorq $-1,%rdx
	andq %rdx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4An1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AmR, .-_c4AmR


==================== Asm code ====================
2018-03-16 15:59:26.77993173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AmR_info:
	.quad	_c4AmR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.784978011 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$csetBit_closure
.type GHC.Int.$fBitsInt64_$csetBit_closure, @object
GHC.Int.$fBitsInt64_$csetBit_closure:
	.quad	GHC.Int.$fBitsInt64_$csetBit_info


==================== Asm code ====================
2018-03-16 15:59:26.786025048 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$csetBit_entry
.type GHC.Int.$fBitsInt64_$csetBit_entry, @object
GHC.Int.$fBitsInt64_$csetBit_entry:
_c4Aob:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Aof
_c4Aog:
	leaq block_c4Ao8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Ao8
_c4Ao9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aof:
	leaq GHC.Int.$fBitsInt64_$csetBit_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fBitsInt64_$csetBit_entry, .-GHC.Int.$fBitsInt64_$csetBit_entry


==================== Asm code ====================
2018-03-16 15:59:26.786695785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$csetBit_info
.type GHC.Int.$fBitsInt64_$csetBit_info, @object
GHC.Int.$fBitsInt64_$csetBit_info:
	.quad	GHC.Int.$fBitsInt64_$csetBit_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.787455669 UTC

.section .text
.align 8
_c4Ao8:
_c4Ao8:
	leaq block_c4Aoe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Aoe
_c4Aoi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ao8, .-_c4Ao8


==================== Asm code ====================
2018-03-16 15:59:26.788119441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ao8_info:
	.quad	_c4Ao8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.788989796 UTC

.section .text
.align 8
_c4Aoe:
_c4Aoe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Aoo
_c4Aon:
	movq 7(%rbx),%rax
	cmpq $64,%rax
	jl _c4AoJ
_c4AoK:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4AoJ:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movl $1,%ebx
	movq %rax,%rcx
	shlq %cl,%rbx
	movq 8(%rbp),%rax
	orq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Aoo:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Aoe, .-_c4Aoe


==================== Asm code ====================
2018-03-16 15:59:26.789787767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aoe_info:
	.quad	_c4Aoe
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.792134016 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateL_closure
.type GHC.Int.$fBitsInt64_$crotateL_closure, @object
GHC.Int.$fBitsInt64_$crotateL_closure:
	.quad	GHC.Int.$fBitsInt64_$crotateL_info


==================== Asm code ====================
2018-03-16 15:59:26.792766002 UTC

.section .text
.align 8
.globl GHC.Int.$fBitsInt64_$crotateL_entry
.type GHC.Int.$fBitsInt64_$crotateL_entry, @object
GHC.Int.$fBitsInt64_$crotateL_entry:
_c4Apd:
	jmp GHC.Int.$fBitsInt64_$crotate_entry
	.size GHC.Int.$fBitsInt64_$crotateL_entry, .-GHC.Int.$fBitsInt64_$crotateL_entry


==================== Asm code ====================
2018-03-16 15:59:26.793758406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_$crotateL_info
.type GHC.Int.$fBitsInt64_$crotateL_info, @object
GHC.Int.$fBitsInt64_$crotateL_info:
	.quad	GHC.Int.$fBitsInt64_$crotateL_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.796011661 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fBitsInt64_closure
.type GHC.Int.$fBitsInt64_closure, @object
GHC.Int.$fBitsInt64_closure:
	.quad	Data.Bits.C:Bits_con_info
	.quad	GHC.Int.$fEqInt64_closure+1
	.quad	GHC.Int.$fBitsInt64_$c.&._closure+2
	.quad	GHC.Int.$fBitsInt64_$c.|._closure+2
	.quad	GHC.Int.$fBitsInt64_$cxor_closure+2
	.quad	GHC.Int.$fBitsInt64_$ccomplement_closure+1
	.quad	GHC.Int.$fBitsInt64_$cshift_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotate_closure+2
	.quad	GHC.Int.$fBitsInt10_closure+1
	.quad	GHC.Int.$fBitsInt64_$cbit_closure+1
	.quad	GHC.Int.$fBitsInt64_$csetBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$cclearBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$ccomplementBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$ctestBit_closure+2
	.quad	GHC.Int.$fBitsInt64_$cbitSizeMaybe_closure+1
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fBitsInt64_$cisSigned_closure+1
	.quad	GHC.Int.$fBitsInt64_$cshiftL_closure+2
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftL_closure+2
	.quad	GHC.Int.$fBitsInt64_$cshiftR_closure+2
	.quad	GHC.Int.$fBitsInt64_$cunsafeShiftR_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotateL_closure+2
	.quad	GHC.Int.$fBitsInt64_$crotateR_closure+2
	.quad	GHC.Int.$fBitsInt64_$cpopCount_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.798081287 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fFiniteBitsInt64_closure
.type GHC.Int.$fFiniteBitsInt64_closure, @object
GHC.Int.$fFiniteBitsInt64_closure:
	.quad	Data.Bits.C:FiniteBits_con_info
	.quad	GHC.Int.$fBitsInt64_closure+1
	.quad	GHC.Int.$fBitsInt64_$cfiniteBitSize_closure+1
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros_closure+1
	.quad	GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:26.804947661 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_go_closure
.type GHC.Int.$fReadInt64_go_closure, @object
GHC.Int.$fReadInt64_go_closure:
	.quad	GHC.Int.$fReadInt64_go_info


==================== Asm code ====================
2018-03-16 15:59:26.805846798 UTC

.section .text
.align 8
sat_s4w9L_entry:
_c4ApF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ApG
_c4ApH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fReadInt64_go_entry
_c4ApG:
	jmp *-16(%r13)
	.size sat_s4w9L_entry, .-sat_s4w9L_entry


==================== Asm code ====================
2018-03-16 15:59:26.806515622 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w9L_info:
	.quad	sat_s4w9L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.807268527 UTC

.section .text
.align 8
sat_s4w9J_entry:
_c4ApP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ApT
_c4ApU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c4ApM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c4ApM
_c4ApN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ApT:
	jmp *-16(%r13)
	.size sat_s4w9J_entry, .-sat_s4w9J_entry


==================== Asm code ====================
2018-03-16 15:59:26.807927736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w9J_info:
	.quad	sat_s4w9J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:59:26.808676317 UTC

.section .text
.align 8
_c4ApM:
_c4ApM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ApX
_c4ApW:
	movq 7(%rbx),%rax
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ApX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ApM, .-_c4ApM


==================== Asm code ====================
2018-03-16 15:59:26.809343241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ApM_info:
	.quad	_c4ApM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.810093986 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_go_entry
.type GHC.Int.$fReadInt64_go_entry, @object
GHC.Int.$fReadInt64_go_entry:
_c4Aq3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Aq4
_c4Aq5:
	leaq block_c4Apq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Apq
_c4Apr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aq4:
	leaq GHC.Int.$fReadInt64_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt64_go_entry, .-GHC.Int.$fReadInt64_go_entry


==================== Asm code ====================
2018-03-16 15:59:26.810863416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_go_info
.type GHC.Int.$fReadInt64_go_info, @object
GHC.Int.$fReadInt64_go_info:
	.quad	GHC.Int.$fReadInt64_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.811692255 UTC

.section .text
.align 8
_c4Apq:
_c4Apq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c4Aq0
_c4Aq1:
	leaq block_c4Apw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4Apw
_c4Apx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Aq0:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Apq, .-_c4Apq


==================== Asm code ====================
2018-03-16 15:59:26.81237604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Apq_info:
	.quad	_c4Apq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.813181584 UTC

.section .text
.align 8
_c4Apw:
_c4Apw:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c4Aqd
_c4Aqc:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s4w9L_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	leaq sat_s4w9J_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Aqd:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Apw, .-_c4Apw


==================== Asm code ====================
2018-03-16 15:59:26.813992614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Apw_info:
	.quad	_c4Apw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.817826927 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadsPrec_closure
.type GHC.Int.$fReadInt64_$creadsPrec_closure, @object
GHC.Int.$fReadInt64_$creadsPrec_closure:
	.quad	GHC.Int.$fReadInt64_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.818744611 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_$creadsPrec_entry
.type GHC.Int.$fReadInt64_$creadsPrec_entry, @object
GHC.Int.$fReadInt64_$creadsPrec_entry:
_c4Ar5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ar9
_c4Ara:
	leaq block_c4Ar3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rsi,%rax
	movq %r14,%rsi
	movq GHC.Read.$fReadInt2_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Read.$fReadInt_$sreadNumber_entry@gotpcrel(%rip)
_c4Ar9:
	leaq GHC.Int.$fReadInt64_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt64_$creadsPrec_entry, .-GHC.Int.$fReadInt64_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:26.819560293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadsPrec_info
.type GHC.Int.$fReadInt64_$creadsPrec_info, @object
GHC.Int.$fReadInt64_$creadsPrec_info:
	.quad	GHC.Int.$fReadInt64_$creadsPrec_entry
	.quad	0
	.quad	144115200960757774
	.quad	8589934607
	.quad	S4wm5_srt+848


==================== Asm code ====================
2018-03-16 15:59:26.820353599 UTC

.section .text
.align 8
_c4Ar3:
_c4Ar3:
	movq 8(%rbp),%rax
	leaq block_c4Ar8_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size _c4Ar3, .-_c4Ar3


==================== Asm code ====================
2018-03-16 15:59:26.821043465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ar3_info:
	.quad	_c4Ar3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.821883216 UTC

.section .text
.align 8
_c4Ar8:
_c4Ar8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Int.$fReadInt64_go_entry
	.size _c4Ar8, .-_c4Ar8


==================== Asm code ====================
2018-03-16 15:59:26.822937342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ar8_info:
	.quad	_c4Ar8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.82700867 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt10_closure
.type GHC.Int.$fReadInt10_closure, @object
GHC.Int.$fReadInt10_closure:
	.quad	GHC.Int.$fReadInt10_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.8277725 UTC

.section .text
.align 8
sat_s4w9S_entry:
_c4ArE:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Int.$fReadInt64_$creadsPrec_entry
	.size sat_s4w9S_entry, .-sat_s4w9S_entry


==================== Asm code ====================
2018-03-16 15:59:26.828304473 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s4w9S_info:
	.quad	sat_s4w9S_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S4wm5_srt+1048


==================== Asm code ====================
2018-03-16 15:59:26.829198178 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt10_entry
.type GHC.Int.$fReadInt10_entry, @object
GHC.Int.$fReadInt10_entry:
_c4ArK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ArL
_c4ArM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ArO
_c4ArN:
	leaq sat_s4w9S_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c4ArH_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4ArO:
	movq $16,904(%r13)
_c4ArL:
	leaq GHC.Int.$fReadInt10_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt10_entry, .-GHC.Int.$fReadInt10_entry


==================== Asm code ====================
2018-03-16 15:59:26.830036702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt10_info
.type GHC.Int.$fReadInt10_info, @object
GHC.Int.$fReadInt10_info:
	.quad	GHC.Int.$fReadInt10_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+1048


==================== Asm code ====================
2018-03-16 15:59:26.83085793 UTC

.section .text
.align 8
_c4ArH:
_c4ArH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ArR
_c4ArQ:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ArR:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ArH, .-_c4ArH


==================== Asm code ====================
2018-03-16 15:59:26.831820767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ArH_info:
	.quad	_c4ArH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.83811554 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt9_closure
.type GHC.Int.$fReadInt9_closure, @object
GHC.Int.$fReadInt9_closure:
	.quad	GHC.Int.$fReadInt9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.839016902 UTC

.section .data.rel.ro
.align 8
.align 1
u4Asg_srtd:
	.quad	S4wm5_srt+504
	.quad	70
	.quad	1
	.quad	32


==================== Asm code ====================
2018-03-16 15:59:26.840558071 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt9_entry
.type GHC.Int.$fReadInt9_entry, @object
GHC.Int.$fReadInt9_entry:
_c4Asd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ase
_c4Asf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c4Asc
_c4Asb:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt10_closure+2(%rip),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c4Ase:
	jmp *-16(%r13)
_c4Asc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Int.$fReadInt9_entry, .-GHC.Int.$fReadInt9_entry


==================== Asm code ====================
2018-03-16 15:59:26.841899535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt9_info
.type GHC.Int.$fReadInt9_info, @object
GHC.Int.$fReadInt9_info:
	.quad	GHC.Int.$fReadInt9_entry
	.quad	0
	.quad	-4294967275
	.quad	u4Asg_srtd


==================== Asm code ====================
2018-03-16 15:59:26.845560399 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadList_closure
.type GHC.Int.$fReadInt64_$creadList_closure, @object
GHC.Int.$fReadInt64_$creadList_closure:
	.quad	GHC.Int.$fReadInt64_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.846659951 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt64_$creadList_entry
.type GHC.Int.$fReadInt64_$creadList_entry, @object
GHC.Int.$fReadInt64_$creadList_entry:
_c4Asy:
	movq %r14,%rsi
	leaq GHC.Int.$fReadInt9_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Int.$fReadInt64_$creadList_entry, .-GHC.Int.$fReadInt64_$creadList_entry


==================== Asm code ====================
2018-03-16 15:59:26.847622918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt64_$creadList_info
.type GHC.Int.$fReadInt64_$creadList_info, @object
GHC.Int.$fReadInt64_$creadList_info:
	.quad	GHC.Int.$fReadInt64_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S4wm5_srt+1064


==================== Asm code ====================
2018-03-16 15:59:26.854037927 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt7_closure
.type GHC.Int.$fReadInt7_closure, @object
GHC.Int.$fReadInt7_closure:
	.quad	GHC.Int.$fReadInt7_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.855369609 UTC

.section .text
.align 8
.globl GHC.Int.$fReadInt7_entry
.type GHC.Int.$fReadInt7_entry, @object
GHC.Int.$fReadInt7_entry:
_c4AsM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AsN
_c4AsO:
	leaq block_c4AsJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Int.$fReadInt64_$creadList_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_c4AsN:
	leaq GHC.Int.$fReadInt7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fReadInt7_entry, .-GHC.Int.$fReadInt7_entry


==================== Asm code ====================
2018-03-16 15:59:26.856379324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fReadInt7_info
.type GHC.Int.$fReadInt7_info, @object
GHC.Int.$fReadInt7_info:
	.quad	GHC.Int.$fReadInt7_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+1072


==================== Asm code ====================
2018-03-16 15:59:26.857497977 UTC

.section .text
.align 8
_c4AsJ:
_c4AsJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AsR
_c4AsQ:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AsR:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AsJ, .-_c4AsJ


==================== Asm code ====================
2018-03-16 15:59:26.85842122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AsJ_info:
	.quad	_c4AsJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.861118832 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fReadInt64_closure
.type GHC.Int.$fReadInt64_closure, @object
GHC.Int.$fReadInt64_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure+2
	.quad	GHC.Int.$fReadInt64_$creadList_closure+1
	.quad	GHC.Int.$fReadInt10_closure+2
	.quad	GHC.Int.$fReadInt7_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.867421839 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquot_closure
.type GHC.Int.$fIntegralInt64_$cquot_closure, @object
GHC.Int.$fIntegralInt64_$cquot_closure:
	.quad	GHC.Int.$fIntegralInt64_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.868376997 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cquot_entry
.type GHC.Int.$fIntegralInt64_$cquot_entry, @object
GHC.Int.$fIntegralInt64_$cquot_entry:
_c4Atb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Atf
_c4Atg:
	leaq block_c4At8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4At8
_c4At9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Atf:
	leaq GHC.Int.$fIntegralInt64_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cquot_entry, .-GHC.Int.$fIntegralInt64_$cquot_entry


==================== Asm code ====================
2018-03-16 15:59:26.869117629 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquot_info
.type GHC.Int.$fIntegralInt64_$cquot_info, @object
GHC.Int.$fIntegralInt64_$cquot_info:
	.quad	GHC.Int.$fIntegralInt64_$cquot_entry
	.quad	0
	.quad	36028809903865870
	.quad	8589934607
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.87004055 UTC

.section .text
.align 8
_c4At8:
_c4At8:
	leaq block_c4Ate_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Ate
_c4Ati:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4At8, .-_c4At8


==================== Asm code ====================
2018-03-16 15:59:26.87069635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4At8_info:
	.quad	_c4At8
	.quad	1
	.quad	12884901918
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.871713127 UTC

.section .text
.align 8
_c4Ate:
_c4Ate:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Ato
_c4Atn:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4AtJ
_c4AtH:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c4AtG
_c4AtF:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4AtJ:
	testq %rbx,%rbx
	jne _c4Atw
_c4AtI:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4AtG:
	addq $-16,%r12
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4Atw:
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-8(%r12)
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ato:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Ate, .-_c4Ate


==================== Asm code ====================
2018-03-16 15:59:26.872637565 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ate_info:
	.quad	_c4Ate
	.quad	65
	.quad	12884901918
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.878012851 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$crem_closure
.type GHC.Int.$fIntegralInt64_$crem_closure, @object
GHC.Int.$fIntegralInt64_$crem_closure:
	.quad	GHC.Int.$fIntegralInt64_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.878972654 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$crem_entry
.type GHC.Int.$fIntegralInt64_$crem_entry, @object
GHC.Int.$fIntegralInt64_$crem_entry:
_c4Aug:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Auk
_c4Aul:
	leaq block_c4Aud_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Aud
_c4Aue:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Auk:
	leaq GHC.Int.$fIntegralInt64_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$crem_entry, .-GHC.Int.$fIntegralInt64_$crem_entry


==================== Asm code ====================
2018-03-16 15:59:26.879691609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$crem_info
.type GHC.Int.$fIntegralInt64_$crem_info, @object
GHC.Int.$fIntegralInt64_$crem_info:
	.quad	GHC.Int.$fIntegralInt64_$crem_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.880421033 UTC

.section .text
.align 8
_c4Aud:
_c4Aud:
	leaq block_c4Auj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Auj
_c4Aun:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Aud, .-_c4Aud


==================== Asm code ====================
2018-03-16 15:59:26.881079723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Aud_info:
	.quad	_c4Aud
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.881989793 UTC

.section .text
.align 8
_c4Auj:
_c4Auj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Aut
_c4Aus:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4AuE
_c4AuC:
	addq $-16,%r12
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4AuE:
	testq %rax,%rax
	jne _c4AuB
_c4AuD:
	addq $-16,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4AuB:
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	cqto
	idivq %rbx
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Aut:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Auj, .-_c4Auj


==================== Asm code ====================
2018-03-16 15:59:26.882767643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Auj_info:
	.quad	_c4Auj
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.886145721 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdiv2_closure
.type GHC.Int.$w$cdiv2_closure, @object
GHC.Int.$w$cdiv2_closure:
	.quad	GHC.Int.$w$cdiv2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.887498527 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdiv2_entry
.type GHC.Int.$w$cdiv2_entry, @object
GHC.Int.$w$cdiv2_entry:
_c4Av9:
	cmpq $-1,%rsi
	je _c4Av7
_u4Avi:
	testq %rsi,%rsi
	je _c4Av8
_c4Av6:
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4Avh:
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4Av7:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c4Avh
_c4Avg:
	movq $-1,%rsi
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c4Av8:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdiv2_entry, .-GHC.Int.$w$cdiv2_entry


==================== Asm code ====================
2018-03-16 15:59:26.888385604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdiv2_info
.type GHC.Int.$w$cdiv2_info, @object
GHC.Int.$w$cdiv2_info:
	.quad	GHC.Int.$w$cdiv2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934604
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.89271468 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdiv_closure
.type GHC.Int.$fIntegralInt64_$cdiv_closure, @object
GHC.Int.$fIntegralInt64_$cdiv_closure:
	.quad	GHC.Int.$fIntegralInt64_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.894005303 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cdiv_entry
.type GHC.Int.$fIntegralInt64_$cdiv_entry, @object
GHC.Int.$fIntegralInt64_$cdiv_entry:
_c4Avv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AvI
_c4AvJ:
	leaq block_c4Avs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Avs
_c4Avt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AvI:
	leaq GHC.Int.$fIntegralInt64_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cdiv_entry, .-GHC.Int.$fIntegralInt64_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:59:26.894696804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdiv_info
.type GHC.Int.$fIntegralInt64_$cdiv_info, @object
GHC.Int.$fIntegralInt64_$cdiv_info:
	.quad	GHC.Int.$fIntegralInt64_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+1104


==================== Asm code ====================
2018-03-16 15:59:26.895404709 UTC

.section .text
.align 8
_c4Avs:
_c4Avs:
	leaq block_c4Avy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Avy
_c4Avz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Avs, .-_c4Avs


==================== Asm code ====================
2018-03-16 15:59:26.896064393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Avs_info:
	.quad	_c4Avs
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+1112


==================== Asm code ====================
2018-03-16 15:59:26.896772831 UTC

.section .text
.align 8
_c4Avy:
_c4Avy:
	movq 8(%rbp),%rax
	leaq block_c4AvD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdiv2_entry
	.size _c4Avy, .-_c4Avy


==================== Asm code ====================
2018-03-16 15:59:26.89747354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Avy_info:
	.quad	_c4Avy
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+1112


==================== Asm code ====================
2018-03-16 15:59:26.89827351 UTC

.section .text
.align 8
_c4AvD:
_c4AvD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AvO
_c4AvN:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AvO:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4AvD, .-_c4AvD


==================== Asm code ====================
2018-03-16 15:59:26.899462982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AvD_info:
	.quad	_c4AvD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.904223921 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cmod_closure
.type GHC.Int.$fIntegralInt64_$cmod_closure, @object
GHC.Int.$fIntegralInt64_$cmod_closure:
	.quad	GHC.Int.$fIntegralInt64_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.9051401 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cmod_entry
.type GHC.Int.$fIntegralInt64_$cmod_entry, @object
GHC.Int.$fIntegralInt64_$cmod_entry:
_c4Awj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Awn
_c4Awo:
	leaq block_c4Awg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Awg
_c4Awh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Awn:
	leaq GHC.Int.$fIntegralInt64_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cmod_entry, .-GHC.Int.$fIntegralInt64_$cmod_entry


==================== Asm code ====================
2018-03-16 15:59:26.906108883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cmod_info
.type GHC.Int.$fIntegralInt64_$cmod_info, @object
GHC.Int.$fIntegralInt64_$cmod_info:
	.quad	GHC.Int.$fIntegralInt64_$cmod_entry
	.quad	0
	.quad	288230380446679054
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.906912138 UTC

.section .text
.align 8
_c4Awg:
_c4Awg:
	leaq block_c4Awm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Awm
_c4Awq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Awg, .-_c4Awg


==================== Asm code ====================
2018-03-16 15:59:26.907841872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Awg_info:
	.quad	_c4Awg
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.909187783 UTC

.section .text
.align 8
_c4Awm:
_c4Awm:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u4AwJ
_c4AwH:
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4AwJ:
	testq %rax,%rax
	jne _c4AwD
_c4AwI:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4AwD:
	movq 8(%rbp),%rbx
	leaq block_c4Awx_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _c4Awm, .-_c4Awm


==================== Asm code ====================
2018-03-16 15:59:26.910443684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Awm_info:
	.quad	_c4Awm
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.911711529 UTC

.section .text
.align 8
_c4Awx:
_c4Awx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AwG
_c4AwF:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AwG:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c4Awx, .-_c4Awx


==================== Asm code ====================
2018-03-16 15:59:26.912693539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Awx_info:
	.quad	_c4Awx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.915622064 UTC

.section .data
.align 8
.align 1
lvl9_r4kPA_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fBitsInt10_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.924258367 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquotRem_closure
.type GHC.Int.$fIntegralInt64_$cquotRem_closure, @object
GHC.Int.$fIntegralInt64_$cquotRem_closure:
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.926334892 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cquotRem_entry
.type GHC.Int.$fIntegralInt64_$cquotRem_entry, @object
GHC.Int.$fIntegralInt64_$cquotRem_entry:
_c4Axg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Axk
_c4Axl:
	leaq block_c4Axd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Axd
_c4Axe:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Axk:
	leaq GHC.Int.$fIntegralInt64_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cquotRem_entry, .-GHC.Int.$fIntegralInt64_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:59:26.927444585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cquotRem_info
.type GHC.Int.$fIntegralInt64_$cquotRem_info, @object
GHC.Int.$fIntegralInt64_$cquotRem_info:
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_entry
	.quad	0
	.quad	1729382261205237774
	.quad	8589934607
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.929405304 UTC

.section .text
.align 8
_c4Axd:
_c4Axd:
	leaq block_c4Axj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Axj
_c4Axn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Axd, .-_c4Axd


==================== Asm code ====================
2018-03-16 15:59:26.930407032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Axd_info:
	.quad	_c4Axd
	.quad	1
	.quad	1152921508901814302
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.932165388 UTC

.section .text
.align 8
_c4Axj:
_c4Axj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c4Axt
_c4Axs:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u4AxM
_c4AxK:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c4AxJ
_c4AxI:
	movq $-1,%rbx
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u4AxM:
	testq %rbx,%rbx
	jne _c4AxA
_c4AxL:
	addq $-56,%r12
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c4AxJ:
	addq $-56,%r12
	leaq lvl9_r4kPA_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AxA:
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Axt:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4Axj, .-_c4Axj


==================== Asm code ====================
2018-03-16 15:59:26.933695485 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Axj_info:
	.quad	_c4Axj
	.quad	65
	.quad	1152921508901814302
	.quad	S4wm5_srt+912


==================== Asm code ====================
2018-03-16 15:59:26.944765735 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$w$cdivMod2_closure
.type GHC.Int.$w$cdivMod2_closure, @object
GHC.Int.$w$cdivMod2_closure:
	.quad	GHC.Int.$w$cdivMod2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.946340121 UTC

.section .text
.align 8
.globl GHC.Int.$w$cdivMod2_entry
.type GHC.Int.$w$cdivMod2_entry, @object
GHC.Int.$w$cdivMod2_entry:
_c4Ayr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ays
_c4Ayt:
	testq %rsi,%rsi
	je _c4Ayq
_c4Ayp:
	cmpq $-1,%rsi
	je _c4AAg
_u4AAh:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4Ayy
_c4AAg:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c4AAf
_u4AAi:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _c4Ayy
_c4AAf:
	leaq GHC.Int.$fBitsInt10_closure+1(%rip),%r14
	movq GHC.Real.overflowError_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ays:
	leaq GHC.Int.$w$cdivMod2_closure(%rip),%rbx
	jmp *-8(%r13)
_c4Ayq:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Int.$w$cdivMod2_entry, .-GHC.Int.$w$cdivMod2_entry


==================== Asm code ====================
2018-03-16 15:59:26.947553293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$w$cdivMod2_info
.type GHC.Int.$w$cdivMod2_info, @object
GHC.Int.$w$cdivMod2_info:
	.quad	GHC.Int.$w$cdivMod2_entry
	.quad	0
	.quad	4611686031312289806
	.quad	8589934604
	.quad	S4wm5_srt+904


==================== Asm code ====================
2018-03-16 15:59:26.949987739 UTC

.section .text
.align 8
_c4Ayy:
_c4Ayy:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c4AyC
_c4AyB:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jle _c4Azd
_c4AA6:
	testq %rbx,%rbx
	jge _c4AzP
_c4AA5:
	decq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AzP:
	testq %rax,%rax
	jge _c4Azo
_c4AzN:
	testq %rbx,%rbx
	jle _c4Azw
_c4AzM:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Azw:
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rdx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Azo:
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rdx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Azd:
	testq %rax,%rax
	jge _c4AyM
_c4Azb:
	testq %rbx,%rbx
	jle _c4AyU
_c4Aza:
	incq %rax
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rcx
	movq %rcx,-24(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AyU:
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rdx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AyM:
	cqto
	idivq %rbx
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rdx,-16(%r12)
	leaq GHC.Int.I64#_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -23(%r12),%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AyC:
	movq $32,904(%r13)
	leaq block_c4Ayy_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c4Ayy, .-_c4Ayy


==================== Asm code ====================
2018-03-16 15:59:26.952298914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ayy_info:
	.quad	_c4Ayy
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.959233474 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdivMod_closure
.type GHC.Int.$fIntegralInt64_$cdivMod_closure, @object
GHC.Int.$fIntegralInt64_$cdivMod_closure:
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.961608577 UTC

.section .text
.align 8
.globl GHC.Int.$fIntegralInt64_$cdivMod_entry
.type GHC.Int.$fIntegralInt64_$cdivMod_entry, @object
GHC.Int.$fIntegralInt64_$cdivMod_entry:
_c4ABa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ABl
_c4ABm:
	leaq block_c4AB7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AB7
_c4AB8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ABl:
	leaq GHC.Int.$fIntegralInt64_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIntegralInt64_$cdivMod_entry, .-GHC.Int.$fIntegralInt64_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:59:26.96239878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_$cdivMod_info
.type GHC.Int.$fIntegralInt64_$cdivMod_info, @object
GHC.Int.$fIntegralInt64_$cdivMod_info:
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S4wm5_srt+1144


==================== Asm code ====================
2018-03-16 15:59:26.963255859 UTC

.section .text
.align 8
_c4AB7:
_c4AB7:
	leaq block_c4ABd_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ABd
_c4ABe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AB7, .-_c4AB7


==================== Asm code ====================
2018-03-16 15:59:26.96389812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AB7_info:
	.quad	_c4AB7
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+1144


==================== Asm code ====================
2018-03-16 15:59:26.964553143 UTC

.section .text
.align 8
_c4ABd:
_c4ABd:
	movq 8(%rbp),%rax
	leaq block_c4ABi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Int.$w$cdivMod2_entry
	.size _c4ABd, .-_c4ABd


==================== Asm code ====================
2018-03-16 15:59:26.96518194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ABd_info:
	.quad	_c4ABd
	.quad	65
	.quad	4294967326
	.quad	S4wm5_srt+1144


==================== Asm code ====================
2018-03-16 15:59:26.96604539 UTC

.section .text
.align 8
_c4ABi:
_c4ABi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4ABr
_c4ABq:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ABr:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4ABi, .-_c4ABi


==================== Asm code ====================
2018-03-16 15:59:26.966688842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ABi_info:
	.quad	_c4ABi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.96975435 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crange_closure
.type GHC.Int.$fIxInt64_$crange_closure, @object
GHC.Int.$fIxInt64_$crange_closure:
	.quad	GHC.Int.$fIxInt64_$crange_info


==================== Asm code ====================
2018-03-16 15:59:26.970564342 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$crange_entry
.type GHC.Int.$fIxInt64_$crange_entry, @object
GHC.Int.$fIxInt64_$crange_entry:
_c4ABW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ABX
_c4ABY:
	leaq block_c4ABT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ABT
_c4ABU:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ABX:
	leaq GHC.Int.$fIxInt64_$crange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$crange_entry, .-GHC.Int.$fIxInt64_$crange_entry


==================== Asm code ====================
2018-03-16 15:59:26.971234342 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crange_info
.type GHC.Int.$fIxInt64_$crange_info, @object
GHC.Int.$fIxInt64_$crange_info:
	.quad	GHC.Int.$fIxInt64_$crange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:26.971909751 UTC

.section .text
.align 8
_c4ABT:
_c4ABT:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Int.$fEnumInt64_$cenumFromTo_entry
	.size _c4ABT, .-_c4ABT


==================== Asm code ====================
2018-03-16 15:59:26.972530474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ABT_info:
	.quad	_c4ABT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.976694657 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt64_$ctoRational_closure
.type GHC.Int.$fRealInt64_$ctoRational_closure, @object
GHC.Int.$fRealInt64_$ctoRational_closure:
	.quad	GHC.Int.$fRealInt64_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.977671655 UTC

.section .text
.align 8
.globl GHC.Int.$fRealInt64_$ctoRational_entry
.type GHC.Int.$fRealInt64_$ctoRational_entry, @object
GHC.Int.$fRealInt64_$ctoRational_entry:
_c4ACk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ACy
_c4ACz:
	leaq block_c4ACh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4ACh
_c4ACi:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ACy:
	leaq GHC.Int.$fRealInt64_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fRealInt64_$ctoRational_entry, .-GHC.Int.$fRealInt64_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:59:26.978374738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fRealInt64_$ctoRational_info
.type GHC.Int.$fRealInt64_$ctoRational_info, @object
GHC.Int.$fRealInt64_$ctoRational_info:
	.quad	GHC.Int.$fRealInt64_$ctoRational_entry
	.quad	0
	.quad	9007229319512078
	.quad	4294967301
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.979031672 UTC

.section .text
.align 8
_c4ACh:
_c4ACh:
	leaq block_c4ACn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c4ACh, .-_c4ACh


==================== Asm code ====================
2018-03-16 15:59:26.979633328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ACh_info:
	.quad	_c4ACh
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.980291785 UTC

.section .text
.align 8
_c4ACn:
_c4ACn:
	leaq block_c4ACr_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c4ACn, .-_c4ACn


==================== Asm code ====================
2018-03-16 15:59:26.98092469 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ACn_info:
	.quad	_c4ACn
	.quad	0
	.quad	30064771102
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.982356673 UTC

.section .text
.align 8
_c4ACr:
_c4ACr:
	leaq block_c4ACv_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Int.$fRealInt1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Real.$w$sreduce_entry@gotpcrel(%rip)
	.size _c4ACr, .-_c4ACr


==================== Asm code ====================
2018-03-16 15:59:26.982997946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ACr_info:
	.quad	_c4ACr
	.quad	0
	.quad	12884901918
	.quad	S4wm5_srt+992


==================== Asm code ====================
2018-03-16 15:59:26.983816006 UTC

.section .text
.align 8
_c4ACv:
_c4ACv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4ACF
_c4ACE:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ACF:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4ACv, .-_c4ACv


==================== Asm code ====================
2018-03-16 15:59:26.984456706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ACv_info:
	.quad	_c4ACv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.98623661 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fRealInt64_closure
.type GHC.Int.$fRealInt64_closure, @object
GHC.Int.$fRealInt64_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Int.$fNumInt64_closure+1
	.quad	GHC.Int.$fOrdInt64_closure+1
	.quad	GHC.Int.$fRealInt64_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.988017836 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIntegralInt64_closure
.type GHC.Int.$fIntegralInt64_closure, @object
GHC.Int.$fIntegralInt64_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Int.$fRealInt64_closure+1
	.quad	GHC.Int.$fEnumInt64_closure+1
	.quad	GHC.Int.$fIntegralInt64_$cquot_closure+2
	.quad	GHC.Int.$fIntegralInt64_$crem_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cdiv_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cmod_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_closure+2
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_closure+2
	.quad	GHC.Int.$fIntegralInt64_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:26.992272269 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeIndex_closure
.type GHC.Int.$fIxInt64_$cunsafeIndex_closure, @object
GHC.Int.$fIxInt64_$cunsafeIndex_closure:
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_info


==================== Asm code ====================
2018-03-16 15:59:26.993186682 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cunsafeIndex_entry
.type GHC.Int.$fIxInt64_$cunsafeIndex_entry, @object
GHC.Int.$fIxInt64_$cunsafeIndex_entry:
_c4ADe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ADv
_c4ADw:
	leaq block_c4ADb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4ADb
_c4ADc:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ADv:
	leaq GHC.Int.$fIxInt64_$cunsafeIndex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cunsafeIndex_entry, .-GHC.Int.$fIxInt64_$cunsafeIndex_entry


==================== Asm code ====================
2018-03-16 15:59:26.993910855 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeIndex_info
.type GHC.Int.$fIxInt64_$cunsafeIndex_info, @object
GHC.Int.$fIxInt64_$cunsafeIndex_info:
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:26.994581638 UTC

.section .text
.align 8
_c4ADb:
_c4ADb:
	leaq block_c4ADh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ADh
_c4ADi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ADb, .-_c4ADb


==================== Asm code ====================
2018-03-16 15:59:26.995165547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ADb_info:
	.quad	_c4ADb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.995879676 UTC

.section .text
.align 8
_c4ADh:
_c4ADh:
	leaq block_c4ADm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ADm
_c4ADn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4ADh, .-_c4ADh


==================== Asm code ====================
2018-03-16 15:59:26.996487051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ADh_info:
	.quad	_c4ADh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:26.997471112 UTC

.section .text
.align 8
_c4ADm:
_c4ADm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ADB
_c4ADA:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ADB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4ADm, .-_c4ADm


==================== Asm code ====================
2018-03-16 15:59:26.998087344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ADm_info:
	.quad	_c4ADm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.003291117 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crangeSize_closure
.type GHC.Int.$fIxInt64_$crangeSize_closure, @object
GHC.Int.$fIxInt64_$crangeSize_closure:
	.quad	GHC.Int.$fIxInt64_$crangeSize_info


==================== Asm code ====================
2018-03-16 15:59:27.004186232 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$crangeSize_entry
.type GHC.Int.$fIxInt64_$crangeSize_entry, @object
GHC.Int.$fIxInt64_$crangeSize_entry:
_c4AEa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AEj
_c4AEk:
	leaq block_c4AE7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AE7
_c4AE8:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AEj:
	leaq GHC.Int.$fIxInt64_$crangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$crangeSize_entry, .-GHC.Int.$fIxInt64_$crangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:27.004835129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$crangeSize_info
.type GHC.Int.$fIxInt64_$crangeSize_info, @object
GHC.Int.$fIxInt64_$crangeSize_info:
	.quad	GHC.Int.$fIxInt64_$crangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:27.005758713 UTC

.section .text
.align 8
_c4AE7:
_c4AE7:
	leaq block_c4AEd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AEd
_c4AEe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AE7, .-_c4AE7


==================== Asm code ====================
2018-03-16 15:59:27.006311571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AE7_info:
	.quad	_c4AE7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.007006532 UTC

.section .text
.align 8
_c4AEd:
_c4AEd:
	leaq block_c4AEi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AEi
_c4AEn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AEd, .-_c4AEd


==================== Asm code ====================
2018-03-16 15:59:27.007591656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AEd_info:
	.quad	_c4AEd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.008390534 UTC

.section .text
.align 8
_c4AEi:
_c4AEi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AEt
_c4AEs:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jg _c4AEx
_c4AEH:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	subq %rax,%rbx
	leaq 1(%rbx),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AEx:
	addq $-16,%r12
	leaq GHC.Int.$fIxInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AEt:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AEi, .-_c4AEi


==================== Asm code ====================
2018-03-16 15:59:27.009070059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AEi_info:
	.quad	_c4AEi
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.013223812 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_closure
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_closure, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_closure:
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_info


==================== Asm code ====================
2018-03-16 15:59:27.014547481 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_entry
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_entry, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_entry:
_c4AFi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AFC
_c4AFD:
	leaq block_c4AFf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AFf
_c4AFg:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AFC:
	leaq GHC.Int.$fIxInt64_$cunsafeRangeSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cunsafeRangeSize_entry, .-GHC.Int.$fIxInt64_$cunsafeRangeSize_entry


==================== Asm code ====================
2018-03-16 15:59:27.015234001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cunsafeRangeSize_info
.type GHC.Int.$fIxInt64_$cunsafeRangeSize_info, @object
GHC.Int.$fIxInt64_$cunsafeRangeSize_info:
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:27.015920919 UTC

.section .text
.align 8
_c4AFf:
_c4AFf:
	leaq block_c4AFl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AFl
_c4AFm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AFf, .-_c4AFf


==================== Asm code ====================
2018-03-16 15:59:27.016581078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AFf_info:
	.quad	_c4AFf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.017329679 UTC

.section .text
.align 8
_c4AFl:
_c4AFl:
	leaq block_c4AFq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AFq
_c4AFr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AFl, .-_c4AFl


==================== Asm code ====================
2018-03-16 15:59:27.017973254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AFl_info:
	.quad	_c4AFl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.018714378 UTC

.section .text
.align 8
_c4AFq:
_c4AFq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AFI
_c4AFH:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	leaq 1(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AFI:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AFq, .-_c4AFq


==================== Asm code ====================
2018-03-16 15:59:27.019384959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AFq_info:
	.quad	_c4AFq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.025663217 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cindex_closure
.type GHC.Int.$fIxInt64_$cindex_closure, @object
GHC.Int.$fIxInt64_$cindex_closure:
	.quad	GHC.Int.$fIxInt64_$cindex_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:27.026583177 UTC

.section .text
.align 8
.globl GHC.Int.$fIxInt64_$cindex_entry
.type GHC.Int.$fIxInt64_$cindex_entry, @object
GHC.Int.$fIxInt64_$cindex_entry:
_c4AGi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AGr
_c4AGs:
	leaq block_c4AGf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AGf
_c4AGg:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AGr:
	leaq GHC.Int.$fIxInt64_$cindex_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fIxInt64_$cindex_entry, .-GHC.Int.$fIxInt64_$cindex_entry


==================== Asm code ====================
2018-03-16 15:59:27.027280582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fIxInt64_$cindex_info
.type GHC.Int.$fIxInt64_$cindex_info, @object
GHC.Int.$fIxInt64_$cindex_info:
	.quad	GHC.Int.$fIxInt64_$cindex_entry
	.quad	0
	.quad	281479271677966
	.quad	8589934607
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:27.028003557 UTC

.section .text
.align 8
_c4AGf:
_c4AGf:
	leaq block_c4AGl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AGl
_c4AGm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AGf, .-_c4AGf


==================== Asm code ====================
2018-03-16 15:59:27.028601513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AGf_info:
	.quad	_c4AGf
	.quad	1
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:27.029351179 UTC

.section .text
.align 8
_c4AGl:
_c4AGl:
	leaq block_c4AGq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4AGq
_c4AGv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AGl, .-_c4AGl


==================== Asm code ====================
2018-03-16 15:59:27.029947698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AGl_info:
	.quad	_c4AGl
	.quad	2
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:27.030733141 UTC

.section .text
.align 8
_c4AGq:
_c4AGq:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _c4AGD
_c4AGH:
	leaq block_c4AGG_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AGG
_c4AGI:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AGD:
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AGq, .-_c4AGq


==================== Asm code ====================
2018-03-16 15:59:27.031396929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AGq_info:
	.quad	_c4AGq
	.quad	130
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:27.032237204 UTC

.section .text
.align 8
_c4AGG:
_c4AGG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AGO
_c4AGN:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jg _c4AGS
_c4AGZ:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AGS:
	addq $-16,%r12
	movq GHC.Arr.hopelessIndexError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c4AGO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4AGG, .-_c4AGG


==================== Asm code ====================
2018-03-16 15:59:27.032958429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AGG_info:
	.quad	_c4AGG
	.quad	194
	.quad	4294967326
	.quad	S4wm5_srt+1040


==================== Asm code ====================
2018-03-16 15:59:27.034896564 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fIxInt64_closure
.type GHC.Int.$fIxInt64_closure, @object
GHC.Int.$fIxInt64_closure:
	.quad	GHC.Arr.C:Ix_con_info
	.quad	GHC.Int.$fOrdInt64_closure+1
	.quad	GHC.Int.$fIxInt64_$crange_closure+1
	.quad	GHC.Int.$fIxInt64_$cindex_closure+2
	.quad	GHC.Int.$fIxInt64_$cunsafeIndex_closure+2
	.quad	GHC.Int.$fIxInt64_$cinRange_closure+2
	.quad	GHC.Int.$fIxInt64_$crangeSize_closure+1
	.quad	GHC.Int.$fIxInt64_$cunsafeRangeSize_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:27.039232612 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowsPrec_closure
.type GHC.Int.$fShowInt64_$cshowsPrec_closure, @object
GHC.Int.$fShowInt64_$cshowsPrec_closure:
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:59:27.040114254 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshowsPrec_entry
.type GHC.Int.$fShowInt64_$cshowsPrec_entry, @object
GHC.Int.$fShowInt64_$cshowsPrec_entry:
_c4AHH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AHS
_c4AHT:
	leaq block_c4AHE_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4AHE
_c4AHF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AHS:
	leaq GHC.Int.$fShowInt64_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt64_$cshowsPrec_entry, .-GHC.Int.$fShowInt64_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:27.040836585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowsPrec_info
.type GHC.Int.$fShowInt64_$cshowsPrec_info, @object
GHC.Int.$fShowInt64_$cshowsPrec_info:
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:59:27.041791363 UTC

.section .text
.align 8
_c4AHE:
_c4AHE:
	leaq block_c4AHK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4AHK
_c4AHL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4AHE, .-_c4AHE


==================== Asm code ====================
2018-03-16 15:59:27.042859415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AHE_info:
	.quad	_c4AHE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.043538243 UTC

.section .text
.align 8
_c4AHK:
_c4AHK:
	movq 16(%rbp),%rax
	leaq block_c4AHP_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4AHK, .-_c4AHK


==================== Asm code ====================
2018-03-16 15:59:27.044217818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AHK_info:
	.quad	_c4AHK
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.044960948 UTC

.section .text
.align 8
_c4AHP:
_c4AHP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4AHY
_c4AHX:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AHY:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4AHP, .-_c4AHP


==================== Asm code ====================
2018-03-16 15:59:27.045648631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AHP_info:
	.quad	_c4AHP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.049224875 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshow_closure
.type GHC.Int.$fShowInt64_$cshow_closure, @object
GHC.Int.$fShowInt64_$cshow_closure:
	.quad	GHC.Int.$fShowInt64_$cshow_info


==================== Asm code ====================
2018-03-16 15:59:27.050061439 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshow_entry
.type GHC.Int.$fShowInt64_$cshow_entry, @object
GHC.Int.$fShowInt64_$cshow_entry:
_c4AIt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AIz
_c4AIA:
	leaq block_c4AIq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4AIq
_c4AIr:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AIz:
	leaq GHC.Int.$fShowInt64_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt64_$cshow_entry, .-GHC.Int.$fShowInt64_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:27.050712212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshow_info
.type GHC.Int.$fShowInt64_$cshow_info, @object
GHC.Int.$fShowInt64_$cshow_info:
	.quad	GHC.Int.$fShowInt64_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:27.051437423 UTC

.section .text
.align 8
_c4AIq:
_c4AIq:
	leaq block_c4AIw_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4AIq, .-_c4AIq


==================== Asm code ====================
2018-03-16 15:59:27.052071621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AIq_info:
	.quad	_c4AIq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.052837473 UTC

.section .text
.align 8
_c4AIw:
_c4AIw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4AIE
_c4AID:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AIE:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4AIw, .-_c4AIw


==================== Asm code ====================
2018-03-16 15:59:27.053570719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AIw_info:
	.quad	_c4AIw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.057614455 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt3_closure
.type GHC.Int.$fShowInt3_closure, @object
GHC.Int.$fShowInt3_closure:
	.quad	GHC.Int.$fShowInt3_info


==================== Asm code ====================
2018-03-16 15:59:27.058516998 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt3_entry
.type GHC.Int.$fShowInt3_entry, @object
GHC.Int.$fShowInt3_entry:
_c4AJ4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4AJa
_c4AJb:
	leaq block_c4AJ1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4AJ1
_c4AJ2:
	movq (%rbx),%rax
	jmp *(%rax)
_c4AJa:
	leaq GHC.Int.$fShowInt3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.$fShowInt3_entry, .-GHC.Int.$fShowInt3_entry


==================== Asm code ====================
2018-03-16 15:59:27.059219151 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt3_info
.type GHC.Int.$fShowInt3_info, @object
GHC.Int.$fShowInt3_info:
	.quad	GHC.Int.$fShowInt3_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:27.059981296 UTC

.section .text
.align 8
_c4AJ1:
_c4AJ1:
	movq 8(%rbp),%rax
	leaq block_c4AJ7_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c4AJ1, .-_c4AJ1


==================== Asm code ====================
2018-03-16 15:59:27.060572718 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AJ1_info:
	.quad	_c4AJ1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.061413445 UTC

.section .text
.align 8
_c4AJ7:
_c4AJ7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c4AJf
_c4AJe:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4AJf:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c4AJ7, .-_c4AJ7


==================== Asm code ====================
2018-03-16 15:59:27.062106879 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4AJ7_info:
	.quad	_c4AJ7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.065062414 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowList_closure
.type GHC.Int.$fShowInt64_$cshowList_closure, @object
GHC.Int.$fShowInt64_$cshowList_closure:
	.quad	GHC.Int.$fShowInt64_$cshowList_info


==================== Asm code ====================
2018-03-16 15:59:27.065870202 UTC

.section .text
.align 8
.globl GHC.Int.$fShowInt64_$cshowList_entry
.type GHC.Int.$fShowInt64_$cshowList_entry, @object
GHC.Int.$fShowInt64_$cshowList_entry:
_c4AJB:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Int.$fShowInt3_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Int.$fShowInt64_$cshowList_entry, .-GHC.Int.$fShowInt64_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:27.066478397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.$fShowInt64_$cshowList_info
.type GHC.Int.$fShowInt64_$cshowList_info, @object
GHC.Int.$fShowInt64_$cshowList_info:
	.quad	GHC.Int.$fShowInt64_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:27.06834252 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$fShowInt64_closure
.type GHC.Int.$fShowInt64_closure, @object
GHC.Int.$fShowInt64_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Int.$fShowInt64_$cshowsPrec_closure+3
	.quad	GHC.Int.$fShowInt64_$cshow_closure+1
	.quad	GHC.Int.$fShowInt64_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.070675286 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftL64#_closure
.type GHC.Int.uncheckedIShiftL64#_closure, @object
GHC.Int.uncheckedIShiftL64#_closure:
	.quad	GHC.Int.uncheckedIShiftL64#_info


==================== Asm code ====================
2018-03-16 15:59:27.071434811 UTC

.section .text
.align 8
.globl GHC.Int.uncheckedIShiftL64#_entry
.type GHC.Int.uncheckedIShiftL64#_entry, @object
GHC.Int.uncheckedIShiftL64#_entry:
_c4AJO:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.uncheckedIShiftL64#_entry, .-GHC.Int.uncheckedIShiftL64#_entry


==================== Asm code ====================
2018-03-16 15:59:27.072022063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftL64#_info
.type GHC.Int.uncheckedIShiftL64#_info, @object
GHC.Int.uncheckedIShiftL64#_info:
	.quad	GHC.Int.uncheckedIShiftL64#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:27.074724345 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftRA64#_closure
.type GHC.Int.uncheckedIShiftRA64#_closure, @object
GHC.Int.uncheckedIShiftRA64#_closure:
	.quad	GHC.Int.uncheckedIShiftRA64#_info


==================== Asm code ====================
2018-03-16 15:59:27.075439099 UTC

.section .text
.align 8
.globl GHC.Int.uncheckedIShiftRA64#_entry
.type GHC.Int.uncheckedIShiftRA64#_entry, @object
GHC.Int.uncheckedIShiftRA64#_entry:
_c4AK2:
	movq %rsi,%rcx
	sarq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.uncheckedIShiftRA64#_entry, .-GHC.Int.uncheckedIShiftRA64#_entry


==================== Asm code ====================
2018-03-16 15:59:27.076046899 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.uncheckedIShiftRA64#_info
.type GHC.Int.uncheckedIShiftRA64#_info, @object
GHC.Int.uncheckedIShiftRA64#_info:
	.quad	GHC.Int.uncheckedIShiftRA64#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:59:27.077917291 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$trModule4_bytes
.type GHC.Int.$trModule4_bytes, @object
GHC.Int.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:27.079777372 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule3_closure
.type GHC.Int.$trModule3_closure, @object
GHC.Int.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:27.082056827 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$trModule2_bytes
.type GHC.Int.$trModule2_bytes, @object
GHC.Int.$trModule2_bytes:
	.asciz "GHC.Int"


==================== Asm code ====================
2018-03-16 15:59:27.08386871 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule1_closure
.type GHC.Int.$trModule1_closure, @object
GHC.Int.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:27.085672135 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$trModule_closure
.type GHC.Int.$trModule_closure, @object
GHC.Int.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Int.$trModule3_closure+1
	.quad	GHC.Int.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.08747517 UTC

.section .data
.align 8
.align 1
$krep_r4kPB_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.089138515 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt7_closure
.type GHC.Int.$tcInt7_closure, @object
GHC.Int.$tcInt7_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt9_bytes


==================== Asm code ====================
2018-03-16 15:59:27.091045104 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt8_closure
.type GHC.Int.$tcInt8_closure, @object
GHC.Int.$tcInt8_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt7_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1422706860619545536
	.quad	2126344328513082648
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.092810291 UTC

.section .data
.align 8
.align 1
$krep1_r4kPC_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt8_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.094636749 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#1_closure
.type GHC.Int.$tc'I8#1_closure, @object
GHC.Int.$tc'I8#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep1_r4kPC_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.096271505 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I8#3_bytes
.type GHC.Int.$tc'I8#3_bytes, @object
GHC.Int.$tc'I8#3_bytes:
	.asciz "'I8#"


==================== Asm code ====================
2018-03-16 15:59:27.098148536 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#2_closure
.type GHC.Int.$tc'I8#2_closure, @object
GHC.Int.$tc'I8#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I8#3_bytes


==================== Asm code ====================
2018-03-16 15:59:27.100452412 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I8#_closure
.type GHC.Int.$tc'I8#_closure, @object
GHC.Int.$tc'I8#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I8#2_closure+1
	.quad	GHC.Int.$tc'I8#1_closure+4
	.quad	5349338056284818619
	.quad	-5148706792580450210
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.10244796 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt1_closure
.type GHC.Int.$tcInt1_closure, @object
GHC.Int.$tcInt1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt2_bytes


==================== Asm code ====================
2018-03-16 15:59:27.104215569 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt16_closure
.type GHC.Int.$tcInt16_closure, @object
GHC.Int.$tcInt16_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-2117626482027928378
	.quad	-5083513270378941521
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.106093449 UTC

.section .data
.align 8
.align 1
$krep2_r4kPD_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt16_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.107890172 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#1_closure
.type GHC.Int.$tc'I16#1_closure, @object
GHC.Int.$tc'I16#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep2_r4kPD_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.10998947 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I16#3_bytes
.type GHC.Int.$tc'I16#3_bytes, @object
GHC.Int.$tc'I16#3_bytes:
	.asciz "'I16#"


==================== Asm code ====================
2018-03-16 15:59:27.111742364 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#2_closure
.type GHC.Int.$tc'I16#2_closure, @object
GHC.Int.$tc'I16#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I16#3_bytes


==================== Asm code ====================
2018-03-16 15:59:27.113720541 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I16#_closure
.type GHC.Int.$tc'I16#_closure, @object
GHC.Int.$tc'I16#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I16#2_closure+1
	.quad	GHC.Int.$tc'I16#1_closure+4
	.quad	1077432500071562197
	.quad	-4770492822361039015
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.115566104 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt3_closure
.type GHC.Int.$tcInt3_closure, @object
GHC.Int.$tcInt3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt4_bytes


==================== Asm code ====================
2018-03-16 15:59:27.118047985 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt32_closure
.type GHC.Int.$tcInt32_closure, @object
GHC.Int.$tcInt32_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt3_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	5115671124548181797
	.quad	6203735229629729265
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.119877295 UTC

.section .data
.align 8
.align 1
$krep3_r4kPE_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt32_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.121655981 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#1_closure
.type GHC.Int.$tc'I32#1_closure, @object
GHC.Int.$tc'I32#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep3_r4kPE_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.123365793 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I32#3_bytes
.type GHC.Int.$tc'I32#3_bytes, @object
GHC.Int.$tc'I32#3_bytes:
	.asciz "'I32#"


==================== Asm code ====================
2018-03-16 15:59:27.125103365 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#2_closure
.type GHC.Int.$tc'I32#2_closure, @object
GHC.Int.$tc'I32#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I32#3_bytes


==================== Asm code ====================
2018-03-16 15:59:27.127863365 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I32#_closure
.type GHC.Int.$tc'I32#_closure, @object
GHC.Int.$tc'I32#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I32#2_closure+1
	.quad	GHC.Int.$tc'I32#1_closure+4
	.quad	-4409126545255331954
	.quad	2752255350980319305
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.129677205 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt5_closure
.type GHC.Int.$tcInt5_closure, @object
GHC.Int.$tcInt5_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tcInt6_bytes


==================== Asm code ====================
2018-03-16 15:59:27.131619816 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tcInt64_closure
.type GHC.Int.$tcInt64_closure, @object
GHC.Int.$tcInt64_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tcInt5_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-3397400749365311557
	.quad	-4001423308330387898
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.133526488 UTC

.section .data
.align 8
.align 1
$krep4_r4kPF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt64_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.135818061 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#1_closure
.type GHC.Int.$tc'I64#1_closure, @object
GHC.Int.$tc'I64#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r4kPB_closure+1
	.quad	$krep4_r4kPF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.137683915 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Int.$tc'I64#3_bytes
.type GHC.Int.$tc'I64#3_bytes, @object
GHC.Int.$tc'I64#3_bytes:
	.asciz "'I64#"


==================== Asm code ====================
2018-03-16 15:59:27.139371897 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#2_closure
.type GHC.Int.$tc'I64#2_closure, @object
GHC.Int.$tc'I64#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Int.$tc'I64#3_bytes


==================== Asm code ====================
2018-03-16 15:59:27.14114012 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.$tc'I64#_closure
.type GHC.Int.$tc'I64#_closure, @object
GHC.Int.$tc'I64#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Int.$trModule_closure+1
	.quad	GHC.Int.$tc'I64#2_closure+1
	.quad	GHC.Int.$tc'I64#1_closure+4
	.quad	7755385358338959724
	.quad	8520529638322167079
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:27.143928301 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I8#_closure
.type GHC.Int.I8#_closure, @object
GHC.Int.I8#_closure:
	.quad	GHC.Int.I8#_info


==================== Asm code ====================
2018-03-16 15:59:27.144764699 UTC

.section .text
.align 8
GHC.Int.I8#_entry:
_c4AKO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AKS
_c4AKR:
	leaq GHC.Int.I8#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4AKS:
	movq $16,904(%r13)
	leaq GHC.Int.I8#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.I8#_entry, .-GHC.Int.I8#_entry


==================== Asm code ====================
2018-03-16 15:59:27.145488062 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I8#_info:
	.quad	GHC.Int.I8#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:27.147952606 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I16#_closure
.type GHC.Int.I16#_closure, @object
GHC.Int.I16#_closure:
	.quad	GHC.Int.I16#_info


==================== Asm code ====================
2018-03-16 15:59:27.14882987 UTC

.section .text
.align 8
GHC.Int.I16#_entry:
_c4AL4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4AL8
_c4AL7:
	leaq GHC.Int.I16#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4AL8:
	movq $16,904(%r13)
	leaq GHC.Int.I16#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.I16#_entry, .-GHC.Int.I16#_entry


==================== Asm code ====================
2018-03-16 15:59:27.149580127 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I16#_info:
	.quad	GHC.Int.I16#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:27.152250098 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I32#_closure
.type GHC.Int.I32#_closure, @object
GHC.Int.I32#_closure:
	.quad	GHC.Int.I32#_info


==================== Asm code ====================
2018-03-16 15:59:27.153147259 UTC

.section .text
.align 8
GHC.Int.I32#_entry:
_c4ALk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ALo
_c4ALn:
	leaq GHC.Int.I32#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ALo:
	movq $16,904(%r13)
	leaq GHC.Int.I32#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.I32#_entry, .-GHC.Int.I32#_entry


==================== Asm code ====================
2018-03-16 15:59:27.154337664 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I32#_info:
	.quad	GHC.Int.I32#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:27.157698179 UTC

.section .data
.align 8
.align 1
.globl GHC.Int.I64#_closure
.type GHC.Int.I64#_closure, @object
GHC.Int.I64#_closure:
	.quad	GHC.Int.I64#_info


==================== Asm code ====================
2018-03-16 15:59:27.158561489 UTC

.section .text
.align 8
GHC.Int.I64#_entry:
_c4ALA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ALE
_c4ALD:
	leaq GHC.Int.I64#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4ALE:
	movq $16,904(%r13)
	leaq GHC.Int.I64#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Int.I64#_entry, .-GHC.Int.I64#_entry


==================== Asm code ====================
2018-03-16 15:59:27.159219405 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Int.I64#_info:
	.quad	GHC.Int.I64#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:27.161220723 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4ALM_str:
	.asciz "base:GHC.Int.I8#"


==================== Asm code ====================
2018-03-16 15:59:27.161993229 UTC

.section .text
.align 8
.globl GHC.Int.I8#_con_entry
.type GHC.Int.I8#_con_entry, @object
GHC.Int.I8#_con_entry:
_c4ALL:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I8#_con_entry, .-GHC.Int.I8#_con_entry


==================== Asm code ====================
2018-03-16 15:59:27.1626225 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I8#_con_info
.type GHC.Int.I8#_con_info, @object
GHC.Int.I8#_con_info:
	.quad	GHC.Int.I8#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4ALM_str


==================== Asm code ====================
2018-03-16 15:59:27.164635606 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4ALT_str:
	.asciz "base:GHC.Int.I16#"


==================== Asm code ====================
2018-03-16 15:59:27.165408976 UTC

.section .text
.align 8
.globl GHC.Int.I16#_con_entry
.type GHC.Int.I16#_con_entry, @object
GHC.Int.I16#_con_entry:
_c4ALS:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I16#_con_entry, .-GHC.Int.I16#_con_entry


==================== Asm code ====================
2018-03-16 15:59:27.165987759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I16#_con_info
.type GHC.Int.I16#_con_info, @object
GHC.Int.I16#_con_info:
	.quad	GHC.Int.I16#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4ALT_str


==================== Asm code ====================
2018-03-16 15:59:27.168035941 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4AM0_str:
	.asciz "base:GHC.Int.I32#"


==================== Asm code ====================
2018-03-16 15:59:27.168710046 UTC

.section .text
.align 8
.globl GHC.Int.I32#_con_entry
.type GHC.Int.I32#_con_entry, @object
GHC.Int.I32#_con_entry:
_c4ALZ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I32#_con_entry, .-GHC.Int.I32#_con_entry


==================== Asm code ====================
2018-03-16 15:59:27.169349376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I32#_con_info
.type GHC.Int.I32#_con_info, @object
GHC.Int.I32#_con_info:
	.quad	GHC.Int.I32#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4AM0_str


==================== Asm code ====================
2018-03-16 15:59:27.171376977 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i4AM7_str:
	.asciz "base:GHC.Int.I64#"


==================== Asm code ====================
2018-03-16 15:59:27.172094655 UTC

.section .text
.align 8
.globl GHC.Int.I64#_con_entry
.type GHC.Int.I64#_con_entry, @object
GHC.Int.I64#_con_entry:
_c4AM6:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Int.I64#_con_entry, .-GHC.Int.I64#_con_entry


==================== Asm code ====================
2018-03-16 15:59:27.172734678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Int.I64#_con_info
.type GHC.Int.I64#_con_info, @object
GHC.Int.I64#_con_info:
	.quad	GHC.Int.I64#_con_entry
	.quad	4294967296
	.quad	3
	.quad	i4AM7_str


==================== Asm code ====================
2018-03-16 15:59:27.177216604 UTC

.section .data.rel.ro
.align 8
.align 1
S4wm5_srt:
	.quad	GHC.Enum.predError_closure
	.quad	GHC.Enum.succError_closure
	.quad	GHC.Int.$fEnumInt8_$cpred_closure
	.quad	GHC.Int.$fEnumInt7_closure
	.quad	GHC.Int.$fEnumInt8_$csucc_closure
	.quad	GHC.Int.$fEnumInt9_closure
	.quad	GHC.Enum.$wtoEnumError_closure
	.quad	lvl_r4kPr_closure
	.quad	GHC.Int.$wlvl2_closure
	.quad	GHC.Int.$fEnumInt8_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum2_closure
	.quad	GHC.Int.$w$cenumFromThenTo3_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromThenTo_closure
	.quad	GHC.Int.$w$cenumFromTo3_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure
	.quad	GHC.Int.$wgo3_closure
	.quad	GHC.Int.$fEnumInt8_go_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFrom_closure
	.quad	GHC.Int.$fEnumInt8_closure
	.quad	GHC.Int.$fEnumInt16_$cpred_closure
	.quad	GHC.Int.$fEnumInt1_closure
	.quad	GHC.Int.$fEnumInt16_$csucc_closure
	.quad	GHC.Int.$fEnumInt2_closure
	.quad	lvl2_r4kPt_closure
	.quad	GHC.Int.$wlvl_closure
	.quad	GHC.Int.$fEnumInt16_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum_closure
	.quad	GHC.Int.$w$cenumFromThenTo_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromThenTo_closure
	.quad	GHC.Int.$w$cenumFromTo_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure
	.quad	GHC.Int.$wgo_closure
	.quad	GHC.Int.$fEnumInt16_go_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFrom_closure
	.quad	GHC.Int.$fEnumInt16_closure
	.quad	GHC.Enum.predError_closure
	.quad	GHC.Enum.succError_closure
	.quad	GHC.Int.$fEnumInt32_$cpred_closure
	.quad	GHC.Int.$fEnumInt3_closure
	.quad	GHC.Int.$fEnumInt32_$csucc_closure
	.quad	GHC.Int.$fEnumInt4_closure
	.quad	lvl4_r4kPv_closure
	.quad	GHC.Enum.$wtoEnumError_closure
	.quad	GHC.Int.$wlvl1_closure
	.quad	GHC.Int.$fEnumInt32_$ctoEnum_closure
	.quad	GHC.Int.$w$ctoEnum1_closure
	.quad	GHC.Int.$w$cenumFromTo1_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure
	.quad	GHC.Int.$wgo1_closure
	.quad	GHC.Int.$fEnumInt32_go_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFrom_closure
	.quad	GHC.Int.$w$cenumFromThenTo1_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromThenTo_closure
	.quad	GHC.Int.$fEnumInt32_closure
	.quad	GHC.Int.$fEnumInt64_$cpred_closure
	.quad	GHC.Int.$fEnumInt5_closure
	.quad	GHC.Int.$fEnumInt64_$csucc_closure
	.quad	GHC.Int.$fEnumInt6_closure
	.quad	GHC.Int.$fEnumInt64_closure
	.quad	GHC.Read.$fReadInt2_closure
	.quad	GHC.Read.$fReadInt_$sreadNumber_closure
	.quad	GHC.Int.$fReadInt8_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt13_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.Int.$fReadInt12_closure
	.quad	GHC.Int.$fReadInt11_closure
	.quad	GHC.Int.$fReadInt8_$creadList_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Int.$fIntegralInt8_$cquot_closure
	.quad	GHC.Int.$fIntegralInt8_$crem_closure
	.quad	GHC.Int.$w$cdiv3_closure
	.quad	GHC.Int.$fIntegralInt8_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt8_$cmod_closure
	.quad	GHC.Int.$fIntegralInt8_$cquotRem_closure
	.quad	lvl6_r4kPx_closure
	.quad	GHC.Int.$w$cdivMod3_closure
	.quad	GHC.Int.$fIntegralInt8_$cdivMod_closure
	.quad	sat_s4vTi_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Int.$fRealInt1_closure
	.quad	GHC.Int.$fRealInt8_$ctoRational_closure
	.quad	GHC.Int.$fIxInt8_$crange_closure
	.quad	GHC.Int.$fEnumInt8_$cenumFromTo_closure
	.quad	GHC.Arr.hopelessIndexError_closure
	.quad	GHC.Int.$fIxInt8_$cindex_closure
	.quad	GHC.Int.$fReadInt16_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt3_closure
	.quad	GHC.Int.$fReadInt2_closure
	.quad	GHC.Int.$fReadInt1_closure
	.quad	GHC.Int.$fReadInt16_$creadList_closure
	.quad	GHC.Int.$fIntegralInt16_$cquot_closure
	.quad	GHC.Int.$fIntegralInt16_$crem_closure
	.quad	GHC.Int.$w$cdiv_closure
	.quad	GHC.Int.$fIntegralInt16_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt16_$cmod_closure
	.quad	GHC.Int.$fIntegralInt16_$cquotRem_closure
	.quad	lvl7_r4kPy_closure
	.quad	GHC.Int.$w$cdivMod_closure
	.quad	GHC.Int.$fIntegralInt16_$cdivMod_closure
	.quad	GHC.Int.$fRealInt16_$ctoRational_closure
	.quad	GHC.Int.$fIxInt16_$crange_closure
	.quad	GHC.Int.$fEnumInt16_$cenumFromTo_closure
	.quad	GHC.Int.$fIxInt16_$cindex_closure
	.quad	GHC.Int.$fReadInt32_$creadsPrec_closure
	.quad	GHC.Read.$fReadInt_$sreadNumber_closure
	.quad	GHC.Read.$fReadInt2_closure
	.quad	GHC.Int.$fReadInt6_closure
	.quad	GHC.Int.$fReadInt5_closure
	.quad	GHC.Int.$fReadInt4_closure
	.quad	GHC.Int.$fReadInt32_$creadList_closure
	.quad	GHC.Int.$fIntegralInt32_$cquot_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Int.$fIntegralInt32_$crem_closure
	.quad	GHC.Int.$w$cdiv1_closure
	.quad	GHC.Int.$fIntegralInt32_$cdiv_closure
	.quad	GHC.Int.$fIntegralInt32_$cmod_closure
	.quad	GHC.Int.$fIntegralInt32_$cquotRem_closure
	.quad	lvl8_r4kPz_closure
	.quad	GHC.Int.$w$cdivMod1_closure
	.quad	GHC.Int.$fIntegralInt32_$cdivMod_closure
	.quad	GHC.Int.$fRealInt32_$ctoRational_closure
	.quad	GHC.Int.$fRealInt1_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Int.$fIxInt32_$crange_closure
	.quad	GHC.Int.$fEnumInt32_$cenumFromTo_closure
	.quad	GHC.Int.$fIxInt32_$cindex_closure
	.quad	GHC.Arr.hopelessIndexError_closure
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure
	.quad	GHC.Int.$fReadInt10_closure
	.quad	GHC.Int.$fReadInt9_closure
	.quad	GHC.Int.$fReadInt7_closure
	.quad	GHC.Int.$fReadInt64_$creadList_closure
	.quad	GHC.Int.$fIntegralInt64_$cquot_closure
	.quad	GHC.Int.$fIntegralInt64_$crem_closure
	.quad	GHC.Int.$fIntegralInt64_$cdiv_closure
	.quad	GHC.Int.$w$cdiv2_closure
	.quad	GHC.Int.$fIntegralInt64_$cmod_closure
	.quad	GHC.Int.$fIntegralInt64_$cquotRem_closure
	.quad	lvl9_r4kPA_closure
	.quad	GHC.Int.$w$cdivMod2_closure
	.quad	GHC.Int.$fIntegralInt64_$cdivMod_closure
	.quad	GHC.Int.$fRealInt64_$ctoRational_closure
	.quad	GHC.Int.$fIxInt64_$cindex_closure

