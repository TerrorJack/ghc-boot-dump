
==================== Asm code ====================
2018-03-16 15:55:35.717297361 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rQ8I_bytes:
	.asciz "Prelude.chr: bad argument: "


==================== Asm code ====================
2018-03-16 15:55:35.722347617 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$wlvl_closure
.type GHC.Char.$wlvl_closure, @object
GHC.Char.$wlvl_closure:
	.quad	GHC.Char.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.723143031 UTC

.section .text
.align 8
sat_sQ8O_entry:
_cQbu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cQbv
_cQbw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cQbr_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_cQbv:
	jmp *-16(%r13)
	.size sat_sQ8O_entry, .-sat_sQ8O_entry


==================== Asm code ====================
2018-03-16 15:55:35.723805495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sQ8O_info:
	.quad	sat_sQ8O_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:35.724510598 UTC

.section .text
.align 8
_cQbr:
_cQbr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cQbz
_cQby:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cQbz:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cQbr, .-_cQbr


==================== Asm code ====================
2018-03-16 15:55:35.725155952 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQbr_info:
	.quad	_cQbr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:35.725979749 UTC

.section .text
.align 8
.globl GHC.Char.$wlvl_entry
.type GHC.Char.$wlvl_entry, @object
GHC.Char.$wlvl_entry:
_cQbC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQbD
_cQbE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cQbG
_cQbF:
	movq $sat_sQ8O_info,-16(%r12)
	movq %r14,(%r12)
	movq $block_cQbA_info,-8(%rbp)
	leaq -16(%r12),%rsi
	movl $lvl_rQ8I_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cQbG:
	movq $24,904(%r13)
_cQbD:
	movl $GHC.Char.$wlvl_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Char.$wlvl_entry, .-GHC.Char.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:55:35.726733545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.$wlvl_info
.type GHC.Char.$wlvl_info, @object
GHC.Char.$wlvl_info:
	.quad	GHC.Char.$wlvl_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	SQ9q_srt


==================== Asm code ====================
2018-03-16 15:55:35.727380915 UTC

.section .text
.align 8
_cQbA:
_cQbA:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cQbA, .-_cQbA


==================== Asm code ====================
2018-03-16 15:55:35.727915064 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQbA_info:
	.quad	_cQbA
	.quad	0
	.quad	4294967326
	.quad	SQ9q_srt


==================== Asm code ====================
2018-03-16 15:55:35.731505912 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.chr1_closure
.type GHC.Char.chr1_closure, @object
GHC.Char.chr1_closure:
	.quad	GHC.Char.chr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.732290576 UTC

.section .text
.align 8
.globl GHC.Char.chr1_entry
.type GHC.Char.chr1_entry, @object
GHC.Char.chr1_entry:
_cQc7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQc8
_cQc9:
	movq $block_cQc4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cQc4
_cQc5:
	movq (%rbx),%rax
	jmp *(%rax)
_cQc8:
	movl $GHC.Char.chr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Char.chr1_entry, .-GHC.Char.chr1_entry


==================== Asm code ====================
2018-03-16 15:55:35.732955521 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.chr1_info
.type GHC.Char.chr1_info, @object
GHC.Char.chr1_info:
	.quad	GHC.Char.chr1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SQ9q_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.733860103 UTC

.section .text
.align 8
_cQc4:
_cQc4:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Char.$wlvl_entry
	.size _cQc4, .-_cQc4


==================== Asm code ====================
2018-03-16 15:55:35.734490688 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQc4_info:
	.quad	_cQc4
	.quad	0
	.quad	4294967326
	.quad	SQ9q_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.738064181 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.chr_closure
.type GHC.Char.chr_closure, @object
GHC.Char.chr_closure:
	.quad	GHC.Char.chr_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.738845854 UTC

.section .text
.align 8
.globl GHC.Char.chr_entry
.type GHC.Char.chr_entry, @object
GHC.Char.chr_entry:
_cQcu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQcv
_cQcw:
	movq $block_cQcr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cQcr
_cQcs:
	movq (%rbx),%rax
	jmp *(%rax)
_cQcv:
	movl $GHC.Char.chr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Char.chr_entry, .-GHC.Char.chr_entry


==================== Asm code ====================
2018-03-16 15:55:35.739512661 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.chr_info
.type GHC.Char.chr_info, @object
GHC.Char.chr_info:
	.quad	GHC.Char.chr_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	SQ9q_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.740335717 UTC

.section .text
.align 8
_cQcr:
_cQcr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cQcB
_cQcA:
	movq 7(%rbx),%rax
	cmpq $1114111,%rax
	ja _cQcI
_cQcP:
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cQcI:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Char.$wlvl_entry
_cQcB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cQcr, .-_cQcr


==================== Asm code ====================
2018-03-16 15:55:35.74100423 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQcr_info:
	.quad	_cQcr
	.quad	0
	.quad	4294967326
	.quad	SQ9q_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.742739796 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Char.$trModule4_bytes
.type GHC.Char.$trModule4_bytes, @object
GHC.Char.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:35.744389433 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule3_closure
.type GHC.Char.$trModule3_closure, @object
GHC.Char.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Char.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:35.74610413 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Char.$trModule2_bytes
.type GHC.Char.$trModule2_bytes, @object
GHC.Char.$trModule2_bytes:
	.asciz "GHC.Char"


==================== Asm code ====================
2018-03-16 15:55:35.74774112 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule1_closure
.type GHC.Char.$trModule1_closure, @object
GHC.Char.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Char.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:35.750191538 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule_closure
.type GHC.Char.$trModule_closure, @object
GHC.Char.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Char.$trModule3_closure+1
	.quad	GHC.Char.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:35.751917011 UTC

.section .data.rel.ro
.align 8
.align 1
SQ9q_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Char.$wlvl_closure
	.quad	GHC.Char.chr1_closure
	.quad	GHC.Char.chr_closure


==================== Asm code ====================
2018-03-16 15:55:35.805990712 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rQ8I_bytes:
	.asciz "Prelude.chr: bad argument: "


==================== Asm code ====================
2018-03-16 15:55:35.810646206 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$wlvl_closure
.type GHC.Char.$wlvl_closure, @object
GHC.Char.$wlvl_closure:
	.quad	GHC.Char.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.811581648 UTC

.section .text
.align 8
sat_sQdb_entry:
_cQdy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cQdz
_cQdA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cQdv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_cQdz:
	jmp *-16(%r13)
	.size sat_sQdb_entry, .-sat_sQdb_entry


==================== Asm code ====================
2018-03-16 15:55:35.812233998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sQdb_info:
	.quad	sat_sQdb_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:35.812985122 UTC

.section .text
.align 8
_cQdv:
_cQdv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cQdD
_cQdC:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cQdD:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cQdv, .-_cQdv


==================== Asm code ====================
2018-03-16 15:55:35.8137142 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQdv_info:
	.quad	_cQdv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:35.814505986 UTC

.section .text
.align 8
.globl GHC.Char.$wlvl_entry
.type GHC.Char.$wlvl_entry, @object
GHC.Char.$wlvl_entry:
_cQdG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQdH
_cQdI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cQdK
_cQdJ:
	leaq sat_sQdb_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq block_cQdE_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rsi
	leaq lvl_rQ8I_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cQdK:
	movq $24,904(%r13)
_cQdH:
	leaq GHC.Char.$wlvl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Char.$wlvl_entry, .-GHC.Char.$wlvl_entry


==================== Asm code ====================
2018-03-16 15:55:35.815217087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.$wlvl_info
.type GHC.Char.$wlvl_info, @object
GHC.Char.$wlvl_info:
	.quad	GHC.Char.$wlvl_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	SQdO_srt


==================== Asm code ====================
2018-03-16 15:55:35.815822186 UTC

.section .text
.align 8
_cQdE:
_cQdE:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cQdE, .-_cQdE


==================== Asm code ====================
2018-03-16 15:55:35.816410503 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQdE_info:
	.quad	_cQdE
	.quad	0
	.quad	4294967326
	.quad	SQdO_srt


==================== Asm code ====================
2018-03-16 15:55:35.819363207 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.chr1_closure
.type GHC.Char.chr1_closure, @object
GHC.Char.chr1_closure:
	.quad	GHC.Char.chr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.820141666 UTC

.section .text
.align 8
.globl GHC.Char.chr1_entry
.type GHC.Char.chr1_entry, @object
GHC.Char.chr1_entry:
_cQei:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQej
_cQek:
	leaq block_cQef_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cQef
_cQeg:
	movq (%rbx),%rax
	jmp *(%rax)
_cQej:
	leaq GHC.Char.chr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Char.chr1_entry, .-GHC.Char.chr1_entry


==================== Asm code ====================
2018-03-16 15:55:35.820823729 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.chr1_info
.type GHC.Char.chr1_info, @object
GHC.Char.chr1_info:
	.quad	GHC.Char.chr1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SQdO_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.821637964 UTC

.section .text
.align 8
_cQef:
_cQef:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Char.$wlvl_entry
	.size _cQef, .-_cQef


==================== Asm code ====================
2018-03-16 15:55:35.822234689 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQef_info:
	.quad	_cQef
	.quad	0
	.quad	4294967326
	.quad	SQdO_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.82592578 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.chr_closure
.type GHC.Char.chr_closure, @object
GHC.Char.chr_closure:
	.quad	GHC.Char.chr_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:35.8267779 UTC

.section .text
.align 8
.globl GHC.Char.chr_entry
.type GHC.Char.chr_entry, @object
GHC.Char.chr_entry:
_cQeG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cQeH
_cQeI:
	leaq block_cQeD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cQeD
_cQeE:
	movq (%rbx),%rax
	jmp *(%rax)
_cQeH:
	leaq GHC.Char.chr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Char.chr_entry, .-GHC.Char.chr_entry


==================== Asm code ====================
2018-03-16 15:55:35.827434611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Char.chr_info
.type GHC.Char.chr_info, @object
GHC.Char.chr_info:
	.quad	GHC.Char.chr_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	SQdO_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.828228809 UTC

.section .text
.align 8
_cQeD:
_cQeD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cQeN
_cQeM:
	movq 7(%rbx),%rax
	cmpq $1114111,%rax
	ja _cQeU
_cQf1:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cQeU:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Char.$wlvl_entry
_cQeN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cQeD, .-_cQeD


==================== Asm code ====================
2018-03-16 15:55:35.828979138 UTC

.section .data.rel.ro
.align 8
.align 1
block_cQeD_info:
	.quad	_cQeD
	.quad	0
	.quad	4294967326
	.quad	SQdO_srt+8


==================== Asm code ====================
2018-03-16 15:55:35.830871882 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Char.$trModule4_bytes
.type GHC.Char.$trModule4_bytes, @object
GHC.Char.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:35.833324814 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule3_closure
.type GHC.Char.$trModule3_closure, @object
GHC.Char.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Char.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:35.835154616 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Char.$trModule2_bytes
.type GHC.Char.$trModule2_bytes, @object
GHC.Char.$trModule2_bytes:
	.asciz "GHC.Char"


==================== Asm code ====================
2018-03-16 15:55:35.836805019 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule1_closure
.type GHC.Char.$trModule1_closure, @object
GHC.Char.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Char.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:35.838725142 UTC

.section .data
.align 8
.align 1
.globl GHC.Char.$trModule_closure
.type GHC.Char.$trModule_closure, @object
GHC.Char.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Char.$trModule3_closure+1
	.quad	GHC.Char.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:35.840513328 UTC

.section .data.rel.ro
.align 8
.align 1
SQdO_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Char.$wlvl_closure
	.quad	GHC.Char.chr1_closure
	.quad	GHC.Char.chr_closure

