
==================== Tidy Core ====================
2018-03-16 15:57:01.337812882 UTC

Result size of Tidy Core
  = {terms: 2,282, types: 1,080, coercions: 12, joins: 0/21}

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fBoundedGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Bounded GeneralCategory
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Enum.C:Bounded TYPE: GeneralCategory
                          GHC.Unicode.UppercaseLetter
                          GHC.Unicode.NotAssigned]
GHC.Unicode.$fBoundedGeneralCategory
  = GHC.Enum.C:Bounded
      @ GeneralCategory
      GHC.Unicode.UppercaseLetter
      GHC.Unicode.NotAssigned

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r2j62 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r2j62 = "UppercaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_r2j63 :: [Char]
[GblId]
lvl1_r2j63 = unpackCString# lvl_r2j62

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl2_r2j64 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl2_r2j64 = "LowercaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r2j65 :: [Char]
[GblId]
lvl3_r2j65 = unpackCString# lvl2_r2j64

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r2j66 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_r2j66 = "TitlecaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl5_r2j67 :: [Char]
[GblId]
lvl5_r2j67 = unpackCString# lvl4_r2j66

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl6_r2j68 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl6_r2j68 = "ModifierLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r2j69 :: [Char]
[GblId]
lvl7_r2j69 = unpackCString# lvl6_r2j68

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl8_r2j6a :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl8_r2j6a = "OtherLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl9_r2j6b :: [Char]
[GblId]
lvl9_r2j6b = unpackCString# lvl8_r2j6a

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl10_r2j6c :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl10_r2j6c = "NonSpacingMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl11_r2j6d :: [Char]
[GblId]
lvl11_r2j6d = unpackCString# lvl10_r2j6c

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl12_r2j6e :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl12_r2j6e = "SpacingCombiningMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl13_r2j6f :: [Char]
[GblId]
lvl13_r2j6f = unpackCString# lvl12_r2j6e

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl14_r2j6g :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl14_r2j6g = "EnclosingMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl15_r2j6h :: [Char]
[GblId]
lvl15_r2j6h = unpackCString# lvl14_r2j6g

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl16_r2j6i :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl16_r2j6i = "DecimalNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl17_r2j6j :: [Char]
[GblId]
lvl17_r2j6j = unpackCString# lvl16_r2j6i

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl18_r2j6k :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl18_r2j6k = "LetterNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl19_r2j6l :: [Char]
[GblId]
lvl19_r2j6l = unpackCString# lvl18_r2j6k

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl20_r2j6m :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl20_r2j6m = "OtherNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl21_r2j6n :: [Char]
[GblId]
lvl21_r2j6n = unpackCString# lvl20_r2j6m

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl22_r2j6o :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl22_r2j6o = "ConnectorPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl23_r2j6p :: [Char]
[GblId]
lvl23_r2j6p = unpackCString# lvl22_r2j6o

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl24_r2j6q :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl24_r2j6q = "DashPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl25_r2j6r :: [Char]
[GblId]
lvl25_r2j6r = unpackCString# lvl24_r2j6q

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl26_r2j6s :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl26_r2j6s = "OpenPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl27_r2j6t :: [Char]
[GblId]
lvl27_r2j6t = unpackCString# lvl26_r2j6s

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl28_r2j6u :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl28_r2j6u = "ClosePunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl29_r2j6v :: [Char]
[GblId]
lvl29_r2j6v = unpackCString# lvl28_r2j6u

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl30_r2j6w :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl30_r2j6w = "InitialQuote"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl31_r2j6x :: [Char]
[GblId]
lvl31_r2j6x = unpackCString# lvl30_r2j6w

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl32_r2j6y :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl32_r2j6y = "FinalQuote"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl33_r2j6z :: [Char]
[GblId]
lvl33_r2j6z = unpackCString# lvl32_r2j6y

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl34_r2j6A :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl34_r2j6A = "OtherPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl35_r2j6B :: [Char]
[GblId]
lvl35_r2j6B = unpackCString# lvl34_r2j6A

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl36_r2j6C :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl36_r2j6C = "MathSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl37_r2j6D :: [Char]
[GblId]
lvl37_r2j6D = unpackCString# lvl36_r2j6C

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl38_r2j6E :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl38_r2j6E = "CurrencySymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl39_r2j6F :: [Char]
[GblId]
lvl39_r2j6F = unpackCString# lvl38_r2j6E

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl40_r2j6G :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl40_r2j6G = "ModifierSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl41_r2j6H :: [Char]
[GblId]
lvl41_r2j6H = unpackCString# lvl40_r2j6G

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl42_r2j6I :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl42_r2j6I = "OtherSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl43_r2j6J :: [Char]
[GblId]
lvl43_r2j6J = unpackCString# lvl42_r2j6I

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl44_r2j6K :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl44_r2j6K = "Space"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl45_r2j6L :: [Char]
[GblId]
lvl45_r2j6L = unpackCString# lvl44_r2j6K

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl46_r2j6M :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl46_r2j6M = "LineSeparator"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl47_r2j6N :: [Char]
[GblId]
lvl47_r2j6N = unpackCString# lvl46_r2j6M

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl48_r2j6O :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl48_r2j6O = "ParagraphSeparator"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl49_r2j6P :: [Char]
[GblId]
lvl49_r2j6P = unpackCString# lvl48_r2j6O

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl50_r2j6Q :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl50_r2j6Q = "Control"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl51_r2j6R :: [Char]
[GblId]
lvl51_r2j6R = unpackCString# lvl50_r2j6Q

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl52_r2j6S :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl52_r2j6S = "Format"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl53_r2j6T :: [Char]
[GblId]
lvl53_r2j6T = unpackCString# lvl52_r2j6S

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl54_r2j6U :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl54_r2j6U = "Surrogate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl55_r2j6V :: [Char]
[GblId]
lvl55_r2j6V = unpackCString# lvl54_r2j6U

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl56_r2j6W :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl56_r2j6W = "PrivateUse"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl57_r2j6X :: [Char]
[GblId]
lvl57_r2j6X = unpackCString# lvl56_r2j6W

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl58_r2j6Y :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl58_r2j6Y = "NotAssigned"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl59_r2j6Z :: [Char]
[GblId]
lvl59_r2j6Z = unpackCString# lvl58_r2j6Y

-- RHS size: {terms: 124, types: 33, coercions: 0, joins: 0/0}
GHC.Unicode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GeneralCategory -> String -> String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []]
GHC.Unicode.$w$cshowsPrec
  = \ (w_s2iCG :: GeneralCategory) (w1_s2iCH :: String) ->
      case w_s2iCG of {
        UppercaseLetter -> ++ @ Char lvl1_r2j63 w1_s2iCH;
        LowercaseLetter -> ++ @ Char lvl3_r2j65 w1_s2iCH;
        TitlecaseLetter -> ++ @ Char lvl5_r2j67 w1_s2iCH;
        ModifierLetter -> ++ @ Char lvl7_r2j69 w1_s2iCH;
        OtherLetter -> ++ @ Char lvl9_r2j6b w1_s2iCH;
        NonSpacingMark -> ++ @ Char lvl11_r2j6d w1_s2iCH;
        SpacingCombiningMark -> ++ @ Char lvl13_r2j6f w1_s2iCH;
        EnclosingMark -> ++ @ Char lvl15_r2j6h w1_s2iCH;
        DecimalNumber -> ++ @ Char lvl17_r2j6j w1_s2iCH;
        LetterNumber -> ++ @ Char lvl19_r2j6l w1_s2iCH;
        OtherNumber -> ++ @ Char lvl21_r2j6n w1_s2iCH;
        ConnectorPunctuation -> ++ @ Char lvl23_r2j6p w1_s2iCH;
        DashPunctuation -> ++ @ Char lvl25_r2j6r w1_s2iCH;
        OpenPunctuation -> ++ @ Char lvl27_r2j6t w1_s2iCH;
        ClosePunctuation -> ++ @ Char lvl29_r2j6v w1_s2iCH;
        InitialQuote -> ++ @ Char lvl31_r2j6x w1_s2iCH;
        FinalQuote -> ++ @ Char lvl33_r2j6z w1_s2iCH;
        OtherPunctuation -> ++ @ Char lvl35_r2j6B w1_s2iCH;
        MathSymbol -> ++ @ Char lvl37_r2j6D w1_s2iCH;
        CurrencySymbol -> ++ @ Char lvl39_r2j6F w1_s2iCH;
        ModifierSymbol -> ++ @ Char lvl41_r2j6H w1_s2iCH;
        OtherSymbol -> ++ @ Char lvl43_r2j6J w1_s2iCH;
        Space -> ++ @ Char lvl45_r2j6L w1_s2iCH;
        LineSeparator -> ++ @ Char lvl47_r2j6N w1_s2iCH;
        ParagraphSeparator -> ++ @ Char lvl49_r2j6P w1_s2iCH;
        Control -> ++ @ Char lvl51_r2j6R w1_s2iCH;
        Format -> ++ @ Char lvl53_r2j6T w1_s2iCH;
        Surrogate -> ++ @ Char lvl55_r2j6V w1_s2iCH;
        PrivateUse -> ++ @ Char lvl57_r2j6X w1_s2iCH;
        NotAssigned -> ++ @ Char lvl59_r2j6Z w1_s2iCH
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.Unicode.$fShowGeneralCategory_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: Int -> GeneralCategory -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<L,A><S,1*U><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (w1_s2iCG [Occ=Once] :: GeneralCategory)
                 (w2_s2iCH [Occ=Once] :: String) ->
                 GHC.Unicode.$w$cshowsPrec w1_s2iCG w2_s2iCH}]
GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
  = \ _ [Occ=Dead]
      (w1_s2iCG :: GeneralCategory)
      (w2_s2iCH :: String) ->
      GHC.Unicode.$w$cshowsPrec w1_s2iCG w2_s2iCH

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$fShowGeneralCategory1 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$fShowGeneralCategory1 = GHC.Types.I# 0#

-- RHS size: {terms: 4, types: 2, coercions: 0, joins: 0/0}
GHC.Unicode.$fShowGeneralCategory_$cshow
  :: GeneralCategory -> String
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_i1Jj2 [Occ=Once] :: GeneralCategory) ->
                 GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                   GHC.Unicode.$fShowGeneralCategory1 x_i1Jj2 (GHC.Types.[] @ Char)}]
GHC.Unicode.$fShowGeneralCategory_$cshow
  = \ (x_i1Jj2 :: GeneralCategory) ->
      GHC.Unicode.$w$cshowsPrec x_i1Jj2 (GHC.Types.[] @ Char)

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
GHC.Unicode.$fShowGeneralCategory_$cshowList
  :: [GeneralCategory] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i1Mix [Occ=Once] :: [GeneralCategory])
                 (s_i1Miy [Occ=Once] :: String) ->
                 GHC.Show.showList__
                   @ GeneralCategory GHC.Unicode.$w$cshowsPrec ls_i1Mix s_i1Miy}]
GHC.Unicode.$fShowGeneralCategory_$cshowList
  = \ (ls_i1Mix :: [GeneralCategory]) (s_i1Miy :: String) ->
      GHC.Show.showList__
        @ GeneralCategory GHC.Unicode.$w$cshowsPrec ls_i1Mix s_i1Miy

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fShowGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Show GeneralCategory
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: GeneralCategory
                       GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
                       GHC.Unicode.$fShowGeneralCategory_$cshow
                       GHC.Unicode.$fShowGeneralCategory_$cshowList]
GHC.Unicode.$fShowGeneralCategory
  = GHC.Show.C:Show
      @ GeneralCategory
      GHC.Unicode.$fShowGeneralCategory_$cshowsPrec
      GHC.Unicode.$fShowGeneralCategory_$cshow
      GHC.Unicode.$fShowGeneralCategory_$cshowList

-- RHS size: {terms: 14, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fEqGeneralCategory_$c==
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAt [Occ=Once] :: GeneralCategory)
                 (b_a2hAu [Occ=Once] :: GeneralCategory) ->
                 case a_a2hAt of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAv
                 { __DEFAULT ->
                 case b_a2hAu of x2_X2hT2 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT2 of b#_a2hAw
                 { __DEFAULT ->
                 tagToEnum# @ Bool (==# a#_a2hAv b#_a2hAw)
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fEqGeneralCategory_$c==
  = \ (a_a2hAt :: GeneralCategory) (b_a2hAu :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAt of a#_a2hAv
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hAu of b#_a2hAw
      { __DEFAULT ->
      tagToEnum# @ Bool (==# a#_a2hAv b#_a2hAw)
      }
      }

-- RHS size: {terms: 18, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fEqGeneralCategory_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a22b [Occ=Once] :: GeneralCategory)
                 (y_a22c [Occ=Once] :: GeneralCategory) ->
                 case x_a22b of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAv
                 { __DEFAULT ->
                 case y_a22c of x2_X2hT2 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT2 of b#_a2hAw
                 { __DEFAULT ->
                 case ==# a#_a2hAv b#_a2hAw of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fEqGeneralCategory_$c/=
  = \ (eta_B2 :: GeneralCategory) (eta1_B1 :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory eta_B2 of a#_a2hAv { __DEFAULT ->
      case dataToTag# @ GeneralCategory eta1_B1 of b#_a2hAw
      { __DEFAULT ->
      case ==# a#_a2hAv b#_a2hAw of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fEqGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq GeneralCategory
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: GeneralCategory
                        GHC.Unicode.$fEqGeneralCategory_$c==
                        GHC.Unicode.$fEqGeneralCategory_$c/=]
GHC.Unicode.$fEqGeneralCategory
  = GHC.Classes.C:Eq
      @ GeneralCategory
      GHC.Unicode.$fEqGeneralCategory_$c==
      GHC.Unicode.$fEqGeneralCategory_$c/=

-- RHS size: {terms: 25, types: 8, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$ccompare
  :: GeneralCategory -> GeneralCategory -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAx [Occ=Once] :: GeneralCategory)
                 (b_a2hAy [Occ=Once] :: GeneralCategory) ->
                 case a_a2hAx of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAz
                 { __DEFAULT ->
                 case b_a2hAy of x2_X2hT5 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT5 of b#_a2hAA
                 { __DEFAULT ->
                 case <# a#_a2hAz b#_a2hAA of {
                   __DEFAULT ->
                     case ==# a#_a2hAz b#_a2hAA of {
                       __DEFAULT -> GHC.Types.GT;
                       1# -> GHC.Types.EQ
                     };
                   1# -> GHC.Types.LT
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$ccompare
  = \ (a_a2hAx :: GeneralCategory) (b_a2hAy :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAx of a#_a2hAz
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hAy of b#_a2hAA
      { __DEFAULT ->
      case <# a#_a2hAz b#_a2hAA of {
        __DEFAULT ->
          case ==# a#_a2hAz b#_a2hAA of {
            __DEFAULT -> GHC.Types.GT;
            1# -> GHC.Types.EQ
          };
        1# -> GHC.Types.LT
      }
      }
      }

-- RHS size: {terms: 14, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$c<
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAB [Occ=Once] :: GeneralCategory)
                 (b_a2hAC [Occ=Once] :: GeneralCategory) ->
                 case a_a2hAB of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case b_a2hAC of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 tagToEnum# @ Bool (<# a#_a2hAD b#_a2hAE)
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$c<
  = \ (a_a2hAB :: GeneralCategory) (b_a2hAC :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAB of a#_a2hAD
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hAC of b#_a2hAE
      { __DEFAULT ->
      tagToEnum# @ Bool (<# a#_a2hAD b#_a2hAE)
      }
      }

-- RHS size: {terms: 18, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$c<=
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAF [Occ=Once] :: GeneralCategory)
                 (b_a2hAG [Occ=Once] :: GeneralCategory) ->
                 case b_a2hAG of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case a_a2hAF of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 case <# a#_a2hAD b#_a2hAE of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$c<=
  = \ (a_a2hAF :: GeneralCategory) (b_a2hAG :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory b_a2hAG of a#_a2hAD
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory a_a2hAF of b#_a2hAE
      { __DEFAULT ->
      case <# a#_a2hAD b#_a2hAE of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 18, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$cmax
  :: GeneralCategory -> GeneralCategory -> GeneralCategory
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a55d [Occ=Once] :: GeneralCategory)
                 (y_a55e [Occ=Once] :: GeneralCategory) ->
                 case y_a55e of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case x_a55d of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 case <# a#_a2hAD b#_a2hAE of {
                   __DEFAULT -> x1_i2hLR;
                   1# -> x2_X2hT6
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$cmax
  = \ (x_a55d :: GeneralCategory) (y_a55e :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory y_a55e of a#_a2hAD { __DEFAULT ->
      case dataToTag# @ GeneralCategory x_a55d of b#_a2hAE { __DEFAULT ->
      case <# a#_a2hAD b#_a2hAE of {
        __DEFAULT -> y_a55e;
        1# -> x_a55d
      }
      }
      }

-- RHS size: {terms: 18, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$c>=
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAJ [Occ=Once] :: GeneralCategory)
                 (b_a2hAK [Occ=Once] :: GeneralCategory) ->
                 case a_a2hAJ of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case b_a2hAK of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 case <# a#_a2hAD b#_a2hAE of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$c>=
  = \ (a_a2hAJ :: GeneralCategory) (b_a2hAK :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAJ of a#_a2hAD
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hAK of b#_a2hAE
      { __DEFAULT ->
      case <# a#_a2hAD b#_a2hAE of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 14, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$c>
  :: GeneralCategory -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAH [Occ=Once] :: GeneralCategory)
                 (b_a2hAI [Occ=Once] :: GeneralCategory) ->
                 case b_a2hAI of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case a_a2hAH of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 tagToEnum# @ Bool (<# a#_a2hAD b#_a2hAE)
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$c>
  = \ (a_a2hAH :: GeneralCategory) (b_a2hAI :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory b_a2hAI of a#_a2hAD
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory a_a2hAH of b#_a2hAE
      { __DEFAULT ->
      tagToEnum# @ Bool (<# a#_a2hAD b#_a2hAE)
      }
      }

-- RHS size: {terms: 18, types: 7, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory_$cmin
  :: GeneralCategory -> GeneralCategory -> GeneralCategory
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a55m [Occ=Once] :: GeneralCategory)
                 (y_a55n [Occ=Once] :: GeneralCategory) ->
                 case y_a55n of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAD
                 { __DEFAULT ->
                 case x_a55m of x2_X2hT6 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hT6 of b#_a2hAE
                 { __DEFAULT ->
                 case <# a#_a2hAD b#_a2hAE of {
                   __DEFAULT -> x2_X2hT6;
                   1# -> x1_i2hLR
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fOrdGeneralCategory_$cmin
  = \ (x_a55m :: GeneralCategory) (y_a55n :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory y_a55n of a#_a2hAD { __DEFAULT ->
      case dataToTag# @ GeneralCategory x_a55m of b#_a2hAE { __DEFAULT ->
      case <# a#_a2hAD b#_a2hAE of {
        __DEFAULT -> x_a55m;
        1# -> y_a55n
      }
      }
      }

-- RHS size: {terms: 9, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fOrdGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Ord GeneralCategory
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Ord TYPE: GeneralCategory
                         GHC.Unicode.$fEqGeneralCategory
                         GHC.Unicode.$fOrdGeneralCategory_$ccompare
                         GHC.Unicode.$fOrdGeneralCategory_$c<
                         GHC.Unicode.$fOrdGeneralCategory_$c<=
                         GHC.Unicode.$fOrdGeneralCategory_$c>
                         GHC.Unicode.$fOrdGeneralCategory_$c>=
                         GHC.Unicode.$fOrdGeneralCategory_$cmax
                         GHC.Unicode.$fOrdGeneralCategory_$cmin]
GHC.Unicode.$fOrdGeneralCategory
  = GHC.Classes.C:Ord
      @ GeneralCategory
      GHC.Unicode.$fEqGeneralCategory
      GHC.Unicode.$fOrdGeneralCategory_$ccompare
      GHC.Unicode.$fOrdGeneralCategory_$c<
      GHC.Unicode.$fOrdGeneralCategory_$c<=
      GHC.Unicode.$fOrdGeneralCategory_$c>
      GHC.Unicode.$fOrdGeneralCategory_$c>=
      GHC.Unicode.$fOrdGeneralCategory_$cmax
      GHC.Unicode.$fOrdGeneralCategory_$cmin

-- RHS size: {terms: 7, types: 3, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  :: GeneralCategory -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAW [Occ=Once] :: GeneralCategory) ->
                 case a_a2hAW of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAX
                 { __DEFAULT ->
                 GHC.Types.I# a#_a2hAX
                 }
                 }}]
GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
  = \ (a_a2hAW :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAW of a#_a2hAX
      { __DEFAULT ->
      GHC.Types.I# a#_a2hAX
      }

-- RHS size: {terms: 17, types: 13, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  :: (GeneralCategory, GeneralCategory) -> GeneralCategory -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hB2 [Occ=Once!] :: (GeneralCategory, GeneralCategory))
                 (d_a2hB4 [Occ=Once] :: GeneralCategory) ->
                 case c_a2hB2 of { (a_a2hB3 [Occ=Once], _ [Occ=Dead]) ->
                 case a_a2hB3 of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hB5
                 { __DEFAULT ->
                 case d_a2hB4 of x2_X2hTk { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hTk of d#_a2hB6
                 { __DEFAULT ->
                 GHC.Types.I# (-# d#_a2hB6 a#_a2hB5)
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
  = \ (c_a2hB2 :: (GeneralCategory, GeneralCategory))
      (d_a2hB4 :: GeneralCategory) ->
      case c_a2hB2 of { (a_a2hB3, ds_d2hOa) ->
      case dataToTag# @ GeneralCategory a_a2hB3 of a#_a2hB5
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory d_a2hB4 of d#_a2hB6
      { __DEFAULT ->
      GHC.Types.I# (-# d#_a2hB6 a#_a2hB5)
      }
      }
      }

-- RHS size: {terms: 28, types: 17, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$cinRange
  :: (GeneralCategory, GeneralCategory) -> GeneralCategory -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d2hOb [Occ=Once!]
                    :: (GeneralCategory, GeneralCategory))
                 (c_a2hBa [Occ=Once] :: GeneralCategory) ->
                 case ds_d2hOb of { (a_a2hB8 [Occ=Once], b_a2hB9 [Occ=Once]) ->
                 case a_a2hB8 of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hBb
                 { __DEFAULT ->
                 case b_a2hB9 of x2_X2hTl { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hTl of b#_a2hBc
                 { __DEFAULT ->
                 case c_a2hBa of x3_X2hTr { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x3_X2hTr of c#_a2hBd
                 { __DEFAULT ->
                 case >=# c#_a2hBd a#_a2hBb of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> tagToEnum# @ Bool (<=# c#_a2hBd b#_a2hBc)
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fIxGeneralCategory_$cinRange
  = \ (ds_d2hOb :: (GeneralCategory, GeneralCategory))
      (c_a2hBa :: GeneralCategory) ->
      case ds_d2hOb of { (a_a2hB8, b_a2hB9) ->
      case dataToTag# @ GeneralCategory a_a2hB8 of a#_a2hBb
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hB9 of b#_a2hBc
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory c_a2hBa of c#_a2hBd
      { __DEFAULT ->
      case >=# c#_a2hBd a#_a2hBb of {
        __DEFAULT -> GHC.Types.False;
        1# -> tagToEnum# @ Bool (<=# c#_a2hBd b#_a2hBc)
      }
      }
      }
      }
      }

-- RHS size: {terms: 35, types: 16, coercions: 0, joins: 0/1}
GHC.Unicode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: GeneralCategory -> GeneralCategory -> [GeneralCategory]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 116 10}]
GHC.Unicode.$w$crange
  = \ (ww_s2iCN :: GeneralCategory) (ww1_s2iCO :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory ww_s2iCN of a#_a2hB0
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory ww1_s2iCO of b#_a2hB1
      { __DEFAULT ->
      case ># a#_a2hB0 b#_a2hB1 of {
        __DEFAULT ->
          letrec {
            go_i1MGC [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
            go_i1MGC
              = \ (x_i1MGD :: Int#) ->
                  GHC.Types.:
                    @ GeneralCategory
                    (tagToEnum# @ GeneralCategory x_i1MGD)
                    (case ==# x_i1MGD b#_a2hB1 of {
                       __DEFAULT -> go_i1MGC (+# x_i1MGD 1#);
                       1# -> GHC.Types.[] @ GeneralCategory
                     }); } in
          go_i1MGC a#_a2hB0;
        1# -> GHC.Types.[] @ GeneralCategory
      }
      }
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$crange [InlPrag=NOUSERINLINE[0]]
  :: (GeneralCategory, GeneralCategory) -> [GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iCK [Occ=Once!]
                    :: (GeneralCategory, GeneralCategory)) ->
                 case w_s2iCK of { (ww1_s2iCN [Occ=Once], ww2_s2iCO [Occ=Once]) ->
                 GHC.Unicode.$w$crange ww1_s2iCN ww2_s2iCO
                 }}]
GHC.Unicode.$fIxGeneralCategory_$crange
  = \ (w_s2iCK :: (GeneralCategory, GeneralCategory)) ->
      case w_s2iCK of { (ww1_s2iCN, ww2_s2iCO) ->
      GHC.Unicode.$w$crange ww1_s2iCN ww2_s2iCO
      }

-- RHS size: {terms: 25, types: 13, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (GeneralCategory, GeneralCategory) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iCR [Occ=Once!]
                    :: (GeneralCategory, GeneralCategory)) ->
                 case w_s2iCR of { (ww1_s2iCU, ww2_s2iCV) ->
                 case dataToTag# @ GeneralCategory ww1_s2iCU of a#_a2hBb
                 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory ww2_s2iCV of b#_a2hBc
                 { __DEFAULT ->
                 case dataToTag# @ GeneralCategory ww2_s2iCV of c#_a2hBd
                 { __DEFAULT ->
                 case >=# c#_a2hBd a#_a2hBb of {
                   __DEFAULT -> GHC.Types.I# 0#;
                   1# ->
                     case <=# c#_a2hBd b#_a2hBc of {
                       __DEFAULT -> GHC.Types.I# 0#;
                       1# ->
                         case dataToTag# @ GeneralCategory ww1_s2iCU of a#1_a2hB5
                         { __DEFAULT ->
                         case dataToTag# @ GeneralCategory ww2_s2iCV of d#_a2hB6
                         { __DEFAULT ->
                         GHC.Types.I# (+# (-# d#_a2hB6 a#1_a2hB5) 1#)
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fIxGeneralCategory_$crangeSize
  = \ (w_s2iCR :: (GeneralCategory, GeneralCategory)) ->
      case w_s2iCR of { (ww1_s2iCU, ww2_s2iCV) ->
      case dataToTag# @ GeneralCategory ww1_s2iCU of a#_a2hBb
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory ww2_s2iCV of b#_a2hBc
      { __DEFAULT ->
      case >=# b#_a2hBc a#_a2hBb of {
        __DEFAULT -> GHC.Unicode.$fShowGeneralCategory1;
        1# -> GHC.Types.I# (+# (-# b#_a2hBc a#_a2hBb) 1#)
      }
      }
      }
      }

-- RHS size: {terms: 18, types: 12, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  :: (GeneralCategory, GeneralCategory) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRo [Occ=Once!]
                    :: (GeneralCategory, GeneralCategory)) ->
                 case b_a1KRo of { (_l_a1KRp [Occ=Once], h_a1KRq [Occ=Once]) ->
                 case _l_a1KRp of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hB5
                 { __DEFAULT ->
                 case h_a1KRq of x2_X2hTp { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hTp of d#_a2hB6
                 { __DEFAULT ->
                 GHC.Types.I# (+# (-# d#_a2hB6 a#_a2hB5) 1#)
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize
  = \ (b_a1KRo :: (GeneralCategory, GeneralCategory)) ->
      case b_a1KRo of { (_l_a1KRp, h_a1KRq) ->
      case dataToTag# @ GeneralCategory _l_a1KRp of a#_a2hB5
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory h_a1KRq of d#_a2hB6
      { __DEFAULT ->
      GHC.Types.I# (+# (-# d#_a2hB6 a#_a2hB5) 1#)
      }
      }
      }

-- RHS size: {terms: 35, types: 17, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (GeneralCategory, GeneralCategory) -> GeneralCategory -> Int
[GblId,
 Arity=2,
 Str=<S(SS),1*U(U,U)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KRh [Occ=Once!] :: (GeneralCategory, GeneralCategory))
                 (i_a1KRi [Occ=Once] :: GeneralCategory) ->
                 case b_a1KRh of { (a_a2hB8 [Occ=Once], b1_a2hB9 [Occ=Once]) ->
                 case a_a2hB8 of x1_i2hLR { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hBb
                 { __DEFAULT ->
                 case b1_a2hB9 of x2_X2hTl { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x2_X2hTl of b#_a2hBc
                 { __DEFAULT ->
                 case i_a1KRi of x3_X2hTr { __DEFAULT ->
                 case dataToTag# @ GeneralCategory x3_X2hTr of c#_a2hBd
                 { __DEFAULT ->
                 case >=# c#_a2hBd a#_a2hBb of {
                   __DEFAULT -> GHC.Arr.hopelessIndexError;
                   1# ->
                     case <=# c#_a2hBd b#_a2hBc of {
                       __DEFAULT -> GHC.Arr.hopelessIndexError;
                       1# ->
                         case dataToTag# @ GeneralCategory x1_i2hLR of a#1_a2hB5
                         { __DEFAULT ->
                         case dataToTag# @ GeneralCategory x3_X2hTr of d#_a2hB6
                         { __DEFAULT ->
                         GHC.Types.I# (-# d#_a2hB6 a#1_a2hB5)
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Unicode.$fIxGeneralCategory_$cindex
  = \ (eta_B2 :: (GeneralCategory, GeneralCategory))
      (eta1_B1 :: GeneralCategory) ->
      case eta_B2 of { (a_a2hB8, b_a2hB9) ->
      case dataToTag# @ GeneralCategory a_a2hB8 of a#_a2hBb
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hB9 of b#_a2hBc
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory eta1_B1 of c#_a2hBd
      { __DEFAULT ->
      case >=# c#_a2hBd a#_a2hBb of {
        __DEFAULT -> GHC.Arr.hopelessIndexError;
        1# ->
          case <=# c#_a2hBd b#_a2hBc of {
            __DEFAULT -> GHC.Arr.hopelessIndexError;
            1# -> GHC.Types.I# (-# c#_a2hBd a#_a2hBb)
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fIxGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Ix GeneralCategory
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: GeneralCategory
                    GHC.Unicode.$fOrdGeneralCategory
                    GHC.Unicode.$fIxGeneralCategory_$crange
                    GHC.Unicode.$fIxGeneralCategory_$cindex
                    GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
                    GHC.Unicode.$fIxGeneralCategory_$cinRange
                    GHC.Unicode.$fIxGeneralCategory_$crangeSize
                    GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize]
GHC.Unicode.$fIxGeneralCategory
  = GHC.Arr.C:Ix
      @ GeneralCategory
      GHC.Unicode.$fOrdGeneralCategory
      GHC.Unicode.$fIxGeneralCategory_$crange
      GHC.Unicode.$fIxGeneralCategory_$cindex
      GHC.Unicode.$fIxGeneralCategory_$cunsafeIndex
      GHC.Unicode.$fIxGeneralCategory_$cinRange
      GHC.Unicode.$fIxGeneralCategory_$crangeSize
      GHC.Unicode.$fIxGeneralCategory_$cunsafeRangeSize

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Unicode.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc_r2j70 :: [Char]
[GblId]
loc_r2j70 = unpackCString# GHC.Unicode.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$trModule2 = "GHC.Unicode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc1_r2j71 :: [Char]
[GblId]
loc1_r2j71 = unpackCString# GHC.Unicode.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
loc2_r2j72 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
loc2_r2j72 = "./GHC/Unicode.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc3_r2j73 :: [Char]
[GblId]
loc3_r2j73 = unpackCString# loc2_r2j72

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc4_r2j74 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
loc4_r2j74 = GHC.Types.I# 135#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc5_r2j75 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
loc5_r2j75 = GHC.Types.I# 20#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
loc6_r2j76 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
loc6_r2j76 = GHC.Types.I# 24#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dIP_r2j77 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
$dIP_r2j77 = "error"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$dIP1_r2j78 :: [Char]
[GblId]
$dIP1_r2j78 = unpackCString# $dIP_r2j77

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
$dIP2_r2j79 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
$dIP2_r2j79
  = GHC.Stack.Types.SrcLoc
      loc_r2j70
      loc1_r2j71
      loc3_r2j73
      loc4_r2j74
      loc5_r2j75
      loc4_r2j74
      loc6_r2j76

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
$dIP3_r2j7a :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
$dIP3_r2j7a
  = GHC.Stack.Types.PushCallStack
      $dIP1_r2j78 $dIP2_r2j79 GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl60_r2j7b :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl60_r2j7b = ") is outside of enumeration's range (0,"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl61_r2j7c :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl61_r2j7c = ")"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl62_r2j7d :: [Char]
[GblId]
lvl62_r2j7d = unpackCString# lvl61_r2j7c

-- RHS size: {terms: 9, types: 10, coercions: 0, joins: 0/0}
lvl63_r2j7e :: [Char]
[GblId]
lvl63_r2j7e
  = case GHC.Show.$wshowSignedInt 0# 29# lvl62_r2j7d of
    { (# ww5_i1MP4, ww6_i1MP5 #) ->
    GHC.Types.: @ Char ww5_i1MP4 ww6_i1MP5
    }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
lvl64_r2j7f :: [Char]
[GblId]
lvl64_r2j7f = unpackAppendCString# lvl60_r2j7b lvl63_r2j7e

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl65_r2j7g :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl65_r2j7g = "toEnum{GeneralCategory}: tag ("#

-- RHS size: {terms: 14, types: 13, coercions: 4, joins: 0/0}
GHC.Unicode.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: Int# -> GeneralCategory
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
GHC.Unicode.$wlvl
  = \ (ww_s2iD4 :: Int#) ->
      error
        @ 'LiftedRep
        @ GeneralCategory
        ($dIP3_r2j7a
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
        (unpackAppendCString#
           lvl65_r2j7g
           (case GHC.Show.$wshowSignedInt 0# ww_s2iD4 lvl64_r2j7f of
            { (# ww5_i1MP4, ww6_i1MP5 #) ->
            GHC.Types.: @ Char ww5_i1MP4 ww6_i1MP5
            }))

-- RHS size: {terms: 19, types: 4, coercions: 0, joins: 0/0}
GHC.Unicode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: Int# -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 83 0}]
GHC.Unicode.$w$ctoEnum
  = \ (ww_s2iDa :: Int#) ->
      case >=# ww_s2iDa 0# of {
        __DEFAULT -> GHC.Unicode.$wlvl ww_s2iDa;
        1# ->
          case <=# ww_s2iDa 29# of {
            __DEFAULT -> GHC.Unicode.$wlvl ww_s2iDa;
            1# -> tagToEnum# @ GeneralCategory ww_s2iDa
          }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: Int -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iD7 [Occ=Once!] :: Int) ->
                 case w_s2iD7 of { I# ww1_s2iDa [Occ=Once] ->
                 GHC.Unicode.$w$ctoEnum ww1_s2iDa
                 }}]
GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
  = \ (w_s2iD7 :: Int) ->
      case w_s2iD7 of { I# ww1_s2iDa ->
      GHC.Unicode.$w$ctoEnum ww1_s2iDa
      }

Rec {
-- RHS size: {terms: 13, types: 5, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_go [Occ=LoopBreaker]
  :: Int# -> [GeneralCategory]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []]
GHC.Unicode.$fEnumGeneralCategory_go
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ GeneralCategory
        (tagToEnum# @ GeneralCategory x_i1MGD)
        (case x_i1MGD of wild_X5P {
           __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go (+# wild_X5P 1#);
           29# -> GHC.Types.[] @ GeneralCategory
         })
end Rec }

-- RHS size: {terms: 14, types: 5, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  :: GeneralCategory -> [GeneralCategory]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 42 10}]
GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
  = \ (a_a2hAQ :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAQ of a#_a2hAR
      { __DEFAULT ->
      case ># a#_a2hAR 29# of {
        __DEFAULT -> GHC.Unicode.$fEnumGeneralCategory_go a#_a2hAR;
        1# -> GHC.Types.[] @ GeneralCategory
      }
      }

-- RHS size: {terms: 224, types: 89, coercions: 0, joins: 0/12}
GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  :: GeneralCategory -> GeneralCategory -> [GeneralCategory]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 745 280}]
GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
  = \ (a_a2hAS :: GeneralCategory) (b_a2hAT :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory a_a2hAS of a#_a2hAU
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory b_a2hAT of b#_a2hAV
      { __DEFAULT ->
      case ># a#_a2hAU b#_a2hAV of {
        __DEFAULT ->
          case >=# b#_a2hAV a#_a2hAU of {
            __DEFAULT ->
              case ># 29# b#_a2hAV of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (tagToEnum# @ GeneralCategory a#_a2hAU)
                    (let {
                       delta_i2ioH [Dmd=<S,U>] :: Int#
                       [LclId]
                       delta_i2ioH = -# b#_a2hAV a#_a2hAU } in
                     let {
                       y'_i2ioI [Dmd=<S,U>] :: Int#
                       [LclId]
                       y'_i2ioI = -# 29# delta_i2ioH } in
                     letrec {
                       go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                       [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                       go_dn_i2ioJ
                         = \ (x_i2ioK :: Int#) ->
                             case <# x_i2ioK y'_i2ioI of {
                               __DEFAULT ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ioK)
                                   (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                               1# ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ioK)
                                   (GHC.Types.[] @ GeneralCategory)
                             }; } in
                     go_dn_i2ioJ b#_a2hAV);
                1# ->
                  case ># 29# a#_a2hAU of {
                    __DEFAULT ->
                      GHC.Types.:
                        @ GeneralCategory
                        (tagToEnum# @ GeneralCategory a#_a2hAU)
                        (GHC.Types.[] @ GeneralCategory);
                    1# -> GHC.Types.[] @ GeneralCategory
                  }
              };
            1# ->
              case <# 29# b#_a2hAV of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (tagToEnum# @ GeneralCategory a#_a2hAU)
                    (let {
                       delta_i2ioX [Dmd=<S,U>] :: Int#
                       [LclId]
                       delta_i2ioX = -# b#_a2hAV a#_a2hAU } in
                     let {
                       y'_i2ioY [Dmd=<S,U>] :: Int#
                       [LclId]
                       y'_i2ioY = -# 29# delta_i2ioX } in
                     letrec {
                       go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                       [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                       go_up_i2ioZ
                         = \ (x_i2ip0 :: Int#) ->
                             case ># x_i2ip0 y'_i2ioY of {
                               __DEFAULT ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ip0)
                                   (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                               1# ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ip0)
                                   (GHC.Types.[] @ GeneralCategory)
                             }; } in
                     go_up_i2ioZ b#_a2hAV);
                1# ->
                  case <# 29# a#_a2hAU of {
                    __DEFAULT ->
                      GHC.Types.:
                        @ GeneralCategory
                        (tagToEnum# @ GeneralCategory a#_a2hAU)
                        (GHC.Types.[] @ GeneralCategory);
                    1# -> GHC.Types.[] @ GeneralCategory
                  }
              }
          };
        1# ->
          case >=# b#_a2hAV a#_a2hAU of {
            __DEFAULT ->
              case ># 0# b#_a2hAV of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (tagToEnum# @ GeneralCategory a#_a2hAU)
                    (let {
                       delta_i2ioH [Dmd=<S,U>] :: Int#
                       [LclId]
                       delta_i2ioH = -# b#_a2hAV a#_a2hAU } in
                     let {
                       y'_i2ioI [Dmd=<S,U>] :: Int#
                       [LclId]
                       y'_i2ioI = -# 0# delta_i2ioH } in
                     letrec {
                       go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                       [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                       go_dn_i2ioJ
                         = \ (x_i2ioK :: Int#) ->
                             case <# x_i2ioK y'_i2ioI of {
                               __DEFAULT ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ioK)
                                   (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                               1# ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ioK)
                                   (GHC.Types.[] @ GeneralCategory)
                             }; } in
                     go_dn_i2ioJ b#_a2hAV);
                1# ->
                  case ># 0# a#_a2hAU of {
                    __DEFAULT ->
                      GHC.Types.:
                        @ GeneralCategory
                        (tagToEnum# @ GeneralCategory a#_a2hAU)
                        (GHC.Types.[] @ GeneralCategory);
                    1# -> GHC.Types.[] @ GeneralCategory
                  }
              };
            1# ->
              case <# 0# b#_a2hAV of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (tagToEnum# @ GeneralCategory a#_a2hAU)
                    (let {
                       delta_i2ioX [Dmd=<S,U>] :: Int#
                       [LclId]
                       delta_i2ioX = -# b#_a2hAV a#_a2hAU } in
                     let {
                       y'_i2ioY [Dmd=<S,U>] :: Int#
                       [LclId]
                       y'_i2ioY = -# 0# delta_i2ioX } in
                     letrec {
                       go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                       [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                       go_up_i2ioZ
                         = \ (x_i2ip0 :: Int#) ->
                             case ># x_i2ip0 y'_i2ioY of {
                               __DEFAULT ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ip0)
                                   (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                               1# ->
                                 GHC.Types.:
                                   @ GeneralCategory
                                   (tagToEnum# @ GeneralCategory x_i2ip0)
                                   (GHC.Types.[] @ GeneralCategory)
                             }; } in
                     go_up_i2ioZ b#_a2hAV);
                1# ->
                  case <# 0# a#_a2hAU of {
                    __DEFAULT ->
                      GHC.Types.:
                        @ GeneralCategory
                        (tagToEnum# @ GeneralCategory a#_a2hAU)
                        (GHC.Types.[] @ GeneralCategory);
                    1# -> GHC.Types.[] @ GeneralCategory
                  }
              }
          }
      }
      }
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$trModule3 = GHC.Types.TrNameS GHC.Unicode.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$trModule1 = GHC.Types.TrNameS GHC.Unicode.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Unicode.$trModule
  = GHC.Types.Module GHC.Unicode.$trModule3 GHC.Unicode.$trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tcGeneralCategory2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tcGeneralCategory2 = "GeneralCategory"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tcGeneralCategory1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tcGeneralCategory1
  = GHC.Types.TrNameS GHC.Unicode.$tcGeneralCategory2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tcGeneralCategory :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tcGeneralCategory
  = GHC.Types.TyCon
      10145990250269206894##
      14660269375011335890##
      GHC.Unicode.$trModule
      GHC.Unicode.$tcGeneralCategory1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ClosePunctuation1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.Unicode.$tc'ClosePunctuation1
  = GHC.Types.KindRepTyConApp
      GHC.Unicode.$tcGeneralCategory (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'UppercaseLetter2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'UppercaseLetter2 = "'UppercaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'UppercaseLetter1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'UppercaseLetter1
  = GHC.Types.TrNameS GHC.Unicode.$tc'UppercaseLetter2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'UppercaseLetter :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'UppercaseLetter
  = GHC.Types.TyCon
      14647285109492872061##
      14425225614845259385##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'UppercaseLetter1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LowercaseLetter2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'LowercaseLetter2 = "'LowercaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LowercaseLetter1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'LowercaseLetter1
  = GHC.Types.TrNameS GHC.Unicode.$tc'LowercaseLetter2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LowercaseLetter :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'LowercaseLetter
  = GHC.Types.TyCon
      6843638521722139917##
      11845029203120951590##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'LowercaseLetter1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'TitlecaseLetter2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'TitlecaseLetter2 = "'TitlecaseLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'TitlecaseLetter1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'TitlecaseLetter1
  = GHC.Types.TrNameS GHC.Unicode.$tc'TitlecaseLetter2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'TitlecaseLetter :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'TitlecaseLetter
  = GHC.Types.TyCon
      11035134207864173010##
      10162510539839760824##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'TitlecaseLetter1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierLetter2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'ModifierLetter2 = "'ModifierLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierLetter1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'ModifierLetter1
  = GHC.Types.TrNameS GHC.Unicode.$tc'ModifierLetter2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierLetter :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'ModifierLetter
  = GHC.Types.TyCon
      9531845544999081993##
      15142721146394159202##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'ModifierLetter1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherLetter2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'OtherLetter2 = "'OtherLetter"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherLetter1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'OtherLetter1
  = GHC.Types.TrNameS GHC.Unicode.$tc'OtherLetter2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherLetter :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'OtherLetter
  = GHC.Types.TyCon
      4852466454551376074##
      478150797319163725##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'OtherLetter1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NonSpacingMark2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'NonSpacingMark2 = "'NonSpacingMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NonSpacingMark1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'NonSpacingMark1
  = GHC.Types.TrNameS GHC.Unicode.$tc'NonSpacingMark2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NonSpacingMark :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'NonSpacingMark
  = GHC.Types.TyCon
      11798799283128539890##
      8595267121230037978##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'NonSpacingMark1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'SpacingCombiningMark2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
GHC.Unicode.$tc'SpacingCombiningMark2 = "'SpacingCombiningMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'SpacingCombiningMark1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'SpacingCombiningMark1
  = GHC.Types.TrNameS GHC.Unicode.$tc'SpacingCombiningMark2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'SpacingCombiningMark :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'SpacingCombiningMark
  = GHC.Types.TyCon
      161806050746895686##
      6274417789988196957##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'SpacingCombiningMark1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'EnclosingMark2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'EnclosingMark2 = "'EnclosingMark"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'EnclosingMark1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'EnclosingMark1
  = GHC.Types.TrNameS GHC.Unicode.$tc'EnclosingMark2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'EnclosingMark :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'EnclosingMark
  = GHC.Types.TyCon
      18110486507519489617##
      1830565827398073667##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'EnclosingMark1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DecimalNumber2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'DecimalNumber2 = "'DecimalNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DecimalNumber1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'DecimalNumber1
  = GHC.Types.TrNameS GHC.Unicode.$tc'DecimalNumber2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DecimalNumber :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'DecimalNumber
  = GHC.Types.TyCon
      7339032513903136575##
      4295356444207098462##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'DecimalNumber1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LetterNumber2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'LetterNumber2 = "'LetterNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LetterNumber1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'LetterNumber1
  = GHC.Types.TrNameS GHC.Unicode.$tc'LetterNumber2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LetterNumber :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'LetterNumber
  = GHC.Types.TyCon
      10629256336866531923##
      16896950428492761972##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'LetterNumber1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherNumber2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'OtherNumber2 = "'OtherNumber"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherNumber1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'OtherNumber1
  = GHC.Types.TrNameS GHC.Unicode.$tc'OtherNumber2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherNumber :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'OtherNumber
  = GHC.Types.TyCon
      10187389108931559810##
      2377339607923931442##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'OtherNumber1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ConnectorPunctuation2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
GHC.Unicode.$tc'ConnectorPunctuation2 = "'ConnectorPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ConnectorPunctuation1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'ConnectorPunctuation1
  = GHC.Types.TrNameS GHC.Unicode.$tc'ConnectorPunctuation2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ConnectorPunctuation :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'ConnectorPunctuation
  = GHC.Types.TyCon
      4917643529853318260##
      11665519332165151523##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'ConnectorPunctuation1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DashPunctuation2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'DashPunctuation2 = "'DashPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DashPunctuation1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'DashPunctuation1
  = GHC.Types.TrNameS GHC.Unicode.$tc'DashPunctuation2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'DashPunctuation :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'DashPunctuation
  = GHC.Types.TyCon
      10309144240368445329##
      13155144127162508040##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'DashPunctuation1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OpenPunctuation2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'OpenPunctuation2 = "'OpenPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OpenPunctuation1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'OpenPunctuation1
  = GHC.Types.TrNameS GHC.Unicode.$tc'OpenPunctuation2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OpenPunctuation :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'OpenPunctuation
  = GHC.Types.TyCon
      11156540492509602203##
      14579738194966332373##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'OpenPunctuation1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ClosePunctuation3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.Unicode.$tc'ClosePunctuation3 = "'ClosePunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ClosePunctuation2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'ClosePunctuation2
  = GHC.Types.TrNameS GHC.Unicode.$tc'ClosePunctuation3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ClosePunctuation :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'ClosePunctuation
  = GHC.Types.TyCon
      2732552725164352280##
      2123618155201944931##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'ClosePunctuation2
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'InitialQuote2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'InitialQuote2 = "'InitialQuote"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'InitialQuote1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'InitialQuote1
  = GHC.Types.TrNameS GHC.Unicode.$tc'InitialQuote2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'InitialQuote :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'InitialQuote
  = GHC.Types.TyCon
      15372309041196331722##
      15030215702152843543##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'InitialQuote1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'FinalQuote2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'FinalQuote2 = "'FinalQuote"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'FinalQuote1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'FinalQuote1
  = GHC.Types.TrNameS GHC.Unicode.$tc'FinalQuote2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'FinalQuote :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'FinalQuote
  = GHC.Types.TyCon
      7492133048483711520##
      4486297505861009288##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'FinalQuote1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherPunctuation2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.Unicode.$tc'OtherPunctuation2 = "'OtherPunctuation"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherPunctuation1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'OtherPunctuation1
  = GHC.Types.TrNameS GHC.Unicode.$tc'OtherPunctuation2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherPunctuation :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'OtherPunctuation
  = GHC.Types.TyCon
      17526727746027692027##
      9970963912577062569##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'OtherPunctuation1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'MathSymbol2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'MathSymbol2 = "'MathSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'MathSymbol1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'MathSymbol1
  = GHC.Types.TrNameS GHC.Unicode.$tc'MathSymbol2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'MathSymbol :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'MathSymbol
  = GHC.Types.TyCon
      4306295684901311676##
      14195098983421669147##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'MathSymbol1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'CurrencySymbol2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'CurrencySymbol2 = "'CurrencySymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'CurrencySymbol1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'CurrencySymbol1
  = GHC.Types.TrNameS GHC.Unicode.$tc'CurrencySymbol2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'CurrencySymbol :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'CurrencySymbol
  = GHC.Types.TyCon
      150101909358894799##
      4247883766619991310##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'CurrencySymbol1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierSymbol2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'ModifierSymbol2 = "'ModifierSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierSymbol1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'ModifierSymbol1
  = GHC.Types.TrNameS GHC.Unicode.$tc'ModifierSymbol2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ModifierSymbol :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'ModifierSymbol
  = GHC.Types.TyCon
      17930136738185325280##
      9680003641195432205##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'ModifierSymbol1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherSymbol2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'OtherSymbol2 = "'OtherSymbol"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherSymbol1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'OtherSymbol1
  = GHC.Types.TrNameS GHC.Unicode.$tc'OtherSymbol2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'OtherSymbol :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'OtherSymbol
  = GHC.Types.TyCon
      11720563220218392367##
      765393478666748433##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'OtherSymbol1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Space2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Unicode.$tc'Space2 = "'Space"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Space1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'Space1 = GHC.Types.TrNameS GHC.Unicode.$tc'Space2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Space :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'Space
  = GHC.Types.TyCon
      13451262004661357021##
      7623263649021992415##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'Space1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LineSeparator2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Unicode.$tc'LineSeparator2 = "'LineSeparator"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LineSeparator1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'LineSeparator1
  = GHC.Types.TrNameS GHC.Unicode.$tc'LineSeparator2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'LineSeparator :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'LineSeparator
  = GHC.Types.TyCon
      3777504190602031786##
      16534792546094157357##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'LineSeparator1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ParagraphSeparator2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.Unicode.$tc'ParagraphSeparator2 = "'ParagraphSeparator"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ParagraphSeparator1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'ParagraphSeparator1
  = GHC.Types.TrNameS GHC.Unicode.$tc'ParagraphSeparator2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'ParagraphSeparator :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'ParagraphSeparator
  = GHC.Types.TyCon
      1259977240315406014##
      6836752952671088565##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'ParagraphSeparator1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Control2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Unicode.$tc'Control2 = "'Control"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Control1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'Control1
  = GHC.Types.TrNameS GHC.Unicode.$tc'Control2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Control :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'Control
  = GHC.Types.TyCon
      3769799789009110362##
      7129109849289868145##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'Control1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Format2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Unicode.$tc'Format2 = "'Format"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Format1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'Format1 = GHC.Types.TrNameS GHC.Unicode.$tc'Format2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Format :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'Format
  = GHC.Types.TyCon
      15516392160505082493##
      8582194312248021938##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'Format1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Surrogate2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'Surrogate2 = "'Surrogate"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Surrogate1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'Surrogate1
  = GHC.Types.TrNameS GHC.Unicode.$tc'Surrogate2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'Surrogate :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'Surrogate
  = GHC.Types.TyCon
      8891432866311764671##
      15154926068870472193##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'Surrogate1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'PrivateUse2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'PrivateUse2 = "'PrivateUse"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'PrivateUse1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'PrivateUse1
  = GHC.Types.TrNameS GHC.Unicode.$tc'PrivateUse2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'PrivateUse :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'PrivateUse
  = GHC.Types.TyCon
      9277443220957795657##
      16819524490051355354##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'PrivateUse1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NotAssigned2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Unicode.$tc'NotAssigned2 = "'NotAssigned"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NotAssigned1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Unicode.$tc'NotAssigned1
  = GHC.Types.TrNameS GHC.Unicode.$tc'NotAssigned2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Unicode.$tc'NotAssigned :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Unicode.$tc'NotAssigned
  = GHC.Types.TyCon
      6894305772705953782##
      14217837899895516928##
      GHC.Unicode.$trModule
      GHC.Unicode.$tc'NotAssigned1
      0#
      GHC.Unicode.$tc'ClosePunctuation1

-- RHS size: {terms: 22, types: 15, coercions: 0, joins: 0/0}
toLower [InlPrag=NOUSERINLINE[0]] :: Char -> Char
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iDl [Occ=Once!] :: Char) ->
                 case w_s2iDl of { C# ww1_s2iDo [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOC
                        (ord# ww1_s2iDo) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOA #) ->
                 case leWord# (int2Word# ds1_d2hOA) 1114111## of {
                   __DEFAULT -> GHC.Char.$wlvl ds1_d2hOA;
                   1# -> GHC.Types.C# (chr# ds1_d2hOA)
                 }
                 }
                 }}]
toLower
  = \ (w_s2iDl :: Char) ->
      case w_s2iDl of { C# ww1_s2iDo ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOC
             (ord# ww1_s2iDo) realWorld#
      of
      { (# ds_d2hOB, ds1_d2hOA #) ->
      case leWord# (int2Word# ds1_d2hOA) 1114111## of {
        __DEFAULT -> GHC.Char.$wlvl ds1_d2hOA;
        1# -> GHC.Types.C# (chr# ds1_d2hOA)
      }
      }
      }

-- RHS size: {terms: 22, types: 15, coercions: 0, joins: 0/0}
toUpper [InlPrag=NOUSERINLINE[0]] :: Char -> Char
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iDu [Occ=Once!] :: Char) ->
                 case w_s2iDu of { C# ww1_s2iDx [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOv
                        (ord# ww1_s2iDx) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOt #) ->
                 case leWord# (int2Word# ds1_d2hOt) 1114111## of {
                   __DEFAULT -> GHC.Char.$wlvl ds1_d2hOt;
                   1# -> GHC.Types.C# (chr# ds1_d2hOt)
                 }
                 }
                 }}]
toUpper
  = \ (w_s2iDu :: Char) ->
      case w_s2iDu of { C# ww1_s2iDx ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOv
             (ord# ww1_s2iDx) realWorld#
      of
      { (# ds_d2hOu, ds1_d2hOt #) ->
      case leWord# (int2Word# ds1_d2hOt) 1114111## of {
        __DEFAULT -> GHC.Char.$wlvl ds1_d2hOt;
        1# -> GHC.Types.C# (chr# ds1_d2hOt)
      }
      }
      }

-- RHS size: {terms: 22, types: 15, coercions: 0, joins: 0/0}
toTitle [InlPrag=NOUSERINLINE[0]] :: Char -> Char
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iDD [Occ=Once!] :: Char) ->
                 case w_s2iDD of { C# ww1_s2iDG [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOo
                        (ord# ww1_s2iDG) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOm #) ->
                 case leWord# (int2Word# ds1_d2hOm) 1114111## of {
                   __DEFAULT -> GHC.Char.$wlvl ds1_d2hOm;
                   1# -> GHC.Types.C# (chr# ds1_d2hOm)
                 }
                 }
                 }}]
toTitle
  = \ (w_s2iDD :: Char) ->
      case w_s2iDD of { C# ww1_s2iDG ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOo
             (ord# ww1_s2iDG) realWorld#
      of
      { (# ds_d2hOn, ds1_d2hOm #) ->
      case leWord# (int2Word# ds1_d2hOm) 1114111## of {
        __DEFAULT -> GHC.Char.$wlvl ds1_d2hOm;
        1# -> GHC.Types.C# (chr# ds1_d2hOm)
      }
      }
      }

-- RHS size: {terms: 11, types: 14, coercions: 0, joins: 0/0}
wgencat :: Int -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d2hOc [Occ=Once!] :: Int) ->
                 case ds_d2hOc of { I# ds2_d2hOe [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOh
                        ds2_d2hOe realWorld#
                 of
                 { (# _ [Occ=Dead], ds4_d2hOf [Occ=Once] #) ->
                 GHC.Types.I# ds4_d2hOf
                 }
                 }}]
wgencat
  = \ (ds_d2hOc :: Int) ->
      case ds_d2hOc of { I# ds2_d2hOe ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOh
             ds2_d2hOe realWorld#
      of
      { (# ds3_d2hOg, ds4_d2hOf #) ->
      GHC.Types.I# ds4_d2hOf
      }
      }

-- RHS size: {terms: 15, types: 5, coercions: 0, joins: 0/0}
isAsciiUpper :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvp [Occ=Once!] :: Char) ->
                 case c_a2hvp of { C# c1_azZT ->
                 case geChar# c1_azZT 'A'# of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> tagToEnum# @ Bool (leChar# c1_azZT 'Z'#)
                 }
                 }}]
isAsciiUpper
  = \ (c_a2hvp :: Char) ->
      case c_a2hvp of { C# c1_azZT ->
      case geChar# c1_azZT 'A'# of {
        __DEFAULT -> GHC.Types.False;
        1# -> tagToEnum# @ Bool (leChar# c1_azZT 'Z'#)
      }
      }

-- RHS size: {terms: 15, types: 5, coercions: 0, joins: 0/0}
isAsciiLower :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvo [Occ=Once!] :: Char) ->
                 case c_a2hvo of { C# c1_azZT ->
                 case geChar# c1_azZT 'a'# of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> tagToEnum# @ Bool (leChar# c1_azZT 'z'#)
                 }
                 }}]
isAsciiLower
  = \ (c_a2hvo :: Char) ->
      case c_a2hvo of { C# c1_azZT ->
      case geChar# c1_azZT 'a'# of {
        __DEFAULT -> GHC.Types.False;
        1# -> tagToEnum# @ Bool (leChar# c1_azZT 'z'#)
      }
      }

-- RHS size: {terms: 8, types: 4, coercions: 0, joins: 0/0}
isLatin1 :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvn [Occ=Once!] :: Char) ->
                 case c_a2hvn of { C# c1_aA05 [Occ=Once] ->
                 tagToEnum# @ Bool (leChar# c1_aA05 '\255'#)
                 }}]
isLatin1
  = \ (c_a2hvn :: Char) ->
      case c_a2hvn of { C# c1_aA05 ->
      tagToEnum# @ Bool (leChar# c1_aA05 '\255'#)
      }

-- RHS size: {terms: 8, types: 4, coercions: 0, joins: 0/0}
isAscii :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvm [Occ=Once!] :: Char) ->
                 case c_a2hvm of { C# c1_a2hTF [Occ=Once] ->
                 tagToEnum# @ Bool (ltChar# c1_a2hTF '\128'#)
                 }}]
isAscii
  = \ (c_a2hvm :: Char) ->
      case c_a2hvm of { C# c1_a2hTF ->
      tagToEnum# @ Bool (ltChar# c1_a2hTF '\128'#)
      }

-- RHS size: {terms: 12, types: 4, coercions: 0, joins: 0/0}
isOctDigit :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvt [Occ=Once!] :: Char) ->
                 case c_a2hvt of { C# c#_i1MwB [Occ=Once] ->
                 tagToEnum#
                   @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 7##)
                 }}]
isOctDigit
  = \ (c_a2hvt :: Char) ->
      case c_a2hvt of { C# c#_i1MwB ->
      tagToEnum#
        @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 7##)
      }

-- RHS size: {terms: 12, types: 4, coercions: 0, joins: 0/0}
isDigit :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvs [Occ=Once!] :: Char) ->
                 case c_a2hvs of { C# c#_i1MwB [Occ=Once] ->
                 tagToEnum#
                   @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 9##)
                 }}]
isDigit
  = \ (c_a2hvs :: Char) ->
      case c_a2hvs of { C# c#_i1MwB ->
      tagToEnum#
        @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 9##)
      }

-- RHS size: {terms: 34, types: 6, coercions: 0, joins: 0/0}
isHexDigit :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvu [Occ=Once!] :: Char) ->
                 case c_a2hvu of { C# c#_i1MwB ->
                 case leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 9## of {
                   __DEFAULT ->
                     case leWord# (int2Word# (-# (ord# c#_i1MwB) 65#)) 5## of {
                       __DEFAULT ->
                         tagToEnum#
                           @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 97#)) 5##);
                       1# -> GHC.Types.True
                     };
                   1# -> GHC.Types.True
                 }
                 }}]
isHexDigit
  = \ (c_a2hvu :: Char) ->
      case c_a2hvu of { C# c#_i1MwB ->
      case leWord# (int2Word# (-# (ord# c#_i1MwB) 48#)) 9## of {
        __DEFAULT ->
          case leWord# (int2Word# (-# (ord# c#_i1MwB) 65#)) 5## of {
            __DEFAULT ->
              tagToEnum#
                @ Bool (leWord# (int2Word# (-# (ord# c#_i1MwB) 97#)) 5##);
            1# -> GHC.Types.True
          };
        1# -> GHC.Types.True
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isLower :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvC [Occ=Once!] :: Char) ->
                 case c_a2hvC of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOQ
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOO [Occ=Once!] #) ->
                 case ds1_d2hOO of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isLower
  = \ (c_a2hvC :: Char) ->
      case c_a2hvC of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOQ
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hOP, ds1_d2hOO #) ->
      case ds1_d2hOO of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl66_r2j7h :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl66_r2j7h
  = "succ{GeneralCategory}: tried to take `succ' of last tag in enumeration"#

-- RHS size: {terms: 4, types: 2, coercions: 4, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory2 :: GeneralCategory
[GblId, Str=x]
GHC.Unicode.$fEnumGeneralCategory2
  = error
      @ 'LiftedRep
      @ GeneralCategory
      ($dIP3_r2j7a
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
      (unpackCString# lvl66_r2j7h)

-- RHS size: {terms: 14, types: 5, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_$csucc
  :: GeneralCategory -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAL [Occ=Once!] :: GeneralCategory) ->
                 case a_a2hAL of x1_i2hLR {
                   __DEFAULT ->
                     case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAM
                     { __DEFAULT ->
                     tagToEnum# @ GeneralCategory (+# a#_a2hAM 1#)
                     };
                   NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2
                 }}]
GHC.Unicode.$fEnumGeneralCategory_$csucc
  = \ (a_a2hAL :: GeneralCategory) ->
      case a_a2hAL of x1_i2hLR {
        __DEFAULT ->
          case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAM
          { __DEFAULT ->
          tagToEnum# @ GeneralCategory (+# a#_a2hAM 1#)
          };
        NotAssigned -> GHC.Unicode.$fEnumGeneralCategory2
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl67_r2j7i :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl67_r2j7i
  = "pred{GeneralCategory}: tried to take `pred' of first tag in enumeration"#

-- RHS size: {terms: 4, types: 2, coercions: 4, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory1 :: GeneralCategory
[GblId, Str=x]
GHC.Unicode.$fEnumGeneralCategory1
  = error
      @ 'LiftedRep
      @ GeneralCategory
      ($dIP3_r2j7a
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
      (unpackCString# lvl67_r2j7i)

-- RHS size: {terms: 14, types: 5, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory_$cpred
  :: GeneralCategory -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a2hAN [Occ=Once!] :: GeneralCategory) ->
                 case a_a2hAN of x1_i2hLR {
                   __DEFAULT ->
                     case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAO
                     { __DEFAULT ->
                     tagToEnum# @ GeneralCategory (+# a#_a2hAO -1#)
                     };
                   UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1
                 }}]
GHC.Unicode.$fEnumGeneralCategory_$cpred
  = \ (a_a2hAN :: GeneralCategory) ->
      case a_a2hAN of x1_i2hLR {
        __DEFAULT ->
          case dataToTag# @ GeneralCategory x1_i2hLR of a#_a2hAO
          { __DEFAULT ->
          tagToEnum# @ GeneralCategory (+# a#_a2hAO -1#)
          };
        UppercaseLetter -> GHC.Unicode.$fEnumGeneralCategory1
      }

-- RHS size: {terms: 51, types: 18, coercions: 0, joins: 0/1}
GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  :: GeneralCategory -> GeneralCategory -> [GeneralCategory]
[GblId,
 Arity=2,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 198 10}]
GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
  = \ (x_i2hNA :: GeneralCategory) (y_i2hNB :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory x_i2hNA of a#_a2hAX
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory y_i2hNB of a#1_X2hKR
      { __DEFAULT ->
      case ># a#_a2hAX a#1_X2hKR of {
        __DEFAULT ->
          letrec {
            go_i1MGC [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
            go_i1MGC
              = \ (x1_i1MGD :: Int#) ->
                  GHC.Types.:
                    @ GeneralCategory
                    (case >=# x1_i1MGD 0# of {
                       __DEFAULT -> GHC.Unicode.$wlvl x1_i1MGD;
                       1# ->
                         case <=# x1_i1MGD 29# of {
                           __DEFAULT -> GHC.Unicode.$wlvl x1_i1MGD;
                           1# -> tagToEnum# @ GeneralCategory x1_i1MGD
                         }
                     })
                    (case ==# x1_i1MGD a#1_X2hKR of {
                       __DEFAULT -> go_i1MGC (+# x1_i1MGD 1#);
                       1# -> GHC.Types.[] @ GeneralCategory
                     }); } in
          go_i1MGC a#_a2hAX;
        1# -> GHC.Types.[] @ GeneralCategory
      }
      }
      }

-- RHS size: {terms: 247, types: 66, coercions: 0, joins: 0/6}
GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  :: GeneralCategory
     -> GeneralCategory -> GeneralCategory -> [GeneralCategory]
[GblId, Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo
  = \ (x1_i2hNP :: GeneralCategory)
      (x2_i2hNQ :: GeneralCategory)
      (y_i2hNR :: GeneralCategory) ->
      case dataToTag# @ GeneralCategory x1_i2hNP of a#_a2hAX
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory x2_i2hNQ of a#1_X2hKT
      { __DEFAULT ->
      case dataToTag# @ GeneralCategory y_i2hNR of a#2_X2hL0
      { __DEFAULT ->
      case >=# a#1_X2hKT a#_a2hAX of {
        __DEFAULT ->
          case ># a#2_X2hL0 a#1_X2hKT of {
            __DEFAULT ->
              GHC.Types.:
                @ GeneralCategory
                (case >=# a#_a2hAX 0# of {
                   __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                   1# ->
                     case <=# a#_a2hAX 29# of {
                       __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                       1# -> tagToEnum# @ GeneralCategory a#_a2hAX
                     }
                 })
                (let {
                   delta_i2ioH [Dmd=<S,U>] :: Int#
                   [LclId]
                   delta_i2ioH = -# a#1_X2hKT a#_a2hAX } in
                 let {
                   y'_i2ioI [Dmd=<S,U>] :: Int#
                   [LclId]
                   y'_i2ioI = -# a#2_X2hL0 delta_i2ioH } in
                 letrec {
                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                   go_dn_i2ioJ
                     = \ (x_i2ioK :: Int#) ->
                         case <# x_i2ioK y'_i2ioI of {
                           __DEFAULT ->
                             GHC.Types.:
                               @ GeneralCategory
                               (case >=# x_i2ioK 0# of {
                                  __DEFAULT -> GHC.Unicode.$wlvl x_i2ioK;
                                  1# ->
                                    case <=# x_i2ioK 29# of {
                                      __DEFAULT -> GHC.Unicode.$wlvl x_i2ioK;
                                      1# -> tagToEnum# @ GeneralCategory x_i2ioK
                                    }
                                })
                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                           1# ->
                             GHC.Types.:
                               @ GeneralCategory
                               (case >=# x_i2ioK 0# of {
                                  __DEFAULT -> GHC.Unicode.$wlvl x_i2ioK;
                                  1# ->
                                    case <=# x_i2ioK 29# of {
                                      __DEFAULT -> GHC.Unicode.$wlvl x_i2ioK;
                                      1# -> tagToEnum# @ GeneralCategory x_i2ioK
                                    }
                                })
                               (GHC.Types.[] @ GeneralCategory)
                         }; } in
                 go_dn_i2ioJ a#1_X2hKT);
            1# ->
              case ># a#2_X2hL0 a#_a2hAX of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (case >=# a#_a2hAX 0# of {
                       __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                       1# ->
                         case <=# a#_a2hAX 29# of {
                           __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                           1# -> tagToEnum# @ GeneralCategory a#_a2hAX
                         }
                     })
                    (GHC.Types.[] @ GeneralCategory);
                1# -> GHC.Types.[] @ GeneralCategory
              }
          };
        1# ->
          case <# a#2_X2hL0 a#1_X2hKT of {
            __DEFAULT ->
              GHC.Types.:
                @ GeneralCategory
                (case >=# a#_a2hAX 0# of {
                   __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                   1# ->
                     case <=# a#_a2hAX 29# of {
                       __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                       1# -> tagToEnum# @ GeneralCategory a#_a2hAX
                     }
                 })
                (let {
                   delta_i2ioX [Dmd=<S,U>] :: Int#
                   [LclId]
                   delta_i2ioX = -# a#1_X2hKT a#_a2hAX } in
                 let {
                   y'_i2ioY [Dmd=<S,U>] :: Int#
                   [LclId]
                   y'_i2ioY = -# a#2_X2hL0 delta_i2ioX } in
                 letrec {
                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [GeneralCategory]
                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                   go_up_i2ioZ
                     = \ (x_i2ip0 :: Int#) ->
                         case ># x_i2ip0 y'_i2ioY of {
                           __DEFAULT ->
                             GHC.Types.:
                               @ GeneralCategory
                               (case >=# x_i2ip0 0# of {
                                  __DEFAULT -> GHC.Unicode.$wlvl x_i2ip0;
                                  1# ->
                                    case <=# x_i2ip0 29# of {
                                      __DEFAULT -> GHC.Unicode.$wlvl x_i2ip0;
                                      1# -> tagToEnum# @ GeneralCategory x_i2ip0
                                    }
                                })
                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                           1# ->
                             GHC.Types.:
                               @ GeneralCategory
                               (case >=# x_i2ip0 0# of {
                                  __DEFAULT -> GHC.Unicode.$wlvl x_i2ip0;
                                  1# ->
                                    case <=# x_i2ip0 29# of {
                                      __DEFAULT -> GHC.Unicode.$wlvl x_i2ip0;
                                      1# -> tagToEnum# @ GeneralCategory x_i2ip0
                                    }
                                })
                               (GHC.Types.[] @ GeneralCategory)
                         }; } in
                 go_up_i2ioZ a#1_X2hKT);
            1# ->
              case <# a#2_X2hL0 a#_a2hAX of {
                __DEFAULT ->
                  GHC.Types.:
                    @ GeneralCategory
                    (case >=# a#_a2hAX 0# of {
                       __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                       1# ->
                         case <=# a#_a2hAX 29# of {
                           __DEFAULT -> GHC.Unicode.$wlvl a#_a2hAX;
                           1# -> tagToEnum# @ GeneralCategory a#_a2hAX
                         }
                     })
                    (GHC.Types.[] @ GeneralCategory);
                1# -> GHC.Types.[] @ GeneralCategory
              }
          }
      }
      }
      }
      }

-- RHS size: {terms: 9, types: 1, coercions: 0, joins: 0/0}
GHC.Unicode.$fEnumGeneralCategory [InlPrag=NOUSERINLINE CONLIKE]
  :: Enum GeneralCategory
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Enum.C:Enum TYPE: GeneralCategory
                       GHC.Unicode.$fEnumGeneralCategory_$csucc
                       GHC.Unicode.$fEnumGeneralCategory_$cpred
                       GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
                       GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
                       GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
                       GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
                       GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
                       GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo]
GHC.Unicode.$fEnumGeneralCategory
  = GHC.Enum.C:Enum
      @ GeneralCategory
      GHC.Unicode.$fEnumGeneralCategory_$csucc
      GHC.Unicode.$fEnumGeneralCategory_$cpred
      GHC.Unicode.$fEnumGeneralCategory_$ctoEnum
      GHC.Unicode.$fEnumGeneralCategory_$cfromEnum
      GHC.Unicode.$fEnumGeneralCategory_$cenumFrom
      GHC.Unicode.$fEnumGeneralCategory_$cenumFromThen
      GHC.Unicode.$fEnumGeneralCategory_$cenumFromTo
      GHC.Unicode.$fEnumGeneralCategory_$cenumFromThenTo

-- RHS size: {terms: 25, types: 15, coercions: 0, joins: 0/0}
GHC.Unicode.$wgeneralCategory [InlPrag=NOUSERINLINE[0]]
  :: Char# -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 103 0}]
GHC.Unicode.$wgeneralCategory
  = \ (ww_s2iDX :: Char#) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOh
             (ord# ww_s2iDX) realWorld#
      of
      { (# ds_d2hOg, ds1_d2hOf #) ->
      case >=# ds1_d2hOf 0# of {
        __DEFAULT -> GHC.Unicode.$wlvl ds1_d2hOf;
        1# ->
          case <=# ds1_d2hOf 29# of {
            __DEFAULT -> GHC.Unicode.$wlvl ds1_d2hOf;
            1# -> tagToEnum# @ GeneralCategory ds1_d2hOf
          }
      }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
generalCategory [InlPrag=NOUSERINLINE[0]]
  :: Char -> GeneralCategory
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iDU [Occ=Once!] :: Char) ->
                 case w_s2iDU of { C# ww1_s2iDX [Occ=Once] ->
                 GHC.Unicode.$wgeneralCategory ww1_s2iDX
                 }}]
generalCategory
  = \ (w_s2iDU :: Char) ->
      case w_s2iDU of { C# ww1_s2iDX ->
      GHC.Unicode.$wgeneralCategory ww1_s2iDX
      }

-- RHS size: {terms: 43, types: 17, coercions: 0, joins: 0/0}
GHC.Unicode.$wisPunctuation [InlPrag=NOUSERINLINE[0]]
  :: Char# -> Bool
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 182 80}]
GHC.Unicode.$wisPunctuation
  = \ (ww_s2iE3 :: Char#) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOh
             (ord# ww_s2iE3) realWorld#
      of
      { (# ds_d2hOg, ds1_d2hOf #) ->
      case >=# ds1_d2hOf 0# of {
        __DEFAULT -> case GHC.Unicode.$wlvl ds1_d2hOf of wild1_00 { };
        1# ->
          case <=# ds1_d2hOf 29# of {
            __DEFAULT -> case GHC.Unicode.$wlvl ds1_d2hOf of wild1_00 { };
            1# ->
              case ds1_d2hOf of {
                __DEFAULT -> GHC.Types.False;
                11# -> GHC.Types.True;
                12# -> GHC.Types.True;
                13# -> GHC.Types.True;
                14# -> GHC.Types.True;
                15# -> GHC.Types.True;
                16# -> GHC.Types.True;
                17# -> GHC.Types.True
              }
          }
      }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
isPunctuation [InlPrag=NOUSERINLINE[0]] :: Char -> Bool
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iE0 [Occ=Once!] :: Char) ->
                 case w_s2iE0 of { C# ww1_s2iE3 [Occ=Once] ->
                 GHC.Unicode.$wisPunctuation ww1_s2iE3
                 }}]
isPunctuation
  = \ (w_s2iE0 :: Char) ->
      case w_s2iE0 of { C# ww1_s2iE3 ->
      GHC.Unicode.$wisPunctuation ww1_s2iE3
      }

-- RHS size: {terms: 37, types: 17, coercions: 0, joins: 0/0}
GHC.Unicode.$wisSymbol [InlPrag=NOUSERINLINE[0]] :: Char# -> Bool
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 152 50}]
GHC.Unicode.$wisSymbol
  = \ (ww_s2iE9 :: Char#) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOh
             (ord# ww_s2iE9) realWorld#
      of
      { (# ds_d2hOg, ds1_d2hOf #) ->
      case >=# ds1_d2hOf 0# of {
        __DEFAULT -> case GHC.Unicode.$wlvl ds1_d2hOf of wild1_00 { };
        1# ->
          case <=# ds1_d2hOf 29# of {
            __DEFAULT -> case GHC.Unicode.$wlvl ds1_d2hOf of wild1_00 { };
            1# ->
              case ds1_d2hOf of {
                __DEFAULT -> GHC.Types.False;
                18# -> GHC.Types.True;
                19# -> GHC.Types.True;
                20# -> GHC.Types.True;
                21# -> GHC.Types.True
              }
          }
      }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
isSymbol [InlPrag=NOUSERINLINE[0]] :: Char -> Bool
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iE6 [Occ=Once!] :: Char) ->
                 case w_s2iE6 of { C# ww1_s2iE9 [Occ=Once] ->
                 GHC.Unicode.$wisSymbol ww1_s2iE9
                 }}]
isSymbol
  = \ (w_s2iE6 :: Char) ->
      case w_s2iE6 of { C# ww1_s2iE9 ->
      GHC.Unicode.$wisSymbol ww1_s2iE9
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isUpper :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvB [Occ=Once!] :: Char) ->
                 case c_a2hvB of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOJ
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOH [Occ=Once!] #) ->
                 case ds1_d2hOH of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isUpper
  = \ (c_a2hvB :: Char) ->
      case c_a2hvB of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOJ
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hOI, ds1_d2hOH #) ->
      case ds1_d2hOH of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isPrint :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvA [Occ=Once!] :: Char) ->
                 case c_a2hvA of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOX
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hOV [Occ=Once!] #) ->
                 case ds1_d2hOV of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isPrint
  = \ (c_a2hvA :: Char) ->
      case c_a2hvA of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hOX
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hOW, ds1_d2hOV #) ->
      case ds1_d2hOV of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isControl :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvz [Occ=Once!] :: Char) ->
                 case c_a2hvz of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPb
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hP9 [Occ=Once!] #) ->
                 case ds1_d2hP9 of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isControl
  = \ (c_a2hvz :: Char) ->
      case c_a2hvz of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPb
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hPa, ds1_d2hP9 #) ->
      case ds1_d2hP9 of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isAlphaNum :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvy [Occ=Once!] :: Char) ->
                 case c_a2hvy of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPi
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hPg [Occ=Once!] #) ->
                 case ds1_d2hPg of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isAlphaNum
  = \ (c_a2hvy :: Char) ->
      case c_a2hvy of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPi
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hPh, ds1_d2hPg #) ->
      case ds1_d2hPg of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
isAlpha :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a2hvx [Occ=Once!] :: Char) ->
                 case c_a2hvx of { C# c#_i1MwB [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPp
                        (ord# c#_i1MwB) realWorld#
                 of
                 { (# _ [Occ=Dead], ds1_d2hPn [Occ=Once!] #) ->
                 case ds1_d2hPn of {
                   __DEFAULT -> GHC.Types.True;
                   0# -> GHC.Types.False
                 }
                 }
                 }}]
isAlpha
  = \ (c_a2hvx :: Char) ->
      case c_a2hvx of { C# c#_i1MwB ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hPp
             (ord# c#_i1MwB) realWorld#
      of
      { (# ds_d2hPo, ds1_d2hPn #) ->
      case ds1_d2hPn of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 43, types: 18, coercions: 0, joins: 0/1}
GHC.Unicode.$wisSpace [InlPrag=NOUSERINLINE[0]] :: Char# -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 123 60}]
GHC.Unicode.$wisSpace
  = \ (ww_s2iEf :: Char#) ->
      let {
        x_aRFM [Dmd=<S,U>] :: Word#
        [LclId]
        x_aRFM = int2Word# (ord# ww_s2iEf) } in
      case leWord# x_aRFM 887## of {
        __DEFAULT ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_d2hP4
                 (ord# ww_s2iEf) realWorld#
          of
          { (# ds_d2hP3, ds1_d2hP2 #) ->
          case ds1_d2hP2 of {
            __DEFAULT -> GHC.Types.True;
            0# -> GHC.Types.False
          }
          };
        1# ->
          case x_aRFM of wild_X7V {
            __DEFAULT ->
              case leWord# (minusWord# wild_X7V 9##) 4## of {
                __DEFAULT ->
                  case wild_X7V of {
                    __DEFAULT -> GHC.Types.False;
                    160## -> GHC.Types.True
                  };
                1# -> GHC.Types.True
              };
            32## -> GHC.Types.True
          }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
isSpace [InlPrag=NOUSERINLINE[0]] :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s2iEc [Occ=Once!] :: Char) ->
                 case w_s2iEc of { C# ww1_s2iEf [Occ=Once] ->
                 GHC.Unicode.$wisSpace ww1_s2iEf
                 }}]
isSpace
  = \ (w_s2iEc :: Char) ->
      case w_s2iEc of { C# ww1_s2iEf -> GHC.Unicode.$wisSpace ww1_s2iEf }


