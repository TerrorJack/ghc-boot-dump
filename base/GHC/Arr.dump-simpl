
==================== Tidy Core ====================
2018-03-16 15:56:35.148802019 UTC

Result size of Tidy Core
  = {terms: 9,679, types: 14,783, coercions: 195, joins: 58/168}

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
GHC.Arr.$p1Ix :: forall a. Ix a => Ord a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),U(U,A,A,A,A,A,A)>,
 RULES: Built in rule for GHC.Arr.$p1Ix: "Class op $p1Ix"]
GHC.Arr.$p1Ix
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B2
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
range :: forall a. Ix a => (a, a) -> [a]
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),U(A,U,A,A,A,A,A)>,
 RULES: Built in rule for range: "Class op range"]
range
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B3
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
index :: forall a. Ix a => (a, a) -> a -> Int
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),U(A,A,U,A,A,A,A)>,
 RULES: Built in rule for index: "Class op index"]
index
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B4
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
unsafeIndex :: forall a. Ix a => (a, a) -> a -> Int
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),U(A,A,A,U,A,A,A)>,
 RULES: Built in rule for unsafeIndex: "Class op unsafeIndex"]
unsafeIndex
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B5
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
inRange :: forall a. Ix a => (a, a) -> a -> Bool
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),U(A,A,A,A,U,A,A)>,
 RULES: Built in rule for inRange: "Class op inRange"]
inRange
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B6
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
rangeSize :: forall a. Ix a => (a, a) -> Int
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),U(A,A,A,A,A,U,A)>,
 RULES: Built in rule for rangeSize: "Class op rangeSize"]
rangeSize
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B7
      }

-- RHS size: {terms: 6, types: 36, coercions: 0, joins: 0/0}
unsafeRangeSize :: forall a. Ix a => (a, a) -> Int
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),U(A,A,A,A,A,A,U)>,
 RULES: Built in rule for unsafeRangeSize: "Class op unsafeRangeSize"]
unsafeRangeSize
  = \ (@ a_a1KRg) (v_B1 :: Ix a_a1KRg) ->
      case v_B1 of v_B1
      { GHC.Arr.C:Ix v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 v_B8 ->
      v_B8
      }

-- RHS size: {terms: 21, types: 19, coercions: 0, joins: 0/0}
GHC.Arr.$WSTArray [InlPrag=INLINE[2]]
  :: forall s i e.
     i -> i -> Int -> MutableArray# s e -> STArray s i e
[GblId[DataConWrapper],
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ s_a1KRb)
                 (@ i_a1KRc)
                 (@ e_a1KRd)
                 (dt_a1LcF [Occ=Once] :: i_a1KRc[sk:1])
                 (dt_a1LcG [Occ=Once] :: i_a1KRc[sk:1])
                 (dt_a1LcH [Occ=Once!] :: Int)
                 (dt_a1LcI [Occ=Once]
                    :: MutableArray# s_a1KRb[sk:1] e_a1KRd[sk:1]) ->
                 case dt_a1LcF of dt_X1LcN { __DEFAULT ->
                 case dt_a1LcG of dt_X1LcP { __DEFAULT ->
                 case dt_a1LcH of { I# dt_a1LcJ [Occ=Once] ->
                 GHC.Arr.STArray
                   @ s_a1KRb @ i_a1KRc @ e_a1KRd dt_X1LcN dt_X1LcP dt_a1LcJ dt_a1LcI
                 }
                 }
                 }}]
GHC.Arr.$WSTArray
  = \ (@ s_a1KRb)
      (@ i_a1KRc)
      (@ e_a1KRd)
      (dt_a1LcF [Occ=Once] :: i_a1KRc[sk:1])
      (dt_a1LcG [Occ=Once] :: i_a1KRc[sk:1])
      (dt_a1LcH [Occ=Once!] :: Int)
      (dt_a1LcI [Occ=Once]
         :: MutableArray# s_a1KRb[sk:1] e_a1KRd[sk:1]) ->
      case dt_a1LcF of dt_X1LcN { __DEFAULT ->
      case dt_a1LcG of dt_X1LcP { __DEFAULT ->
      case dt_a1LcH of { I# dt_a1LcJ [Occ=Once] ->
      GHC.Arr.STArray
        @ s_a1KRb @ i_a1KRc @ e_a1KRd dt_X1LcN dt_X1LcP dt_a1LcJ dt_a1LcI
      }
      }
      }

-- RHS size: {terms: 20, types: 15, coercions: 0, joins: 0/0}
GHC.Arr.$WArray [InlPrag=INLINE[2]]
  :: forall i e. i -> i -> Int -> Array# e -> Array i e
[GblId[DataConWrapper],
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_a1KRe)
                 (@ e_a1KRf)
                 (dt_a1L58 [Occ=Once] :: i_a1KRe[sk:1])
                 (dt_a1L59 [Occ=Once] :: i_a1KRe[sk:1])
                 (dt_a1L5a [Occ=Once!] :: Int)
                 (dt_a1L5b [Occ=Once] :: Array# e_a1KRf[sk:1]) ->
                 case dt_a1L58 of dt_X1L5f { __DEFAULT ->
                 case dt_a1L59 of dt_X1L5h { __DEFAULT ->
                 case dt_a1L5a of { I# dt_a1L5c [Occ=Once] ->
                 GHC.Arr.Array
                   @ i_a1KRe @ e_a1KRf dt_X1L5f dt_X1L5h dt_a1L5c dt_a1L5b
                 }
                 }
                 }}]
GHC.Arr.$WArray
  = \ (@ i_a1KRe)
      (@ e_a1KRf)
      (dt_a1L58 [Occ=Once] :: i_a1KRe[sk:1])
      (dt_a1L59 [Occ=Once] :: i_a1KRe[sk:1])
      (dt_a1L5a [Occ=Once!] :: Int)
      (dt_a1L5b [Occ=Once] :: Array# e_a1KRf[sk:1]) ->
      case dt_a1L58 of dt_X1L5f { __DEFAULT ->
      case dt_a1L59 of dt_X1L5h { __DEFAULT ->
      case dt_a1L5a of { I# dt_a1L5c [Occ=Once] ->
      GHC.Arr.Array
        @ i_a1KRe @ e_a1KRf dt_X1L5f dt_X1L5h dt_a1L5c dt_a1L5b
      }
      }
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt1 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$fIxInt1 = GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
f_r1Xus :: Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
f_r1Xus = GHC.Types.C# ' '#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r1Xut :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r1Xut = ")"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_r1Xuu :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_r1Xuu = " not in range [0.."#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl2_r1Xuv :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl2_r1Xuv = "Error in array index; "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r1Xuw :: [Char]
[GblId]
lvl3_r1Xuw = unpackCString# lvl_r1Xut

-- RHS size: {terms: 28, types: 28, coercions: 0, joins: 0/0}
GHC.Arr.$wbadSafeIndex [InlPrag=NOUSERINLINE[0]]
  :: Int# -> Int# -> Int
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
GHC.Arr.$wbadSafeIndex
  = \ (ww_s1T9u :: Int#) (ww1_s1T9y :: Int#) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ Int
        (unpackAppendCString#
           lvl2_r1Xuv
           (case GHC.Show.$wshowSignedInt 0# ww_s1T9u (GHC.Types.[] @ Char) of
            { (# ww5_i1MP4, ww6_i1MP5 #) ->
            ++
              @ Char
              (GHC.Types.: @ Char ww5_i1MP4 ww6_i1MP5)
              (unpackAppendCString#
                 lvl1_r1Xuu
                 (case GHC.Show.$wshowSignedInt 0# ww1_s1T9y (GHC.Types.[] @ Char)
                  of
                  { (# ww3_X1MUX, ww7_X1MUZ #) ->
                  ++ @ Char (GHC.Types.: @ Char ww3_X1MUX ww7_X1MUZ) lvl3_r1Xuw
                  }))
            }))

-- RHS size: {terms: 11, types: 6, coercions: 0, joins: 0/0}
badSafeIndex [InlPrag=NOUSERINLINE[0]] :: Int -> Int -> Int
[GblId,
 Arity=2,
 Str=<B,1*U(U)><B,1*U(U)>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1T9q [Occ=Once!] :: Int)
                 (w1_s1T9r [Occ=Once!] :: Int) ->
                 case w_s1T9q of { I# ww1_s1T9u [Occ=Once] ->
                 case w1_s1T9r of { I# ww3_s1T9y [Occ=Once] ->
                 GHC.Arr.$wbadSafeIndex ww1_s1T9u ww3_s1T9y
                 }
                 }}]
badSafeIndex
  = \ (w_s1T9q :: Int) (w1_s1T9r :: Int) ->
      case w_s1T9q of { I# ww1_s1T9u ->
      case w1_s1T9r of { I# ww3_s1T9y ->
      GHC.Arr.$wbadSafeIndex ww1_s1T9u ww3_s1T9y
      }
      }

-- RHS size: {terms: 66, types: 27, coercions: 0, joins: 0/0}
GHC.Arr.$w$s$fIx(,,) [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int -> Int -> Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><L,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 20 20 0 20 20 0 20 20] 167 50}]
GHC.Arr.$w$s$fIx(,,)
  = \ (ww_s1T9L :: Int#)
      (ww1_s1T9N :: Int)
      (ww2_s1T9O :: Int)
      (ww3_s1T9W :: Int#)
      (ww4_s1T9Y :: Int)
      (ww5_s1T9Z :: Int)
      (ww6_s1Ta7 :: Int#)
      (ww7_s1Ta9 :: Int)
      (ww8_s1Taa :: Int) ->
      case <=# ww_s1T9L ww6_s1Ta7 of {
        __DEFAULT -> GHC.Types.False;
        1# ->
          case <=# ww6_s1Ta7 ww3_s1T9W of {
            __DEFAULT -> GHC.Types.False;
            1# ->
              case ww1_s1T9N of { I# m_X1L7H ->
              case ww4_s1T9Y of { I# n_X1L7N ->
              case ww7_s1Ta9 of { I# i_X1L7T ->
              case <=# m_X1L7H i_X1L7T of {
                __DEFAULT -> GHC.Types.False;
                1# ->
                  case <=# i_X1L7T n_X1L7N of {
                    __DEFAULT -> GHC.Types.False;
                    1# ->
                      case ww2_s1T9O of { I# m1_X1L7Y ->
                      case ww5_s1T9Z of { I# n1_X1L84 ->
                      case ww8_s1Taa of { I# i1_X1L8a ->
                      case <=# m1_X1L7Y i1_X1L8a of {
                        __DEFAULT -> GHC.Types.False;
                        1# -> tagToEnum# @ Bool (<=# i1_X1L8a n1_X1L84)
                      }
                      }
                      }
                      }
                  }
              }
              }
              }
              }
          }
      }

-- RHS size: {terms: 33, types: 57, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)1 [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int, Int), (Int, Int, Int)) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S(S)LL)S(S(S)LL)),1*U(1*U(1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U)))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1T9B [Occ=Once!] :: ((Int, Int, Int), (Int, Int, Int)))
                 (w1_s1T9C [Occ=Once!] :: (Int, Int, Int)) ->
                 case w_s1T9B of { (ww1_s1T9F [Occ=Once!], ww2_s1T9Q [Occ=Once!]) ->
                 case ww1_s1T9F of
                 { (ww4_s1T9I [Occ=Once!], ww5_s1T9N [Occ=Once],
                    ww6_s1T9O [Occ=Once]) ->
                 case ww4_s1T9I of { I# ww8_s1T9L [Occ=Once] ->
                 case ww2_s1T9Q of
                 { (ww10_s1T9T [Occ=Once!], ww11_s1T9Y [Occ=Once],
                    ww12_s1T9Z [Occ=Once]) ->
                 case ww10_s1T9T of { I# ww14_s1T9W [Occ=Once] ->
                 case w1_s1T9C of
                 { (ww16_s1Ta4 [Occ=Once!], ww17_s1Ta9 [Occ=Once],
                    ww18_s1Taa [Occ=Once]) ->
                 case ww16_s1Ta4 of { I# ww20_s1Ta7 [Occ=Once] ->
                 GHC.Arr.$w$s$fIx(,,)
                   ww8_s1T9L
                   ww5_s1T9N
                   ww6_s1T9O
                   ww14_s1T9W
                   ww11_s1T9Y
                   ww12_s1T9Z
                   ww20_s1Ta7
                   ww17_s1Ta9
                   ww18_s1Taa
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)1
  = \ (w_s1T9B :: ((Int, Int, Int), (Int, Int, Int)))
      (w1_s1T9C :: (Int, Int, Int)) ->
      case w_s1T9B of { (ww1_s1T9F, ww2_s1T9Q) ->
      case ww1_s1T9F of { (ww4_s1T9I, ww5_s1T9N, ww6_s1T9O) ->
      case ww4_s1T9I of { I# ww8_s1T9L ->
      case ww2_s1T9Q of { (ww10_s1T9T, ww11_s1T9Y, ww12_s1T9Z) ->
      case ww10_s1T9T of { I# ww14_s1T9W ->
      case w1_s1T9C of { (ww16_s1Ta4, ww17_s1Ta9, ww18_s1Taa) ->
      case ww16_s1Ta4 of { I# ww20_s1Ta7 ->
      GHC.Arr.$w$s$fIx(,,)
        ww8_s1T9L
        ww5_s1T9N
        ww6_s1T9O
        ww14_s1T9W
        ww11_s1T9Y
        ww12_s1T9Z
        ww20_s1Ta7
        ww17_s1Ta9
        ww18_s1Taa
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 75, types: 55, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int, Int), (Int, Int, Int)) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)LL)S(S(S)LL)),1*U(1*U(1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U)))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tad [Occ=Once!]
                    :: ((Int, Int, Int), (Int, Int, Int))) ->
                 case w_s1Tad of { (ww1_s1Tag [Occ=Once!], ww2_s1Tar [Occ=Once!]) ->
                 case ww1_s1Tag of
                 { (ww4_s1Taj [Occ=Once!], ww5_s1Tao [Occ=Once!],
                    ww6_s1Tap [Occ=Once!]) ->
                 case ww4_s1Taj of { I# ww8_s1Tam ->
                 case ww2_s1Tar of
                 { (ww10_s1Tau [Occ=Once!], ww11_s1Taz [Occ=Once!],
                    ww12_s1TaA [Occ=Once!]) ->
                 case ww10_s1Tau of { I# ww14_s1Tax ->
                 case <=# ww8_s1Tam ww14_s1Tax of {
                   __DEFAULT -> GHC.Types.I# 0#;
                   1# ->
                     case ww5_s1Tao of { I# m_X1L7o ->
                     case ww11_s1Taz of { I# n_X1L7u ->
                     case <=# m_X1L7o n_X1L7u of {
                       __DEFAULT -> GHC.Types.I# 0#;
                       1# ->
                         case ww6_s1Tap of { I# m1_X1L7A ->
                         case ww12_s1TaA of { I# n1_X1L7G ->
                         case <=# m1_X1L7A n1_X1L7G of {
                           __DEFAULT -> GHC.Types.I# 0#;
                           1# ->
                             GHC.Types.I#
                               (+#
                                  (+#
                                     (-# n1_X1L7G m1_X1L7A)
                                     (*#
                                        (+# (-# n1_X1L7G m1_X1L7A) 1#)
                                        (+#
                                           (-# n_X1L7u m_X1L7o)
                                           (*#
                                              (+# (-# n_X1L7u m_X1L7o) 1#)
                                              (-# ww14_s1Tax ww8_s1Tam)))))
                                  1#)
                         }
                         }
                         }
                     }
                     }
                     }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$s$crangeSize
  = \ (w_s1Tad :: ((Int, Int, Int), (Int, Int, Int))) ->
      case w_s1Tad of { (ww1_s1Tag, ww2_s1Tar) ->
      case ww1_s1Tag of { (ww4_s1Taj, ww5_s1Tao, ww6_s1Tap) ->
      case ww4_s1Taj of { I# ww8_s1Tam ->
      case ww2_s1Tar of { (ww10_s1Tau, ww11_s1Taz, ww12_s1TaA) ->
      case ww10_s1Tau of { I# ww14_s1Tax ->
      case <=# ww8_s1Tam ww14_s1Tax of {
        __DEFAULT -> GHC.Arr.$fIxInt1;
        1# ->
          case ww5_s1Tao of { I# m_X1L7o ->
          case ww11_s1Taz of { I# n_X1L7u ->
          case <=# m_X1L7o n_X1L7u of {
            __DEFAULT -> GHC.Arr.$fIxInt1;
            1# ->
              case ww6_s1Tap of { I# m1_X1L7A ->
              case ww12_s1TaA of { I# n1_X1L7G ->
              case <=# m1_X1L7A n1_X1L7G of {
                __DEFAULT -> GHC.Arr.$fIxInt1;
                1# ->
                  GHC.Types.I#
                    (+#
                       (+#
                          (-# n1_X1L7G m1_X1L7A)
                          (*#
                             (+# (-# n1_X1L7G m1_X1L7A) 1#)
                             (+#
                                (-# n_X1L7u m_X1L7o)
                                (*# (+# (-# n_X1L7u m_X1L7o) 1#) (-# ww14_s1Tax ww8_s1Tam)))))
                       1#)
              }
              }
              }
          }
          }
          }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 54, types: 52, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int, Int), (Int, Int, Int)) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)S(S)S(S))S(S(S)S(S)S(S))),1*U(1*U(1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U)))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TaH [Occ=Once!]
                    :: ((Int, Int, Int), (Int, Int, Int))) ->
                 case w_s1TaH of { (ww1_s1TaK [Occ=Once!], ww2_s1Tb3 [Occ=Once!]) ->
                 case ww1_s1TaK of
                 { (ww4_s1TaN [Occ=Once!], ww5_s1TaS [Occ=Once!],
                    ww6_s1TaX [Occ=Once!]) ->
                 case ww4_s1TaN of { I# ww8_s1TaQ [Occ=Once] ->
                 case ww5_s1TaS of { I# ww10_s1TaV ->
                 case ww6_s1TaX of { I# ww12_s1Tb0 ->
                 case ww2_s1Tb3 of
                 { (ww14_s1Tb6 [Occ=Once!], ww15_s1Tbb [Occ=Once!],
                    ww16_s1Tbg [Occ=Once!]) ->
                 case ww14_s1Tb6 of { I# ww18_s1Tb9 [Occ=Once] ->
                 case ww15_s1Tbb of { I# ww20_s1Tbe ->
                 case ww16_s1Tbg of { I# ww22_s1Tbj ->
                 GHC.Types.I#
                   (+#
                      (+#
                         (-# ww22_s1Tbj ww12_s1Tb0)
                         (*#
                            (+# (-# ww22_s1Tbj ww12_s1Tb0) 1#)
                            (+#
                               (-# ww20_s1Tbe ww10_s1TaV)
                               (*#
                                  (+# (-# ww20_s1Tbe ww10_s1TaV) 1#) (-# ww18_s1Tb9 ww8_s1TaQ)))))
                      1#)
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$s$cunsafeRangeSize
  = \ (w_s1TaH :: ((Int, Int, Int), (Int, Int, Int))) ->
      case w_s1TaH of { (ww1_s1TaK, ww2_s1Tb3) ->
      case ww1_s1TaK of { (ww4_s1TaN, ww5_s1TaS, ww6_s1TaX) ->
      case ww4_s1TaN of { I# ww8_s1TaQ ->
      case ww5_s1TaS of { I# ww10_s1TaV ->
      case ww6_s1TaX of { I# ww12_s1Tb0 ->
      case ww2_s1Tb3 of { (ww14_s1Tb6, ww15_s1Tbb, ww16_s1Tbg) ->
      case ww14_s1Tb6 of { I# ww18_s1Tb9 ->
      case ww15_s1Tbb of { I# ww20_s1Tbe ->
      case ww16_s1Tbg of { I# ww22_s1Tbj ->
      GHC.Types.I#
        (+#
           (+#
              (-# ww22_s1Tbj ww12_s1Tb0)
              (*#
                 (+# (-# ww22_s1Tbj ww12_s1Tb0) 1#)
                 (+#
                    (-# ww20_s1Tbe ww10_s1TaV)
                    (*#
                       (+# (-# ww20_s1Tbe ww10_s1TaV) 1#) (-# ww18_s1Tb9 ww8_s1TaQ)))))
           1#)
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 46, types: 74, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$cinRange
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> (a1, a2, a3) -> Bool
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><S(SS),1*U(1*U(U,U,U),1*U(U,U,U))><S,1*U(U,U,U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 20 20] 230 20}]
GHC.Arr.$fIx(,,)_$cinRange
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS)
      (ds_d1Mp7
         :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
             (a1_a1LRQ, a2_a1LRR, a3_a1LRS)))
      (ds1_d1Mp8 :: (a1_a1LRQ, a2_a1LRR, a3_a1LRS)) ->
      case ds_d1Mp7 of { (ds2_d1Mpv, ds3_d1Mpw) ->
      case ds2_d1Mpv of { (l1_a1KTs, l2_a1KTt, l3_a1KTu) ->
      case ds3_d1Mpw of { (u1_a1KTv, u2_a1KTw, u3_a1KTx) ->
      case ds1_d1Mp8 of { (i1_a1KTy, i2_a1KTz, i3_a1KTA) ->
      case inRange @ a1_a1LRQ $dIx_a1LRT (l1_a1KTs, u1_a1KTv) i1_a1KTy
      of {
        False -> GHC.Types.False;
        True ->
          case inRange @ a2_a1LRR $dIx1_a1LRU (l2_a1KTt, u2_a1KTw) i2_a1KTz
          of {
            False -> GHC.Types.False;
            True ->
              inRange @ a3_a1LRS $dIx2_a1LRV (l3_a1KTu, u3_a1KTx) i3_a1KTA
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 62, types: 67, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$cunsafeIndex [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int, Int), (Int, Int, Int)) -> (Int, Int, Int) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S(S)S(S)S(S))S(LS(S)S(S))),1*U(1*U(1*U(U),1*U(U),1*U(U)),1*U(A,1*U(U),1*U(U)))><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tcy [Occ=Once!] :: ((Int, Int, Int), (Int, Int, Int)))
                 (w1_s1Tcz [Occ=Once!] :: (Int, Int, Int)) ->
                 case w_s1Tcy of { (ww1_s1TcC [Occ=Once!], ww2_s1TcV [Occ=Once!]) ->
                 case ww1_s1TcC of
                 { (ww4_s1TcF [Occ=Once!], ww5_s1TcK [Occ=Once!],
                    ww6_s1TcP [Occ=Once!]) ->
                 case ww4_s1TcF of { I# ww8_s1TcI [Occ=Once] ->
                 case ww5_s1TcK of { I# ww10_s1TcN ->
                 case ww6_s1TcP of { I# ww12_s1TcS ->
                 case ww2_s1TcV of
                 { (_ [Occ=Dead], ww15_s1TcZ [Occ=Once!], ww16_s1Td4 [Occ=Once!]) ->
                 case ww15_s1TcZ of { I# ww18_s1Td2 [Occ=Once] ->
                 case ww16_s1Td4 of { I# ww20_s1Td7 [Occ=Once] ->
                 case w1_s1Tcz of
                 { (ww22_s1Tdd [Occ=Once!], ww23_s1Tdi [Occ=Once!],
                    ww24_s1Tdn [Occ=Once!]) ->
                 case ww22_s1Tdd of { I# ww26_s1Tdg [Occ=Once] ->
                 case ww23_s1Tdi of { I# ww28_s1Tdl [Occ=Once] ->
                 case ww24_s1Tdn of { I# ww30_s1Tdq [Occ=Once] ->
                 GHC.Types.I#
                   (+#
                      (-# ww30_s1Tdq ww12_s1TcS)
                      (*#
                         (+# (-# ww20_s1Td7 ww12_s1TcS) 1#)
                         (+#
                            (-# ww28_s1Tdl ww10_s1TcN)
                            (*#
                               (+# (-# ww18_s1Td2 ww10_s1TcN) 1#) (-# ww26_s1Tdg ww8_s1TcI)))))
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$s$cunsafeIndex
  = \ (w_s1Tcy :: ((Int, Int, Int), (Int, Int, Int)))
      (w1_s1Tcz :: (Int, Int, Int)) ->
      case w_s1Tcy of { (ww1_s1TcC, ww2_s1TcV) ->
      case ww1_s1TcC of { (ww4_s1TcF, ww5_s1TcK, ww6_s1TcP) ->
      case ww4_s1TcF of { I# ww8_s1TcI ->
      case ww5_s1TcK of { I# ww10_s1TcN ->
      case ww6_s1TcP of { I# ww12_s1TcS ->
      case ww2_s1TcV of { (ww14_s1TcY, ww15_s1TcZ, ww16_s1Td4) ->
      case ww15_s1TcZ of { I# ww18_s1Td2 ->
      case ww16_s1Td4 of { I# ww20_s1Td7 ->
      case w1_s1Tcz of { (ww22_s1Tdd, ww23_s1Tdi, ww24_s1Tdn) ->
      case ww22_s1Tdd of { I# ww26_s1Tdg ->
      case ww23_s1Tdi of { I# ww28_s1Tdl ->
      case ww24_s1Tdn of { I# ww30_s1Tdq ->
      GHC.Types.I#
        (+#
           (-# ww30_s1Tdq ww12_s1TcS)
           (*#
              (+# (-# ww20_s1Td7 ww12_s1TcS) 1#)
              (+#
                 (-# ww28_s1Tdl ww10_s1TcN)
                 (*#
                    (+# (-# ww18_s1Td2 ww10_s1TcN) 1#) (-# ww26_s1Tdg ww8_s1TcI)))))
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 68, types: 88, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$cunsafeIndex
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> (a1, a2, a3) -> Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(SS),1*U(1*U(U,U,U),1*U(U,U,U))><S,1*U(U,U,U)>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 60 60 20 20] 334 20}]
GHC.Arr.$fIx(,,)_$cunsafeIndex
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS)
      (ds_d1MoG
         :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
             (a1_a1LRQ, a2_a1LRR, a3_a1LRS)))
      (ds1_d1MoH :: (a1_a1LRQ, a2_a1LRR, a3_a1LRS)) ->
      case ds_d1MoG of { (ds2_d1Mp4, ds3_d1Mp5) ->
      case ds2_d1Mp4 of { (l1_a1KTj, l2_a1KTk, l3_a1KTl) ->
      case ds3_d1Mp5 of { (u1_a1KTm, u2_a1KTn, u3_a1KTo) ->
      case ds1_d1MoH of { (i1_a1KTp, i2_a1KTq, i3_a1KTr) ->
      case unsafeIndex
             @ a3_a1LRS $dIx2_a1LRV (l3_a1KTl, u3_a1KTo) i3_a1KTr
      of
      { I# x_i1AMi ->
      case unsafeRangeSize @ a3_a1LRS $dIx2_a1LRV (l3_a1KTl, u3_a1KTo) of
      { I# x1_i1MAD ->
      case unsafeIndex
             @ a2_a1LRR $dIx1_a1LRU (l2_a1KTk, u2_a1KTn) i2_a1KTq
      of
      { I# x2_X1ATT ->
      case unsafeRangeSize @ a2_a1LRR $dIx1_a1LRU (l2_a1KTk, u2_a1KTn) of
      { I# x3_X1MIi ->
      case unsafeIndex
             @ a1_a1LRQ $dIx_a1LRT (l1_a1KTj, u1_a1KTm) i1_a1KTp
      of
      { I# y_i1MAH ->
      GHC.Types.I#
        (+# x_i1AMi (*# x1_i1MAD (+# x2_X1ATT (*# x3_X1MIi y_i1MAH))))
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 22, types: 43, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$cunsafeRangeSize
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(SS),1*U(1*U(U,U,U),U(U,U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_a1LRQ)
                 (@ a2_a1LRR)
                 (@ a3_a1LRS)
                 ($dIx_a1LRT [Occ=Once] :: Ix a1_a1LRQ)
                 ($dIx1_a1LRU [Occ=Once] :: Ix a2_a1LRR)
                 ($dIx2_a1LRV [Occ=Once] :: Ix a3_a1LRS)
                 (b_a1KRo [Occ=Once!]
                    :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
                        (a1_a1LRQ, a2_a1LRR, a3_a1LRS))) ->
                 case b_a1KRo of wild_X42 { (_ [Occ=Dead], h_a1KRq [Occ=Once]) ->
                 case GHC.Arr.$fIx(,,)_$cunsafeIndex
                        @ a1_a1LRQ
                        @ a2_a1LRR
                        @ a3_a1LRS
                        $dIx_a1LRT
                        $dIx1_a1LRU
                        $dIx2_a1LRV
                        wild_X42
                        h_a1KRq
                 of
                 { I# x_i1AMi [Occ=Once] ->
                 GHC.Types.I# (+# x_i1AMi 1#)
                 }
                 }}]
GHC.Arr.$fIx(,,)_$cunsafeRangeSize
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS)
      (b_a1KRo
         :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
             (a1_a1LRQ, a2_a1LRR, a3_a1LRS))) ->
      case b_a1KRo of wild_X42 { (_l_a1KRp, h_a1KRq) ->
      case GHC.Arr.$fIx(,,)_$cunsafeIndex
             @ a1_a1LRQ
             @ a2_a1LRR
             @ a3_a1LRS
             $dIx_a1LRT
             $dIx1_a1LRU
             $dIx2_a1LRV
             wild_X42
             h_a1KRq
      of
      { I# x_i1AMi ->
      GHC.Types.I# (+# x_i1AMi 1#)
      }
      }

-- RHS size: {terms: 47, types: 58, coercions: 0, joins: 0/3}
GHC.Arr.$w$crangeSize1 [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     a1 -> a2 -> a3 -> a1 -> a2 -> a3 -> Int#
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 211 0}]
GHC.Arr.$w$crangeSize1
  = \ (@ a1_s1Te5)
      (@ a2_s1Te6)
      (@ a3_s1Te7)
      (w_s1Te8 :: Ix a1_s1Te5)
      (w1_s1Te9 :: Ix a2_s1Te6)
      (w2_s1Tea :: Ix a3_s1Te7)
      (ww_s1Teh :: a1_s1Te5)
      (ww1_s1Tei :: a2_s1Te6)
      (ww2_s1Tej :: a3_s1Te7)
      (ww3_s1Teo :: a1_s1Te5)
      (ww4_s1Tep :: a2_s1Te6)
      (ww5_s1Teq :: a3_s1Te7) ->
      let {
        h_a1KRn [Dmd=<S,U(U,U,U)>] :: (a1_s1Te5, a2_s1Te6, a3_s1Te7)
        [LclId, Unf=OtherCon []]
        h_a1KRn = (ww3_s1Teo, ww4_s1Tep, ww5_s1Teq) } in
      let {
        _l_a1KRm [Dmd=<S,U(U,U,U)>] :: (a1_s1Te5, a2_s1Te6, a3_s1Te7)
        [LclId, Unf=OtherCon []]
        _l_a1KRm = (ww_s1Teh, ww1_s1Tei, ww2_s1Tej) } in
      let {
        wild_X43 [Dmd=<S(SS),U(U(U,U,U),U(U,U,U))>]
          :: ((a1_s1Te5, a2_s1Te6, a3_s1Te7), (a1_s1Te5, a2_s1Te6, a3_s1Te7))
        [LclId, Unf=OtherCon []]
        wild_X43 = (_l_a1KRm, h_a1KRn) } in
      case GHC.Arr.$fIx(,,)_$cinRange
             @ a1_s1Te5
             @ a2_s1Te6
             @ a3_s1Te7
             w_s1Te8
             w1_s1Te9
             w2_s1Tea
             wild_X43
             h_a1KRn
      of {
        False -> 0#;
        True ->
          case GHC.Arr.$fIx(,,)_$cunsafeIndex
                 @ a1_s1Te5
                 @ a2_s1Te6
                 @ a3_s1Te7
                 w_s1Te8
                 w1_s1Te9
                 w2_s1Tea
                 wild_X43
                 h_a1KRn
          of
          { I# x_i1AMi ->
          +# x_i1AMi 1#
          }
      }

-- RHS size: {terms: 30, types: 56, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,C(C1(U(U))),C(C1(U)),A,A)><L,U(A,A,A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><S(SS),1*U(1*U(U,U,U),1*U(U,U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_s1Te5)
                 (@ a2_s1Te6)
                 (@ a3_s1Te7)
                 (w_s1Te8 [Occ=Once] :: Ix a1_s1Te5)
                 (w1_s1Te9 [Occ=Once] :: Ix a2_s1Te6)
                 (w2_s1Tea [Occ=Once] :: Ix a3_s1Te7)
                 (w3_s1Teb [Occ=Once!]
                    :: ((a1_s1Te5, a2_s1Te6, a3_s1Te7),
                        (a1_s1Te5, a2_s1Te6, a3_s1Te7))) ->
                 case w3_s1Teb of
                 { (ww1_s1Tee [Occ=Once!], ww2_s1Tel [Occ=Once!]) ->
                 case ww1_s1Tee of
                 { (ww4_s1Teh [Occ=Once], ww5_s1Tei [Occ=Once],
                    ww6_s1Tej [Occ=Once]) ->
                 case ww2_s1Tel of
                 { (ww8_s1Teo [Occ=Once], ww9_s1Tep [Occ=Once],
                    ww10_s1Teq [Occ=Once]) ->
                 case GHC.Arr.$w$crangeSize1
                        @ a1_s1Te5
                        @ a2_s1Te6
                        @ a3_s1Te7
                        w_s1Te8
                        w1_s1Te9
                        w2_s1Tea
                        ww4_s1Teh
                        ww5_s1Tei
                        ww6_s1Tej
                        ww8_s1Teo
                        ww9_s1Tep
                        ww10_s1Teq
                 of ww11_s1Tev
                 { __DEFAULT ->
                 GHC.Types.I# ww11_s1Tev
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$crangeSize
  = \ (@ a1_s1Te5)
      (@ a2_s1Te6)
      (@ a3_s1Te7)
      (w_s1Te8 :: Ix a1_s1Te5)
      (w1_s1Te9 :: Ix a2_s1Te6)
      (w2_s1Tea :: Ix a3_s1Te7)
      (w3_s1Teb
         :: ((a1_s1Te5, a2_s1Te6, a3_s1Te7),
             (a1_s1Te5, a2_s1Te6, a3_s1Te7))) ->
      case w3_s1Teb of { (ww1_s1Tee, ww2_s1Tel) ->
      case ww1_s1Tee of { (ww4_s1Teh, ww5_s1Tei, ww6_s1Tej) ->
      case ww2_s1Tel of { (ww8_s1Teo, ww9_s1Tep, ww10_s1Teq) ->
      case GHC.Arr.$w$crangeSize1
             @ a1_s1Te5
             @ a2_s1Te6
             @ a3_s1Te7
             w_s1Te8
             w1_s1Te9
             w2_s1Tea
             ww4_s1Teh
             ww5_s1Tei
             ww6_s1Tej
             ww8_s1Teo
             ww9_s1Tep
             ww10_s1Teq
      of ww11_s1Tev
      { __DEFAULT ->
      GHC.Types.I# ww11_s1Tev
      }
      }
      }
      }

-- RHS size: {terms: 98, types: 68, coercions: 0, joins: 0/7}
GHC.Arr.$w$s$crange [InlPrag=NOUSERINLINE[0]]
  :: Int# -> Int -> Int -> Int# -> Int -> Int -> [(Int, Int, Int)]
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,U(U)><L,U(U)><S,U><L,U(U)><L,U(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 20 20 0 20 20] 439 10}]
GHC.Arr.$w$s$crange
  = \ (ww_s1TeJ :: Int#)
      (ww1_s1TeL :: Int)
      (ww2_s1TeM :: Int)
      (ww3_s1TeU :: Int#)
      (ww4_s1TeW :: Int)
      (ww5_s1TeX :: Int) ->
      case ># ww_s1TeJ ww3_s1TeU of {
        __DEFAULT ->
          letrec {
            go_i1MGC [Occ=LoopBreaker] :: Int# -> [(Int, Int, Int)]
            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
            go_i1MGC
              = \ (x_i1MGD :: Int#) ->
                  case ww1_s1TeL of { I# x1_X1MK2 ->
                  case ww4_s1TeW of { I# y_X1MKg ->
                  let {
                    n_X1MNb :: [(Int, Int, Int)]
                    [LclId]
                    n_X1MNb
                      = case ==# x_i1MGD ww3_s1TeU of {
                          __DEFAULT -> go_i1MGC (+# x_i1MGD 1#);
                          1# -> GHC.Types.[] @ (Int, Int, Int)
                        } } in
                  case ># x1_X1MK2 y_X1MKg of {
                    __DEFAULT ->
                      let {
                        ds_d1MnV :: Int
                        [LclId, Unf=OtherCon []]
                        ds_d1MnV = GHC.Types.I# x_i1MGD } in
                      letrec {
                        go1_X1MNm [Occ=LoopBreaker] :: Int# -> [(Int, Int, Int)]
                        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
                        go1_X1MNm
                          = \ (x2_X1MNo :: Int#) ->
                              case ww2_s1TeM of { I# x3_X1MK4 ->
                              case ww5_s1TeX of { I# y1_X1MKi ->
                              let {
                                n1_X1MNw :: [(Int, Int, Int)]
                                [LclId]
                                n1_X1MNw
                                  = case ==# x2_X1MNo y_X1MKg of {
                                      __DEFAULT -> go1_X1MNm (+# x2_X1MNo 1#);
                                      1# -> n_X1MNb
                                    } } in
                              case ># x3_X1MK4 y1_X1MKi of {
                                __DEFAULT ->
                                  let {
                                    ds1_d1MnX :: Int
                                    [LclId, Unf=OtherCon []]
                                    ds1_d1MnX = GHC.Types.I# x2_X1MNo } in
                                  letrec {
                                    go2_X1MNH [Occ=LoopBreaker] :: Int# -> [(Int, Int, Int)]
                                    [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
                                    go2_X1MNH
                                      = \ (x4_X1MNJ :: Int#) ->
                                          GHC.Types.:
                                            @ (Int, Int, Int)
                                            (ds_d1MnV, ds1_d1MnX, GHC.Types.I# x4_X1MNJ)
                                            (case ==# x4_X1MNJ y1_X1MKi of {
                                               __DEFAULT -> go2_X1MNH (+# x4_X1MNJ 1#);
                                               1# -> n1_X1MNw
                                             }); } in
                                  go2_X1MNH x3_X1MK4;
                                1# -> n1_X1MNw
                              }
                              }
                              }; } in
                      go1_X1MNm x1_X1MK2;
                    1# -> n_X1MNb
                  }
                  }
                  }; } in
          go_i1MGC ww_s1TeJ;
        1# -> GHC.Types.[] @ (Int, Int, Int)
      }

-- RHS size: {terms: 23, types: 44, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$crange [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int, Int), (Int, Int, Int)) -> [(Int, Int, Int)]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)LL)S(S(S)LL)),1*U(1*U(1*U(U),U(U),U(U)),1*U(1*U(U),U(U),U(U)))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TeA [Occ=Once!]
                    :: ((Int, Int, Int), (Int, Int, Int))) ->
                 case w_s1TeA of { (ww1_s1TeD [Occ=Once!], ww2_s1TeO [Occ=Once!]) ->
                 case ww1_s1TeD of
                 { (ww4_s1TeG [Occ=Once!], ww5_s1TeL [Occ=Once],
                    ww6_s1TeM [Occ=Once]) ->
                 case ww4_s1TeG of { I# ww8_s1TeJ [Occ=Once] ->
                 case ww2_s1TeO of
                 { (ww10_s1TeR [Occ=Once!], ww11_s1TeW [Occ=Once],
                    ww12_s1TeX [Occ=Once]) ->
                 case ww10_s1TeR of { I# ww14_s1TeU [Occ=Once] ->
                 GHC.Arr.$w$s$crange
                   ww8_s1TeJ ww5_s1TeL ww6_s1TeM ww14_s1TeU ww11_s1TeW ww12_s1TeX
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$s$crange
  = \ (w_s1TeA :: ((Int, Int, Int), (Int, Int, Int))) ->
      case w_s1TeA of { (ww1_s1TeD, ww2_s1TeO) ->
      case ww1_s1TeD of { (ww4_s1TeG, ww5_s1TeL, ww6_s1TeM) ->
      case ww4_s1TeG of { I# ww8_s1TeJ ->
      case ww2_s1TeO of { (ww10_s1TeR, ww11_s1TeW, ww12_s1TeX) ->
      case ww10_s1TeR of { I# ww14_s1TeU ->
      GHC.Arr.$w$s$crange
        ww8_s1TeJ ww5_s1TeL ww6_s1TeM ww14_s1TeU ww11_s1TeW ww12_s1TeX
      }
      }
      }
      }
      }

-- RHS size: {terms: 68, types: 94, coercions: 0, joins: 0/7}
GHC.Arr.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     a1 -> a2 -> a3 -> a1 -> a2 -> a3 -> [(a1, a2, a3)]
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 0 0 0 0 0 0] 420 0}]
GHC.Arr.$w$crange
  = \ (@ a1_s1Tf4)
      (@ a2_s1Tf5)
      (@ a3_s1Tf6)
      (w_s1Tf7 :: Ix a1_s1Tf4)
      (w1_s1Tf8 :: Ix a2_s1Tf5)
      (w2_s1Tf9 :: Ix a3_s1Tf6)
      (ww_s1Tfg :: a1_s1Tf4)
      (ww1_s1Tfh :: a2_s1Tf5)
      (ww2_s1Tfi :: a3_s1Tf6)
      (ww3_s1Tfn :: a1_s1Tf4)
      (ww4_s1Tfo :: a2_s1Tf5)
      (ww5_s1Tfp :: a3_s1Tf6) ->
      let {
        lvl50_s1Nzz :: [a3_s1Tf6]
        [LclId]
        lvl50_s1Nzz = range @ a3_s1Tf6 w2_s1Tf9 (ww2_s1Tfi, ww5_s1Tfp) } in
      let {
        lvl51_s1NzA :: [a2_s1Tf5]
        [LclId]
        lvl51_s1NzA = range @ a2_s1Tf5 w1_s1Tf8 (ww1_s1Tfh, ww4_s1Tfo) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker]
          :: [a1_s1Tf4] -> [(a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [a1_s1Tf4]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (a1_s1Tf4, a2_s1Tf5, a3_s1Tf6);
                : y_i1y1h ys_i1y1i ->
                  let {
                    z_X1y7F :: [(a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)]
                    [LclId]
                    z_X1y7F = go_i1y1b ys_i1y1i } in
                  letrec {
                    go1_X1y7I [Occ=LoopBreaker]
                      :: [a2_s1Tf5] -> [(a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)]
                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                    go1_X1y7I
                      = \ (ds1_X1y7K :: [a2_s1Tf5]) ->
                          case ds1_X1y7K of {
                            [] -> z_X1y7F;
                            : y1_X1y7S ys1_X1y7U ->
                              let {
                                z1_X1y7Q :: [(a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)]
                                [LclId]
                                z1_X1y7Q = go1_X1y7I ys1_X1y7U } in
                              letrec {
                                go2_X1y7T [Occ=LoopBreaker]
                                  :: [a3_s1Tf6] -> [(a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)]
                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                go2_X1y7T
                                  = \ (ds2_X1y7V :: [a3_s1Tf6]) ->
                                      case ds2_X1y7V of {
                                        [] -> z1_X1y7Q;
                                        : y2_X1y83 ys2_X1y85 ->
                                          GHC.Types.:
                                            @ (a1_s1Tf4, a2_s1Tf5, a3_s1Tf6)
                                            (y_i1y1h, y1_X1y7S, y2_X1y83)
                                            (go2_X1y7T ys2_X1y85)
                                      }; } in
                              go2_X1y7T lvl50_s1Nzz
                          }; } in
                  go1_X1y7I lvl51_s1NzA
              }; } in
      go_i1y1b (range @ a1_s1Tf4 w_s1Tf7 (ww_s1Tfg, ww3_s1Tfn))

-- RHS size: {terms: 26, types: 55, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$crange [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> [(a1, a2, a3)]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><S(SS),1*U(1*U(U,U,U),1*U(U,U,U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_s1Tf4)
                 (@ a2_s1Tf5)
                 (@ a3_s1Tf6)
                 (w_s1Tf7 [Occ=Once] :: Ix a1_s1Tf4)
                 (w1_s1Tf8 [Occ=Once] :: Ix a2_s1Tf5)
                 (w2_s1Tf9 [Occ=Once] :: Ix a3_s1Tf6)
                 (w3_s1Tfa [Occ=Once!]
                    :: ((a1_s1Tf4, a2_s1Tf5, a3_s1Tf6),
                        (a1_s1Tf4, a2_s1Tf5, a3_s1Tf6))) ->
                 case w3_s1Tfa of
                 { (ww1_s1Tfd [Occ=Once!], ww2_s1Tfk [Occ=Once!]) ->
                 case ww1_s1Tfd of
                 { (ww4_s1Tfg [Occ=Once], ww5_s1Tfh [Occ=Once],
                    ww6_s1Tfi [Occ=Once]) ->
                 case ww2_s1Tfk of
                 { (ww8_s1Tfn [Occ=Once], ww9_s1Tfo [Occ=Once],
                    ww10_s1Tfp [Occ=Once]) ->
                 GHC.Arr.$w$crange
                   @ a1_s1Tf4
                   @ a2_s1Tf5
                   @ a3_s1Tf6
                   w_s1Tf7
                   w1_s1Tf8
                   w2_s1Tf9
                   ww4_s1Tfg
                   ww5_s1Tfh
                   ww6_s1Tfi
                   ww8_s1Tfn
                   ww9_s1Tfo
                   ww10_s1Tfp
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$crange
  = \ (@ a1_s1Tf4)
      (@ a2_s1Tf5)
      (@ a3_s1Tf6)
      (w_s1Tf7 :: Ix a1_s1Tf4)
      (w1_s1Tf8 :: Ix a2_s1Tf5)
      (w2_s1Tf9 :: Ix a3_s1Tf6)
      (w3_s1Tfa
         :: ((a1_s1Tf4, a2_s1Tf5, a3_s1Tf6),
             (a1_s1Tf4, a2_s1Tf5, a3_s1Tf6))) ->
      case w3_s1Tfa of { (ww1_s1Tfd, ww2_s1Tfk) ->
      case ww1_s1Tfd of { (ww4_s1Tfg, ww5_s1Tfh, ww6_s1Tfi) ->
      case ww2_s1Tfk of { (ww8_s1Tfn, ww9_s1Tfo, ww10_s1Tfp) ->
      GHC.Arr.$w$crange
        @ a1_s1Tf4
        @ a2_s1Tf5
        @ a3_s1Tf6
        w_s1Tf7
        w1_s1Tf8
        w2_s1Tf9
        ww4_s1Tfg
        ww5_s1Tfh
        ww6_s1Tfi
        ww8_s1Tfn
        ww9_s1Tfo
        ww10_s1Tfp
      }
      }
      }

-- RHS size: {terms: 52, types: 40, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int), (Int, Int)) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)L)S(S(S)L)),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tft [Occ=Once!] :: ((Int, Int), (Int, Int))) ->
                 case w_s1Tft of { (ww1_s1Tfw [Occ=Once!], ww2_s1TfG [Occ=Once!]) ->
                 case ww1_s1Tfw of
                 { (ww4_s1Tfz [Occ=Once!], ww5_s1TfE [Occ=Once!]) ->
                 case ww4_s1Tfz of { I# ww7_s1TfC ->
                 case ww2_s1TfG of
                 { (ww9_s1TfJ [Occ=Once!], ww10_s1TfO [Occ=Once!]) ->
                 case ww9_s1TfJ of { I# ww12_s1TfM ->
                 case <=# ww7_s1TfC ww12_s1TfM of {
                   __DEFAULT -> GHC.Types.I# 0#;
                   1# ->
                     case ww5_s1TfE of { I# m_X1L6U ->
                     case ww10_s1TfO of { I# n_X1L70 ->
                     case <=# m_X1L6U n_X1L70 of {
                       __DEFAULT -> GHC.Types.I# 0#;
                       1# ->
                         GHC.Types.I#
                           (+#
                              (+#
                                 (*# (-# ww12_s1TfM ww7_s1TfC) (+# (-# n_X1L70 m_X1L6U) 1#))
                                 (-# n_X1L70 m_X1L6U))
                              1#)
                     }
                     }
                     }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$crangeSize
  = \ (w_s1Tft :: ((Int, Int), (Int, Int))) ->
      case w_s1Tft of { (ww1_s1Tfw, ww2_s1TfG) ->
      case ww1_s1Tfw of { (ww4_s1Tfz, ww5_s1TfE) ->
      case ww4_s1Tfz of { I# ww7_s1TfC ->
      case ww2_s1TfG of { (ww9_s1TfJ, ww10_s1TfO) ->
      case ww9_s1TfJ of { I# ww12_s1TfM ->
      case <=# ww7_s1TfC ww12_s1TfM of {
        __DEFAULT -> GHC.Arr.$fIxInt1;
        1# ->
          case ww5_s1TfE of { I# m_X1L6U ->
          case ww10_s1TfO of { I# n_X1L70 ->
          case <=# m_X1L6U n_X1L70 of {
            __DEFAULT -> GHC.Arr.$fIxInt1;
            1# ->
              GHC.Types.I#
                (+#
                   (+#
                      (*# (-# ww12_s1TfM ww7_s1TfC) (+# (-# n_X1L70 m_X1L6U) 1#))
                      (-# n_X1L70 m_X1L6U))
                   1#)
          }
          }
          }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 58, types: 35, coercions: 0, joins: 0/0}
GHC.Arr.$w$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Ix b) => a -> b -> a -> b -> Int#
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><L,U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,1*C1(U(U)))><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 90 0 0 0 0] 313 0}]
GHC.Arr.$w$crangeSize
  = \ (@ a_s1TfV)
      (@ b_s1TfW)
      (w_s1TfX :: Ix a_s1TfV)
      (w1_s1TfY :: Ix b_s1TfW)
      (ww_s1Tg5 :: a_s1TfV)
      (ww1_s1Tg6 :: b_s1TfW)
      (ww2_s1Tgb :: a_s1TfV)
      (ww3_s1Tgc :: b_s1TfW) ->
      case inRange @ a_s1TfV w_s1TfX (ww_s1Tg5, ww2_s1Tgb) ww2_s1Tgb of {
        False -> 0#;
        True ->
          case inRange @ b_s1TfW w1_s1TfY (ww1_s1Tg6, ww3_s1Tgc) ww3_s1Tgc
          of {
            False -> 0#;
            True ->
              case unsafeIndex @ a_s1TfV w_s1TfX (ww_s1Tg5, ww2_s1Tgb) ww2_s1Tgb
              of
              { I# x_i1MAD ->
              case unsafeRangeSize @ b_s1TfW w1_s1TfY (ww1_s1Tg6, ww3_s1Tgc) of
              { I# y_i1MAH ->
              case unsafeIndex
                     @ b_s1TfW w1_s1TfY (ww1_s1Tg6, ww3_s1Tgc) ww3_s1Tgc
              of
              { I# y1_i1AMm ->
              +# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm) 1#
              }
              }
              }
          }
      }

-- RHS size: {terms: 25, types: 41, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,C(C1(U(U))),C(C1(U)),A,A)><L,U(A,A,A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><S(SS),1*U(1*U(U,U),1*U(U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1TfV)
                 (@ b_s1TfW)
                 (w_s1TfX [Occ=Once] :: Ix a_s1TfV)
                 (w1_s1TfY [Occ=Once] :: Ix b_s1TfW)
                 (w2_s1TfZ [Occ=Once!]
                    :: ((a_s1TfV, b_s1TfW), (a_s1TfV, b_s1TfW))) ->
                 case w2_s1TfZ of
                 { (ww1_s1Tg2 [Occ=Once!], ww2_s1Tg8 [Occ=Once!]) ->
                 case ww1_s1Tg2 of { (ww4_s1Tg5 [Occ=Once], ww5_s1Tg6 [Occ=Once]) ->
                 case ww2_s1Tg8 of { (ww7_s1Tgb [Occ=Once], ww8_s1Tgc [Occ=Once]) ->
                 case GHC.Arr.$w$crangeSize
                        @ a_s1TfV
                        @ b_s1TfW
                        w_s1TfX
                        w1_s1TfY
                        ww4_s1Tg5
                        ww5_s1Tg6
                        ww7_s1Tgb
                        ww8_s1Tgc
                 of ww9_s1Tgh
                 { __DEFAULT ->
                 GHC.Types.I# ww9_s1Tgh
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$crangeSize
  = \ (@ a_s1TfV)
      (@ b_s1TfW)
      (w_s1TfX :: Ix a_s1TfV)
      (w1_s1TfY :: Ix b_s1TfW)
      (w2_s1TfZ :: ((a_s1TfV, b_s1TfW), (a_s1TfV, b_s1TfW))) ->
      case w2_s1TfZ of { (ww1_s1Tg2, ww2_s1Tg8) ->
      case ww1_s1Tg2 of { (ww4_s1Tg5, ww5_s1Tg6) ->
      case ww2_s1Tg8 of { (ww7_s1Tgb, ww8_s1Tgc) ->
      case GHC.Arr.$w$crangeSize
             @ a_s1TfV
             @ b_s1TfW
             w_s1TfX
             w1_s1TfY
             ww4_s1Tg5
             ww5_s1Tg6
             ww7_s1Tgb
             ww8_s1Tgc
      of ww9_s1Tgh
      { __DEFAULT ->
      GHC.Types.I# ww9_s1Tgh
      }
      }
      }
      }

-- RHS size: {terms: 38, types: 38, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: ((Int, Int), (Int, Int)) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tgj [Occ=Once!] :: ((Int, Int), (Int, Int))) ->
                 case w_s1Tgj of { (ww1_s1Tgm [Occ=Once!], ww2_s1TgA [Occ=Once!]) ->
                 case ww1_s1Tgm of
                 { (ww4_s1Tgp [Occ=Once!], ww5_s1Tgu [Occ=Once!]) ->
                 case ww4_s1Tgp of { I# ww7_s1Tgs [Occ=Once] ->
                 case ww5_s1Tgu of { I# ww9_s1Tgx ->
                 case ww2_s1TgA of
                 { (ww11_s1TgD [Occ=Once!], ww12_s1TgI [Occ=Once!]) ->
                 case ww11_s1TgD of { I# ww14_s1TgG [Occ=Once] ->
                 case ww12_s1TgI of { I# ww16_s1TgL ->
                 GHC.Types.I#
                   (+#
                      (+#
                         (*# (-# ww14_s1TgG ww7_s1Tgs) (+# (-# ww16_s1TgL ww9_s1Tgx) 1#))
                         (-# ww16_s1TgL ww9_s1Tgx))
                      1#)
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$cunsafeRangeSize
  = \ (w_s1Tgj :: ((Int, Int), (Int, Int))) ->
      case w_s1Tgj of { (ww1_s1Tgm, ww2_s1TgA) ->
      case ww1_s1Tgm of { (ww4_s1Tgp, ww5_s1Tgu) ->
      case ww4_s1Tgp of { I# ww7_s1Tgs ->
      case ww5_s1Tgu of { I# ww9_s1Tgx ->
      case ww2_s1TgA of { (ww11_s1TgD, ww12_s1TgI) ->
      case ww11_s1TgD of { I# ww14_s1TgG ->
      case ww12_s1TgI of { I# ww16_s1TgL ->
      GHC.Types.I#
        (+#
           (+#
              (*# (-# ww14_s1TgG ww7_s1Tgs) (+# (-# ww16_s1TgL ww9_s1Tgx) 1#))
              (-# ww16_s1TgL ww9_s1Tgx))
           1#)
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 38, types: 27, coercions: 0, joins: 0/0}
GHC.Arr.$w$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Ix b) => a -> b -> a -> b -> Int#
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 60 0 0 0 0] 173 0}]
GHC.Arr.$w$cunsafeRangeSize
  = \ (@ a_s1TgT)
      (@ b_s1TgU)
      (w_s1TgV :: Ix a_s1TgT)
      (w1_s1TgW :: Ix b_s1TgU)
      (ww_s1Th3 :: a_s1TgT)
      (ww1_s1Th4 :: b_s1TgU)
      (ww2_s1Th9 :: a_s1TgT)
      (ww3_s1Tha :: b_s1TgU) ->
      case unsafeIndex @ a_s1TgT w_s1TgV (ww_s1Th3, ww2_s1Th9) ww2_s1Th9
      of
      { I# x_i1MAD ->
      case unsafeRangeSize @ b_s1TgU w1_s1TgW (ww1_s1Th4, ww3_s1Tha) of
      { I# y_i1MAH ->
      case unsafeIndex
             @ b_s1TgU w1_s1TgW (ww1_s1Th4, ww3_s1Tha) ww3_s1Tha
      of
      { I# y1_i1AMm ->
      +# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm) 1#
      }
      }
      }

-- RHS size: {terms: 25, types: 41, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(SS),1*U(1*U(U,U),1*U(U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1TgT)
                 (@ b_s1TgU)
                 (w_s1TgV [Occ=Once] :: Ix a_s1TgT)
                 (w1_s1TgW [Occ=Once] :: Ix b_s1TgU)
                 (w2_s1TgX [Occ=Once!]
                    :: ((a_s1TgT, b_s1TgU), (a_s1TgT, b_s1TgU))) ->
                 case w2_s1TgX of
                 { (ww1_s1Th0 [Occ=Once!], ww2_s1Th6 [Occ=Once!]) ->
                 case ww1_s1Th0 of { (ww4_s1Th3 [Occ=Once], ww5_s1Th4 [Occ=Once]) ->
                 case ww2_s1Th6 of { (ww7_s1Th9 [Occ=Once], ww8_s1Tha [Occ=Once]) ->
                 case GHC.Arr.$w$cunsafeRangeSize
                        @ a_s1TgT
                        @ b_s1TgU
                        w_s1TgV
                        w1_s1TgW
                        ww4_s1Th3
                        ww5_s1Th4
                        ww7_s1Th9
                        ww8_s1Tha
                 of ww9_s1Thf
                 { __DEFAULT ->
                 GHC.Types.I# ww9_s1Thf
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$cunsafeRangeSize
  = \ (@ a_s1TgT)
      (@ b_s1TgU)
      (w_s1TgV :: Ix a_s1TgT)
      (w1_s1TgW :: Ix b_s1TgU)
      (w2_s1TgX :: ((a_s1TgT, b_s1TgU), (a_s1TgT, b_s1TgU))) ->
      case w2_s1TgX of { (ww1_s1Th0, ww2_s1Th6) ->
      case ww1_s1Th0 of { (ww4_s1Th3, ww5_s1Th4) ->
      case ww2_s1Th6 of { (ww7_s1Th9, ww8_s1Tha) ->
      case GHC.Arr.$w$cunsafeRangeSize
             @ a_s1TgT
             @ b_s1TgU
             w_s1TgV
             w1_s1TgW
             ww4_s1Th3
             ww5_s1Th4
             ww7_s1Th9
             ww8_s1Tha
      of ww9_s1Thf
      { __DEFAULT ->
      GHC.Types.I# ww9_s1Thf
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'STArray3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$tc'STArray3 = "'STArray"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'STArray2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tc'STArray2 = GHC.Types.TrNameS GHC.Arr.$tc'STArray3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcSTArray3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$tcSTArray3 = "STArray"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcSTArray2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tcSTArray2 = GHC.Types.TrNameS GHC.Arr.$tcSTArray3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'Array3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$tc'Array3 = "'Array"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'Array2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tc'Array2 = GHC.Types.TrNameS GHC.Arr.$tc'Array3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcArray2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$tcArray2 = "Array"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcArray1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tcArray1 = GHC.Types.TrNameS GHC.Arr.$tcArray2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'C:Ix3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$tc'C:Ix3 = "'C:Ix"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'C:Ix2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tc'C:Ix2 = GHC.Types.TrNameS GHC.Arr.$tc'C:Ix3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcIx3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Arr.$tcIx3 = "Ix"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcIx2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$tcIx2 = GHC.Types.TrNameS GHC.Arr.$tcIx3

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep_r1Xux :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep_r1Xux = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep1_r1Xuy :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_r1Xuy
  = GHC.Types.: @ KindRep $krep_r1Xux (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_r1Xuz :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep2_r1Xuz = GHC.Types.: @ KindRep $krep_r1Xux $krep1_r1Xuy

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_r1XuA :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_r1XuA
  = GHC.Types.KindRepTyConApp GHC.Tuple.$tc(,) $krep2_r1Xuz

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4_r1XuB :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_r1XuB
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep1_r1Xuy

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r1XuC :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep5_r1XuC = GHC.Types.KindRepFun $krep3_r1XuA $krep4_r1XuB

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep6_r1XuD :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep6_r1XuD
  = GHC.Types.KindRepTyConApp GHC.Classes.$tcOrd $krep1_r1Xuy

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep7_r1XuE :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep7_r1XuE = GHC.Types.KindRepVar 1#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep8_r1XuF :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep8_r1XuF
  = GHC.Types.: @ KindRep $krep7_r1XuE (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_r1XuG :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep9_r1XuG
  = GHC.Types.KindRepTyConApp GHC.Types.$tcArray# $krep8_r1XuF

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep10_r1XuH :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep10_r1XuH = GHC.Types.: @ KindRep $krep_r1Xux $krep8_r1XuF

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep11_r1XuI :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep11_r1XuI = GHC.Types.KindRepVar 2#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep12_r1XuJ :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep12_r1XuJ
  = GHC.Types.: @ KindRep $krep11_r1XuI (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep13_r1XuK :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep13_r1XuK = GHC.Types.: @ KindRep $krep_r1Xux $krep12_r1XuJ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep14_r1XuL :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep14_r1XuL
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcMutableArray# $krep13_r1XuK

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep15_r1XuM :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep15_r1XuM = GHC.Types.: @ KindRep $krep7_r1XuE $krep12_r1XuJ

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep16_r1XuN :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep16_r1XuN = GHC.Types.: @ KindRep $krep_r1Xux $krep15_r1XuM

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcSTArray1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Arr.$tcSTArray1
  = GHC.Types.KindRepFun GHC.Types.krep$* GHC.Types.krep$*->*->*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep17_r1XuO :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep17_r1XuO
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep18_r1XuP :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep18_r1XuP = GHC.Types.KindRepFun $krep_r1Xux $krep17_r1XuO

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep19_r1XuQ :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep19_r1XuQ = GHC.Types.KindRepFun $krep3_r1XuA $krep18_r1XuP

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep20_r1XuR :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep20_r1XuR = GHC.Types.KindRepFun $krep3_r1XuA $krep17_r1XuO

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep21_r1XuS :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep21_r1XuS
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcIx1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Arr.$tcIx1
  = GHC.Types.KindRepFun GHC.Types.krep$* $krep21_r1XuS

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep22_r1XuT :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep22_r1XuT
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcBool (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep23_r1XuU :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep23_r1XuU = GHC.Types.KindRepFun $krep_r1Xux $krep22_r1XuT

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep24_r1XuV :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep24_r1XuV = GHC.Types.KindRepFun $krep3_r1XuA $krep23_r1XuU

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Arr.$trModule2 = "GHC.Arr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$trModule1 = GHC.Types.TrNameS GHC.Arr.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Arr.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Arr.$trModule3 = GHC.Types.TrNameS GHC.Arr.$trModule4

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Arr.$trModule
  = GHC.Types.Module GHC.Arr.$trModule3 GHC.Arr.$trModule1

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcIx :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tcIx
  = GHC.Types.TyCon
      13772232542578256353##
      6762827082053304105##
      GHC.Arr.$trModule
      GHC.Arr.$tcIx2
      0#
      GHC.Arr.$tcIx1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep25_r1XuW :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep25_r1XuW
  = GHC.Types.KindRepTyConApp GHC.Arr.$tcIx $krep1_r1Xuy

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep26_r1XuX :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep26_r1XuX = GHC.Types.KindRepFun $krep20_r1XuR $krep25_r1XuW

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep27_r1XuY :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep27_r1XuY = GHC.Types.KindRepFun $krep20_r1XuR $krep26_r1XuX

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep28_r1XuZ :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep28_r1XuZ = GHC.Types.KindRepFun $krep24_r1XuV $krep27_r1XuY

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep29_r1Xv0 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep29_r1Xv0 = GHC.Types.KindRepFun $krep19_r1XuQ $krep28_r1XuZ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep30_r1Xv1 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep30_r1Xv1 = GHC.Types.KindRepFun $krep19_r1XuQ $krep29_r1Xv0

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep31_r1Xv2 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep31_r1Xv2 = GHC.Types.KindRepFun $krep5_r1XuC $krep30_r1Xv1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'C:Ix1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Arr.$tc'C:Ix1 = GHC.Types.KindRepFun $krep6_r1XuD $krep31_r1Xv2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'C:Ix :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tc'C:Ix
  = GHC.Types.TyCon
      9761537348743518432##
      9936836232101669382##
      GHC.Arr.$trModule
      GHC.Arr.$tc'C:Ix2
      1#
      GHC.Arr.$tc'C:Ix1

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcArray :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tcArray
  = GHC.Types.TyCon
      10788835947821237041##
      14169157647019398948##
      GHC.Arr.$trModule
      GHC.Arr.$tcArray1
      0#
      GHC.Types.krep$*->*->*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep32_r1Xv3 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep32_r1Xv3
  = GHC.Types.KindRepTyConApp GHC.Arr.$tcArray $krep10_r1XuH

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep33_r1Xv4 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep33_r1Xv4 = GHC.Types.KindRepFun $krep9_r1XuG $krep32_r1Xv3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep34_r1Xv5 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep34_r1Xv5 = GHC.Types.KindRepFun $krep17_r1XuO $krep33_r1Xv4

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep35_r1Xv6 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep35_r1Xv6 = GHC.Types.KindRepFun $krep_r1Xux $krep34_r1Xv5

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'Array1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Arr.$tc'Array1 = GHC.Types.KindRepFun $krep_r1Xux $krep35_r1Xv6

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'Array :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tc'Array
  = GHC.Types.TyCon
      3242711757478233377##
      12319810478938809147##
      GHC.Arr.$trModule
      GHC.Arr.$tc'Array2
      2#
      GHC.Arr.$tc'Array1

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tcSTArray :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tcSTArray
  = GHC.Types.TyCon
      345285176724813242##
      9254447028624491998##
      GHC.Arr.$trModule
      GHC.Arr.$tcSTArray2
      0#
      GHC.Arr.$tcSTArray1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep36_r1Xv7 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep36_r1Xv7
  = GHC.Types.KindRepTyConApp GHC.Arr.$tcSTArray $krep16_r1XuN

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep37_r1Xv8 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep37_r1Xv8 = GHC.Types.KindRepFun $krep14_r1XuL $krep36_r1Xv7

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep38_r1Xv9 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep38_r1Xv9 = GHC.Types.KindRepFun $krep17_r1XuO $krep37_r1Xv8

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep39_r1Xva :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep39_r1Xva = GHC.Types.KindRepFun $krep7_r1XuE $krep38_r1Xv9

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'STArray1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Arr.$tc'STArray1
  = GHC.Types.KindRepFun $krep7_r1XuE $krep39_r1Xva

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$tc'STArray :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Arr.$tc'STArray
  = GHC.Types.TyCon
      804430358013947666##
      730912265096030373##
      GHC.Arr.$trModule
      GHC.Arr.$tc'STArray2
      3#
      GHC.Arr.$tc'STArray1

-- RHS size: {terms: 20, types: 49, coercions: 0, joins: 0/0}
unsafeThawSTArray1_r1Xvb
  :: forall i e s.
     Array i e -> State# s -> (# State# s, STArray s i e #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SSLS),1*U(U,U,U,U)><S,U>,
 Unf=OtherCon []]
unsafeThawSTArray1_r1Xvb
  = \ (@ i_a1Lup)
      (@ e_a1Luq)
      (@ s_a1Lur)
      (ds_d1M4e :: Array i_a1Lup e_a1Luq)
      (eta_X6x :: State# s_a1Lur) ->
      case ds_d1M4e of { Array l_a1L1w u_a1L1x dt_d1Mtp arr#_a1L1z ->
      case unsafeThawArray# @ e_a1Luq @ s_a1Lur arr#_a1L1z eta_X6x of
      { (# ipv_s1MLa, ipv1_s1MLb #) ->
      (# ipv_s1MLa,
         GHC.Arr.STArray
           @ s_a1Lur
           @ i_a1Lup
           @ e_a1Luq
           l_a1L1w
           u_a1L1x
           dt_d1Mtp
           ipv1_s1MLb #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 20, joins: 0/0}
unsafeThawSTArray [InlPrag=INLINE (sat-args=1)]
  :: forall i e s. Array i e -> ST s (STArray s i e)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SSLS),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_X1LAW)
                 (@ e_X1LAY)
                 (@ s_X1LB0)
                 (ds_X1MaO [Occ=Once!] :: Array i_X1LAW e_X1LAY) ->
                 case ds_X1MaO of
                 { Array l_a1L1w [Occ=Once] u_a1L1x [Occ=Once] dt_d1Mtp [Occ=Once]
                         arr#_a1L1z [Occ=Once] ->
                 (\ (s1#_a1L1A [Occ=Once] :: State# s_X1LB0) ->
                    case unsafeThawArray# @ e_X1LAY @ s_X1LB0 arr#_a1L1z s1#_a1L1A of
                    { (# ipv_s1MLf [Occ=Once], ipv1_s1MLg [Occ=Once] #) ->
                    (# ipv_s1MLf,
                       GHC.Arr.$WSTArray
                         @ s_X1LB0
                         @ i_X1LAW
                         @ e_X1LAY
                         l_a1L1w
                         u_a1L1x
                         (GHC.Types.I# dt_d1Mtp)
                         ipv1_s1MLg #)
                    })
                 `cast` (Sym (GHC.ST.N:ST[0]
                                  <s_X1LB0>_N <STArray s_X1LB0 i_X1LAW e_X1LAY>_R)
                         :: (STRep s_X1LB0 (STArray s_X1LB0 i_X1LAW e_X1LAY) :: *)
                            ~R# (ST s_X1LB0 (STArray s_X1LB0 i_X1LAW e_X1LAY) :: *))
                 }}]
unsafeThawSTArray
  = unsafeThawSTArray1_r1Xvb
    `cast` (forall (i :: <*>_N) (e :: <*>_N) (s :: <*>_N).
            <Array i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <STArray s i e>_R)
            :: (forall i e s. Array i e -> STRep s (STArray s i e) :: *)
               ~R# (forall i e s. Array i e -> ST s (STArray s i e) :: *))

-- RHS size: {terms: 20, types: 48, coercions: 0, joins: 0/0}
unsafeFreezeSTArray1_r1Xvc
  :: forall s i e.
     STArray s i e -> State# s -> (# State# s, Array i e #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SSLS),1*U(U,U,U,U)><S,U>,
 Unf=OtherCon []]
unsafeFreezeSTArray1_r1Xvc
  = \ (@ s_a1LuE)
      (@ i_a1LuF)
      (@ e_a1LuG)
      (ds_d1M4s :: STArray s_a1LuE i_a1LuF e_a1LuG)
      (eta_X6r :: State# s_a1LuE) ->
      case ds_d1M4s of { STArray l_a1L1b u_a1L1c dt_d1Mtq marr#_a1L1e ->
      case unsafeFreezeArray# @ s_a1LuE @ e_a1LuG marr#_a1L1e eta_X6r of
      { (# ipv_s1ML0, ipv1_s1ML1 #) ->
      (# ipv_s1ML0,
         GHC.Arr.Array
           @ i_a1LuF @ e_a1LuG l_a1L1b u_a1L1c dt_d1Mtq ipv1_s1ML1 #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 20, joins: 0/0}
unsafeFreezeSTArray [InlPrag=INLINE (sat-args=1)]
  :: forall s i e. STArray s i e -> ST s (Array i e)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SSLS),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_X1LB5)
                 (@ i_X1LB7)
                 (@ e_X1LB9)
                 (ds_X1MaW [Occ=Once!] :: STArray s_X1LB5 i_X1LB7 e_X1LB9) ->
                 case ds_X1MaW of
                 { STArray l_a1L1b [Occ=Once] u_a1L1c [Occ=Once] dt_d1Mtq [Occ=Once]
                           marr#_a1L1e [Occ=Once] ->
                 (\ (s1#_a1L1f [Occ=Once] :: State# s_X1LB5) ->
                    case unsafeFreezeArray# @ s_X1LB5 @ e_X1LB9 marr#_a1L1e s1#_a1L1f
                    of
                    { (# ipv_s1ML5 [Occ=Once], ipv1_s1ML6 [Occ=Once] #) ->
                    (# ipv_s1ML5,
                       GHC.Arr.$WArray
                         @ i_X1LB7
                         @ e_X1LB9
                         l_a1L1b
                         u_a1L1c
                         (GHC.Types.I# dt_d1Mtq)
                         ipv1_s1ML6 #)
                    })
                 `cast` (Sym (GHC.ST.N:ST[0] <s_X1LB5>_N <Array i_X1LB7 e_X1LB9>_R)
                         :: (STRep s_X1LB5 (Array i_X1LB7 e_X1LB9) :: *)
                            ~R# (ST s_X1LB5 (Array i_X1LB7 e_X1LB9) :: *))
                 }}]
unsafeFreezeSTArray
  = unsafeFreezeSTArray1_r1Xvc
    `cast` (forall (s :: <*>_N) (i :: <*>_N) (e :: <*>_N).
            <STArray s i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <Array i e>_R)
            :: (forall s i e. STArray s i e -> STRep s (Array i e) :: *)
               ~R# (forall s i e. STArray s i e -> ST s (Array i e) :: *))

-- RHS size: {terms: 23, types: 37, coercions: 0, joins: 0/0}
unsafeWriteSTArray1_r1Xvd
  :: forall s i e.
     STArray s i e -> Int -> e -> State# s -> (# State# s, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []]
unsafeWriteSTArray1_r1Xvd
  = \ (@ s_a1LuS)
      (@ i_a1LuT)
      (@ e_a1LuU)
      (ds_d1M4G :: STArray s_a1LuS i_a1LuT e_a1LuU)
      (ds1_d1M4H :: Int)
      (e1_a1L0R :: e_a1LuU)
      (eta_X6l :: State# s_a1LuS) ->
      case ds_d1M4G of
      { STArray ds2_d1M4V ds3_d1M4W dt_d1Mtr marr#_a1L0P ->
      case ds1_d1M4H of { I# i#_a1L0Q ->
      case writeArray#
             @ s_a1LuS @ e_a1LuU marr#_a1L0P i#_a1L0Q e1_a1L0R eta_X6l
      of s2#_a1L0T
      { __DEFAULT ->
      (# s2#_a1L0T, GHC.Tuple.() #)
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 22, joins: 0/0}
unsafeWriteSTArray [InlPrag=INLINE (sat-args=3)]
  :: forall s i e. STArray s i e -> Int -> e -> ST s ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_X1LBd)
                 (@ i_X1LBf)
                 (@ e_X1LBh)
                 (ds_X1Mb4 [Occ=Once!] :: STArray s_X1LBd i_X1LBf e_X1LBh)
                 (ds1_X1Mb6 [Occ=Once!] :: Int)
                 (e1_X1L7h [Occ=Once] :: e_X1LBh) ->
                 case ds_X1Mb4 of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           marr#_a1L0P [Occ=Once] ->
                 case ds1_X1Mb6 of { I# i#_a1L0Q [Occ=Once] ->
                 (\ (s1#_a1L0S [Occ=Once] :: State# s_X1LBd) ->
                    case writeArray#
                           @ s_X1LBd @ e_X1LBh marr#_a1L0P i#_a1L0Q e1_X1L7h s1#_a1L0S
                    of s2#_a1L0T
                    { __DEFAULT ->
                    (# s2#_a1L0T, GHC.Tuple.() #)
                    })
                 `cast` (Sym (GHC.ST.N:ST[0] <s_X1LBd>_N <()>_R)
                         :: (STRep s_X1LBd () :: *) ~R# (ST s_X1LBd () :: *))
                 }
                 }}]
unsafeWriteSTArray
  = unsafeWriteSTArray1_r1Xvd
    `cast` (forall (s :: <*>_N) (i :: <*>_N) (e :: <*>_N).
            <STArray s i e>_R
            ->_R <Int>_R
            ->_R <e>_R
            ->_R Sym (GHC.ST.N:ST[0] <s>_N <()>_R)
            :: (forall s i e. STArray s i e -> Int -> e -> STRep s () :: *)
               ~R# (forall s i e. STArray s i e -> Int -> e -> ST s () :: *))

-- RHS size: {terms: 16, types: 27, coercions: 0, joins: 0/0}
unsafeReadSTArray1_r1Xve
  :: forall s i e.
     STArray s i e -> Int -> State# s -> (# State# s, e #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
unsafeReadSTArray1_r1Xve
  = \ (@ s_a1Lv4)
      (@ i_a1Lv5)
      (@ e_a1Lv6)
      (ds_d1M4Z :: STArray s_a1Lv4 i_a1Lv5 e_a1Lv6)
      (ds1_d1M50 :: Int)
      (eta_X6d :: State# s_a1Lv4) ->
      case ds_d1M4Z of
      { STArray ds2_d1M5d ds3_d1M5e dt_d1Mts marr#_a1L0G ->
      case ds1_d1M50 of { I# i#_a1L0H ->
      readArray# @ s_a1Lv4 @ e_a1Lv6 marr#_a1L0G i#_a1L0H eta_X6d
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 20, joins: 0/0}
unsafeReadSTArray [InlPrag=INLINE (sat-args=2)]
  :: forall s i e. STArray s i e -> Int -> ST s e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_X1LBh)
                 (@ i_X1LBj)
                 (@ e_X1LBl)
                 (ds_X1Mbf [Occ=Once!] :: STArray s_X1LBh i_X1LBj e_X1LBl)
                 (ds1_X1Mbh [Occ=Once!] :: Int) ->
                 case ds_X1Mbf of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           marr#_a1L0G [Occ=Once] ->
                 case ds1_X1Mbh of { I# i#_a1L0H [Occ=Once] ->
                 (\ (s1#_a1L0I [Occ=Once] :: State# s_X1LBh) ->
                    readArray# @ s_X1LBh @ e_X1LBl marr#_a1L0G i#_a1L0H s1#_a1L0I)
                 `cast` (Sym (GHC.ST.N:ST[0] <s_X1LBh>_N <e_X1LBl>_R)
                         :: (STRep s_X1LBh e_X1LBl :: *) ~R# (ST s_X1LBh e_X1LBl :: *))
                 }
                 }}]
unsafeReadSTArray
  = unsafeReadSTArray1_r1Xve
    `cast` (forall (s :: <*>_N) (i :: <*>_N) (e :: <*>_N).
            <STArray s i e>_R
            ->_R <Int>_R
            ->_R Sym (GHC.ST.N:ST[0] <s>_N <e>_R)
            :: (forall s i e. STArray s i e -> Int -> STRep s e :: *)
               ~R# (forall s i e. STArray s i e -> Int -> ST s e :: *))

-- RHS size: {terms: 9, types: 20, coercions: 0, joins: 0/0}
numElementsSTArray [InlPrag=INLINE (sat-args=1)]
  :: forall s i e. STArray s i e -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSL),1*U(A,A,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_a1Lve)
                 (@ i_a1Lvf)
                 (@ e_a1Lvg)
                 (ds_d1M5h [Occ=Once!] :: STArray s_a1Lve i_a1Lvf e_a1Lvg) ->
                 case ds_d1M5h of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] dt_d1Mtt [Occ=Once]
                           _ [Occ=Dead] ->
                 GHC.Types.I# dt_d1Mtt
                 }}]
numElementsSTArray
  = \ (@ s_a1Lve)
      (@ i_a1Lvf)
      (@ e_a1Lvg)
      (ds_d1M5h :: STArray s_a1Lve i_a1Lvf e_a1Lvg) ->
      case ds_d1M5h of
      { STArray ds1_d1M5r ds2_d1M5s dt_d1Mtt ds3_d1M5t ->
      GHC.Types.I# dt_d1Mtt
      }

-- RHS size: {terms: 10, types: 22, coercions: 0, joins: 0/0}
boundsSTArray [InlPrag=INLINE (sat-args=1)]
  :: forall s i e. STArray s i e -> (i, i)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SSLL),1*U(U,U,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_a1Lvi)
                 (@ i_a1Lvj)
                 (@ e_a1Lvk)
                 (ds_d1M5v [Occ=Once!] :: STArray s_a1Lvi i_a1Lvj e_a1Lvk) ->
                 case ds_d1M5v of
                 { STArray l_a1L0y [Occ=Once] u_a1L0z [Occ=Once] _ [Occ=Dead]
                           _ [Occ=Dead] ->
                 (l_a1L0y, u_a1L0z)
                 }}]
boundsSTArray
  = \ (@ s_a1Lvi)
      (@ i_a1Lvj)
      (@ e_a1Lvk)
      (ds_d1M5v :: STArray s_a1Lvi i_a1Lvj e_a1Lvk) ->
      case ds_d1M5v of { STArray l_a1L0y u_a1L0z dt_d1Mtu ds1_d1M5F ->
      (l_a1L0y, u_a1L0z)
      }

-- RHS size: {terms: 35, types: 47, coercions: 0, joins: 0/0}
adjust' [InlPrag=INLINE (sat-args=4)]
  :: forall e a s b.
     (e -> a -> e)
     -> MutableArray# s e -> (Int, a) -> STRep s b -> STRep s b
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<C(C(S)),1*C1(C1(U))><S,U><S(S(S)L),1*U(1*U(U),U)><C(S),1*C1(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ e_a1Lvm)
                 (@ a_a1Lvn)
                 (@ s_a1Lvo)
                 (@ b_a1Lvp)
                 (f1_a1KZa [Occ=Once!] :: e_a1Lvm -> a_a1Lvn -> e_a1Lvm)
                 (marr#_a1KZb :: MutableArray# s_a1Lvo e_a1Lvm)
                 (ds_d1M5H [Occ=Once!] :: (Int, a_a1Lvn))
                 (next_a1KZe [Occ=Once!] :: STRep s_a1Lvo b_a1Lvp) ->
                 case ds_d1M5H of { (ds1_d1M5V [Occ=Once!], new_a1KZd [Occ=Once]) ->
                 case ds1_d1M5V of { I# i#_a1KZc ->
                 \ (s1#_a1KZf [Occ=Once] :: State# s_a1Lvo) ->
                   case readArray# @ s_a1Lvo @ e_a1Lvm marr#_a1KZb i#_a1KZc s1#_a1KZf
                   of
                   { (# ipv_s1MK8 [Occ=Once], ipv1_s1MK9 [Occ=Once] #) ->
                   case f1_a1KZa ipv1_s1MK9 new_a1KZd of combined_a1KZi { __DEFAULT ->
                   case writeArray#
                          @ s_a1Lvo @ e_a1Lvm marr#_a1KZb i#_a1KZc combined_a1KZi ipv_s1MK8
                   of wild2_Xk
                   { __DEFAULT ->
                   next_a1KZe wild2_Xk
                   }
                   }
                   }
                 }
                 }}]
adjust'
  = \ (@ e_a1Lvm)
      (@ a_a1Lvn)
      (@ s_a1Lvo)
      (@ b_a1Lvp)
      (f1_a1KZa :: e_a1Lvm -> a_a1Lvn -> e_a1Lvm)
      (marr#_a1KZb :: MutableArray# s_a1Lvo e_a1Lvm)
      (ds_d1M5H :: (Int, a_a1Lvn))
      (next_a1KZe :: STRep s_a1Lvo b_a1Lvp)
      (eta_X6a :: State# s_a1Lvo) ->
      case ds_d1M5H of { (ds1_d1M5V, new_a1KZd) ->
      case ds1_d1M5V of { I# i#_a1KZc ->
      case readArray# @ s_a1Lvo @ e_a1Lvm marr#_a1KZb i#_a1KZc eta_X6a of
      { (# ipv_s1MK1, ipv1_s1MK2 #) ->
      case f1_a1KZa ipv1_s1MK2 new_a1KZd of combined_a1KZi { __DEFAULT ->
      case writeArray#
             @ s_a1Lvo @ e_a1Lvm marr#_a1KZb i#_a1KZc combined_a1KZi ipv_s1MK1
      of wild2_X24
      { __DEFAULT ->
      next_a1KZe wild2_X24
      }
      }
      }
      }
      }

-- RHS size: {terms: 84, types: 180, coercions: 0, joins: 2/2}
unsafeAccumArray' [InlPrag=INLINE (sat-args=5)]
  :: forall e a i.
     (e -> a -> e) -> e -> (i, i) -> Int -> [(Int, a)] -> Array i e
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><L,U><S,1*U(U,U)><S(S),1*U(U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ e_a1LDX)
                 (@ a_a1LDY)
                 (@ i_a1LDZ)
                 (f1_a1KYR [Occ=Once] :: e_a1LDX -> a_a1LDY -> e_a1LDX)
                 (initial_a1KYS [Occ=Once] :: e_a1LDX)
                 (ds_d1McD [Occ=Once!] :: (i_a1LDZ, i_a1LDZ))
                 (n_a1KYV [Occ=Once!] :: Int)
                 (ies_a1KYX [Occ=Once] :: [(Int, a_a1LDY)]) ->
                 case ds_d1McD of { (l_a1KYT [Occ=Once], u_a1KYU [Occ=Once]) ->
                 case n_a1KYV of wild1_Xc { I# n#_a1KYW [Occ=Once] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LDZ e_a1LDX #)
                        (\ (s1#_a1KYY [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LDX @ RealWorld n#_a1KYW initial_a1KYS s1#_a1KYY
                           of
                           { (# ipv_s1MKn [Occ=Once], ipv1_s1MKo #) ->
                           foldr
                             @ (Int, a_a1LDY)
                             @ (STRep RealWorld (Array i_a1LDZ e_a1LDX))
                             (adjust'
                                @ e_a1LDX
                                @ a_a1LDY
                                @ RealWorld
                                @ (Array i_a1LDZ e_a1LDX)
                                f1_a1KYR
                                ipv1_s1MKo)
                             (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LDX ipv1_s1MKo s1#1_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LDZ @ e_a1LDX l_a1KYT u_a1KYU wild1_Xc ipv3_s1MEY #)
                                })
                             ies_a1KYX
                             ipv_s1MKn
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }
                 }}]
unsafeAccumArray'
  = \ (@ e_a1LDX)
      (@ a_a1LDY)
      (@ i_a1LDZ)
      (f1_a1KYR :: e_a1LDX -> a_a1LDY -> e_a1LDX)
      (initial_a1KYS :: e_a1LDX)
      (ds_d1McD :: (i_a1LDZ, i_a1LDZ))
      (n_a1KYV :: Int)
      (ies_a1KYX :: [(Int, a_a1LDY)]) ->
      case ds_d1McD of { (l_a1KYT, u_a1KYU) ->
      case n_a1KYV of { I# n#_a1KYW ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LDZ e_a1LDX #)
             (\ (s1#_a1KYY [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ e_a1LDX @ RealWorld n#_a1KYW initial_a1KYS s1#_a1KYY
                of
                { (# ipv_s1MKf, ipv1_s1MKg #) ->
                join {
                  z_i1y1a [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LDZ e_a1LDX #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray#
                             @ RealWorld @ e_a1LDX ipv1_s1MKg s1#1_a1KXg
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         case l_a1KYT of dt_X1L5f { __DEFAULT ->
                         case u_a1KYU of dt1_X1L5h { __DEFAULT ->
                         GHC.Arr.Array
                           @ i_a1LDZ @ e_a1LDX dt_X1L5f dt1_X1L5h n#_a1KYW ipv3_s1MEY
                         }
                         } #)
                      } } in
                joinrec {
                  go_i1y1b [Occ=LoopBreaker]
                    :: [(Int, a_a1LDY)]
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LDZ e_a1LDX #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                  go_i1y1b (ds2_i1y1c :: [(Int, a_a1LDY)])
                           (eta_B1 :: State# RealWorld)
                    = case ds2_i1y1c of {
                        [] -> jump z_i1y1a eta_B1;
                        : y_i1y1h ys_i1y1i ->
                          case y_i1y1h of { (ds3_d1M5V, new_a1KZd) ->
                          case ds3_d1M5V of { I# i#_a1KZc ->
                          case readArray# @ RealWorld @ e_a1LDX ipv1_s1MKg i#_a1KZc eta_B1 of
                          { (# ipv2_s1MK8, ipv3_s1MK9 #) ->
                          case f1_a1KYR ipv3_s1MK9 new_a1KZd of combined_a1KZi { __DEFAULT ->
                          case writeArray#
                                 @ RealWorld @ e_a1LDX ipv1_s1MKg i#_a1KZc combined_a1KZi ipv2_s1MK8
                          of wild5_Xk
                          { __DEFAULT ->
                          jump go_i1y1b ys_i1y1i wild5_Xk
                          }
                          }
                          }
                          }
                          }
                      }; } in
                jump go_i1y1b ies_a1KYX ipv_s1MKf
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }
      }

-- RHS size: {terms: 86, types: 182, coercions: 0, joins: 2/2}
unsafeAccumArray [InlPrag=INLINE (sat-args=4)]
  :: forall i e a.
     Ix i =>
     (e -> a -> e) -> e -> (i, i) -> [(Int, a)] -> Array i e
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><L,C(C1(U))><L,U><S,1*U(U,U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LEK)
                 (@ e_a1LEL)
                 (@ a_a1LEM)
                 ($dIx_a1LEO [Occ=Once] :: Ix i_a1LEK)
                 (f1_a1KYN [Occ=Once] :: e_a1LEL -> a_a1LEM -> e_a1LEL)
                 (initial_a1KYO [Occ=Once] :: e_a1LEL)
                 (b_a1KYP [Occ=Once!] :: (i_a1LEK, i_a1LEK))
                 (ies_a1KYQ [Occ=Once] :: [(Int, a_a1LEM)]) ->
                 case b_a1KYP of wild_X5i
                 { (l_a1KYT [Occ=Once], u_a1KYU [Occ=Once]) ->
                 case rangeSize @ i_a1LEK $dIx_a1LEO wild_X5i of wild1_Xc
                 { I# n#_a1KYW [Occ=Once] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LEK e_a1LEL #)
                        (\ (s1#_a1KYY [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LEL @ RealWorld n#_a1KYW initial_a1KYO s1#_a1KYY
                           of
                           { (# ipv_s1MKn [Occ=Once], ipv1_s1MKo #) ->
                           foldr
                             @ (Int, a_a1LEM)
                             @ (STRep RealWorld (Array i_a1LEK e_a1LEL))
                             (adjust'
                                @ e_a1LEL
                                @ a_a1LEM
                                @ RealWorld
                                @ (Array i_a1LEK e_a1LEL)
                                f1_a1KYN
                                ipv1_s1MKo)
                             (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LEL ipv1_s1MKo s1#1_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LEK @ e_a1LEL l_a1KYT u_a1KYU wild1_Xc ipv3_s1MEY #)
                                })
                             ies_a1KYQ
                             ipv_s1MKn
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }
                 }}]
unsafeAccumArray
  = \ (@ i_a1LEK)
      (@ e_a1LEL)
      (@ a_a1LEM)
      ($dIx_a1LEO :: Ix i_a1LEK)
      (eta_B4 :: e_a1LEL -> a_a1LEM -> e_a1LEL)
      (eta1_B3 :: e_a1LEL)
      (eta2_X6b :: (i_a1LEK, i_a1LEK))
      (eta3_Xcl :: [(Int, a_a1LEM)]) ->
      case eta2_X6b of wild_X5i { (l_a1KYT, u_a1KYU) ->
      case rangeSize @ i_a1LEK $dIx_a1LEO wild_X5i of { I# n#_a1KYW ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LEK e_a1LEL #)
             (\ (s1#_a1KYY [OS=OneShot] :: State# RealWorld) ->
                case newArray# @ e_a1LEL @ RealWorld n#_a1KYW eta1_B3 s1#_a1KYY of
                { (# ipv_s1MKn, ipv1_s1MKo #) ->
                join {
                  z_i1y1a [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LEK e_a1LEL #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray#
                             @ RealWorld @ e_a1LEL ipv1_s1MKo s1#1_a1KXg
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         case l_a1KYT of dt_X1L5f { __DEFAULT ->
                         case u_a1KYU of dt1_X1L5h { __DEFAULT ->
                         GHC.Arr.Array
                           @ i_a1LEK @ e_a1LEL dt_X1L5f dt1_X1L5h n#_a1KYW ipv3_s1MEY
                         }
                         } #)
                      } } in
                joinrec {
                  go_i1y1b [Occ=LoopBreaker]
                    :: [(Int, a_a1LEM)]
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LEK e_a1LEL #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                  go_i1y1b (ds1_i1y1c :: [(Int, a_a1LEM)])
                           (eta4_B1 :: State# RealWorld)
                    = case ds1_i1y1c of {
                        [] -> jump z_i1y1a eta4_B1;
                        : y_i1y1h ys_i1y1i ->
                          case y_i1y1h of { (ds2_d1M5V, new_a1KZd) ->
                          case ds2_d1M5V of { I# i#_a1KZc ->
                          case readArray# @ RealWorld @ e_a1LEL ipv1_s1MKo i#_a1KZc eta4_B1
                          of
                          { (# ipv2_s1MK8, ipv3_s1MK9 #) ->
                          case eta_B4 ipv3_s1MK9 new_a1KZd of combined_a1KZi { __DEFAULT ->
                          case writeArray#
                                 @ RealWorld @ e_a1LEL ipv1_s1MKo i#_a1KZc combined_a1KZi ipv2_s1MK8
                          of wild5_Xk
                          { __DEFAULT ->
                          jump go_i1y1b ys_i1y1i wild5_Xk
                          }
                          }
                          }
                          }
                          }
                      }; } in
                jump go_i1y1b eta3_Xcl ipv_s1MKn
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }
      }

-- RHS size: {terms: 32, types: 46, coercions: 0, joins: 0/0}
adjust [InlPrag=INLINE (sat-args=4)]
  :: forall e a s b.
     (e -> a -> e)
     -> MutableArray# s e -> (Int, a) -> STRep s b -> STRep s b
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,1*C1(C1(U))><S,U><S(S(S)L),1*U(1*U(U),U)><C(S),1*C1(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ e_a1LvE)
                 (@ a_a1LvF)
                 (@ s_a1LvG)
                 (@ b_a1LvH)
                 (f1_a1KZ1 [Occ=Once!] :: e_a1LvE -> a_a1LvF -> e_a1LvE)
                 (marr#_a1KZ2 :: MutableArray# s_a1LvG e_a1LvE)
                 (ds_d1M5W [Occ=Once!] :: (Int, a_a1LvF))
                 (next_a1KZ5 [Occ=Once!] :: STRep s_a1LvG b_a1LvH) ->
                 case ds_d1M5W of { (ds1_d1M6a [Occ=Once!], new_a1KZ4 [Occ=Once]) ->
                 case ds1_d1M6a of { I# i#_a1KZ3 ->
                 \ (s1#_a1KZ6 [Occ=Once] :: State# s_a1LvG) ->
                   case readArray# @ s_a1LvG @ e_a1LvE marr#_a1KZ2 i#_a1KZ3 s1#_a1KZ6
                   of
                   { (# ipv_s1MJU [Occ=Once], ipv1_s1MJV [Occ=Once] #) ->
                   case writeArray#
                          @ s_a1LvG
                          @ e_a1LvE
                          marr#_a1KZ2
                          i#_a1KZ3
                          (f1_a1KZ1 ipv1_s1MJV new_a1KZ4)
                          ipv_s1MJU
                   of s3#_a1KZ9
                   { __DEFAULT ->
                   next_a1KZ5 s3#_a1KZ9
                   }
                   }
                 }
                 }}]
adjust
  = \ (@ e_a1LvE)
      (@ a_a1LvF)
      (@ s_a1LvG)
      (@ b_a1LvH)
      (f1_a1KZ1 :: e_a1LvE -> a_a1LvF -> e_a1LvE)
      (marr#_a1KZ2 :: MutableArray# s_a1LvG e_a1LvE)
      (ds_d1M5W :: (Int, a_a1LvF))
      (next_a1KZ5 :: STRep s_a1LvG b_a1LvH)
      (eta_X69 :: State# s_a1LvG) ->
      case ds_d1M5W of { (ds1_d1M6a, new_a1KZ4) ->
      case ds1_d1M6a of { I# i#_a1KZ3 ->
      case readArray# @ s_a1LvG @ e_a1LvE marr#_a1KZ2 i#_a1KZ3 eta_X69 of
      { (# ipv_s1MJN, ipv1_s1MJO #) ->
      case writeArray#
             @ s_a1LvG
             @ e_a1LvE
             marr#_a1KZ2
             i#_a1KZ3
             (f1_a1KZ1 ipv1_s1MJO new_a1KZ4)
             ipv_s1MJN
      of s3#_a1KZ9
      { __DEFAULT ->
      next_a1KZ5 s3#_a1KZ9
      }
      }
      }
      }

-- RHS size: {terms: 12, types: 20, coercions: 0, joins: 0/0}
indices [InlPrag=INLINE (sat-args=1)]
  :: forall i e. Ix i => Array i e -> [i]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><S(SSLL),1*U(U,U,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LvR)
                 (@ e_a1LvS)
                 ($dIx_a1LvU [Occ=Once] :: Ix i_a1LvR)
                 (ds_d1M6b [Occ=Once!] :: Array i_a1LvR e_a1LvS) ->
                 case ds_d1M6b of
                 { Array l_a1KXW [Occ=Once] u_a1KXX [Occ=Once] _ [Occ=Dead]
                         _ [Occ=Dead] ->
                 range @ i_a1LvR $dIx_a1LvU (l_a1KXW, u_a1KXX)
                 }}]
indices
  = \ (@ i_a1LvR)
      (@ e_a1LvS)
      ($dIx_a1LvU :: Ix i_a1LvR)
      (eta_X63 :: Array i_a1LvR e_a1LvS) ->
      case eta_X63 of { Array l_a1KXW u_a1KXX dt_d1Mtv ds_d1M6n ->
      range @ i_a1LvR $dIx_a1LvU (l_a1KXW, u_a1KXX)
      }

-- RHS size: {terms: 8, types: 15, coercions: 0, joins: 0/0}
numElements [InlPrag=INLINE (sat-args=1)]
  :: forall i e. Array i e -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSL),1*U(A,A,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LvY)
                 (@ e_a1LvZ)
                 (ds_d1M6p [Occ=Once!] :: Array i_a1LvY e_a1LvZ) ->
                 case ds_d1M6p of
                 { Array _ [Occ=Dead] _ [Occ=Dead] dt_d1Mtw [Occ=Once]
                         _ [Occ=Dead] ->
                 GHC.Types.I# dt_d1Mtw
                 }}]
numElements
  = \ (@ i_a1LvY) (@ e_a1LvZ) (ds_d1M6p :: Array i_a1LvY e_a1LvZ) ->
      case ds_d1M6p of { Array ds1_d1M6z ds2_d1M6A dt_d1Mtw ds3_d1M6B ->
      GHC.Types.I# dt_d1Mtw
      }

-- RHS size: {terms: 9, types: 17, coercions: 0, joins: 0/0}
bounds [InlPrag=INLINE (sat-args=1)]
  :: forall i e. Array i e -> (i, i)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SSLL),1*U(U,U,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1Lw1)
                 (@ e_a1Lw2)
                 (ds_d1M6D [Occ=Once!] :: Array i_a1Lw1 e_a1Lw2) ->
                 case ds_d1M6D of
                 { Array l_a1KXT [Occ=Once] u_a1KXU [Occ=Once] _ [Occ=Dead]
                         _ [Occ=Dead] ->
                 (l_a1KXT, u_a1KXU)
                 }}]
bounds
  = \ (@ i_a1Lw1) (@ e_a1Lw2) (ds_d1M6D :: Array i_a1Lw1 e_a1Lw2) ->
      case ds_d1M6D of { Array l_a1KXT u_a1KXU dt_d1Mtx ds1_d1M6N ->
      (l_a1KXT, u_a1KXU)
      }

-- RHS size: {terms: 123, types: 64, coercions: 0, joins: 3/4}
cmpIntArray [InlPrag=INLINE (sat-args=2)]
  :: forall e. Ord e => Array Int e -> Array Int e -> Ordering
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(A,C(C1(U)),A,A,A,A,A,A)><S(SSSL),1*U(U(U),U(U),1*U,U)><S(SSSL),1*U(U(U),U(U),1*U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ e_a1LAG)
                 ($dOrd_a1LAI [Occ=OnceL] :: Ord e_a1LAG)
                 (arr1_a1L0d [Occ=Once!] :: Array Int e_a1LAG)
                 (arr2_a1L0h [Occ=Once!] :: Array Int e_a1LAG) ->
                 case arr1_a1L0d of
                 { Array l1_a1L0e [Occ=Once!] u1_a1L0f [Occ=Once!] dt_d1MtI
                         ds_d1Mad [Occ=OnceL] ->
                 case arr2_a1L0h of
                 { Array l2_a1L0i [Occ=Once!] u2_a1L0j [Occ=Once!] dt1_d1MtJ
                         ds1_d1Mae [Occ=OnceL] ->
                 case eqInt (GHC.Types.I# dt_d1MtI) (GHC.Types.I# 0#) of {
                   False ->
                     case eqInt (GHC.Types.I# dt1_d1MtJ) (GHC.Types.I# 0#) of {
                       False ->
                         case l1_a1L0e of { I# x#_aPOv ->
                         case l2_a1L0i of { I# y#_aPOA ->
                         case <# x#_aPOv y#_aPOA of {
                           __DEFAULT ->
                             case ==# x#_aPOv y#_aPOA of {
                               __DEFAULT -> GHC.Types.GT;
                               1# ->
                                 join {
                                   $j_s1NNJ [Occ=Once*!T[1]] :: Int# -> Ordering
                                   [LclId[JoinId(1)], Arity=1, Unf=OtherCon []]
                                   $j_s1NNJ (x_i1AMw [Occ=Once, OS=OneShot] :: Int#)
                                     = GHC.Enum.eftIntFB
                                         @ Ordering
                                         (\ (i_a1L0m :: Int)
                                            (rest_a1L0n [Occ=Once, OS=OneShot] :: Ordering) ->
                                            case compare
                                                   @ e_a1LAG
                                                   $dOrd_a1LAI
                                                   (case i_a1L0m of { I# i#_a1KXR [Occ=Once] ->
                                                    case indexArray# @ e_a1LAG ds_d1Mad i#_a1KXR of
                                                    { (# ipv_s1MGr [Occ=Once] #) ->
                                                    ipv_s1MGr
                                                    }
                                                    })
                                                   (case i_a1L0m of { I# i#_a1KXR [Occ=Once] ->
                                                    case indexArray# @ e_a1LAG ds1_d1Mae i#_a1KXR of
                                                    { (# ipv_s1MGr [Occ=Once] #) ->
                                                    ipv_s1MGr
                                                    }
                                                    })
                                            of wild6_Xo {
                                              __DEFAULT -> wild6_Xo;
                                              EQ -> rest_a1L0n
                                            })
                                         (case u1_a1L0f of { I# x#1_XPZk ->
                                          case u2_a1L0j of { I# y#1_XPZu ->
                                          case <# x#1_XPZk y#1_XPZu of {
                                            __DEFAULT ->
                                              case ==# x#1_XPZk y#1_XPZu of {
                                                __DEFAULT -> GHC.Types.GT;
                                                1# -> GHC.Types.EQ
                                              };
                                            1# -> GHC.Types.LT
                                          }
                                          }
                                          })
                                         0#
                                         (-# x_i1AMw 1#) } in
                                 case <=# dt_d1MtI dt1_d1MtJ of {
                                   __DEFAULT -> jump $j_s1NNJ dt1_d1MtJ;
                                   1# -> jump $j_s1NNJ dt_d1MtI
                                 }
                             };
                           1# -> GHC.Types.LT
                         }
                         }
                         };
                       True -> GHC.Types.GT
                     };
                   True ->
                     case eqInt (GHC.Types.I# dt1_d1MtJ) (GHC.Types.I# 0#) of {
                       False -> GHC.Types.LT;
                       True -> GHC.Types.EQ
                     }
                 }
                 }
                 }}]
cmpIntArray
  = \ (@ e_a1LAG)
      ($dOrd_a1LAI :: Ord e_a1LAG)
      (eta_X5W :: Array Int e_a1LAG)
      (eta1_XbR :: Array Int e_a1LAG) ->
      case eta_X5W of { Array l1_a1L0e u1_a1L0f dt_d1MtI ds_d1Mad ->
      case u1_a1L0f of { I# x#_s1VR4 ->
      case l1_a1L0e of { I# x#1_s1VR7 ->
      case eta1_XbR of { Array l2_a1L0i u2_a1L0j dt1_d1MtJ ds1_d1Mae ->
      case u2_a1L0j of { I# y#_s1VRa ->
      case l2_a1L0i of { I# y#1_s1VRd ->
      case dt_d1MtI of wild6_X8z {
        __DEFAULT ->
          case dt1_d1MtJ of wild7_X8C {
            __DEFAULT ->
              case <# x#1_s1VR7 y#1_s1VRd of {
                __DEFAULT ->
                  case ==# x#1_s1VR7 y#1_s1VRd of {
                    __DEFAULT -> GHC.Types.GT;
                    1# ->
                      join {
                        $j_s1NNf [Dmd=<C(S),1*C1(U)>] :: Int# -> Ordering
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                        $j_s1NNf (x_i1AMw [OS=OneShot] :: Int#)
                          = let {
                              y_i1MGA [Dmd=<S,U>] :: Int#
                              [LclId]
                              y_i1MGA = -# x_i1AMw 1# } in
                            join {
                              n_i1MGy :: Ordering
                              [LclId[JoinId(0)]]
                              n_i1MGy
                                = case <# x#_s1VR4 y#_s1VRa of {
                                    __DEFAULT ->
                                      case ==# x#_s1VR4 y#_s1VRa of {
                                        __DEFAULT -> GHC.Types.GT;
                                        1# -> GHC.Types.EQ
                                      };
                                    1# -> GHC.Types.LT
                                  } } in
                            case ># 0# y_i1MGA of {
                              __DEFAULT ->
                                joinrec {
                                  go_i1MGC [Occ=LoopBreaker] :: Int# -> Ordering
                                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
                                  go_i1MGC (x1_i1MGD :: Int#)
                                    = case compare
                                             @ e_a1LAG
                                             $dOrd_a1LAI
                                             (case indexArray# @ e_a1LAG ds_d1Mad x1_i1MGD of
                                              { (# ipv_s1MGr #) ->
                                              ipv_s1MGr
                                              })
                                             (case indexArray# @ e_a1LAG ds1_d1Mae x1_i1MGD of
                                              { (# ipv_s1MGr #) ->
                                              ipv_s1MGr
                                              })
                                      of wild8_XA {
                                        __DEFAULT -> wild8_XA;
                                        EQ ->
                                          case ==# x1_i1MGD y_i1MGA of {
                                            __DEFAULT -> jump go_i1MGC (+# x1_i1MGD 1#);
                                            1# -> jump n_i1MGy
                                          }
                                      }; } in
                                jump go_i1MGC 0#;
                              1# -> jump n_i1MGy
                            } } in
                      case <=# wild6_X8z wild7_X8C of {
                        __DEFAULT -> jump $j_s1NNf wild7_X8C;
                        1# -> jump $j_s1NNf wild6_X8z
                      }
                  };
                1# -> GHC.Types.LT
              };
            0# -> GHC.Types.GT
          };
        0# ->
          case dt1_d1MtJ of {
            __DEFAULT -> GHC.Types.LT;
            0# -> GHC.Types.EQ
          }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 88, types: 60, coercions: 0, joins: 1/4}
GHC.Arr.$fEqArray_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall i e. (Ix i, Eq e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A),A,A,A,A,A,A)><L,U(C(C1(U)),A)><S(SSSL),1*U(U,U,1*U,U)><S(SSLL),1*U(U,U,1*U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LO8)
                 (@ e_a1LO9)
                 ($dIx_a1LOa [Occ=OnceL] :: Ix i_a1LO8)
                 ($dEq_a1LOb [Occ=OnceL] :: Eq e_a1LO9)
                 (x_a22b [Occ=Once!] :: Array i_a1LO8 e_a1LO9)
                 (y_a22c [Occ=Once!] :: Array i_a1LO8 e_a1LO9) ->
                 let {
                   $dOrd_a1M1F [Occ=OnceL] :: Ord i_a1LO8
                   [LclId]
                   $dOrd_a1M1F = GHC.Arr.$p1Ix @ i_a1LO8 $dIx_a1LOa } in
                 let {
                   $dEq1_a1M1G :: Eq i_a1LO8
                   [LclId]
                   $dEq1_a1M1G = GHC.Classes.$p1Ord @ i_a1LO8 $dOrd_a1M1F } in
                 case x_a22b of
                 { Array l1_a1L03 [Occ=Once] u1_a1L04 [Occ=Once] dt_d1MtG
                         ds_d1M9L [Occ=OnceL] ->
                 case y_a22c of
                 { Array l2_a1L07 [Occ=Once] u2_a1L08 [Occ=Once]
                         dt1_d1MtH [Occ=Once] ds1_d1M9M [Occ=OnceL] ->
                 case eqInt (GHC.Types.I# dt_d1MtG) (GHC.Types.I# 0#) of {
                   False ->
                     case == @ i_a1LO8 $dEq1_a1M1G l1_a1L03 l2_a1L07 of {
                       False -> GHC.Types.True;
                       True ->
                         case == @ i_a1LO8 $dEq1_a1M1G u1_a1L04 u2_a1L08 of {
                           False -> GHC.Types.True;
                           True ->
                             case GHC.Enum.eftIntFB
                                    @ Bool
                                    (\ (ds2_d1M9q :: Int)
                                       (ds3_d1M9p [Occ=Once, OS=OneShot] :: Bool) ->
                                       case ==
                                              @ e_a1LO9
                                              $dEq_a1LOb
                                              (case ds2_d1M9q of { I# i#_a1KXR [Occ=Once] ->
                                               case indexArray# @ e_a1LO9 ds_d1M9L i#_a1KXR of
                                               { (# ipv_s1MGr [Occ=Once] #) ->
                                               ipv_s1MGr
                                               }
                                               })
                                              (case ds2_d1M9q of { I# i#_a1KXR [Occ=Once] ->
                                               case indexArray# @ e_a1LO9 ds1_d1M9M i#_a1KXR of
                                               { (# ipv_s1MGr [Occ=Once] #) ->
                                               ipv_s1MGr
                                               }
                                               })
                                       of {
                                         False -> GHC.Types.False;
                                         True -> ds3_d1M9p
                                       })
                                    GHC.Types.True
                                    0#
                                    (-# dt_d1MtG 1#)
                             of {
                               False -> GHC.Types.True;
                               True -> GHC.Types.False
                             }
                         }
                     };
                   True ->
                     case eqInt (GHC.Types.I# dt1_d1MtH) (GHC.Types.I# 0#) of {
                       False -> GHC.Types.True;
                       True -> GHC.Types.False
                     }
                 }
                 }
                 }}]
GHC.Arr.$fEqArray_$c/=
  = \ (@ i_a1LO8)
      (@ e_a1LO9)
      ($dIx_a1LOa :: Ix i_a1LO8)
      ($dEq_a1LOb :: Eq e_a1LO9)
      (eta_X5V :: Array i_a1LO8 e_a1LO9)
      (eta1_XbP :: Array i_a1LO8 e_a1LO9) ->
      case eta_X5V of { Array l1_a1L03 u1_a1L04 dt_d1MtG ds_d1M9L ->
      case eta1_XbP of { Array l2_a1L07 u2_a1L08 dt1_d1MtH ds1_d1M9M ->
      case dt_d1MtG of wild2_X8m {
        __DEFAULT ->
          let {
            $dOrd_a1M1F [Dmd=<S(S(C(C(S))L)LLLLLLL),1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>]
              :: Ord i_a1LO8
            [LclId]
            $dOrd_a1M1F = GHC.Arr.$p1Ix @ i_a1LO8 $dIx_a1LOa } in
          let {
            $dEq1_a1M1G [Dmd=<S(C(C(S))L),U(C(C1(U)),A)>] :: Eq i_a1LO8
            [LclId]
            $dEq1_a1M1G = GHC.Classes.$p1Ord @ i_a1LO8 $dOrd_a1M1F } in
          case == @ i_a1LO8 $dEq1_a1M1G l1_a1L03 l2_a1L07 of {
            False -> GHC.Types.True;
            True ->
              case == @ i_a1LO8 $dEq1_a1M1G u1_a1L04 u2_a1L08 of {
                False -> GHC.Types.True;
                True ->
                  let {
                    y_i1MGA [Dmd=<S,U>] :: Int#
                    [LclId]
                    y_i1MGA = -# wild2_X8m 1# } in
                  case ># 0# y_i1MGA of {
                    __DEFAULT ->
                      joinrec {
                        go_i1MGC [Occ=LoopBreaker] :: Int# -> Bool
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
                        go_i1MGC (x_i1MGD :: Int#)
                          = case ==
                                   @ e_a1LO9
                                   $dEq_a1LOb
                                   (case indexArray# @ e_a1LO9 ds_d1M9L x_i1MGD of
                                    { (# ipv_s1MGr #) ->
                                    ipv_s1MGr
                                    })
                                   (case indexArray# @ e_a1LO9 ds1_d1M9M x_i1MGD of
                                    { (# ipv_s1MGr #) ->
                                    ipv_s1MGr
                                    })
                            of {
                              False -> GHC.Types.True;
                              True ->
                                case ==# x_i1MGD y_i1MGA of {
                                  __DEFAULT -> jump go_i1MGC (+# x_i1MGD 1#);
                                  1# -> GHC.Types.False
                                }
                            }; } in
                      jump go_i1MGC 0#;
                    1# -> GHC.Types.False
                  }
              }
          };
        0# ->
          case dt1_d1MtH of {
            __DEFAULT -> GHC.Types.True;
            0# -> GHC.Types.False
          }
      }
      }
      }

-- RHS size: {terms: 88, types: 60, coercions: 0, joins: 1/4}
eqArray [InlPrag=INLINE (sat-args=2)]
  :: forall i e. (Ix i, Eq e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A),A,A,A,A,A,A)><L,U(C(C1(U)),A)><S(SSSL),1*U(U,U,1*U,U)><S(SSLL),1*U(U,U,1*U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LAa)
                 (@ e_a1LAb)
                 ($dIx_a1LAd [Occ=OnceL] :: Ix i_a1LAa)
                 ($dEq_a1LAe [Occ=OnceL] :: Eq e_a1LAb) ->
                 let {
                   $dOrd_a1M1F [Occ=OnceL] :: Ord i_a1LAa
                   [LclId]
                   $dOrd_a1M1F = GHC.Arr.$p1Ix @ i_a1LAa $dIx_a1LAd } in
                 let {
                   $dEq1_a1M1G :: Eq i_a1LAa
                   [LclId]
                   $dEq1_a1M1G = GHC.Classes.$p1Ord @ i_a1LAa $dOrd_a1M1F } in
                 \ (arr1_a1L02 [Occ=Once!] :: Array i_a1LAa e_a1LAb)
                   (arr2_a1L06 [Occ=Once!] :: Array i_a1LAa e_a1LAb) ->
                   case arr1_a1L02 of
                   { Array l1_a1L03 [Occ=Once] u1_a1L04 [Occ=Once] dt_d1MtG
                           ds_d1M9L [Occ=OnceL] ->
                   case arr2_a1L06 of
                   { Array l2_a1L07 [Occ=Once] u2_a1L08 [Occ=Once]
                           dt1_d1MtH [Occ=Once] ds1_d1M9M [Occ=OnceL] ->
                   case eqInt (GHC.Types.I# dt_d1MtG) (GHC.Types.I# 0#) of {
                     False ->
                       case == @ i_a1LAa $dEq1_a1M1G l1_a1L03 l2_a1L07 of {
                         False -> GHC.Types.False;
                         True ->
                           case == @ i_a1LAa $dEq1_a1M1G u1_a1L04 u2_a1L08 of {
                             False -> GHC.Types.False;
                             True ->
                               GHC.Enum.eftIntFB
                                 @ Bool
                                 (\ (ds2_d1M9q :: Int) (ds3_d1M9p [Occ=Once, OS=OneShot] :: Bool) ->
                                    case ==
                                           @ e_a1LAb
                                           $dEq_a1LAe
                                           (case ds2_d1M9q of { I# i#_a1KXR [Occ=Once] ->
                                            case indexArray# @ e_a1LAb ds_d1M9L i#_a1KXR of
                                            { (# ipv_s1MGr [Occ=Once] #) ->
                                            ipv_s1MGr
                                            }
                                            })
                                           (case ds2_d1M9q of { I# i#_a1KXR [Occ=Once] ->
                                            case indexArray# @ e_a1LAb ds1_d1M9M i#_a1KXR of
                                            { (# ipv_s1MGr [Occ=Once] #) ->
                                            ipv_s1MGr
                                            }
                                            })
                                    of {
                                      False -> GHC.Types.False;
                                      True -> ds3_d1M9p
                                    })
                                 GHC.Types.True
                                 0#
                                 (-# dt_d1MtG 1#)
                           }
                       };
                     True -> eqInt (GHC.Types.I# dt1_d1MtH) (GHC.Types.I# 0#)
                   }
                   }
                   }}]
eqArray
  = \ (@ i_a1LAa)
      (@ e_a1LAb)
      ($dIx_a1LAd :: Ix i_a1LAa)
      ($dEq_a1LAe :: Eq e_a1LAb)
      (eta_X5U :: Array i_a1LAa e_a1LAb)
      (eta1_XbN :: Array i_a1LAa e_a1LAb) ->
      case eta_X5U of { Array l1_a1L03 u1_a1L04 dt_d1MtG ds_d1M9L ->
      case eta1_XbN of { Array l2_a1L07 u2_a1L08 dt1_d1MtH ds1_d1M9M ->
      case dt_d1MtG of wild2_X8p {
        __DEFAULT ->
          let {
            $dOrd_s1Nni [Dmd=<S(S(C(C(S))L)LLLLLLL),1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>]
              :: Ord i_a1LAa
            [LclId]
            $dOrd_s1Nni = GHC.Arr.$p1Ix @ i_a1LAa $dIx_a1LAd } in
          let {
            $dEq1_s1Nnh [Dmd=<S(C(C(S))L),U(C(C1(U)),A)>] :: Eq i_a1LAa
            [LclId]
            $dEq1_s1Nnh = GHC.Classes.$p1Ord @ i_a1LAa $dOrd_s1Nni } in
          case == @ i_a1LAa $dEq1_s1Nnh l1_a1L03 l2_a1L07 of {
            False -> GHC.Types.False;
            True ->
              case == @ i_a1LAa $dEq1_s1Nnh u1_a1L04 u2_a1L08 of {
                False -> GHC.Types.False;
                True ->
                  let {
                    y_i1MGA [Dmd=<S,U>] :: Int#
                    [LclId]
                    y_i1MGA = -# wild2_X8p 1# } in
                  case ># 0# y_i1MGA of {
                    __DEFAULT ->
                      joinrec {
                        go_i1MGC [Occ=LoopBreaker] :: Int# -> Bool
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
                        go_i1MGC (x_i1MGD :: Int#)
                          = case ==
                                   @ e_a1LAb
                                   $dEq_a1LAe
                                   (case indexArray# @ e_a1LAb ds_d1M9L x_i1MGD of
                                    { (# ipv_s1MGr #) ->
                                    ipv_s1MGr
                                    })
                                   (case indexArray# @ e_a1LAb ds1_d1M9M x_i1MGD of
                                    { (# ipv_s1MGr #) ->
                                    ipv_s1MGr
                                    })
                            of {
                              False -> GHC.Types.False;
                              True ->
                                case ==# x_i1MGD y_i1MGA of {
                                  __DEFAULT -> jump go_i1MGC (+# x_i1MGD 1#);
                                  1# -> GHC.Types.True
                                }
                            }; } in
                      jump go_i1MGC 0#;
                    1# -> GHC.Types.True
                  }
              }
          };
        0# ->
          case dt1_d1MtH of {
            __DEFAULT -> GHC.Types.False;
            0# -> GHC.Types.True
          }
      }
      }
      }

-- RHS size: {terms: 11, types: 15, coercions: 0, joins: 0/0}
GHC.Arr.$fEqArray [InlPrag=NOUSERINLINE CONLIKE]
  :: forall i e. (Ix i, Eq e) => Eq (Array i e)
[GblId[DFunId],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U(U(C(C1(U)),A),A,A,A,A,A,A,A),A,A,A,A,A,A)><L,U(C(C1(U)),A)>m,
 Unf=DFun: \ (@ i_a1KRx)
             (@ e_a1KRy)
             (v_X5T :: Ix i_a1KRx)
             (v1_X5V :: Eq e_a1KRy) ->
       GHC.Classes.C:Eq TYPE: Array i_a1KRx e_a1KRy
                        eqArray @ i_a1KRx @ e_a1KRy v_X5T v1_X5V
                        GHC.Arr.$fEqArray_$c/= @ i_a1KRx @ e_a1KRy v_X5T v1_X5V]
GHC.Arr.$fEqArray
  = \ (@ i_a1LO8)
      (@ e_a1LO9)
      ($dIx_a1LOa :: Ix i_a1LO8)
      ($dEq_a1LOb :: Eq e_a1LO9) ->
      GHC.Classes.C:Eq
        @ (Array i_a1LO8 e_a1LO9)
        (eqArray @ i_a1LO8 @ e_a1LO9 $dIx_a1LOa $dEq_a1LOb)
        (GHC.Arr.$fEqArray_$c/= @ i_a1LO8 @ e_a1LO9 $dIx_a1LOa $dEq_a1LOb)

-- RHS size: {terms: 8, types: 11, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$cp1Ord
  :: forall i e. (Ix i, Ord e) => Eq (Array i e)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U(U(C(C1(U)),A),A,A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_a1LNi)
                 (@ e_a1LNj)
                 ($dIx_a1LNk [Occ=Once] :: Ix i_a1LNi)
                 ($dOrd_a1LNl [Occ=Once] :: Ord e_a1LNj) ->
                 GHC.Arr.$fEqArray
                   @ i_a1LNi
                   @ e_a1LNj
                   $dIx_a1LNk
                   (GHC.Classes.$p1Ord @ e_a1LNj $dOrd_a1LNl)}]
GHC.Arr.$fOrdArray_$cp1Ord
  = \ (@ i_a1LNi)
      (@ e_a1LNj)
      ($dIx_a1LNk :: Ix i_a1LNi)
      ($dOrd_a1LNl :: Ord e_a1LNj) ->
      GHC.Arr.$fEqArray
        @ i_a1LNi
        @ e_a1LNj
        $dIx_a1LNk
        (GHC.Classes.$p1Ord @ e_a1LNj $dOrd_a1LNl)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r1Xvf :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_r1Xvf = "foldr1: empty Array"#

-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
lvl5_r1Xvg :: forall a. a
[GblId, Str=x]
lvl5_r1Xvg
  = \ (@ a_a1Lzw) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a1Lzw (unpackCString# lvl4_r1Xvf)

-- RHS size: {terms: 41, types: 27, coercions: 0, joins: 0/2}
GHC.Arr.$wfoldr1Elems [InlPrag=INLINABLE[0]]
  :: forall a i. (a -> a -> a) -> Int# -> Array# a -> a
[GblId,
 Arity=3,
 Str=<L,C(C1(U))><S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 130 0] 265 0
         Tmpl= \ (@ a_s1Thx)
                 (@ i_s1Thy)
                 (w_s1Thz [Occ=OnceL!] :: a_s1Thx -> a_s1Thx -> a_s1Thx)
                 (ww_s1ThF [Occ=Once!] :: Int#)
                 (ww1_s1ThG [Occ=OnceL*] :: Array# a_s1Thx) ->
                 case ww_s1ThF of wild_X8S {
                   __DEFAULT ->
                     letrec {
                       go_a1LzB [Occ=LoopBreaker] :: Int -> a_s1Thx
                       [LclId, Arity=1, Unf=OtherCon []]
                       go_a1LzB
                         = \ (i1_a1KYA [Occ=Once!] :: Int) ->
                             case i1_a1KYA of { I# x_X2bC ->
                             case ==# x_X2bC (-# wild_X8S 1#) of {
                               __DEFAULT ->
                                 w_s1Thz
                                   (case indexArray# @ a_s1Thx ww1_s1ThG x_X2bC of
                                    { (# ipv_s1MGr [Occ=Once] #) ->
                                    ipv_s1MGr
                                    })
                                   (go_a1LzB (GHC.Types.I# (+# x_X2bC 1#)));
                               1# ->
                                 case indexArray# @ a_s1Thx ww1_s1ThG x_X2bC of
                                 { (# ipv_s1MGr [Occ=Once] #) ->
                                 ipv_s1MGr
                                 }
                             }
                             }; } in
                     go_a1LzB (GHC.Types.I# 0#);
                   0# ->
                     errorWithoutStackTrace
                       @ 'LiftedRep @ a_s1Thx (unpackCString# "foldr1: empty Array"#)
                 }}]
GHC.Arr.$wfoldr1Elems
  = \ (@ a_s1Thx)
      (@ i_s1Thy)
      (w_s1Thz :: a_s1Thx -> a_s1Thx -> a_s1Thx)
      (ww_s1ThF :: Int#)
      (ww1_s1ThG :: Array# a_s1Thx) ->
      case ww_s1ThF of wild_X8k {
        __DEFAULT ->
          let {
            lvl50_s1NLV [Dmd=<S,U>] :: Int#
            [LclId]
            lvl50_s1NLV = -# wild_X8k 1# } in
          letrec {
            $wgo_s1Thw [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
              :: Int# -> a_s1Thx
            [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
            $wgo_s1Thw
              = \ (ww2_s1Thu :: Int#) ->
                  case ==# ww2_s1Thu lvl50_s1NLV of {
                    __DEFAULT ->
                      w_s1Thz
                        (case indexArray# @ a_s1Thx ww1_s1ThG ww2_s1Thu of
                         { (# ipv_s1MGr #) ->
                         ipv_s1MGr
                         })
                        ($wgo_s1Thw (+# ww2_s1Thu 1#));
                    1# ->
                      case indexArray# @ a_s1Thx ww1_s1ThG ww2_s1Thu of
                      { (# ipv_s1MGr #) ->
                      ipv_s1MGr
                      }
                  }; } in
          $wgo_s1Thw 0#;
        0# -> lvl5_r1Xvg @ a_s1Thx
      }

-- RHS size: {terms: 11, types: 20, coercions: 0, joins: 0/0}
foldr1Elems [InlPrag=NOUSERINLINE[0]]
  :: forall a i. (a -> a -> a) -> Array i a -> a
[GblId,
 Arity=2,
 Str=<L,C(C1(U))><S(LLSS),1*U(A,A,1*U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1Thx)
                 (@ i_s1Thy)
                 (w_s1Thz [Occ=Once] :: a_s1Thx -> a_s1Thx -> a_s1Thx)
                 (w1_s1ThA [Occ=Once!] :: Array i_s1Thy a_s1Thx) ->
                 case w1_s1ThA of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1ThF [Occ=Once]
                         ww4_s1ThG [Occ=Once] ->
                 GHC.Arr.$wfoldr1Elems
                   @ a_s1Thx @ i_s1Thy w_s1Thz ww3_s1ThF ww4_s1ThG
                 }}]
foldr1Elems
  = \ (@ a_s1Thx)
      (@ i_s1Thy)
      (w_s1Thz :: a_s1Thx -> a_s1Thx -> a_s1Thx)
      (w1_s1ThA :: Array i_s1Thy a_s1Thx) ->
      case w1_s1ThA of { Array ww1_s1ThD ww2_s1ThE ww3_s1ThF ww4_s1ThG ->
      GHC.Arr.$wfoldr1Elems
        @ a_s1Thx @ i_s1Thy w_s1Thz ww3_s1ThF ww4_s1ThG
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl6_r1Xvh :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl6_r1Xvh = "foldl1: empty Array"#

-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
lvl7_r1Xvi :: forall a. a
[GblId, Str=x]
lvl7_r1Xvi
  = \ (@ a_a1LyQ) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a1LyQ (unpackCString# lvl6_r1Xvh)

-- RHS size: {terms: 37, types: 26, coercions: 0, joins: 0/1}
GHC.Arr.$wfoldl1Elems [InlPrag=INLINABLE[0]]
  :: forall a i. (a -> a -> a) -> Int# -> Array# a -> a
[GblId,
 Arity=3,
 Str=<L,C(C1(U))><S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 130 0] 264 0
         Tmpl= \ (@ a_s1ThP)
                 (@ i_s1ThQ)
                 (w_s1ThR [Occ=OnceL!] :: a_s1ThP -> a_s1ThP -> a_s1ThP)
                 (ww_s1ThX [Occ=Once!] :: Int#)
                 (ww1_s1ThY [Occ=OnceL*] :: Array# a_s1ThP) ->
                 case ww_s1ThX of wild_X8V {
                   __DEFAULT ->
                     letrec {
                       go_a1LyV [Occ=LoopBreaker] :: Int -> a_s1ThP
                       [LclId, Arity=1, Unf=OtherCon []]
                       go_a1LyV
                         = \ (i1_a1KYv [Occ=Once!] :: Int) ->
                             case i1_a1KYv of { I# x_X2bF [Occ=Once!] ->
                             case x_X2bF of wild2_X95 {
                               __DEFAULT ->
                                 w_s1ThR
                                   (go_a1LyV (GHC.Types.I# (-# wild2_X95 1#)))
                                   (case indexArray# @ a_s1ThP ww1_s1ThY wild2_X95 of
                                    { (# ipv_s1MGr [Occ=Once] #) ->
                                    ipv_s1MGr
                                    });
                               0# ->
                                 case indexArray# @ a_s1ThP ww1_s1ThY 0# of
                                 { (# ipv_s1MGr [Occ=Once] #) ->
                                 ipv_s1MGr
                                 }
                             }
                             }; } in
                     go_a1LyV (GHC.Types.I# (-# wild_X8V 1#));
                   0# ->
                     errorWithoutStackTrace
                       @ 'LiftedRep @ a_s1ThP (unpackCString# "foldl1: empty Array"#)
                 }}]
GHC.Arr.$wfoldl1Elems
  = \ (@ a_s1ThP)
      (@ i_s1ThQ)
      (w_s1ThR :: a_s1ThP -> a_s1ThP -> a_s1ThP)
      (ww_s1ThX :: Int#)
      (ww1_s1ThY :: Array# a_s1ThP) ->
      case ww_s1ThX of wild_X8k {
        __DEFAULT ->
          letrec {
            $wgo_s1ThO [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
              :: Int# -> a_s1ThP
            [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
            $wgo_s1ThO
              = \ (ww2_s1ThM :: Int#) ->
                  case ww2_s1ThM of wild1_X8v {
                    __DEFAULT ->
                      w_s1ThR
                        ($wgo_s1ThO (-# wild1_X8v 1#))
                        (case indexArray# @ a_s1ThP ww1_s1ThY wild1_X8v of
                         { (# ipv_s1MGr #) ->
                         ipv_s1MGr
                         });
                    0# ->
                      case indexArray# @ a_s1ThP ww1_s1ThY 0# of { (# ipv_s1MGr #) ->
                      ipv_s1MGr
                      }
                  }; } in
          $wgo_s1ThO (-# wild_X8k 1#);
        0# -> lvl7_r1Xvi @ a_s1ThP
      }

-- RHS size: {terms: 11, types: 20, coercions: 0, joins: 0/0}
foldl1Elems [InlPrag=NOUSERINLINE[0]]
  :: forall a i. (a -> a -> a) -> Array i a -> a
[GblId,
 Arity=2,
 Str=<L,C(C1(U))><S(LLSS),1*U(A,A,1*U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1ThP)
                 (@ i_s1ThQ)
                 (w_s1ThR [Occ=Once] :: a_s1ThP -> a_s1ThP -> a_s1ThP)
                 (w1_s1ThS [Occ=Once!] :: Array i_s1ThQ a_s1ThP) ->
                 case w1_s1ThS of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1ThX [Occ=Once]
                         ww4_s1ThY [Occ=Once] ->
                 GHC.Arr.$wfoldl1Elems
                   @ a_s1ThP @ i_s1ThQ w_s1ThR ww3_s1ThX ww4_s1ThY
                 }}]
foldl1Elems
  = \ (@ a_s1ThP)
      (@ i_s1ThQ)
      (w_s1ThR :: a_s1ThP -> a_s1ThP -> a_s1ThP)
      (w1_s1ThS :: Array i_s1ThQ a_s1ThP) ->
      case w1_s1ThS of { Array ww1_s1ThV ww2_s1ThW ww3_s1ThX ww4_s1ThY ->
      GHC.Arr.$wfoldl1Elems
        @ a_s1ThP @ i_s1ThQ w_s1ThR ww3_s1ThX ww4_s1ThY
      }

-- RHS size: {terms: 35, types: 25, coercions: 0, joins: 1/1}
GHC.Arr.$wfoldlElems' [InlPrag=INLINABLE[0]]
  :: forall b a i. (b -> a -> b) -> b -> Int# -> Array# a -> b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><S,1*U><S,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0 0 0] 105 0
         Tmpl= \ (@ b_s1Ti8)
                 (@ a_s1Ti9)
                 (@ i_s1Tia)
                 (w_s1Tib [Occ=OnceL!] :: b_s1Ti8 -> a_s1Ti9 -> b_s1Ti8)
                 (w1_s1Tic [Occ=Once] :: b_s1Ti8)
                 (ww_s1Tii [Occ=OnceL] :: Int#)
                 (ww1_s1Tij [Occ=OnceL] :: Array# a_s1Ti9) ->
                 joinrec {
                   go_a1Lym [Occ=LoopBreakerT[2]] :: Int -> b_s1Ti8 -> b_s1Ti8
                   [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                   go_a1Lym (i1_a1KYp [Occ=Once!] :: Int)
                            (a1_a1KYq [Occ=Once*] :: b_s1Ti8)
                     = case i1_a1KYp of { I# x_a22G ->
                       case ==# x_a22G ww_s1Tii of {
                         __DEFAULT ->
                           jump go_a1Lym
                             (GHC.Types.I# (+# x_a22G 1#))
                             (case a1_a1KYq of a2_X1KYI { __DEFAULT ->
                              w_s1Tib
                                a2_X1KYI
                                (case indexArray# @ a_s1Ti9 ww1_s1Tij x_a22G of
                                 { (# ipv_s1MGr [Occ=Once] #) ->
                                 ipv_s1MGr
                                 })
                              });
                         1# -> a1_a1KYq
                       }
                       }; } in
                 jump go_a1Lym (GHC.Types.I# 0#) w1_s1Tic}]
GHC.Arr.$wfoldlElems'
  = \ (@ b_s1Ti8)
      (@ a_s1Ti9)
      (@ i_s1Tia)
      (w_s1Tib :: b_s1Ti8 -> a_s1Ti9 -> b_s1Ti8)
      (w1_s1Tic :: b_s1Ti8)
      (ww_s1Tii :: Int#)
      (ww1_s1Tij :: Array# a_s1Ti9) ->
      joinrec {
        $wgo_s1Ti7 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int# -> b_s1Ti8 -> b_s1Ti8
        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,1*U>, Unf=OtherCon []]
        $wgo_s1Ti7 (ww2_s1Ti5 :: Int#) (w2_s1Ti2 :: b_s1Ti8)
          = case ==# ww2_s1Ti5 ww_s1Tii of {
              __DEFAULT ->
                case w2_s1Ti2 of a1_X1L0d { __DEFAULT ->
                jump $wgo_s1Ti7
                  (+# ww2_s1Ti5 1#)
                  (w_s1Tib
                     a1_X1L0d
                     (case indexArray# @ a_s1Ti9 ww1_s1Tij ww2_s1Ti5 of
                      { (# ipv_s1MGr #) ->
                      ipv_s1MGr
                      }))
                };
              1# -> w2_s1Ti2
            }; } in
      jump $wgo_s1Ti7 0# w1_s1Tic

-- RHS size: {terms: 14, types: 24, coercions: 0, joins: 0/0}
foldlElems' [InlPrag=NOUSERINLINE[0]]
  :: forall b a i. (b -> a -> b) -> b -> Array i a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><S,1*U><S(LLSS),1*U(A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ b_s1Ti8)
                 (@ a_s1Ti9)
                 (@ i_s1Tia)
                 (w_s1Tib [Occ=Once] :: b_s1Ti8 -> a_s1Ti9 -> b_s1Ti8)
                 (w1_s1Tic [Occ=Once] :: b_s1Ti8)
                 (w2_s1Tid [Occ=Once!] :: Array i_s1Tia a_s1Ti9) ->
                 case w2_s1Tid of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1Tii [Occ=Once]
                         ww4_s1Tij [Occ=Once] ->
                 GHC.Arr.$wfoldlElems'
                   @ b_s1Ti8 @ a_s1Ti9 @ i_s1Tia w_s1Tib w1_s1Tic ww3_s1Tii ww4_s1Tij
                 }}]
foldlElems'
  = \ (@ b_s1Ti8)
      (@ a_s1Ti9)
      (@ i_s1Tia)
      (w_s1Tib :: b_s1Ti8 -> a_s1Ti9 -> b_s1Ti8)
      (w1_s1Tic :: b_s1Ti8)
      (w2_s1Tid :: Array i_s1Tia a_s1Ti9) ->
      case w2_s1Tid of { Array ww1_s1Tig ww2_s1Tih ww3_s1Tii ww4_s1Tij ->
      GHC.Arr.$wfoldlElems'
        @ b_s1Ti8 @ a_s1Ti9 @ i_s1Tia w_s1Tib w1_s1Tic ww3_s1Tii ww4_s1Tij
      }

-- RHS size: {terms: 35, types: 25, coercions: 0, joins: 1/1}
GHC.Arr.$wfoldrElems' [InlPrag=INLINABLE[0]]
  :: forall a b i. (a -> b -> b) -> b -> Int# -> Array# a -> b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><S,1*U><S,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0 0 0] 105 0
         Tmpl= \ (@ a_s1Tit)
                 (@ b_s1Tiu)
                 (@ i_s1Tiv)
                 (w_s1Tiw [Occ=OnceL!] :: a_s1Tit -> b_s1Tiu -> b_s1Tiu)
                 (w1_s1Tix [Occ=Once] :: b_s1Tiu)
                 (ww_s1TiD [Occ=Once] :: Int#)
                 (ww1_s1TiE [Occ=OnceL] :: Array# a_s1Tit) ->
                 joinrec {
                   go_a1Lxx [Occ=LoopBreakerT[2]] :: Int -> b_s1Tiu -> b_s1Tiu
                   [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                   go_a1Lxx (i1_a1KYi [Occ=Once!] :: Int)
                            (a1_a1KYj [Occ=Once*] :: b_s1Tiu)
                     = case i1_a1KYi of { I# x_a22G [Occ=Once!] ->
                       case x_a22G of wild1_X98 {
                         __DEFAULT ->
                           jump go_a1Lxx
                             (GHC.Types.I# (-# wild1_X98 1#))
                             (case a1_a1KYj of vx_i1M8a { __DEFAULT ->
                              w_s1Tiw
                                (case indexArray# @ a_s1Tit ww1_s1TiE wild1_X98 of
                                 { (# ipv_s1MGr [Occ=Once] #) ->
                                 ipv_s1MGr
                                 })
                                vx_i1M8a
                              });
                         -1# -> a1_a1KYj
                       }
                       }; } in
                 jump go_a1Lxx (GHC.Types.I# (-# ww_s1TiD 1#)) w1_s1Tix}]
GHC.Arr.$wfoldrElems'
  = \ (@ a_s1Tit)
      (@ b_s1Tiu)
      (@ i_s1Tiv)
      (w_s1Tiw :: a_s1Tit -> b_s1Tiu -> b_s1Tiu)
      (w1_s1Tix :: b_s1Tiu)
      (ww_s1TiD :: Int#)
      (ww1_s1TiE :: Array# a_s1Tit) ->
      joinrec {
        $wgo_s1Tis [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int# -> b_s1Tiu -> b_s1Tiu
        [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,1*U>, Unf=OtherCon []]
        $wgo_s1Tis (ww2_s1Tiq :: Int#) (w2_s1Tin :: b_s1Tiu)
          = case ww2_s1Tiq of wild_X8x {
              __DEFAULT ->
                case w2_s1Tin of vx_i1M8a { __DEFAULT ->
                jump $wgo_s1Tis
                  (-# wild_X8x 1#)
                  (w_s1Tiw
                     (case indexArray# @ a_s1Tit ww1_s1TiE wild_X8x of
                      { (# ipv_s1MGr #) ->
                      ipv_s1MGr
                      })
                     vx_i1M8a)
                };
              -1# -> w2_s1Tin
            }; } in
      jump $wgo_s1Tis (-# ww_s1TiD 1#) w1_s1Tix

-- RHS size: {terms: 14, types: 24, coercions: 0, joins: 0/0}
foldrElems' [InlPrag=NOUSERINLINE[0]]
  :: forall a b i. (a -> b -> b) -> b -> Array i a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><S,1*U><S(LLSS),1*U(A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1Tit)
                 (@ b_s1Tiu)
                 (@ i_s1Tiv)
                 (w_s1Tiw [Occ=Once] :: a_s1Tit -> b_s1Tiu -> b_s1Tiu)
                 (w1_s1Tix [Occ=Once] :: b_s1Tiu)
                 (w2_s1Tiy [Occ=Once!] :: Array i_s1Tiv a_s1Tit) ->
                 case w2_s1Tiy of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1TiD [Occ=Once]
                         ww4_s1TiE [Occ=Once] ->
                 GHC.Arr.$wfoldrElems'
                   @ a_s1Tit @ b_s1Tiu @ i_s1Tiv w_s1Tiw w1_s1Tix ww3_s1TiD ww4_s1TiE
                 }}]
foldrElems'
  = \ (@ a_s1Tit)
      (@ b_s1Tiu)
      (@ i_s1Tiv)
      (w_s1Tiw :: a_s1Tit -> b_s1Tiu -> b_s1Tiu)
      (w1_s1Tix :: b_s1Tiu)
      (w2_s1Tiy :: Array i_s1Tiv a_s1Tit) ->
      case w2_s1Tiy of { Array ww1_s1TiB ww2_s1TiC ww3_s1TiD ww4_s1TiE ->
      GHC.Arr.$wfoldrElems'
        @ a_s1Tit @ b_s1Tiu @ i_s1Tiv w_s1Tiw w1_s1Tix ww3_s1TiD ww4_s1TiE
      }

-- RHS size: {terms: 29, types: 22, coercions: 0, joins: 0/1}
GHC.Arr.$wfoldlElems [InlPrag=INLINABLE[0]]
  :: forall b a i. (b -> a -> b) -> b -> Int# -> Array# a -> b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><L,U><S,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0 0 0] 143 0
         Tmpl= \ (@ b_s1TiN)
                 (@ a_s1TiO)
                 (@ i_s1TiP)
                 (w_s1TiQ [Occ=OnceL!] :: b_s1TiN -> a_s1TiO -> b_s1TiN)
                 (w1_s1TiR [Occ=OnceL] :: b_s1TiN)
                 (ww_s1TiX [Occ=Once] :: Int#)
                 (ww1_s1TiY [Occ=OnceL] :: Array# a_s1TiO) ->
                 letrec {
                   go_a1LwW [Occ=LoopBreaker] :: Int -> b_s1TiN
                   [LclId, Arity=1, Unf=OtherCon []]
                   go_a1LwW
                     = \ (i1_a1KYc [Occ=Once!] :: Int) ->
                         case i1_a1KYc of { I# x_a22G [Occ=Once!] ->
                         case x_a22G of wild1_X99 {
                           __DEFAULT ->
                             w_s1TiQ
                               (go_a1LwW (GHC.Types.I# (-# wild1_X99 1#)))
                               (case indexArray# @ a_s1TiO ww1_s1TiY wild1_X99 of
                                { (# ipv_s1MGr [Occ=Once] #) ->
                                ipv_s1MGr
                                });
                           -1# -> w1_s1TiR
                         }
                         }; } in
                 go_a1LwW (GHC.Types.I# (-# ww_s1TiX 1#))}]
GHC.Arr.$wfoldlElems
  = \ (@ b_s1TiN)
      (@ a_s1TiO)
      (@ i_s1TiP)
      (w_s1TiQ :: b_s1TiN -> a_s1TiO -> b_s1TiN)
      (w1_s1TiR :: b_s1TiN)
      (ww_s1TiX :: Int#)
      (ww1_s1TiY :: Array# a_s1TiO) ->
      letrec {
        $wgo_s1TiM [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int# -> b_s1TiN
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        $wgo_s1TiM
          = \ (ww2_s1TiK :: Int#) ->
              case ww2_s1TiK of wild_X8y {
                __DEFAULT ->
                  w_s1TiQ
                    ($wgo_s1TiM (-# wild_X8y 1#))
                    (case indexArray# @ a_s1TiO ww1_s1TiY wild_X8y of
                     { (# ipv_s1MGr #) ->
                     ipv_s1MGr
                     });
                -1# -> w1_s1TiR
              }; } in
      $wgo_s1TiM (-# ww_s1TiX 1#)

-- RHS size: {terms: 14, types: 24, coercions: 0, joins: 0/0}
foldlElems [InlPrag=NOUSERINLINE[0]]
  :: forall b a i. (b -> a -> b) -> b -> Array i a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><L,U><S(LLSS),1*U(A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ b_s1TiN)
                 (@ a_s1TiO)
                 (@ i_s1TiP)
                 (w_s1TiQ [Occ=Once] :: b_s1TiN -> a_s1TiO -> b_s1TiN)
                 (w1_s1TiR [Occ=Once] :: b_s1TiN)
                 (w2_s1TiS [Occ=Once!] :: Array i_s1TiP a_s1TiO) ->
                 case w2_s1TiS of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1TiX [Occ=Once]
                         ww4_s1TiY [Occ=Once] ->
                 GHC.Arr.$wfoldlElems
                   @ b_s1TiN @ a_s1TiO @ i_s1TiP w_s1TiQ w1_s1TiR ww3_s1TiX ww4_s1TiY
                 }}]
foldlElems
  = \ (@ b_s1TiN)
      (@ a_s1TiO)
      (@ i_s1TiP)
      (w_s1TiQ :: b_s1TiN -> a_s1TiO -> b_s1TiN)
      (w1_s1TiR :: b_s1TiN)
      (w2_s1TiS :: Array i_s1TiP a_s1TiO) ->
      case w2_s1TiS of { Array ww1_s1TiV ww2_s1TiW ww3_s1TiX ww4_s1TiY ->
      GHC.Arr.$wfoldlElems
        @ b_s1TiN @ a_s1TiO @ i_s1TiP w_s1TiQ w1_s1TiR ww3_s1TiX ww4_s1TiY
      }

-- RHS size: {terms: 29, types: 22, coercions: 0, joins: 0/1}
GHC.Arr.$wfoldrElems [InlPrag=INLINABLE[0]]
  :: forall a b i. (a -> b -> b) -> b -> Int# -> Array# a -> b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><L,U><S,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0 0 0] 143 0
         Tmpl= \ (@ a_s1Tj7)
                 (@ b_s1Tj8)
                 (@ i_s1Tj9)
                 (w_s1Tja [Occ=OnceL!] :: a_s1Tj7 -> b_s1Tj8 -> b_s1Tj8)
                 (w1_s1Tjb [Occ=OnceL] :: b_s1Tj8)
                 (ww_s1Tjh [Occ=OnceL] :: Int#)
                 (ww1_s1Tji [Occ=OnceL] :: Array# a_s1Tj7) ->
                 letrec {
                   go_a1Lwu [Occ=LoopBreaker] :: Int -> b_s1Tj8
                   [LclId, Arity=1, Unf=OtherCon []]
                   go_a1Lwu
                     = \ (i1_a1KY6 [Occ=Once!] :: Int) ->
                         case i1_a1KY6 of { I# x_a22G ->
                         case ==# x_a22G ww_s1Tjh of {
                           __DEFAULT ->
                             w_s1Tja
                               (case indexArray# @ a_s1Tj7 ww1_s1Tji x_a22G of
                                { (# ipv_s1MGr [Occ=Once] #) ->
                                ipv_s1MGr
                                })
                               (go_a1Lwu (GHC.Types.I# (+# x_a22G 1#)));
                           1# -> w1_s1Tjb
                         }
                         }; } in
                 go_a1Lwu (GHC.Types.I# 0#)}]
GHC.Arr.$wfoldrElems
  = \ (@ a_s1Tj7)
      (@ b_s1Tj8)
      (@ i_s1Tj9)
      (w_s1Tja :: a_s1Tj7 -> b_s1Tj8 -> b_s1Tj8)
      (w1_s1Tjb :: b_s1Tj8)
      (ww_s1Tjh :: Int#)
      (ww1_s1Tji :: Array# a_s1Tj7) ->
      letrec {
        $wgo_s1Tj6 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int# -> b_s1Tj8
        [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
        $wgo_s1Tj6
          = \ (ww2_s1Tj4 :: Int#) ->
              case ==# ww2_s1Tj4 ww_s1Tjh of {
                __DEFAULT ->
                  w_s1Tja
                    (case indexArray# @ a_s1Tj7 ww1_s1Tji ww2_s1Tj4 of
                     { (# ipv_s1MGr #) ->
                     ipv_s1MGr
                     })
                    ($wgo_s1Tj6 (+# ww2_s1Tj4 1#));
                1# -> w1_s1Tjb
              }; } in
      $wgo_s1Tj6 0#

-- RHS size: {terms: 14, types: 24, coercions: 0, joins: 0/0}
foldrElems [InlPrag=NOUSERINLINE[0]]
  :: forall a b i. (a -> b -> b) -> b -> Array i a -> b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,C(C1(U))><L,U><S(LLSS),1*U(A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1Tj7)
                 (@ b_s1Tj8)
                 (@ i_s1Tj9)
                 (w_s1Tja [Occ=Once] :: a_s1Tj7 -> b_s1Tj8 -> b_s1Tj8)
                 (w1_s1Tjb [Occ=Once] :: b_s1Tj8)
                 (w2_s1Tjc [Occ=Once!] :: Array i_s1Tj9 a_s1Tj7) ->
                 case w2_s1Tjc of
                 { Array _ [Occ=Dead] _ [Occ=Dead] ww3_s1Tjh [Occ=Once]
                         ww4_s1Tji [Occ=Once] ->
                 GHC.Arr.$wfoldrElems
                   @ a_s1Tj7 @ b_s1Tj8 @ i_s1Tj9 w_s1Tja w1_s1Tjb ww3_s1Tjh ww4_s1Tji
                 }}]
foldrElems
  = \ (@ a_s1Tj7)
      (@ b_s1Tj8)
      (@ i_s1Tj9)
      (w_s1Tja :: a_s1Tj7 -> b_s1Tj8 -> b_s1Tj8)
      (w1_s1Tjb :: b_s1Tj8)
      (w2_s1Tjc :: Array i_s1Tj9 a_s1Tj7) ->
      case w2_s1Tjc of { Array ww1_s1Tjf ww2_s1Tjg ww3_s1Tjh ww4_s1Tji ->
      GHC.Arr.$wfoldrElems
        @ a_s1Tj7 @ b_s1Tj8 @ i_s1Tj9 w_s1Tja w1_s1Tjb ww3_s1Tjh ww4_s1Tji
      }

-- RHS size: {terms: 39, types: 30, coercions: 0, joins: 0/2}
elems [InlPrag=INLINE (sat-args=1)] :: forall i e. Array i e -> [e]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSL),1*U(A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1Lwa)
                 (@ e_a1Lwb)
                 (arr_a1KXY [Occ=Once!] :: Array i_a1Lwa e_a1Lwb) ->
                 case arr_a1KXY of
                 { Array _ [Occ=Dead] _ [Occ=Dead] dt_d1Mtz [Occ=Once]
                         ds2_d1M7t [Occ=OnceL] ->
                 build
                   @ e_a1Lwb
                   (\ (@ a_d1M7b)
                      (c_d1M7c [Occ=OnceL!, OS=OneShot] :: e_a1Lwb -> a_d1M7b -> a_d1M7b)
                      (n_d1M7d [Occ=Once, OS=OneShot] :: a_d1M7b) ->
                      GHC.Enum.eftIntFB
                        @ a_d1M7b
                        (\ (ds3_d1M7f [Occ=Once!] :: Int)
                           (ds4_d1M7e [Occ=Once, OS=OneShot] :: a_d1M7b) ->
                           c_d1M7c
                             (case ds3_d1M7f of { I# i#_a1KXR [Occ=Once] ->
                              case indexArray# @ e_a1Lwb ds2_d1M7t i#_a1KXR of
                              { (# ipv_s1MGr [Occ=Once] #) ->
                              ipv_s1MGr
                              }
                              })
                             ds4_d1M7e)
                        n_d1M7d
                        0#
                        (-# dt_d1Mtz 1#))
                 }}]
elems
  = \ (@ i_a1Lwa) (@ e_a1Lwb) (eta_X5K :: Array i_a1Lwa e_a1Lwb) ->
      case eta_X5K of { Array ds_d1M7r ds1_d1M7s dt_d1Mtz ds2_d1M7t ->
      let {
        y_i1MGA [Dmd=<S,U>] :: Int#
        [LclId]
        y_i1MGA = -# dt_d1Mtz 1# } in
      case ># 0# y_i1MGA of {
        __DEFAULT ->
          letrec {
            go_i1MGC [Occ=LoopBreaker] :: Int# -> [e_a1Lwb]
            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
            go_i1MGC
              = \ (x_i1MGD :: Int#) ->
                  GHC.Types.:
                    @ e_a1Lwb
                    (case indexArray# @ e_a1Lwb ds2_d1M7t x_i1MGD of
                     { (# ipv_s1MGr #) ->
                     ipv_s1MGr
                     })
                    (case ==# x_i1MGD y_i1MGA of {
                       __DEFAULT -> go_i1MGC (+# x_i1MGD 1#);
                       1# -> GHC.Types.[] @ e_a1Lwb
                     }); } in
          go_i1MGC 0#;
        1# -> GHC.Types.[] @ e_a1Lwb
      }
      }

-- RHS size: {terms: 16, types: 23, coercions: 0, joins: 0/0}
unsafeAt [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Array i e -> Int -> e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1Lw4)
                 (@ e_a1Lw5)
                 (ds_d1M6P [Occ=Once!] :: Array i_a1Lw4 e_a1Lw5)
                 (ds1_d1M6Q [Occ=Once!] :: Int) ->
                 case ds_d1M6P of
                 { Array _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                         arr#_a1KXQ [Occ=Once] ->
                 case ds1_d1M6Q of { I# i#_a1KXR [Occ=Once] ->
                 case indexArray# @ e_a1Lw5 arr#_a1KXQ i#_a1KXR of
                 { (# ipv_s1MGr [Occ=Once] #) ->
                 ipv_s1MGr
                 }
                 }
                 }}]
unsafeAt
  = \ (@ i_a1Lw4)
      (@ e_a1Lw5)
      (ds_d1M6P :: Array i_a1Lw4 e_a1Lw5)
      (ds1_d1M6Q :: Int) ->
      case ds_d1M6P of { Array ds2_d1M76 ds3_d1M77 dt_d1Mty arr#_a1KXQ ->
      case ds1_d1M6Q of { I# i#_a1KXR ->
      case indexArray# @ e_a1Lw5 arr#_a1KXQ i#_a1KXR of
      { (# ipv_s1MGm #) ->
      ipv_s1MGm
      }
      }
      }

-- RHS size: {terms: 12, types: 15, coercions: 0, joins: 0/0}
lessSafeIndex :: forall i. Ix i => (i, i) -> Int -> i -> Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLC(C(S))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S,1*U(U,U)><L,A><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_a1LBL)
                 ($dIx_a1LBN [Occ=Once] :: Ix i_a1LBL)
                 (ds_d1Mas [Occ=Once!] :: (i_a1LBL, i_a1LBL))
                 _ [Occ=Dead]
                 (i1_a1KXN [Occ=Once] :: i_a1LBL) ->
                 case ds_d1Mas of { (l_a1KXL [Occ=Once], u_a1KXM [Occ=Once]) ->
                 index @ i_a1LBL $dIx_a1LBN (l_a1KXL, u_a1KXM) i1_a1KXN
                 }}]
lessSafeIndex
  = \ (@ i_a1LBL)
      ($dIx_a1LBN :: Ix i_a1LBL)
      (ds_d1Mas :: (i_a1LBL, i_a1LBL))
      _ [Occ=Dead]
      (i1_a1KXN :: i_a1LBL) ->
      case ds_d1Mas of wild_X4S { (l_a1KXL, u_a1KXM) ->
      index @ i_a1LBL $dIx_a1LBN wild_X4S i1_a1KXN
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl8_r1Xvj :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl8_r1Xvj = "Negative range size"#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
negRange :: Int
[GblId, Str=x]
negRange
  = errorWithoutStackTrace
      @ 'LiftedRep @ Int (unpackCString# lvl8_r1Xvj)

-- RHS size: {terms: 19, types: 16, coercions: 0, joins: 0/0}
safeRangeSize [InlPrag=INLINE (sat-args=1)]
  :: forall i. Ix i => (i, i) -> Int
[GblId,
 Arity=2,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LCA)
                 ($dIx_a1LCC [Occ=Once] :: Ix i_a1LCA)
                 (ds_d1Mbh [Occ=Once!] :: (i_a1LCA, i_a1LCA)) ->
                 case ds_d1Mbh of { (l_a1KXD [Occ=Once], u_a1KXE [Occ=Once]) ->
                 let {
                   r_a1KXF :: Int
                   [LclId]
                   r_a1KXF = rangeSize @ i_a1LCA $dIx_a1LCC (l_a1KXD, u_a1KXE) } in
                 case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                   False -> r_a1KXF;
                   True -> negRange
                 }
                 }}]
safeRangeSize
  = \ (@ i_a1LCA)
      ($dIx_a1LCC :: Ix i_a1LCA)
      (eta_B1 :: (i_a1LCA, i_a1LCA)) ->
      case eta_B1 of wild_X4N { (l_a1KXD, u_a1KXE) ->
      case rangeSize @ i_a1LCA $dIx_a1LCC wild_X4N of wild1_alN7
      { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT -> wild1_alN7;
        1# -> negRange
      }
      }
      }

-- RHS size: {terms: 42, types: 52, coercions: 0, joins: 0/0}
$wnewSTArray_r1Xvk
  :: forall i e s.
     Ix i =>
     i -> i -> e -> State# s -> (# State# s, STArray s i e #)
[GblId,
 Arity=5,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []]
$wnewSTArray_r1Xvk
  = \ (@ i_s1Tjm)
      (@ e_s1Tjn)
      (@ s_s1Tjo)
      (w_s1Tjp :: Ix i_s1Tjm)
      (ww_s1Tjv :: i_s1Tjm)
      (ww1_s1Tjw :: i_s1Tjm)
      (w1_s1Tjr :: e_s1Tjn)
      (w2_s1Tjs :: State# s_s1Tjo) ->
      case rangeSize @ i_s1Tjm w_s1Tjp (ww_s1Tjv, ww1_s1Tjw) of
      { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case newArray# @ e_s1Tjn @ s_s1Tjo x_alN9 w1_s1Tjr w2_s1Tjs of
          { (# ipv_s1MFG, ipv1_s1MFH #) ->
          (# ipv_s1MFG,
             case ww_s1Tjv of dt_X1LcN { __DEFAULT ->
             case ww1_s1Tjw of dt1_X1LcP { __DEFAULT ->
             GHC.Arr.STArray
               @ s_s1Tjo @ i_s1Tjm @ e_s1Tjn dt_X1LcN dt1_X1LcP x_alN9 ipv1_s1MFH
             }
             } #)
          };
        1# -> case negRange of wild1_00 { }
      }
      }

-- RHS size: {terms: 16, types: 22, coercions: 0, joins: 0/0}
newSTArray1_r1Xvl
  :: forall i e s.
     Ix i =>
     (i, i) -> e -> State# s -> (# State# s, STArray s i e #)
[GblId,
 Arity=4,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><S,1*U(U,U)><L,U><S,U>,
 Unf=OtherCon []]
newSTArray1_r1Xvl
  = \ (@ i_s1Tjm)
      (@ e_s1Tjn)
      (@ s_s1Tjo)
      (w_s1Tjp :: Ix i_s1Tjm)
      (w1_s1Tjq :: (i_s1Tjm, i_s1Tjm))
      (w2_s1Tjr :: e_s1Tjn)
      (w3_s1Tjs :: State# s_s1Tjo) ->
      case w1_s1Tjq of { (ww1_s1Tjv, ww2_s1Tjw) ->
      $wnewSTArray_r1Xvk
        @ i_s1Tjm
        @ e_s1Tjn
        @ s_s1Tjo
        w_s1Tjp
        ww1_s1Tjv
        ww2_s1Tjw
        w2_s1Tjr
        w3_s1Tjs
      }

-- RHS size: {terms: 1, types: 0, coercions: 25, joins: 0/0}
newSTArray [InlPrag=INLINE (sat-args=2)]
  :: forall i e s. Ix i => (i, i) -> e -> ST s (STArray s i e)
[GblId,
 Arity=4,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><S,1*U(U,U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_X1LIv)
                 (@ e_X1LIx)
                 (@ s_X1LIz)
                 ($dIx_X1LIC [Occ=Once] :: Ix i_X1LIv)
                 (ds_d1Mbr [Occ=Once!] :: (i_X1LIv, i_X1LIv))
                 (initial_a1L0s [Occ=Once] :: e_X1LIx) ->
                 case ds_d1Mbr of { (l_a1L0q, u_a1L0r) ->
                 (\ (s1#_a1L0t [Occ=Once] :: State# s_X1LIz) ->
                    let {
                      r_a1KXF :: Int
                      [LclId]
                      r_a1KXF = rangeSize @ i_X1LIv $dIx_X1LIC (l_a1L0q, u_a1L0r) } in
                    case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                      False ->
                        case r_a1KXF of wild2_Xb { I# n#_a1L0v [Occ=Once] ->
                        case newArray# @ e_X1LIx @ s_X1LIz n#_a1L0v initial_a1L0s s1#_a1L0t
                        of
                        { (# ipv_s1MFN [Occ=Once], ipv1_s1MFO [Occ=Once] #) ->
                        (# ipv_s1MFN,
                           GHC.Arr.$WSTArray
                             @ s_X1LIz
                             @ i_X1LIv
                             @ e_X1LIx
                             l_a1L0q
                             u_a1L0r
                             wild2_Xb
                             ipv1_s1MFO #)
                        }
                        };
                      True -> case negRange of { }
                    })
                 `cast` (Sym (GHC.ST.N:ST[0]
                                  <s_X1LIz>_N <STArray s_X1LIz i_X1LIv e_X1LIx>_R)
                         :: (STRep s_X1LIz (STArray s_X1LIz i_X1LIv e_X1LIx) :: *)
                            ~R# (ST s_X1LIz (STArray s_X1LIz i_X1LIv e_X1LIx) :: *))
                 }}]
newSTArray
  = newSTArray1_r1Xvl
    `cast` (forall (i :: <*>_N) (e :: <*>_N) (s :: <*>_N).
            <Ix i>_R
            ->_R <(i, i)>_R
            ->_R <e>_R
            ->_R Sym (GHC.ST.N:ST[0] <s>_N <STArray s i e>_R)
            :: (forall i e s.
                Ix i =>
                (i, i) -> e -> STRep s (STArray s i e) :: *)
               ~R# (forall i e s.
                    Ix i =>
                    (i, i) -> e -> ST s (STArray s i e) :: *))

-- RHS size: {terms: 29, types: 44, coercions: 0, joins: 0/0}
done [InlPrag=INLINE (sat-args=4)]
  :: forall i s e.
     i -> i -> Int -> MutableArray# s e -> STRep s (Array i e)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,1*U><L,1*U><S,1*U(U)><S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LDN)
                 (@ s_a1LDO)
                 (@ e_a1LDP)
                 (l_a1KXc [Occ=Once] :: i_a1LDN)
                 (u_a1KXd [Occ=Once] :: i_a1LDN)
                 (n_a1KXe [Occ=Once!] :: Int)
                 (marr#_a1KXf [Occ=Once] :: MutableArray# s_a1LDO e_a1LDP) ->
                 case n_a1KXe of wild_X4M { I# _ [Occ=Dead] ->
                 \ (s1#_a1KXg [Occ=Once] :: State# s_a1LDO) ->
                   case unsafeFreezeArray# @ s_a1LDO @ e_a1LDP marr#_a1KXf s1#_a1KXg
                   of
                   { (# ipv_s1MEX [Occ=Once], ipv1_s1MEY [Occ=Once] #) ->
                   (# ipv_s1MEX,
                      GHC.Arr.$WArray
                        @ i_a1LDN @ e_a1LDP l_a1KXc u_a1KXd wild_X4M ipv1_s1MEY #)
                   }
                 }}]
done
  = \ (@ i_a1LDN)
      (@ s_a1LDO)
      (@ e_a1LDP)
      (l_a1KXc :: i_a1LDN)
      (u_a1KXd :: i_a1LDN)
      (n_a1KXe :: Int)
      (marr#_a1KXf :: MutableArray# s_a1LDO e_a1LDP)
      (eta_B1 :: State# s_a1LDO) ->
      case n_a1KXe of { I# ds_d1McC ->
      case unsafeFreezeArray# @ s_a1LDO @ e_a1LDP marr#_a1KXf eta_B1 of
      { (# ipv_s1MES, ipv1_s1MET #) ->
      (# ipv_s1MES,
         case l_a1KXc of dt_X1L5f { __DEFAULT ->
         case u_a1KXd of dt1_X1L5h { __DEFAULT ->
         GHC.Arr.Array
           @ i_a1LDN @ e_a1LDP dt_X1L5f dt1_X1L5h ds_d1McC ipv1_s1MET
         }
         } #)
      }
      }

-- RHS size: {terms: 22, types: 28, coercions: 0, joins: 0/0}
fill [InlPrag=INLINE (sat-args=3)]
  :: forall s e a.
     MutableArray# s e -> (Int, e) -> STRep s a -> STRep s a
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S(S(S)L),1*U(1*U(U),U)><C(S),1*C1(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_a1LEV)
                 (@ e_a1LEW)
                 (@ a_a1LEX)
                 (marr#_a1KX6 [Occ=Once] :: MutableArray# s_a1LEV e_a1LEW)
                 (ds_d1Mdg [Occ=Once!] :: (Int, e_a1LEW))
                 (next_a1KX9 [Occ=Once!] :: STRep s_a1LEV a_a1LEX) ->
                 case ds_d1Mdg of { (ds1_d1Mdp [Occ=Once!], e1_a1KX8 [Occ=Once]) ->
                 case ds1_d1Mdp of { I# i#_a1KX7 [Occ=Once] ->
                 \ (s1#_a1KXa [Occ=Once] :: State# s_a1LEV) ->
                   case writeArray#
                          @ s_a1LEV @ e_a1LEW marr#_a1KX6 i#_a1KX7 e1_a1KX8 s1#_a1KXa
                   of s2#_a1KXb
                   { __DEFAULT ->
                   next_a1KX9 s2#_a1KXb
                   }
                 }
                 }}]
fill
  = \ (@ s_a1LEV)
      (@ e_a1LEW)
      (@ a_a1LEX)
      (marr#_a1KX6 :: MutableArray# s_a1LEV e_a1LEW)
      (ds_d1Mdg :: (Int, e_a1LEW))
      (next_a1KX9 :: STRep s_a1LEV a_a1LEX)
      (eta_B1 :: State# s_a1LEV) ->
      case ds_d1Mdg of { (ds1_d1Mdp, e1_a1KX8) ->
      case ds1_d1Mdp of { I# i#_a1KX7 ->
      case writeArray#
             @ s_a1LEV @ e_a1LEW marr#_a1KX6 i#_a1KX7 e1_a1KX8 eta_B1
      of s2#_a1KXb
      { __DEFAULT ->
      next_a1KX9 s2#_a1KXb
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl9_r1Xvm :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl9_r1Xvm = "(Array.!): undefined array element"#

-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
arrEleBottom [InlPrag=NOINLINE] :: forall a. a
[GblId, Str=x]
arrEleBottom
  = \ (@ a_a1LF3) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a1LF3 (unpackCString# lvl9_r1Xvm)

-- RHS size: {terms: 60, types: 114, coercions: 0, joins: 2/2}
GHC.Arr.freezeSTArray1
  :: forall s i e.
     STArray s i e -> State# s -> (# State# s, Array i e #)
[GblId,
 Arity=2,
 Str=<S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ s_a1LIc)
                 (@ i_a1LId)
                 (@ e_a1LIe)
                 (ds_d1Mfl [Occ=Once!] :: STArray s_a1LIc i_a1LId e_a1LIe)
                 (eta_B1 [Occ=Once] :: State# s_a1LIc) ->
                 case ds_d1Mfl of
                 { STArray l_a1L0U [Occ=Once] u_a1L0V [Occ=Once] dt_d1Muc
                           marr#_a1L0Y [Occ=OnceL] ->
                 case newArray#
                        @ e_a1LIe @ s_a1LIc dt_d1Muc (arrEleBottom @ e_a1LIe) eta_B1
                 of
                 { (# ipv_s1MEj [Occ=Once], ipv1_s1MEk #) ->
                 join {
                   $j_s1RVr [Occ=OnceL!T[1]]
                     :: State# s_a1LIc -> (# State# s_a1LIc, Array i_a1LId e_a1LIe #)
                   [LclId[JoinId(1)], Arity=1]
                   $j_s1RVr (s3#_a1L18 [Occ=Once, OS=OneShot]
                               :: State# s_a1LIc
                               Unf=OtherCon [])
                     = case unsafeFreezeArray# @ s_a1LIc @ e_a1LIe ipv1_s1MEk s3#_a1L18
                       of
                       { (# ipv2_s1MEv [Occ=Once], ipv3_s1MEw [Occ=Once] #) ->
                       (# ipv2_s1MEv,
                          GHC.Arr.Array
                            @ i_a1LId @ e_a1LIe l_a1L0U u_a1L0V dt_d1Muc ipv3_s1MEw #)
                       } } in
                 joinrec {
                   copy_s1NnI [Occ=LoopBreakerT[2]]
                     :: Int#
                        -> State# s_a1LIc -> (# State# s_a1LIc, Array i_a1LId e_a1LIe #)
                   [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                   copy_s1NnI (i#_a1L13 :: Int#)
                              (s3#_a1L14 [Occ=Once*] :: State# s_a1LIc)
                     = case ==# i#_a1L13 dt_d1Muc of {
                         __DEFAULT ->
                           case readArray# @ s_a1LIc @ e_a1LIe marr#_a1L0Y i#_a1L13 s3#_a1L14
                           of
                           { (# ipv2_s1MEo [Occ=Once], ipv3_s1MEp [Occ=Once] #) ->
                           case writeArray#
                                  @ s_a1LIc @ e_a1LIe ipv1_s1MEk i#_a1L13 ipv3_s1MEp ipv2_s1MEo
                           of s5#_a1L17
                           { __DEFAULT ->
                           jump copy_s1NnI (+# i#_a1L13 1#) s5#_a1L17
                           }
                           };
                         1# -> jump $j_s1RVr s3#_a1L14
                       }; } in
                 jump copy_s1NnI 0# ipv_s1MEj
                 }
                 }}]
GHC.Arr.freezeSTArray1
  = \ (@ s_a1LIc)
      (@ i_a1LId)
      (@ e_a1LIe)
      (ds_d1Mfl :: STArray s_a1LIc i_a1LId e_a1LIe)
      (eta_B1 :: State# s_a1LIc) ->
      case ds_d1Mfl of { STArray l_a1L0U u_a1L0V dt_d1Muc marr#_a1L0Y ->
      case newArray#
             @ e_a1LIe @ s_a1LIc dt_d1Muc (arrEleBottom @ e_a1LIe) eta_B1
      of
      { (# ipv_s1MEj, ipv1_s1MEk #) ->
      join {
        $j_s1RVr [Dmd=<C(S),C(U(U,U))>]
          :: State# s_a1LIc -> (# State# s_a1LIc, Array i_a1LId e_a1LIe #)
        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
        $j_s1RVr (s3#_a1L18 [OS=OneShot]
                    :: State# s_a1LIc
                    Unf=OtherCon [])
          = case unsafeFreezeArray# @ s_a1LIc @ e_a1LIe ipv1_s1MEk s3#_a1L18
            of
            { (# ipv2_s1MEv, ipv3_s1MEw #) ->
            (# ipv2_s1MEv,
               GHC.Arr.Array
                 @ i_a1LId @ e_a1LIe l_a1L0U u_a1L0V dt_d1Muc ipv3_s1MEw #)
            } } in
      joinrec {
        copy_s1NnI [Occ=LoopBreaker]
          :: Int#
             -> State# s_a1LIc -> (# State# s_a1LIc, Array i_a1LId e_a1LIe #)
        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
        copy_s1NnI (i#_a1L13 :: Int#) (s3#_a1L14 :: State# s_a1LIc)
          = case ==# i#_a1L13 dt_d1Muc of {
              __DEFAULT ->
                case readArray# @ s_a1LIc @ e_a1LIe marr#_a1L0Y i#_a1L13 s3#_a1L14
                of
                { (# ipv2_s1MEo, ipv3_s1MEp #) ->
                case writeArray#
                       @ s_a1LIc @ e_a1LIe ipv1_s1MEk i#_a1L13 ipv3_s1MEp ipv2_s1MEo
                of s5#_a1L17
                { __DEFAULT ->
                jump copy_s1NnI (+# i#_a1L13 1#) s5#_a1L17
                }
                };
              1# -> jump $j_s1RVr s3#_a1L14
            }; } in
      jump copy_s1NnI 0# ipv_s1MEj
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 20, joins: 0/0}
freezeSTArray :: forall s i e. STArray s i e -> ST s (Array i e)
[GblId,
 Arity=2,
 Str=<S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Arr.freezeSTArray1
               `cast` (forall (s :: <*>_N) (i :: <*>_N) (e :: <*>_N).
                       <STArray s i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <Array i e>_R)
                       :: (forall s i e. STArray s i e -> STRep s (Array i e) :: *)
                          ~R# (forall s i e. STArray s i e -> ST s (Array i e) :: *))}]
freezeSTArray
  = GHC.Arr.freezeSTArray1
    `cast` (forall (s :: <*>_N) (i :: <*>_N) (e :: <*>_N).
            <STArray s i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <Array i e>_R)
            :: (forall s i e. STArray s i e -> STRep s (Array i e) :: *)
               ~R# (forall s i e. STArray s i e -> ST s (Array i e) :: *))

-- RHS size: {terms: 54, types: 92, coercions: 0, joins: 2/2}
GHC.Arr.thawSTArray1
  :: forall i e s.
     Array i e -> State# s -> (# State# s, STArray s i e #)
[GblId,
 Arity=2,
 Str=<S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_a1LJ9)
                 (@ e_a1LJa)
                 (@ s_a1LJb)
                 (ds_d1MfR [Occ=Once!] :: Array i_a1LJ9 e_a1LJa)
                 (eta_B1 [Occ=Once] :: State# s_a1LJb) ->
                 case ds_d1MfR of
                 { Array l_a1L1i [Occ=OnceL] u_a1L1j [Occ=OnceL] dt_d1Mud
                         arr#_a1L1m [Occ=OnceL] ->
                 case newArray#
                        @ e_a1LJa @ s_a1LJb dt_d1Mud (arrEleBottom @ e_a1LJa) eta_B1
                 of
                 { (# ipv_s1MEA [Occ=Once], ipv1_s1MEB [Occ=OnceL*] #) ->
                 joinrec {
                   copy_s1NnG [Occ=LoopBreakerT[2]]
                     :: Int#
                        -> State# s_a1LJb
                        -> (# State# s_a1LJb, STArray s_a1LJb i_a1LJ9 e_a1LJa #)
                   [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                   copy_s1NnG (i#_a1L1r :: Int#)
                              (s3#_a1L1s [Occ=Once*] :: State# s_a1LJb)
                     = case ==# i#_a1L1r dt_d1Mud of {
                         __DEFAULT ->
                           case indexArray# @ e_a1LJa arr#_a1L1m i#_a1L1r of
                           { (# ipv2_s1MEF [Occ=Once] #) ->
                           case writeArray#
                                  @ s_a1LJb @ e_a1LJa ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                           of s4#_a1L1u
                           { __DEFAULT ->
                           jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                           }
                           };
                         1# ->
                           (# s3#_a1L1s,
                              GHC.Arr.STArray
                                @ s_a1LJb
                                @ i_a1LJ9
                                @ e_a1LJa
                                l_a1L1i
                                u_a1L1j
                                dt_d1Mud
                                ipv1_s1MEB #)
                       }; } in
                 jump copy_s1NnG 0# ipv_s1MEA
                 }
                 }}]
GHC.Arr.thawSTArray1
  = \ (@ i_a1LJ9)
      (@ e_a1LJa)
      (@ s_a1LJb)
      (ds_d1MfR :: Array i_a1LJ9 e_a1LJa)
      (eta_B1 :: State# s_a1LJb) ->
      case ds_d1MfR of { Array l_a1L1i u_a1L1j dt_d1Mud arr#_a1L1m ->
      case newArray#
             @ e_a1LJa @ s_a1LJb dt_d1Mud (arrEleBottom @ e_a1LJa) eta_B1
      of
      { (# ipv_s1MEA, ipv1_s1MEB #) ->
      join {
        exit_X6e [Dmd=<C(S),C(U(U,U))>]
          :: State# s_a1LJb
             -> (# State# s_a1LJb, STArray s_a1LJb i_a1LJ9 e_a1LJa #)
        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
        exit_X6e (s3#_a1L1s [OS=OneShot] :: State# s_a1LJb)
          = (# s3#_a1L1s,
               GHC.Arr.STArray
                 @ s_a1LJb
                 @ i_a1LJ9
                 @ e_a1LJa
                 l_a1L1i
                 u_a1L1j
                 dt_d1Mud
                 ipv1_s1MEB #) } in
      joinrec {
        copy_s1NnG [Occ=LoopBreaker]
          :: Int#
             -> State# s_a1LJb
             -> (# State# s_a1LJb, STArray s_a1LJb i_a1LJ9 e_a1LJa #)
        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
        copy_s1NnG (i#_a1L1r :: Int#) (s3#_a1L1s :: State# s_a1LJb)
          = case ==# i#_a1L1r dt_d1Mud of {
              __DEFAULT ->
                case indexArray# @ e_a1LJa arr#_a1L1m i#_a1L1r of
                { (# ipv2_s1MEF #) ->
                case writeArray#
                       @ s_a1LJb @ e_a1LJa ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                of s4#_a1L1u
                { __DEFAULT ->
                jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                }
                };
              1# -> jump exit_X6e s3#_a1L1s
            }; } in
      jump copy_s1NnG 0# ipv_s1MEA
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 20, joins: 0/0}
thawSTArray :: forall i e s. Array i e -> ST s (STArray s i e)
[GblId,
 Arity=2,
 Str=<S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Arr.thawSTArray1
               `cast` (forall (i :: <*>_N) (e :: <*>_N) (s :: <*>_N).
                       <Array i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <STArray s i e>_R)
                       :: (forall i e s. Array i e -> STRep s (STArray s i e) :: *)
                          ~R# (forall i e s. Array i e -> ST s (STArray s i e) :: *))}]
thawSTArray
  = GHC.Arr.thawSTArray1
    `cast` (forall (i :: <*>_N) (e :: <*>_N) (s :: <*>_N).
            <Array i e>_R ->_R Sym (GHC.ST.N:ST[0] <s>_N <STArray s i e>_R)
            :: (forall i e s. Array i e -> STRep s (STArray s i e) :: *)
               ~R# (forall i e s. Array i e -> ST s (STArray s i e) :: *))

-- RHS size: {terms: 93, types: 199, coercions: 0, joins: 4/4}
unsafeReplace [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Array i e -> [(Int, e)] -> Array i e
[GblId,
 Arity=2,
 Str=<S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LJY)
                 (@ e_a1LJZ)
                 (arr_a1KZq [Occ=Once!] :: Array i_a1LJY e_a1LJZ)
                 (ies_a1KZr [Occ=Once] :: [(Int, e_a1LJZ)]) ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                        (\ (s1_a1J6a [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case arr_a1KZq of
                           { Array l_a1L1i [Occ=OnceL] u_a1L1j [Occ=OnceL] dt_d1Mud
                                   arr#_a1L1m [Occ=OnceL] ->
                           case newArray#
                                  @ e_a1LJZ @ RealWorld dt_d1Mud (arrEleBottom @ e_a1LJZ) s1_a1J6a
                           of
                           { (# ipv_s1MEA [Occ=Once], ipv1_s1MEB [Occ=OnceL*] #) ->
                           join {
                             $j_s1RVR [Occ=OnceL!T[2]]
                               :: State# RealWorld
                                  -> STArray RealWorld i_a1LJY e_a1LJZ
                                  -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                             [LclId[JoinId(2)], Arity=2]
                             $j_s1RVR (ipv2_s1JkK [Occ=Once, OS=OneShot] :: State# RealWorld)
                                      (ipv3_s1JkL [Occ=Once!, OS=OneShot]
                                         :: STArray RealWorld i_a1LJY e_a1LJZ)
                               = case ipv3_s1JkL of
                                 { STArray l1_a1KZs [Occ=Once] u1_a1KZt [Occ=Once]
                                           dt1_d1Mue [Occ=Once] marr#_a1KZv ->
                                 foldr
                                   @ (Int, e_a1LJZ)
                                   @ (STRep RealWorld (Array i_a1LJY e_a1LJZ))
                                   (fill
                                      @ RealWorld @ e_a1LJZ @ (Array i_a1LJY e_a1LJZ) marr#_a1KZv)
                                   (\ (s1#_a1KXg [Occ=Once] :: State# RealWorld) ->
                                      case unsafeFreezeArray#
                                             @ RealWorld @ e_a1LJZ marr#_a1KZv s1#_a1KXg
                                      of
                                      { (# ipv4_s1MEX [Occ=Once], ipv5_s1MEY [Occ=Once] #) ->
                                      (# ipv4_s1MEX,
                                         GHC.Arr.$WArray
                                           @ i_a1LJY
                                           @ e_a1LJZ
                                           l1_a1KZs
                                           u1_a1KZt
                                           (GHC.Types.I# dt1_d1Mue)
                                           ipv5_s1MEY #)
                                      })
                                   ies_a1KZr
                                   ipv2_s1JkK
                                 } } in
                           joinrec {
                             copy_s1NnG [Occ=LoopBreakerT[2]]
                               :: Int#
                                  -> State# RealWorld
                                  -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                             [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                             copy_s1NnG (i#_a1L1r :: Int#)
                                        (s3#_a1L1s [Occ=Once*] :: State# RealWorld)
                               = case ==# i#_a1L1r dt_d1Mud of {
                                   __DEFAULT ->
                                     case indexArray# @ e_a1LJZ arr#_a1L1m i#_a1L1r of
                                     { (# ipv2_s1MEF [Occ=Once] #) ->
                                     case writeArray#
                                            @ RealWorld
                                            @ e_a1LJZ
                                            ipv1_s1MEB
                                            i#_a1L1r
                                            ipv2_s1MEF
                                            s3#_a1L1s
                                     of s4#_a1L1u
                                     { __DEFAULT ->
                                     jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                                     }
                                     };
                                   1# ->
                                     jump $j_s1RVR
                                       s3#_a1L1s
                                       (GHC.Arr.STArray
                                          @ RealWorld
                                          @ i_a1LJY
                                          @ e_a1LJZ
                                          l_a1L1i
                                          u_a1L1j
                                          dt_d1Mud
                                          ipv1_s1MEB)
                                 }; } in
                           jump copy_s1NnG 0# ipv_s1MEA
                           }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }}]
unsafeReplace
  = \ (@ i_a1LJY)
      (@ e_a1LJZ)
      (arr_a1KZq :: Array i_a1LJY e_a1LJZ)
      (ies_a1KZr :: [(Int, e_a1LJZ)]) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
             (\ (s1_a1J6a [OS=OneShot] :: State# RealWorld) ->
                case arr_a1KZq of { Array l_a1L1i u_a1L1j dt_d1Mud arr#_a1L1m ->
                case newArray#
                       @ e_a1LJZ @ RealWorld dt_d1Mud (arrEleBottom @ e_a1LJZ) s1_a1J6a
                of
                { (# ipv_s1MEA, ipv1_s1MEB #) ->
                join {
                  exit_X6e [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  exit_X6e (s3#_a1L1s [OS=OneShot] :: State# RealWorld)
                    = join {
                        z_i1y1a [Dmd=<C(S),C(U)>]
                          :: State# RealWorld
                             -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                        z_i1y1a (s1#_a1KXg [OS=OneShot] :: State# RealWorld)
                          = case unsafeFreezeArray#
                                   @ RealWorld @ e_a1LJZ ipv1_s1MEB s1#_a1KXg
                            of
                            { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                            (# ipv2_s1MEX,
                               GHC.Arr.Array
                                 @ i_a1LJY @ e_a1LJZ l_a1L1i u_a1L1j dt_d1Mud ipv3_s1MEY #)
                            } } in
                      joinrec {
                        go_i1y1b [Occ=LoopBreaker]
                          :: [(Int, e_a1LJZ)]
                             -> State# RealWorld
                             -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                        go_i1y1b (ds1_i1y1c :: [(Int, e_a1LJZ)])
                                 (eta_B1 :: State# RealWorld)
                          = case ds1_i1y1c of {
                              [] -> jump z_i1y1a eta_B1;
                              : y_i1y1h ys_i1y1i ->
                                case y_i1y1h of { (ds2_d1Mdp, e1_a1KX8) ->
                                case ds2_d1Mdp of { I# i#_a1KX7 ->
                                case writeArray#
                                       @ RealWorld @ e_a1LJZ ipv1_s1MEB i#_a1KX7 e1_a1KX8 eta_B1
                                of s2#_a1KXb
                                { __DEFAULT ->
                                jump go_i1y1b ys_i1y1i s2#_a1KXb
                                }
                                }
                                }
                            }; } in
                      jump go_i1y1b ies_a1KZr s3#_a1L1s } in
                joinrec {
                  copy_s1NnG [Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LJY e_a1LJZ #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  copy_s1NnG (i#_a1L1r :: Int#) (s3#_a1L1s :: State# RealWorld)
                    = case ==# i#_a1L1r dt_d1Mud of {
                        __DEFAULT ->
                          case indexArray# @ e_a1LJZ arr#_a1L1m i#_a1L1r of
                          { (# ipv2_s1MEF #) ->
                          case writeArray#
                                 @ RealWorld @ e_a1LJZ ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                          of s4#_a1L1u
                          { __DEFAULT ->
                          jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                          }
                          };
                        1# -> jump exit_X6e s3#_a1L1s
                      }; } in
                jump copy_s1NnG 0# ipv_s1MEA
                }
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }

-- RHS size: {terms: 106, types: 218, coercions: 0, joins: 4/4}
unsafeAccum [InlPrag=INLINE (sat-args=3)]
  :: forall e a i.
     (e -> a -> e) -> Array i e -> [(Int, a)] -> Array i e
[GblId,
 Arity=3,
 Str=<L,C(C1(U))><S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ e_a1LKy)
                 (@ a_a1LKz)
                 (@ i_a1LKA)
                 (f1_a1KZE [Occ=Once] :: e_a1LKy -> a_a1LKz -> e_a1LKy)
                 (arr_a1KZF [Occ=Once!] :: Array i_a1LKA e_a1LKy)
                 (ies_a1KZG [Occ=Once] :: [(Int, a_a1LKz)]) ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                        (\ (s1_a1J6a [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case arr_a1KZF of
                           { Array l_a1L1i [Occ=OnceL] u_a1L1j [Occ=OnceL] dt_d1Mud
                                   arr#_a1L1m [Occ=OnceL] ->
                           case newArray#
                                  @ e_a1LKy @ RealWorld dt_d1Mud (arrEleBottom @ e_a1LKy) s1_a1J6a
                           of
                           { (# ipv_s1MEA [Occ=Once], ipv1_s1MEB [Occ=OnceL*] #) ->
                           join {
                             $j_s1RWe [Occ=OnceL!T[2]]
                               :: State# RealWorld
                                  -> STArray RealWorld i_a1LKA e_a1LKy
                                  -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                             [LclId[JoinId(2)], Arity=2]
                             $j_s1RWe (ipv2_s1JkK [Occ=Once, OS=OneShot] :: State# RealWorld)
                                      (ipv3_s1JkL [Occ=Once!, OS=OneShot]
                                         :: STArray RealWorld i_a1LKA e_a1LKy)
                               = case ipv3_s1JkL of
                                 { STArray l1_a1KZH [Occ=Once] u1_a1KZI [Occ=Once]
                                           dt1_d1Mug [Occ=Once] marr#_a1KZK ->
                                 foldr
                                   @ (Int, a_a1LKz)
                                   @ (STRep RealWorld (Array i_a1LKA e_a1LKy))
                                   (adjust'
                                      @ e_a1LKy
                                      @ a_a1LKz
                                      @ RealWorld
                                      @ (Array i_a1LKA e_a1LKy)
                                      f1_a1KZE
                                      marr#_a1KZK)
                                   (\ (s1#_a1KXg [Occ=Once] :: State# RealWorld) ->
                                      case unsafeFreezeArray#
                                             @ RealWorld @ e_a1LKy marr#_a1KZK s1#_a1KXg
                                      of
                                      { (# ipv4_s1MEX [Occ=Once], ipv5_s1MEY [Occ=Once] #) ->
                                      (# ipv4_s1MEX,
                                         GHC.Arr.$WArray
                                           @ i_a1LKA
                                           @ e_a1LKy
                                           l1_a1KZH
                                           u1_a1KZI
                                           (GHC.Types.I# dt1_d1Mug)
                                           ipv5_s1MEY #)
                                      })
                                   ies_a1KZG
                                   ipv2_s1JkK
                                 } } in
                           joinrec {
                             copy_s1NnG [Occ=LoopBreakerT[2]]
                               :: Int#
                                  -> State# RealWorld
                                  -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                             [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                             copy_s1NnG (i#_a1L1r :: Int#)
                                        (s3#_a1L1s [Occ=Once*] :: State# RealWorld)
                               = case ==# i#_a1L1r dt_d1Mud of {
                                   __DEFAULT ->
                                     case indexArray# @ e_a1LKy arr#_a1L1m i#_a1L1r of
                                     { (# ipv2_s1MEF [Occ=Once] #) ->
                                     case writeArray#
                                            @ RealWorld
                                            @ e_a1LKy
                                            ipv1_s1MEB
                                            i#_a1L1r
                                            ipv2_s1MEF
                                            s3#_a1L1s
                                     of s4#_a1L1u
                                     { __DEFAULT ->
                                     jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                                     }
                                     };
                                   1# ->
                                     jump $j_s1RWe
                                       s3#_a1L1s
                                       (GHC.Arr.STArray
                                          @ RealWorld
                                          @ i_a1LKA
                                          @ e_a1LKy
                                          l_a1L1i
                                          u_a1L1j
                                          dt_d1Mud
                                          ipv1_s1MEB)
                                 }; } in
                           jump copy_s1NnG 0# ipv_s1MEA
                           }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }}]
unsafeAccum
  = \ (@ e_a1LKy)
      (@ a_a1LKz)
      (@ i_a1LKA)
      (f1_a1KZE :: e_a1LKy -> a_a1LKz -> e_a1LKy)
      (arr_a1KZF :: Array i_a1LKA e_a1LKy)
      (ies_a1KZG :: [(Int, a_a1LKz)]) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LKA e_a1LKy #)
             (\ (s1_a1J6a [OS=OneShot] :: State# RealWorld) ->
                case arr_a1KZF of { Array l_a1L1i u_a1L1j dt_d1Mud arr#_a1L1m ->
                case newArray#
                       @ e_a1LKy @ RealWorld dt_d1Mud (arrEleBottom @ e_a1LKy) s1_a1J6a
                of
                { (# ipv_s1MEA, ipv1_s1MEB #) ->
                join {
                  exit_X6g [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  exit_X6g (s3#_a1L1s [OS=OneShot] :: State# RealWorld)
                    = join {
                        z_i1y1a [Dmd=<C(S),C(U)>]
                          :: State# RealWorld
                             -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                        z_i1y1a (s1#_a1KXg [OS=OneShot] :: State# RealWorld)
                          = case unsafeFreezeArray#
                                   @ RealWorld @ e_a1LKy ipv1_s1MEB s1#_a1KXg
                            of
                            { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                            (# ipv2_s1MEX,
                               GHC.Arr.Array
                                 @ i_a1LKA @ e_a1LKy l_a1L1i u_a1L1j dt_d1Mud ipv3_s1MEY #)
                            } } in
                      joinrec {
                        go_i1y1b [Occ=LoopBreaker]
                          :: [(Int, a_a1LKz)]
                             -> State# RealWorld
                             -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                        go_i1y1b (ds1_i1y1c :: [(Int, a_a1LKz)])
                                 (eta_B1 :: State# RealWorld)
                          = case ds1_i1y1c of {
                              [] -> jump z_i1y1a eta_B1;
                              : y_i1y1h ys_i1y1i ->
                                case y_i1y1h of { (ds2_d1M5V, new_a1KZd) ->
                                case ds2_d1M5V of { I# i#_a1KZc ->
                                case readArray# @ RealWorld @ e_a1LKy ipv1_s1MEB i#_a1KZc eta_B1 of
                                { (# ipv2_s1MK8, ipv3_s1MK9 #) ->
                                case f1_a1KZE ipv3_s1MK9 new_a1KZd of combined_a1KZi { __DEFAULT ->
                                case writeArray#
                                       @ RealWorld
                                       @ e_a1LKy
                                       ipv1_s1MEB
                                       i#_a1KZc
                                       combined_a1KZi
                                       ipv2_s1MK8
                                of wild4_Xk
                                { __DEFAULT ->
                                jump go_i1y1b ys_i1y1i wild4_Xk
                                }
                                }
                                }
                                }
                                }
                            }; } in
                      jump go_i1y1b ies_a1KZG s3#_a1L1s } in
                joinrec {
                  copy_s1NnG [Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LKA e_a1LKy #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  copy_s1NnG (i#_a1L1r :: Int#) (s3#_a1L1s :: State# RealWorld)
                    = case ==# i#_a1L1r dt_d1Mud of {
                        __DEFAULT ->
                          case indexArray# @ e_a1LKy arr#_a1L1m i#_a1L1r of
                          { (# ipv2_s1MEF #) ->
                          case writeArray#
                                 @ RealWorld @ e_a1LKy ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                          of s4#_a1L1u
                          { __DEFAULT ->
                          jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                          }
                          };
                        1# -> jump exit_X6g s3#_a1L1s
                      }; } in
                jump copy_s1NnG 0# ipv_s1MEA
                }
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }

-- RHS size: {terms: 70, types: 161, coercions: 0, joins: 2/2}
unsafeArray' [InlPrag=INLINE (sat-args=3)]
  :: forall i e. (i, i) -> Int -> [(Int, e)] -> Array i e
[GblId,
 Arity=3,
 Str=<S,1*U(U,U)><S(S),1*U(U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LF7)
                 (@ e_a1LF8)
                 (ds_d1Mdr [Occ=Once!] :: (i_a1LF7, i_a1LF7))
                 (n_a1KX0 [Occ=Once!] :: Int)
                 (ies_a1KX2 [Occ=Once] :: [(Int, e_a1LF8)]) ->
                 case ds_d1Mdr of { (l_a1KWY [Occ=Once], u_a1KWZ [Occ=Once]) ->
                 case n_a1KX0 of wild1_X9 { I# n#_a1KX1 [Occ=Once] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LF7 e_a1LF8 #)
                        (\ (s1#_a1KX3 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LF8 @ RealWorld n#_a1KX1 (arrEleBottom @ e_a1LF8) s1#_a1KX3
                           of
                           { (# ipv_s1MFb [Occ=Once], ipv1_s1MFc #) ->
                           foldr
                             @ (Int, e_a1LF8)
                             @ (STRep RealWorld (Array i_a1LF7 e_a1LF8))
                             (fill @ RealWorld @ e_a1LF8 @ (Array i_a1LF7 e_a1LF8) ipv1_s1MFc)
                             (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LF8 ipv1_s1MFc s1#1_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LF7 @ e_a1LF8 l_a1KWY u_a1KWZ wild1_X9 ipv3_s1MEY #)
                                })
                             ies_a1KX2
                             ipv_s1MFb
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }
                 }}]
unsafeArray'
  = \ (@ i_a1LF7)
      (@ e_a1LF8)
      (ds_d1Mdr :: (i_a1LF7, i_a1LF7))
      (n_a1KX0 :: Int)
      (ies_a1KX2 :: [(Int, e_a1LF8)]) ->
      case ds_d1Mdr of { (l_a1KWY, u_a1KWZ) ->
      case n_a1KX0 of { I# n#_a1KX1 ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LF7 e_a1LF8 #)
             (\ (s1#_a1KX3 [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ e_a1LF8 @ RealWorld n#_a1KX1 (arrEleBottom @ e_a1LF8) s1#_a1KX3
                of
                { (# ipv_s1MF3, ipv1_s1MF4 #) ->
                join {
                  z_i1y1a [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LF7 e_a1LF8 #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray#
                             @ RealWorld @ e_a1LF8 ipv1_s1MF4 s1#1_a1KXg
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         case l_a1KWY of dt_X1L5f { __DEFAULT ->
                         case u_a1KWZ of dt1_X1L5h { __DEFAULT ->
                         GHC.Arr.Array
                           @ i_a1LF7 @ e_a1LF8 dt_X1L5f dt1_X1L5h n#_a1KX1 ipv3_s1MEY
                         }
                         } #)
                      } } in
                joinrec {
                  go_i1y1b [Occ=LoopBreaker]
                    :: [(Int, e_a1LF8)]
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LF7 e_a1LF8 #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                  go_i1y1b (ds2_i1y1c :: [(Int, e_a1LF8)])
                           (eta_B1 :: State# RealWorld)
                    = case ds2_i1y1c of {
                        [] -> jump z_i1y1a eta_B1;
                        : y_i1y1h ys_i1y1i ->
                          case y_i1y1h of { (ds3_d1Mdp, e1_a1KX8) ->
                          case ds3_d1Mdp of { I# i#_a1KX7 ->
                          case writeArray#
                                 @ RealWorld @ e_a1LF8 ipv1_s1MF4 i#_a1KX7 e1_a1KX8 eta_B1
                          of s2#_a1KXb
                          { __DEFAULT ->
                          jump go_i1y1b ys_i1y1i s2#_a1KXb
                          }
                          }
                          }
                      }; } in
                jump go_i1y1b ies_a1KX2 ipv_s1MF3
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }
      }

-- RHS size: {terms: 72, types: 163, coercions: 0, joins: 2/2}
unsafeArray [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Ix i => (i, i) -> [(Int, e)] -> Array i e
[GblId,
 Arity=3,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><S,1*U(U,U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LG7)
                 (@ e_a1LG8)
                 ($dIx_a1LGa [Occ=Once] :: Ix i_a1LG7)
                 (b_a1KWW [Occ=Once!] :: (i_a1LG7, i_a1LG7))
                 (ies_a1KWX [Occ=Once] :: [(Int, e_a1LG8)]) ->
                 case b_a1KWW of wild_X4L
                 { (l_a1KWY [Occ=Once], u_a1KWZ [Occ=Once]) ->
                 case rangeSize @ i_a1LG7 $dIx_a1LGa wild_X4L of wild1_X9
                 { I# n#_a1KX1 [Occ=Once] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LG7 e_a1LG8 #)
                        (\ (s1#_a1KX3 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LG8 @ RealWorld n#_a1KX1 (arrEleBottom @ e_a1LG8) s1#_a1KX3
                           of
                           { (# ipv_s1MFb [Occ=Once], ipv1_s1MFc #) ->
                           foldr
                             @ (Int, e_a1LG8)
                             @ (STRep RealWorld (Array i_a1LG7 e_a1LG8))
                             (fill @ RealWorld @ e_a1LG8 @ (Array i_a1LG7 e_a1LG8) ipv1_s1MFc)
                             (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LG8 ipv1_s1MFc s1#1_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LG7 @ e_a1LG8 l_a1KWY u_a1KWZ wild1_X9 ipv3_s1MEY #)
                                })
                             ies_a1KWX
                             ipv_s1MFb
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }
                 }}]
unsafeArray
  = \ (@ i_a1LG7)
      (@ e_a1LG8)
      ($dIx_a1LGa :: Ix i_a1LG7)
      (eta_B2 :: (i_a1LG7, i_a1LG7))
      (eta1_B1 :: [(Int, e_a1LG8)]) ->
      case eta_B2 of wild_X4L { (l_a1KWY, u_a1KWZ) ->
      case rangeSize @ i_a1LG7 $dIx_a1LGa wild_X4L of { I# n#_a1KX1 ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LG7 e_a1LG8 #)
             (\ (s1#_a1KX3 [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ e_a1LG8 @ RealWorld n#_a1KX1 (arrEleBottom @ e_a1LG8) s1#_a1KX3
                of
                { (# ipv_s1MFb, ipv1_s1MFc #) ->
                join {
                  z_i1y1a [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LG7 e_a1LG8 #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray#
                             @ RealWorld @ e_a1LG8 ipv1_s1MFc s1#1_a1KXg
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         case l_a1KWY of dt_X1L5f { __DEFAULT ->
                         case u_a1KWZ of dt1_X1L5h { __DEFAULT ->
                         GHC.Arr.Array
                           @ i_a1LG7 @ e_a1LG8 dt_X1L5f dt1_X1L5h n#_a1KX1 ipv3_s1MEY
                         }
                         } #)
                      } } in
                joinrec {
                  go_i1y1b [Occ=LoopBreaker]
                    :: [(Int, e_a1LG8)]
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LG7 e_a1LG8 #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                  go_i1y1b (ds1_i1y1c :: [(Int, e_a1LG8)])
                           (eta2_X8o :: State# RealWorld)
                    = case ds1_i1y1c of {
                        [] -> jump z_i1y1a eta2_X8o;
                        : y_i1y1h ys_i1y1i ->
                          case y_i1y1h of { (ds2_d1Mdp, e1_a1KX8) ->
                          case ds2_d1Mdp of { I# i#_a1KX7 ->
                          case writeArray#
                                 @ RealWorld @ e_a1LG8 ipv1_s1MFc i#_a1KX7 e1_a1KX8 eta2_X8o
                          of s2#_a1KXb
                          { __DEFAULT ->
                          jump go_i1y1b ys_i1y1i s2#_a1KXb
                          }
                          }
                          }
                      }; } in
                jump go_i1y1b eta1_B1 ipv_s1MFb
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }
      }

-- RHS size: {terms: 111, types: 178, coercions: 0, joins: 2/2}
listArray [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Ix i => (i, i) -> [e] -> Array i e
[GblId,
 Arity=3,
 Str=<S(LLLLLC(S(S))L),1*U(A,A,A,A,A,1*C1(U(U)),A)><S,1*U(U,U)><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LGg)
                 (@ e_a1LGh)
                 ($dIx_a1LGj [Occ=Once] :: Ix i_a1LGg)
                 (ds_d1Meo [Occ=Once!] :: (i_a1LGg, i_a1LGg))
                 (es_a1KXl [Occ=Once] :: [e_a1LGh]) ->
                 case ds_d1Meo of { (l_a1KXj, u_a1KXk) ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LGg e_a1LGh #)
                        (\ (s1#_a1KXm [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           let {
                             r_a1KXF :: Int
                             [LclId]
                             r_a1KXF = rangeSize @ i_a1LGg $dIx_a1LGj (l_a1KXj, u_a1KXk) } in
                           case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                             False ->
                               case r_a1KXF of wild2_Xb { I# n#_a1KXo ->
                               case newArray#
                                      @ e_a1LGh
                                      @ RealWorld
                                      n#_a1KXo
                                      (arrEleBottom @ e_a1LGh)
                                      s1#_a1KXm
                               of
                               { (# ipv_s1MG8 [Occ=Once*], ipv1_s1MG9 #) ->
                               case eqInt wild2_Xb (GHC.Types.I# 0#) of {
                                 False ->
                                   case foldr
                                          @ e_a1LGh
                                          @ (Int# -> State# RealWorld -> State# RealWorld)
                                          (\ (y_a1KXs [Occ=Once] :: e_a1LGh)
                                             (r1_a1KXt [Occ=Once!, OS=OneShot]
                                                :: Int# -> State# RealWorld -> State# RealWorld)
                                             (i#_a1KXu :: Int#)
                                             (s3#_a1KXv [Occ=Once] :: State# RealWorld) ->
                                             case writeArray#
                                                    @ RealWorld
                                                    @ e_a1LGh
                                                    ipv1_s1MG9
                                                    i#_a1KXu
                                                    y_a1KXs
                                                    s3#_a1KXv
                                             of s4#_a1KXw
                                             { __DEFAULT ->
                                             case ==# i#_a1KXu (-# n#_a1KXo 1#) of {
                                               __DEFAULT -> r1_a1KXt (+# i#_a1KXu 1#) s4#_a1KXw;
                                               1# -> s4#_a1KXw
                                             }
                                             })
                                          (\ _ [Occ=Dead]
                                             (s#_a1KXx [Occ=Once] :: State# RealWorld) ->
                                             s#_a1KXx)
                                          es_a1KXl
                                          0#
                                          ipv_s1MG8
                                   of wild4_Xao
                                   { __DEFAULT ->
                                   case unsafeFreezeArray#
                                          @ RealWorld @ e_a1LGh ipv1_s1MG9 wild4_Xao
                                   of
                                   { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                   (# ipv2_s1MEX,
                                      GHC.Arr.$WArray
                                        @ i_a1LGg @ e_a1LGh l_a1KXj u_a1KXk wild2_Xb ipv3_s1MEY #)
                                   }
                                   };
                                 True ->
                                   case unsafeFreezeArray#
                                          @ RealWorld @ e_a1LGh ipv1_s1MG9 ipv_s1MG8
                                   of
                                   { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                   (# ipv2_s1MEX,
                                      GHC.Arr.$WArray
                                        @ i_a1LGg @ e_a1LGh l_a1KXj u_a1KXk wild2_Xb ipv3_s1MEY #)
                                   }
                               }
                               }
                               };
                             True -> case negRange of { }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }}]
listArray
  = \ (@ i_a1LGg)
      (@ e_a1LGh)
      ($dIx_a1LGj :: Ix i_a1LGg)
      (ds_d1Meo :: (i_a1LGg, i_a1LGg))
      (es_a1KXl :: [e_a1LGh]) ->
      case ds_d1Meo of wild_X4R { (l_a1KXj, u_a1KXk) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LGg e_a1LGh #)
             (\ (s1#_a1KXm [OS=OneShot] :: State# RealWorld) ->
                case rangeSize @ i_a1LGg $dIx_a1LGj wild_X4R of { I# x_alN9 ->
                case <# x_alN9 0# of {
                  __DEFAULT ->
                    case newArray#
                           @ e_a1LGh @ RealWorld x_alN9 (arrEleBottom @ e_a1LGh) s1#_a1KXm
                    of
                    { (# ipv_s1MFU, ipv1_s1MFV #) ->
                    case x_alN9 of wild2_X98 {
                      __DEFAULT ->
                        join {
                          $j_s1RWR [Dmd=<C(S),C(U)>]
                            :: State# RealWorld
                               -> (# State# RealWorld, Array i_a1LGg e_a1LGh #)
                          [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                          $j_s1RWR (wild3_XbM [OS=OneShot]
                                      :: State# RealWorld
                                      Unf=OtherCon [])
                            = case unsafeFreezeArray#
                                     @ RealWorld @ e_a1LGh ipv1_s1MFV wild3_XbM
                              of
                              { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                              (# ipv2_s1MEX,
                                 case l_a1KXj of dt_X1L5f { __DEFAULT ->
                                 case u_a1KXk of dt1_X1L5h { __DEFAULT ->
                                 GHC.Arr.Array
                                   @ i_a1LGg @ e_a1LGh dt_X1L5f dt1_X1L5h wild2_X98 ipv3_s1MEY
                                 }
                                 } #)
                              } } in
                        joinrec {
                          go_i1y1b [Occ=LoopBreaker]
                            :: [e_a1LGh]
                               -> Int#
                               -> State# RealWorld
                               -> (# State# RealWorld, Array i_a1LGg e_a1LGh #)
                          [LclId[JoinId(3)], Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []]
                          go_i1y1b (ds2_i1y1c :: [e_a1LGh])
                                   (eta_B2 :: Int#)
                                   (eta1_B1 :: State# RealWorld)
                            = case ds2_i1y1c of {
                                [] -> jump $j_s1RWR eta1_B1;
                                : y_i1y1h ys_i1y1i ->
                                  case writeArray#
                                         @ RealWorld @ e_a1LGh ipv1_s1MFV eta_B2 y_i1y1h eta1_B1
                                  of s4#_a1KXw
                                  { __DEFAULT ->
                                  case ==# eta_B2 (-# wild2_X98 1#) of {
                                    __DEFAULT -> jump go_i1y1b ys_i1y1i (+# eta_B2 1#) s4#_a1KXw;
                                    1# -> jump $j_s1RWR s4#_a1KXw
                                  }
                                  }
                              }; } in
                        jump go_i1y1b es_a1KXl 0# ipv_s1MFU;
                      0# ->
                        case unsafeFreezeArray# @ RealWorld @ e_a1LGh ipv1_s1MFV ipv_s1MFU
                        of
                        { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                        (# ipv2_s1MEX,
                           case l_a1KXj of dt_X1L5f { __DEFAULT ->
                           case u_a1KXk of dt1_X1L5h { __DEFAULT ->
                           GHC.Arr.Array @ i_a1LGg @ e_a1LGh dt_X1L5f dt1_X1L5h 0# ipv3_s1MEY
                           }
                           } #)
                        }
                    }
                    };
                  1# -> case negRange of wild2_00 { }
                }
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }

Rec {
-- RHS size: {terms: 65, types: 141, coercions: 0, joins: 2/2}
amap [InlPrag=INLINE[1] (sat-args=2), Occ=LoopBreaker!]
  :: forall a b i. (a -> b) -> Array i a -> Array i b
[GblId,
 Arity=2,
 Str=<L,C(U)><S(SSSL),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a1LHk)
                 (@ b_a1LHl)
                 (@ i_a1LHm)
                 (f1_a1KZL [Occ=OnceL!] :: a_a1LHk -> b_a1LHl)
                 (arr_a1KZM [Occ=Once!] :: Array i_a1LHm a_a1LHk) ->
                 case arr_a1KZM of
                 { Array l_a1KZN [Occ=OnceL] u_a1KZO [Occ=OnceL] dt_d1Mub
                         ds_d1Mfj [Occ=OnceL] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LHm b_a1LHl #)
                        (\ (s1#_a1KZR [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ b_a1LHl @ RealWorld dt_d1Mub (arrEleBottom @ b_a1LHl) s1#_a1KZR
                           of
                           { (# ipv_s1MJs [Occ=Once], ipv1_s1MJt [Occ=OnceL*] #) ->
                           joinrec {
                             go_a1LHC [Occ=LoopBreakerT[2]]
                               :: Int
                                  -> State# RealWorld
                                  -> (# State# RealWorld, Array i_a1LHm b_a1LHl #)
                             [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                             go_a1LHC (i1_a1KZV [Occ=Once!] :: Int)
                                      (s#_a1KZW [Occ=Once*] :: State# RealWorld)
                               = case i1_a1KZV of { I# x_a22G ->
                                 case ==# x_a22G dt_d1Mub of {
                                   __DEFAULT ->
                                     case writeArray#
                                            @ RealWorld
                                            @ b_a1LHl
                                            ipv1_s1MJt
                                            x_a22G
                                            (f1_a1KZL
                                               (case indexArray# @ a_a1LHk ds_d1Mfj x_a22G of
                                                { (# ipv2_s1MGr [Occ=Once] #) ->
                                                ipv2_s1MGr
                                                }))
                                            s#_a1KZW
                                     of s2#_a1KXb
                                     { __DEFAULT ->
                                     jump go_a1LHC (GHC.Types.I# (+# x_a22G 1#)) s2#_a1KXb
                                     };
                                   1# ->
                                     case unsafeFreezeArray#
                                            @ RealWorld @ b_a1LHl ipv1_s1MJt s#_a1KZW
                                     of
                                     { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                     (# ipv2_s1MEX,
                                        GHC.Arr.Array
                                          @ i_a1LHm @ b_a1LHl l_a1KZN u_a1KZO dt_d1Mub ipv3_s1MEY #)
                                     }
                                 }
                                 }; } in
                           jump go_a1LHC (GHC.Types.I# 0#) ipv_s1MJs
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }}]
amap
  = \ (@ a_a1LHk)
      (@ b_a1LHl)
      (@ i_a1LHm)
      (f1_a1KZL :: a_a1LHk -> b_a1LHl)
      (arr_a1KZM :: Array i_a1LHm a_a1LHk) ->
      case arr_a1KZM of { Array l_a1KZN u_a1KZO dt_d1Mub ds_d1Mfj ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LHm b_a1LHl #)
             (\ (s1#_a1KZR [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ b_a1LHl @ RealWorld dt_d1Mub (arrEleBottom @ b_a1LHl) s1#_a1KZR
                of
                { (# ipv_s1MJf, ipv1_s1MJg #) ->
                join {
                  exit_X6f [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LHm b_a1LHl #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  exit_X6f (w_s1Tkj [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray# @ RealWorld @ b_a1LHl ipv1_s1MJg w_s1Tkj
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         GHC.Arr.Array
                           @ i_a1LHm @ b_a1LHl l_a1KZN u_a1KZO dt_d1Mub ipv3_s1MEY #)
                      } } in
                joinrec {
                  $wgo_s1Tko [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LHm b_a1LHl #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  $wgo_s1Tko (ww_s1Tkm :: Int#) (w_s1Tkj :: State# RealWorld)
                    = case ==# ww_s1Tkm dt_d1Mub of {
                        __DEFAULT ->
                          case writeArray#
                                 @ RealWorld
                                 @ b_a1LHl
                                 ipv1_s1MJg
                                 ww_s1Tkm
                                 (f1_a1KZL
                                    (case indexArray# @ a_a1LHk ds_d1Mfj ww_s1Tkm of
                                     { (# ipv2_s1MGr #) ->
                                     ipv2_s1MGr
                                     }))
                                 w_s1Tkj
                          of s2#_a1KXb
                          { __DEFAULT ->
                          jump $wgo_s1Tko (+# ww_s1Tkm 1#) s2#_a1KXb
                          };
                        1# -> jump exit_X6f w_s1Tkj
                      }; } in
                jump $wgo_s1Tko 0# ipv_s1MJf
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }
end Rec }

-- RHS size: {terms: 59, types: 135, coercions: 0, joins: 2/2}
GHC.Arr.$fFunctorArray_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall i a b. a -> Array i b -> Array i a
[GblId,
 Arity=2,
 Str=<L,U><S(SSSL),1*U(U,U,U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1Tkw)
                 (@ a_s1Tkx)
                 (@ b_s1Tky)
                 (w_s1Tkz [Occ=OnceL] :: a_s1Tkx)
                 (w1_s1TkA [Occ=Once!] :: Array i_s1Tkw b_s1Tky) ->
                 case w1_s1TkA of
                 { Array ww1_s1TkD [Occ=OnceL] ww2_s1TkE [Occ=OnceL] ww3_s1TkF
                         _ [Occ=Dead] ->
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_s1Tkw a_s1Tkx #)
                        (\ (s1#_a1KZR [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ a_s1Tkx @ RealWorld ww3_s1TkF (arrEleBottom @ a_s1Tkx) s1#_a1KZR
                           of
                           { (# ipv_s1MJs [Occ=Once], ipv1_s1MJt [Occ=OnceL*] #) ->
                           joinrec {
                             $wgo_s1Tkv [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
                               :: Int#
                                  -> State# RealWorld
                                  -> (# State# RealWorld, Array i_s1Tkw a_s1Tkx #)
                             [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                             $wgo_s1Tkv (ww5_s1Tkt :: Int#)
                                        (w2_s1Tkq [Occ=Once*] :: State# RealWorld)
                               = case ==# ww5_s1Tkt ww3_s1TkF of {
                                   __DEFAULT ->
                                     case writeArray#
                                            @ RealWorld
                                            @ a_s1Tkx
                                            ipv1_s1MJt
                                            ww5_s1Tkt
                                            w_s1Tkz
                                            w2_s1Tkq
                                     of s2#_a1KXb
                                     { __DEFAULT ->
                                     jump $wgo_s1Tkv (+# ww5_s1Tkt 1#) s2#_a1KXb
                                     };
                                   1# ->
                                     case unsafeFreezeArray#
                                            @ RealWorld @ a_s1Tkx ipv1_s1MJt w2_s1Tkq
                                     of
                                     { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                     (# ipv2_s1MEX,
                                        GHC.Arr.Array
                                          @ i_s1Tkw
                                          @ a_s1Tkx
                                          ww1_s1TkD
                                          ww2_s1TkE
                                          ww3_s1TkF
                                          ipv3_s1MEY #)
                                     }
                                 }; } in
                           jump $wgo_s1Tkv 0# ipv_s1MJs
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }}]
GHC.Arr.$fFunctorArray_$c<$
  = \ (@ i_s1Tkw)
      (@ a_s1Tkx)
      (@ b_s1Tky)
      (w_s1Tkz :: a_s1Tkx)
      (w1_s1TkA :: Array i_s1Tkw b_s1Tky) ->
      case w1_s1TkA of { Array ww1_s1TkD ww2_s1TkE ww3_s1TkF ww4_s1TkG ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_s1Tkw a_s1Tkx #)
             (\ (s1#_a1KZR [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ a_s1Tkx @ RealWorld ww3_s1TkF (arrEleBottom @ a_s1Tkx) s1#_a1KZR
                of
                { (# ipv_s1MJs, ipv1_s1MJt #) ->
                join {
                  exit_X6f [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_s1Tkw a_s1Tkx #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  exit_X6f (w2_s1Tkq [OS=OneShot] :: State# RealWorld)
                    = case unsafeFreezeArray# @ RealWorld @ a_s1Tkx ipv1_s1MJt w2_s1Tkq
                      of
                      { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                      (# ipv2_s1MEX,
                         GHC.Arr.Array
                           @ i_s1Tkw @ a_s1Tkx ww1_s1TkD ww2_s1TkE ww3_s1TkF ipv3_s1MEY #)
                      } } in
                joinrec {
                  $wgo_s1Tkv [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_s1Tkw a_s1Tkx #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  $wgo_s1Tkv (ww5_s1Tkt :: Int#) (w2_s1Tkq :: State# RealWorld)
                    = case ==# ww5_s1Tkt ww3_s1TkF of {
                        __DEFAULT ->
                          case writeArray#
                                 @ RealWorld @ a_s1Tkx ipv1_s1MJt ww5_s1Tkt w_s1Tkz w2_s1Tkq
                          of s2#_a1KXb
                          { __DEFAULT ->
                          jump $wgo_s1Tkv (+# ww5_s1Tkt 1#) s2#_a1KXb
                          };
                        1# -> jump exit_X6f w2_s1Tkq
                      }; } in
                jump $wgo_s1Tkv 0# ipv_s1MJs
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fFunctorArray [InlPrag=NOUSERINLINE CONLIKE]
  :: forall i. Functor (Array i)
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ (@ i_a1KRz) ->
       GHC.Base.C:Functor TYPE: Array i_a1KRz
                          \ (@ a_a1LOv) (@ b_a1LOw) -> amap @ a_a1LOv @ b_a1LOw @ i_a1KRz
                          GHC.Arr.$fFunctorArray_$c<$ @ i_a1KRz]
GHC.Arr.$fFunctorArray
  = \ (@ i_a1LOr) ->
      GHC.Base.C:Functor
        @ (Array i_a1LOr)
        (\ (@ a_a1LOv) (@ b_a1LOw) -> amap @ a_a1LOv @ b_a1LOw @ i_a1LOr)
        (GHC.Arr.$fFunctorArray_$c<$ @ i_a1LOr)

-- RHS size: {terms: 17, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$cunsafeRangeSize :: (Word, Word) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRo [Occ=Once!] :: (Word, Word)) ->
                 case b_a1KRo of { (_l_a1KRp [Occ=Once!], h_a1KRq [Occ=Once!]) ->
                 case h_a1KRq of { W# x#_i1MxN [Occ=Once] ->
                 case _l_a1KRp of { W# y#_i1MxR [Occ=Once] ->
                 GHC.Types.I# (+# (word2Int# (minusWord# x#_i1MxN y#_i1MxR)) 1#)
                 }
                 }
                 }}]
GHC.Arr.$fIxWord_$cunsafeRangeSize
  = \ (b_a1KRo :: (Word, Word)) ->
      case b_a1KRo of { (_l_a1KRp, h_a1KRq) ->
      case h_a1KRq of { W# x#_i1MxN ->
      case _l_a1KRp of { W# y#_i1MxR ->
      GHC.Types.I# (+# (word2Int# (minusWord# x#_i1MxN y#_i1MxR)) 1#)
      }
      }
      }

-- RHS size: {terms: 24, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$crangeSize :: (Word, Word) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRl [Occ=Once!] :: (Word, Word)) ->
                 case b_a1KRl of { (_l_a1KRm [Occ=Once!], h_a1KRn [Occ=Once!]) ->
                 case _l_a1KRm of { W# x_aRFM ->
                 case h_a1KRn of { W# y_aRFQ ->
                 case leWord# x_aRFM y_aRFQ of {
                   __DEFAULT -> GHC.Arr.$fIxInt1;
                   1# -> GHC.Types.I# (+# (word2Int# (minusWord# y_aRFQ x_aRFM)) 1#)
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxWord_$crangeSize
  = \ (b_a1KRl :: (Word, Word)) ->
      case b_a1KRl of { (_l_a1KRm, h_a1KRn) ->
      case _l_a1KRm of { W# x_aRFM ->
      case h_a1KRn of { W# y_aRFQ ->
      case leWord# x_aRFM y_aRFQ of {
        __DEFAULT -> GHC.Arr.$fIxInt1;
        1# -> GHC.Types.I# (+# (word2Int# (minusWord# y_aRFQ x_aRFM)) 1#)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl10_r1Xvn :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl10_r1Xvn = "Error in array index"#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
hopelessIndexError :: Int
[GblId, Str=x]
hopelessIndexError
  = errorWithoutStackTrace
      @ 'LiftedRep @ Int (unpackCString# lvl10_r1Xvn)

-- RHS size: {terms: 16, types: 11, coercions: 0, joins: 0/0}
GHC.Arr.$dmindex [InlPrag=INLINE (sat-args=2)]
  :: forall a. Ix a => (a, a) -> a -> Int
[GblId,
 Arity=3,
 Str=<S(LLLC(C(S))C(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1KRg)
                 ($dIx_a1LLJ :: Ix a_a1KRg)
                 (b_a1KRh :: (a_a1KRg, a_a1KRg))
                 (i_a1KRi :: a_a1KRg) ->
                 case inRange @ a_a1KRg $dIx_a1LLJ b_a1KRh i_a1KRi of {
                   False -> hopelessIndexError;
                   True -> unsafeIndex @ a_a1KRg $dIx_a1LLJ b_a1KRh i_a1KRi
                 }}]
GHC.Arr.$dmindex
  = \ (@ a_a1KRg)
      ($dIx_a1LLJ :: Ix a_a1KRg)
      (b_a1KRh :: (a_a1KRg, a_a1KRg))
      (i_a1KRi :: a_a1KRg) ->
      case inRange @ a_a1KRg $dIx_a1LLJ b_a1KRh i_a1KRi of {
        False -> hopelessIndexError;
        True -> unsafeIndex @ a_a1KRg $dIx_a1LLJ b_a1KRh i_a1KRi
      }

-- RHS size: {terms: 33, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Word, Word) -> Word -> Int
[GblId,
 Arity=2,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KRh [Occ=Once!] :: (Word, Word)) (i_a1KRi :: Word) ->
                 case b_a1KRh of { (m_a1KUt, n_a1KUu [Occ=Once]) ->
                 case leWord m_a1KUt i_a1KRi of {
                   False -> hopelessIndexError;
                   True ->
                     case leWord i_a1KRi n_a1KUu of {
                       False -> hopelessIndexError;
                       True ->
                         case i_a1KRi of { W# x#_i1MxN [Occ=Once] ->
                         case m_a1KUt of { W# y#_i1MxR [Occ=Once] ->
                         GHC.Types.I# (word2Int# (minusWord# x#_i1MxN y#_i1MxR))
                         }
                         }
                     }
                 }
                 }}]
GHC.Arr.$fIxWord_$cindex
  = \ (eta_B2 :: (Word, Word)) (eta1_B1 :: Word) ->
      case eta_B2 of { (m_a1KUt, n_a1KUu) ->
      case m_a1KUt of { W# x_aRFM ->
      case eta1_B1 of { W# y_aRFQ ->
      case leWord# x_aRFM y_aRFQ of {
        __DEFAULT -> hopelessIndexError;
        1# ->
          case n_a1KUu of { W# y1_XRP1 ->
          case leWord# y_aRFQ y1_XRP1 of {
            __DEFAULT -> hopelessIndexError;
            1# -> GHC.Types.I# (word2Int# (minusWord# y_aRFQ x_aRFM))
          }
          }
      }
      }
      }
      }

-- RHS size: {terms: 74, types: 54, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$cindex [InlPrag=INLINE (sat-args=2)]
  :: ((Int, Int), (Int, Int)) -> (Int, Int) -> Int
[GblId,
 Arity=2,
 Str=<S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KRh [Occ=Once!] :: ((Int, Int), (Int, Int)))
                 (i_a1KRi [Occ=Once!] :: (Int, Int)) ->
                 case b_a1KRh of { (ds_d1MqO [Occ=Once!], ds1_d1MqP [Occ=Once!]) ->
                 case ds_d1MqO of { (l1_a1KTP [Occ=Once!], l2_a1KTQ [Occ=Once!]) ->
                 case ds1_d1MqP of { (u1_a1KTR [Occ=Once!], u2_a1KTS [Occ=Once!]) ->
                 case i_a1KRi of { (i1_a1KTT [Occ=Once!], i2_a1KTU [Occ=Once!]) ->
                 case l1_a1KTP of { I# m_a1KUD ->
                 case u1_a1KTR of { I# n_a1KUE [Occ=Once] ->
                 case i1_a1KTT of { I# i4_a1KUF ->
                 case <=# m_a1KUD i4_a1KUF of {
                   __DEFAULT -> hopelessIndexError;
                   1# ->
                     case <=# i4_a1KUF n_a1KUE of {
                       __DEFAULT -> hopelessIndexError;
                       1# ->
                         case l2_a1KTQ of { I# m1_X1L7e ->
                         case u2_a1KTS of { I# n1_X1L7k ->
                         case i2_a1KTU of { I# i5_X1L7q ->
                         case <=# m1_X1L7e i5_X1L7q of {
                           __DEFAULT -> hopelessIndexError;
                           1# ->
                             case <=# i5_X1L7q n1_X1L7k of {
                               __DEFAULT -> hopelessIndexError;
                               1# ->
                                 GHC.Types.I#
                                   (+#
                                      (*# (-# i4_a1KUF m_a1KUD) (+# (-# n1_X1L7k m1_X1L7e) 1#))
                                      (-# i5_X1L7q m1_X1L7e))
                             }
                         }
                         }
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$cindex
  = \ (eta_X7Z :: ((Int, Int), (Int, Int)))
      (eta1_XfX :: (Int, Int)) ->
      case eta_X7Z of { (ds_d1MqO, ds1_d1MqP) ->
      case ds_d1MqO of { (l1_a1KTP, l2_a1KTQ) ->
      case ds1_d1MqP of { (u1_a1KTR, u2_a1KTS) ->
      case eta1_XfX of { (i1_a1KTT, i2_a1KTU) ->
      case l1_a1KTP of { I# m_a1KUD ->
      case u1_a1KTR of { I# n_a1KUE ->
      case i1_a1KTT of { I# i_a1KUF ->
      case <=# m_a1KUD i_a1KUF of {
        __DEFAULT -> hopelessIndexError;
        1# ->
          case <=# i_a1KUF n_a1KUE of {
            __DEFAULT -> hopelessIndexError;
            1# ->
              case l2_a1KTQ of { I# m1_X1L7e ->
              case u2_a1KTS of { I# n1_X1L7k ->
              case i2_a1KTU of { I# i4_X1L7q ->
              case <=# m1_X1L7e i4_X1L7q of {
                __DEFAULT -> hopelessIndexError;
                1# ->
                  case <=# i4_X1L7q n1_X1L7k of {
                    __DEFAULT -> hopelessIndexError;
                    1# ->
                      GHC.Types.I#
                        (+#
                           (*# (-# i_a1KUF m_a1KUD) (+# (-# n1_X1L7k m1_X1L7e) 1#))
                           (-# i4_X1L7q m1_X1L7e))
                  }
              }
              }
              }
              }
          }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 67, types: 69, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$cindex [InlPrag=INLINE (sat-args=2)]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> (a, b) -> Int
[GblId,
 Arity=4,
 Str=<S(LLLC(C(S(S)))C(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><S(LLLC(C(S(S)))C(C(S))LC(S(S))),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,1*C1(U(U)))><S(SS),1*U(1*U(U,U),1*U(U,U))><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a1LT8)
                 (@ b_a1LT9)
                 ($dIx_a1LTa :: Ix a_a1LT8)
                 ($dIx1_a1LTb :: Ix b_a1LT9)
                 (b1_a1KRh [Occ=Once!] :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
                 (i_a1KRi [Occ=Once!] :: (a_a1LT8, b_a1LT9)) ->
                 case b1_a1KRh of { (ds_d1MqO [Occ=Once!], ds1_d1MqP [Occ=Once!]) ->
                 case ds_d1MqO of { (l1_a1KTP, l2_a1KTQ) ->
                 case ds1_d1MqP of { (u1_a1KTR, u2_a1KTS) ->
                 case i_a1KRi of { (i1_a1KTT, i2_a1KTU) ->
                 case inRange @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
                 of {
                   False -> hopelessIndexError;
                   True ->
                     case inRange @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
                     of {
                       False -> hopelessIndexError;
                       True ->
                         case unsafeIndex @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
                         of
                         { I# x_i1MAD [Occ=Once] ->
                         case unsafeRangeSize @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) of
                         { I# y_i1MAH [Occ=Once] ->
                         case unsafeIndex
                                @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
                         of
                         { I# y1_i1AMm [Occ=Once] ->
                         GHC.Types.I# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm)
                         }
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$cindex
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9)
      (eta_X7Z :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
      (eta1_XfX :: (a_a1LT8, b_a1LT9)) ->
      case eta_X7Z of { (ds_d1MqO, ds1_d1MqP) ->
      case ds_d1MqO of { (l1_a1KTP, l2_a1KTQ) ->
      case ds1_d1MqP of { (u1_a1KTR, u2_a1KTS) ->
      case eta1_XfX of { (i1_a1KTT, i2_a1KTU) ->
      case inRange @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
      of {
        False -> hopelessIndexError;
        True ->
          case inRange @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
          of {
            False -> hopelessIndexError;
            True ->
              case unsafeIndex @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
              of
              { I# x_i1MAD ->
              case unsafeRangeSize @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) of
              { I# y_i1MAH ->
              case unsafeIndex
                     @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
              of
              { I# y1_i1AMm ->
              GHC.Types.I# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm)
              }
              }
              }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 107, types: 75, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$cindex [InlPrag=INLINE (sat-args=2)]
  :: ((Int, Int, Int), (Int, Int, Int)) -> (Int, Int, Int) -> Int
[GblId,
 Arity=2,
 Str=<S(S(S(S)S(S)S(S))S(S(S)S(S)S(S))),1*U(1*U(1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U)))><S(S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KRh [Occ=Once!] :: ((Int, Int, Int), (Int, Int, Int)))
                 (i_a1KRi [Occ=Once!] :: (Int, Int, Int)) ->
                 case b_a1KRh of { (ds_d1Mpv [Occ=Once!], ds1_d1Mpw [Occ=Once!]) ->
                 case ds_d1Mpv of
                 { (l1_a1KTs [Occ=Once!], l2_a1KTt [Occ=Once!],
                    l3_a1KTu [Occ=Once!]) ->
                 case ds1_d1Mpw of
                 { (u1_a1KTv [Occ=Once!], u2_a1KTw [Occ=Once!],
                    u3_a1KTx [Occ=Once!]) ->
                 case i_a1KRi of
                 { (i1_a1KTy [Occ=Once!], i2_a1KTz [Occ=Once!],
                    i3_a1KTA [Occ=Once!]) ->
                 case l1_a1KTs of { I# m_a1KUD ->
                 case u1_a1KTv of { I# n_a1KUE [Occ=Once] ->
                 case i1_a1KTy of { I# i4_a1KUF ->
                 case <=# m_a1KUD i4_a1KUF of {
                   __DEFAULT -> hopelessIndexError;
                   1# ->
                     case <=# i4_a1KUF n_a1KUE of {
                       __DEFAULT -> hopelessIndexError;
                       1# ->
                         case l2_a1KTt of { I# m1_X1L7J ->
                         case u2_a1KTw of { I# n1_X1L7P ->
                         case i2_a1KTz of { I# i5_X1L7V ->
                         case <=# m1_X1L7J i5_X1L7V of {
                           __DEFAULT -> hopelessIndexError;
                           1# ->
                             case <=# i5_X1L7V n1_X1L7P of {
                               __DEFAULT -> hopelessIndexError;
                               1# ->
                                 case l3_a1KTu of { I# m2_X1L82 ->
                                 case u3_a1KTx of { I# n2_X1L88 ->
                                 case i3_a1KTA of { I# i6_X1L8e ->
                                 case <=# m2_X1L82 i6_X1L8e of {
                                   __DEFAULT -> hopelessIndexError;
                                   1# ->
                                     case <=# i6_X1L8e n2_X1L88 of {
                                       __DEFAULT -> hopelessIndexError;
                                       1# ->
                                         GHC.Types.I#
                                           (+#
                                              (-# i6_X1L8e m2_X1L82)
                                              (*#
                                                 (+# (-# n2_X1L88 m2_X1L82) 1#)
                                                 (+#
                                                    (-# i5_X1L7V m1_X1L7J)
                                                    (*#
                                                       (+# (-# n1_X1L7P m1_X1L7J) 1#)
                                                       (-# i4_a1KUF m_a1KUD)))))
                                     }
                                 }
                                 }
                                 }
                                 }
                             }
                         }
                         }
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,,)_$s$cindex
  = \ (eta_X8p :: ((Int, Int, Int), (Int, Int, Int)))
      (eta1_XgN :: (Int, Int, Int)) ->
      case eta_X8p of { (ds_d1Mpv, ds1_d1Mpw) ->
      case ds_d1Mpv of { (l1_a1KTs, l2_a1KTt, l3_a1KTu) ->
      case ds1_d1Mpw of { (u1_a1KTv, u2_a1KTw, u3_a1KTx) ->
      case eta1_XgN of { (i1_a1KTy, i2_a1KTz, i3_a1KTA) ->
      case l1_a1KTs of { I# m_a1KUD ->
      case u1_a1KTv of { I# n_a1KUE ->
      case i1_a1KTy of { I# i_a1KUF ->
      case <=# m_a1KUD i_a1KUF of {
        __DEFAULT -> hopelessIndexError;
        1# ->
          case <=# i_a1KUF n_a1KUE of {
            __DEFAULT -> hopelessIndexError;
            1# ->
              case l2_a1KTt of { I# m1_X1L7J ->
              case u2_a1KTw of { I# n1_X1L7P ->
              case i2_a1KTz of { I# i4_X1L7V ->
              case <=# m1_X1L7J i4_X1L7V of {
                __DEFAULT -> hopelessIndexError;
                1# ->
                  case <=# i4_X1L7V n1_X1L7P of {
                    __DEFAULT -> hopelessIndexError;
                    1# ->
                      case l3_a1KTu of { I# m2_X1L82 ->
                      case u3_a1KTx of { I# n2_X1L88 ->
                      case i3_a1KTA of { I# i5_X1L8e ->
                      case <=# m2_X1L82 i5_X1L8e of {
                        __DEFAULT -> hopelessIndexError;
                        1# ->
                          case <=# i5_X1L8e n2_X1L88 of {
                            __DEFAULT -> hopelessIndexError;
                            1# ->
                              GHC.Types.I#
                                (+#
                                   (-# i5_X1L8e m2_X1L82)
                                   (*#
                                      (+# (-# n2_X1L88 m2_X1L82) 1#)
                                      (+#
                                         (-# i4_X1L7V m1_X1L7J)
                                         (*# (+# (-# n1_X1L7P m1_X1L7J) 1#) (-# i_a1KUF m_a1KUD)))))
                          }
                      }
                      }
                      }
                      }
                  }
              }
              }
              }
              }
          }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 24, types: 32, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$cindex [InlPrag=INLINE (sat-args=2)]
  :: forall a1 a2 a3.
     (Ix a1, Ix a2, Ix a3) =>
     ((a1, a2, a3), (a1, a2, a3)) -> (a1, a2, a3) -> Int
[GblId,
 Arity=5,
 Str=<S(LLLC(C(S(S)))C(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(SS),U(U(U,U,U),U(U,U,U))><S,U(U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a1_a1LRQ)
                 (@ a2_a1LRR)
                 (@ a3_a1LRS)
                 ($dIx_a1LRT :: Ix a1_a1LRQ)
                 ($dIx1_a1LRU :: Ix a2_a1LRR)
                 ($dIx2_a1LRV :: Ix a3_a1LRS)
                 (b_a1KRh
                    :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
                        (a1_a1LRQ, a2_a1LRR, a3_a1LRS)))
                 (i_a1KRi :: (a1_a1LRQ, a2_a1LRR, a3_a1LRS)) ->
                 case GHC.Arr.$fIx(,,)_$cinRange
                        @ a1_a1LRQ
                        @ a2_a1LRR
                        @ a3_a1LRS
                        $dIx_a1LRT
                        $dIx1_a1LRU
                        $dIx2_a1LRV
                        b_a1KRh
                        i_a1KRi
                 of {
                   False -> hopelessIndexError;
                   True ->
                     GHC.Arr.$fIx(,,)_$cunsafeIndex
                       @ a1_a1LRQ
                       @ a2_a1LRR
                       @ a3_a1LRS
                       $dIx_a1LRT
                       $dIx1_a1LRU
                       $dIx2_a1LRV
                       b_a1KRh
                       i_a1KRi
                 }}]
GHC.Arr.$fIx(,,)_$cindex
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS)
      (eta_X8p
         :: ((a1_a1LRQ, a2_a1LRR, a3_a1LRS),
             (a1_a1LRQ, a2_a1LRR, a3_a1LRS)))
      (eta1_XgN :: (a1_a1LRQ, a2_a1LRR, a3_a1LRS)) ->
      case GHC.Arr.$fIx(,,)_$cinRange
             @ a1_a1LRQ
             @ a2_a1LRR
             @ a3_a1LRS
             $dIx_a1LRT
             $dIx1_a1LRU
             $dIx2_a1LRV
             eta_X8p
             eta1_XgN
      of {
        False -> hopelessIndexError;
        True ->
          GHC.Arr.$fIx(,,)_$cunsafeIndex
            @ a1_a1LRQ
            @ a2_a1LRR
            @ a3_a1LRS
            $dIx_a1LRT
            $dIx1_a1LRU
            $dIx2_a1LRV
            eta_X8p
            eta1_XgN
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl11_r1Xvo :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl11_r1Xvo = "Char"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl12_r1Xvp :: [Char]
[GblId]
lvl12_r1Xvp = unpackCString# lvl11_r1Xvo

-- RHS size: {terms: 18, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$cunsafeRangeSize :: (Char, Char) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRo [Occ=Once!] :: (Char, Char)) ->
                 case b_a1KRo of { (_l_a1KRp [Occ=Once!], h_a1KRq [Occ=Once!]) ->
                 case h_a1KRq of { C# c#_i1MwB [Occ=Once] ->
                 case _l_a1KRp of { C# c#1_X1MFN [Occ=Once] ->
                 GHC.Types.I# (+# (-# (ord# c#_i1MwB) (ord# c#1_X1MFN)) 1#)
                 }
                 }
                 }}]
GHC.Arr.$fIxChar_$cunsafeRangeSize
  = \ (b_a1KRo :: (Char, Char)) ->
      case b_a1KRo of { (_l_a1KRp, h_a1KRq) ->
      case h_a1KRq of { C# c#_i1MwB ->
      case _l_a1KRp of { C# c#1_X1MFN ->
      GHC.Types.I# (+# (-# (ord# c#_i1MwB) (ord# c#1_X1MFN)) 1#)
      }
      }
      }

-- RHS size: {terms: 25, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$crangeSize :: (Char, Char) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRl [Occ=Once!] :: (Char, Char)) ->
                 case b_a1KRl of { (_l_a1KRm [Occ=Once!], h_a1KRn [Occ=Once!]) ->
                 case _l_a1KRm of { C# c1_aA05 ->
                 case h_a1KRn of { C# c2_aA09 ->
                 case leChar# c1_aA05 c2_aA09 of {
                   __DEFAULT -> GHC.Arr.$fIxInt1;
                   1# -> GHC.Types.I# (+# (-# (ord# c2_aA09) (ord# c1_aA05)) 1#)
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxChar_$crangeSize
  = \ (b_a1KRl :: (Char, Char)) ->
      case b_a1KRl of { (_l_a1KRm, h_a1KRn) ->
      case _l_a1KRm of { C# c1_aA05 ->
      case h_a1KRn of { C# c2_aA09 ->
      case leChar# c1_aA05 c2_aA09 of {
        __DEFAULT -> GHC.Arr.$fIxInt1;
        1# -> GHC.Types.I# (+# (-# (ord# c2_aA09) (ord# c1_aA05)) 1#)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl13_r1Xvq :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl13_r1Xvq = "Integer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl14_r1Xvr :: [Char]
[GblId]
lvl14_r1Xvr = unpackCString# lvl13_r1Xvq

-- RHS size: {terms: 14, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: (Integer, Integer) -> Int
[GblId,
 Arity=1,
 Str=<S(SS),1*U(1*U,1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TkJ [Occ=Once!] :: (Integer, Integer)) ->
                 case w_s1TkJ of { (ww1_s1TkM [Occ=Once], ww2_s1TkN [Occ=Once]) ->
                 case integerToInt (minusInteger ww2_s1TkN ww1_s1TkM) of wild_i1AOp
                 { __DEFAULT ->
                 GHC.Types.I# (+# wild_i1AOp 1#)
                 }
                 }}]
GHC.Arr.$fIxInteger_$cunsafeRangeSize
  = \ (w_s1TkJ :: (Integer, Integer)) ->
      case w_s1TkJ of { (ww1_s1TkM, ww2_s1TkN) ->
      case integerToInt (minusInteger ww2_s1TkN ww1_s1TkM) of wild_i1AOp
      { __DEFAULT ->
      GHC.Types.I# (+# wild_i1AOp 1#)
      }
      }

-- RHS size: {terms: 25, types: 5, coercions: 0, joins: 0/0}
GHC.Arr.$w$crangeSize2 [InlPrag=NOUSERINLINE[0]]
  :: Integer -> Integer -> Int#
[GblId,
 Arity=2,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 161 0}]
GHC.Arr.$w$crangeSize2
  = \ (ww_s1TkW :: Integer) (ww1_s1TkX :: Integer) ->
      case leInteger# ww_s1TkW ww1_s1TkX of {
        __DEFAULT -> 0#;
        1# ->
          case leInteger# ww1_s1TkX ww1_s1TkX of {
            __DEFAULT -> 0#;
            1# ->
              case integerToInt (minusInteger ww1_s1TkX ww_s1TkW) of wild2_i1AOp
              { __DEFAULT ->
              +# wild2_i1AOp 1#
              }
          }
      }

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (Integer, Integer) -> Int
[GblId,
 Arity=1,
 Str=<S(SS),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TkT [Occ=Once!] :: (Integer, Integer)) ->
                 case w_s1TkT of { (ww1_s1TkW [Occ=Once], ww2_s1TkX [Occ=Once]) ->
                 case GHC.Arr.$w$crangeSize2 ww1_s1TkW ww2_s1TkX of ww3_s1Tl1
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s1Tl1
                 }
                 }}]
GHC.Arr.$fIxInteger_$crangeSize
  = \ (w_s1TkT :: (Integer, Integer)) ->
      case w_s1TkT of { (ww1_s1TkW, ww2_s1TkX) ->
      case GHC.Arr.$w$crangeSize2 ww1_s1TkW ww2_s1TkX of ww3_s1Tl1
      { __DEFAULT ->
      GHC.Types.I# ww3_s1Tl1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl15_r1Xvs :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl15_r1Xvs = "Bool"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl16_r1Xvt :: [Char]
[GblId]
lvl16_r1Xvt = unpackCString# lvl15_r1Xvs

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl17_r1Xvu :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl17_r1Xvu = GHC.Types.I# 1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl18_r1Xvv :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl18_r1Xvv = GHC.Types.I# 2#

-- RHS size: {terms: 20, types: 11, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool_$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: (Bool, Bool) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tl3 [Occ=Once!] :: (Bool, Bool)) ->
                 case w_s1Tl3 of
                 { (ww1_s1Tl6 [Occ=Once*!], ww2_s1Tl7 [Occ=Once!]) ->
                 case ww2_s1Tl7 of {
                   False ->
                     case ww1_s1Tl6 of {
                       False -> GHC.Types.I# 1#;
                       True -> GHC.Types.I# 0#
                     };
                   True ->
                     case ww1_s1Tl6 of {
                       False -> GHC.Types.I# 2#;
                       True -> GHC.Types.I# 1#
                     }
                 }
                 }}]
GHC.Arr.$fIxBool_$cunsafeRangeSize
  = \ (w_s1Tl3 :: (Bool, Bool)) ->
      case w_s1Tl3 of { (ww1_s1Tl6, ww2_s1Tl7) ->
      case ww2_s1Tl7 of {
        False ->
          case ww1_s1Tl6 of {
            False -> lvl17_r1Xvu;
            True -> GHC.Arr.$fIxInt1
          };
        True ->
          case ww1_s1Tl6 of {
            False -> lvl18_r1Xvv;
            True -> lvl17_r1Xvu
          }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl19_r1Xvw :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl19_r1Xvw = "Ordering"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl20_r1Xvx :: [Char]
[GblId]
lvl20_r1Xvx = unpackCString# lvl19_r1Xvw

-- RHS size: {terms: 31, types: 6, coercions: 0, joins: 0/0}
GHC.Arr.$w$cunsafeRangeSize1 [InlPrag=NOUSERINLINE[0]]
  :: Ordering -> Ordering -> Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [120 100] 120 0}]
GHC.Arr.$w$cunsafeRangeSize1
  = \ (ww_s1Tlg :: Ordering) (ww1_s1Tlh :: Ordering) ->
      case ww1_s1Tlh of {
        LT ->
          case ww_s1Tlg of {
            LT -> 1#;
            EQ -> 0#;
            GT -> -1#
          };
        EQ ->
          case ww_s1Tlg of {
            LT -> 2#;
            EQ -> 1#;
            GT -> 0#
          };
        GT ->
          case ww_s1Tlg of {
            LT -> 3#;
            EQ -> 2#;
            GT -> 1#
          }
      }

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: (Ordering, Ordering) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1Tld [Occ=Once!] :: (Ordering, Ordering)) ->
                 case w_s1Tld of { (ww1_s1Tlg [Occ=Once], ww2_s1Tlh [Occ=Once]) ->
                 case GHC.Arr.$w$cunsafeRangeSize1 ww1_s1Tlg ww2_s1Tlh of ww3_s1Tll
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s1Tll
                 }
                 }}]
GHC.Arr.$fIxOrdering_$cunsafeRangeSize
  = \ (w_s1Tld :: (Ordering, Ordering)) ->
      case w_s1Tld of { (ww1_s1Tlg, ww2_s1Tlh) ->
      case GHC.Arr.$w$cunsafeRangeSize1 ww1_s1Tlg ww2_s1Tlh of ww3_s1Tll
      { __DEFAULT ->
      GHC.Types.I# ww3_s1Tll
      }
      }

-- RHS size: {terms: 8, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$dmunsafeIndex :: forall a. Ix a => (a, a) -> a -> Int
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLC(C(S))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><L,U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a1KRg)
                 ($dIx_a1LLJ [Occ=Once] :: Ix a_a1KRg)
                 (b_a1KRj [Occ=Once] :: (a_a1KRg, a_a1KRg))
                 (i_a1KRk [Occ=Once] :: a_a1KRg) ->
                 index @ a_a1KRg $dIx_a1LLJ b_a1KRj i_a1KRk}]
GHC.Arr.$dmunsafeIndex
  = \ (@ a_a1KRg)
      ($dIx_a1LLJ :: Ix a_a1KRg)
      (b_a1KRj :: (a_a1KRg, a_a1KRg))
      (i_a1KRk :: a_a1KRg) ->
      index @ a_a1KRg $dIx_a1LLJ b_a1KRj i_a1KRk

-- RHS size: {terms: 11, types: 10, coercions: 0, joins: 0/0}
GHC.Arr.$fIx()_$cunsafeRangeSize :: ((), ()) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*H,1*H)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRo [Occ=Once!] :: ((), ())) ->
                 case b_a1KRo of { (_l_a1KRp [Occ=Once!], h_a1KRq [Occ=Once!]) ->
                 case _l_a1KRp of { () ->
                 case h_a1KRq of { () -> GHC.Types.I# 1# }
                 }
                 }}]
GHC.Arr.$fIx()_$cunsafeRangeSize
  = \ (b_a1KRo :: ((), ())) ->
      case b_a1KRo of { (_l_a1KRp, h_a1KRq) ->
      case _l_a1KRp of { () -> case h_a1KRq of { () -> lvl17_r1Xvu } }
      }

-- RHS size: {terms: 24, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$dmrangeSize :: forall a. Ix a => (a, a) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1KRg)
                 ($dIx_a1LLJ :: Ix a_a1KRg)
                 (b_a1KRl [Occ=Once!] :: (a_a1KRg, a_a1KRg)) ->
                 case b_a1KRl of wild_X43 { (_ [Occ=Dead], h_a1KRn) ->
                 case inRange @ a_a1KRg $dIx_a1LLJ wild_X43 h_a1KRn of {
                   False -> GHC.Types.I# 0#;
                   True ->
                     case unsafeIndex @ a_a1KRg $dIx_a1LLJ wild_X43 h_a1KRn of
                     { I# x_i1AMi [Occ=Once] ->
                     GHC.Types.I# (+# x_i1AMi 1#)
                     }
                 }
                 }}]
GHC.Arr.$dmrangeSize
  = \ (@ a_a1KRg)
      ($dIx_a1LLJ :: Ix a_a1KRg)
      (b_a1KRl :: (a_a1KRg, a_a1KRg)) ->
      case b_a1KRl of wild_X43 { (_l_a1KRm, h_a1KRn) ->
      case inRange @ a_a1KRg $dIx_a1LLJ wild_X43 h_a1KRn of {
        False -> GHC.Arr.$fIxInt1;
        True ->
          case unsafeIndex @ a_a1KRg $dIx_a1LLJ wild_X43 h_a1KRn of
          { I# x_i1AMi ->
          GHC.Types.I# (+# x_i1AMi 1#)
          }
      }
      }

-- RHS size: {terms: 16, types: 15, coercions: 0, joins: 0/0}
GHC.Arr.$dmunsafeRangeSize :: forall a. Ix a => (a, a) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1KRg)
                 ($dIx_a1LLJ [Occ=Once] :: Ix a_a1KRg)
                 (b_a1KRo [Occ=Once!] :: (a_a1KRg, a_a1KRg)) ->
                 case b_a1KRo of wild_X42 { (_ [Occ=Dead], h_a1KRq [Occ=Once]) ->
                 case unsafeIndex @ a_a1KRg $dIx_a1LLJ wild_X42 h_a1KRq of
                 { I# x_i1AMi [Occ=Once] ->
                 GHC.Types.I# (+# x_i1AMi 1#)
                 }
                 }}]
GHC.Arr.$dmunsafeRangeSize
  = \ (@ a_a1KRg)
      ($dIx_a1LLJ :: Ix a_a1KRg)
      (b_a1KRo :: (a_a1KRg, a_a1KRg)) ->
      case b_a1KRo of wild_X42 { (_l_a1KRp, h_a1KRq) ->
      case unsafeIndex @ a_a1KRg $dIx_a1LLJ wild_X42 h_a1KRq of
      { I# x_i1AMi ->
      GHC.Types.I# (+# x_i1AMi 1#)
      }
      }

-- RHS size: {terms: 19, types: 37, coercions: 0, joins: 0/0}
GHC.Arr.$fEqSTArray_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall s i e. STArray s i e -> STArray s i e -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(LLLS),1*U(A,A,A,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ s_a1LMg)
                 (@ i_a1LMh)
                 (@ e_a1LMi)
                 (x_a22b [Occ=Once!] :: STArray s_a1LMg i_a1LMh e_a1LMi)
                 (y_a22c [Occ=Once!] :: STArray s_a1LMg i_a1LMh e_a1LMi) ->
                 case x_a22b of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           arr1#_a1KRD [Occ=Once] ->
                 case y_a22c of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           arr2#_a1KRE [Occ=Once] ->
                 case sameMutableArray# @ s_a1LMg @ e_a1LMi arr1#_a1KRD arr2#_a1KRE
                 of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }}]
GHC.Arr.$fEqSTArray_$c/=
  = \ (@ s_a1LMg)
      (@ i_a1LMh)
      (@ e_a1LMi)
      (eta_B2 :: STArray s_a1LMg i_a1LMh e_a1LMi)
      (eta1_B1 :: STArray s_a1LMg i_a1LMh e_a1LMi) ->
      case eta_B2 of { STArray ds_d1Mik ds1_d1Mil dt_d1Mui arr1#_a1KRD ->
      case eta1_B1 of
      { STArray ds2_d1Min ds3_d1Mio dt1_d1Muj arr2#_a1KRE ->
      case sameMutableArray# @ s_a1LMg @ e_a1LMi arr1#_a1KRD arr2#_a1KRE
      of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 15, types: 37, coercions: 0, joins: 0/0}
GHC.Arr.$fEqSTArray_$c==
  :: forall s i e. STArray s i e -> STArray s i e -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)><S(LLLS),1*U(A,A,A,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ s_a1LMg)
                 (@ i_a1LMh)
                 (@ e_a1LMi)
                 (ds_d1Mi1 [Occ=Once!] :: STArray s_a1LMg i_a1LMh e_a1LMi)
                 (ds1_d1Mi2 [Occ=Once!] :: STArray s_a1LMg i_a1LMh e_a1LMi) ->
                 case ds_d1Mi1 of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           arr1#_a1KRD [Occ=Once] ->
                 case ds1_d1Mi2 of
                 { STArray _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                           arr2#_a1KRE [Occ=Once] ->
                 tagToEnum#
                   @ Bool
                   (sameMutableArray# @ s_a1LMg @ e_a1LMi arr1#_a1KRD arr2#_a1KRE)
                 }
                 }}]
GHC.Arr.$fEqSTArray_$c==
  = \ (@ s_a1LMg)
      (@ i_a1LMh)
      (@ e_a1LMi)
      (ds_d1Mi1 :: STArray s_a1LMg i_a1LMh e_a1LMi)
      (ds1_d1Mi2 :: STArray s_a1LMg i_a1LMh e_a1LMi) ->
      case ds_d1Mi1 of
      { STArray ds2_d1Mik ds3_d1Mil dt_d1Mui arr1#_a1KRD ->
      case ds1_d1Mi2 of
      { STArray ds4_d1Min ds5_d1Mio dt1_d1Muj arr2#_a1KRE ->
      tagToEnum#
        @ Bool
        (sameMutableArray# @ s_a1LMg @ e_a1LMi arr1#_a1KRD arr2#_a1KRE)
      }
      }

-- RHS size: {terms: 6, types: 16, coercions: 0, joins: 0/0}
GHC.Arr.$fEqSTArray [InlPrag=NOUSERINLINE CONLIKE]
  :: forall s i e. Eq (STArray s i e)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ s_a1KRA) (@ i_a1KRB) (@ e_a1KRC) ->
       GHC.Classes.C:Eq TYPE: STArray s_a1KRA i_a1KRB e_a1KRC
                        GHC.Arr.$fEqSTArray_$c== @ s_a1KRA @ i_a1KRB @ e_a1KRC
                        GHC.Arr.$fEqSTArray_$c/= @ s_a1KRA @ i_a1KRB @ e_a1KRC]
GHC.Arr.$fEqSTArray
  = \ (@ s_a1LMg) (@ i_a1LMh) (@ e_a1LMi) ->
      GHC.Classes.C:Eq
        @ (STArray s_a1LMg i_a1LMh e_a1LMi)
        (GHC.Arr.$fEqSTArray_$c== @ s_a1LMg @ i_a1LMh @ e_a1LMi)
        (GHC.Arr.$fEqSTArray_$c/= @ s_a1LMg @ i_a1LMh @ e_a1LMi)

-- RHS size: {terms: 119, types: 316, coercions: 0, joins: 0/5}
GHC.Arr.$w$cp1Ix1 [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     (# Eq (a1, a2, a3, a4, a5),
        (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) -> Ordering,
        (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) -> Bool,
        (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) -> Bool,
        (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) -> Bool,
        (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) -> Bool,
        (a1, a2, a3, a4, a5)
        -> (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5),
        (a1, a2, a3, a4, a5)
        -> (a1, a2, a3, a4, a5) -> (a1, a2, a3, a4, a5) #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>,
 Unf=OtherCon []]
GHC.Arr.$w$cp1Ix1
  = \ (@ a1_s1Tln)
      (@ a2_s1Tlo)
      (@ a3_s1Tlp)
      (@ a4_s1Tlq)
      (@ a5_s1Tlr)
      (w_s1Tls :: Ix a1_s1Tln)
      (w1_s1Tlt :: Ix a2_s1Tlo)
      (w2_s1Tlu :: Ix a3_s1Tlp)
      (w3_s1Tlv :: Ix a4_s1Tlq)
      (w4_s1Tlw :: Ix a5_s1Tlr) ->
      let {
        lvl50_s1VRu [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)>]
          :: Ord a5_s1Tlr
        [LclId]
        lvl50_s1VRu = GHC.Arr.$p1Ix @ a5_s1Tlr w4_s1Tlw } in
      let {
        lvl51_s1VRt [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a4_s1Tlq
        [LclId]
        lvl51_s1VRt = GHC.Arr.$p1Ix @ a4_s1Tlq w3_s1Tlv } in
      let {
        lvl52_s1VRs [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a3_s1Tlp
        [LclId]
        lvl52_s1VRs = GHC.Arr.$p1Ix @ a3_s1Tlp w2_s1Tlu } in
      let {
        lvl53_s1VRr [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a2_s1Tlo
        [LclId]
        lvl53_s1VRr = GHC.Arr.$p1Ix @ a2_s1Tlo w1_s1Tlt } in
      let {
        lvl54_s1VRq [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a1_s1Tln
        [LclId]
        lvl54_s1VRq = GHC.Arr.$p1Ix @ a1_s1Tln w_s1Tls } in
      (# case GHC.Classes.$w$cp1Ord1
                @ a1_s1Tln
                @ a2_s1Tlo
                @ a3_s1Tlp
                @ a4_s1Tlq
                @ a5_s1Tlr
                lvl54_s1VRq
                lvl53_s1VRr
                lvl52_s1VRs
                lvl51_s1VRt
                lvl50_s1VRu
         of
         { (# ww1_a1TRz, ww2_a1TRA #) ->
         GHC.Classes.C:Eq
           @ (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)
           ww1_a1TRz
           ww2_a1TRA
         },
         GHC.Classes.$fOrd(,,,,)_$ccompare
           @ a1_s1Tln
           @ a2_s1Tlo
           @ a3_s1Tlp
           @ a4_s1Tlq
           @ a5_s1Tlr
           lvl54_s1VRq
           lvl53_s1VRr
           lvl52_s1VRs
           lvl51_s1VRt
           lvl50_s1VRu,
         GHC.Classes.$fOrd(,,,,)_$c<
           @ a1_s1Tln
           @ a2_s1Tlo
           @ a3_s1Tlp
           @ a4_s1Tlq
           @ a5_s1Tlr
           lvl54_s1VRq
           lvl53_s1VRr
           lvl52_s1VRs
           lvl51_s1VRt
           lvl50_s1VRu,
         \ (a7_a1TTk :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr))
           (b1_a1TTl :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)) ->
           case GHC.Classes.$fOrd(,,,,)_$c<
                  @ a1_s1Tln
                  @ a2_s1Tlo
                  @ a3_s1Tlp
                  @ a4_s1Tlq
                  @ a5_s1Tlr
                  lvl54_s1VRq
                  lvl53_s1VRr
                  lvl52_s1VRs
                  lvl51_s1VRt
                  lvl50_s1VRu
                  b1_a1TTl
                  a7_a1TTk
           of {
             False -> GHC.Types.True;
             True -> GHC.Types.False
           },
         \ (a7_a1MvN :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr))
           (b1_a1MvO :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)) ->
           GHC.Classes.$fOrd(,,,,)_$c<
             @ a1_s1Tln
             @ a2_s1Tlo
             @ a3_s1Tlp
             @ a4_s1Tlq
             @ a5_s1Tlr
             lvl54_s1VRq
             lvl53_s1VRr
             lvl52_s1VRs
             lvl51_s1VRt
             lvl50_s1VRu
             b1_a1MvO
             a7_a1MvN,
         \ (a7_a1TTz :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr))
           (b1_a1TTA :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)) ->
           case GHC.Classes.$fOrd(,,,,)_$c<
                  @ a1_s1Tln
                  @ a2_s1Tlo
                  @ a3_s1Tlp
                  @ a4_s1Tlq
                  @ a5_s1Tlr
                  lvl54_s1VRq
                  lvl53_s1VRr
                  lvl52_s1VRs
                  lvl51_s1VRt
                  lvl50_s1VRu
                  a7_a1TTz
                  b1_a1TTA
           of {
             False -> GHC.Types.True;
             True -> GHC.Types.False
           },
         \ (x_a1TTO :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr))
           (y_a1TTP :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)) ->
           case GHC.Classes.$fOrd(,,,,)_$c<
                  @ a1_s1Tln
                  @ a2_s1Tlo
                  @ a3_s1Tlp
                  @ a4_s1Tlq
                  @ a5_s1Tlr
                  lvl54_s1VRq
                  lvl53_s1VRr
                  lvl52_s1VRs
                  lvl51_s1VRt
                  lvl50_s1VRu
                  y_a1TTP
                  x_a1TTO
           of {
             False -> y_a1TTP;
             True -> x_a1TTO
           },
         \ (x_a1TU5 :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr))
           (y_a1TU6 :: (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)) ->
           case GHC.Classes.$fOrd(,,,,)_$c<
                  @ a1_s1Tln
                  @ a2_s1Tlo
                  @ a3_s1Tlp
                  @ a4_s1Tlq
                  @ a5_s1Tlr
                  lvl54_s1VRq
                  lvl53_s1VRr
                  lvl52_s1VRs
                  lvl51_s1VRt
                  lvl50_s1VRu
                  y_a1TU6
                  x_a1TU5
           of {
             False -> x_a1TU5;
             True -> y_a1TU6
           } #)

-- RHS size: {terms: 27, types: 256, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$cp1Ix [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     Ord (a1, a2, a3, a4, a5)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_s1Tln)
                 (@ a2_s1Tlo)
                 (@ a3_s1Tlp)
                 (@ a4_s1Tlq)
                 (@ a5_s1Tlr)
                 (w_s1Tls [Occ=Once] :: Ix a1_s1Tln)
                 (w1_s1Tlt [Occ=Once] :: Ix a2_s1Tlo)
                 (w2_s1Tlu [Occ=Once] :: Ix a3_s1Tlp)
                 (w3_s1Tlv [Occ=Once] :: Ix a4_s1Tlq)
                 (w4_s1Tlw [Occ=Once] :: Ix a5_s1Tlr) ->
                 case GHC.Arr.$w$cp1Ix1
                        @ a1_s1Tln
                        @ a2_s1Tlo
                        @ a3_s1Tlp
                        @ a4_s1Tlq
                        @ a5_s1Tlr
                        w_s1Tls
                        w1_s1Tlt
                        w2_s1Tlu
                        w3_s1Tlv
                        w4_s1Tlw
                 of
                 { (# ww1_s1TBe [Occ=Once], ww2_s1TBf [Occ=Once],
                      ww3_s1TBg [Occ=Once], ww4_s1TBh [Occ=Once], ww5_s1TBi [Occ=Once],
                      ww6_s1TBj [Occ=Once], ww7_s1TBk [Occ=Once],
                      ww8_s1TBl [Occ=Once] #) ->
                 GHC.Classes.C:Ord
                   @ (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)
                   ww1_s1TBe
                   ww2_s1TBf
                   ww3_s1TBg
                   ww4_s1TBh
                   ww5_s1TBi
                   ww6_s1TBj
                   ww7_s1TBk
                   ww8_s1TBl
                 }}]
GHC.Arr.$fIx(,,,,)_$cp1Ix
  = \ (@ a1_s1Tln)
      (@ a2_s1Tlo)
      (@ a3_s1Tlp)
      (@ a4_s1Tlq)
      (@ a5_s1Tlr)
      (w_s1Tls :: Ix a1_s1Tln)
      (w1_s1Tlt :: Ix a2_s1Tlo)
      (w2_s1Tlu :: Ix a3_s1Tlp)
      (w3_s1Tlv :: Ix a4_s1Tlq)
      (w4_s1Tlw :: Ix a5_s1Tlr) ->
      case GHC.Arr.$w$cp1Ix1
             @ a1_s1Tln
             @ a2_s1Tlo
             @ a3_s1Tlp
             @ a4_s1Tlq
             @ a5_s1Tlr
             w_s1Tls
             w1_s1Tlt
             w2_s1Tlu
             w3_s1Tlv
             w4_s1Tlw
      of
      { (# ww1_s1TBe, ww2_s1TBf, ww3_s1TBg, ww4_s1TBh, ww5_s1TBi,
           ww6_s1TBj, ww7_s1TBk, ww8_s1TBl #) ->
      GHC.Classes.C:Ord
        @ (a1_s1Tln, a2_s1Tlo, a3_s1Tlp, a4_s1Tlq, a5_s1Tlr)
        ww1_s1TBe
        ww2_s1TBf
        ww3_s1TBg
        ww4_s1TBh
        ww5_s1TBi
        ww6_s1TBj
        ww7_s1TBk
        ww8_s1TBl
      }

-- RHS size: {terms: 114, types: 228, coercions: 0, joins: 0/13}
GHC.Arr.$fIx(,,,,)_$crange
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5))
     -> [(a1, a2, a3, a4, a5)]
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><S(SS),1*U(1*U(U,U,U,U,U),1*U(U,U,U,U,U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 30 30 20] 730 0}]
GHC.Arr.$fIx(,,,,)_$crange
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (ds_d1MiT
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR))) ->
      case ds_d1MiT of { (ds1_d1Mkr, ds2_d1Mks) ->
      case ds1_d1Mkr of
      { (l1_a1KRK, l2_a1KRL, l3_a1KRM, l4_a1KRN, l5_a1KRO) ->
      case ds2_d1Mks of
      { (u1_a1KRP, u2_a1KRQ, u3_a1KRR, u4_a1KRS, u5_a1KRT) ->
      let {
        lvl50_s1Nyg :: [a5_a1LOR]
        [LclId]
        lvl50_s1Nyg
          = range @ a5_a1LOR $dIx4_a1LOW (l5_a1KRO, u5_a1KRT) } in
      let {
        lvl51_s1Nyh :: [a4_a1LOQ]
        [LclId]
        lvl51_s1Nyh
          = range @ a4_a1LOQ $dIx3_a1LOV (l4_a1KRN, u4_a1KRS) } in
      let {
        lvl52_s1Nyi :: [a3_a1LOP]
        [LclId]
        lvl52_s1Nyi
          = range @ a3_a1LOP $dIx2_a1LOU (l3_a1KRM, u3_a1KRR) } in
      let {
        lvl53_s1Nyj :: [a2_a1LOO]
        [LclId]
        lvl53_s1Nyj
          = range @ a2_a1LOO $dIx1_a1LOT (l2_a1KRL, u2_a1KRQ) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker]
          :: [a1_a1LON]
             -> [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds3_i1y1c :: [a1_a1LON]) ->
              case ds3_i1y1c of {
                [] ->
                  GHC.Types.[] @ (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR);
                : y_i1y1h ys_i1y1i ->
                  let {
                    z_X1yaN :: [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)]
                    [LclId]
                    z_X1yaN = go_i1y1b ys_i1y1i } in
                  letrec {
                    go1_X1yaQ [Occ=LoopBreaker]
                      :: [a2_a1LOO]
                         -> [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)]
                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                    go1_X1yaQ
                      = \ (ds4_X1yaS :: [a2_a1LOO]) ->
                          case ds4_X1yaS of {
                            [] -> z_X1yaN;
                            : y1_X1yb0 ys1_X1yb2 ->
                              let {
                                z1_X1yaY :: [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)]
                                [LclId]
                                z1_X1yaY = go1_X1yaQ ys1_X1yb2 } in
                              letrec {
                                go2_X1yb1 [Occ=LoopBreaker]
                                  :: [a3_a1LOP]
                                     -> [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)]
                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                go2_X1yb1
                                  = \ (ds5_X1yb3 :: [a3_a1LOP]) ->
                                      case ds5_X1yb3 of {
                                        [] -> z1_X1yaY;
                                        : y2_X1ybb ys2_X1ybd ->
                                          let {
                                            z2_X1yb9
                                              :: [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ,
                                                   a5_a1LOR)]
                                            [LclId]
                                            z2_X1yb9 = go2_X1yb1 ys2_X1ybd } in
                                          letrec {
                                            go3_X1ybc [Occ=LoopBreaker]
                                              :: [a4_a1LOQ]
                                                 -> [(a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ,
                                                      a5_a1LOR)]
                                            [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                            go3_X1ybc
                                              = \ (ds6_X1ybe :: [a4_a1LOQ]) ->
                                                  case ds6_X1ybe of {
                                                    [] -> z2_X1yb9;
                                                    : y3_X1ybm ys3_X1ybo ->
                                                      let {
                                                        z3_X1ybk
                                                          :: [(a1_a1LON, a2_a1LOO, a3_a1LOP,
                                                               a4_a1LOQ, a5_a1LOR)]
                                                        [LclId]
                                                        z3_X1ybk = go3_X1ybc ys3_X1ybo } in
                                                      letrec {
                                                        go4_X1ybn [Occ=LoopBreaker]
                                                          :: [a5_a1LOR]
                                                             -> [(a1_a1LON, a2_a1LOO, a3_a1LOP,
                                                                  a4_a1LOQ, a5_a1LOR)]
                                                        [LclId,
                                                         Arity=1,
                                                         Str=<S,1*U>,
                                                         Unf=OtherCon []]
                                                        go4_X1ybn
                                                          = \ (ds7_X1ybp :: [a5_a1LOR]) ->
                                                              case ds7_X1ybp of {
                                                                [] -> z3_X1ybk;
                                                                : y4_X1ybx ys4_X1ybz ->
                                                                  GHC.Types.:
                                                                    @ (a1_a1LON, a2_a1LOO, a3_a1LOP,
                                                                       a4_a1LOQ, a5_a1LOR)
                                                                    (y_i1y1h, y1_X1yb0, y2_X1ybb,
                                                                     y3_X1ybm, y4_X1ybx)
                                                                    (go4_X1ybn ys4_X1ybz)
                                                              }; } in
                                                      go4_X1ybn lvl50_s1Nyg
                                                  }; } in
                                          go3_X1ybc lvl51_s1Nyh
                                      }; } in
                              go2_X1yb1 lvl52_s1Nyi
                          }; } in
                  go1_X1yaQ lvl53_s1Nyj
              }; } in
      go_i1y1b (range @ a1_a1LON $dIx_a1LOS (l1_a1KRK, u1_a1KRP))
      }
      }
      }

-- RHS size: {terms: 110, types: 142, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$cunsafeIndex
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5))
     -> (a1, a2, a3, a4, a5) -> Int
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(SS),1*U(1*U(U,U,U,U,U),1*U(U,U,U,U,U))><S,1*U(U,U,U,U,U)>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 60 60 60 60 20 20] 558 20}]
GHC.Arr.$fIx(,,,,)_$cunsafeIndex
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (ds_d1Mkt
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)))
      (ds1_d1Mku
         :: (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)) ->
      case ds_d1Mkt of { (ds2_d1Ml1, ds3_d1Ml2) ->
      case ds2_d1Ml1 of
      { (l1_a1KRZ, l2_a1KS0, l3_a1KS1, l4_a1KS2, l5_a1KS3) ->
      case ds3_d1Ml2 of
      { (u1_a1KS4, u2_a1KS5, u3_a1KS6, u4_a1KS7, u5_a1KS8) ->
      case ds1_d1Mku of
      { (i1_a1KS9, i2_a1KSa, i3_a1KSb, i4_a1KSc, i5_a1KSd) ->
      case unsafeIndex
             @ a5_a1LOR $dIx4_a1LOW (l5_a1KS3, u5_a1KS8) i5_a1KSd
      of
      { I# x_i1AMi ->
      case unsafeRangeSize @ a5_a1LOR $dIx4_a1LOW (l5_a1KS3, u5_a1KS8) of
      { I# x1_i1MAD ->
      case unsafeIndex
             @ a4_a1LOQ $dIx3_a1LOV (l4_a1KS2, u4_a1KS7) i4_a1KSc
      of
      { I# x2_X1AR4 ->
      case unsafeRangeSize @ a4_a1LOQ $dIx3_a1LOV (l4_a1KS2, u4_a1KS7) of
      { I# x3_X1MFt ->
      case unsafeIndex
             @ a3_a1LOP $dIx2_a1LOU (l3_a1KS1, u3_a1KS6) i3_a1KSb
      of
      { I# x4_X1ARc ->
      case unsafeRangeSize @ a3_a1LOP $dIx2_a1LOU (l3_a1KS1, u3_a1KS6) of
      { I# x5_X1MFB ->
      case unsafeIndex
             @ a2_a1LOO $dIx1_a1LOT (l2_a1KS0, u2_a1KS5) i2_a1KSa
      of
      { I# x6_X1ARk ->
      case unsafeRangeSize @ a2_a1LOO $dIx1_a1LOT (l2_a1KS0, u2_a1KS5) of
      { I# x7_X1MFJ ->
      case unsafeIndex
             @ a1_a1LON $dIx_a1LOS (l1_a1KRZ, u1_a1KS4) i1_a1KS9
      of
      { I# y_i1MAH ->
      GHC.Types.I#
        (+#
           x_i1AMi
           (*#
              x1_i1MAD
              (+#
                 x2_X1AR4
                 (*#
                    x3_X1MFt
                    (+# x4_X1ARc (*# x5_X1MFB (+# x6_X1ARk (*# x7_X1MFJ y_i1MAH))))))))
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 28, types: 65, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$cunsafeRangeSize
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5)) -> Int
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(SS),1*U(1*U(U,U,U,U,U),U(U,U,U,U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_a1LON)
                 (@ a2_a1LOO)
                 (@ a3_a1LOP)
                 (@ a4_a1LOQ)
                 (@ a5_a1LOR)
                 ($dIx_a1LOS [Occ=Once] :: Ix a1_a1LON)
                 ($dIx1_a1LOT [Occ=Once] :: Ix a2_a1LOO)
                 ($dIx2_a1LOU [Occ=Once] :: Ix a3_a1LOP)
                 ($dIx3_a1LOV [Occ=Once] :: Ix a4_a1LOQ)
                 ($dIx4_a1LOW [Occ=Once] :: Ix a5_a1LOR)
                 (b_a1KRo [Occ=Once!]
                    :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
                        (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR))) ->
                 case b_a1KRo of wild_X42 { (_ [Occ=Dead], h_a1KRq [Occ=Once]) ->
                 case GHC.Arr.$fIx(,,,,)_$cunsafeIndex
                        @ a1_a1LON
                        @ a2_a1LOO
                        @ a3_a1LOP
                        @ a4_a1LOQ
                        @ a5_a1LOR
                        $dIx_a1LOS
                        $dIx1_a1LOT
                        $dIx2_a1LOU
                        $dIx3_a1LOV
                        $dIx4_a1LOW
                        wild_X42
                        h_a1KRq
                 of
                 { I# x_i1AMi [Occ=Once] ->
                 GHC.Types.I# (+# x_i1AMi 1#)
                 }
                 }}]
GHC.Arr.$fIx(,,,,)_$cunsafeRangeSize
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (b_a1KRo
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR))) ->
      case b_a1KRo of wild_X42 { (_l_a1KRp, h_a1KRq) ->
      case GHC.Arr.$fIx(,,,,)_$cunsafeIndex
             @ a1_a1LON
             @ a2_a1LOO
             @ a3_a1LOP
             @ a4_a1LOQ
             @ a5_a1LOR
             $dIx_a1LOS
             $dIx1_a1LOT
             $dIx2_a1LOU
             $dIx3_a1LOV
             $dIx4_a1LOW
             wild_X42
             h_a1KRq
      of
      { I# x_i1AMi ->
      GHC.Types.I# (+# x_i1AMi 1#)
      }
      }

-- RHS size: {terms: 70, types: 116, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$cinRange
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5))
     -> (a1, a2, a3, a4, a5) -> Bool
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><S(SS),1*U(1*U(U,U,U,U,U),1*U(U,U,U,U,U))><S,1*U(U,U,U,U,U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 30 30 20 20] 370 40}]
GHC.Arr.$fIx(,,,,)_$cinRange
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (ds_d1Ml3
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)))
      (ds1_d1Ml4
         :: (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)) ->
      case ds_d1Ml3 of { (ds2_d1MlB, ds3_d1MlC) ->
      case ds2_d1MlB of
      { (l1_a1KSe, l2_a1KSf, l3_a1KSg, l4_a1KSh, l5_a1KSi) ->
      case ds3_d1MlC of
      { (u1_a1KSj, u2_a1KSk, u3_a1KSl, u4_a1KSm, u5_a1KSn) ->
      case ds1_d1Ml4 of
      { (i1_a1KSo, i2_a1KSp, i3_a1KSq, i4_a1KSr, i5_a1KSs) ->
      case inRange @ a1_a1LON $dIx_a1LOS (l1_a1KSe, u1_a1KSj) i1_a1KSo
      of {
        False -> GHC.Types.False;
        True ->
          case inRange @ a2_a1LOO $dIx1_a1LOT (l2_a1KSf, u2_a1KSk) i2_a1KSp
          of {
            False -> GHC.Types.False;
            True ->
              case inRange @ a3_a1LOP $dIx2_a1LOU (l3_a1KSg, u3_a1KSl) i3_a1KSq
              of {
                False -> GHC.Types.False;
                True ->
                  case inRange @ a4_a1LOQ $dIx3_a1LOV (l4_a1KSh, u4_a1KSm) i4_a1KSr
                  of {
                    False -> GHC.Types.False;
                    True ->
                      inRange @ a5_a1LOR $dIx4_a1LOW (l5_a1KSi, u5_a1KSn) i5_a1KSs
                  }
              }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 40, types: 71, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$crangeSize
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5)) -> Int
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(SS),1*U(U(U,U,U,U,U),U(U,U,U,U,U))>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 20] 211 20}]
GHC.Arr.$fIx(,,,,)_$crangeSize
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (b_a1KRl
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR))) ->
      case b_a1KRl of wild_X43 { (_l_a1KRm, h_a1KRn) ->
      case GHC.Arr.$fIx(,,,,)_$cinRange
             @ a1_a1LON
             @ a2_a1LOO
             @ a3_a1LOP
             @ a4_a1LOQ
             @ a5_a1LOR
             $dIx_a1LOS
             $dIx1_a1LOT
             $dIx2_a1LOU
             $dIx3_a1LOV
             $dIx4_a1LOW
             wild_X43
             h_a1KRn
      of {
        False -> GHC.Arr.$fIxInt1;
        True ->
          case GHC.Arr.$fIx(,,,,)_$cunsafeIndex
                 @ a1_a1LON
                 @ a2_a1LOO
                 @ a3_a1LOP
                 @ a4_a1LOQ
                 @ a5_a1LOR
                 $dIx_a1LOS
                 $dIx1_a1LOT
                 $dIx2_a1LOU
                 $dIx3_a1LOV
                 $dIx4_a1LOW
                 wild_X43
                 h_a1KRn
          of
          { I# x_i1AMi ->
          GHC.Types.I# (+# x_i1AMi 1#)
          }
      }
      }

-- RHS size: {terms: 32, types: 50, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,)_$cindex [InlPrag=INLINE (sat-args=2)]
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     ((a1, a2, a3, a4, a5), (a1, a2, a3, a4, a5))
     -> (a1, a2, a3, a4, a5) -> Int
[GblId,
 Arity=7,
 Str=<S(LLLC(C(S(S)))C(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(SS),U(U(U,U,U,U,U),U(U,U,U,U,U))><S,U(U,U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=7,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a1_a1LON)
                 (@ a2_a1LOO)
                 (@ a3_a1LOP)
                 (@ a4_a1LOQ)
                 (@ a5_a1LOR)
                 ($dIx_a1LOS :: Ix a1_a1LON)
                 ($dIx1_a1LOT :: Ix a2_a1LOO)
                 ($dIx2_a1LOU :: Ix a3_a1LOP)
                 ($dIx3_a1LOV :: Ix a4_a1LOQ)
                 ($dIx4_a1LOW :: Ix a5_a1LOR)
                 (b_a1KRh
                    :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
                        (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)))
                 (i_a1KRi :: (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)) ->
                 case GHC.Arr.$fIx(,,,,)_$cinRange
                        @ a1_a1LON
                        @ a2_a1LOO
                        @ a3_a1LOP
                        @ a4_a1LOQ
                        @ a5_a1LOR
                        $dIx_a1LOS
                        $dIx1_a1LOT
                        $dIx2_a1LOU
                        $dIx3_a1LOV
                        $dIx4_a1LOW
                        b_a1KRh
                        i_a1KRi
                 of {
                   False -> hopelessIndexError;
                   True ->
                     GHC.Arr.$fIx(,,,,)_$cunsafeIndex
                       @ a1_a1LON
                       @ a2_a1LOO
                       @ a3_a1LOP
                       @ a4_a1LOQ
                       @ a5_a1LOR
                       $dIx_a1LOS
                       $dIx1_a1LOT
                       $dIx2_a1LOU
                       $dIx3_a1LOV
                       $dIx4_a1LOW
                       b_a1KRh
                       i_a1KRi
                 }}]
GHC.Arr.$fIx(,,,,)_$cindex
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR)
      (eta_B2
         :: ((a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR),
             (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)))
      (eta1_B1 :: (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)) ->
      case GHC.Arr.$fIx(,,,,)_$cinRange
             @ a1_a1LON
             @ a2_a1LOO
             @ a3_a1LOP
             @ a4_a1LOQ
             @ a5_a1LOR
             $dIx_a1LOS
             $dIx1_a1LOT
             $dIx2_a1LOU
             $dIx3_a1LOV
             $dIx4_a1LOW
             eta_B2
             eta1_B1
      of {
        False -> hopelessIndexError;
        True ->
          GHC.Arr.$fIx(,,,,)_$cunsafeIndex
            @ a1_a1LON
            @ a2_a1LOO
            @ a3_a1LOP
            @ a4_a1LOQ
            @ a5_a1LOR
            $dIx_a1LOS
            $dIx1_a1LOT
            $dIx2_a1LOU
            $dIx3_a1LOV
            $dIx4_a1LOW
            eta_B2
            eta1_B1
      }

-- RHS size: {terms: 53, types: 61, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a1 a2 a3 a4 a5.
     (Ix a1, Ix a2, Ix a3, Ix a4, Ix a5) =>
     Ix (a1, a2, a3, a4, a5)
[GblId[DFunId],
 Arity=5,
 Str=<L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,A)><L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))>m,
 Unf=DFun: \ (@ a1_a1KRF)
             (@ a2_a1KRG)
             (@ a3_a1KRH)
             (@ a4_a1KRI)
             (@ a5_a1KRJ)
             (v_B1 :: Ix a1_a1KRF)
             (v1_B2 :: Ix a2_a1KRG)
             (v2_B3 :: Ix a3_a1KRH)
             (v3_B4 :: Ix a4_a1KRI)
             (v4_B5 :: Ix a5_a1KRJ) ->
       GHC.Arr.C:Ix TYPE: (a1_a1KRF, a2_a1KRG, a3_a1KRH, a4_a1KRI,
                           a5_a1KRJ)
                    GHC.Arr.$fIx(,,,,)_$cp1Ix
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$crange
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$cindex
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$cunsafeIndex
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$cinRange
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$crangeSize
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5
                    GHC.Arr.$fIx(,,,,)_$cunsafeRangeSize
                      @ a1_a1KRF
                      @ a2_a1KRG
                      @ a3_a1KRH
                      @ a4_a1KRI
                      @ a5_a1KRJ
                      v_B1
                      v1_B2
                      v2_B3
                      v3_B4
                      v4_B5]
GHC.Arr.$fIx(,,,,)
  = \ (@ a1_a1LON)
      (@ a2_a1LOO)
      (@ a3_a1LOP)
      (@ a4_a1LOQ)
      (@ a5_a1LOR)
      ($dIx_a1LOS :: Ix a1_a1LON)
      ($dIx1_a1LOT :: Ix a2_a1LOO)
      ($dIx2_a1LOU :: Ix a3_a1LOP)
      ($dIx3_a1LOV :: Ix a4_a1LOQ)
      ($dIx4_a1LOW :: Ix a5_a1LOR) ->
      GHC.Arr.C:Ix
        @ (a1_a1LON, a2_a1LOO, a3_a1LOP, a4_a1LOQ, a5_a1LOR)
        (GHC.Arr.$fIx(,,,,)_$cp1Ix
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$crange
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$cindex
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$cunsafeIndex
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$cinRange
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$crangeSize
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)
        (GHC.Arr.$fIx(,,,,)_$cunsafeRangeSize
           @ a1_a1LON
           @ a2_a1LOO
           @ a3_a1LOP
           @ a4_a1LOQ
           @ a5_a1LOR
           $dIx_a1LOS
           $dIx1_a1LOT
           $dIx2_a1LOU
           $dIx3_a1LOV
           $dIx4_a1LOW)

-- RHS size: {terms: 106, types: 265, coercions: 0, joins: 0/4}
GHC.Arr.$w$cp1Ix [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     (# Eq (a1, a2, a3, a4),
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> Ordering,
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> Bool,
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> Bool,
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> Bool,
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> Bool,
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> (a1, a2, a3, a4),
        (a1, a2, a3, a4) -> (a1, a2, a3, a4) -> (a1, a2, a3, a4) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 30] 820 90}]
GHC.Arr.$w$cp1Ix
  = \ (@ a1_s1To8)
      (@ a2_s1To9)
      (@ a3_s1Toa)
      (@ a4_s1Tob)
      (w_s1Toc :: Ix a1_s1To8)
      (w1_s1Tod :: Ix a2_s1To9)
      (w2_s1Toe :: Ix a3_s1Toa)
      (w3_s1Tof :: Ix a4_s1Tob) ->
      let {
        lvl50_s1VRy [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)>]
          :: Ord a4_s1Tob
        [LclId]
        lvl50_s1VRy = GHC.Arr.$p1Ix @ a4_s1Tob w3_s1Tof } in
      let {
        lvl51_s1VRx [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a3_s1Toa
        [LclId]
        lvl51_s1VRx = GHC.Arr.$p1Ix @ a3_s1Toa w2_s1Toe } in
      let {
        lvl52_s1VRw [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a2_s1To9
        [LclId]
        lvl52_s1VRw = GHC.Arr.$p1Ix @ a2_s1To9 w1_s1Tod } in
      let {
        lvl53_s1VRv [Dmd=<L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>]
          :: Ord a1_s1To8
        [LclId]
        lvl53_s1VRv = GHC.Arr.$p1Ix @ a1_s1To8 w_s1Toc } in
      (# case GHC.Classes.$w$cp1Ord
                @ a1_s1To8
                @ a2_s1To9
                @ a3_s1Toa
                @ a4_s1Tob
                lvl53_s1VRv
                lvl52_s1VRw
                lvl51_s1VRx
                lvl50_s1VRy
         of
         { (# ww1_a1TVx, ww2_a1TVy #) ->
         GHC.Classes.C:Eq
           @ (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob) ww1_a1TVx ww2_a1TVy
         },
         GHC.Classes.$fOrd(,,,)_$ccompare
           @ a1_s1To8
           @ a2_s1To9
           @ a3_s1Toa
           @ a4_s1Tob
           lvl53_s1VRv
           lvl52_s1VRw
           lvl51_s1VRx
           lvl50_s1VRy,
         GHC.Classes.$fOrd(,,,)_$c<
           @ a1_s1To8
           @ a2_s1To9
           @ a3_s1Toa
           @ a4_s1Tob
           lvl53_s1VRv
           lvl52_s1VRw
           lvl51_s1VRx
           lvl50_s1VRy,
         \ (a7_a1TWY :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob))
           (b1_a1TWZ :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)) ->
           case GHC.Classes.$fOrd(,,,)_$c<
                  @ a1_s1To8
                  @ a2_s1To9
                  @ a3_s1Toa
                  @ a4_s1Tob
                  lvl53_s1VRv
                  lvl52_s1VRw
                  lvl51_s1VRx
                  lvl50_s1VRy
                  b1_a1TWZ
                  a7_a1TWY
           of {
             False -> GHC.Types.True;
             True -> GHC.Types.False
           },
         \ (a7_a1Mv8 :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob))
           (b1_a1Mv9 :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)) ->
           GHC.Classes.$fOrd(,,,)_$c<
             @ a1_s1To8
             @ a2_s1To9
             @ a3_s1Toa
             @ a4_s1Tob
             lvl53_s1VRv
             lvl52_s1VRw
             lvl51_s1VRx
             lvl50_s1VRy
             b1_a1Mv9
             a7_a1Mv8,
         \ (a7_a1TXb :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob))
           (b1_a1TXc :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)) ->
           case GHC.Classes.$fOrd(,,,)_$c<
                  @ a1_s1To8
                  @ a2_s1To9
                  @ a3_s1Toa
                  @ a4_s1Tob
                  lvl53_s1VRv
                  lvl52_s1VRw
                  lvl51_s1VRx
                  lvl50_s1VRy
                  a7_a1TXb
                  b1_a1TXc
           of {
             False -> GHC.Types.True;
             True -> GHC.Types.False
           },
         \ (x_a1TXo :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob))
           (y_a1TXp :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)) ->
           case GHC.Classes.$fOrd(,,,)_$c<
                  @ a1_s1To8
                  @ a2_s1To9
                  @ a3_s1Toa
                  @ a4_s1Tob
                  lvl53_s1VRv
                  lvl52_s1VRw
                  lvl51_s1VRx
                  lvl50_s1VRy
                  y_a1TXp
                  x_a1TXo
           of {
             False -> y_a1TXp;
             True -> x_a1TXo
           },
         \ (x_a1TXD :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob))
           (y_a1TXE :: (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)) ->
           case GHC.Classes.$fOrd(,,,)_$c<
                  @ a1_s1To8
                  @ a2_s1To9
                  @ a3_s1Toa
                  @ a4_s1Tob
                  lvl53_s1VRv
                  lvl52_s1VRw
                  lvl51_s1VRx
                  lvl50_s1VRy
                  y_a1TXE
                  x_a1TXD
           of {
             False -> x_a1TXD;
             True -> y_a1TXE
           } #)

-- RHS size: {terms: 24, types: 216, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$cp1Ix [InlPrag=NOUSERINLINE[0]]
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     Ord (a1, a2, a3, a4)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_s1To8)
                 (@ a2_s1To9)
                 (@ a3_s1Toa)
                 (@ a4_s1Tob)
                 (w_s1Toc [Occ=Once] :: Ix a1_s1To8)
                 (w1_s1Tod [Occ=Once] :: Ix a2_s1To9)
                 (w2_s1Toe [Occ=Once] :: Ix a3_s1Toa)
                 (w3_s1Tof [Occ=Once] :: Ix a4_s1Tob) ->
                 case GHC.Arr.$w$cp1Ix
                        @ a1_s1To8
                        @ a2_s1To9
                        @ a3_s1Toa
                        @ a4_s1Tob
                        w_s1Toc
                        w1_s1Tod
                        w2_s1Toe
                        w3_s1Tof
                 of
                 { (# ww1_s1TBn [Occ=Once], ww2_s1TBo [Occ=Once],
                      ww3_s1TBp [Occ=Once], ww4_s1TBq [Occ=Once], ww5_s1TBr [Occ=Once],
                      ww6_s1TBs [Occ=Once], ww7_s1TBt [Occ=Once],
                      ww8_s1TBu [Occ=Once] #) ->
                 GHC.Classes.C:Ord
                   @ (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)
                   ww1_s1TBn
                   ww2_s1TBo
                   ww3_s1TBp
                   ww4_s1TBq
                   ww5_s1TBr
                   ww6_s1TBs
                   ww7_s1TBt
                   ww8_s1TBu
                 }}]
GHC.Arr.$fIx(,,,)_$cp1Ix
  = \ (@ a1_s1To8)
      (@ a2_s1To9)
      (@ a3_s1Toa)
      (@ a4_s1Tob)
      (w_s1Toc :: Ix a1_s1To8)
      (w1_s1Tod :: Ix a2_s1To9)
      (w2_s1Toe :: Ix a3_s1Toa)
      (w3_s1Tof :: Ix a4_s1Tob) ->
      case GHC.Arr.$w$cp1Ix
             @ a1_s1To8
             @ a2_s1To9
             @ a3_s1Toa
             @ a4_s1Tob
             w_s1Toc
             w1_s1Tod
             w2_s1Toe
             w3_s1Tof
      of
      { (# ww1_s1TBn, ww2_s1TBo, ww3_s1TBp, ww4_s1TBq, ww5_s1TBr,
           ww6_s1TBs, ww7_s1TBt, ww8_s1TBu #) ->
      GHC.Classes.C:Ord
        @ (a1_s1To8, a2_s1To9, a3_s1Toa, a4_s1Tob)
        ww1_s1TBn
        ww2_s1TBo
        ww3_s1TBp
        ww4_s1TBq
        ww5_s1TBr
        ww6_s1TBs
        ww7_s1TBt
        ww8_s1TBu
      }

-- RHS size: {terms: 93, types: 176, coercions: 0, joins: 0/10}
GHC.Arr.$fIx(,,,)_$crange
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> [(a1, a2, a3, a4)]
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><S(SS),1*U(1*U(U,U,U,U),1*U(U,U,U,U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 30 20] 590 0}]
GHC.Arr.$fIx(,,,)_$crange
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (ds_d1MlD
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu))) ->
      case ds_d1MlD of { (ds1_d1MmM, ds2_d1MmN) ->
      case ds1_d1MmM of { (l1_a1KSx, l2_a1KSy, l3_a1KSz, l4_a1KSA) ->
      case ds2_d1MmN of { (u1_a1KSB, u2_a1KSC, u3_a1KSD, u4_a1KSE) ->
      let {
        lvl50_s1Nyd :: [a4_a1LQu]
        [LclId]
        lvl50_s1Nyd
          = range @ a4_a1LQu $dIx3_a1LQy (l4_a1KSA, u4_a1KSE) } in
      let {
        lvl51_s1Nye :: [a3_a1LQt]
        [LclId]
        lvl51_s1Nye
          = range @ a3_a1LQt $dIx2_a1LQx (l3_a1KSz, u3_a1KSD) } in
      let {
        lvl52_s1Nyf :: [a2_a1LQs]
        [LclId]
        lvl52_s1Nyf
          = range @ a2_a1LQs $dIx1_a1LQw (l2_a1KSy, u2_a1KSC) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker]
          :: [a1_a1LQr] -> [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds3_i1y1c :: [a1_a1LQr]) ->
              case ds3_i1y1c of {
                [] -> GHC.Types.[] @ (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu);
                : y_i1y1h ys_i1y1i ->
                  let {
                    z_X1yaP :: [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                    [LclId]
                    z_X1yaP = go_i1y1b ys_i1y1i } in
                  letrec {
                    go1_X1yaS [Occ=LoopBreaker]
                      :: [a2_a1LQs] -> [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                    go1_X1yaS
                      = \ (ds4_X1yaU :: [a2_a1LQs]) ->
                          case ds4_X1yaU of {
                            [] -> z_X1yaP;
                            : y1_X1yb2 ys1_X1yb4 ->
                              let {
                                z1_X1yb0 :: [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                                [LclId]
                                z1_X1yb0 = go1_X1yaS ys1_X1yb4 } in
                              letrec {
                                go2_X1yb3 [Occ=LoopBreaker]
                                  :: [a3_a1LQt] -> [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                go2_X1yb3
                                  = \ (ds5_X1yb5 :: [a3_a1LQt]) ->
                                      case ds5_X1yb5 of {
                                        [] -> z1_X1yb0;
                                        : y2_X1ybd ys2_X1ybf ->
                                          let {
                                            z2_X1ybb :: [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                                            [LclId]
                                            z2_X1ybb = go2_X1yb3 ys2_X1ybf } in
                                          letrec {
                                            go3_X1ybe [Occ=LoopBreaker]
                                              :: [a4_a1LQu]
                                                 -> [(a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)]
                                            [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                            go3_X1ybe
                                              = \ (ds6_X1ybg :: [a4_a1LQu]) ->
                                                  case ds6_X1ybg of {
                                                    [] -> z2_X1ybb;
                                                    : y3_X1ybo ys3_X1ybq ->
                                                      GHC.Types.:
                                                        @ (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)
                                                        (y_i1y1h, y1_X1yb2, y2_X1ybd, y3_X1ybo)
                                                        (go3_X1ybe ys3_X1ybq)
                                                  }; } in
                                          go3_X1ybe lvl50_s1Nyd
                                      }; } in
                              go2_X1yb3 lvl51_s1Nye
                          }; } in
                  go1_X1yaS lvl52_s1Nyf
              }; } in
      go_i1y1b (range @ a1_a1LQr $dIx_a1LQv (l1_a1KSx, u1_a1KSB))
      }
      }
      }

-- RHS size: {terms: 89, types: 115, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$cunsafeIndex
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> (a1, a2, a3, a4) -> Int
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(SS),1*U(1*U(U,U,U,U),1*U(U,U,U,U))><S,1*U(U,U,U,U)>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 60 60 60 20 20] 446 20}]
GHC.Arr.$fIx(,,,)_$cunsafeIndex
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (ds_d1MmO
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)))
      (ds1_d1MmP :: (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)) ->
      case ds_d1MmO of { (ds2_d1Mnh, ds3_d1Mni) ->
      case ds2_d1Mnh of { (l1_a1KSJ, l2_a1KSK, l3_a1KSL, l4_a1KSM) ->
      case ds3_d1Mni of { (u1_a1KSN, u2_a1KSO, u3_a1KSP, u4_a1KSQ) ->
      case ds1_d1MmP of { (i1_a1KSR, i2_a1KSS, i3_a1KST, i4_a1KSU) ->
      case unsafeIndex
             @ a4_a1LQu $dIx3_a1LQy (l4_a1KSM, u4_a1KSQ) i4_a1KSU
      of
      { I# x_i1AMi ->
      case unsafeRangeSize @ a4_a1LQu $dIx3_a1LQy (l4_a1KSM, u4_a1KSQ) of
      { I# x1_i1MAD ->
      case unsafeIndex
             @ a3_a1LQt $dIx2_a1LQx (l3_a1KSL, u3_a1KSP) i3_a1KST
      of
      { I# x2_X1AQV ->
      case unsafeRangeSize @ a3_a1LQt $dIx2_a1LQx (l3_a1KSL, u3_a1KSP) of
      { I# x3_X1MFk ->
      case unsafeIndex
             @ a2_a1LQs $dIx1_a1LQw (l2_a1KSK, u2_a1KSO) i2_a1KSS
      of
      { I# x4_X1AR3 ->
      case unsafeRangeSize @ a2_a1LQs $dIx1_a1LQw (l2_a1KSK, u2_a1KSO) of
      { I# x5_X1MFs ->
      case unsafeIndex
             @ a1_a1LQr $dIx_a1LQv (l1_a1KSJ, u1_a1KSN) i1_a1KSR
      of
      { I# y_i1MAH ->
      GHC.Types.I#
        (+#
           x_i1AMi
           (*#
              x1_i1MAD
              (+# x2_X1AQV (*# x3_X1MFk (+# x4_X1AR3 (*# x5_X1MFs y_i1MAH))))))
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 25, types: 54, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$cunsafeRangeSize
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),A,A,C(U(U)))><S(SS),1*U(1*U(U,U,U,U),U(U,U,U,U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_a1LQr)
                 (@ a2_a1LQs)
                 (@ a3_a1LQt)
                 (@ a4_a1LQu)
                 ($dIx_a1LQv [Occ=Once] :: Ix a1_a1LQr)
                 ($dIx1_a1LQw [Occ=Once] :: Ix a2_a1LQs)
                 ($dIx2_a1LQx [Occ=Once] :: Ix a3_a1LQt)
                 ($dIx3_a1LQy [Occ=Once] :: Ix a4_a1LQu)
                 (b_a1KRo [Occ=Once!]
                    :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
                        (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu))) ->
                 case b_a1KRo of wild_X42 { (_ [Occ=Dead], h_a1KRq [Occ=Once]) ->
                 case GHC.Arr.$fIx(,,,)_$cunsafeIndex
                        @ a1_a1LQr
                        @ a2_a1LQs
                        @ a3_a1LQt
                        @ a4_a1LQu
                        $dIx_a1LQv
                        $dIx1_a1LQw
                        $dIx2_a1LQx
                        $dIx3_a1LQy
                        wild_X42
                        h_a1KRq
                 of
                 { I# x_i1AMi [Occ=Once] ->
                 GHC.Types.I# (+# x_i1AMi 1#)
                 }
                 }}]
GHC.Arr.$fIx(,,,)_$cunsafeRangeSize
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (b_a1KRo
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu))) ->
      case b_a1KRo of wild_X42 { (_l_a1KRp, h_a1KRq) ->
      case GHC.Arr.$fIx(,,,)_$cunsafeIndex
             @ a1_a1LQr
             @ a2_a1LQs
             @ a3_a1LQt
             @ a4_a1LQu
             $dIx_a1LQv
             $dIx1_a1LQw
             $dIx2_a1LQx
             $dIx3_a1LQy
             wild_X42
             h_a1KRq
      of
      { I# x_i1AMi ->
      GHC.Types.I# (+# x_i1AMi 1#)
      }
      }

-- RHS size: {terms: 58, types: 95, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$cinRange
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> (a1, a2, a3, a4) -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><S(SS),1*U(1*U(U,U,U,U),1*U(U,U,U,U))><S,1*U(U,U,U,U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 30 30 30 20 20] 300 30}]
GHC.Arr.$fIx(,,,)_$cinRange
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (ds_d1Mnj
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)))
      (ds1_d1Mnk :: (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)) ->
      case ds_d1Mnj of { (ds2_d1MnM, ds3_d1MnN) ->
      case ds2_d1MnM of { (l1_a1KSV, l2_a1KSW, l3_a1KSX, l4_a1KSY) ->
      case ds3_d1MnN of { (u1_a1KSZ, u2_a1KT0, u3_a1KT1, u4_a1KT2) ->
      case ds1_d1Mnk of { (i1_a1KT3, i2_a1KT4, i3_a1KT5, i4_a1KT6) ->
      case inRange @ a1_a1LQr $dIx_a1LQv (l1_a1KSV, u1_a1KSZ) i1_a1KT3
      of {
        False -> GHC.Types.False;
        True ->
          case inRange @ a2_a1LQs $dIx1_a1LQw (l2_a1KSW, u2_a1KT0) i2_a1KT4
          of {
            False -> GHC.Types.False;
            True ->
              case inRange @ a3_a1LQt $dIx2_a1LQx (l3_a1KSX, u3_a1KT1) i3_a1KT5
              of {
                False -> GHC.Types.False;
                True ->
                  inRange @ a4_a1LQu $dIx3_a1LQy (l4_a1KSY, u4_a1KT2) i4_a1KT6
              }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 36, types: 59, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$crangeSize
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><L,U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(SS),1*U(U(U,U,U,U),U(U,U,U,U))>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 20] 191 20}]
GHC.Arr.$fIx(,,,)_$crangeSize
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (b_a1KRl
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu))) ->
      case b_a1KRl of wild_X43 { (_l_a1KRm, h_a1KRn) ->
      case GHC.Arr.$fIx(,,,)_$cinRange
             @ a1_a1LQr
             @ a2_a1LQs
             @ a3_a1LQt
             @ a4_a1LQu
             $dIx_a1LQv
             $dIx1_a1LQw
             $dIx2_a1LQx
             $dIx3_a1LQy
             wild_X43
             h_a1KRn
      of {
        False -> GHC.Arr.$fIxInt1;
        True ->
          case GHC.Arr.$fIx(,,,)_$cunsafeIndex
                 @ a1_a1LQr
                 @ a2_a1LQs
                 @ a3_a1LQt
                 @ a4_a1LQu
                 $dIx_a1LQv
                 $dIx1_a1LQw
                 $dIx2_a1LQx
                 $dIx3_a1LQy
                 wild_X43
                 h_a1KRn
          of
          { I# x_i1AMi ->
          GHC.Types.I# (+# x_i1AMi 1#)
          }
      }
      }

-- RHS size: {terms: 28, types: 41, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,)_$cindex [InlPrag=INLINE (sat-args=2)]
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     ((a1, a2, a3, a4), (a1, a2, a3, a4)) -> (a1, a2, a3, a4) -> Int
[GblId,
 Arity=6,
 Str=<S(LLLC(C(S(S)))C(C(S))LL),U(A,A,A,1*C1(C1(U(U))),1*C1(C1(U)),A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,C(C1(U(U))),1*C1(C1(U)),A,C(U(U)))><S(SS),U(U(U,U,U,U),U(U,U,U,U))><S,U(U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a1_a1LQr)
                 (@ a2_a1LQs)
                 (@ a3_a1LQt)
                 (@ a4_a1LQu)
                 ($dIx_a1LQv :: Ix a1_a1LQr)
                 ($dIx1_a1LQw :: Ix a2_a1LQs)
                 ($dIx2_a1LQx :: Ix a3_a1LQt)
                 ($dIx3_a1LQy :: Ix a4_a1LQu)
                 (b_a1KRh
                    :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
                        (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)))
                 (i_a1KRi :: (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)) ->
                 case GHC.Arr.$fIx(,,,)_$cinRange
                        @ a1_a1LQr
                        @ a2_a1LQs
                        @ a3_a1LQt
                        @ a4_a1LQu
                        $dIx_a1LQv
                        $dIx1_a1LQw
                        $dIx2_a1LQx
                        $dIx3_a1LQy
                        b_a1KRh
                        i_a1KRi
                 of {
                   False -> hopelessIndexError;
                   True ->
                     GHC.Arr.$fIx(,,,)_$cunsafeIndex
                       @ a1_a1LQr
                       @ a2_a1LQs
                       @ a3_a1LQt
                       @ a4_a1LQu
                       $dIx_a1LQv
                       $dIx1_a1LQw
                       $dIx2_a1LQx
                       $dIx3_a1LQy
                       b_a1KRh
                       i_a1KRi
                 }}]
GHC.Arr.$fIx(,,,)_$cindex
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu)
      (eta_B2
         :: ((a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu),
             (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)))
      (eta1_B1 :: (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)) ->
      case GHC.Arr.$fIx(,,,)_$cinRange
             @ a1_a1LQr
             @ a2_a1LQs
             @ a3_a1LQt
             @ a4_a1LQu
             $dIx_a1LQv
             $dIx1_a1LQw
             $dIx2_a1LQx
             $dIx3_a1LQy
             eta_B2
             eta1_B1
      of {
        False -> hopelessIndexError;
        True ->
          GHC.Arr.$fIx(,,,)_$cunsafeIndex
            @ a1_a1LQr
            @ a2_a1LQs
            @ a3_a1LQt
            @ a4_a1LQu
            $dIx_a1LQv
            $dIx1_a1LQw
            $dIx2_a1LQx
            $dIx3_a1LQy
            eta_B2
            eta1_B1
      }

-- RHS size: {terms: 44, types: 49, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a1 a2 a3 a4.
     (Ix a1, Ix a2, Ix a3, Ix a4) =>
     Ix (a1, a2, a3, a4)
[GblId[DFunId],
 Arity=4,
 Str=<L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,A)><L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))>m,
 Unf=DFun: \ (@ a1_a1KSt)
             (@ a2_a1KSu)
             (@ a3_a1KSv)
             (@ a4_a1KSw)
             (v_B1 :: Ix a1_a1KSt)
             (v1_B2 :: Ix a2_a1KSu)
             (v2_B3 :: Ix a3_a1KSv)
             (v3_B4 :: Ix a4_a1KSw) ->
       GHC.Arr.C:Ix TYPE: (a1_a1KSt, a2_a1KSu, a3_a1KSv, a4_a1KSw)
                    GHC.Arr.$fIx(,,,)_$cp1Ix
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$crange
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$cindex
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$cunsafeIndex
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$cinRange
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$crangeSize
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4
                    GHC.Arr.$fIx(,,,)_$cunsafeRangeSize
                      @ a1_a1KSt @ a2_a1KSu @ a3_a1KSv @ a4_a1KSw v_B1 v1_B2 v2_B3 v3_B4]
GHC.Arr.$fIx(,,,)
  = \ (@ a1_a1LQr)
      (@ a2_a1LQs)
      (@ a3_a1LQt)
      (@ a4_a1LQu)
      ($dIx_a1LQv :: Ix a1_a1LQr)
      ($dIx1_a1LQw :: Ix a2_a1LQs)
      ($dIx2_a1LQx :: Ix a3_a1LQt)
      ($dIx3_a1LQy :: Ix a4_a1LQu) ->
      GHC.Arr.C:Ix
        @ (a1_a1LQr, a2_a1LQs, a3_a1LQt, a4_a1LQu)
        (GHC.Arr.$fIx(,,,)_$cp1Ix
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$crange
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$cindex
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$cunsafeIndex
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$cinRange
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$crangeSize
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)
        (GHC.Arr.$fIx(,,,)_$cunsafeRangeSize
           @ a1_a1LQr
           @ a2_a1LQs
           @ a3_a1LQt
           @ a4_a1LQu
           $dIx_a1LQv
           $dIx1_a1LQw
           $dIx2_a1LQx
           $dIx3_a1LQy)

-- RHS size: {terms: 13, types: 18, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$cp1Ix
  :: forall a1 a2 a3. (Ix a1, Ix a2, Ix a3) => Ord (a1, a2, a3)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(1*U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a1_a1LRQ)
                 (@ a2_a1LRR)
                 (@ a3_a1LRS)
                 ($dIx_a1LRT [Occ=Once] :: Ix a1_a1LRQ)
                 ($dIx1_a1LRU [Occ=Once] :: Ix a2_a1LRR)
                 ($dIx2_a1LRV [Occ=Once] :: Ix a3_a1LRS) ->
                 GHC.Classes.$fOrd(,,)
                   @ a1_a1LRQ
                   @ a2_a1LRR
                   @ a3_a1LRS
                   (GHC.Arr.$p1Ix @ a1_a1LRQ $dIx_a1LRT)
                   (GHC.Arr.$p1Ix @ a2_a1LRR $dIx1_a1LRU)
                   (GHC.Arr.$p1Ix @ a3_a1LRS $dIx2_a1LRV)}]
GHC.Arr.$fIx(,,)_$cp1Ix
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS) ->
      GHC.Classes.$fOrd(,,)
        @ a1_a1LRQ
        @ a2_a1LRR
        @ a3_a1LRS
        (GHC.Arr.$p1Ix @ a1_a1LRQ $dIx_a1LRT)
        (GHC.Arr.$p1Ix @ a2_a1LRR $dIx1_a1LRU)
        (GHC.Arr.$p1Ix @ a3_a1LRS $dIx2_a1LRV)

-- RHS size: {terms: 9, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$cp1Ix :: forall a b. (Ix a, Ix b) => Ord (a, b)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A,A,A,A,A,A)><L,1*U(1*U(1*U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1LT8)
                 (@ b_a1LT9)
                 ($dIx_a1LTa [Occ=Once] :: Ix a_a1LT8)
                 ($dIx1_a1LTb [Occ=Once] :: Ix b_a1LT9) ->
                 GHC.Classes.$fOrd(,)
                   @ a_a1LT8
                   @ b_a1LT9
                   (GHC.Arr.$p1Ix @ a_a1LT8 $dIx_a1LTa)
                   (GHC.Arr.$p1Ix @ b_a1LT9 $dIx1_a1LTb)}]
GHC.Arr.$fIx(,)_$cp1Ix
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9) ->
      GHC.Classes.$fOrd(,)
        @ a_a1LT8
        @ b_a1LT9
        (GHC.Arr.$p1Ix @ a_a1LT8 $dIx_a1LTa)
        (GHC.Arr.$p1Ix @ b_a1LT9 $dIx1_a1LTb)

-- RHS size: {terms: 67, types: 77, coercions: 0, joins: 0/5}
GHC.Arr.$fIx(,)_$s$crange [InlPrag=INLINE (sat-args=1)]
  :: ((Int, Int), (Int, Int)) -> [(Int, Int)]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S(S)L)S(S(S)L)),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MpB [Occ=Once!] :: ((Int, Int), (Int, Int))) ->
                 case ds_d1MpB of
                 { (ds1_d1Mq8 [Occ=Once!], ds2_d1Mq9 [Occ=Once!]) ->
                 case ds1_d1Mq8 of
                 { (l1_a1KTD [Occ=Once!], l2_a1KTE [Occ=OnceL!]) ->
                 case ds2_d1Mq9 of
                 { (u1_a1KTF [Occ=Once!], u2_a1KTG [Occ=OnceL!]) ->
                 build
                   @ (Int, Int)
                   (\ (@ a_d1MpD)
                      (c_d1MpE [Occ=OnceL!, OS=OneShot]
                         :: (Int, Int) -> a_d1MpD -> a_d1MpD)
                      (n_d1MpF [Occ=Once, OS=OneShot] :: a_d1MpD) ->
                      case l1_a1KTD of { I# x_i1Mxp [Occ=Once] ->
                      case u1_a1KTF of { I# y_i1Mxy [Occ=Once] ->
                      GHC.Enum.eftIntFB
                        @ a_d1MpD
                        (\ (ds3_d1MpH [Occ=OnceL] :: Int)
                           (ds4_d1MpG [Occ=Once, OS=OneShot] :: a_d1MpD) ->
                           case l2_a1KTE of { I# x1_X1MGd [Occ=Once] ->
                           case u2_a1KTG of { I# y1_X1MGr [Occ=Once] ->
                           GHC.Enum.eftIntFB
                             @ a_d1MpD
                             (\ (ds5_d1MpJ [Occ=Once] :: Int)
                                (ds6_d1MpI [Occ=Once, OS=OneShot] :: a_d1MpD) ->
                                c_d1MpE (ds3_d1MpH, ds5_d1MpJ) ds6_d1MpI)
                             ds4_d1MpG
                             x1_X1MGd
                             y1_X1MGr
                           }
                           })
                        n_d1MpF
                        x_i1Mxp
                        y_i1Mxy
                      }
                      })
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$crange
  = \ (eta_B1 :: ((Int, Int), (Int, Int))) ->
      case eta_B1 of { (ds_d1Mq8, ds1_d1Mq9) ->
      case ds_d1Mq8 of { (l1_a1KTD, l2_a1KTE) ->
      case ds1_d1Mq9 of { (u1_a1KTF, u2_a1KTG) ->
      case l1_a1KTD of { I# x_i1Mxp ->
      case u1_a1KTF of { I# y_i1Mxy ->
      case ># x_i1Mxp y_i1Mxy of {
        __DEFAULT ->
          case l2_a1KTE of { I# x1_X1MGY ->
          case u2_a1KTG of { I# y1_X1MHc ->
          let {
            lvl50_s1Nyb [Dmd=<S,U>] :: [Int]
            [LclId]
            lvl50_s1Nyb = GHC.Enum.eftInt x1_X1MGY y1_X1MHc } in
          letrec {
            go_i1MGC [Occ=LoopBreaker] :: Int# -> [(Int, Int)]
            [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
            go_i1MGC
              = \ (x2_i1MGD :: Int#) ->
                  let {
                    ds2_d1MpH :: Int
                    [LclId, Unf=OtherCon []]
                    ds2_d1MpH = GHC.Types.I# x2_i1MGD } in
                  let {
                    z_i1y1a :: [(Int, Int)]
                    [LclId]
                    z_i1y1a
                      = case ==# x2_i1MGD y_i1Mxy of {
                          __DEFAULT -> go_i1MGC (+# x2_i1MGD 1#);
                          1# -> GHC.Types.[] @ (Int, Int)
                        } } in
                  letrec {
                    go1_i1y1b [Occ=LoopBreaker] :: [Int] -> [(Int, Int)]
                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                    go1_i1y1b
                      = \ (ds3_i1y1c :: [Int]) ->
                          case ds3_i1y1c of {
                            [] -> z_i1y1a;
                            : y2_i1y1h ys_i1y1i ->
                              GHC.Types.: @ (Int, Int) (ds2_d1MpH, y2_i1y1h) (go1_i1y1b ys_i1y1i)
                          }; } in
                  go1_i1y1b lvl50_s1Nyb; } in
          go_i1MGC x_i1Mxp
          }
          };
        1# -> GHC.Types.[] @ (Int, Int)
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 51, types: 84, coercions: 0, joins: 0/4}
GHC.Arr.$fIx(,)_$crange [InlPrag=INLINE (sat-args=1)]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> [(a, b)]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><L,1*U(A,1*C1(U),A,A,A,A,A)><S(SS),1*U(1*U(U,U),1*U(U,U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a1LT8)
                 (@ b_a1LT9)
                 ($dIx_a1LTa [Occ=Once] :: Ix a_a1LT8)
                 ($dIx1_a1LTb [Occ=OnceL] :: Ix b_a1LT9)
                 (ds_d1MpB [Occ=Once!]
                    :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9))) ->
                 case ds_d1MpB of
                 { (ds1_d1Mq8 [Occ=Once!], ds2_d1Mq9 [Occ=Once!]) ->
                 case ds1_d1Mq8 of { (l1_a1KTD [Occ=Once], l2_a1KTE [Occ=OnceL]) ->
                 case ds2_d1Mq9 of { (u1_a1KTF [Occ=Once], u2_a1KTG [Occ=OnceL]) ->
                 build
                   @ (a_a1LT8, b_a1LT9)
                   (\ (@ a1_d1MpD)
                      (c_d1MpE [Occ=OnceL!, OS=OneShot]
                         :: (a_a1LT8, b_a1LT9) -> a1_d1MpD -> a1_d1MpD)
                      (n_d1MpF [Occ=Once, OS=OneShot] :: a1_d1MpD) ->
                      foldr
                        @ a_a1LT8
                        @ a1_d1MpD
                        (\ (ds3_d1MpH [Occ=OnceL] :: a_a1LT8)
                           (ds4_d1MpG [Occ=Once, OS=OneShot] :: a1_d1MpD) ->
                           foldr
                             @ b_a1LT9
                             @ a1_d1MpD
                             (\ (ds5_d1MpJ [Occ=Once] :: b_a1LT9)
                                (ds6_d1MpI [Occ=Once, OS=OneShot] :: a1_d1MpD) ->
                                c_d1MpE (ds3_d1MpH, ds5_d1MpJ) ds6_d1MpI)
                             ds4_d1MpG
                             (range @ b_a1LT9 $dIx1_a1LTb (l2_a1KTE, u2_a1KTG)))
                        n_d1MpF
                        (range @ a_a1LT8 $dIx_a1LTa (l1_a1KTD, u1_a1KTF)))
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$crange
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9)
      (eta_B1 :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9))) ->
      case eta_B1 of { (ds_d1Mq8, ds1_d1Mq9) ->
      case ds_d1Mq8 of { (l1_a1KTD, l2_a1KTE) ->
      case ds1_d1Mq9 of { (u1_a1KTF, u2_a1KTG) ->
      let {
        lvl50_s1Nyc :: [b_a1LT9]
        [LclId]
        lvl50_s1Nyc = range @ b_a1LT9 $dIx1_a1LTb (l2_a1KTE, u2_a1KTG) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [a_a1LT8] -> [(a_a1LT8, b_a1LT9)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds2_i1y1c :: [a_a1LT8]) ->
              case ds2_i1y1c of {
                [] -> GHC.Types.[] @ (a_a1LT8, b_a1LT9);
                : y_i1y1h ys_i1y1i ->
                  let {
                    z_X1yaO :: [(a_a1LT8, b_a1LT9)]
                    [LclId]
                    z_X1yaO = go_i1y1b ys_i1y1i } in
                  letrec {
                    go1_X1yaR [Occ=LoopBreaker] :: [b_a1LT9] -> [(a_a1LT8, b_a1LT9)]
                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                    go1_X1yaR
                      = \ (ds3_X1yaT :: [b_a1LT9]) ->
                          case ds3_X1yaT of {
                            [] -> z_X1yaO;
                            : y1_X1yb1 ys1_X1yb3 ->
                              GHC.Types.:
                                @ (a_a1LT8, b_a1LT9) (y_i1y1h, y1_X1yb1) (go1_X1yaR ys1_X1yb3)
                          }; } in
                  go1_X1yaR lvl50_s1Nyc
              }; } in
      go_i1y1b (range @ a_a1LT8 $dIx_a1LTa (l1_a1KTD, u1_a1KTF))
      }
      }
      }

-- RHS size: {terms: 43, types: 48, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: ((Int, Int), (Int, Int)) -> (Int, Int) -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S(S)S(S))S(LS(S))),1*U(1*U(1*U(U),1*U(U)),1*U(A,1*U(U)))><S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mqa [Occ=Once!] :: ((Int, Int), (Int, Int)))
                 (ds1_d1Mqb [Occ=Once!] :: (Int, Int)) ->
                 case ds_d1Mqa of
                 { (ds2_d1Mqt [Occ=Once!], ds3_d1Mqu [Occ=Once!]) ->
                 case ds2_d1Mqt of { (l1_a1KTJ [Occ=Once!], l2_a1KTK [Occ=Once!]) ->
                 case ds3_d1Mqu of { (_ [Occ=Dead], u2_a1KTM [Occ=Once!]) ->
                 case ds1_d1Mqb of { (i1_a1KTN [Occ=Once!], i2_a1KTO [Occ=Once!]) ->
                 case i1_a1KTN of { I# x_i1AMw [Occ=Once] ->
                 case l1_a1KTJ of { I# y_i1AMA [Occ=Once] ->
                 case u2_a1KTM of { I# x1_X1AVi [Occ=Once] ->
                 case l2_a1KTK of { I# y1_X1AVr ->
                 case i2_a1KTO of { I# x2_X1AVv [Occ=Once] ->
                 GHC.Types.I#
                   (+#
                      (*# (-# x_i1AMw y_i1AMA) (+# (-# x1_X1AVi y1_X1AVr) 1#))
                      (-# x2_X1AVv y1_X1AVr))
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$cunsafeIndex
  = \ (eta_B2 :: ((Int, Int), (Int, Int))) (eta1_B1 :: (Int, Int)) ->
      case eta_B2 of { (ds_d1Mqt, ds1_d1Mqu) ->
      case ds_d1Mqt of { (l1_a1KTJ, l2_a1KTK) ->
      case ds1_d1Mqu of { (u1_a1KTL, u2_a1KTM) ->
      case eta1_B1 of { (i1_a1KTN, i2_a1KTO) ->
      case i1_a1KTN of { I# x_i1AMw ->
      case l1_a1KTJ of { I# y_i1AMA ->
      case u2_a1KTM of { I# x1_X1AVi ->
      case l2_a1KTK of { I# y1_X1AVr ->
      case i2_a1KTO of { I# x2_X1AVv ->
      GHC.Types.I#
        (+#
           (*# (-# x_i1AMw y_i1AMA) (+# (-# x1_X1AVi y1_X1AVr) 1#))
           (-# x2_X1AVv y1_X1AVr))
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 47, types: 61, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> (a, b) -> Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(S(S)))LLL),1*U(A,A,A,1*C1(C1(U(U))),A,A,A)><S(LLLC(C(S(S)))LLC(S(S))),U(A,A,A,1*C1(C1(U(U))),A,A,1*C1(U(U)))><S(SS),1*U(1*U(U,U),1*U(U,U))><S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a1LT8)
                 (@ b_a1LT9)
                 ($dIx_a1LTa [Occ=Once] :: Ix a_a1LT8)
                 ($dIx1_a1LTb :: Ix b_a1LT9)
                 (ds_d1Mqa [Occ=Once!] :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
                 (ds1_d1Mqb [Occ=Once!] :: (a_a1LT8, b_a1LT9)) ->
                 case ds_d1Mqa of
                 { (ds2_d1Mqt [Occ=Once!], ds3_d1Mqu [Occ=Once!]) ->
                 case ds2_d1Mqt of { (l1_a1KTJ [Occ=Once], l2_a1KTK) ->
                 case ds3_d1Mqu of { (u1_a1KTL [Occ=Once], u2_a1KTM) ->
                 case ds1_d1Mqb of { (i1_a1KTN [Occ=Once], i2_a1KTO [Occ=Once]) ->
                 case unsafeIndex @ a_a1LT8 $dIx_a1LTa (l1_a1KTJ, u1_a1KTL) i1_a1KTN
                 of
                 { I# x_i1MAD [Occ=Once] ->
                 case unsafeRangeSize @ b_a1LT9 $dIx1_a1LTb (l2_a1KTK, u2_a1KTM) of
                 { I# y_i1MAH [Occ=Once] ->
                 case unsafeIndex
                        @ b_a1LT9 $dIx1_a1LTb (l2_a1KTK, u2_a1KTM) i2_a1KTO
                 of
                 { I# y1_i1AMm [Occ=Once] ->
                 GHC.Types.I# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm)
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$cunsafeIndex
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9)
      (eta_B2 :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
      (eta1_B1 :: (a_a1LT8, b_a1LT9)) ->
      case eta_B2 of { (ds_d1Mqt, ds1_d1Mqu) ->
      case ds_d1Mqt of { (l1_a1KTJ, l2_a1KTK) ->
      case ds1_d1Mqu of { (u1_a1KTL, u2_a1KTM) ->
      case eta1_B1 of { (i1_a1KTN, i2_a1KTO) ->
      case unsafeIndex @ a_a1LT8 $dIx_a1LTa (l1_a1KTJ, u1_a1KTL) i1_a1KTN
      of
      { I# x_i1MAD ->
      case unsafeRangeSize @ b_a1LT9 $dIx1_a1LTb (l2_a1KTK, u2_a1KTM) of
      { I# y_i1MAH ->
      case unsafeIndex
             @ b_a1LT9 $dIx1_a1LTb (l2_a1KTK, u2_a1KTM) i2_a1KTO
      of
      { I# y1_i1AMm ->
      GHC.Types.I# (+# (*# x_i1MAD y_i1MAH) y1_i1AMm)
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 57, types: 54, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$cinRange [InlPrag=INLINE (sat-args=2)]
  :: ((Int, Int), (Int, Int)) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S(S)L)S(SL)),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mqv [Occ=Once!] :: ((Int, Int), (Int, Int)))
                 (ds1_d1Mqw [Occ=Once!] :: (Int, Int)) ->
                 case ds_d1Mqv of
                 { (ds2_d1MqO [Occ=Once!], ds3_d1MqP [Occ=Once!]) ->
                 case ds2_d1MqO of { (l1_a1KTP [Occ=Once!], l2_a1KTQ [Occ=Once!]) ->
                 case ds3_d1MqP of { (u1_a1KTR [Occ=Once!], u2_a1KTS [Occ=Once!]) ->
                 case ds1_d1Mqw of { (i1_a1KTT [Occ=Once!], i2_a1KTU [Occ=Once!]) ->
                 case l1_a1KTP of { I# m_a1KUD [Occ=Once] ->
                 case u1_a1KTR of { I# n_a1KUE [Occ=Once] ->
                 case i1_a1KTT of { I# i_a1KUF ->
                 case <=# m_a1KUD i_a1KUF of {
                   __DEFAULT -> GHC.Types.False;
                   1# ->
                     case <=# i_a1KUF n_a1KUE of {
                       __DEFAULT -> GHC.Types.False;
                       1# ->
                         case l2_a1KTQ of { I# m1_X1L3t [Occ=Once] ->
                         case u2_a1KTS of { I# n1_X1L3z [Occ=Once] ->
                         case i2_a1KTU of { I# i4_X1L3F ->
                         case <=# m1_X1L3t i4_X1L3F of {
                           __DEFAULT -> GHC.Types.False;
                           1# -> tagToEnum# @ Bool (<=# i4_X1L3F n1_X1L3z)
                         }
                         }
                         }
                         }
                     }
                 }
                 }
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$cinRange
  = \ (eta_B2 :: ((Int, Int), (Int, Int))) (eta1_B1 :: (Int, Int)) ->
      case eta_B2 of { (ds_d1MqO, ds1_d1MqP) ->
      case ds_d1MqO of { (l1_a1KTP, l2_a1KTQ) ->
      case ds1_d1MqP of { (u1_a1KTR, u2_a1KTS) ->
      case eta1_B1 of { (i1_a1KTT, i2_a1KTU) ->
      case l1_a1KTP of { I# m_a1KUD ->
      case u1_a1KTR of { I# n_a1KUE ->
      case i1_a1KTT of { I# i_a1KUF ->
      case <=# m_a1KUD i_a1KUF of {
        __DEFAULT -> GHC.Types.False;
        1# ->
          case <=# i_a1KUF n_a1KUE of {
            __DEFAULT -> GHC.Types.False;
            1# ->
              case l2_a1KTQ of { I# m1_X1L3t ->
              case u2_a1KTS of { I# n1_X1L3z ->
              case i2_a1KTU of { I# i4_X1L3F ->
              case <=# m1_X1L3t i4_X1L3F of {
                __DEFAULT -> GHC.Types.False;
                1# -> tagToEnum# @ Bool (<=# i4_X1L3F n1_X1L3z)
              }
              }
              }
              }
          }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 34, types: 53, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$cinRange [InlPrag=INLINE (sat-args=2)]
  :: forall a b. (Ix a, Ix b) => ((a, b), (a, b)) -> (a, b) -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLLC(C(S))LL),1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,1*U(A,A,A,A,1*C1(C1(U)),A,A)><S(SS),1*U(1*U(U,U),1*U(U,U))><S,1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a1LT8)
                 (@ b_a1LT9)
                 ($dIx_a1LTa [Occ=Once] :: Ix a_a1LT8)
                 ($dIx1_a1LTb [Occ=Once] :: Ix b_a1LT9)
                 (ds_d1Mqv [Occ=Once!] :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
                 (ds1_d1Mqw [Occ=Once!] :: (a_a1LT8, b_a1LT9)) ->
                 case ds_d1Mqv of
                 { (ds2_d1MqO [Occ=Once!], ds3_d1MqP [Occ=Once!]) ->
                 case ds2_d1MqO of { (l1_a1KTP [Occ=Once], l2_a1KTQ [Occ=Once]) ->
                 case ds3_d1MqP of { (u1_a1KTR [Occ=Once], u2_a1KTS [Occ=Once]) ->
                 case ds1_d1Mqw of { (i1_a1KTT [Occ=Once], i2_a1KTU [Occ=Once]) ->
                 case inRange @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
                 of {
                   False -> GHC.Types.False;
                   True -> inRange @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$cinRange
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9)
      (eta_B2 :: ((a_a1LT8, b_a1LT9), (a_a1LT8, b_a1LT9)))
      (eta1_B1 :: (a_a1LT8, b_a1LT9)) ->
      case eta_B2 of { (ds_d1MqO, ds1_d1MqP) ->
      case ds_d1MqO of { (l1_a1KTP, l2_a1KTQ) ->
      case ds1_d1MqP of { (u1_a1KTR, u2_a1KTS) ->
      case eta1_B1 of { (i1_a1KTT, i2_a1KTU) ->
      case inRange @ a_a1LT8 $dIx_a1LTa (l1_a1KTP, u1_a1KTR) i1_a1KTT
      of {
        False -> GHC.Types.False;
        True -> inRange @ b_a1LT9 $dIx1_a1LTb (l2_a1KTQ, u2_a1KTS) i2_a1KTU
      }
      }
      }
      }
      }

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl21_r1Xvy :: [()]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
lvl21_r1Xvy = GHC.Types.: @ () GHC.Tuple.() (GHC.Types.[] @ ())

-- RHS size: {terms: 11, types: 10, coercions: 0, joins: 0/0}
GHC.Arr.$fIx()_$crange [InlPrag=INLINE (sat-args=1)]
  :: ((), ()) -> [()]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*H,1*H)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MqS [Occ=Once!] :: ((), ())) ->
                 case ds_d1MqS of
                 { (ds1_d1Mr3 [Occ=Once!], ds2_d1Mr4 [Occ=Once!]) ->
                 case ds1_d1Mr3 of { () ->
                 case ds2_d1Mr4 of { () ->
                 build
                   @ ()
                   (\ (@ a_d1MqU)
                      (c_d1MqV [Occ=Once!, OS=OneShot] :: () -> a_d1MqU -> a_d1MqU)
                      (n_d1MqW [Occ=Once, OS=OneShot] :: a_d1MqU) ->
                      c_d1MqV GHC.Tuple.() n_d1MqW)
                 }
                 }
                 }}]
GHC.Arr.$fIx()_$crange
  = \ (ds_d1MqS :: ((), ())) ->
      case ds_d1MqS of { (ds1_d1Mr3, ds2_d1Mr4) ->
      case ds1_d1Mr3 of { () -> case ds2_d1Mr4 of { () -> lvl21_r1Xvy } }
      }

-- RHS size: {terms: 15, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIx()_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: ((), ()) -> () -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*H,1*H)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mr6 [Occ=Once!] :: ((), ()))
                 (ds1_d1Mr7 [Occ=Once!] :: ()) ->
                 case ds_d1Mr6 of
                 { (ds2_d1Mrf [Occ=Once!], ds3_d1Mrg [Occ=Once!]) ->
                 case ds2_d1Mrf of { () ->
                 case ds3_d1Mrg of { () ->
                 case ds1_d1Mr7 of { () -> GHC.Types.I# 0# }
                 }
                 }
                 }}]
GHC.Arr.$fIx()_$cunsafeIndex
  = \ (ds_d1Mr6 :: ((), ())) (ds1_d1Mr7 :: ()) ->
      case ds_d1Mr6 of { (ds2_d1Mrf, ds3_d1Mrg) ->
      case ds2_d1Mrf of { () ->
      case ds3_d1Mrg of { () ->
      case ds1_d1Mr7 of { () -> GHC.Arr.$fIxInt1 }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Arr.$fIx()_$cindex [InlPrag=INLINE (sat-args=2)]
  :: ((), ()) -> () -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*H,1*H)><S,1*H>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=True)
         Tmpl= GHC.Arr.$fIx()_$cunsafeIndex}]
GHC.Arr.$fIx()_$cindex = GHC.Arr.$fIx()_$cunsafeIndex

-- RHS size: {terms: 15, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIx()_$cinRange [InlPrag=INLINE (sat-args=2)]
  :: ((), ()) -> () -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*H,1*H)><S,1*H>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mrh [Occ=Once!] :: ((), ()))
                 (ds1_d1Mri [Occ=Once!] :: ()) ->
                 case ds_d1Mrh of
                 { (ds2_d1Mrq [Occ=Once!], ds3_d1Mrr [Occ=Once!]) ->
                 case ds2_d1Mrq of { () ->
                 case ds3_d1Mrr of { () ->
                 case ds1_d1Mri of { () -> GHC.Types.True }
                 }
                 }
                 }}]
GHC.Arr.$fIx()_$cinRange
  = \ (ds_d1Mrh :: ((), ())) (ds1_d1Mri :: ()) ->
      case ds_d1Mrh of { (ds2_d1Mrq, ds3_d1Mrr) ->
      case ds2_d1Mrq of { () ->
      case ds3_d1Mrr of { () ->
      case ds1_d1Mri of { () -> GHC.Types.True }
      }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIx() [InlPrag=NOUSERINLINE CONLIKE] :: Ix ()
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: ()
                    GHC.Classes.$fOrd()
                    GHC.Arr.$fIx()_$crange
                    GHC.Arr.$fIx()_$cindex
                    GHC.Arr.$fIx()_$cunsafeIndex
                    GHC.Arr.$fIx()_$cinRange
                    GHC.Arr.$fIx()_$cunsafeRangeSize
                    GHC.Arr.$fIx()_$cunsafeRangeSize]
GHC.Arr.$fIx()
  = GHC.Arr.C:Ix
      @ ()
      GHC.Classes.$fOrd()
      GHC.Arr.$fIx()_$crange
      GHC.Arr.$fIx()_$cindex
      GHC.Arr.$fIx()_$cunsafeIndex
      GHC.Arr.$fIx()_$cinRange
      GHC.Arr.$fIx()_$cunsafeRangeSize
      GHC.Arr.$fIx()_$cunsafeRangeSize

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$crange [InlPrag=INLINE (sat-args=1)]
  :: (Ordering, Ordering) -> [Ordering]
[GblId,
 Arity=1,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mrs [Occ=Once!] :: (Ordering, Ordering)) ->
                 case ds_d1Mrs of { (m_a1KTX [Occ=Once], n_a1KTY [Occ=Once]) ->
                 GHC.Enum.$fEnumOrdering_$cenumFromTo m_a1KTX n_a1KTY
                 }}]
GHC.Arr.$fIxOrdering_$crange
  = \ (eta_B1 :: (Ordering, Ordering)) ->
      case eta_B1 of { (m_a1KTX, n_a1KTY) ->
      GHC.Enum.$fEnumOrdering_$cenumFromTo m_a1KTX n_a1KTY
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl22_r1Xvz :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl22_r1Xvz = GHC.Types.I# -1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl23_r1XvA :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl23_r1XvA = GHC.Types.I# -2#

-- RHS size: {terms: 34, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: (Ordering, Ordering) -> Ordering -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,A)><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MrA [Occ=Once!] :: (Ordering, Ordering))
                 (i_a1KU0 [Occ=Once!] :: Ordering) ->
                 case ds_d1MrA of { (l_a1KTZ [Occ=Once*!], _ [Occ=Dead]) ->
                 case i_a1KU0 of {
                   LT ->
                     case l_a1KTZ of {
                       LT -> GHC.Types.I# 0#;
                       EQ -> GHC.Types.I# -1#;
                       GT -> GHC.Types.I# -2#
                     };
                   EQ ->
                     case l_a1KTZ of {
                       LT -> GHC.Types.I# 1#;
                       EQ -> GHC.Types.I# 0#;
                       GT -> GHC.Types.I# -1#
                     };
                   GT ->
                     case l_a1KTZ of {
                       LT -> GHC.Types.I# 2#;
                       EQ -> GHC.Types.I# 1#;
                       GT -> GHC.Types.I# 0#
                     }
                 }
                 }}]
GHC.Arr.$fIxOrdering_$cunsafeIndex
  = \ (eta_B2 :: (Ordering, Ordering)) (eta1_B1 :: Ordering) ->
      case eta_B2 of { (l_a1KTZ, ds_d1MrG) ->
      case eta1_B1 of {
        LT ->
          case l_a1KTZ of {
            LT -> GHC.Arr.$fIxInt1;
            EQ -> lvl22_r1Xvz;
            GT -> lvl23_r1XvA
          };
        EQ ->
          case l_a1KTZ of {
            LT -> lvl17_r1Xvu;
            EQ -> GHC.Arr.$fIxInt1;
            GT -> lvl22_r1Xvz
          };
        GT ->
          case l_a1KTZ of {
            LT -> lvl18_r1Xvv;
            EQ -> lvl17_r1Xvu;
            GT -> GHC.Arr.$fIxInt1
          }
      }
      }

-- RHS size: {terms: 50, types: 12, coercions: 0, joins: 1/1}
GHC.Arr.$w$cinRange [InlPrag=NOUSERINLINE[0]]
  :: Ordering -> Ordering -> Ordering -> Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [90 90 144] 186 30}]
GHC.Arr.$w$cinRange
  = \ (ww_s1TqG :: Ordering)
      (ww1_s1TqH :: Ordering)
      (w_s1TqD :: Ordering) ->
      join {
        $j_s1NEr [Dmd=<L,1*U>] :: Bool
        [LclId[JoinId(0)]]
        $j_s1NEr
          = case w_s1TqD of {
              LT -> case ww1_s1TqH of { __DEFAULT -> GHC.Types.True };
              EQ ->
                case ww1_s1TqH of {
                  LT -> GHC.Types.False;
                  EQ -> GHC.Types.True;
                  GT -> GHC.Types.True
                };
              GT ->
                case ww1_s1TqH of {
                  __DEFAULT -> GHC.Types.False;
                  GT -> GHC.Types.True
                }
            } } in
      case w_s1TqD of {
        LT ->
          case ww_s1TqG of {
            LT -> jump $j_s1NEr;
            EQ -> GHC.Types.False;
            GT -> GHC.Types.False
          };
        EQ ->
          case ww_s1TqG of {
            __DEFAULT -> jump $j_s1NEr;
            GT -> GHC.Types.False
          };
        GT -> case ww_s1TqG of { __DEFAULT -> jump $j_s1NEr }
      }

-- RHS size: {terms: 9, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$cinRange [InlPrag=NOUSERINLINE[0]]
  :: (Ordering, Ordering) -> Ordering -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TqC [Occ=Once!] :: (Ordering, Ordering))
                 (w1_s1TqD [Occ=Once] :: Ordering) ->
                 case w_s1TqC of { (ww1_s1TqG [Occ=Once], ww2_s1TqH [Occ=Once]) ->
                 GHC.Arr.$w$cinRange ww1_s1TqG ww2_s1TqH w1_s1TqD
                 }}]
GHC.Arr.$fIxOrdering_$cinRange
  = \ (w_s1TqC :: (Ordering, Ordering)) (w1_s1TqD :: Ordering) ->
      case w_s1TqC of { (ww1_s1TqG, ww2_s1TqH) ->
      GHC.Arr.$w$cinRange ww1_s1TqG ww2_s1TqH w1_s1TqD
      }

-- RHS size: {terms: 39, types: 7, coercions: 0, joins: 0/0}
GHC.Arr.$w$crangeSize3 [InlPrag=NOUSERINLINE[0]]
  :: Ordering -> Ordering -> Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [120 100] 180 0}]
GHC.Arr.$w$crangeSize3
  = \ (ww_s1TqN :: Ordering) (ww1_s1TqO :: Ordering) ->
      case GHC.Arr.$w$cinRange ww_s1TqN ww1_s1TqO ww1_s1TqO of {
        False -> 0#;
        True ->
          case ww1_s1TqO of {
            LT ->
              case ww_s1TqN of {
                LT -> 1#;
                EQ -> 0#;
                GT -> -1#
              };
            EQ ->
              case ww_s1TqN of {
                LT -> 2#;
                EQ -> 1#;
                GT -> 0#
              };
            GT ->
              case ww_s1TqN of {
                LT -> 3#;
                EQ -> 2#;
                GT -> 1#
              }
          }
      }

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (Ordering, Ordering) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s1TqK [Occ=Once!] :: (Ordering, Ordering)) ->
                 case w_s1TqK of { (ww1_s1TqN [Occ=Once], ww2_s1TqO [Occ=Once]) ->
                 case GHC.Arr.$w$crangeSize3 ww1_s1TqN ww2_s1TqO of ww3_s1TqS
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s1TqS
                 }
                 }}]
GHC.Arr.$fIxOrdering_$crangeSize
  = \ (w_s1TqK :: (Ordering, Ordering)) ->
      case w_s1TqK of { (ww1_s1TqN, ww2_s1TqO) ->
      case GHC.Arr.$w$crangeSize3 ww1_s1TqN ww2_s1TqO of ww3_s1TqS
      { __DEFAULT ->
      GHC.Types.I# ww3_s1TqS
      }
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool_$crange [InlPrag=INLINE (sat-args=1)]
  :: (Bool, Bool) -> [Bool]
[GblId,
 Arity=1,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MrM [Occ=Once!] :: (Bool, Bool)) ->
                 case ds_d1MrM of { (m_a1KU6 [Occ=Once], n_a1KU7 [Occ=Once]) ->
                 GHC.Enum.$fEnumBool_$cenumFromTo m_a1KU6 n_a1KU7
                 }}]
GHC.Arr.$fIxBool_$crange
  = \ (eta_B1 :: (Bool, Bool)) ->
      case eta_B1 of { (m_a1KU6, n_a1KU7) ->
      GHC.Enum.$fEnumBool_$cenumFromTo m_a1KU6 n_a1KU7
      }

-- RHS size: {terms: 21, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: (Bool, Bool) -> Bool -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,A)><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MrU [Occ=Once!] :: (Bool, Bool))
                 (i_a1KU9 [Occ=Once!] :: Bool) ->
                 case ds_d1MrU of { (l_a1KU8 [Occ=Once*!], _ [Occ=Dead]) ->
                 case i_a1KU9 of {
                   False ->
                     case l_a1KU8 of {
                       False -> GHC.Types.I# 0#;
                       True -> GHC.Types.I# -1#
                     };
                   True ->
                     case l_a1KU8 of {
                       False -> GHC.Types.I# 1#;
                       True -> GHC.Types.I# 0#
                     }
                 }
                 }}]
GHC.Arr.$fIxBool_$cunsafeIndex
  = \ (eta_B2 :: (Bool, Bool)) (eta1_B1 :: Bool) ->
      case eta_B2 of { (l_a1KU8, ds_d1Ms0) ->
      case eta1_B1 of {
        False ->
          case l_a1KU8 of {
            False -> GHC.Arr.$fIxInt1;
            True -> lvl22_r1Xvz
          };
        True ->
          case l_a1KU8 of {
            False -> lvl17_r1Xvu;
            True -> GHC.Arr.$fIxInt1
          }
      }
      }

-- RHS size: {terms: 22, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool_$cinRange :: (Bool, Bool) -> Bool -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,1*U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1Ms1 [Occ=Once!] :: (Bool, Bool))
                 (i_a1KUe [Occ=Once!] :: Bool) ->
                 case ds_d1Ms1 of { (l_a1KUc [Occ=Once*], u_a1KUd [Occ=Once*]) ->
                 case i_a1KUe of {
                   False ->
                     case l_a1KUc of {
                       False -> case u_a1KUd of { __DEFAULT -> GHC.Types.True };
                       True -> GHC.Types.False
                     };
                   True -> case l_a1KUc of { __DEFAULT -> u_a1KUd }
                 }
                 }}]
GHC.Arr.$fIxBool_$cinRange
  = \ (ds_d1Ms1 :: (Bool, Bool)) (i_a1KUe :: Bool) ->
      case ds_d1Ms1 of { (l_a1KUc, u_a1KUd) ->
      case i_a1KUe of {
        False ->
          case l_a1KUc of {
            False -> case u_a1KUd of { __DEFAULT -> GHC.Types.True };
            True -> GHC.Types.False
          };
        True -> case l_a1KUc of { __DEFAULT -> u_a1KUd }
      }
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$crange [InlPrag=INLINE (sat-args=1)]
  :: (Integer, Integer) -> [Integer]
[GblId,
 Arity=1,
 Str=<S(SS),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Ms6 [Occ=Once!] :: (Integer, Integer)) ->
                 case ds_d1Ms6 of { (m_a1KUf [Occ=Once], n_a1KUg [Occ=Once]) ->
                 GHC.Enum.$fEnumInteger_$cenumFromTo m_a1KUf n_a1KUg
                 }}]
GHC.Arr.$fIxInteger_$crange
  = \ (eta_B1 :: (Integer, Integer)) ->
      case eta_B1 of { (m_a1KUf, n_a1KUg) ->
      GHC.Enum.$fEnumInteger_$cenumFromTo m_a1KUf n_a1KUg
      }

-- RHS size: {terms: 13, types: 10, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: (Integer, Integer) -> Integer -> Int
[GblId,
 Arity=2,
 Str=<S(SL),1*U(1*U,A)><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mse [Occ=Once!] :: (Integer, Integer))
                 (i_a1KUj [Occ=Once] :: Integer) ->
                 case ds_d1Mse of { (m_a1KUh [Occ=Once], _ [Occ=Dead]) ->
                 case integerToInt (minusInteger i_a1KUj m_a1KUh) of wild1_i1AOp
                 { __DEFAULT ->
                 GHC.Types.I# wild1_i1AOp
                 }
                 }}]
GHC.Arr.$fIxInteger_$cunsafeIndex
  = \ (eta_B2 :: (Integer, Integer)) (eta1_B1 :: Integer) ->
      case eta_B2 of { (m_a1KUh, _n_a1KUi) ->
      case integerToInt (minusInteger eta1_B1 m_a1KUh) of wild1_i1AOp
      { __DEFAULT ->
      GHC.Types.I# wild1_i1AOp
      }
      }

-- RHS size: {terms: 15, types: 10, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$cinRange
  :: (Integer, Integer) -> Integer -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1Msj [Occ=Once!] :: (Integer, Integer))
                 (i_a1KUo :: Integer) ->
                 case ds_d1Msj of { (m_a1KUm [Occ=Once], n_a1KUn [Occ=Once]) ->
                 case leInteger# m_a1KUm i_a1KUo of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> leInteger i_a1KUo n_a1KUn
                 }
                 }}]
GHC.Arr.$fIxInteger_$cinRange
  = \ (ds_d1Msj :: (Integer, Integer)) (i_a1KUo :: Integer) ->
      case ds_d1Msj of { (m_a1KUm, n_a1KUn) ->
      case leInteger# m_a1KUm i_a1KUo of {
        __DEFAULT -> GHC.Types.False;
        1# -> leInteger i_a1KUo n_a1KUn
      }
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$crange :: (Word, Word) -> [Word]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1Mso [Occ=Once!] :: (Word, Word)) ->
                 case ds_d1Mso of { (m_a1KUp [Occ=Once], n_a1KUq [Occ=Once]) ->
                 GHC.Enum.$fEnumWord_$cenumFromTo m_a1KUp n_a1KUq
                 }}]
GHC.Arr.$fIxWord_$crange
  = \ (ds_d1Mso :: (Word, Word)) ->
      case ds_d1Mso of { (m_a1KUp, n_a1KUq) ->
      GHC.Enum.$fEnumWord_$cenumFromTo m_a1KUp n_a1KUq
      }

-- RHS size: {terms: 16, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$cunsafeIndex :: (Word, Word) -> Word -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),A)><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1Mst [Occ=Once!] :: (Word, Word))
                 (i_a1KUs [Occ=Once!] :: Word) ->
                 case ds_d1Mst of { (m_a1KUr [Occ=Once!], _ [Occ=Dead]) ->
                 case i_a1KUs of { W# x#_i1MxN [Occ=Once] ->
                 case m_a1KUr of { W# y#_i1MxR [Occ=Once] ->
                 GHC.Types.I# (word2Int# (minusWord# x#_i1MxN y#_i1MxR))
                 }
                 }
                 }}]
GHC.Arr.$fIxWord_$cunsafeIndex
  = \ (ds_d1Mst :: (Word, Word)) (i_a1KUs :: Word) ->
      case ds_d1Mst of { (m_a1KUr, ds1_d1Msz) ->
      case i_a1KUs of { W# x#_i1MxN ->
      case m_a1KUr of { W# y#_i1MxR ->
      GHC.Types.I# (word2Int# (minusWord# x#_i1MxN y#_i1MxR))
      }
      }
      }

-- RHS size: {terms: 25, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord_$cinRange :: (Word, Word) -> Word -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1MsA [Occ=Once!] :: (Word, Word))
                 (i_a1KUv [Occ=Once!] :: Word) ->
                 case ds_d1MsA of { (m_a1KUt [Occ=Once!], n_a1KUu [Occ=Once!]) ->
                 case m_a1KUt of { W# x_aRFM [Occ=Once] ->
                 case i_a1KUv of { W# y_aRFQ ->
                 case leWord# x_aRFM y_aRFQ of {
                   __DEFAULT -> GHC.Types.False;
                   1# ->
                     case n_a1KUu of { W# y1_XRQk [Occ=Once] ->
                     tagToEnum# @ Bool (leWord# y_aRFQ y1_XRQk)
                     }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxWord_$cinRange
  = \ (ds_d1MsA :: (Word, Word)) (i_a1KUv :: Word) ->
      case ds_d1MsA of { (m_a1KUt, n_a1KUu) ->
      case m_a1KUt of { W# x_aRFM ->
      case i_a1KUv of { W# y_aRFQ ->
      case leWord# x_aRFM y_aRFQ of {
        __DEFAULT -> GHC.Types.False;
        1# ->
          case n_a1KUu of { W# y1_XRQk ->
          tagToEnum# @ Bool (leWord# y_aRFQ y1_XRQk)
          }
      }
      }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxWord [InlPrag=NOUSERINLINE CONLIKE] :: Ix Word
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Word
                    GHC.Classes.$fOrdWord
                    GHC.Arr.$fIxWord_$crange
                    GHC.Arr.$fIxWord_$cindex
                    GHC.Arr.$fIxWord_$cunsafeIndex
                    GHC.Arr.$fIxWord_$cinRange
                    GHC.Arr.$fIxWord_$crangeSize
                    GHC.Arr.$fIxWord_$cunsafeRangeSize]
GHC.Arr.$fIxWord
  = GHC.Arr.C:Ix
      @ Word
      GHC.Classes.$fOrdWord
      GHC.Arr.$fIxWord_$crange
      GHC.Arr.$fIxWord_$cindex
      GHC.Arr.$fIxWord_$cunsafeIndex
      GHC.Arr.$fIxWord_$cinRange
      GHC.Arr.$fIxWord_$crangeSize
      GHC.Arr.$fIxWord_$cunsafeRangeSize

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$crange [InlPrag=INLINE (sat-args=1)]
  :: (Int, Int) -> [Int]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MsF [Occ=Once!] :: (Int, Int)) ->
                 case ds_d1MsF of { (m_a1KUw [Occ=Once], n_a1KUx [Occ=Once]) ->
                 GHC.Enum.$fEnumInt_$cenumFromTo m_a1KUw n_a1KUx
                 }}]
GHC.Arr.$fIxInt_$crange
  = \ (eta_B1 :: (Int, Int)) ->
      case eta_B1 of { (m_a1KUw, n_a1KUx) ->
      GHC.Enum.$fEnumInt_$cenumFromTo m_a1KUw n_a1KUx
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl24_r1XvB :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl24_r1XvB = "Int"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl25_r1XvC :: [Char]
[GblId]
lvl25_r1XvC = unpackCString# lvl24_r1XvB

-- RHS size: {terms: 8, types: 9, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: (Int, Int) -> Int -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),A)><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MsN [Occ=Once!] :: (Int, Int))
                 (i_a1KUA [Occ=Once] :: Int) ->
                 case ds_d1MsN of { (m_a1KUy [Occ=Once], _ [Occ=Dead]) ->
                 GHC.Num.$fNumInt_$c- i_a1KUA m_a1KUy
                 }}]
GHC.Arr.$fIxInt_$cunsafeIndex
  = \ (eta_B2 :: (Int, Int)) (eta1_B1 :: Int) ->
      case eta_B2 of { (m_a1KUy, _n_a1KUz) ->
      GHC.Num.$fNumInt_$c- eta1_B1 m_a1KUy
      }

-- RHS size: {terms: 25, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$cinRange [InlPrag=INLINE (sat-args=2)]
  :: (Int, Int) -> Int -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U(U))><S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1MsS [Occ=Once!] :: (Int, Int))
                 (ds1_d1MsT [Occ=Once!] :: Int) ->
                 case ds_d1MsS of
                 { (ds2_d1Mt4 [Occ=Once!], ds3_d1Mt5 [Occ=Once!]) ->
                 case ds2_d1Mt4 of { I# m_a1KUD [Occ=Once] ->
                 case ds3_d1Mt5 of { I# n_a1KUE [Occ=Once] ->
                 case ds1_d1MsT of { I# i_a1KUF ->
                 case <=# m_a1KUD i_a1KUF of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> tagToEnum# @ Bool (<=# i_a1KUF n_a1KUE)
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxInt_$cinRange
  = \ (ds_d1MsS :: (Int, Int)) (ds1_d1MsT :: Int) ->
      case ds_d1MsS of { (ds2_d1Mt4, ds3_d1Mt5) ->
      case ds2_d1Mt4 of { I# m_a1KUD ->
      case ds3_d1Mt5 of { I# n_a1KUE ->
      case ds1_d1MsT of { I# i_a1KUF ->
      case <=# m_a1KUD i_a1KUF of {
        __DEFAULT -> GHC.Types.False;
        1# -> tagToEnum# @ Bool (<=# i_a1KUF n_a1KUE)
      }
      }
      }
      }
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$crange [InlPrag=INLINE (sat-args=1)]
  :: (Char, Char) -> [Char]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mt6 [Occ=Once!] :: (Char, Char)) ->
                 case ds_d1Mt6 of { (m_a1KUG [Occ=Once], n_a1KUH [Occ=Once]) ->
                 GHC.Enum.$fEnumChar_$cenumFromTo m_a1KUG n_a1KUH
                 }}]
GHC.Arr.$fIxChar_$crange
  = \ (eta_B1 :: (Char, Char)) ->
      case eta_B1 of { (m_a1KUG, n_a1KUH) ->
      GHC.Enum.$fEnumChar_$cenumFromTo m_a1KUG n_a1KUH
      }

-- RHS size: {terms: 17, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$cunsafeIndex [InlPrag=INLINE (sat-args=2)]
  :: (Char, Char) -> Char -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),A)><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d1Mte [Occ=Once!] :: (Char, Char))
                 (i_a1KUK [Occ=Once!] :: Char) ->
                 case ds_d1Mte of { (m_a1KUI [Occ=Once!], _ [Occ=Dead]) ->
                 case i_a1KUK of { C# c#_i1MwB [Occ=Once] ->
                 case m_a1KUI of { C# c#1_X1MEu [Occ=Once] ->
                 GHC.Types.I# (-# (ord# c#_i1MwB) (ord# c#1_X1MEu))
                 }
                 }
                 }}]
GHC.Arr.$fIxChar_$cunsafeIndex
  = \ (eta_B2 :: (Char, Char)) (eta1_B1 :: Char) ->
      case eta_B2 of { (m_a1KUI, _n_a1KUJ) ->
      case eta1_B1 of { C# c#_i1MwB ->
      case m_a1KUI of { C# c#1_X1MEu ->
      GHC.Types.I# (-# (ord# c#_i1MwB) (ord# c#1_X1MEu))
      }
      }
      }

-- RHS size: {terms: 25, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$cinRange :: (Char, Char) -> Char -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d1Mtj [Occ=Once!] :: (Char, Char))
                 (i_a1KUP [Occ=Once!] :: Char) ->
                 case ds_d1Mtj of { (m_a1KUN [Occ=Once!], n_a1KUO [Occ=Once!]) ->
                 case m_a1KUN of { C# c1_aA05 [Occ=Once] ->
                 case i_a1KUP of { C# c2_aA09 ->
                 case leChar# c1_aA05 c2_aA09 of {
                   __DEFAULT -> GHC.Types.False;
                   1# ->
                     case n_a1KUO of { C# c4_XA89 [Occ=Once] ->
                     tagToEnum# @ Bool (leChar# c2_aA09 c4_XA89)
                     }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxChar_$cinRange
  = \ (ds_d1Mtj :: (Char, Char)) (i_a1KUP :: Char) ->
      case ds_d1Mtj of { (m_a1KUN, n_a1KUO) ->
      case m_a1KUN of { C# c1_aA05 ->
      case i_a1KUP of { C# c2_aA09 ->
      case leChar# c1_aA05 c2_aA09 of {
        __DEFAULT -> GHC.Types.False;
        1# ->
          case n_a1KUO of { C# c4_XA89 ->
          tagToEnum# @ Bool (leChar# c2_aA09 c4_XA89)
          }
      }
      }
      }
      }

-- RHS size: {terms: 16, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$cunsafeRangeSize :: (Int, Int) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRo [Occ=Once!] :: (Int, Int)) ->
                 case b_a1KRo of { (_l_a1KRp [Occ=Once!], h_a1KRq [Occ=Once!]) ->
                 case h_a1KRq of { I# x_i1AMw [Occ=Once] ->
                 case _l_a1KRp of { I# y_i1AMA [Occ=Once] ->
                 GHC.Types.I# (+# (-# x_i1AMw y_i1AMA) 1#)
                 }
                 }
                 }}]
GHC.Arr.$fIxInt_$cunsafeRangeSize
  = \ (b_a1KRo :: (Int, Int)) ->
      case b_a1KRo of { (_l_a1KRp, h_a1KRq) ->
      case h_a1KRq of { I# x_i1AMw ->
      case _l_a1KRp of { I# y_i1AMA ->
      GHC.Types.I# (+# (-# x_i1AMw y_i1AMA) 1#)
      }
      }
      }

-- RHS size: {terms: 23, types: 13, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$crangeSize :: (Int, Int) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (b_a1KRl [Occ=Once!] :: (Int, Int)) ->
                 case b_a1KRl of { (_l_a1KRm [Occ=Once!], h_a1KRn [Occ=Once!]) ->
                 case _l_a1KRm of { I# m_a1KUD ->
                 case h_a1KRn of { I# n_a1KUE ->
                 case <=# m_a1KUD n_a1KUE of {
                   __DEFAULT -> GHC.Arr.$fIxInt1;
                   1# -> GHC.Types.I# (+# (-# n_a1KUE m_a1KUD) 1#)
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxInt_$crangeSize
  = \ (b_a1KRl :: (Int, Int)) ->
      case b_a1KRl of { (_l_a1KRm, h_a1KRn) ->
      case _l_a1KRm of { I# m_a1KUD ->
      case h_a1KRn of { I# n_a1KUE ->
      case <=# m_a1KUD n_a1KUE of {
        __DEFAULT -> GHC.Arr.$fIxInt1;
        1# -> GHC.Types.I# (+# (-# n_a1KUE m_a1KUD) 1#)
      }
      }
      }
      }

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl26_r1XvD :: [Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
lvl26_r1XvD
  = GHC.Types.: @ Char GHC.Show.$fShow(,)2 (GHC.Types.[] @ Char)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl27_r1XvE :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl27_r1XvE = "Ix{"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl28_r1XvF :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl28_r1XvF = "}.index: Index "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl29_r1XvG :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl29_r1XvG = " out of range "#

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
lvl30_r1XvH :: [Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
lvl30_r1XvH = GHC.Types.: @ Char GHC.Show.$fShow(,)2 lvl26_r1XvD

-- RHS size: {terms: 41, types: 23, coercions: 0, joins: 0/0}
GHC.Arr.$windexError [InlPrag=NOINLINE]
  :: forall a b. Show a => a -> a -> a -> String -> b
[GblId,
 Arity=5,
 Str=<B,U(C(C1(U)),A,A)><B,U><B,U><B,U><B,1*U>x,
 Unf=OtherCon []]
GHC.Arr.$windexError
  = \ (@ a_s1Tr4)
      (@ b_s1Tr5)
      (w_s1Tr6 :: Show a_s1Tr4)
      (ww_s1Trc :: a_s1Tr4)
      (ww1_s1Trd :: a_s1Tr4)
      (w1_s1Tr8 :: a_s1Tr4)
      (w2_s1Tr9 :: String) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ b_s1Tr5
        (unpackAppendCString#
           lvl27_r1XvE
           (++
              @ Char
              w2_s1Tr9
              (unpackAppendCString#
                 lvl28_r1XvF
                 (GHC.Types.:
                    @ Char
                    GHC.Show.$fShow(,)4
                    (showsPrec
                       @ a_s1Tr4
                       w_s1Tr6
                       GHC.Arr.$fIxInt1
                       w1_s1Tr8
                       (GHC.Types.:
                          @ Char
                          GHC.Show.$fShow(,)2
                          (unpackAppendCString#
                             lvl29_r1XvG
                             (GHC.Types.:
                                @ Char
                                GHC.Show.$fShow(,)4
                                (GHC.Types.:
                                   @ Char
                                   GHC.Show.$fShow(,)4
                                   (GHC.Show.$fShow(,)_go1
                                      (GHC.Types.:
                                         @ ShowS
                                         (showsPrec @ a_s1Tr4 w_s1Tr6 GHC.Show.$fShow(,)1 ww_s1Trc)
                                         (GHC.Types.:
                                            @ ShowS
                                            (showsPrec
                                               @ a_s1Tr4 w_s1Tr6 GHC.Show.$fShow(,)1 ww1_s1Trd)
                                            (GHC.Types.[] @ ShowS)))
                                      lvl30_r1XvH))))))))))

-- RHS size: {terms: 15, types: 18, coercions: 0, joins: 0/0}
indexError [InlPrag=NOUSERINLINE[0]]
  :: forall a b. Show a => (a, a) -> a -> String -> b
[GblId,
 Arity=4,
 Str=<B,U(C(C1(U)),A,A)><B,1*U(U,U)><B,U><B,1*U>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1Tr4)
                 (@ b_s1Tr5)
                 (w_s1Tr6 [Occ=Once] :: Show a_s1Tr4)
                 (w1_s1Tr7 [Occ=Once!] :: (a_s1Tr4, a_s1Tr4))
                 (w2_s1Tr8 [Occ=Once] :: a_s1Tr4)
                 (w3_s1Tr9 [Occ=Once] :: String) ->
                 case w1_s1Tr7 of { (ww1_s1Trc [Occ=Once], ww2_s1Trd [Occ=Once]) ->
                 GHC.Arr.$windexError
                   @ a_s1Tr4 @ b_s1Tr5 w_s1Tr6 ww1_s1Trc ww2_s1Trd w2_s1Tr8 w3_s1Tr9
                 }}]
indexError
  = \ (@ a_s1Tr4)
      (@ b_s1Tr5)
      (w_s1Tr6 :: Show a_s1Tr4)
      (w1_s1Tr7 :: (a_s1Tr4, a_s1Tr4))
      (w2_s1Tr8 :: a_s1Tr4)
      (w3_s1Tr9 :: String) ->
      case w1_s1Tr7 of { (ww1_s1Trc, ww2_s1Trd) ->
      GHC.Arr.$windexError
        @ a_s1Tr4 @ b_s1Tr5 w_s1Tr6 ww1_s1Trc ww2_s1Trd w2_s1Tr8 w3_s1Tr9
      }

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
$wlvl_r1XvI :: Int -> Int -> Int -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
$wlvl_r1XvI
  = \ (ww_s1Trk :: Int) (ww1_s1Trl :: Int) (w_s1Trh :: Int) ->
      GHC.Arr.$windexError
        @ Int
        @ Int
        GHC.Show.$fShowInt
        ww_s1Trk
        ww1_s1Trl
        w_s1Trh
        lvl25_r1XvC

-- RHS size: {terms: 38, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Int, Int) -> Int -> Int
[GblId,
 Arity=2,
 Str=<S(S(S)S(S)),1*U(1*U(U),1*U(U))><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KUB [Occ=Once!] :: (Int, Int))
                 (i_a1KUC [Occ=Once!] :: Int) ->
                 case b_a1KUB of wild_X3t
                 { (ds_d1Mt4 [Occ=Once!], ds1_d1Mt5 [Occ=Once!]) ->
                 case ds_d1Mt4 of { I# m_a1KUD ->
                 case ds1_d1Mt5 of { I# n_a1KUE [Occ=Once] ->
                 case i_a1KUC of wild3_Xa { I# i1_a1KUF ->
                 join {
                   $j_s1NDF [Occ=Once*T[0]] :: Int
                   [LclId[JoinId(0)]]
                   $j_s1NDF
                     = indexError
                         @ Int
                         @ Int
                         GHC.Show.$fShowInt
                         wild_X3t
                         wild3_Xa
                         (build
                            @ Char
                            (\ (@ b1_i1AKE) -> unpackFoldrCString# @ b1_i1AKE "Int"#)) } in
                 case <=# m_a1KUD i1_a1KUF of {
                   __DEFAULT -> jump $j_s1NDF;
                   1# ->
                     case <=# i1_a1KUF n_a1KUE of {
                       __DEFAULT -> jump $j_s1NDF;
                       1# -> GHC.Types.I# (-# i1_a1KUF m_a1KUD)
                     }
                 }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxInt_$cindex
  = \ (eta_X7N :: (Int, Int)) (eta1_Xfz :: Int) ->
      case eta_X7N of { (ds_d1Mt4, ds1_d1Mt5) ->
      case ds_d1Mt4 of wild1_X6 { I# m_a1KUD ->
      case ds1_d1Mt5 of wild2_X8 { I# n_a1KUE ->
      case eta1_Xfz of wild3_Xa { I# i_a1KUF ->
      case <=# m_a1KUD i_a1KUF of {
        __DEFAULT -> $wlvl_r1XvI wild1_X6 wild2_X8 wild3_Xa;
        1# ->
          case <=# i_a1KUF n_a1KUE of {
            __DEFAULT -> $wlvl_r1XvI wild1_X6 wild2_X8 wild3_Xa;
            1# -> GHC.Types.I# (-# i_a1KUF m_a1KUD)
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInt [InlPrag=NOUSERINLINE CONLIKE] :: Ix Int
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Int
                    GHC.Classes.$fOrdInt
                    GHC.Arr.$fIxInt_$crange
                    GHC.Arr.$fIxInt_$cindex
                    GHC.Arr.$fIxInt_$cunsafeIndex
                    GHC.Arr.$fIxInt_$cinRange
                    GHC.Arr.$fIxInt_$crangeSize
                    GHC.Arr.$fIxInt_$cunsafeRangeSize]
GHC.Arr.$fIxInt
  = GHC.Arr.C:Ix
      @ Int
      GHC.Classes.$fOrdInt
      GHC.Arr.$fIxInt_$crange
      GHC.Arr.$fIxInt_$cindex
      GHC.Arr.$fIxInt_$cunsafeIndex
      GHC.Arr.$fIxInt_$cinRange
      GHC.Arr.$fIxInt_$crangeSize
      GHC.Arr.$fIxInt_$cunsafeRangeSize

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
$wlvl1_r1XvJ :: Ordering -> Ordering -> Ordering -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
$wlvl1_r1XvJ
  = \ (ww_s1Trs :: Ordering)
      (ww1_s1Trt :: Ordering)
      (w_s1Trp :: Ordering) ->
      GHC.Arr.$windexError
        @ Ordering
        @ Int
        GHC.Show.$fShowOrdering
        ww_s1Trs
        ww1_s1Trt
        w_s1Trp
        lvl20_r1Xvx

-- RHS size: {terms: 45, types: 14, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Ordering, Ordering) -> Ordering -> Int
[GblId,
 Arity=2,
 Str=<S(SL),1*U(U,U)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KU1 :: (Ordering, Ordering)) (i_a1KU2 :: Ordering) ->
                 case GHC.Arr.$fIxOrdering_$cinRange b_a1KU1 i_a1KU2 of {
                   False ->
                     indexError
                       @ Ordering
                       @ Int
                       GHC.Show.$fShowOrdering
                       b_a1KU1
                       i_a1KU2
                       (build
                          @ Char
                          (\ (@ b1_i1AKE) -> unpackFoldrCString# @ b1_i1AKE "Ordering"#));
                   True -> GHC.Arr.$fIxOrdering_$cunsafeIndex b_a1KU1 i_a1KU2
                 }}]
GHC.Arr.$fIxOrdering_$cindex
  = \ (eta_B2 :: (Ordering, Ordering)) (eta1_B1 :: Ordering) ->
      case eta_B2 of { (ww1_s1TqG, ww2_s1TqH) ->
      case GHC.Arr.$w$cinRange ww1_s1TqG ww2_s1TqH eta1_B1 of {
        False -> $wlvl1_r1XvJ ww1_s1TqG ww2_s1TqH eta1_B1;
        True ->
          case eta1_B1 of {
            LT ->
              case ww1_s1TqG of {
                LT -> GHC.Arr.$fIxInt1;
                EQ -> lvl22_r1Xvz;
                GT -> lvl23_r1XvA
              };
            EQ ->
              case ww1_s1TqG of {
                LT -> lvl17_r1Xvu;
                EQ -> GHC.Arr.$fIxInt1;
                GT -> lvl22_r1Xvz
              };
            GT ->
              case ww1_s1TqG of {
                LT -> lvl18_r1Xvv;
                EQ -> lvl17_r1Xvu;
                GT -> GHC.Arr.$fIxInt1
              }
          }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxOrdering [InlPrag=NOUSERINLINE CONLIKE] :: Ix Ordering
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Ordering
                    GHC.Classes.$fOrdOrdering
                    GHC.Arr.$fIxOrdering_$crange
                    GHC.Arr.$fIxOrdering_$cindex
                    GHC.Arr.$fIxOrdering_$cunsafeIndex
                    GHC.Arr.$fIxOrdering_$cinRange
                    GHC.Arr.$fIxOrdering_$crangeSize
                    GHC.Arr.$fIxOrdering_$cunsafeRangeSize]
GHC.Arr.$fIxOrdering
  = GHC.Arr.C:Ix
      @ Ordering
      GHC.Classes.$fOrdOrdering
      GHC.Arr.$fIxOrdering_$crange
      GHC.Arr.$fIxOrdering_$cindex
      GHC.Arr.$fIxOrdering_$cunsafeIndex
      GHC.Arr.$fIxOrdering_$cinRange
      GHC.Arr.$fIxOrdering_$crangeSize
      GHC.Arr.$fIxOrdering_$cunsafeRangeSize

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
$wlvl2_r1XvK :: Bool -> Bool -> Bool -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
$wlvl2_r1XvK
  = \ (ww_s1TrA :: Bool) (ww1_s1TrB :: Bool) (w_s1Trx :: Bool) ->
      GHC.Arr.$windexError
        @ Bool
        @ Int
        GHC.Show.$fShowBool
        ww_s1TrA
        ww1_s1TrB
        w_s1Trx
        lvl16_r1Xvt

-- RHS size: {terms: 5, types: 1, coercions: 0, joins: 0/0}
lvl31_r1XvL :: Bool -> Int
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
lvl31_r1XvL
  = \ (u_a1KUd :: Bool) ->
      $wlvl2_r1XvK GHC.Types.True u_a1KUd GHC.Types.False

-- RHS size: {terms: 5, types: 1, coercions: 0, joins: 0/0}
lvl32_r1XvM :: Bool -> Int
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
lvl32_r1XvM
  = \ (l_a1KUc :: Bool) ->
      $wlvl2_r1XvK l_a1KUc GHC.Types.False GHC.Types.True

-- RHS size: {terms: 34, types: 15, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Bool, Bool) -> Bool -> Int
[GblId,
 Arity=2,
 Str=<S(SS),1*U(1*U,U)><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KUa [Occ=Once!] :: (Bool, Bool)) (i_a1KUb :: Bool) ->
                 case b_a1KUa of wild_X3C { (l_a1KUc, u_a1KUd [Occ=Once*]) ->
                 join {
                   $j_s1ORs [Occ=Once*T[0]] :: Int
                   [LclId[JoinId(0)]]
                   $j_s1ORs
                     = indexError
                         @ Bool
                         @ Int
                         GHC.Show.$fShowBool
                         wild_X3C
                         i_a1KUb
                         (build
                            @ Char
                            (\ (@ b1_i1AKE) -> unpackFoldrCString# @ b1_i1AKE "Bool"#)) } in
                 join {
                   $j1_s1ORt [Occ=Once*T[0]] :: Int
                   [LclId[JoinId(0)]]
                   $j1_s1ORt
                     = case i_a1KUb of {
                         False ->
                           case l_a1KUc of {
                             False -> GHC.Types.I# 0#;
                             True -> GHC.Types.I# -1#
                           };
                         True ->
                           case l_a1KUc of {
                             False -> GHC.Types.I# 1#;
                             True -> GHC.Types.I# 0#
                           }
                       } } in
                 case i_a1KUb of {
                   False ->
                     case l_a1KUc of {
                       False -> case u_a1KUd of { __DEFAULT -> jump $j1_s1ORt };
                       True -> jump $j_s1ORs
                     };
                   True ->
                     case l_a1KUc of { __DEFAULT ->
                     case u_a1KUd of {
                       False -> jump $j_s1ORs;
                       True -> jump $j1_s1ORt
                     }
                     }
                 }
                 }}]
GHC.Arr.$fIxBool_$cindex
  = \ (eta_B2 :: (Bool, Bool)) (eta1_B1 :: Bool) ->
      case eta_B2 of { (l_a1KUc, u_a1KUd) ->
      case eta1_B1 of {
        False ->
          case l_a1KUc of {
            False -> case u_a1KUd of { __DEFAULT -> GHC.Arr.$fIxInt1 };
            True -> lvl31_r1XvL u_a1KUd
          };
        True ->
          case l_a1KUc of wild2_X1MIY { __DEFAULT ->
          case u_a1KUd of {
            False -> lvl32_r1XvM wild2_X1MIY;
            True ->
              case wild2_X1MIY of {
                False -> lvl17_r1Xvu;
                True -> GHC.Arr.$fIxInt1
              }
          }
          }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxBool [InlPrag=NOUSERINLINE CONLIKE] :: Ix Bool
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Bool
                    GHC.Classes.$fOrdBool
                    GHC.Arr.$fIxBool_$crange
                    GHC.Arr.$fIxBool_$cindex
                    GHC.Arr.$fIxBool_$cunsafeIndex
                    GHC.Arr.$fIxBool_$cinRange
                    GHC.Arr.$fIxBool_$cunsafeRangeSize
                    GHC.Arr.$fIxBool_$cunsafeRangeSize]
GHC.Arr.$fIxBool
  = GHC.Arr.C:Ix
      @ Bool
      GHC.Classes.$fOrdBool
      GHC.Arr.$fIxBool_$crange
      GHC.Arr.$fIxBool_$cindex
      GHC.Arr.$fIxBool_$cunsafeIndex
      GHC.Arr.$fIxBool_$cinRange
      GHC.Arr.$fIxBool_$cunsafeRangeSize
      GHC.Arr.$fIxBool_$cunsafeRangeSize

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
$wlvl3_r1XvN :: Integer -> Integer -> Integer -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
$wlvl3_r1XvN
  = \ (ww_s1TrI :: Integer)
      (ww1_s1TrJ :: Integer)
      (w_s1TrF :: Integer) ->
      GHC.Arr.$windexError
        @ Integer
        @ Int
        GHC.Show.$fShowInteger
        ww_s1TrI
        ww1_s1TrJ
        w_s1TrF
        lvl14_r1Xvr

-- RHS size: {terms: 33, types: 12, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Integer, Integer) -> Integer -> Int
[GblId,
 Arity=2,
 Str=<S(SS),1*U(U,U)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KUk [Occ=Once!] :: (Integer, Integer))
                 (i_a1KUl :: Integer) ->
                 case b_a1KUk of wild_X3z { (m_a1KUm, n_a1KUn [Occ=Once]) ->
                 join {
                   $j_s1NIo [Occ=Once*T[0]] :: Int
                   [LclId[JoinId(0)]]
                   $j_s1NIo
                     = indexError
                         @ Integer
                         @ Int
                         GHC.Show.$fShowInteger
                         wild_X3z
                         i_a1KUl
                         (build
                            @ Char
                            (\ (@ b1_i1AKE) -> unpackFoldrCString# @ b1_i1AKE "Integer"#)) } in
                 case leInteger# m_a1KUm i_a1KUl of {
                   __DEFAULT -> jump $j_s1NIo;
                   1# ->
                     case leInteger# i_a1KUl n_a1KUn of {
                       __DEFAULT -> jump $j_s1NIo;
                       1# ->
                         case integerToInt (minusInteger i_a1KUl m_a1KUm) of wild3_i1AOp
                         { __DEFAULT ->
                         GHC.Types.I# wild3_i1AOp
                         }
                     }
                 }
                 }}]
GHC.Arr.$fIxInteger_$cindex
  = \ (eta_B2 :: (Integer, Integer)) (eta1_B1 :: Integer) ->
      case eta_B2 of { (m_a1KUm, n_a1KUn) ->
      case leInteger# m_a1KUm eta1_B1 of {
        __DEFAULT -> $wlvl3_r1XvN m_a1KUm n_a1KUn eta1_B1;
        1# ->
          case leInteger# eta1_B1 n_a1KUn of {
            __DEFAULT -> $wlvl3_r1XvN m_a1KUm n_a1KUn eta1_B1;
            1# ->
              case integerToInt (minusInteger eta1_B1 m_a1KUm) of wild3_i1AOp
              { __DEFAULT ->
              GHC.Types.I# wild3_i1AOp
              }
          }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxInteger [InlPrag=NOUSERINLINE CONLIKE] :: Ix Integer
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Integer
                    integer-simple-0.1.1.1:GHC.Integer.Type.$fOrdInteger
                    GHC.Arr.$fIxInteger_$crange
                    GHC.Arr.$fIxInteger_$cindex
                    GHC.Arr.$fIxInteger_$cunsafeIndex
                    GHC.Arr.$fIxInteger_$cinRange
                    GHC.Arr.$fIxInteger_$crangeSize
                    GHC.Arr.$fIxInteger_$cunsafeRangeSize]
GHC.Arr.$fIxInteger
  = GHC.Arr.C:Ix
      @ Integer
      integer-simple-0.1.1.1:GHC.Integer.Type.$fOrdInteger
      GHC.Arr.$fIxInteger_$crange
      GHC.Arr.$fIxInteger_$cindex
      GHC.Arr.$fIxInteger_$cunsafeIndex
      GHC.Arr.$fIxInteger_$cinRange
      GHC.Arr.$fIxInteger_$crangeSize
      GHC.Arr.$fIxInteger_$cunsafeRangeSize

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
$wlvl4_r1XvO :: Char -> Char -> Char -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
$wlvl4_r1XvO
  = \ (ww_s1TrQ :: Char) (ww1_s1TrR :: Char) (w_s1TrN :: Char) ->
      GHC.Arr.$windexError
        @ Char
        @ Int
        GHC.Show.$fShowChar
        ww_s1TrQ
        ww1_s1TrR
        w_s1TrN
        lvl12_r1Xvp

-- RHS size: {terms: 40, types: 17, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (Char, Char) -> Char -> Int
[GblId,
 Arity=2,
 Str=<S(S(S)S(S)),1*U(1*U(U),U(U))><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KUL [Occ=Once!] :: (Char, Char))
                 (i_a1KUM [Occ=Once!] :: Char) ->
                 case b_a1KUL of wild_X3q
                 { (m_a1KUN [Occ=Once!], n_a1KUO [Occ=Once!]) ->
                 case m_a1KUN of { C# c1_aA05 ->
                 case i_a1KUM of wild2_aA07 { C# c2_aA09 ->
                 join {
                   $j_s1NIM [Occ=Once*T[0]] :: Int
                   [LclId[JoinId(0)]]
                   $j_s1NIM
                     = indexError
                         @ Char
                         @ Int
                         GHC.Show.$fShowChar
                         wild_X3q
                         wild2_aA07
                         (build
                            @ Char
                            (\ (@ b1_i1AKE) -> unpackFoldrCString# @ b1_i1AKE "Char"#)) } in
                 case leChar# c1_aA05 c2_aA09 of {
                   __DEFAULT -> jump $j_s1NIM;
                   1# ->
                     case n_a1KUO of { C# c4_XA89 [Occ=Once] ->
                     case leChar# c2_aA09 c4_XA89 of {
                       __DEFAULT -> jump $j_s1NIM;
                       1# -> GHC.Types.I# (-# (ord# c2_aA09) (ord# c1_aA05))
                     }
                     }
                 }
                 }
                 }
                 }}]
GHC.Arr.$fIxChar_$cindex
  = \ (eta_B2 :: (Char, Char)) (eta1_B1 :: Char) ->
      case eta_B2 of { (m_a1KUN, n_a1KUO) ->
      case m_a1KUN of wild1_aA03 { C# c1_aA05 ->
      case eta1_B1 of wild2_aA07 { C# c2_aA09 ->
      case leChar# c1_aA05 c2_aA09 of {
        __DEFAULT -> $wlvl4_r1XvO wild1_aA03 n_a1KUO wild2_aA07;
        1# ->
          case n_a1KUO of wild3_XA85 { C# c4_XA89 ->
          case leChar# c2_aA09 c4_XA89 of {
            __DEFAULT -> $wlvl4_r1XvO wild1_aA03 wild3_XA85 wild2_aA07;
            1# -> GHC.Types.I# (-# (ord# c2_aA09) (ord# c1_aA05))
          }
          }
      }
      }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.Arr.$fIxChar [InlPrag=NOUSERINLINE CONLIKE] :: Ix Char
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: Char
                    GHC.Classes.$fOrdChar
                    GHC.Arr.$fIxChar_$crange
                    GHC.Arr.$fIxChar_$cindex
                    GHC.Arr.$fIxChar_$cunsafeIndex
                    GHC.Arr.$fIxChar_$cinRange
                    GHC.Arr.$fIxChar_$crangeSize
                    GHC.Arr.$fIxChar_$cunsafeRangeSize]
GHC.Arr.$fIxChar
  = GHC.Arr.C:Ix
      @ Char
      GHC.Classes.$fOrdChar
      GHC.Arr.$fIxChar_$crange
      GHC.Arr.$fIxChar_$cindex
      GHC.Arr.$fIxChar_$cunsafeIndex
      GHC.Arr.$fIxChar_$cinRange
      GHC.Arr.$fIxChar_$crangeSize
      GHC.Arr.$fIxChar_$cunsafeRangeSize

-- RHS size: {terms: 29, types: 12, coercions: 0, joins: 0/0}
$wlvl5_r1XvP :: Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl5_r1XvP
  = \ (ww_s1Ts1 :: Int#)
      (ww1_s1Ts3 :: Int)
      (ww2_s1Ts4 :: Int)
      (ww3_s1Tsb :: Int#)
      (ww4_s1Tsd :: Int)
      (ww5_s1Tse :: Int) ->
      case ==# ww_s1Ts1 ww3_s1Tsb of {
        __DEFAULT -> GHC.Types.False;
        1# ->
          case ww1_s1Ts3 of { I# x_X2dg ->
          case ww4_s1Tsd of { I# y_X2dp ->
          case ==# x_X2dg y_X2dp of {
            __DEFAULT -> GHC.Types.False;
            1# -> eqInt ww2_s1Ts4 ww5_s1Tse
          }
          }
          }
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl33_r1XvQ :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl33_r1XvQ
  = \ (w_s1TrU :: (Int, Int, Int)) (w1_s1TrV :: (Int, Int, Int)) ->
      case w_s1TrU of { (ww1_s1TrY, ww2_s1Ts3, ww3_s1Ts4) ->
      case ww1_s1TrY of { I# ww5_s1Ts1 ->
      case w1_s1TrV of { (ww7_s1Ts8, ww8_s1Tsd, ww9_s1Tse) ->
      case ww7_s1Ts8 of { I# ww11_s1Tsb ->
      $wlvl5_r1XvP
        ww5_s1Ts1 ww2_s1Ts3 ww3_s1Ts4 ww11_s1Tsb ww8_s1Tsd ww9_s1Tse
      }
      }
      }
      }

-- RHS size: {terms: 48, types: 37, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$fEq(,,)_$c/= [InlPrag=INLINE (sat-args=2)]
  :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a1Nq0 [Occ=Once] :: (Int, Int, Int))
                 (y_a1Nq1 [Occ=Once] :: (Int, Int, Int)) ->
                 case GHC.Classes.$fEq(,,)_$c==
                        @ Int
                        @ Int
                        @ Int
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEqInt
                        GHC.Classes.$fEqInt
                        x_a1Nq0
                        y_a1Nq1
                 of {
                   False -> GHC.Types.True;
                   True -> GHC.Types.False
                 }}]
GHC.Arr.$fIx(,,)_$s$fEq(,,)_$c/=
  = \ (x_a1Nq0 :: (Int, Int, Int)) (y_a1Nq1 :: (Int, Int, Int)) ->
      case x_a1Nq0 of { (ww1_a1Nqf, ww2_a1Nqg, ww3_a1Nqh) ->
      case y_a1Nq1 of { (ww5_a1Nqp, ww6_a1Nqq, ww7_a1Nqr) ->
      case ww1_a1Nqf of { I# x1_a22G ->
      case ww5_a1Nqp of { I# y1_a22K ->
      case ==# x1_a22G y1_a22K of {
        __DEFAULT -> GHC.Types.True;
        1# ->
          case ww2_a1Nqg of { I# x2_X2de ->
          case ww6_a1Nqq of { I# y2_X2dn ->
          case ==# x2_X2de y2_X2dn of {
            __DEFAULT -> GHC.Types.True;
            1# ->
              case ww3_a1Nqh of { I# x3_X2dr ->
              case ww7_a1Nqr of { I# y3_X2dA ->
              case ==# x3_X2dr y3_X2dA of {
                __DEFAULT -> GHC.Types.True;
                1# -> GHC.Types.False
              }
              }
              }
          }
          }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$fEq(,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq (Int, Int, Int)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: (Int, Int, Int)
                        GHC.Classes.$fEq(,,)_$c==
                          @ Int
                          @ Int
                          @ Int
                          GHC.Classes.$fEqInt
                          GHC.Classes.$fEqInt
                          GHC.Classes.$fEqInt
                        GHC.Arr.$fIx(,,)_$s$fEq(,,)_$c/=]
GHC.Arr.$fIx(,,)_$s$fEq(,,)
  = GHC.Classes.C:Eq
      @ (Int, Int, Int) lvl33_r1XvQ GHC.Arr.$fIx(,,)_$s$fEq(,,)_$c/=

-- RHS size: {terms: 43, types: 14, coercions: 0, joins: 0/0}
$wlvl6_r1XvR
  :: Int# -> Int -> Int -> Int# -> Int -> Int -> Ordering
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl6_r1XvR
  = \ (ww_s1Tso :: Int#)
      (ww1_s1Tsq :: Int)
      (ww2_s1Tsr :: Int)
      (ww3_s1Tsy :: Int#)
      (ww4_s1TsA :: Int)
      (ww5_s1TsB :: Int) ->
      case <# ww_s1Tso ww3_s1Tsy of {
        __DEFAULT ->
          case ==# ww_s1Tso ww3_s1Tsy of {
            __DEFAULT -> GHC.Types.GT;
            1# ->
              case ww1_s1Tsq of { I# x#_XPZh ->
              case ww4_s1TsA of { I# y#_XPZr ->
              case <# x#_XPZh y#_XPZr of {
                __DEFAULT ->
                  case ==# x#_XPZh y#_XPZr of {
                    __DEFAULT -> GHC.Types.GT;
                    1# -> compareInt ww2_s1Tsr ww5_s1TsB
                  };
                1# -> GHC.Types.LT
              }
              }
              }
          };
        1# -> GHC.Types.LT
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl34_r1XvS :: (Int, Int, Int) -> (Int, Int, Int) -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl34_r1XvS
  = \ (w_s1Tsh :: (Int, Int, Int)) (w1_s1Tsi :: (Int, Int, Int)) ->
      case w_s1Tsh of { (ww1_s1Tsl, ww2_s1Tsq, ww3_s1Tsr) ->
      case ww1_s1Tsl of { I# ww5_s1Tso ->
      case w1_s1Tsi of { (ww7_s1Tsv, ww8_s1TsA, ww9_s1TsB) ->
      case ww7_s1Tsv of { I# ww11_s1Tsy ->
      $wlvl6_r1XvR
        ww5_s1Tso ww2_s1Tsq ww3_s1Tsr ww11_s1Tsy ww8_s1TsA ww9_s1TsB
      }
      }
      }
      }

-- RHS size: {terms: 43, types: 14, coercions: 0, joins: 0/0}
$wlvl7_r1XvT :: Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl7_r1XvT
  = \ (ww_s1TsL :: Int#)
      (ww1_s1TsN :: Int)
      (ww2_s1TsO :: Int)
      (ww3_s1TsV :: Int#)
      (ww4_s1TsX :: Int)
      (ww5_s1TsY :: Int) ->
      case <# ww_s1TsL ww3_s1TsV of {
        __DEFAULT ->
          case ==# ww_s1TsL ww3_s1TsV of {
            __DEFAULT -> GHC.Types.False;
            1# ->
              case ww1_s1TsN of { I# x#_XPZi ->
              case ww4_s1TsX of { I# y#_XPZs ->
              case <# x#_XPZi y#_XPZs of {
                __DEFAULT ->
                  case ==# x#_XPZi y#_XPZs of {
                    __DEFAULT -> GHC.Types.False;
                    1# -> ltInt ww2_s1TsO ww5_s1TsY
                  };
                1# -> GHC.Types.True
              }
              }
              }
          };
        1# -> GHC.Types.True
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl35_r1XvU :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl35_r1XvU
  = \ (w_s1TsE :: (Int, Int, Int)) (w1_s1TsF :: (Int, Int, Int)) ->
      case w_s1TsE of { (ww1_s1TsI, ww2_s1TsN, ww3_s1TsO) ->
      case ww1_s1TsI of { I# ww5_s1TsL ->
      case w1_s1TsF of { (ww7_s1TsS, ww8_s1TsX, ww9_s1TsY) ->
      case ww7_s1TsS of { I# ww11_s1TsV ->
      $wlvl7_r1XvT
        ww5_s1TsL ww2_s1TsN ww3_s1TsO ww11_s1TsV ww8_s1TsX ww9_s1TsY
      }
      }
      }
      }

-- RHS size: {terms: 54, types: 19, coercions: 0, joins: 0/0}
$wlvl8_r1XvV :: Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl8_r1XvV
  = \ (ww_s1Tt8 :: Int#)
      (ww1_s1Tta :: Int)
      (ww2_s1Ttb :: Int)
      (ww3_s1Tti :: Int#)
      (ww4_s1Ttk :: Int)
      (ww5_s1Ttl :: Int) ->
      case <# ww3_s1Tti ww_s1Tt8 of {
        __DEFAULT ->
          case ==# ww3_s1Tti ww_s1Tt8 of {
            __DEFAULT -> GHC.Types.True;
            1# ->
              case ww4_s1Ttk of { I# x#_XPZg ->
              case ww1_s1Tta of { I# y#_XPZq ->
              case <# x#_XPZg y#_XPZq of {
                __DEFAULT ->
                  case ==# x#_XPZg y#_XPZq of {
                    __DEFAULT -> GHC.Types.True;
                    1# ->
                      case ww5_s1Ttl of { I# x_alN9 ->
                      case ww2_s1Ttb of { I# y_alNd ->
                      case <# x_alN9 y_alNd of {
                        __DEFAULT -> GHC.Types.True;
                        1# -> GHC.Types.False
                      }
                      }
                      }
                  };
                1# -> GHC.Types.False
              }
              }
              }
          };
        1# -> GHC.Types.False
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl36_r1XvW :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl36_r1XvW
  = \ (w_s1Tt1 :: (Int, Int, Int)) (w1_s1Tt2 :: (Int, Int, Int)) ->
      case w_s1Tt1 of { (ww1_s1Tt5, ww2_s1Tta, ww3_s1Ttb) ->
      case ww1_s1Tt5 of { I# ww5_s1Tt8 ->
      case w1_s1Tt2 of { (ww7_s1Ttf, ww8_s1Ttk, ww9_s1Ttl) ->
      case ww7_s1Ttf of { I# ww11_s1Tti ->
      $wlvl8_r1XvV
        ww5_s1Tt8 ww2_s1Tta ww3_s1Ttb ww11_s1Tti ww8_s1Ttk ww9_s1Ttl
      }
      }
      }
      }

-- RHS size: {terms: 43, types: 14, coercions: 0, joins: 0/0}
$wlvl9_r1XvX :: Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl9_r1XvX
  = \ (ww_s1Ttv :: Int#)
      (ww1_s1Ttx :: Int)
      (ww2_s1Tty :: Int)
      (ww3_s1TtF :: Int#)
      (ww4_s1TtH :: Int)
      (ww5_s1TtI :: Int) ->
      case <# ww3_s1TtF ww_s1Ttv of {
        __DEFAULT ->
          case ==# ww3_s1TtF ww_s1Ttv of {
            __DEFAULT -> GHC.Types.False;
            1# ->
              case ww4_s1TtH of { I# x#_XPZh ->
              case ww1_s1Ttx of { I# y#_XPZr ->
              case <# x#_XPZh y#_XPZr of {
                __DEFAULT ->
                  case ==# x#_XPZh y#_XPZr of {
                    __DEFAULT -> GHC.Types.False;
                    1# -> ltInt ww5_s1TtI ww2_s1Tty
                  };
                1# -> GHC.Types.True
              }
              }
              }
          };
        1# -> GHC.Types.True
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl37_r1XvY :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl37_r1XvY
  = \ (w_s1Tto :: (Int, Int, Int)) (w1_s1Ttp :: (Int, Int, Int)) ->
      case w_s1Tto of { (ww1_s1Tts, ww2_s1Ttx, ww3_s1Tty) ->
      case ww1_s1Tts of { I# ww5_s1Ttv ->
      case w1_s1Ttp of { (ww7_s1TtC, ww8_s1TtH, ww9_s1TtI) ->
      case ww7_s1TtC of { I# ww11_s1TtF ->
      $wlvl9_r1XvX
        ww5_s1Ttv ww2_s1Ttx ww3_s1Tty ww11_s1TtF ww8_s1TtH ww9_s1TtI
      }
      }
      }
      }

-- RHS size: {terms: 54, types: 19, coercions: 0, joins: 0/0}
$wlvl10_r1XvZ :: Int# -> Int -> Int -> Int# -> Int -> Int -> Bool
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl10_r1XvZ
  = \ (ww_s1TtS :: Int#)
      (ww1_s1TtU :: Int)
      (ww2_s1TtV :: Int)
      (ww3_s1Tu2 :: Int#)
      (ww4_s1Tu4 :: Int)
      (ww5_s1Tu5 :: Int) ->
      case <# ww_s1TtS ww3_s1Tu2 of {
        __DEFAULT ->
          case ==# ww_s1TtS ww3_s1Tu2 of {
            __DEFAULT -> GHC.Types.True;
            1# ->
              case ww1_s1TtU of { I# x#_XPZi ->
              case ww4_s1Tu4 of { I# y#_XPZs ->
              case <# x#_XPZi y#_XPZs of {
                __DEFAULT ->
                  case ==# x#_XPZi y#_XPZs of {
                    __DEFAULT -> GHC.Types.True;
                    1# ->
                      case ww2_s1TtV of { I# x_alN9 ->
                      case ww5_s1Tu5 of { I# y_alNd ->
                      case <# x_alN9 y_alNd of {
                        __DEFAULT -> GHC.Types.True;
                        1# -> GHC.Types.False
                      }
                      }
                      }
                  };
                1# -> GHC.Types.False
              }
              }
              }
          };
        1# -> GHC.Types.False
      }

-- RHS size: {terms: 21, types: 26, coercions: 0, joins: 0/0}
lvl38_r1Xw0 :: (Int, Int, Int) -> (Int, Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl38_r1Xw0
  = \ (w_s1TtL :: (Int, Int, Int)) (w1_s1TtM :: (Int, Int, Int)) ->
      case w_s1TtL of { (ww1_s1TtP, ww2_s1TtU, ww3_s1TtV) ->
      case ww1_s1TtP of { I# ww5_s1TtS ->
      case w1_s1TtM of { (ww7_s1TtZ, ww8_s1Tu4, ww9_s1Tu5) ->
      case ww7_s1TtZ of { I# ww11_s1Tu2 ->
      $wlvl10_r1XvZ
        ww5_s1TtS ww2_s1TtU ww3_s1TtV ww11_s1Tu2 ww8_s1Tu4 ww9_s1Tu5
      }
      }
      }
      }

-- RHS size: {terms: 62, types: 39, coercions: 0, joins: 0/0}
lvl39_r1Xw1
  :: (Int, Int, Int) -> (Int, Int, Int) -> (Int, Int, Int)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(U(U),U(U),U(U))><S(S(S)LL),1*U(U(U),U(U),U(U))>m,
 Unf=OtherCon []]
lvl39_r1Xw1
  = \ (w_s1Tu8 :: (Int, Int, Int)) (w1_s1Tu9 :: (Int, Int, Int)) ->
      case w_s1Tu8 of ww_s1Tub { (ww1_s1Tuc, ww2_s1Tuh, ww3_s1Tui) ->
      case ww1_s1Tuc of { I# ww5_s1Tuf ->
      case w1_s1Tu9 of ww6_s1Tul { (ww7_s1Tum, ww8_s1Tur, ww9_s1Tus) ->
      case ww7_s1Tum of { I# ww11_s1Tup ->
      case <# ww11_s1Tup ww5_s1Tuf of {
        __DEFAULT ->
          case ==# ww11_s1Tup ww5_s1Tuf of {
            __DEFAULT -> ww6_s1Tul;
            1# ->
              case ww8_s1Tur of { I# x#_XPZj ->
              case ww2_s1Tuh of { I# y#_XPZt ->
              case <# x#_XPZj y#_XPZt of {
                __DEFAULT ->
                  case ==# x#_XPZj y#_XPZt of {
                    __DEFAULT -> ww6_s1Tul;
                    1# ->
                      case ww9_s1Tus of { I# x_alN9 ->
                      case ww3_s1Tui of { I# y_alNd ->
                      case <# x_alN9 y_alNd of {
                        __DEFAULT -> ww6_s1Tul;
                        1# -> ww_s1Tub
                      }
                      }
                      }
                  };
                1# -> ww_s1Tub
              }
              }
              }
          };
        1# -> ww_s1Tub
      }
      }
      }
      }
      }

-- RHS size: {terms: 62, types: 39, coercions: 0, joins: 0/0}
lvl40_r1Xw2
  :: (Int, Int, Int) -> (Int, Int, Int) -> (Int, Int, Int)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)LL),1*U(U(U),U(U),U(U))><S(S(S)LL),1*U(U(U),U(U),U(U))>m,
 Unf=OtherCon []]
lvl40_r1Xw2
  = \ (w_s1Tuy :: (Int, Int, Int)) (w1_s1Tuz :: (Int, Int, Int)) ->
      case w_s1Tuy of ww_s1TuB { (ww1_s1TuC, ww2_s1TuH, ww3_s1TuI) ->
      case ww1_s1TuC of { I# ww5_s1TuF ->
      case w1_s1Tuz of ww6_s1TuL { (ww7_s1TuM, ww8_s1TuR, ww9_s1TuS) ->
      case ww7_s1TuM of { I# ww11_s1TuP ->
      case <# ww11_s1TuP ww5_s1TuF of {
        __DEFAULT ->
          case ==# ww11_s1TuP ww5_s1TuF of {
            __DEFAULT -> ww_s1TuB;
            1# ->
              case ww8_s1TuR of { I# x#_XPZk ->
              case ww2_s1TuH of { I# y#_XPZu ->
              case <# x#_XPZk y#_XPZu of {
                __DEFAULT ->
                  case ==# x#_XPZk y#_XPZu of {
                    __DEFAULT -> ww_s1TuB;
                    1# ->
                      case ww9_s1TuS of { I# x_alN9 ->
                      case ww3_s1TuI of { I# y_alNd ->
                      case <# x_alN9 y_alNd of {
                        __DEFAULT -> ww_s1TuB;
                        1# -> ww6_s1TuL
                      }
                      }
                      }
                  };
                1# -> ww6_s1TuL
              }
              }
              }
          };
        1# -> ww6_s1TuL
      }
      }
      }
      }
      }

-- RHS size: {terms: 9, types: 4, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$fOrd(,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Ord (Int, Int, Int)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Ord TYPE: (Int, Int, Int)
                         GHC.Arr.$fIx(,,)_$s$fEq(,,)
                         GHC.Classes.$fOrd(,,)_$ccompare
                           @ Int
                           @ Int
                           @ Int
                           GHC.Classes.$fOrdInt
                           GHC.Classes.$fOrdInt
                           GHC.Classes.$fOrdInt
                         GHC.Classes.$fOrd(,,)_$c<
                           @ Int
                           @ Int
                           @ Int
                           GHC.Classes.$fOrdInt
                           GHC.Classes.$fOrdInt
                           GHC.Classes.$fOrdInt
                         \ (a1_a1Np5 [Occ=Once] :: (Int, Int, Int))
                           (b1_a1Np6 [Occ=Once] :: (Int, Int, Int)) ->
                           case GHC.Classes.$fOrd(,,)_$c<
                                  @ Int
                                  @ Int
                                  @ Int
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  b1_a1Np6
                                  a1_a1Np5
                           of {
                             False -> GHC.Types.True;
                             True -> GHC.Types.False
                           }
                         \ (a1_a1MuA [Occ=Once] :: (Int, Int, Int))
                           (b1_a1MuB [Occ=Once] :: (Int, Int, Int)) ->
                           GHC.Classes.$fOrd(,,)_$c<
                             @ Int
                             @ Int
                             @ Int
                             GHC.Classes.$fOrdInt
                             GHC.Classes.$fOrdInt
                             GHC.Classes.$fOrdInt
                             b1_a1MuB
                             a1_a1MuA
                         \ (a1_a1Now [Occ=Once] :: (Int, Int, Int))
                           (b1_a1Nox [Occ=Once] :: (Int, Int, Int)) ->
                           case GHC.Classes.$fOrd(,,)_$c<
                                  @ Int
                                  @ Int
                                  @ Int
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  a1_a1Now
                                  b1_a1Nox
                           of {
                             False -> GHC.Types.True;
                             True -> GHC.Types.False
                           }
                         \ (x_a1Noj :: (Int, Int, Int)) (y_a1Nok :: (Int, Int, Int)) ->
                           case GHC.Classes.$fOrd(,,)_$c<
                                  @ Int
                                  @ Int
                                  @ Int
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  y_a1Nok
                                  x_a1Noj
                           of {
                             False -> y_a1Nok;
                             True -> x_a1Noj
                           }
                         \ (x_a1No6 :: (Int, Int, Int)) (y_a1No7 :: (Int, Int, Int)) ->
                           case GHC.Classes.$fOrd(,,)_$c<
                                  @ Int
                                  @ Int
                                  @ Int
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  GHC.Classes.$fOrdInt
                                  y_a1No7
                                  x_a1No6
                           of {
                             False -> x_a1No6;
                             True -> y_a1No7
                           }]
GHC.Arr.$fIx(,,)_$s$fOrd(,,)
  = GHC.Classes.C:Ord
      @ (Int, Int, Int)
      GHC.Arr.$fIx(,,)_$s$fEq(,,)
      lvl34_r1XvS
      lvl35_r1XvU
      lvl36_r1XvW
      lvl37_r1XvY
      lvl38_r1Xw0
      lvl39_r1Xw1
      lvl40_r1Xw2

-- RHS size: {terms: 8, types: 4, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,)_$s$fIx(,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Ix (Int, Int, Int)
[GblId,
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: (Int, Int, Int)
                    GHC.Arr.$fIx(,,)_$s$fOrd(,,)
                    GHC.Arr.$fIx(,,)_$s$crange
                    GHC.Arr.$fIx(,,)_$s$cindex
                    GHC.Arr.$fIx(,,)_$s$cunsafeIndex
                    \ (ds_d1Mp7 [Occ=Once!] :: ((Int, Int, Int), (Int, Int, Int)))
                      (ds1_d1Mp8 [Occ=Once!] :: (Int, Int, Int)) ->
                      case ds_d1Mp7 of
                      { (ds2_d1Mpv [Occ=Once!], ds3_d1Mpw [Occ=Once!]) ->
                      case ds2_d1Mpv of
                      { (l1_a1KTs [Occ=Once!], l2_a1KTt [Occ=Once!],
                         l3_a1KTu [Occ=Once!]) ->
                      case ds3_d1Mpw of
                      { (u1_a1KTv [Occ=Once!], u2_a1KTw [Occ=Once!],
                         u3_a1KTx [Occ=Once!]) ->
                      case ds1_d1Mp8 of
                      { (i1_a1KTy [Occ=Once!], i2_a1KTz [Occ=Once!],
                         i3_a1KTA [Occ=Once!]) ->
                      case l1_a1KTs of { I# m_a1KUD [Occ=Once] ->
                      case u1_a1KTv of { I# n_a1KUE [Occ=Once] ->
                      case i1_a1KTy of { I# i_a1KUF ->
                      case <=# m_a1KUD i_a1KUF of {
                        __DEFAULT -> GHC.Types.False;
                        1# ->
                          case <=# i_a1KUF n_a1KUE of {
                            __DEFAULT -> GHC.Types.False;
                            1# ->
                              case l2_a1KTt of { I# m1_X1L7K [Occ=Once] ->
                              case u2_a1KTw of { I# n1_X1L7Q [Occ=Once] ->
                              case i2_a1KTz of { I# i4_X1L7W ->
                              case <=# m1_X1L7K i4_X1L7W of {
                                __DEFAULT -> GHC.Types.False;
                                1# ->
                                  case <=# i4_X1L7W n1_X1L7Q of {
                                    __DEFAULT -> GHC.Types.False;
                                    1# ->
                                      case l3_a1KTu of { I# m2_X1L81 [Occ=Once] ->
                                      case u3_a1KTx of { I# n2_X1L87 [Occ=Once] ->
                                      case i3_a1KTA of { I# i5_X1L8d ->
                                      case <=# m2_X1L81 i5_X1L8d of {
                                        __DEFAULT -> GHC.Types.False;
                                        1# -> tagToEnum# @ Bool (<=# i5_X1L8d n2_X1L87)
                                      }
                                      }
                                      }
                                      }
                                  }
                              }
                              }
                              }
                              }
                          }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                      }
                    GHC.Arr.$fIx(,,)_$s$crangeSize
                    GHC.Arr.$fIx(,,)_$s$cunsafeRangeSize]
GHC.Arr.$fIx(,,)_$s$fIx(,,)
  = GHC.Arr.C:Ix
      @ (Int, Int, Int)
      GHC.Arr.$fIx(,,)_$s$fOrd(,,)
      GHC.Arr.$fIx(,,)_$s$crange
      GHC.Arr.$fIx(,,)_$s$cindex
      GHC.Arr.$fIx(,,)_$s$cunsafeIndex
      GHC.Arr.$fIx(,,)1
      GHC.Arr.$fIx(,,)_$s$crangeSize
      GHC.Arr.$fIx(,,)_$s$cunsafeRangeSize

-- RHS size: {terms: 35, types: 37, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,,) [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a1 a2 a3. (Ix a1, Ix a2, Ix a3) => Ix (a1, a2, a3)
[GblId[DFunId],
 Arity=3,
 Str=<L,U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,A)><L,U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))><L,U(1*U(1*U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))>m,
 Unf=DFun: \ (@ a1_a1KT7)
             (@ a2_a1KT8)
             (@ a3_a1KT9)
             (v_X8r :: Ix a1_a1KT7)
             (v1_X8t :: Ix a2_a1KT8)
             (v2_B3 :: Ix a3_a1KT9) ->
       GHC.Arr.C:Ix TYPE: (a1_a1KT7, a2_a1KT8, a3_a1KT9)
                    GHC.Arr.$fIx(,,)_$cp1Ix
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$crange
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$cindex
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$cunsafeIndex
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$cinRange
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$crangeSize
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3
                    GHC.Arr.$fIx(,,)_$cunsafeRangeSize
                      @ a1_a1KT7 @ a2_a1KT8 @ a3_a1KT9 v_X8r v1_X8t v2_B3]
GHC.Arr.$fIx(,,)
  = \ (@ a1_a1LRQ)
      (@ a2_a1LRR)
      (@ a3_a1LRS)
      ($dIx_a1LRT :: Ix a1_a1LRQ)
      ($dIx1_a1LRU :: Ix a2_a1LRR)
      ($dIx2_a1LRV :: Ix a3_a1LRS) ->
      GHC.Arr.C:Ix
        @ (a1_a1LRQ, a2_a1LRR, a3_a1LRS)
        (GHC.Arr.$fIx(,,)_$cp1Ix
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$crange
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$cindex
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$cunsafeIndex
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$cinRange
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$crangeSize
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)
        (GHC.Arr.$fIx(,,)_$cunsafeRangeSize
           @ a1_a1LRQ
           @ a2_a1LRR
           @ a3_a1LRS
           $dIx_a1LRT
           $dIx1_a1LRU
           $dIx2_a1LRV)

-- RHS size: {terms: 14, types: 5, coercions: 0, joins: 0/0}
$wlvl11_r1Xw3 :: Int# -> Int -> Int# -> Int -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl11_r1Xw3
  = \ (ww_s1Tv5 :: Int#)
      (ww1_s1Tv7 :: Int)
      (ww2_s1Tve :: Int#)
      (ww3_s1Tvg :: Int) ->
      case ==# ww_s1Tv5 ww2_s1Tve of {
        __DEFAULT -> GHC.Types.False;
        1# -> eqInt ww1_s1Tv7 ww3_s1Tvg
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl41_r1Xw4 :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl41_r1Xw4
  = \ (w_s1TuY :: (Int, Int)) (w1_s1TuZ :: (Int, Int)) ->
      case w_s1TuY of { (ww1_s1Tv2, ww2_s1Tv7) ->
      case ww1_s1Tv2 of { I# ww4_s1Tv5 ->
      case w1_s1TuZ of { (ww6_s1Tvb, ww7_s1Tvg) ->
      case ww6_s1Tvb of { I# ww9_s1Tve ->
      $wlvl11_r1Xw3 ww4_s1Tv5 ww2_s1Tv7 ww9_s1Tve ww7_s1Tvg
      }
      }
      }
      }

-- RHS size: {terms: 35, types: 26, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$fEq(,)_$c/= [InlPrag=INLINE (sat-args=2)]
  :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a1NuW [Occ=Once!] :: (Int, Int))
                 (y_a1NuX [Occ=Once!] :: (Int, Int)) ->
                 case x_a1NuW of { (a1_a1Nv0 [Occ=Once], a2_a1Nv1 [Occ=Once]) ->
                 case y_a1NuX of { (b1_a1Nv5 [Occ=Once], b2_a1Nv6 [Occ=Once]) ->
                 case eqInt a1_a1Nv0 b1_a1Nv5 of {
                   False -> GHC.Types.True;
                   True ->
                     case eqInt a2_a1Nv1 b2_a1Nv6 of {
                       False -> GHC.Types.True;
                       True -> GHC.Types.False
                     }
                 }
                 }
                 }}]
GHC.Arr.$fIx(,)_$s$fEq(,)_$c/=
  = \ (x_a1NuW :: (Int, Int)) (y_a1NuX :: (Int, Int)) ->
      case x_a1NuW of { (a1_a1Nv0, a2_a1Nv1) ->
      case y_a1NuX of { (b1_a1Nv5, b2_a1Nv6) ->
      case a1_a1Nv0 of { I# x1_a22G ->
      case b1_a1Nv5 of { I# y1_a22K ->
      case ==# x1_a22G y1_a22K of {
        __DEFAULT -> GHC.Types.True;
        1# ->
          case a2_a1Nv1 of { I# x2_X2eb ->
          case b2_a1Nv6 of { I# y2_X2ek ->
          case ==# x2_X2eb y2_X2ek of {
            __DEFAULT -> GHC.Types.True;
            1# -> GHC.Types.False
          }
          }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$fEq(,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq (Int, Int)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: (Int, Int)
                        GHC.Classes.$fEq(,)_$c==
                          @ Int @ Int GHC.Classes.$fEqInt GHC.Classes.$fEqInt
                        GHC.Arr.$fIx(,)_$s$fEq(,)_$c/=]
GHC.Arr.$fIx(,)_$s$fEq(,)
  = GHC.Classes.C:Eq
      @ (Int, Int) lvl41_r1Xw4 GHC.Arr.$fIx(,)_$s$fEq(,)_$c/=

-- RHS size: {terms: 21, types: 6, coercions: 0, joins: 0/0}
$wlvl12_r1Xw5 :: Int# -> Int -> Int# -> Int -> Ordering
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl12_r1Xw5
  = \ (ww_s1Tvq :: Int#)
      (ww1_s1Tvs :: Int)
      (ww2_s1Tvz :: Int#)
      (ww3_s1TvB :: Int) ->
      case <# ww_s1Tvq ww2_s1Tvz of {
        __DEFAULT ->
          case ==# ww_s1Tvq ww2_s1Tvz of {
            __DEFAULT -> GHC.Types.GT;
            1# -> compareInt ww1_s1Tvs ww3_s1TvB
          };
        1# -> GHC.Types.LT
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl42_r1Xw6 :: (Int, Int) -> (Int, Int) -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl42_r1Xw6
  = \ (w_s1Tvj :: (Int, Int)) (w1_s1Tvk :: (Int, Int)) ->
      case w_s1Tvj of { (ww1_s1Tvn, ww2_s1Tvs) ->
      case ww1_s1Tvn of { I# ww4_s1Tvq ->
      case w1_s1Tvk of { (ww6_s1Tvw, ww7_s1TvB) ->
      case ww6_s1Tvw of { I# ww9_s1Tvz ->
      $wlvl12_r1Xw5 ww4_s1Tvq ww2_s1Tvs ww9_s1Tvz ww7_s1TvB
      }
      }
      }
      }

-- RHS size: {terms: 21, types: 6, coercions: 0, joins: 0/0}
$wlvl13_r1Xw7 :: Int# -> Int -> Int# -> Int -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl13_r1Xw7
  = \ (ww_s1TvL :: Int#)
      (ww1_s1TvN :: Int)
      (ww2_s1TvU :: Int#)
      (ww3_s1TvW :: Int) ->
      case <# ww_s1TvL ww2_s1TvU of {
        __DEFAULT ->
          case ==# ww_s1TvL ww2_s1TvU of {
            __DEFAULT -> GHC.Types.False;
            1# -> ltInt ww1_s1TvN ww3_s1TvW
          };
        1# -> GHC.Types.True
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl43_r1Xw8 :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl43_r1Xw8
  = \ (w_s1TvE :: (Int, Int)) (w1_s1TvF :: (Int, Int)) ->
      case w_s1TvE of { (ww1_s1TvI, ww2_s1TvN) ->
      case ww1_s1TvI of { I# ww4_s1TvL ->
      case w1_s1TvF of { (ww6_s1TvR, ww7_s1TvW) ->
      case ww6_s1TvR of { I# ww9_s1TvU ->
      $wlvl13_r1Xw7 ww4_s1TvL ww2_s1TvN ww9_s1TvU ww7_s1TvW
      }
      }
      }
      }

-- RHS size: {terms: 32, types: 11, coercions: 0, joins: 0/0}
$wlvl14_r1Xw9 :: Int# -> Int -> Int# -> Int -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl14_r1Xw9
  = \ (ww_s1Tw6 :: Int#)
      (ww1_s1Tw8 :: Int)
      (ww2_s1Twf :: Int#)
      (ww3_s1Twh :: Int) ->
      case <# ww2_s1Twf ww_s1Tw6 of {
        __DEFAULT ->
          case ==# ww2_s1Twf ww_s1Tw6 of {
            __DEFAULT -> GHC.Types.True;
            1# ->
              case ww3_s1Twh of { I# x_alN9 ->
              case ww1_s1Tw8 of { I# y_alNd ->
              case <# x_alN9 y_alNd of {
                __DEFAULT -> GHC.Types.True;
                1# -> GHC.Types.False
              }
              }
              }
          };
        1# -> GHC.Types.False
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl44_r1Xwa :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl44_r1Xwa
  = \ (w_s1TvZ :: (Int, Int)) (w1_s1Tw0 :: (Int, Int)) ->
      case w_s1TvZ of { (ww1_s1Tw3, ww2_s1Tw8) ->
      case ww1_s1Tw3 of { I# ww4_s1Tw6 ->
      case w1_s1Tw0 of { (ww6_s1Twc, ww7_s1Twh) ->
      case ww6_s1Twc of { I# ww9_s1Twf ->
      $wlvl14_r1Xw9 ww4_s1Tw6 ww2_s1Tw8 ww9_s1Twf ww7_s1Twh
      }
      }
      }
      }

-- RHS size: {terms: 21, types: 6, coercions: 0, joins: 0/0}
$wlvl15_r1Xwb :: Int# -> Int -> Int# -> Int -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl15_r1Xwb
  = \ (ww_s1Twr :: Int#)
      (ww1_s1Twt :: Int)
      (ww2_s1TwA :: Int#)
      (ww3_s1TwC :: Int) ->
      case <# ww2_s1TwA ww_s1Twr of {
        __DEFAULT ->
          case ==# ww2_s1TwA ww_s1Twr of {
            __DEFAULT -> GHC.Types.False;
            1# -> ltInt ww3_s1TwC ww1_s1Twt
          };
        1# -> GHC.Types.True
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl45_r1Xwc :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl45_r1Xwc
  = \ (w_s1Twk :: (Int, Int)) (w1_s1Twl :: (Int, Int)) ->
      case w_s1Twk of { (ww1_s1Two, ww2_s1Twt) ->
      case ww1_s1Two of { I# ww4_s1Twr ->
      case w1_s1Twl of { (ww6_s1Twx, ww7_s1TwC) ->
      case ww6_s1Twx of { I# ww9_s1TwA ->
      $wlvl15_r1Xwb ww4_s1Twr ww2_s1Twt ww9_s1TwA ww7_s1TwC
      }
      }
      }
      }

-- RHS size: {terms: 32, types: 11, coercions: 0, joins: 0/0}
$wlvl16_r1Xwd :: Int# -> Int -> Int# -> Int -> Bool
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><S,U><L,1*U(U)>,
 Unf=OtherCon []]
$wlvl16_r1Xwd
  = \ (ww_s1TwM :: Int#)
      (ww1_s1TwO :: Int)
      (ww2_s1TwV :: Int#)
      (ww3_s1TwX :: Int) ->
      case <# ww_s1TwM ww2_s1TwV of {
        __DEFAULT ->
          case ==# ww_s1TwM ww2_s1TwV of {
            __DEFAULT -> GHC.Types.True;
            1# ->
              case ww1_s1TwO of { I# x_alN9 ->
              case ww3_s1TwX of { I# y_alNd ->
              case <# x_alN9 y_alNd of {
                __DEFAULT -> GHC.Types.True;
                1# -> GHC.Types.False
              }
              }
              }
          };
        1# -> GHC.Types.False
      }

-- RHS size: {terms: 19, types: 20, coercions: 0, joins: 0/0}
lvl46_r1Xwe :: (Int, Int) -> (Int, Int) -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
 Unf=OtherCon []]
lvl46_r1Xwe
  = \ (w_s1TwF :: (Int, Int)) (w1_s1TwG :: (Int, Int)) ->
      case w_s1TwF of { (ww1_s1TwJ, ww2_s1TwO) ->
      case ww1_s1TwJ of { I# ww4_s1TwM ->
      case w1_s1TwG of { (ww6_s1TwS, ww7_s1TwX) ->
      case ww6_s1TwS of { I# ww9_s1TwV ->
      $wlvl16_r1Xwd ww4_s1TwM ww2_s1TwO ww9_s1TwV ww7_s1TwX
      }
      }
      }
      }

-- RHS size: {terms: 42, types: 27, coercions: 0, joins: 0/0}
lvl47_r1Xwf :: (Int, Int) -> (Int, Int) -> (Int, Int)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(U(U),U(U))><S(S(S)L),1*U(U(U),U(U))>m,
 Unf=OtherCon []]
lvl47_r1Xwf
  = \ (w_s1Tx0 :: (Int, Int)) (w1_s1Tx1 :: (Int, Int)) ->
      case w_s1Tx0 of ww_s1Tx3 { (ww1_s1Tx4, ww2_s1Tx9) ->
      case ww1_s1Tx4 of { I# ww4_s1Tx7 ->
      case w1_s1Tx1 of ww5_s1Txc { (ww6_s1Txd, ww7_s1Txi) ->
      case ww6_s1Txd of { I# ww9_s1Txg ->
      case <# ww9_s1Txg ww4_s1Tx7 of {
        __DEFAULT ->
          case ==# ww9_s1Txg ww4_s1Tx7 of {
            __DEFAULT -> ww5_s1Txc;
            1# ->
              case ww7_s1Txi of { I# x_alN9 ->
              case ww2_s1Tx9 of { I# y_alNd ->
              case <# x_alN9 y_alNd of {
                __DEFAULT -> ww5_s1Txc;
                1# -> ww_s1Tx3
              }
              }
              }
          };
        1# -> ww_s1Tx3
      }
      }
      }
      }
      }

-- RHS size: {terms: 42, types: 27, coercions: 0, joins: 0/0}
lvl48_r1Xwg :: (Int, Int) -> (Int, Int) -> (Int, Int)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(U(U),U(U))><S(S(S)L),1*U(U(U),U(U))>m,
 Unf=OtherCon []]
lvl48_r1Xwg
  = \ (w_s1Txo :: (Int, Int)) (w1_s1Txp :: (Int, Int)) ->
      case w_s1Txo of ww_s1Txr { (ww1_s1Txs, ww2_s1Txx) ->
      case ww1_s1Txs of { I# ww4_s1Txv ->
      case w1_s1Txp of ww5_s1TxA { (ww6_s1TxB, ww7_s1TxG) ->
      case ww6_s1TxB of { I# ww9_s1TxE ->
      case <# ww9_s1TxE ww4_s1Txv of {
        __DEFAULT ->
          case ==# ww9_s1TxE ww4_s1Txv of {
            __DEFAULT -> ww_s1Txr;
            1# ->
              case ww7_s1TxG of { I# x_alN9 ->
              case ww2_s1Txx of { I# y_alNd ->
              case <# x_alN9 y_alNd of {
                __DEFAULT -> ww_s1Txr;
                1# -> ww5_s1TxA
              }
              }
              }
          };
        1# -> ww5_s1TxA
      }
      }
      }
      }
      }

-- RHS size: {terms: 9, types: 3, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$fOrd(,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Ord (Int, Int)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Ord TYPE: (Int, Int)
                         GHC.Arr.$fIx(,)_$s$fEq(,)
                         GHC.Classes.$fOrd(,)_$ccompare
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt
                         GHC.Classes.$fOrd(,)_$c<
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt
                         GHC.Classes.$fOrd(,)_$c<=
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt
                         \ (a1_a1Mu0 [Occ=Once] :: (Int, Int))
                           (b1_a1Mu1 [Occ=Once] :: (Int, Int)) ->
                           GHC.Classes.$fOrd(,)_$c<
                             @ Int
                             @ Int
                             GHC.Classes.$fOrdInt
                             GHC.Classes.$fOrdInt
                             b1_a1Mu1
                             a1_a1Mu0
                         GHC.Classes.$fOrd(,)_$c>=
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt
                         GHC.Classes.$fOrd(,)_$cmax
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt
                         GHC.Classes.$fOrd(,)_$cmin
                           @ Int @ Int GHC.Classes.$fOrdInt GHC.Classes.$fOrdInt]
GHC.Arr.$fIx(,)_$s$fOrd(,)
  = GHC.Classes.C:Ord
      @ (Int, Int)
      GHC.Arr.$fIx(,)_$s$fEq(,)
      lvl42_r1Xw6
      lvl43_r1Xw8
      lvl44_r1Xwa
      lvl45_r1Xwc
      lvl46_r1Xwe
      lvl47_r1Xwf
      lvl48_r1Xwg

-- RHS size: {terms: 8, types: 3, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,)_$s$fIx(,) [InlPrag=NOUSERINLINE CONLIKE]
  :: Ix (Int, Int)
[GblId,
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: (Int, Int)
                    GHC.Arr.$fIx(,)_$s$fOrd(,)
                    GHC.Arr.$fIx(,)_$s$crange
                    GHC.Arr.$fIx(,)_$s$cindex
                    GHC.Arr.$fIx(,)_$s$cunsafeIndex
                    GHC.Arr.$fIx(,)_$s$cinRange
                    GHC.Arr.$fIx(,)_$s$crangeSize
                    GHC.Arr.$fIx(,)_$s$cunsafeRangeSize]
GHC.Arr.$fIx(,)_$s$fIx(,)
  = GHC.Arr.C:Ix
      @ (Int, Int)
      GHC.Arr.$fIx(,)_$s$fOrd(,)
      GHC.Arr.$fIx(,)_$s$crange
      GHC.Arr.$fIx(,)_$s$cindex
      GHC.Arr.$fIx(,)_$s$cunsafeIndex
      GHC.Arr.$fIx(,)_$s$cinRange
      GHC.Arr.$fIx(,)_$s$crangeSize
      GHC.Arr.$fIx(,)_$s$cunsafeRangeSize

-- RHS size: {terms: 26, types: 25, coercions: 0, joins: 0/0}
GHC.Arr.$fIx(,) [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a b. (Ix a, Ix b) => Ix (a, b)
[GblId[DFunId],
 Arity=2,
 Str=<L,U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,A)><L,U(1*U(1*U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A),C(U),A,C(C1(U(U))),C(C1(U)),A,C(U(U)))>m,
 Unf=DFun: \ (@ a_a1KTB)
             (@ b_a1KTC)
             (v_X84 :: Ix a_a1KTB)
             (v1_X86 :: Ix b_a1KTC) ->
       GHC.Arr.C:Ix TYPE: (a_a1KTB, b_a1KTC)
                    GHC.Arr.$fIx(,)_$cp1Ix @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$crange @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$cindex @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$cunsafeIndex @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$cinRange @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$crangeSize @ a_a1KTB @ b_a1KTC v_X84 v1_X86
                    GHC.Arr.$fIx(,)_$cunsafeRangeSize @ a_a1KTB @ b_a1KTC v_X84 v1_X86]
GHC.Arr.$fIx(,)
  = \ (@ a_a1LT8)
      (@ b_a1LT9)
      ($dIx_a1LTa :: Ix a_a1LT8)
      ($dIx1_a1LTb :: Ix b_a1LT9) ->
      GHC.Arr.C:Ix
        @ (a_a1LT8, b_a1LT9)
        (GHC.Arr.$fIx(,)_$cp1Ix @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$crange
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$cindex
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$cunsafeIndex
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$cinRange
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$crangeSize
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)
        (GHC.Arr.$fIx(,)_$cunsafeRangeSize
           @ a_a1LT8 @ b_a1LT9 $dIx_a1LTa $dIx1_a1LTb)

-- RHS size: {terms: 36, types: 21, coercions: 0, joins: 0/0}
safeIndex [InlPrag=INLINE[1] (sat-args=3)]
  :: forall i. Ix i => (i, i) -> Int -> i -> Int
[GblId,
 Arity=4,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S,1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LBR)
                 ($dIx_a1LBT [Occ=Once] :: Ix i_a1LBR)
                 (ds_d1MaB [Occ=Once!] :: (i_a1LBR, i_a1LBR))
                 (n_a1KXI [Occ=Once!] :: Int)
                 (i1_a1KXJ [Occ=Once] :: i_a1LBR) ->
                 case ds_d1MaB of { (l_a1KXG [Occ=Once], u_a1KXH [Occ=Once]) ->
                 case n_a1KXI of wild1_X9 { I# ds1_d1MaM [Occ=Once] ->
                 case index @ i_a1LBR $dIx_a1LBT (l_a1KXG, u_a1KXH) i1_a1KXJ
                 of wild2_at1g
                 { I# y_at1i ->
                 case <=# 0# y_at1i of {
                   __DEFAULT -> badSafeIndex wild2_at1g wild1_X9;
                   1# ->
                     case <# y_at1i ds1_d1MaM of {
                       __DEFAULT -> badSafeIndex wild2_at1g wild1_X9;
                       1# -> wild2_at1g
                     }
                 }
                 }
                 }
                 }}]
safeIndex
  = \ (@ i_a1LBR)
      ($dIx_a1LBT :: Ix i_a1LBR)
      (eta_B3 :: (i_a1LBR, i_a1LBR))
      (eta1_X8v :: Int)
      (eta2_XgZ :: i_a1LBR) ->
      case eta_B3 of wild_X7g { (l_a1KXG, u_a1KXH) ->
      case eta1_X8v of { I# ds_d1MaM ->
      case index @ i_a1LBR $dIx_a1LBT wild_X7g eta2_XgZ of wild2_at1g
      { I# y_at1i ->
      case <=# 0# y_at1i of {
        __DEFAULT -> GHC.Arr.$wbadSafeIndex y_at1i ds_d1MaM;
        1# ->
          case <# y_at1i ds_d1MaM of {
            __DEFAULT -> GHC.Arr.$wbadSafeIndex y_at1i ds_d1MaM;
            1# -> wild2_at1g
          }
      }
      }
      }
      }

-- RHS size: {terms: 42, types: 28, coercions: 0, joins: 0/0}
$wreadSTArray_r1Xwh
  :: forall i s e.
     Ix i =>
     i
     -> i
     -> Int#
     -> MutableArray# s e
     -> i
     -> State# s
     -> (# State# s, e #)
[GblId,
 Arity=7,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []]
$wreadSTArray_r1Xwh
  = \ (@ i_s1TxM)
      (@ s_s1TxN)
      (@ e_s1TxO)
      (w_s1TxP :: Ix i_s1TxM)
      (ww_s1TxV
         :: i_s1TxM
         Unf=OtherCon [])
      (ww1_s1TxW
         :: i_s1TxM
         Unf=OtherCon [])
      (ww2_s1TxX :: Int#)
      (ww3_s1TxY :: MutableArray# s_s1TxN e_s1TxO)
      (w1_s1TxR :: i_s1TxM)
      (w2_s1TxS :: State# s_s1TxN) ->
      case index @ i_s1TxM w_s1TxP (ww_s1TxV, ww1_s1TxW) w1_s1TxR of
      { I# y_at1i ->
      case <=# 0# y_at1i of {
        __DEFAULT ->
          case GHC.Arr.$wbadSafeIndex y_at1i ww2_s1TxX of wild_00 { };
        1# ->
          case <# y_at1i ww2_s1TxX of {
            __DEFAULT ->
              case GHC.Arr.$wbadSafeIndex y_at1i ww2_s1TxX of wild_00 { };
            1# -> readArray# @ s_s1TxN @ e_s1TxO ww3_s1TxY y_at1i w2_s1TxS
          }
      }
      }

-- RHS size: {terms: 18, types: 28, coercions: 0, joins: 0/0}
readSTArray1_r1Xwi
  :: forall i s e.
     Ix i =>
     STArray s i e -> i -> State# s -> (# State# s, e #)
[GblId,
 Arity=4,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S(SSSS),1*U(U,U,U,U)><L,U><S,U>,
 Unf=OtherCon []]
readSTArray1_r1Xwi
  = \ (@ i_s1TxM)
      (@ s_s1TxN)
      (@ e_s1TxO)
      (w_s1TxP :: Ix i_s1TxM)
      (w1_s1TxQ :: STArray s_s1TxN i_s1TxM e_s1TxO)
      (w2_s1TxR :: i_s1TxM)
      (w3_s1TxS :: State# s_s1TxN) ->
      case w1_s1TxQ of
      { STArray ww1_s1TxV ww2_s1TxW ww3_s1TxX ww4_s1TxY ->
      $wreadSTArray_r1Xwh
        @ i_s1TxM
        @ s_s1TxN
        @ e_s1TxO
        w_s1TxP
        ww1_s1TxV
        ww2_s1TxW
        ww3_s1TxX
        ww4_s1TxY
        w2_s1TxR
        w3_s1TxS
      }

-- RHS size: {terms: 1, types: 0, coercions: 23, joins: 0/0}
readSTArray [InlPrag=INLINE (sat-args=2)]
  :: forall i s e. Ix i => STArray s i e -> i -> ST s e
[GblId,
 Arity=4,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S(SSSS),1*U(U,U,U,U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_X1LKJ)
                 (@ s_X1LKL)
                 (@ e_X1LKN)
                 ($dIx_X1LKQ [Occ=Once] :: Ix i_X1LKJ)
                 (marr_a1L0B [Occ=Once!] :: STArray s_X1LKL i_X1LKJ e_X1LKN)
                 (i1_a1L0F [Occ=Once] :: i_X1LKJ) ->
                 case marr_a1L0B of
                 { STArray l_a1L0C [Occ=Once] u_a1L0D [Occ=Once] dt_d1MtK [Occ=Once]
                           ds_d1Mb2 [Occ=Once] ->
                 case safeIndex
                        @ i_X1LKJ
                        $dIx_X1LKQ
                        (l_a1L0C, u_a1L0D)
                        (GHC.Types.I# dt_d1MtK)
                        i1_a1L0F
                 of
                 { I# i#_a1L0H [Occ=Once] ->
                 (\ (s1#_a1L0I [Occ=Once] :: State# s_X1LKL) ->
                    readArray# @ s_X1LKL @ e_X1LKN ds_d1Mb2 i#_a1L0H s1#_a1L0I)
                 `cast` (Sym (GHC.ST.N:ST[0] <s_X1LKL>_N <e_X1LKN>_R)
                         :: (STRep s_X1LKL e_X1LKN :: *) ~R# (ST s_X1LKL e_X1LKN :: *))
                 }
                 }}]
readSTArray
  = readSTArray1_r1Xwi
    `cast` (forall (i :: <*>_N) (s :: <*>_N) (e :: <*>_N).
            <Ix i>_R
            ->_R <STArray s i e>_R
            ->_R <i>_R
            ->_R Sym (GHC.ST.N:ST[0] <s>_N <e>_R)
            :: (forall i s e. Ix i => STArray s i e -> i -> STRep s e :: *)
               ~R# (forall i s e. Ix i => STArray s i e -> i -> ST s e :: *))

-- RHS size: {terms: 49, types: 38, coercions: 0, joins: 0/0}
$wwriteSTArray_r1Xwj
  :: forall i s e.
     Ix i =>
     i
     -> i
     -> Int#
     -> MutableArray# s e
     -> i
     -> e
     -> State# s
     -> (# State# s, () #)
[GblId,
 Arity=8,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><L,U><L,U><S,U><S,U><L,U><L,U><S,U>,
 Unf=OtherCon []]
$wwriteSTArray_r1Xwj
  = \ (@ i_s1Ty1)
      (@ s_s1Ty2)
      (@ e_s1Ty3)
      (w_s1Ty4 :: Ix i_s1Ty1)
      (ww_s1Tyb
         :: i_s1Ty1
         Unf=OtherCon [])
      (ww1_s1Tyc
         :: i_s1Ty1
         Unf=OtherCon [])
      (ww2_s1Tyd :: Int#)
      (ww3_s1Tye :: MutableArray# s_s1Ty2 e_s1Ty3)
      (w1_s1Ty6 :: i_s1Ty1)
      (w2_s1Ty7 :: e_s1Ty3)
      (w3_s1Ty8 :: State# s_s1Ty2) ->
      case index @ i_s1Ty1 w_s1Ty4 (ww_s1Tyb, ww1_s1Tyc) w1_s1Ty6 of
      { I# y_at1i ->
      case <=# 0# y_at1i of {
        __DEFAULT ->
          case GHC.Arr.$wbadSafeIndex y_at1i ww2_s1Tyd of wild_00 { };
        1# ->
          case <# y_at1i ww2_s1Tyd of {
            __DEFAULT ->
              case GHC.Arr.$wbadSafeIndex y_at1i ww2_s1Tyd of wild_00 { };
            1# ->
              case writeArray#
                     @ s_s1Ty2 @ e_s1Ty3 ww3_s1Tye y_at1i w2_s1Ty7 w3_s1Ty8
              of s2#_a1L0T
              { __DEFAULT ->
              (# s2#_a1L0T, GHC.Tuple.() #)
              }
          }
      }
      }

-- RHS size: {terms: 20, types: 29, coercions: 0, joins: 0/0}
writeSTArray1_r1Xwk
  :: forall i s e.
     Ix i =>
     STArray s i e -> i -> e -> State# s -> (# State# s, () #)
[GblId,
 Arity=5,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S(SSSS),1*U(U,U,U,U)><L,U><L,U><S,U>,
 Unf=OtherCon []]
writeSTArray1_r1Xwk
  = \ (@ i_s1Ty1)
      (@ s_s1Ty2)
      (@ e_s1Ty3)
      (w_s1Ty4 :: Ix i_s1Ty1)
      (w1_s1Ty5 :: STArray s_s1Ty2 i_s1Ty1 e_s1Ty3)
      (w2_s1Ty6 :: i_s1Ty1)
      (w3_s1Ty7 :: e_s1Ty3)
      (w4_s1Ty8 :: State# s_s1Ty2) ->
      case w1_s1Ty5 of
      { STArray ww1_s1Tyb ww2_s1Tyc ww3_s1Tyd ww4_s1Tye ->
      $wwriteSTArray_r1Xwj
        @ i_s1Ty1
        @ s_s1Ty2
        @ e_s1Ty3
        w_s1Ty4
        ww1_s1Tyb
        ww2_s1Tyc
        ww3_s1Tyd
        ww4_s1Tye
        w2_s1Ty6
        w3_s1Ty7
        w4_s1Ty8
      }

-- RHS size: {terms: 1, types: 0, coercions: 25, joins: 0/0}
writeSTArray [InlPrag=INLINE (sat-args=3)]
  :: forall i s e. Ix i => STArray s i e -> i -> e -> ST s ()
[GblId,
 Arity=5,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S(SSSS),1*U(U,U,U,U)><L,U><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_X1LL3)
                 (@ s_X1LL5)
                 (@ e_X1LL7)
                 ($dIx_X1LLa [Occ=Once] :: Ix i_X1LL3)
                 (marr_a1L0J [Occ=Once!] :: STArray s_X1LL5 i_X1LL3 e_X1LL7)
                 (i1_a1L0N [Occ=Once] :: i_X1LL3)
                 (e1_a1L0O [Occ=Once] :: e_X1LL7) ->
                 case marr_a1L0J of
                 { STArray l_a1L0K [Occ=Once] u_a1L0L [Occ=Once] dt_d1MtL [Occ=Once]
                           ds_d1Mbe [Occ=Once] ->
                 case safeIndex
                        @ i_X1LL3
                        $dIx_X1LLa
                        (l_a1L0K, u_a1L0L)
                        (GHC.Types.I# dt_d1MtL)
                        i1_a1L0N
                 of
                 { I# i#_a1L0Q [Occ=Once] ->
                 (\ (s1#_a1L0S [Occ=Once] :: State# s_X1LL5) ->
                    case writeArray#
                           @ s_X1LL5 @ e_X1LL7 ds_d1Mbe i#_a1L0Q e1_a1L0O s1#_a1L0S
                    of s2#_a1L0T
                    { __DEFAULT ->
                    (# s2#_a1L0T, GHC.Tuple.() #)
                    })
                 `cast` (Sym (GHC.ST.N:ST[0] <s_X1LL5>_N <()>_R)
                         :: (STRep s_X1LL5 () :: *) ~R# (ST s_X1LL5 () :: *))
                 }
                 }}]
writeSTArray
  = writeSTArray1_r1Xwk
    `cast` (forall (i :: <*>_N) (s :: <*>_N) (e :: <*>_N).
            <Ix i>_R
            ->_R <STArray s i e>_R
            ->_R <i>_R
            ->_R <e>_R
            ->_R Sym (GHC.ST.N:ST[0] <s>_N <()>_R)
            :: (forall i s e.
                Ix i =>
                STArray s i e -> i -> e -> STRep s () :: *)
               ~R# (forall i s e.
                    Ix i =>
                    STArray s i e -> i -> e -> ST s () :: *))

-- RHS size: {terms: 42, types: 32, coercions: 0, joins: 0/0}
! [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Ix i => Array i e -> i -> e
[GblId,
 Arity=3,
 Str=<S(LLC(C(S(S)))LLLL),1*U(A,A,1*C1(C1(U(U))),A,A,A,A)><S(SSSS),1*U(U,U,U,U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LDd)
                 (@ e_a1LDe)
                 ($dIx_a1LDg [Occ=Once] :: Ix i_a1LDd)
                 (arr_a1KXy [Occ=Once!] :: Array i_a1LDd e_a1LDe)
                 (i1_a1KXC [Occ=Once] :: i_a1LDd) ->
                 case arr_a1KXy of
                 { Array l_a1KXz [Occ=Once] u_a1KXA [Occ=Once] dt_d1MtM [Occ=Once]
                         ds_d1MbY [Occ=Once] ->
                 case safeIndex
                        @ i_a1LDd
                        $dIx_a1LDg
                        (l_a1KXz, u_a1KXA)
                        (GHC.Types.I# dt_d1MtM)
                        i1_a1KXC
                 of
                 { I# i#_a1KXR [Occ=Once] ->
                 case indexArray# @ e_a1LDe ds_d1MbY i#_a1KXR of
                 { (# ipv_s1MGr [Occ=Once] #) ->
                 ipv_s1MGr
                 }
                 }
                 }}]
! = \ (@ i_a1LDd)
      (@ e_a1LDe)
      ($dIx_a1LDg :: Ix i_a1LDd)
      (eta_X8N :: Array i_a1LDd e_a1LDe)
      (eta1_Xhz :: i_a1LDd) ->
      case eta_X8N of { Array l_a1KXz u_a1KXA dt_d1MtM ds_d1MbY ->
      case index @ i_a1LDd $dIx_a1LDg (l_a1KXz, u_a1KXA) eta1_Xhz of
      { I# y_at1i ->
      case <=# 0# y_at1i of {
        __DEFAULT ->
          case GHC.Arr.$wbadSafeIndex y_at1i dt_d1MtM of wild2_00 { };
        1# ->
          case <# y_at1i dt_d1MtM of {
            __DEFAULT ->
              case GHC.Arr.$wbadSafeIndex y_at1i dt_d1MtM of wild2_00 { };
            1# ->
              case indexArray# @ e_a1LDe ds_d1MbY y_at1i of { (# ipv_s1MGr #) ->
              ipv_s1MGr
              }
          }
      }
      }
      }

-- RHS size: {terms: 59, types: 56, coercions: 0, joins: 0/2}
assocs [InlPrag=INLINE (sat-args=1)]
  :: forall i e. Ix i => Array i e -> [(i, e)]
[GblId,
 Arity=2,
 Str=<S(LC(S)LLLLL),U(A,1*C1(U),C(C1(U(U))),A,A,A,A)><S(SSLL),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LDo)
                 (@ e_a1LDp)
                 ($dIx_a1LDr :: Ix i_a1LDo)
                 (arr_a1KYB [Occ=Once!] :: Array i_a1LDo e_a1LDp) ->
                 case arr_a1KYB of
                 { Array l_a1KYC u_a1KYD dt_d1MtN [Occ=OnceL]
                         ds_d1Mcl [Occ=OnceL] ->
                 build
                   @ (i_a1LDo, e_a1LDp)
                   (\ (@ a_d1Mc1)
                      (c_d1Mc2 [Occ=OnceL!, OS=OneShot]
                         :: (i_a1LDo, e_a1LDp) -> a_d1Mc1 -> a_d1Mc1)
                      (n_d1Mc3 [Occ=Once, OS=OneShot] :: a_d1Mc1) ->
                      foldr
                        @ i_a1LDo
                        @ a_d1Mc1
                        (\ (ds1_d1Mc5 :: i_a1LDo)
                           (ds2_d1Mc4 [Occ=Once, OS=OneShot] :: a_d1Mc1) ->
                           c_d1Mc2
                             (ds1_d1Mc5,
                              case safeIndex
                                     @ i_a1LDo
                                     $dIx_a1LDr
                                     (l_a1KYC, u_a1KYD)
                                     (GHC.Types.I# dt_d1MtN)
                                     ds1_d1Mc5
                              of
                              { I# i#_a1KXR [Occ=Once] ->
                              case indexArray# @ e_a1LDp ds_d1Mcl i#_a1KXR of
                              { (# ipv_s1MGr [Occ=Once] #) ->
                              ipv_s1MGr
                              }
                              })
                             ds2_d1Mc4)
                        n_d1Mc3
                        (range @ i_a1LDo $dIx_a1LDr (l_a1KYC, u_a1KYD)))
                 }}]
assocs
  = \ (@ i_a1LDo)
      (@ e_a1LDp)
      ($dIx_a1LDr :: Ix i_a1LDo)
      (eta_X8N :: Array i_a1LDo e_a1LDp) ->
      case eta_X8N of { Array l_a1KYC u_a1KYD dt_d1MtN ds_d1Mcl ->
      let {
        lvl50_s1VS9 :: (i_a1LDo, i_a1LDo)
        [LclId, Unf=OtherCon []]
        lvl50_s1VS9 = (l_a1KYC, u_a1KYD) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_a1LDo] -> [(i_a1LDo, e_a1LDp)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds1_i1y1c :: [i_a1LDo]) ->
              case ds1_i1y1c of {
                [] -> GHC.Types.[] @ (i_a1LDo, e_a1LDp);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_a1LDo, e_a1LDp)
                    (y_i1y1h,
                     case index @ i_a1LDo $dIx_a1LDr lvl50_s1VS9 y_i1y1h of
                     { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild3_00 { };
                       1# ->
                         case <# y1_at1i dt_d1MtN of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild3_00 { };
                           1# ->
                             case indexArray# @ e_a1LDp ds_d1Mcl y1_at1i of { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      go_i1y1b (range @ i_a1LDo $dIx_a1LDr lvl50_s1VS9)
      }

-- RHS size: {terms: 121, types: 114, coercions: 0, joins: 0/4}
cmpArray [InlPrag=INLINE[1] (sat-args=2)]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Ordering
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSLL),1*U(U,U,U,U)><S(SSLL),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LDz)
                 (@ e_a1LDA)
                 ($dIx_a1LDC :: Ix i_a1LDz)
                 ($dOrd_a1LDD [Occ=OnceL] :: Ord e_a1LDA) ->
                 let {
                   $dOrd1_a1M1Y [Occ=OnceL] :: Ord i_a1LDz
                   [LclId]
                   $dOrd1_a1M1Y = GHC.Arr.$p1Ix @ i_a1LDz $dIx_a1LDC } in
                 let {
                   $dOrd2_a1M21 [Occ=OnceL] :: Ord (i_a1LDz, e_a1LDA)
                   [LclId]
                   $dOrd2_a1M21
                     = GHC.Classes.$fOrd(,)
                         @ i_a1LDz @ e_a1LDA $dOrd1_a1M1Y $dOrd_a1LDD } in
                 \ (arr1_a1L0b [Occ=Once!] :: Array i_a1LDz e_a1LDA)
                   (arr2_a1L0c [Occ=Once!] :: Array i_a1LDz e_a1LDA) ->
                   case arr1_a1L0b of
                   { Array l_a1KYC u_a1KYD dt_d1MtN ds_d1Mcl [Occ=OnceL] ->
                   case arr2_a1L0c of
                   { Array l1_X1Lby u1_X1LbA dt1_X1MGL ds1_X1Mpk [Occ=OnceL] ->
                   GHC.Classes.$fOrd[]_$ccompare
                     @ (i_a1LDz, e_a1LDA)
                     $dOrd2_a1M21
                     (foldr
                        @ i_a1LDz
                        @ [(i_a1LDz, e_a1LDA)]
                        (\ (ds2_d1Mc5 :: i_a1LDz)
                           (ds3_d1Mc4 [Occ=Once, OS=OneShot] :: [(i_a1LDz, e_a1LDA)]) ->
                           GHC.Types.:
                             @ (i_a1LDz, e_a1LDA)
                             (ds2_d1Mc5,
                              case index @ i_a1LDz $dIx_a1LDC (l_a1KYC, u_a1KYD) ds2_d1Mc5
                              of wild2_at1g
                              { I# y_at1i ->
                              case <=# 0# y_at1i of {
                                __DEFAULT ->
                                  case badSafeIndex wild2_at1g (GHC.Types.I# dt_d1MtN) of { };
                                1# ->
                                  case <# y_at1i dt_d1MtN of {
                                    __DEFAULT ->
                                      case badSafeIndex wild2_at1g (GHC.Types.I# dt_d1MtN) of { };
                                    1# ->
                                      case indexArray# @ e_a1LDA ds_d1Mcl y_at1i of
                                      { (# ipv_s1MGr [Occ=Once] #) ->
                                      ipv_s1MGr
                                      }
                                  }
                              }
                              })
                             ds3_d1Mc4)
                        (GHC.Types.[] @ (i_a1LDz, e_a1LDA))
                        (range @ i_a1LDz $dIx_a1LDC (l_a1KYC, u_a1KYD)))
                     (foldr
                        @ i_a1LDz
                        @ [(i_a1LDz, e_a1LDA)]
                        (\ (ds2_d1Mc5 :: i_a1LDz)
                           (ds3_d1Mc4 [Occ=Once, OS=OneShot] :: [(i_a1LDz, e_a1LDA)]) ->
                           GHC.Types.:
                             @ (i_a1LDz, e_a1LDA)
                             (ds2_d1Mc5,
                              case index @ i_a1LDz $dIx_a1LDC (l1_X1Lby, u1_X1LbA) ds2_d1Mc5
                              of wild2_at1g
                              { I# y_at1i ->
                              case <=# 0# y_at1i of {
                                __DEFAULT ->
                                  case badSafeIndex wild2_at1g (GHC.Types.I# dt1_X1MGL) of { };
                                1# ->
                                  case <# y_at1i dt1_X1MGL of {
                                    __DEFAULT ->
                                      case badSafeIndex wild2_at1g (GHC.Types.I# dt1_X1MGL) of { };
                                    1# ->
                                      case indexArray# @ e_a1LDA ds1_X1Mpk y_at1i of
                                      { (# ipv_s1MGr [Occ=Once] #) ->
                                      ipv_s1MGr
                                      }
                                  }
                              }
                              })
                             ds3_d1Mc4)
                        (GHC.Types.[] @ (i_a1LDz, e_a1LDA))
                        (range @ i_a1LDz $dIx_a1LDC (l1_X1Lby, u1_X1LbA)))
                   }
                   }}]
cmpArray
  = \ (@ i_a1LDz)
      (@ e_a1LDA)
      ($dIx_a1LDC :: Ix i_a1LDz)
      ($dOrd_a1LDD :: Ord e_a1LDA)
      (eta_X8R :: Array i_a1LDz e_a1LDA)
      (eta1_XhH :: Array i_a1LDz e_a1LDA) ->
      case eta_X8R of { Array l_a1KYC u_a1KYD dt_d1MtN ds_d1Mcl ->
      case eta1_XhH of { Array l1_X1LbB u1_X1LbD dt1_X1MGO ds1_X1Mpn ->
      let {
        lvl50_s1VSa :: (i_a1LDz, i_a1LDz)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSa = (l_a1KYC, u_a1KYD) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_a1LDz] -> [(i_a1LDz, e_a1LDA)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds2_i1y1c :: [i_a1LDz]) ->
              case ds2_i1y1c of {
                [] -> GHC.Types.[] @ (i_a1LDz, e_a1LDA);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_a1LDz, e_a1LDA)
                    (y_i1y1h,
                     case index @ i_a1LDz $dIx_a1LDC lvl50_s1VSa y_i1y1h of
                     { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild4_00 { };
                       1# ->
                         case <# y1_at1i dt_d1MtN of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild4_00 { };
                           1# ->
                             case indexArray# @ e_a1LDA ds_d1Mcl y1_at1i of { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSb :: (i_a1LDz, i_a1LDz)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSb = (l1_X1LbB, u1_X1LbD) } in
      letrec {
        go1_X1ycy [Occ=LoopBreaker] :: [i_a1LDz] -> [(i_a1LDz, e_a1LDA)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycy
          = \ (ds2_i1y1c :: [i_a1LDz]) ->
              case ds2_i1y1c of {
                [] -> GHC.Types.[] @ (i_a1LDz, e_a1LDA);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_a1LDz, e_a1LDA)
                    (y_i1y1h,
                     case index @ i_a1LDz $dIx_a1LDC lvl51_s1VSb y_i1y1h of
                     { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i dt1_X1MGO of wild4_00 { };
                       1# ->
                         case <# y1_at1i dt1_X1MGO of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i dt1_X1MGO of wild4_00 { };
                           1# ->
                             case indexArray# @ e_a1LDA ds1_X1Mpn y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycy ys_i1y1i)
              }; } in
      GHC.Classes.$fOrd[]_$ccompare
        @ (i_a1LDz, e_a1LDA)
        (GHC.Classes.$fOrd(,)
           @ i_a1LDz
           @ e_a1LDA
           (GHC.Arr.$p1Ix @ i_a1LDz $dIx_a1LDC)
           $dOrd_a1LDD)
        (go_i1y1b (range @ i_a1LDz $dIx_a1LDC lvl50_s1VSa))
        (go1_X1ycy (range @ i_a1LDz $dIx_a1LDC lvl51_s1VSb))
      }
      }

-- RHS size: {terms: 126, types: 103, coercions: 0, joins: 0/4}
GHC.Arr.$w$c< [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i -> i -> Int# -> Array# e -> i -> i -> Int# -> Array# e -> Bool
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 20}]
GHC.Arr.$w$c<
  = \ (@ i_s1Tym)
      (@ e_s1Tyn)
      (w_s1Tyo :: Ix i_s1Tym)
      (w1_s1Typ :: Ord e_s1Tyn)
      (ww_s1Tyu
         :: i_s1Tym
         Unf=OtherCon [])
      (ww1_s1Tyv
         :: i_s1Tym
         Unf=OtherCon [])
      (ww2_s1Tyw :: Int#)
      (ww3_s1Tyx :: Array# e_s1Tyn)
      (ww4_s1TyB
         :: i_s1Tym
         Unf=OtherCon [])
      (ww5_s1TyC
         :: i_s1Tym
         Unf=OtherCon [])
      (ww6_s1TyD :: Int#)
      (ww7_s1TyE :: Array# e_s1Tyn) ->
      let {
        lvl50_s1VSc :: (i_s1Tym, i_s1Tym)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSc = (ww_s1Tyu, ww1_s1Tyv) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1Tym] -> [(i_s1Tym, e_s1Tyn)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1Tym]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tym, e_s1Tyn);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tym, e_s1Tyn)
                    (y_i1y1h,
                     case index @ i_s1Tym w_s1Tyo lvl50_s1VSc y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1Tyw of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1Tyw of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1Tyw of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tyn ww3_s1Tyx y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSd :: (i_s1Tym, i_s1Tym)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSd = (ww4_s1TyB, ww5_s1TyC) } in
      letrec {
        go1_X1ycv [Occ=LoopBreaker] :: [i_s1Tym] -> [(i_s1Tym, e_s1Tyn)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycv
          = \ (ds_i1y1c :: [i_s1Tym]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tym, e_s1Tyn);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tym, e_s1Tyn)
                    (y_i1y1h,
                     case index @ i_s1Tym w_s1Tyo lvl51_s1VSd y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TyD of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1TyD of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TyD of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tyn ww7_s1TyE y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycv ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1Tym, e_s1Tyn)
             (GHC.Classes.$fOrd(,)
                @ i_s1Tym @ e_s1Tyn (GHC.Arr.$p1Ix @ i_s1Tym w_s1Tyo) w1_s1Typ)
             (go_i1y1b (range @ i_s1Tym w_s1Tyo lvl50_s1VSc))
             (go1_X1ycv (range @ i_s1Tym w_s1Tyo lvl51_s1VSd))
      of {
        __DEFAULT -> GHC.Types.False;
        LT -> GHC.Types.True
      }

-- RHS size: {terms: 23, types: 32, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$c< [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1Tym)
                 (@ e_s1Tyn)
                 (w_s1Tyo [Occ=Once] :: Ix i_s1Tym)
                 (w1_s1Typ [Occ=Once] :: Ord e_s1Tyn)
                 (w2_s1Tyq [Occ=Once!] :: Array i_s1Tym e_s1Tyn)
                 (w3_s1Tyr [Occ=Once!] :: Array i_s1Tym e_s1Tyn) ->
                 case w2_s1Tyq of
                 { Array ww1_s1Tyu [Occ=Once] ww2_s1Tyv [Occ=Once]
                         ww3_s1Tyw [Occ=Once] ww4_s1Tyx [Occ=Once] ->
                 case w3_s1Tyr of
                 { Array ww6_s1TyB [Occ=Once] ww7_s1TyC [Occ=Once]
                         ww8_s1TyD [Occ=Once] ww9_s1TyE [Occ=Once] ->
                 GHC.Arr.$w$c<
                   @ i_s1Tym
                   @ e_s1Tyn
                   w_s1Tyo
                   w1_s1Typ
                   ww1_s1Tyu
                   ww2_s1Tyv
                   ww3_s1Tyw
                   ww4_s1Tyx
                   ww6_s1TyB
                   ww7_s1TyC
                   ww8_s1TyD
                   ww9_s1TyE
                 }
                 }}]
GHC.Arr.$fOrdArray_$c<
  = \ (@ i_s1Tym)
      (@ e_s1Tyn)
      (w_s1Tyo :: Ix i_s1Tym)
      (w1_s1Typ :: Ord e_s1Tyn)
      (w2_s1Tyq :: Array i_s1Tym e_s1Tyn)
      (w3_s1Tyr :: Array i_s1Tym e_s1Tyn) ->
      case w2_s1Tyq of { Array ww1_s1Tyu ww2_s1Tyv ww3_s1Tyw ww4_s1Tyx ->
      case w3_s1Tyr of { Array ww6_s1TyB ww7_s1TyC ww8_s1TyD ww9_s1TyE ->
      GHC.Arr.$w$c<
        @ i_s1Tym
        @ e_s1Tyn
        w_s1Tyo
        w1_s1Typ
        ww1_s1Tyu
        ww2_s1Tyv
        ww3_s1Tyw
        ww4_s1Tyx
        ww6_s1TyB
        ww7_s1TyC
        ww8_s1TyD
        ww9_s1TyE
      }
      }

-- RHS size: {terms: 126, types: 103, coercions: 0, joins: 0/4}
GHC.Arr.$w$c>= [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i -> i -> Int# -> Array# e -> i -> i -> Int# -> Array# e -> Bool
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 20}]
GHC.Arr.$w$c>=
  = \ (@ i_s1TyJ)
      (@ e_s1TyK)
      (w_s1TyL :: Ix i_s1TyJ)
      (w1_s1TyM :: Ord e_s1TyK)
      (ww_s1TyR
         :: i_s1TyJ
         Unf=OtherCon [])
      (ww1_s1TyS
         :: i_s1TyJ
         Unf=OtherCon [])
      (ww2_s1TyT :: Int#)
      (ww3_s1TyU :: Array# e_s1TyK)
      (ww4_s1TyY
         :: i_s1TyJ
         Unf=OtherCon [])
      (ww5_s1TyZ
         :: i_s1TyJ
         Unf=OtherCon [])
      (ww6_s1Tz0 :: Int#)
      (ww7_s1Tz1 :: Array# e_s1TyK) ->
      let {
        lvl50_s1VSe :: (i_s1TyJ, i_s1TyJ)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSe = (ww_s1TyR, ww1_s1TyS) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1TyJ] -> [(i_s1TyJ, e_s1TyK)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1TyJ]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TyJ, e_s1TyK);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TyJ, e_s1TyK)
                    (y_i1y1h,
                     case index @ i_s1TyJ w_s1TyL lvl50_s1VSe y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TyT of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1TyT of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TyT of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TyK ww3_s1TyU y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSf :: (i_s1TyJ, i_s1TyJ)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSf = (ww4_s1TyY, ww5_s1TyZ) } in
      letrec {
        go1_X1ycw [Occ=LoopBreaker] :: [i_s1TyJ] -> [(i_s1TyJ, e_s1TyK)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycw
          = \ (ds_i1y1c :: [i_s1TyJ]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TyJ, e_s1TyK);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TyJ, e_s1TyK)
                    (y_i1y1h,
                     case index @ i_s1TyJ w_s1TyL lvl51_s1VSf y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1Tz0 of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1Tz0 of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1Tz0 of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TyK ww7_s1Tz1 y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycw ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1TyJ, e_s1TyK)
             (GHC.Classes.$fOrd(,)
                @ i_s1TyJ @ e_s1TyK (GHC.Arr.$p1Ix @ i_s1TyJ w_s1TyL) w1_s1TyM)
             (go_i1y1b (range @ i_s1TyJ w_s1TyL lvl50_s1VSe))
             (go1_X1ycw (range @ i_s1TyJ w_s1TyL lvl51_s1VSf))
      of {
        __DEFAULT -> GHC.Types.True;
        LT -> GHC.Types.False
      }

-- RHS size: {terms: 23, types: 32, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$c>= [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1TyJ)
                 (@ e_s1TyK)
                 (w_s1TyL [Occ=Once] :: Ix i_s1TyJ)
                 (w1_s1TyM [Occ=Once] :: Ord e_s1TyK)
                 (w2_s1TyN [Occ=Once!] :: Array i_s1TyJ e_s1TyK)
                 (w3_s1TyO [Occ=Once!] :: Array i_s1TyJ e_s1TyK) ->
                 case w2_s1TyN of
                 { Array ww1_s1TyR [Occ=Once] ww2_s1TyS [Occ=Once]
                         ww3_s1TyT [Occ=Once] ww4_s1TyU [Occ=Once] ->
                 case w3_s1TyO of
                 { Array ww6_s1TyY [Occ=Once] ww7_s1TyZ [Occ=Once]
                         ww8_s1Tz0 [Occ=Once] ww9_s1Tz1 [Occ=Once] ->
                 GHC.Arr.$w$c>=
                   @ i_s1TyJ
                   @ e_s1TyK
                   w_s1TyL
                   w1_s1TyM
                   ww1_s1TyR
                   ww2_s1TyS
                   ww3_s1TyT
                   ww4_s1TyU
                   ww6_s1TyY
                   ww7_s1TyZ
                   ww8_s1Tz0
                   ww9_s1Tz1
                 }
                 }}]
GHC.Arr.$fOrdArray_$c>=
  = \ (@ i_s1TyJ)
      (@ e_s1TyK)
      (w_s1TyL :: Ix i_s1TyJ)
      (w1_s1TyM :: Ord e_s1TyK)
      (w2_s1TyN :: Array i_s1TyJ e_s1TyK)
      (w3_s1TyO :: Array i_s1TyJ e_s1TyK) ->
      case w2_s1TyN of { Array ww1_s1TyR ww2_s1TyS ww3_s1TyT ww4_s1TyU ->
      case w3_s1TyO of { Array ww6_s1TyY ww7_s1TyZ ww8_s1Tz0 ww9_s1Tz1 ->
      GHC.Arr.$w$c>=
        @ i_s1TyJ
        @ e_s1TyK
        w_s1TyL
        w1_s1TyM
        ww1_s1TyR
        ww2_s1TyS
        ww3_s1TyT
        ww4_s1TyU
        ww6_s1TyY
        ww7_s1TyZ
        ww8_s1Tz0
        ww9_s1Tz1
      }
      }

-- RHS size: {terms: 126, types: 103, coercions: 0, joins: 0/4}
GHC.Arr.$w$c> [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i -> i -> Int# -> Array# e -> i -> i -> Int# -> Array# e -> Bool
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 20}]
GHC.Arr.$w$c>
  = \ (@ i_s1Tz6)
      (@ e_s1Tz7)
      (w_s1Tz8 :: Ix i_s1Tz6)
      (w1_s1Tz9 :: Ord e_s1Tz7)
      (ww_s1Tze
         :: i_s1Tz6
         Unf=OtherCon [])
      (ww1_s1Tzf
         :: i_s1Tz6
         Unf=OtherCon [])
      (ww2_s1Tzg :: Int#)
      (ww3_s1Tzh :: Array# e_s1Tz7)
      (ww4_s1Tzl
         :: i_s1Tz6
         Unf=OtherCon [])
      (ww5_s1Tzm
         :: i_s1Tz6
         Unf=OtherCon [])
      (ww6_s1Tzn :: Int#)
      (ww7_s1Tzo :: Array# e_s1Tz7) ->
      let {
        lvl50_s1VSg :: (i_s1Tz6, i_s1Tz6)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSg = (ww_s1Tze, ww1_s1Tzf) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1Tz6] -> [(i_s1Tz6, e_s1Tz7)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1Tz6]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tz6, e_s1Tz7);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tz6, e_s1Tz7)
                    (y_i1y1h,
                     case index @ i_s1Tz6 w_s1Tz8 lvl50_s1VSg y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1Tzg of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1Tzg of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1Tzg of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tz7 ww3_s1Tzh y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSh :: (i_s1Tz6, i_s1Tz6)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSh = (ww4_s1Tzl, ww5_s1Tzm) } in
      letrec {
        go1_X1ycx [Occ=LoopBreaker] :: [i_s1Tz6] -> [(i_s1Tz6, e_s1Tz7)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycx
          = \ (ds_i1y1c :: [i_s1Tz6]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tz6, e_s1Tz7);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tz6, e_s1Tz7)
                    (y_i1y1h,
                     case index @ i_s1Tz6 w_s1Tz8 lvl51_s1VSh y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1Tzn of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1Tzn of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1Tzn of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tz7 ww7_s1Tzo y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycx ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1Tz6, e_s1Tz7)
             (GHC.Classes.$fOrd(,)
                @ i_s1Tz6 @ e_s1Tz7 (GHC.Arr.$p1Ix @ i_s1Tz6 w_s1Tz8) w1_s1Tz9)
             (go_i1y1b (range @ i_s1Tz6 w_s1Tz8 lvl50_s1VSg))
             (go1_X1ycx (range @ i_s1Tz6 w_s1Tz8 lvl51_s1VSh))
      of {
        __DEFAULT -> GHC.Types.False;
        GT -> GHC.Types.True
      }

-- RHS size: {terms: 23, types: 32, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$c> [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1Tz6)
                 (@ e_s1Tz7)
                 (w_s1Tz8 [Occ=Once] :: Ix i_s1Tz6)
                 (w1_s1Tz9 [Occ=Once] :: Ord e_s1Tz7)
                 (w2_s1Tza [Occ=Once!] :: Array i_s1Tz6 e_s1Tz7)
                 (w3_s1Tzb [Occ=Once!] :: Array i_s1Tz6 e_s1Tz7) ->
                 case w2_s1Tza of
                 { Array ww1_s1Tze [Occ=Once] ww2_s1Tzf [Occ=Once]
                         ww3_s1Tzg [Occ=Once] ww4_s1Tzh [Occ=Once] ->
                 case w3_s1Tzb of
                 { Array ww6_s1Tzl [Occ=Once] ww7_s1Tzm [Occ=Once]
                         ww8_s1Tzn [Occ=Once] ww9_s1Tzo [Occ=Once] ->
                 GHC.Arr.$w$c>
                   @ i_s1Tz6
                   @ e_s1Tz7
                   w_s1Tz8
                   w1_s1Tz9
                   ww1_s1Tze
                   ww2_s1Tzf
                   ww3_s1Tzg
                   ww4_s1Tzh
                   ww6_s1Tzl
                   ww7_s1Tzm
                   ww8_s1Tzn
                   ww9_s1Tzo
                 }
                 }}]
GHC.Arr.$fOrdArray_$c>
  = \ (@ i_s1Tz6)
      (@ e_s1Tz7)
      (w_s1Tz8 :: Ix i_s1Tz6)
      (w1_s1Tz9 :: Ord e_s1Tz7)
      (w2_s1Tza :: Array i_s1Tz6 e_s1Tz7)
      (w3_s1Tzb :: Array i_s1Tz6 e_s1Tz7) ->
      case w2_s1Tza of { Array ww1_s1Tze ww2_s1Tzf ww3_s1Tzg ww4_s1Tzh ->
      case w3_s1Tzb of { Array ww6_s1Tzl ww7_s1Tzm ww8_s1Tzn ww9_s1Tzo ->
      GHC.Arr.$w$c>
        @ i_s1Tz6
        @ e_s1Tz7
        w_s1Tz8
        w1_s1Tz9
        ww1_s1Tze
        ww2_s1Tzf
        ww3_s1Tzg
        ww4_s1Tzh
        ww6_s1Tzl
        ww7_s1Tzm
        ww8_s1Tzn
        ww9_s1Tzo
      }
      }

-- RHS size: {terms: 126, types: 103, coercions: 0, joins: 0/4}
GHC.Arr.$w$c<= [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i -> i -> Int# -> Array# e -> i -> i -> Int# -> Array# e -> Bool
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 20}]
GHC.Arr.$w$c<=
  = \ (@ i_s1Tzt)
      (@ e_s1Tzu)
      (w_s1Tzv :: Ix i_s1Tzt)
      (w1_s1Tzw :: Ord e_s1Tzu)
      (ww_s1TzB
         :: i_s1Tzt
         Unf=OtherCon [])
      (ww1_s1TzC
         :: i_s1Tzt
         Unf=OtherCon [])
      (ww2_s1TzD :: Int#)
      (ww3_s1TzE :: Array# e_s1Tzu)
      (ww4_s1TzI
         :: i_s1Tzt
         Unf=OtherCon [])
      (ww5_s1TzJ
         :: i_s1Tzt
         Unf=OtherCon [])
      (ww6_s1TzK :: Int#)
      (ww7_s1TzL :: Array# e_s1Tzu) ->
      let {
        lvl50_s1VSi :: (i_s1Tzt, i_s1Tzt)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSi = (ww_s1TzB, ww1_s1TzC) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1Tzt] -> [(i_s1Tzt, e_s1Tzu)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1Tzt]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tzt, e_s1Tzu);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tzt, e_s1Tzu)
                    (y_i1y1h,
                     case index @ i_s1Tzt w_s1Tzv lvl50_s1VSi y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TzD of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1TzD of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TzD of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tzu ww3_s1TzE y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSj :: (i_s1Tzt, i_s1Tzt)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSj = (ww4_s1TzI, ww5_s1TzJ) } in
      letrec {
        go1_X1ycy [Occ=LoopBreaker] :: [i_s1Tzt] -> [(i_s1Tzt, e_s1Tzu)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycy
          = \ (ds_i1y1c :: [i_s1Tzt]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1Tzt, e_s1Tzu);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1Tzt, e_s1Tzu)
                    (y_i1y1h,
                     case index @ i_s1Tzt w_s1Tzv lvl51_s1VSj y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TzK of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1TzK of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TzK of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1Tzu ww7_s1TzL y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycy ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1Tzt, e_s1Tzu)
             (GHC.Classes.$fOrd(,)
                @ i_s1Tzt @ e_s1Tzu (GHC.Arr.$p1Ix @ i_s1Tzt w_s1Tzv) w1_s1Tzw)
             (go_i1y1b (range @ i_s1Tzt w_s1Tzv lvl50_s1VSi))
             (go1_X1ycy (range @ i_s1Tzt w_s1Tzv lvl51_s1VSj))
      of {
        __DEFAULT -> GHC.Types.True;
        GT -> GHC.Types.False
      }

-- RHS size: {terms: 23, types: 32, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$c<= [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Bool
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1Tzt)
                 (@ e_s1Tzu)
                 (w_s1Tzv [Occ=Once] :: Ix i_s1Tzt)
                 (w1_s1Tzw [Occ=Once] :: Ord e_s1Tzu)
                 (w2_s1Tzx [Occ=Once!] :: Array i_s1Tzt e_s1Tzu)
                 (w3_s1Tzy [Occ=Once!] :: Array i_s1Tzt e_s1Tzu) ->
                 case w2_s1Tzx of
                 { Array ww1_s1TzB [Occ=Once] ww2_s1TzC [Occ=Once]
                         ww3_s1TzD [Occ=Once] ww4_s1TzE [Occ=Once] ->
                 case w3_s1Tzy of
                 { Array ww6_s1TzI [Occ=Once] ww7_s1TzJ [Occ=Once]
                         ww8_s1TzK [Occ=Once] ww9_s1TzL [Occ=Once] ->
                 GHC.Arr.$w$c<=
                   @ i_s1Tzt
                   @ e_s1Tzu
                   w_s1Tzv
                   w1_s1Tzw
                   ww1_s1TzB
                   ww2_s1TzC
                   ww3_s1TzD
                   ww4_s1TzE
                   ww6_s1TzI
                   ww7_s1TzJ
                   ww8_s1TzK
                   ww9_s1TzL
                 }
                 }}]
GHC.Arr.$fOrdArray_$c<=
  = \ (@ i_s1Tzt)
      (@ e_s1Tzu)
      (w_s1Tzv :: Ix i_s1Tzt)
      (w1_s1Tzw :: Ord e_s1Tzu)
      (w2_s1Tzx :: Array i_s1Tzt e_s1Tzu)
      (w3_s1Tzy :: Array i_s1Tzt e_s1Tzu) ->
      case w2_s1Tzx of { Array ww1_s1TzB ww2_s1TzC ww3_s1TzD ww4_s1TzE ->
      case w3_s1Tzy of { Array ww6_s1TzI ww7_s1TzJ ww8_s1TzK ww9_s1TzL ->
      GHC.Arr.$w$c<=
        @ i_s1Tzt
        @ e_s1Tzu
        w_s1Tzv
        w1_s1Tzw
        ww1_s1TzB
        ww2_s1TzC
        ww3_s1TzD
        ww4_s1TzE
        ww6_s1TzI
        ww7_s1TzJ
        ww8_s1TzK
        ww9_s1TzL
      }
      }

-- RHS size: {terms: 134, types: 121, coercions: 0, joins: 0/4}
GHC.Arr.$w$cmax [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i
     -> i
     -> Int#
     -> Array# e
     -> i
     -> i
     -> Int#
     -> Array# e
     -> (# i, i, Int#, Array# e #)
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 100}]
GHC.Arr.$w$cmax
  = \ (@ i_s1TzQ)
      (@ e_s1TzR)
      (w_s1TzS :: Ix i_s1TzQ)
      (w1_s1TzT :: Ord e_s1TzR)
      (ww_s1TzY
         :: i_s1TzQ
         Unf=OtherCon [])
      (ww1_s1TzZ
         :: i_s1TzQ
         Unf=OtherCon [])
      (ww2_s1TA0 :: Int#)
      (ww3_s1TA1 :: Array# e_s1TzR)
      (ww4_s1TA5
         :: i_s1TzQ
         Unf=OtherCon [])
      (ww5_s1TA6
         :: i_s1TzQ
         Unf=OtherCon [])
      (ww6_s1TA7 :: Int#)
      (ww7_s1TA8 :: Array# e_s1TzR) ->
      let {
        lvl50_s1VSk :: (i_s1TzQ, i_s1TzQ)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSk = (ww_s1TzY, ww1_s1TzZ) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1TzQ] -> [(i_s1TzQ, e_s1TzR)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1TzQ]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TzQ, e_s1TzR);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TzQ, e_s1TzR)
                    (y_i1y1h,
                     case index @ i_s1TzQ w_s1TzS lvl50_s1VSk y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TA0 of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1TA0 of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TA0 of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TzR ww3_s1TA1 y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSl :: (i_s1TzQ, i_s1TzQ)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSl = (ww4_s1TA5, ww5_s1TA6) } in
      letrec {
        go1_X1ycz [Occ=LoopBreaker] :: [i_s1TzQ] -> [(i_s1TzQ, e_s1TzR)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycz
          = \ (ds_i1y1c :: [i_s1TzQ]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TzQ, e_s1TzR);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TzQ, e_s1TzR)
                    (y_i1y1h,
                     case index @ i_s1TzQ w_s1TzS lvl51_s1VSl y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TA7 of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1TA7 of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TA7 of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TzR ww7_s1TA8 y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycz ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1TzQ, e_s1TzR)
             (GHC.Classes.$fOrd(,)
                @ i_s1TzQ @ e_s1TzR (GHC.Arr.$p1Ix @ i_s1TzQ w_s1TzS) w1_s1TzT)
             (go_i1y1b (range @ i_s1TzQ w_s1TzS lvl50_s1VSk))
             (go1_X1ycz (range @ i_s1TzQ w_s1TzS lvl51_s1VSl))
      of {
        __DEFAULT -> (# ww4_s1TA5, ww5_s1TA6, ww6_s1TA7, ww7_s1TA8 #);
        GT -> (# ww_s1TzY, ww1_s1TzZ, ww2_s1TA0, ww3_s1TA1 #)
      }

-- RHS size: {terms: 30, types: 49, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$cmax [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Array i e
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1TzQ)
                 (@ e_s1TzR)
                 (w_s1TzS [Occ=Once] :: Ix i_s1TzQ)
                 (w1_s1TzT [Occ=Once] :: Ord e_s1TzR)
                 (w2_s1TzU [Occ=Once!] :: Array i_s1TzQ e_s1TzR)
                 (w3_s1TzV [Occ=Once!] :: Array i_s1TzQ e_s1TzR) ->
                 case w2_s1TzU of
                 { Array ww1_s1TzY [Occ=Once] ww2_s1TzZ [Occ=Once]
                         ww3_s1TA0 [Occ=Once] ww4_s1TA1 [Occ=Once] ->
                 case w3_s1TzV of
                 { Array ww6_s1TA5 [Occ=Once] ww7_s1TA6 [Occ=Once]
                         ww8_s1TA7 [Occ=Once] ww9_s1TA8 [Occ=Once] ->
                 case GHC.Arr.$w$cmax
                        @ i_s1TzQ
                        @ e_s1TzR
                        w_s1TzS
                        w1_s1TzT
                        ww1_s1TzY
                        ww2_s1TzZ
                        ww3_s1TA0
                        ww4_s1TA1
                        ww6_s1TA5
                        ww7_s1TA6
                        ww8_s1TA7
                        ww9_s1TA8
                 of
                 { (# ww11_s1TBK [Occ=Once], ww12_s1TBL [Occ=Once],
                      ww13_s1TBM [Occ=Once], ww14_s1TBN [Occ=Once] #) ->
                 GHC.Arr.Array
                   @ i_s1TzQ @ e_s1TzR ww11_s1TBK ww12_s1TBL ww13_s1TBM ww14_s1TBN
                 }
                 }
                 }}]
GHC.Arr.$fOrdArray_$cmax
  = \ (@ i_s1TzQ)
      (@ e_s1TzR)
      (w_s1TzS :: Ix i_s1TzQ)
      (w1_s1TzT :: Ord e_s1TzR)
      (w2_s1TzU :: Array i_s1TzQ e_s1TzR)
      (w3_s1TzV :: Array i_s1TzQ e_s1TzR) ->
      case w2_s1TzU of { Array ww1_s1TzY ww2_s1TzZ ww3_s1TA0 ww4_s1TA1 ->
      case w3_s1TzV of { Array ww6_s1TA5 ww7_s1TA6 ww8_s1TA7 ww9_s1TA8 ->
      case GHC.Arr.$w$cmax
             @ i_s1TzQ
             @ e_s1TzR
             w_s1TzS
             w1_s1TzT
             ww1_s1TzY
             ww2_s1TzZ
             ww3_s1TA0
             ww4_s1TA1
             ww6_s1TA5
             ww7_s1TA6
             ww8_s1TA7
             ww9_s1TA8
      of
      { (# ww11_s1TBK, ww12_s1TBL, ww13_s1TBM, ww14_s1TBN #) ->
      GHC.Arr.Array
        @ i_s1TzQ @ e_s1TzR ww11_s1TBK ww12_s1TBL ww13_s1TBM ww14_s1TBN
      }
      }
      }

-- RHS size: {terms: 134, types: 121, coercions: 0, joins: 0/4}
GHC.Arr.$w$cmin [InlPrag=NOUSERINLINE[0]]
  :: forall i e.
     (Ix i, Ord e) =>
     i
     -> i
     -> Int#
     -> Array# e
     -> i
     -> i
     -> Int#
     -> Array# e
     -> (# i, i, Int#, Array# e #)
[GblId,
 Arity=10,
 Str=<S(LC(S)LLLLL),U(1*U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [150 0 0 0 0 0 0 0 0 0] 716 100}]
GHC.Arr.$w$cmin
  = \ (@ i_s1TAg)
      (@ e_s1TAh)
      (w_s1TAi :: Ix i_s1TAg)
      (w1_s1TAj :: Ord e_s1TAh)
      (ww_s1TAo
         :: i_s1TAg
         Unf=OtherCon [])
      (ww1_s1TAp
         :: i_s1TAg
         Unf=OtherCon [])
      (ww2_s1TAq :: Int#)
      (ww3_s1TAr :: Array# e_s1TAh)
      (ww4_s1TAv
         :: i_s1TAg
         Unf=OtherCon [])
      (ww5_s1TAw
         :: i_s1TAg
         Unf=OtherCon [])
      (ww6_s1TAx :: Int#)
      (ww7_s1TAy :: Array# e_s1TAh) ->
      let {
        lvl50_s1VSm :: (i_s1TAg, i_s1TAg)
        [LclId, Unf=OtherCon []]
        lvl50_s1VSm = (ww_s1TAo, ww1_s1TAp) } in
      letrec {
        go_i1y1b [Occ=LoopBreaker] :: [i_s1TAg] -> [(i_s1TAg, e_s1TAh)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i1y1b
          = \ (ds_i1y1c :: [i_s1TAg]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TAg, e_s1TAh);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TAg, e_s1TAh)
                    (y_i1y1h,
                     case index @ i_s1TAg w_s1TAi lvl50_s1VSm y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TAq of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww2_s1TAq of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww2_s1TAq of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TAh ww3_s1TAr y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go_i1y1b ys_i1y1i)
              }; } in
      let {
        lvl51_s1VSn :: (i_s1TAg, i_s1TAg)
        [LclId, Unf=OtherCon []]
        lvl51_s1VSn = (ww4_s1TAv, ww5_s1TAw) } in
      letrec {
        go1_X1ycA [Occ=LoopBreaker] :: [i_s1TAg] -> [(i_s1TAg, e_s1TAh)]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go1_X1ycA
          = \ (ds_i1y1c :: [i_s1TAg]) ->
              case ds_i1y1c of {
                [] -> GHC.Types.[] @ (i_s1TAg, e_s1TAh);
                : y_i1y1h ys_i1y1i ->
                  GHC.Types.:
                    @ (i_s1TAg, e_s1TAh)
                    (y_i1y1h,
                     case index @ i_s1TAg w_s1TAi lvl51_s1VSn y_i1y1h of { I# y1_at1i ->
                     case <=# 0# y1_at1i of {
                       __DEFAULT ->
                         case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TAx of wild2_00 { };
                       1# ->
                         case <# y1_at1i ww6_s1TAx of {
                           __DEFAULT ->
                             case GHC.Arr.$wbadSafeIndex y1_at1i ww6_s1TAx of wild2_00 { };
                           1# ->
                             case indexArray# @ e_s1TAh ww7_s1TAy y1_at1i of
                             { (# ipv_s1MGr #) ->
                             ipv_s1MGr
                             }
                         }
                     }
                     })
                    (go1_X1ycA ys_i1y1i)
              }; } in
      case GHC.Classes.$fOrd[]_$ccompare
             @ (i_s1TAg, e_s1TAh)
             (GHC.Classes.$fOrd(,)
                @ i_s1TAg @ e_s1TAh (GHC.Arr.$p1Ix @ i_s1TAg w_s1TAi) w1_s1TAj)
             (go_i1y1b (range @ i_s1TAg w_s1TAi lvl50_s1VSm))
             (go1_X1ycA (range @ i_s1TAg w_s1TAi lvl51_s1VSn))
      of {
        __DEFAULT -> (# ww_s1TAo, ww1_s1TAp, ww2_s1TAq, ww3_s1TAr #);
        GT -> (# ww4_s1TAv, ww5_s1TAw, ww6_s1TAx, ww7_s1TAy #)
      }

-- RHS size: {terms: 30, types: 49, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray_$cmin [InlPrag=NOUSERINLINE[0]]
  :: forall i e. (Ix i, Ord e) => Array i e -> Array i e -> Array i e
[GblId,
 Arity=4,
 Str=<S(LC(S)LLLLL),U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ i_s1TAg)
                 (@ e_s1TAh)
                 (w_s1TAi [Occ=Once] :: Ix i_s1TAg)
                 (w1_s1TAj [Occ=Once] :: Ord e_s1TAh)
                 (w2_s1TAk [Occ=Once!] :: Array i_s1TAg e_s1TAh)
                 (w3_s1TAl [Occ=Once!] :: Array i_s1TAg e_s1TAh) ->
                 case w2_s1TAk of
                 { Array ww1_s1TAo [Occ=Once] ww2_s1TAp [Occ=Once]
                         ww3_s1TAq [Occ=Once] ww4_s1TAr [Occ=Once] ->
                 case w3_s1TAl of
                 { Array ww6_s1TAv [Occ=Once] ww7_s1TAw [Occ=Once]
                         ww8_s1TAx [Occ=Once] ww9_s1TAy [Occ=Once] ->
                 case GHC.Arr.$w$cmin
                        @ i_s1TAg
                        @ e_s1TAh
                        w_s1TAi
                        w1_s1TAj
                        ww1_s1TAo
                        ww2_s1TAp
                        ww3_s1TAq
                        ww4_s1TAr
                        ww6_s1TAv
                        ww7_s1TAw
                        ww8_s1TAx
                        ww9_s1TAy
                 of
                 { (# ww11_s1TBP [Occ=Once], ww12_s1TBQ [Occ=Once],
                      ww13_s1TBR [Occ=Once], ww14_s1TBS [Occ=Once] #) ->
                 GHC.Arr.Array
                   @ i_s1TAg @ e_s1TAh ww11_s1TBP ww12_s1TBQ ww13_s1TBR ww14_s1TBS
                 }
                 }
                 }}]
GHC.Arr.$fOrdArray_$cmin
  = \ (@ i_s1TAg)
      (@ e_s1TAh)
      (w_s1TAi :: Ix i_s1TAg)
      (w1_s1TAj :: Ord e_s1TAh)
      (w2_s1TAk :: Array i_s1TAg e_s1TAh)
      (w3_s1TAl :: Array i_s1TAg e_s1TAh) ->
      case w2_s1TAk of { Array ww1_s1TAo ww2_s1TAp ww3_s1TAq ww4_s1TAr ->
      case w3_s1TAl of { Array ww6_s1TAv ww7_s1TAw ww8_s1TAx ww9_s1TAy ->
      case GHC.Arr.$w$cmin
             @ i_s1TAg
             @ e_s1TAh
             w_s1TAi
             w1_s1TAj
             ww1_s1TAo
             ww2_s1TAp
             ww3_s1TAq
             ww4_s1TAr
             ww6_s1TAv
             ww7_s1TAw
             ww8_s1TAx
             ww9_s1TAy
      of
      { (# ww11_s1TBP, ww12_s1TBQ, ww13_s1TBR, ww14_s1TBS #) ->
      GHC.Arr.Array
        @ i_s1TAg @ e_s1TAh ww11_s1TBP ww12_s1TBQ ww13_s1TBR ww14_s1TBS
      }
      }
      }

-- RHS size: {terms: 29, types: 27, coercions: 0, joins: 0/0}
GHC.Arr.$fOrdArray [InlPrag=NOUSERINLINE CONLIKE]
  :: forall i e. (Ix i, Ord e) => Ord (Array i e)
[GblId[DFunId],
 Arity=2,
 Str=<L,U(U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),C(U),C(C1(U(U))),A,A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),C(C1(U)),A,A,A,A,A)>m,
 Unf=DFun: \ (@ i_a1KRv)
             (@ e_a1KRw)
             (v_X8V :: Ix i_a1KRv)
             (v1_X8X :: Ord e_a1KRw) ->
       GHC.Classes.C:Ord TYPE: Array i_a1KRv e_a1KRw
                         GHC.Arr.$fOrdArray_$cp1Ord @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         cmpArray @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$c< @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$c<= @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$c> @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$c>= @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$cmax @ i_a1KRv @ e_a1KRw v_X8V v1_X8X
                         GHC.Arr.$fOrdArray_$cmin @ i_a1KRv @ e_a1KRw v_X8V v1_X8X]
GHC.Arr.$fOrdArray
  = \ (@ i_a1LNi)
      (@ e_a1LNj)
      ($dIx_a1LNk :: Ix i_a1LNi)
      ($dOrd_a1LNl :: Ord e_a1LNj) ->
      GHC.Classes.C:Ord
        @ (Array i_a1LNi e_a1LNj)
        (GHC.Arr.$fOrdArray_$cp1Ord
           @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (cmpArray @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$c< @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$c<=
           @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$c> @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$c>=
           @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$cmax
           @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)
        (GHC.Arr.$fOrdArray_$cmin
           @ i_a1LNi @ e_a1LNj $dIx_a1LNk $dOrd_a1LNl)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl49_r1Xwl :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl49_r1Xwl = "array "#

-- RHS size: {terms: 166, types: 147, coercions: 0, joins: 0/6}
GHC.Arr.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Show a, Show b) => Int# -> Array a b -> ShowS
[GblId,
 Arity=5,
 Str=<L,U(A,1*C1(U),C(C1(U(U))),A,A,A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><S,U><L,U(U,U,U,U)>,
 Unf=OtherCon []]
GHC.Arr.$w$cshowsPrec
  = \ (@ a_s1TAH)
      (@ b_s1TAI)
      (w_s1TAJ :: Ix a_s1TAH)
      (w1_s1TAK :: Show a_s1TAH)
      (w2_s1TAL :: Show b_s1TAI)
      (ww_s1TAQ :: Int#)
      (w3_s1TAN :: Array a_s1TAH b_s1TAI) ->
      let {
        ls_s1NmK :: [(a_s1TAH, b_s1TAI)]
        [LclId]
        ls_s1NmK
          = case w3_s1TAN of { Array l_a1KYC u_a1KYD dt_d1MtN ds_d1Mcl ->
            let {
              lvl50_s1VSo :: (a_s1TAH, a_s1TAH)
              [LclId, Unf=OtherCon []]
              lvl50_s1VSo = (l_a1KYC, u_a1KYD) } in
            letrec {
              go_i1y1b [Occ=LoopBreaker] :: [a_s1TAH] -> [(a_s1TAH, b_s1TAI)]
              [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
              go_i1y1b
                = \ (ds1_i1y1c :: [a_s1TAH]) ->
                    case ds1_i1y1c of {
                      [] -> GHC.Types.[] @ (a_s1TAH, b_s1TAI);
                      : y_i1y1h ys_i1y1i ->
                        GHC.Types.:
                          @ (a_s1TAH, b_s1TAI)
                          (y_i1y1h,
                           case index @ a_s1TAH w_s1TAJ lvl50_s1VSo y_i1y1h of { I# y1_at1i ->
                           case <=# 0# y1_at1i of {
                             __DEFAULT ->
                               case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild3_00 { };
                             1# ->
                               case <# y1_at1i dt_d1MtN of {
                                 __DEFAULT ->
                                   case GHC.Arr.$wbadSafeIndex y1_at1i dt_d1MtN of wild3_00 { };
                                 1# ->
                                   case indexArray# @ b_s1TAI ds_d1Mcl y1_at1i of
                                   { (# ipv_s1MGr #) ->
                                   ipv_s1MGr
                                   }
                               }
                           }
                           })
                          (go_i1y1b ys_i1y1i)
                    }; } in
            go_i1y1b (range @ a_s1TAH w_s1TAJ lvl50_s1VSo)
            } } in
      let {
        p_s1NmJ :: ShowS
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        p_s1NmJ
          = \ (x_X1Mpn :: String) ->
              unpackAppendCString#
                lvl49_r1Xwl
                (case w3_s1TAN of { Array l_a1KXT u_a1KXU dt_d1Mtx ds_d1M6N ->
                 GHC.Types.:
                   @ Char
                   GHC.Show.$fShow(,)4
                   (GHC.Show.$fShow(,)_go1
                      (GHC.Types.:
                         @ ShowS
                         (showsPrec @ a_s1TAH w1_s1TAK GHC.Show.$fShow(,)1 l_a1KXT)
                         (GHC.Types.:
                            @ ShowS
                            (showsPrec @ a_s1TAH w1_s1TAK GHC.Show.$fShow(,)1 u_a1KXU)
                            (GHC.Types.[] @ ShowS)))
                      (GHC.Types.:
                         @ Char
                         GHC.Show.$fShow(,)2
                         (GHC.Types.:
                            @ Char
                            f_r1Xus
                            (case ls_s1NmK of {
                               [] -> unpackAppendCString# GHC.Show.showList__4 x_X1Mpn;
                               : x1_i1Jjd xs_i1Jje ->
                                 GHC.Types.:
                                   @ Char
                                   GHC.Show.showList__3
                                   (case x1_i1Jjd of { (ww2_X1MOa, ww3_X1MOc) ->
                                    GHC.Types.:
                                      @ Char
                                      GHC.Show.$fShow(,)4
                                      (GHC.Show.$fShow(,)_go1
                                         (GHC.Types.:
                                            @ ShowS
                                            (showsPrec
                                               @ a_s1TAH w1_s1TAK GHC.Show.$fShow(,)1 ww2_X1MOa)
                                            (GHC.Types.:
                                               @ ShowS
                                               (showsPrec
                                                  @ b_s1TAI w2_s1TAL GHC.Show.$fShow(,)1 ww3_X1MOc)
                                               (GHC.Types.[] @ ShowS)))
                                         (GHC.Types.:
                                            @ Char
                                            GHC.Show.$fShow(,)2
                                            (let {
                                               lvl50_s1NmR :: [Char]
                                               [LclId, Unf=OtherCon []]
                                               lvl50_s1NmR
                                                 = GHC.Types.:
                                                     @ Char GHC.Show.showList__2 x_X1Mpn } in
                                             letrec {
                                               showl_s1NmQ [Occ=LoopBreaker]
                                                 :: [(a_s1TAH, b_s1TAI)] -> String
                                               [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                               showl_s1NmQ
                                                 = \ (ds2_i1Jjj :: [(a_s1TAH, b_s1TAI)]) ->
                                                     case ds2_i1Jjj of {
                                                       [] -> lvl50_s1NmR;
                                                       : y_i1Jjp ys_i1Jjq ->
                                                         GHC.Types.:
                                                           @ Char
                                                           GHC.Show.showList__1
                                                           (case y_i1Jjp of
                                                            { (ww5_X1MOq, ww6_X1MOs) ->
                                                            GHC.Types.:
                                                              @ Char
                                                              GHC.Show.$fShow(,)4
                                                              (GHC.Show.$fShow(,)_go1
                                                                 (GHC.Types.:
                                                                    @ ShowS
                                                                    (showsPrec
                                                                       @ a_s1TAH
                                                                       w1_s1TAK
                                                                       GHC.Show.$fShow(,)1
                                                                       ww5_X1MOq)
                                                                    (GHC.Types.:
                                                                       @ ShowS
                                                                       (showsPrec
                                                                          @ b_s1TAI
                                                                          w2_s1TAL
                                                                          GHC.Show.$fShow(,)1
                                                                          ww6_X1MOs)
                                                                       (GHC.Types.[] @ ShowS)))
                                                                 (GHC.Types.:
                                                                    @ Char
                                                                    GHC.Show.$fShow(,)2
                                                                    (showl_s1NmQ ys_i1Jjq)))
                                                            })
                                                     }; } in
                                             showl_s1NmQ xs_i1Jje)))
                                    })
                             }))))
                 }) } in
      case ># ww_s1TAQ 10# of {
        __DEFAULT -> p_s1NmJ;
        1# ->
          \ (x_i1Mhy :: String) ->
            GHC.Types.:
              @ Char
              GHC.Show.$fShow(,)4
              (p_s1NmJ (GHC.Types.: @ Char GHC.Show.$fShow(,)2 x_i1Mhy))
      }

-- RHS size: {terms: 16, types: 18, coercions: 0, joins: 0/0}
GHC.Arr.$fShowArray_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: forall a b. (Ix a, Show a, Show b) => Int -> Array a b -> ShowS
[GblId,
 Arity=5,
 Str=<L,U(A,C(U),C(C1(U(U))),A,A,A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><S(S),1*U(U)><L,U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s1TAH)
                 (@ b_s1TAI)
                 (w_s1TAJ [Occ=Once] :: Ix a_s1TAH)
                 (w1_s1TAK [Occ=Once] :: Show a_s1TAH)
                 (w2_s1TAL [Occ=Once] :: Show b_s1TAI)
                 (w3_s1TAM [Occ=Once!] :: Int)
                 (w4_s1TAN [Occ=Once] :: Array a_s1TAH b_s1TAI) ->
                 case w3_s1TAM of { I# ww1_s1TAQ [Occ=Once] ->
                 GHC.Arr.$w$cshowsPrec
                   @ a_s1TAH @ b_s1TAI w_s1TAJ w1_s1TAK w2_s1TAL ww1_s1TAQ w4_s1TAN
                 }}]
GHC.Arr.$fShowArray_$cshowsPrec
  = \ (@ a_s1TAH)
      (@ b_s1TAI)
      (w_s1TAJ :: Ix a_s1TAH)
      (w1_s1TAK :: Show a_s1TAH)
      (w2_s1TAL :: Show b_s1TAI)
      (w3_s1TAM :: Int)
      (w4_s1TAN :: Array a_s1TAH b_s1TAI) ->
      case w3_s1TAM of { I# ww1_s1TAQ ->
      GHC.Arr.$w$cshowsPrec
        @ a_s1TAH @ b_s1TAI w_s1TAJ w1_s1TAK w2_s1TAL ww1_s1TAQ w4_s1TAN
      }

-- RHS size: {terms: 13, types: 16, coercions: 0, joins: 0/0}
GHC.Arr.$fShowArray_$cshow
  :: forall a b. (Ix a, Show a, Show b) => Array a b -> String
[GblId,
 Arity=4,
 Str=<L,U(A,C(U),C(C1(U(U))),A,A,A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1LMw)
                 (@ b_a1LMx)
                 ($dIx_a1LMy [Occ=Once] :: Ix a_a1LMw)
                 ($dShow_a1LMz [Occ=Once] :: Show a_a1LMw)
                 ($dShow1_a1LMA [Occ=Once] :: Show b_a1LMx)
                 (x_i1Jj2 [Occ=Once] :: Array a_a1LMw b_a1LMx) ->
                 GHC.Arr.$fShowArray_$cshowsPrec
                   @ a_a1LMw
                   @ b_a1LMx
                   $dIx_a1LMy
                   $dShow_a1LMz
                   $dShow1_a1LMA
                   GHC.Arr.$fIxInt1
                   x_i1Jj2
                   (GHC.Types.[] @ Char)}]
GHC.Arr.$fShowArray_$cshow
  = \ (@ a_a1LMw)
      (@ b_a1LMx)
      ($dIx_a1LMy :: Ix a_a1LMw)
      ($dShow_a1LMz :: Show a_a1LMw)
      ($dShow1_a1LMA :: Show b_a1LMx)
      (x_i1Jj2 :: Array a_a1LMw b_a1LMx) ->
      GHC.Arr.$w$cshowsPrec
        @ a_a1LMw
        @ b_a1LMx
        $dIx_a1LMy
        $dShow_a1LMz
        $dShow1_a1LMA
        0#
        x_i1Jj2
        (GHC.Types.[] @ Char)

-- RHS size: {terms: 17, types: 23, coercions: 0, joins: 0/0}
GHC.Arr.$fShowArray_$cshowList
  :: forall a b. (Ix a, Show a, Show b) => [Array a b] -> ShowS
[GblId,
 Arity=5,
 Str=<L,U(A,C(U),C(C1(U(U))),A,A,A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a1LMw)
                 (@ b_a1LMx)
                 ($dIx_a1LMy [Occ=Once] :: Ix a_a1LMw)
                 ($dShow_a1LMz [Occ=Once] :: Show a_a1LMw)
                 ($dShow1_a1LMA [Occ=Once] :: Show b_a1LMx)
                 (ls_i1Mix [Occ=Once] :: [Array a_a1LMw b_a1LMx])
                 (s_i1Miy [Occ=Once] :: String) ->
                 showList__
                   @ (Array a_a1LMw b_a1LMx)
                   (GHC.Arr.$fShowArray_$cshowsPrec
                      @ a_a1LMw
                      @ b_a1LMx
                      $dIx_a1LMy
                      $dShow_a1LMz
                      $dShow1_a1LMA
                      GHC.Arr.$fIxInt1)
                   ls_i1Mix
                   s_i1Miy}]
GHC.Arr.$fShowArray_$cshowList
  = \ (@ a_a1LMw)
      (@ b_a1LMx)
      ($dIx_a1LMy :: Ix a_a1LMw)
      ($dShow_a1LMz :: Show a_a1LMw)
      ($dShow1_a1LMA :: Show b_a1LMx)
      (ls_i1Mix :: [Array a_a1LMw b_a1LMx])
      (s_i1Miy :: String) ->
      showList__
        @ (Array a_a1LMw b_a1LMx)
        (\ (w_s1TAN :: Array a_a1LMw b_a1LMx) ->
           GHC.Arr.$w$cshowsPrec
             @ a_a1LMw
             @ b_a1LMx
             $dIx_a1LMy
             $dShow_a1LMz
             $dShow1_a1LMA
             0#
             w_s1TAN)
        ls_i1Mix
        s_i1Miy

-- RHS size: {terms: 18, types: 19, coercions: 0, joins: 0/0}
GHC.Arr.$fShowArray [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a b. (Ix a, Show a, Show b) => Show (Array a b)
[GblId[DFunId],
 Arity=3,
 Str=<L,U(A,C(U),C(C1(U(U))),A,A,A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)>m,
 Unf=DFun: \ (@ a_a1KRr)
             (@ b_a1KRs)
             (v_X8Z :: Ix a_a1KRr)
             (v1_X91 :: Show a_a1KRr)
             (v2_X93 :: Show b_a1KRs) ->
       GHC.Show.C:Show TYPE: Array a_a1KRr b_a1KRs
                       GHC.Arr.$fShowArray_$cshowsPrec
                         @ a_a1KRr @ b_a1KRs v_X8Z v1_X91 v2_X93
                       GHC.Arr.$fShowArray_$cshow @ a_a1KRr @ b_a1KRs v_X8Z v1_X91 v2_X93
                       GHC.Arr.$fShowArray_$cshowList
                         @ a_a1KRr @ b_a1KRs v_X8Z v1_X91 v2_X93]
GHC.Arr.$fShowArray
  = \ (@ a_a1LMw)
      (@ b_a1LMx)
      ($dIx_a1LMy :: Ix a_a1LMw)
      ($dShow_a1LMz :: Show a_a1LMw)
      ($dShow1_a1LMA :: Show b_a1LMx) ->
      GHC.Show.C:Show
        @ (Array a_a1LMw b_a1LMx)
        (GHC.Arr.$fShowArray_$cshowsPrec
           @ a_a1LMw @ b_a1LMx $dIx_a1LMy $dShow_a1LMz $dShow1_a1LMA)
        (GHC.Arr.$fShowArray_$cshow
           @ a_a1LMw @ b_a1LMx $dIx_a1LMy $dShow_a1LMz $dShow1_a1LMA)
        (GHC.Arr.$fShowArray_$cshowList
           @ a_a1LMw @ b_a1LMx $dIx_a1LMy $dShow_a1LMz $dShow1_a1LMA)

-- RHS size: {terms: 125, types: 213, coercions: 0, joins: 4/4}
accumArray [InlPrag=INLINE (sat-args=4)]
  :: forall i e a.
     Ix i =>
     (e -> a -> e) -> e -> (i, i) -> [(i, a)] -> Array i e
[GblId,
 Arity=5,
 Str=<S(LLLLLC(S(S))L),U(A,A,C(C1(U(U))),A,A,1*C1(U(U)),A)><L,C(C1(U))><L,U><S,1*U(U,U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LEo)
                 (@ e_a1LEp)
                 (@ a_a1LEq)
                 ($dIx_a1LEs :: Ix i_a1LEo)
                 (f1_a1KYF [Occ=OnceL!] :: e_a1LEp -> a_a1LEq -> e_a1LEp)
                 (initial_a1KYG [Occ=Once] :: e_a1LEp)
                 (ds_d1McR [Occ=Once!] :: (i_a1LEo, i_a1LEo))
                 (ies_a1KYJ [Occ=Once] :: [(i_a1LEo, a_a1LEq)]) ->
                 case ds_d1McR of { (l_a1KYH, u_a1KYI) ->
                 let {
                   r_a1KXF :: Int
                   [LclId]
                   r_a1KXF = rangeSize @ i_a1LEo $dIx_a1LEs (l_a1KYH, u_a1KYI) } in
                 case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                   False ->
                     case r_a1KXF of wild2_Xc { I# n#_a1KYW [Occ=Once] ->
                     case runRW#
                            @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                            @ (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                            (\ (s1#_a1KYY [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                               case newArray#
                                      @ e_a1LEp @ RealWorld n#_a1KYW initial_a1KYG s1#_a1KYY
                               of
                               { (# ipv_s1MKn [Occ=Once], ipv1_s1MKo #) ->
                               foldr
                                 @ (i_a1LEo, a_a1LEq)
                                 @ (State# RealWorld
                                    -> (# State# RealWorld, Array i_a1LEo e_a1LEp #))
                                 (\ (ds2_d1McX [Occ=Once!] :: (i_a1LEo, a_a1LEq))
                                    (ds3_d1McW [Occ=Once!, OS=OneShot]
                                       :: State# RealWorld
                                          -> (# State# RealWorld, Array i_a1LEo e_a1LEp #)) ->
                                    case ds2_d1McX of
                                    { (i1_a1KYL [Occ=Once], e1_a1KYM [Occ=Once]) ->
                                    case safeIndex
                                           @ i_a1LEo $dIx_a1LEs (l_a1KYH, u_a1KYI) wild2_Xc i1_a1KYL
                                    of
                                    { I# i#_a1KZc ->
                                    \ (s1#1_a1KZf [Occ=Once] :: State# RealWorld) ->
                                      case readArray#
                                             @ RealWorld @ e_a1LEp ipv1_s1MKo i#_a1KZc s1#1_a1KZf
                                      of
                                      { (# ipv2_s1MK8 [Occ=Once], ipv3_s1MK9 [Occ=Once] #) ->
                                      case f1_a1KYF ipv3_s1MK9 e1_a1KYM of combined_a1KZi
                                      { __DEFAULT ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LEp
                                             ipv1_s1MKo
                                             i#_a1KZc
                                             combined_a1KZi
                                             ipv2_s1MK8
                                      of wild5_Xk
                                      { __DEFAULT ->
                                      ds3_d1McW wild5_Xk
                                      }
                                      }
                                      }
                                    }
                                    })
                                 (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                    case unsafeFreezeArray#
                                           @ RealWorld @ e_a1LEp ipv1_s1MKo s1#1_a1KXg
                                    of
                                    { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                    (# ipv2_s1MEX,
                                       GHC.Arr.$WArray
                                         @ i_a1LEo @ e_a1LEp l_a1KYH u_a1KYI wild2_Xc ipv3_s1MEY #)
                                    })
                                 ies_a1KYJ
                                 ipv_s1MKn
                               })
                     of
                     { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                     ipv1_s1JmT
                     }
                     };
                   True -> case negRange of { }
                 }
                 }}]
accumArray
  = \ (@ i_a1LEo)
      (@ e_a1LEp)
      (@ a_a1LEq)
      ($dIx_a1LEs :: Ix i_a1LEo)
      (eta_B4 :: e_a1LEp -> a_a1LEq -> e_a1LEp)
      (eta1_X95 :: e_a1LEp)
      (eta2_Xi8 :: (i_a1LEo, i_a1LEo))
      (eta3_Xi9 :: [(i_a1LEo, a_a1LEq)]) ->
      case eta2_Xi8 of wild_X7B { (l_a1KYH, u_a1KYI) ->
      case rangeSize @ i_a1LEo $dIx_a1LEs wild_X7B of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case runRW#
                 @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                 @ (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                 (\ (s1#_a1KYY [OS=OneShot] :: State# RealWorld) ->
                    case newArray# @ e_a1LEp @ RealWorld x_alN9 eta1_X95 s1#_a1KYY of
                    { (# ipv_s1MKn, ipv1_s1MKo #) ->
                    join {
                      exit_X6s [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit_X6s (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      exit1_X6u [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit1_X6u (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      z_i1y1a [Dmd=<C(S),C(U)>]
                        :: State# RealWorld
                           -> (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                      z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                        = case unsafeFreezeArray#
                                 @ RealWorld @ e_a1LEp ipv1_s1MKo s1#1_a1KXg
                          of
                          { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                          (# ipv2_s1MEX,
                             case l_a1KYH of dt_X1L5f { __DEFAULT ->
                             case u_a1KYI of dt1_X1L5h { __DEFAULT ->
                             GHC.Arr.Array
                               @ i_a1LEo @ e_a1LEp dt_X1L5f dt1_X1L5h x_alN9 ipv3_s1MEY
                             }
                             } #)
                          } } in
                    joinrec {
                      go_i1y1b [Occ=LoopBreaker]
                        :: [(i_a1LEo, a_a1LEq)]
                           -> State# RealWorld
                           -> (# State# RealWorld, Array i_a1LEo e_a1LEp #)
                      [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                      go_i1y1b (ds1_i1y1c :: [(i_a1LEo, a_a1LEq)])
                               (eta4_B1 :: State# RealWorld)
                        = case ds1_i1y1c of {
                            [] -> jump z_i1y1a eta4_B1;
                            : y_i1y1h ys_i1y1i ->
                              case y_i1y1h of { (i1_a1KYL, e1_a1KYM) ->
                              case index @ i_a1LEo $dIx_a1LEs wild_X7B i1_a1KYL of
                              { I# y1_at1i ->
                              case <=# 0# y1_at1i of {
                                __DEFAULT -> jump exit_X6s y1_at1i;
                                1# ->
                                  case <# y1_at1i x_alN9 of {
                                    __DEFAULT -> jump exit1_X6u y1_at1i;
                                    1# ->
                                      case readArray#
                                             @ RealWorld @ e_a1LEp ipv1_s1MKo y1_at1i eta4_B1
                                      of
                                      { (# ipv2_s1MK8, ipv3_s1MK9 #) ->
                                      case eta_B4 ipv3_s1MK9 e1_a1KYM of combined_a1KZi
                                      { __DEFAULT ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LEp
                                             ipv1_s1MKo
                                             y1_at1i
                                             combined_a1KZi
                                             ipv2_s1MK8
                                      of wild5_Xk
                                      { __DEFAULT ->
                                      jump go_i1y1b ys_i1y1i wild5_Xk
                                      }
                                      }
                                      }
                                  }
                              }
                              }
                              }
                          }; } in
                    jump go_i1y1b eta3_Xi9 ipv_s1MKn
                    })
          of
          { (# ipv_s1JmS, ipv1_s1JmT #) ->
          ipv1_s1JmT
          };
        1# -> case negRange of wild2_00 { }
      }
      }
      }

-- RHS size: {terms: 111, types: 194, coercions: 0, joins: 4/4}
array [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Ix i => (i, i) -> [(i, e)] -> Array i e
[GblId,
 Arity=3,
 Str=<S(LLLLLC(S(S))L),U(A,A,C(C1(U(U))),A,A,1*C1(U(U)),A)><S,1*U(U,U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LFx)
                 (@ e_a1LFy)
                 ($dIx_a1LFA :: Ix i_a1LFx)
                 (ds_d1MdF [Occ=Once!] :: (i_a1LFx, i_a1LFx))
                 (ies_a1KWS [Occ=Once] :: [(i_a1LFx, e_a1LFy)]) ->
                 case ds_d1MdF of { (l_a1KWQ, u_a1KWR) ->
                 let {
                   r_a1KXF :: Int
                   [LclId]
                   r_a1KXF = rangeSize @ i_a1LFx $dIx_a1LFA (l_a1KWQ, u_a1KWR) } in
                 case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                   False ->
                     case r_a1KXF of wild2_X9 { I# n#_a1KX1 [Occ=Once] ->
                     case runRW#
                            @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                            @ (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                            (\ (s1#_a1KX3 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                               case newArray#
                                      @ e_a1LFy
                                      @ RealWorld
                                      n#_a1KX1
                                      (arrEleBottom @ e_a1LFy)
                                      s1#_a1KX3
                               of
                               { (# ipv_s1MFb [Occ=Once], ipv1_s1MFc #) ->
                               foldr
                                 @ (i_a1LFx, e_a1LFy)
                                 @ (State# RealWorld
                                    -> (# State# RealWorld, Array i_a1LFx e_a1LFy #))
                                 (\ (ds2_d1MdL [Occ=Once!] :: (i_a1LFx, e_a1LFy))
                                    (ds3_d1MdK [Occ=Once!, OS=OneShot]
                                       :: State# RealWorld
                                          -> (# State# RealWorld, Array i_a1LFx e_a1LFy #)) ->
                                    case ds2_d1MdL of
                                    { (i1_a1KWU [Occ=Once], e1_a1KWV [Occ=Once]) ->
                                    case safeIndex
                                           @ i_a1LFx $dIx_a1LFA (l_a1KWQ, u_a1KWR) wild2_X9 i1_a1KWU
                                    of
                                    { I# i#_a1KX7 [Occ=Once] ->
                                    \ (s1#1_a1KXa [Occ=Once] :: State# RealWorld) ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LFy
                                             ipv1_s1MFc
                                             i#_a1KX7
                                             e1_a1KWV
                                             s1#1_a1KXa
                                      of s2#_a1KXb
                                      { __DEFAULT ->
                                      ds3_d1MdK s2#_a1KXb
                                      }
                                    }
                                    })
                                 (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                    case unsafeFreezeArray#
                                           @ RealWorld @ e_a1LFy ipv1_s1MFc s1#1_a1KXg
                                    of
                                    { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                    (# ipv2_s1MEX,
                                       GHC.Arr.$WArray
                                         @ i_a1LFx @ e_a1LFy l_a1KWQ u_a1KWR wild2_X9 ipv3_s1MEY #)
                                    })
                                 ies_a1KWS
                                 ipv_s1MFb
                               })
                     of
                     { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                     ipv1_s1JmT
                     }
                     };
                   True -> case negRange of { }
                 }
                 }}]
array
  = \ (@ i_a1LFx)
      (@ e_a1LFy)
      ($dIx_a1LFA :: Ix i_a1LFx)
      (eta_X93 :: (i_a1LFx, i_a1LFx))
      (eta1_Xi5 :: [(i_a1LFx, e_a1LFy)]) ->
      case eta_X93 of wild_X7z { (l_a1KWQ, u_a1KWR) ->
      case rangeSize @ i_a1LFx $dIx_a1LFA wild_X7z of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case runRW#
                 @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                 @ (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                 (\ (s1#_a1KX3 [OS=OneShot] :: State# RealWorld) ->
                    case newArray#
                           @ e_a1LFy @ RealWorld x_alN9 (arrEleBottom @ e_a1LFy) s1#_a1KX3
                    of
                    { (# ipv_s1MFb, ipv1_s1MFc #) ->
                    join {
                      exit_X6p [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit_X6p (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      exit1_X6r [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit1_X6r (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      z_i1y1a [Dmd=<C(S),C(U)>]
                        :: State# RealWorld
                           -> (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                      z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                        = case unsafeFreezeArray#
                                 @ RealWorld @ e_a1LFy ipv1_s1MFc s1#1_a1KXg
                          of
                          { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                          (# ipv2_s1MEX,
                             case l_a1KWQ of dt_X1L5f { __DEFAULT ->
                             case u_a1KWR of dt1_X1L5h { __DEFAULT ->
                             GHC.Arr.Array
                               @ i_a1LFx @ e_a1LFy dt_X1L5f dt1_X1L5h x_alN9 ipv3_s1MEY
                             }
                             } #)
                          } } in
                    joinrec {
                      go_i1y1b [Occ=LoopBreaker]
                        :: [(i_a1LFx, e_a1LFy)]
                           -> State# RealWorld
                           -> (# State# RealWorld, Array i_a1LFx e_a1LFy #)
                      [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                      go_i1y1b (ds1_i1y1c :: [(i_a1LFx, e_a1LFy)])
                               (eta2_B1 :: State# RealWorld)
                        = case ds1_i1y1c of {
                            [] -> jump z_i1y1a eta2_B1;
                            : y_i1y1h ys_i1y1i ->
                              case y_i1y1h of { (i1_a1KWU, e1_a1KWV) ->
                              case index @ i_a1LFx $dIx_a1LFA wild_X7z i1_a1KWU of
                              { I# y1_at1i ->
                              case <=# 0# y1_at1i of {
                                __DEFAULT -> jump exit_X6p y1_at1i;
                                1# ->
                                  case <# y1_at1i x_alN9 of {
                                    __DEFAULT -> jump exit1_X6r y1_at1i;
                                    1# ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LFy
                                             ipv1_s1MFc
                                             y1_at1i
                                             e1_a1KWV
                                             eta2_B1
                                      of s2#_a1KXb
                                      { __DEFAULT ->
                                      jump go_i1y1b ys_i1y1i s2#_a1KXb
                                      }
                                  }
                              }
                              }
                              }
                          }; } in
                    jump go_i1y1b eta1_Xi5 ipv_s1MFb
                    })
          of
          { (# ipv_s1JmS, ipv1_s1JmT #) ->
          ipv1_s1JmT
          };
        1# -> case negRange of wild2_00 { }
      }
      }
      }

-- RHS size: {terms: 150, types: 207, coercions: 0, joins: 4/4}
ixmap [InlPrag=INLINE (sat-args=3)]
  :: forall i j e.
     (Ix i, Ix j) =>
     (i, i) -> (i -> j) -> Array j e -> Array i e
[GblId,
 Arity=5,
 Str=<S(LC(S)LLLC(S(S))L),U(A,1*C1(U),C(C1(U(U))),A,A,1*C1(U(U)),A)><L,U(A,A,C(C1(U(U))),A,A,A,A)><S,1*U(U,U)><L,C(U)><L,U(U,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LFR)
                 (@ j_a1LFS)
                 (@ e_a1LFT)
                 ($dIx_a1LFV :: Ix i_a1LFR)
                 ($dIx1_a1LFW [Occ=OnceL] :: Ix j_a1LFS)
                 (ds_d1Me1 [Occ=Once!] :: (i_a1LFR, i_a1LFR))
                 (f1_a1KZZ [Occ=OnceL!] :: i_a1LFR -> j_a1LFS)
                 (arr_a1L00 [Occ=OnceL!] :: Array j_a1LFS e_a1LFT) ->
                 case ds_d1Me1 of { (l_a1KZX, u_a1KZY) ->
                 let {
                   r_a1KXF :: Int
                   [LclId]
                   r_a1KXF = rangeSize @ i_a1LFR $dIx_a1LFV (l_a1KZX, u_a1KZY) } in
                 case ltInt r_a1KXF (GHC.Types.I# 0#) of {
                   False ->
                     case r_a1KXF of wild2_X9 { I# n#_a1KX1 [Occ=Once] ->
                     case runRW#
                            @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                            @ (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                            (\ (s1#_a1KX3 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                               case newArray#
                                      @ e_a1LFT
                                      @ RealWorld
                                      n#_a1KX1
                                      (arrEleBottom @ e_a1LFT)
                                      s1#_a1KX3
                               of
                               { (# ipv_s1MFb [Occ=Once], ipv1_s1MFc #) ->
                               foldr
                                 @ i_a1LFR
                                 @ (State# RealWorld
                                    -> (# State# RealWorld, Array i_a1LFR e_a1LFT #))
                                 (\ (ds2_d1Me7 :: i_a1LFR)
                                    (ds3_d1Me6 [Occ=Once!, OS=OneShot]
                                       :: State# RealWorld
                                          -> (# State# RealWorld, Array i_a1LFR e_a1LFT #)) ->
                                    case safeIndex
                                           @ i_a1LFR
                                           $dIx_a1LFV
                                           (l_a1KZX, u_a1KZY)
                                           wild2_X9
                                           ds2_d1Me7
                                    of
                                    { I# i#_a1KX7 [Occ=Once] ->
                                    \ (s1#1_a1KXa [Occ=Once] :: State# RealWorld) ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LFT
                                             ipv1_s1MFc
                                             i#_a1KX7
                                             (case arr_a1L00 of
                                              { Array l1_a1KXz [Occ=Once] u1_a1KXA [Occ=Once]
                                                      dt_d1MtM [Occ=Once] ds4_d1MbY [Occ=Once] ->
                                              case safeIndex
                                                     @ j_a1LFS
                                                     $dIx1_a1LFW
                                                     (l1_a1KXz, u1_a1KXA)
                                                     (GHC.Types.I# dt_d1MtM)
                                                     (f1_a1KZZ ds2_d1Me7)
                                              of
                                              { I# i#1_a1KXR [Occ=Once] ->
                                              case indexArray# @ e_a1LFT ds4_d1MbY i#1_a1KXR of
                                              { (# ipv2_s1MGr [Occ=Once] #) ->
                                              ipv2_s1MGr
                                              }
                                              }
                                              })
                                             s1#1_a1KXa
                                      of s2#_a1KXb
                                      { __DEFAULT ->
                                      ds3_d1Me6 s2#_a1KXb
                                      }
                                    })
                                 (\ (s1#1_a1KXg [Occ=Once] :: State# RealWorld) ->
                                    case unsafeFreezeArray#
                                           @ RealWorld @ e_a1LFT ipv1_s1MFc s1#1_a1KXg
                                    of
                                    { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                    (# ipv2_s1MEX,
                                       GHC.Arr.$WArray
                                         @ i_a1LFR @ e_a1LFT l_a1KZX u_a1KZY wild2_X9 ipv3_s1MEY #)
                                    })
                                 (range @ i_a1LFR $dIx_a1LFV (l_a1KZX, u_a1KZY))
                                 ipv_s1MFb
                               })
                     of
                     { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                     ipv1_s1JmT
                     }
                     };
                   True -> case negRange of { }
                 }
                 }}]
ixmap
  = \ (@ i_a1LFR)
      (@ j_a1LFS)
      (@ e_a1LFT)
      ($dIx_a1LFV :: Ix i_a1LFR)
      ($dIx1_a1LFW :: Ix j_a1LFS)
      (eta_X97 :: (i_a1LFR, i_a1LFR))
      (eta1_Xic :: i_a1LFR -> j_a1LFS)
      (eta2_Xid :: Array j_a1LFS e_a1LFT) ->
      case eta_X97 of wild_X7D { (l_a1KZX, u_a1KZY) ->
      case rangeSize @ i_a1LFR $dIx_a1LFV wild_X7D of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case runRW#
                 @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                 @ (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                 (\ (s1#_a1KX3 [OS=OneShot] :: State# RealWorld) ->
                    case newArray#
                           @ e_a1LFT @ RealWorld x_alN9 (arrEleBottom @ e_a1LFT) s1#_a1KX3
                    of
                    { (# ipv_s1MFb, ipv1_s1MFc #) ->
                    join {
                      exit_X6p [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit_X6p (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      exit1_X6r [Dmd=<L,C(U)>]
                        :: Int# -> (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                      exit1_X6r (y_at1i [OS=OneShot] :: Int#)
                        = case GHC.Arr.$wbadSafeIndex y_at1i x_alN9 of wild2_00 { } } in
                    join {
                      z_i1y1a [Dmd=<C(S),C(U)>]
                        :: State# RealWorld
                           -> (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                      z_i1y1a (s1#1_a1KXg [OS=OneShot] :: State# RealWorld)
                        = case unsafeFreezeArray#
                                 @ RealWorld @ e_a1LFT ipv1_s1MFc s1#1_a1KXg
                          of
                          { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                          (# ipv2_s1MEX,
                             case l_a1KZX of dt_X1L5f { __DEFAULT ->
                             case u_a1KZY of dt1_X1L5h { __DEFAULT ->
                             GHC.Arr.Array
                               @ i_a1LFR @ e_a1LFT dt_X1L5f dt1_X1L5h x_alN9 ipv3_s1MEY
                             }
                             } #)
                          } } in
                    joinrec {
                      go_i1y1b [Occ=LoopBreaker]
                        :: [i_a1LFR]
                           -> State# RealWorld
                           -> (# State# RealWorld, Array i_a1LFR e_a1LFT #)
                      [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                      go_i1y1b (ds1_i1y1c :: [i_a1LFR]) (eta3_B1 :: State# RealWorld)
                        = case ds1_i1y1c of {
                            [] -> jump z_i1y1a eta3_B1;
                            : y_i1y1h ys_i1y1i ->
                              case index @ i_a1LFR $dIx_a1LFV wild_X7D y_i1y1h of { I# y1_at1i ->
                              case <=# 0# y1_at1i of {
                                __DEFAULT -> jump exit_X6p y1_at1i;
                                1# ->
                                  case <# y1_at1i x_alN9 of {
                                    __DEFAULT -> jump exit1_X6r y1_at1i;
                                    1# ->
                                      case writeArray#
                                             @ RealWorld
                                             @ e_a1LFT
                                             ipv1_s1MFc
                                             y1_at1i
                                             (case eta2_Xid of
                                              { Array l1_a1KXz u1_a1KXA dt_d1MtM ds2_d1MbY ->
                                              case index
                                                     @ j_a1LFS
                                                     $dIx1_a1LFW
                                                     (l1_a1KXz, u1_a1KXA)
                                                     (eta1_Xic y_i1y1h)
                                              of
                                              { I# y2_Xte6 ->
                                              case <=# 0# y2_Xte6 of {
                                                __DEFAULT ->
                                                  case GHC.Arr.$wbadSafeIndex y2_Xte6 dt_d1MtM
                                                  of wild6_00 {
                                                  };
                                                1# ->
                                                  case <# y2_Xte6 dt_d1MtM of {
                                                    __DEFAULT ->
                                                      case GHC.Arr.$wbadSafeIndex y2_Xte6 dt_d1MtM
                                                      of wild6_00 {
                                                      };
                                                    1# ->
                                                      case indexArray# @ e_a1LFT ds2_d1MbY y2_Xte6
                                                      of
                                                      { (# ipv2_s1MGr #) ->
                                                      ipv2_s1MGr
                                                      }
                                                  }
                                              }
                                              }
                                              })
                                             eta3_B1
                                      of s2#_a1KXb
                                      { __DEFAULT ->
                                      jump go_i1y1b ys_i1y1i s2#_a1KXb
                                      }
                                  }
                              }
                              }
                          }; } in
                    jump go_i1y1b (range @ i_a1LFR $dIx_a1LFV wild_X7D) ipv_s1MFb
                    })
          of
          { (# ipv_s1JmS, ipv1_s1JmT #) ->
          ipv1_s1JmT
          };
        1# -> case negRange of wild2_00 { }
      }
      }
      }

-- RHS size: {terms: 129, types: 235, coercions: 0, joins: 6/7}
// [InlPrag=INLINE (sat-args=2)]
  :: forall i e. Ix i => Array i e -> [(i, e)] -> Array i e
[GblId,
 Arity=3,
 Str=<L,U(A,A,C(C1(U(U))),A,A,A,A)><S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LKo)
                 (@ e_a1LKp)
                 ($dIx_a1LKr [Occ=OnceL] :: Ix i_a1LKo)
                 (arr_a1KZj [Occ=Once!] :: Array i_a1LKo e_a1LKp)
                 (ies_a1KZn [Occ=Once] :: [(i_a1LKo, e_a1LKp)]) ->
                 case arr_a1KZj of
                 { Array l_a1KZk u_a1KZl dt_d1Muf ds_d1MgM [Occ=OnceL] ->
                 let {
                   n_a1KZm [Occ=OnceL] :: Int
                   [LclId, Unf=OtherCon []]
                   n_a1KZm = GHC.Types.I# dt_d1Muf } in
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                        (\ (s1_a1J6a [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LKp @ RealWorld dt_d1Muf (arrEleBottom @ e_a1LKp) s1_a1J6a
                           of
                           { (# ipv_s1MEA [Occ=Once], ipv1_s1MEB #) ->
                           letrec {
                             copy_s1NnG [Occ=LoopBreaker]
                               :: Int# -> State# RealWorld -> State# RealWorld
                             [LclId, Arity=2, Unf=OtherCon []]
                             copy_s1NnG
                               = \ (i#_a1L1r :: Int#)
                                   (s3#_a1L1s [Occ=Once*] :: State# RealWorld) ->
                                   case ==# i#_a1L1r dt_d1Muf of {
                                     __DEFAULT ->
                                       case indexArray# @ e_a1LKp ds_d1MgM i#_a1L1r of
                                       { (# ipv2_s1MEF [Occ=Once] #) ->
                                       case writeArray#
                                              @ RealWorld
                                              @ e_a1LKp
                                              ipv1_s1MEB
                                              i#_a1L1r
                                              ipv2_s1MEF
                                              s3#_a1L1s
                                       of s4#_a1L1u
                                       { __DEFAULT ->
                                       copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                                       }
                                       };
                                     1# -> s3#_a1L1s
                                   }; } in
                           case copy_s1NnG 0# ipv_s1MEA of s3#_a1L1v { __DEFAULT ->
                           foldr
                             @ (i_a1LKo, e_a1LKp)
                             @ (State# RealWorld
                                -> (# State# RealWorld, Array i_a1LKo e_a1LKp #))
                             (\ (ds2_d1Mgv [Occ=Once!] :: (i_a1LKo, e_a1LKp))
                                (ds3_d1Mgu [Occ=Once!, OS=OneShot]
                                   :: State# RealWorld
                                      -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)) ->
                                case ds2_d1Mgv of { (i1_a1KZo [Occ=Once], e1_a1KZp [Occ=Once]) ->
                                case safeIndex
                                       @ i_a1LKo $dIx_a1LKr (l_a1KZk, u_a1KZl) n_a1KZm i1_a1KZo
                                of
                                { I# i#_a1KX7 [Occ=Once] ->
                                \ (s1#_a1KXa [Occ=Once] :: State# RealWorld) ->
                                  case writeArray#
                                         @ RealWorld
                                         @ e_a1LKp
                                         ipv1_s1MEB
                                         i#_a1KX7
                                         e1_a1KZp
                                         s1#_a1KXa
                                  of s2#_a1KXb
                                  { __DEFAULT ->
                                  ds3_d1Mgu s2#_a1KXb
                                  }
                                }
                                })
                             (\ (s1#_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LKp ipv1_s1MEB s1#_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LKo
                                     @ e_a1LKp
                                     l_a1KZk
                                     u_a1KZl
                                     (GHC.Types.I# dt_d1Muf)
                                     ipv3_s1MEY #)
                                })
                             ies_a1KZn
                             s3#_a1L1v
                           }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }}]
//
  = \ (@ i_a1LKo)
      (@ e_a1LKp)
      ($dIx_a1LKr :: Ix i_a1LKo)
      (eta_X95 :: Array i_a1LKo e_a1LKp)
      (eta1_Xi9 :: [(i_a1LKo, e_a1LKp)]) ->
      case eta_X95 of { Array l_a1KZk u_a1KZl dt_d1Muf ds_d1MgM ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LKo e_a1LKp #)
             (\ (s1_a1J6a [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ e_a1LKp @ RealWorld dt_d1Muf (arrEleBottom @ e_a1LKp) s1_a1J6a
                of
                { (# ipv_s1MEA, ipv1_s1MEB #) ->
                join {
                  $j_s1SfO [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  $j_s1SfO (s3#_a1L1v [OS=OneShot]
                              :: State# RealWorld
                              Unf=OtherCon [])
                    = let {
                        lvl50_s1VSt :: (i_a1LKo, i_a1LKo)
                        [LclId, Unf=OtherCon []]
                        lvl50_s1VSt = (l_a1KZk, u_a1KZl) } in
                      join {
                        exit_X6p [Dmd=<L,C(U)>]
                          :: Int# -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                        [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                        exit_X6p (y_at1i [OS=OneShot] :: Int#)
                          = case GHC.Arr.$wbadSafeIndex y_at1i dt_d1Muf of wild1_00 { } } in
                      join {
                        exit1_X6r [Dmd=<L,C(U)>]
                          :: Int# -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                        [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                        exit1_X6r (y_at1i [OS=OneShot] :: Int#)
                          = case GHC.Arr.$wbadSafeIndex y_at1i dt_d1Muf of wild1_00 { } } in
                      join {
                        z_i1y1a [Dmd=<C(S),C(U)>]
                          :: State# RealWorld
                             -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                        z_i1y1a (s1#_a1KXg [OS=OneShot] :: State# RealWorld)
                          = case unsafeFreezeArray#
                                   @ RealWorld @ e_a1LKp ipv1_s1MEB s1#_a1KXg
                            of
                            { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                            (# ipv2_s1MEX,
                               GHC.Arr.Array
                                 @ i_a1LKo @ e_a1LKp l_a1KZk u_a1KZl dt_d1Muf ipv3_s1MEY #)
                            } } in
                      joinrec {
                        go_i1y1b [Occ=LoopBreaker]
                          :: [(i_a1LKo, e_a1LKp)]
                             -> State# RealWorld
                             -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                        go_i1y1b (ds2_i1y1c :: [(i_a1LKo, e_a1LKp)])
                                 (eta2_B1 :: State# RealWorld)
                          = case ds2_i1y1c of {
                              [] -> jump z_i1y1a eta2_B1;
                              : y_i1y1h ys_i1y1i ->
                                case y_i1y1h of { (i1_a1KZo, e1_a1KZp) ->
                                case index @ i_a1LKo $dIx_a1LKr lvl50_s1VSt i1_a1KZo of
                                { I# y1_at1i ->
                                case <=# 0# y1_at1i of {
                                  __DEFAULT -> jump exit_X6p y1_at1i;
                                  1# ->
                                    case <# y1_at1i dt_d1Muf of {
                                      __DEFAULT -> jump exit1_X6r y1_at1i;
                                      1# ->
                                        case writeArray#
                                               @ RealWorld
                                               @ e_a1LKp
                                               ipv1_s1MEB
                                               y1_at1i
                                               e1_a1KZp
                                               eta2_B1
                                        of s2#_a1KXb
                                        { __DEFAULT ->
                                        jump go_i1y1b ys_i1y1i s2#_a1KXb
                                        }
                                    }
                                }
                                }
                                }
                            }; } in
                      jump go_i1y1b eta1_Xi9 s3#_a1L1v } in
                joinrec {
                  copy_s1NnG [Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LKo e_a1LKp #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  copy_s1NnG (i#_a1L1r :: Int#) (s3#_a1L1s :: State# RealWorld)
                    = case ==# i#_a1L1r dt_d1Muf of {
                        __DEFAULT ->
                          case indexArray# @ e_a1LKp ds_d1MgM i#_a1L1r of
                          { (# ipv2_s1MEF #) ->
                          case writeArray#
                                 @ RealWorld @ e_a1LKp ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                          of s4#_a1L1u
                          { __DEFAULT ->
                          jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                          }
                          };
                        1# -> jump $j_s1SfO s3#_a1L1s
                      }; } in
                jump copy_s1NnG 0# ipv_s1MEA
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }

-- RHS size: {terms: 142, types: 254, coercions: 0, joins: 6/7}
accum [InlPrag=INLINE (sat-args=3)]
  :: forall i e a.
     Ix i =>
     (e -> a -> e) -> Array i e -> [(i, a)] -> Array i e
[GblId,
 Arity=4,
 Str=<L,U(A,A,C(C1(U(U))),A,A,A,A)><L,C(C1(U))><S(SSSL),1*U(U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ i_a1LL0)
                 (@ e_a1LL1)
                 (@ a_a1LL2)
                 ($dIx_a1LL4 [Occ=OnceL] :: Ix i_a1LL0)
                 (f1_a1KZw [Occ=OnceL!] :: e_a1LL1 -> a_a1LL2 -> e_a1LL1)
                 (arr_a1KZx [Occ=Once!] :: Array i_a1LL0 e_a1LL1)
                 (ies_a1KZB [Occ=Once] :: [(i_a1LL0, a_a1LL2)]) ->
                 case arr_a1KZx of
                 { Array l_a1KZy u_a1KZz dt_d1Muh ds_d1Mhj [Occ=OnceL] ->
                 let {
                   n_a1KZA [Occ=OnceL] :: Int
                   [LclId, Unf=OtherCon []]
                   n_a1KZA = GHC.Types.I# dt_d1Muh } in
                 case runRW#
                        @ ('TupleRep '['TupleRep '[], 'LiftedRep])
                        @ (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                        (\ (s1_a1J6a [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                           case newArray#
                                  @ e_a1LL1 @ RealWorld dt_d1Muh (arrEleBottom @ e_a1LL1) s1_a1J6a
                           of
                           { (# ipv_s1MEA [Occ=Once], ipv1_s1MEB #) ->
                           letrec {
                             copy_s1NnG [Occ=LoopBreaker]
                               :: Int# -> State# RealWorld -> State# RealWorld
                             [LclId, Arity=2, Unf=OtherCon []]
                             copy_s1NnG
                               = \ (i#_a1L1r :: Int#)
                                   (s3#_a1L1s [Occ=Once*] :: State# RealWorld) ->
                                   case ==# i#_a1L1r dt_d1Muh of {
                                     __DEFAULT ->
                                       case indexArray# @ e_a1LL1 ds_d1Mhj i#_a1L1r of
                                       { (# ipv2_s1MEF [Occ=Once] #) ->
                                       case writeArray#
                                              @ RealWorld
                                              @ e_a1LL1
                                              ipv1_s1MEB
                                              i#_a1L1r
                                              ipv2_s1MEF
                                              s3#_a1L1s
                                       of s4#_a1L1u
                                       { __DEFAULT ->
                                       copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                                       }
                                       };
                                     1# -> s3#_a1L1s
                                   }; } in
                           case copy_s1NnG 0# ipv_s1MEA of s3#_a1L1v { __DEFAULT ->
                           foldr
                             @ (i_a1LL0, a_a1LL2)
                             @ (State# RealWorld
                                -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #))
                             (\ (ds2_d1Mh2 [Occ=Once!] :: (i_a1LL0, a_a1LL2))
                                (ds3_d1Mh1 [Occ=Once!, OS=OneShot]
                                   :: State# RealWorld
                                      -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)) ->
                                case ds2_d1Mh2 of { (i1_a1KZC [Occ=Once], e1_a1KZD [Occ=Once]) ->
                                case safeIndex
                                       @ i_a1LL0 $dIx_a1LL4 (l_a1KZy, u_a1KZz) n_a1KZA i1_a1KZC
                                of
                                { I# i#_a1KZc ->
                                \ (s1#_a1KZf [Occ=Once] :: State# RealWorld) ->
                                  case readArray#
                                         @ RealWorld @ e_a1LL1 ipv1_s1MEB i#_a1KZc s1#_a1KZf
                                  of
                                  { (# ipv2_s1MK8 [Occ=Once], ipv3_s1MK9 [Occ=Once] #) ->
                                  case f1_a1KZw ipv3_s1MK9 e1_a1KZD of combined_a1KZi { __DEFAULT ->
                                  case writeArray#
                                         @ RealWorld
                                         @ e_a1LL1
                                         ipv1_s1MEB
                                         i#_a1KZc
                                         combined_a1KZi
                                         ipv2_s1MK8
                                  of wild3_Xk
                                  { __DEFAULT ->
                                  ds3_d1Mh1 wild3_Xk
                                  }
                                  }
                                  }
                                }
                                })
                             (\ (s1#_a1KXg [Occ=Once] :: State# RealWorld) ->
                                case unsafeFreezeArray# @ RealWorld @ e_a1LL1 ipv1_s1MEB s1#_a1KXg
                                of
                                { (# ipv2_s1MEX [Occ=Once], ipv3_s1MEY [Occ=Once] #) ->
                                (# ipv2_s1MEX,
                                   GHC.Arr.$WArray
                                     @ i_a1LL0
                                     @ e_a1LL1
                                     l_a1KZy
                                     u_a1KZz
                                     (GHC.Types.I# dt_d1Muh)
                                     ipv3_s1MEY #)
                                })
                             ies_a1KZB
                             s3#_a1L1v
                           }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_s1JmT [Occ=Once] #) ->
                 ipv1_s1JmT
                 }
                 }}]
accum
  = \ (@ i_a1LL0)
      (@ e_a1LL1)
      (@ a_a1LL2)
      ($dIx_a1LL4 :: Ix i_a1LL0)
      (eta_X98 :: e_a1LL1 -> a_a1LL2 -> e_a1LL1)
      (eta1_Xie :: Array i_a1LL0 e_a1LL1)
      (eta2_Xif :: [(i_a1LL0, a_a1LL2)]) ->
      case eta1_Xie of { Array l_a1KZy u_a1KZz dt_d1Muh ds_d1Mhj ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
             (\ (s1_a1J6a [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ e_a1LL1 @ RealWorld dt_d1Muh (arrEleBottom @ e_a1LL1) s1_a1J6a
                of
                { (# ipv_s1MEA, ipv1_s1MEB #) ->
                join {
                  $j_s1Sge [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  $j_s1Sge (s3#_a1L1v [OS=OneShot]
                              :: State# RealWorld
                              Unf=OtherCon [])
                    = let {
                        lvl50_s1VSu :: (i_a1LL0, i_a1LL0)
                        [LclId, Unf=OtherCon []]
                        lvl50_s1VSu = (l_a1KZy, u_a1KZz) } in
                      join {
                        exit_X6r [Dmd=<L,C(U)>]
                          :: Int# -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                        [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                        exit_X6r (y_at1i [OS=OneShot] :: Int#)
                          = case GHC.Arr.$wbadSafeIndex y_at1i dt_d1Muh of wild1_00 { } } in
                      join {
                        exit1_X6t [Dmd=<L,C(U)>]
                          :: Int# -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                        [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                        exit1_X6t (y_at1i [OS=OneShot] :: Int#)
                          = case GHC.Arr.$wbadSafeIndex y_at1i dt_d1Muh of wild1_00 { } } in
                      join {
                        z_i1y1a [Dmd=<C(S),C(U)>]
                          :: State# RealWorld
                             -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                        z_i1y1a (s1#_a1KXg [OS=OneShot] :: State# RealWorld)
                          = case unsafeFreezeArray#
                                   @ RealWorld @ e_a1LL1 ipv1_s1MEB s1#_a1KXg
                            of
                            { (# ipv2_s1MEX, ipv3_s1MEY #) ->
                            (# ipv2_s1MEX,
                               GHC.Arr.Array
                                 @ i_a1LL0 @ e_a1LL1 l_a1KZy u_a1KZz dt_d1Muh ipv3_s1MEY #)
                            } } in
                      joinrec {
                        go_i1y1b [Occ=LoopBreaker]
                          :: [(i_a1LL0, a_a1LL2)]
                             -> State# RealWorld
                             -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                        go_i1y1b (ds2_i1y1c :: [(i_a1LL0, a_a1LL2)])
                                 (eta3_B1 :: State# RealWorld)
                          = case ds2_i1y1c of {
                              [] -> jump z_i1y1a eta3_B1;
                              : y_i1y1h ys_i1y1i ->
                                case y_i1y1h of { (i1_a1KZC, e1_a1KZD) ->
                                case index @ i_a1LL0 $dIx_a1LL4 lvl50_s1VSu i1_a1KZC of
                                { I# y1_at1i ->
                                case <=# 0# y1_at1i of {
                                  __DEFAULT -> jump exit_X6r y1_at1i;
                                  1# ->
                                    case <# y1_at1i dt_d1Muh of {
                                      __DEFAULT -> jump exit1_X6t y1_at1i;
                                      1# ->
                                        case readArray#
                                               @ RealWorld @ e_a1LL1 ipv1_s1MEB y1_at1i eta3_B1
                                        of
                                        { (# ipv2_s1MK8, ipv3_s1MK9 #) ->
                                        case eta_X98 ipv3_s1MK9 e1_a1KZD of combined_a1KZi
                                        { __DEFAULT ->
                                        case writeArray#
                                               @ RealWorld
                                               @ e_a1LL1
                                               ipv1_s1MEB
                                               y1_at1i
                                               combined_a1KZi
                                               ipv2_s1MK8
                                        of wild4_Xk
                                        { __DEFAULT ->
                                        jump go_i1y1b ys_i1y1i wild4_Xk
                                        }
                                        }
                                        }
                                    }
                                }
                                }
                                }
                            }; } in
                      jump go_i1y1b eta2_Xif s3#_a1L1v } in
                joinrec {
                  copy_s1NnG [Occ=LoopBreaker]
                    :: Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array i_a1LL0 e_a1LL1 #)
                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                  copy_s1NnG (i#_a1L1r :: Int#) (s3#_a1L1s :: State# RealWorld)
                    = case ==# i#_a1L1r dt_d1Muh of {
                        __DEFAULT ->
                          case indexArray# @ e_a1LL1 ds_d1Mhj i#_a1L1r of
                          { (# ipv2_s1MEF #) ->
                          case writeArray#
                                 @ RealWorld @ e_a1LL1 ipv1_s1MEB i#_a1L1r ipv2_s1MEF s3#_a1L1s
                          of s4#_a1L1u
                          { __DEFAULT ->
                          jump copy_s1NnG (+# i#_a1L1r 1#) s4#_a1L1u
                          }
                          };
                        1# -> jump $j_s1Sge s3#_a1L1s
                      }; } in
                jump copy_s1NnG 0# ipv_s1MEA
                })
      of
      { (# ipv_s1JmS, ipv1_s1JmT #) ->
      ipv1_s1JmT
      }
      }


------ Local rules for imported ids --------
"SPEC $cinRange"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LUY :: Ix Int).
      GHC.Arr.$fIx(,,)_$cinRange @ Int
                                 @ Int
                                 @ Int
                                 $dIx2_X1LUY
                                 $dIx1_a1LS2
                                 $dIx_a1LS3
      = GHC.Arr.$fIx(,,)1
"SPEC $cunsafeIndex"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LUW :: Ix Int).
      GHC.Arr.$fIx(,,)_$cunsafeIndex @ Int
                                     @ Int
                                     @ Int
                                     $dIx2_X1LUW
                                     $dIx1_a1LS2
                                     $dIx_a1LS3
      = GHC.Arr.$fIx(,,)_$s$cunsafeIndex
"SPEC $cunsafeRangeSize"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LV5 :: Ix Int).
      GHC.Arr.$fIx(,,)_$cunsafeRangeSize @ Int
                                         @ Int
                                         @ Int
                                         $dIx2_X1LV5
                                         $dIx1_a1LS2
                                         $dIx_a1LS3
      = GHC.Arr.$fIx(,,)_$s$cunsafeRangeSize
"SPEC $crangeSize"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LV5 :: Ix Int).
      GHC.Arr.$fIx(,,)_$crangeSize @ Int
                                   @ Int
                                   @ Int
                                   $dIx2_X1LV5
                                   $dIx1_a1LS2
                                   $dIx_a1LS3
      = GHC.Arr.$fIx(,,)_$s$crangeSize
"SPEC $crange"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LUU :: Ix Int).
      GHC.Arr.$fIx(,,)_$crange @ Int
                               @ Int
                               @ Int
                               $dIx2_X1LUU
                               $dIx1_a1LS2
                               $dIx_a1LS3
      = GHC.Arr.$fIx(,,)_$s$crange
"SPEC $crangeSize"
    forall ($dIx_a1LTh :: Ix Int) ($dIx1_a1LTg :: Ix Int).
      GHC.Arr.$fIx(,)_$crangeSize @ Int @ Int $dIx1_a1LTg $dIx_a1LTh
      = GHC.Arr.$fIx(,)_$s$crangeSize
"SPEC $cunsafeRangeSize"
    forall ($dIx_a1LTh :: Ix Int) ($dIx1_a1LTg :: Ix Int).
      GHC.Arr.$fIx(,)_$cunsafeRangeSize @ Int
                                        @ Int
                                        $dIx1_a1LTg
                                        $dIx_a1LTh
      = GHC.Arr.$fIx(,)_$s$cunsafeRangeSize
"amap/coerce"
    forall (@ i_a1M09)
           (@ a_a1M0a)
           (@ b_a1M08)
           ($r$dCoercible_d1Mto :: (a_a1M0a :: *) ~R# (b_a1M08 :: *)).
      amap @ a_a1M0a
           @ b_a1M08
           @ i_a1M09
           ((\ (v_X5Z :: a_a1M0a) -> v_X5Z)
            `cast` (<a_a1M0a>_R ->_R $r$dCoercible_d1Mto
                    :: (a_a1M0a -> a_a1M0a :: *) ~R# (a_a1M0a -> b_a1M08 :: *)))
      = (\ (v_X5Z :: Array i_a1M09 a_a1M0a) -> v_X5Z)
        `cast` (<Array i_a1M09 a_a1M0a>_R
                ->_R (Array <i_a1M09>_N $r$dCoercible_d1Mto)_R
                :: (Array i_a1M09 a_a1M0a -> Array i_a1M09 a_a1M0a :: *)
                   ~R# (Array i_a1M09 a_a1M0a -> Array i_a1M09 b_a1M08 :: *))
"amap/amap"
    forall (@ i_a1M01)
           (@ b_a1M00)
           (@ a_a1LZS)
           (@ a1_a1LZV)
           (f1_a1L1D :: a_a1LZS -> b_a1M00)
           (g_a1L1E :: a1_a1LZV -> a_a1LZS)
           (a2_a1L1F :: Array i_a1M01 a1_a1LZV).
      amap @ a_a1LZS
           @ b_a1M00
           @ i_a1M01
           f1_a1L1D
           (amap @ a1_a1LZV @ a_a1LZS @ i_a1M01 g_a1L1E a2_a1L1F)
      = amap
          @ a1_a1LZV
          @ b_a1M00
          @ i_a1M01
          (. @ a_a1LZS @ b_a1M00 @ a1_a1LZV f1_a1L1D g_a1L1E)
          a2_a1L1F
"SPEC $cindex @ Int @ Int"
    forall ($dIx_s1Nn5 :: Ix Int) ($dIx1_s1Nn4 :: Ix Int).
      GHC.Arr.$fIx(,)_$cindex @ Int @ Int $dIx1_s1Nn4 $dIx_s1Nn5
      = GHC.Arr.$fIx(,)_$s$cindex
"SPEC $cindex @ Int @ Int @ Int"
    forall ($dIx_s1NmW :: Ix Int)
           ($dIx1_s1NmV :: Ix Int)
           ($dIx2_s1NmU :: Ix Int).
      GHC.Arr.$fIx(,,)_$cindex @ Int
                               @ Int
                               @ Int
                               $dIx2_s1NmU
                               $dIx1_s1NmV
                               $dIx_s1NmW
      = GHC.Arr.$fIx(,,)_$s$cindex
"SPEC $crange @ Int @ Int"
    forall ($dIx_s1NnK :: Ix Int) ($dIx1_s1NnJ :: Ix Int).
      GHC.Arr.$fIx(,)_$crange @ Int @ Int $dIx1_s1NnJ $dIx_s1NnK
      = GHC.Arr.$fIx(,)_$s$crange
"SPEC $cunsafeIndex @ Int @ Int"
    forall ($dIx_s1NnN :: Ix Int) ($dIx1_s1NnM :: Ix Int).
      GHC.Arr.$fIx(,)_$cunsafeIndex @ Int @ Int $dIx1_s1NnM $dIx_s1NnN
      = GHC.Arr.$fIx(,)_$s$cunsafeIndex
"SPEC $cinRange @ Int @ Int"
    forall ($dIx_s1NnS :: Ix Int) ($dIx1_s1NnR :: Ix Int).
      GHC.Arr.$fIx(,)_$cinRange @ Int @ Int $dIx1_s1NnR $dIx_s1NnS
      = GHC.Arr.$fIx(,)_$s$cinRange
"SPEC $fIx(,,)"
    forall ($dIx_a1LS3 :: Ix Int)
           ($dIx1_a1LS2 :: Ix Int)
           ($dIx2_X1LV5 :: Ix Int).
      GHC.Arr.$fIx(,,) @ Int
                       @ Int
                       @ Int
                       $dIx2_X1LV5
                       $dIx1_a1LS2
                       $dIx_a1LS3
      = GHC.Arr.$fIx(,,)_$s$fIx(,,)
"SPEC $fIx(,)"
    forall ($dIx_a1LTh :: Ix Int) ($dIx1_a1LTg :: Ix Int).
      GHC.Arr.$fIx(,) @ Int @ Int $dIx1_a1LTg $dIx_a1LTh
      = GHC.Arr.$fIx(,)_$s$fIx(,)
"safeIndex/(I,I,I)"
    forall ($dIx_a1M1e :: Ix (Int, Int, Int)).
      safeIndex @ (Int, Int, Int) $dIx_a1M1e
      = lessSafeIndex
          @ (Int, Int, Int)
          (GHC.Arr.$fIx(,,)
             @ Int @ Int @ Int GHC.Arr.$fIxInt GHC.Arr.$fIxInt GHC.Arr.$fIxInt)
"safeIndex/(I,I)"
    forall ($dIx_a1M0O :: Ix (Int, Int)).
      safeIndex @ (Int, Int) $dIx_a1M0O
      = lessSafeIndex
          @ (Int, Int)
          (GHC.Arr.$fIx(,) @ Int @ Int GHC.Arr.$fIxInt GHC.Arr.$fIxInt)
"safeIndex/I"
    forall ($dIx_a1M0s :: Ix Int).
      safeIndex @ Int $dIx_a1M0s
      = lessSafeIndex @ Int GHC.Arr.$fIxInt
"cmpArray/Int"
    forall (@ e_a1LZD)
           ($dIx_a1LZB :: Ix Int)
           ($dOrd_a1LZC :: Ord e_a1LZD).
      cmpArray @ Int @ e_a1LZD $dIx_a1LZB $dOrd_a1LZC
      = cmpIntArray @ e_a1LZD $dOrd_a1LZC
"SPEC/GHC.Arr $fEq(,,)_$c/= @ Int @ Int @ Int"
    forall ($dEq2_s1NqW :: Eq Int)
           ($dEq1_s1NqV :: Eq Int)
           ($dEq_s1NqU :: Eq Int).
      GHC.Classes.$fEq(,,)_$c/= @ Int
                                @ Int
                                @ Int
                                $dEq_s1NqU
                                $dEq1_s1NqV
                                $dEq2_s1NqW
      = GHC.Arr.$fIx(,,)_$s$fEq(,,)_$c/=
"SPEC/GHC.Arr $fEq(,,) @ Int @ Int @ Int"
    forall (v2_X1NCT :: Eq Int)
           (v1_X1NPU :: Eq Int)
           (v_X1NPV :: Eq Int).
      GHC.Classes.$fEq(,,) @ Int @ Int @ Int v_X1NPV v1_X1NPU v2_X1NCT
      = GHC.Arr.$fIx(,,)_$s$fEq(,,)
"SPEC/GHC.Arr $fOrd(,,) @ Int @ Int @ Int"
    forall (v2_s1NnZ :: Ord Int)
           (v1_s1NnY :: Ord Int)
           (v_s1NnX :: Ord Int).
      GHC.Classes.$fOrd(,,) @ Int @ Int @ Int v_s1NnX v1_s1NnY v2_s1NnZ
      = GHC.Arr.$fIx(,,)_$s$fOrd(,,)
"SPEC/GHC.Arr $fEq(,)_$c/= @ Int @ Int"
    forall ($dEq1_s1NvS :: Eq Int) ($dEq_s1NvR :: Eq Int).
      GHC.Classes.$fEq(,)_$c/= @ Int @ Int $dEq_s1NvR $dEq1_s1NvS
      = GHC.Arr.$fIx(,)_$s$fEq(,)_$c/=
"SPEC/GHC.Arr $fEq(,) @ Int @ Int"
    forall (v1_X1NHR :: Eq Int) (v_X1NUS :: Eq Int).
      GHC.Classes.$fEq(,) @ Int @ Int v_X1NUS v1_X1NHR
      = GHC.Arr.$fIx(,)_$s$fEq(,)
"SPEC/GHC.Arr $fOrd(,) @ Int @ Int"
    forall (v1_s1Nst :: Ord Int) (v_s1Nss :: Ord Int).
      GHC.Classes.$fOrd(,) @ Int @ Int v_s1Nss v1_s1Nst
      = GHC.Arr.$fIx(,)_$s$fOrd(,)

