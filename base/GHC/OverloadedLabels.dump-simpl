
==================== Tidy Core ====================
2018-03-16 16:07:26.790620246 UTC

Result size of Tidy Core
  = {terms: 83, types: 41, coercions: 3, joins: 0/0}

-- RHS size: {terms: 4, types: 6, coercions: 3, joins: 0/0}
fromLabel [InlPrag=INLINE]
  :: forall (x :: Symbol) a. IsLabel x a => a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= \ (@ (x_acxJ1 :: Symbol))
                 (@ a_acxJ2)
                 (v_B1 [Occ=Once] :: IsLabel x_acxJ1 a_acxJ2) ->
                 v_B1
                 `cast` (GHC.OverloadedLabels.N:IsLabel[0] <x_acxJ1>_N <a_acxJ2>_N
                         :: (IsLabel x_acxJ1 a_acxJ2 :: Constraint) ~R# (a_acxJ2 :: *))}]
fromLabel
  = \ (@ (x_acxJ1 :: Symbol))
      (@ a_acxJ2)
      (v_B1 :: IsLabel x_acxJ1 a_acxJ2) ->
      v_B1
      `cast` (GHC.OverloadedLabels.N:IsLabel[0] <x_acxJ1>_N <a_acxJ2>_N
              :: (IsLabel x_acxJ1 a_acxJ2 :: Constraint) ~R# (a_acxJ2 :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.OverloadedLabels.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.OverloadedLabels.$trModule3
  = GHC.Types.TrNameS GHC.OverloadedLabels.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.OverloadedLabels.$trModule2 = "GHC.OverloadedLabels"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.OverloadedLabels.$trModule1
  = GHC.Types.TrNameS GHC.OverloadedLabels.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.OverloadedLabels.$trModule
  = GHC.Types.Module
      GHC.OverloadedLabels.$trModule3 GHC.OverloadedLabels.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep_rcxK1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep_rcxK1 = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_rcxK2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_rcxK2
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_rcxK3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_rcxK3
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcSymbol (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_rcxK4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep3_rcxK4 = GHC.Types.KindRepFun GHC.Types.krep$* $krep1_rcxK2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tcIsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.OverloadedLabels.$tcIsLabel1
  = GHC.Types.KindRepFun $krep2_rcxK3 $krep3_rcxK4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep4_rcxK5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_rcxK5 = GHC.Types.KindRepVar 1#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tcIsLabel3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.OverloadedLabels.$tcIsLabel3 = "IsLabel"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tcIsLabel2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.OverloadedLabels.$tcIsLabel2
  = GHC.Types.TrNameS GHC.OverloadedLabels.$tcIsLabel3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tcIsLabel :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.OverloadedLabels.$tcIsLabel
  = GHC.Types.TyCon
      63717145371698301##
      7516490703205987704##
      GHC.OverloadedLabels.$trModule
      GHC.OverloadedLabels.$tcIsLabel2
      0#
      GHC.OverloadedLabels.$tcIsLabel1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep5_rcxK6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep5_rcxK6
  = GHC.Types.:
      @ GHC.Types.KindRep $krep4_rcxK5 (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep6_rcxK7 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_rcxK7
  = GHC.Types.: @ GHC.Types.KindRep $krep_rcxK1 $krep5_rcxK6

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_rcxK8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_rcxK8
  = GHC.Types.KindRepTyConApp
      GHC.OverloadedLabels.$tcIsLabel $krep6_rcxK7

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tc'C:IsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.OverloadedLabels.$tc'C:IsLabel1
  = GHC.Types.KindRepFun $krep4_rcxK5 $krep7_rcxK8

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tc'C:IsLabel3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.OverloadedLabels.$tc'C:IsLabel3 = "'C:IsLabel"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tc'C:IsLabel2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.OverloadedLabels.$tc'C:IsLabel2
  = GHC.Types.TrNameS GHC.OverloadedLabels.$tc'C:IsLabel3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.OverloadedLabels.$tc'C:IsLabel :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.OverloadedLabels.$tc'C:IsLabel
  = GHC.Types.TyCon
      8283571148151255172##
      4485319284429056444##
      GHC.OverloadedLabels.$trModule
      GHC.OverloadedLabels.$tc'C:IsLabel2
      2#
      GHC.OverloadedLabels.$tc'C:IsLabel1


