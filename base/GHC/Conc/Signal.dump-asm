
==================== Asm code ====================
2018-03-16 16:05:23.034984721 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Conc.Signal.$trModule4_bytes
.type GHC.Conc.Signal.$trModule4_bytes, @object
GHC.Conc.Signal.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:05:23.03669737 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule3_closure
.type GHC.Conc.Signal.$trModule3_closure, @object
GHC.Conc.Signal.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Conc.Signal.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:05:23.0382609 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Conc.Signal.$trModule2_bytes
.type GHC.Conc.Signal.$trModule2_bytes, @object
GHC.Conc.Signal.$trModule2_bytes:
	.asciz "GHC.Conc.Signal"


==================== Asm code ====================
2018-03-16 16:05:23.039914152 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule1_closure
.type GHC.Conc.Signal.$trModule1_closure, @object
GHC.Conc.Signal.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Conc.Signal.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:05:23.041562152 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule_closure
.type GHC.Conc.Signal.$trModule_closure, @object
GHC.Conc.Signal.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Conc.Signal.$trModule3_closure+1
	.quad	GHC.Conc.Signal.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:23.043240315 UTC

.section .data
.align 8
.align 1
lvl_ramSF_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.044858074 UTC

.section .data
.align 8
.align 1
lvl1_ramSG_closure:
	.quad	GHC.Types.I#_con_info
	.quad	64


==================== Asm code ====================
2018-03-16 16:05:23.051320488 UTC

.section .data
.align 8
.align 1
lvl2_ramSH_closure:
	.quad	lvl2_ramSH_info


==================== Asm code ====================
2018-03-16 16:05:23.052128265 UTC

.section .text
.align 8
sat_samTm_entry:
_canhj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canhk
_canhl:
	movq $block_canha_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_makeStablePtr#
_canhk:
	jmp *-8(%r13)
	.size sat_samTm_entry, .-sat_samTm_entry


==================== Asm code ====================
2018-03-16 16:05:23.052783203 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samTm_info:
	.quad	sat_samTm_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.053630481 UTC

.section .text
.align 8
_canha:
_canha:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call getOrSetGHCConcSignalSignalHandlerStore
	addq $8,%rsp
	cmpq %rax,%rbx
	je _canhi
_canhh:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call hs_free_stable_ptr
	addq $8,%rsp
	addq $16,%rbp
	jmp stg_deRefStablePtr#
_canhi:
	movq %r14,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canha, .-_canha


==================== Asm code ====================
2018-03-16 16:05:23.054288058 UTC

.section .data.rel.ro
.align 8
.align 1
block_canha_info:
	.quad	_canha
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.054964927 UTC

.section .text
.align 8
lvl2_ramSH_entry:
_canht:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canhu
_canhv:
	movq $block_cangQ_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_canhu:
	movl $lvl2_ramSH_closure,%ebx
	jmp *-8(%r13)
	.size lvl2_ramSH_entry, .-lvl2_ramSH_entry


==================== Asm code ====================
2018-03-16 16:05:23.05559359 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_ramSH_info:
	.quad	lvl2_ramSH_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.056208225 UTC

.section .text
.align 8
_cangQ:
_cangQ:
	movq $block_cangS_info,(%rbp)
	movl $GHC.Base.Nothing_closure+1,%r14d
	movl $65,%ebx
	jmp stg_newArray#
	.size _cangQ, .-_cangQ


==================== Asm code ====================
2018-03-16 16:05:23.056781992 UTC

.section .data.rel.ro
.align 8
.align 1
block_cangQ_info:
	.quad	_cangQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.057895023 UTC

.section .text
.align 8
_cangS:
_cangS:
	movq $block_cangU_info,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
	.size _cangS, .-_cangS


==================== Asm code ====================
2018-03-16 16:05:23.05848215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cangS_info:
	.quad	_cangS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.060805236 UTC

.section .text
.align 8
_cangU:
_cangU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canhA
_canhz:
	movq $GHC.Arr.STArray_con_info,-32(%r12)
	movq $lvl_ramSF_closure+1,-24(%r12)
	movq $lvl1_ramSG_closure+1,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq $65,(%r12)
	movq $block_cangX_info,(%rbp)
	leaq -31(%r12),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp stg_putMVar#
_canhA:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cangU, .-_cangU


==================== Asm code ====================
2018-03-16 16:05:23.061456068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cangU_info:
	.quad	_cangU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.062043045 UTC

.section .text
.align 8
_cangX:
_cangX:
	movq $block_cangZ_info,(%rbp)
	jmp stg_getMaskingState#
	.size _cangX, .-_cangX


==================== Asm code ====================
2018-03-16 16:05:23.062609392 UTC

.section .data.rel.ro
.align 8
.align 1
block_cangX_info:
	.quad	_cangX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.06333415 UTC

.section .text
.align 8
_cangZ:
_cangZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _canhE
_canhD:
	movq $GHC.MVar.MVar_con_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _canhs
_canhr:
	addq $-16,%r12
	movq $block_canhF_info,(%rbp)
	movq %rax,%rbx
	movq %rax,8(%rbp)
	jmp stg_makeStablePtr#
_canhE:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
_canhs:
	movq $sat_samTm_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp stg_maskAsyncExceptions#
	.size _cangZ, .-_cangZ


==================== Asm code ====================
2018-03-16 16:05:23.064030913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cangZ_info:
	.quad	_cangZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.064804609 UTC

.section .text
.align 8
_canhF:
_canhF:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call getOrSetGHCConcSignalSignalHandlerStore
	addq $8,%rsp
	cmpq %rax,%rbx
	je _canhO
_canhN:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call hs_free_stable_ptr
	addq $8,%rsp
	addq $16,%rbp
	jmp stg_deRefStablePtr#
_canhO:
	movq %r14,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canhF, .-_canhF


==================== Asm code ====================
2018-03-16 16:05:23.065468009 UTC

.section .data.rel.ro
.align 8
.align 1
block_canhF_info:
	.quad	_canhF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.06838442 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.signal_handlers_closure
.type GHC.Conc.Signal.signal_handlers_closure, @object
GHC.Conc.Signal.signal_handlers_closure:
	.quad	GHC.Conc.Signal.signal_handlers_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.069167663 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.signal_handlers_entry
.type GHC.Conc.Signal.signal_handlers_entry, @object
GHC.Conc.Signal.signal_handlers_entry:
_caniy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caniz
_caniA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caniv
_caniu:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caniw_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl2_ramSH_entry
_caniz:
	jmp *-16(%r13)
_caniv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Conc.Signal.signal_handlers_entry, .-GHC.Conc.Signal.signal_handlers_entry


==================== Asm code ====================
2018-03-16 16:05:23.070167955 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.signal_handlers_info
.type GHC.Conc.Signal.signal_handlers_info, @object
GHC.Conc.Signal.signal_handlers_info:
	.quad	GHC.Conc.Signal.signal_handlers_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:23.070790752 UTC

.section .text
.align 8
_caniw:
_caniw:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caniw, .-_caniw


==================== Asm code ====================
2018-03-16 16:05:23.071355887 UTC

.section .data.rel.ro
.align 8
.align 1
block_caniw_info:
	.quad	_caniw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.072992222 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_ramSI_bytes:
	.asciz "GHC.Conc.setHandler: signal out of range"


==================== Asm code ====================
2018-03-16 16:05:23.075771764 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler2_closure
.type GHC.Conc.Signal.setHandler2_closure, @object
GHC.Conc.Signal.setHandler2_closure:
	.quad	GHC.Conc.Signal.setHandler2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.076561509 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler2_entry
.type GHC.Conc.Signal.setHandler2_entry, @object
GHC.Conc.Signal.setHandler2_entry:
_caniX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caniY
_caniZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caniU
_caniT:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caniV_info,-24(%rbp)
	movl $lvl3_ramSI_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_caniY:
	jmp *-16(%r13)
_caniU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Conc.Signal.setHandler2_entry, .-GHC.Conc.Signal.setHandler2_entry


==================== Asm code ====================
2018-03-16 16:05:23.077277425 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler2_info
.type GHC.Conc.Signal.setHandler2_info, @object
GHC.Conc.Signal.setHandler2_info:
	.quad	GHC.Conc.Signal.setHandler2_entry
	.quad	0
	.quad	4294967317
	.quad	SamXS_srt


==================== Asm code ====================
2018-03-16 16:05:23.077880365 UTC

.section .text
.align 8
_caniV:
_caniV:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _caniV, .-_caniV


==================== Asm code ====================
2018-03-16 16:05:23.078403398 UTC

.section .data.rel.ro
.align 8
.align 1
block_caniV_info:
	.quad	_caniV
	.quad	0
	.quad	4294967326
	.quad	SamXS_srt


==================== Asm code ====================
2018-03-16 16:05:23.096020626 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler1_closure
.type GHC.Conc.Signal.setHandler1_closure, @object
GHC.Conc.Signal.setHandler1_closure:
	.quad	GHC.Conc.Signal.setHandler1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.096898183 UTC

.section .text
.align 8
io_samTx_entry:
_canjr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canjF
_canjG:
	movq $block_canjo_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _canjo
_canjp:
	movq (%rbx),%rax
	jmp *(%rax)
_canjF:
	jmp *-8(%r13)
	.size io_samTx_entry, .-io_samTx_entry


==================== Asm code ====================
2018-03-16 16:05:23.097563506 UTC

.section .data.rel.ro
.align 8
.align 1
io_samTx_info:
	.quad	io_samTx_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.098229564 UTC

.section .text
.align 8
_canjo:
_canjo:
	movq $block_canju_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canju
_canjv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canjo, .-_canjo


==================== Asm code ====================
2018-03-16 16:05:23.098834701 UTC

.section .data.rel.ro
.align 8
.align 1
block_canjo_info:
	.quad	_canjo
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.099439732 UTC

.section .text
.align 8
_canju:
_canju:
	movq $block_canjz_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _canjz
_canjA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canju, .-_canju


==================== Asm code ====================
2018-03-16 16:05:23.100027944 UTC

.section .data.rel.ro
.align 8
.align 1
block_canju_info:
	.quad	_canju
	.quad	4
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.100644398 UTC

.section .text
.align 8
_canjz:
_canjz:
	movq $block_canjE_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _canjE
_canjK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canjz, .-_canjz


==================== Asm code ====================
2018-03-16 16:05:23.101358312 UTC

.section .data.rel.ro
.align 8
.align 1
block_canjz_info:
	.quad	_canjz
	.quad	132
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.10210831 UTC

.section .text
.align 8
_canjE:
_canjE:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _canjY
_cank0:
	cmpq 24(%rbp),%rax
	jg _canjY
_canjZ:
	movq 32(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 24(%rcx,%rax,8),%rdx
	movq %rbx,24(%rcx,%rax,8)
	movq $stg_MUT_ARR_PTRS_DIRTY_info,(%rcx)
	leaq 24(%rcx),%rbx
	shrq $7,%rax
	movq 8(%rcx),%rcx
	shlq $3,%rcx
	addq %rax,%rcx
	movb $1,(%rbx,%rcx,1)
	movq %rdx,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_canjY:
	movl $GHC.Conc.Signal.setHandler2_closure,%ebx
	addq $40,%rbp
	jmp stg_ap_0_fast
	.size _canjE, .-_canjE


==================== Asm code ====================
2018-03-16 16:05:23.102769217 UTC

.section .data.rel.ro
.align 8
.align 1
block_canjE_info:
	.quad	_canjE
	.quad	388
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.103505846 UTC

.section .text
.align 8
sat_samU4_entry:
_cankl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cankm
_cankn:
	movq $block_cankj_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_cankm:
	jmp *-8(%r13)
	.size sat_samU4_entry, .-sat_samU4_entry


==================== Asm code ====================
2018-03-16 16:05:23.104115776 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samU4_info:
	.quad	sat_samU4_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.104705093 UTC

.section .text
.align 8
_cankj:
_cankj:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _cankj, .-_cankj


==================== Asm code ====================
2018-03-16 16:05:23.105303432 UTC

.section .data.rel.ro
.align 8
.align 1
block_cankj_info:
	.quad	_cankj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.106717059 UTC

.section .text
.align 8
sat_samTZ_entry:
_canku:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samTx_entry
	.size sat_samTZ_entry, .-sat_samTZ_entry


==================== Asm code ====================
2018-03-16 16:05:23.107314109 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samTZ_info:
	.quad	sat_samTZ_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.10791865 UTC

.section .text
.align 8
sat_samU0_entry:
_cankC:
	movq 7(%rbx),%rbx
	jmp stg_maskAsyncExceptions#
	.size sat_samU0_entry, .-sat_samU0_entry


==================== Asm code ====================
2018-03-16 16:05:23.108430966 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samU0_info:
	.quad	sat_samU0_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.109105442 UTC

.section .text
.align 8
sat_samUk_entry:
_cankZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canl0
_canl1:
	movq $block_cankX_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_canl0:
	jmp *-8(%r13)
	.size sat_samUk_entry, .-sat_samUk_entry


==================== Asm code ====================
2018-03-16 16:05:23.109750999 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUk_info:
	.quad	sat_samUk_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.110326904 UTC

.section .text
.align 8
_cankX:
_cankX:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _cankX, .-_cankX


==================== Asm code ====================
2018-03-16 16:05:23.110886097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cankX_info:
	.quad	_cankX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.111493514 UTC

.section .text
.align 8
sat_samUf_entry:
_canl8:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samTx_entry
	.size sat_samUf_entry, .-sat_samUf_entry


==================== Asm code ====================
2018-03-16 16:05:23.11205892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUf_info:
	.quad	sat_samUf_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.112665299 UTC

.section .text
.align 8
sat_samUg_entry:
_canlg:
	movq 7(%rbx),%rbx
	jmp stg_unmaskAsyncExceptions#
	.size sat_samUg_entry, .-sat_samUg_entry


==================== Asm code ====================
2018-03-16 16:05:23.113225719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUg_info:
	.quad	sat_samUg_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.113992001 UTC

.section .text
.align 8
sat_samUp_entry:
_canlj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canln
_canlo:
	movq $block_cankL_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cankL
_cankM:
	movq (%rbx),%rax
	jmp *(%rax)
_canln:
	jmp *-8(%r13)
	.size sat_samUp_entry, .-sat_samUp_entry


==================== Asm code ====================
2018-03-16 16:05:23.114611152 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUp_info:
	.quad	sat_samUp_entry
	.quad	1
	.quad	12884901897
	.quad	4294967299
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.115253988 UTC

.section .text
.align 8
_cankL:
_cankL:
	movq $block_cankQ_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _cankL, .-_cankL


==================== Asm code ====================
2018-03-16 16:05:23.115840473 UTC

.section .data.rel.ro
.align 8
.align 1
block_cankL_info:
	.quad	_cankL
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.116596711 UTC

.section .text
.align 8
_cankQ:
_cankQ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canls
_canlr:
	movq $sat_samUk_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samUf_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samUg_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_canlk_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_canls:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cankQ, .-_cankQ


==================== Asm code ====================
2018-03-16 16:05:23.117342598 UTC

.section .data.rel.ro
.align 8
.align 1
block_cankQ_info:
	.quad	_cankQ
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.118011396 UTC

.section .text
.align 8
_canlk:
_canlk:
	movq 8(%rbp),%rax
	movq $block_canlm_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _canlk, .-_canlk


==================== Asm code ====================
2018-03-16 16:05:23.118591912 UTC

.section .data.rel.ro
.align 8
.align 1
block_canlk_info:
	.quad	_canlk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.119205989 UTC

.section .text
.align 8
_canlm:
_canlm:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canlm, .-_canlm


==================== Asm code ====================
2018-03-16 16:05:23.1197703 UTC

.section .data.rel.ro
.align 8
.align 1
block_canlm_info:
	.quad	_canlm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.120427168 UTC

.section .text
.align 8
sat_samUA_entry:
_canlM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canlN
_canlO:
	movq $block_canlK_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_canlN:
	jmp *-8(%r13)
	.size sat_samUA_entry, .-sat_samUA_entry


==================== Asm code ====================
2018-03-16 16:05:23.121037209 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUA_info:
	.quad	sat_samUA_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.121674695 UTC

.section .text
.align 8
_canlK:
_canlK:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _canlK, .-_canlK


==================== Asm code ====================
2018-03-16 16:05:23.12225392 UTC

.section .data.rel.ro
.align 8
.align 1
block_canlK_info:
	.quad	_canlK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.122803542 UTC

.section .text
.align 8
sat_samUv_entry:
_canlV:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samTx_entry
	.size sat_samUv_entry, .-sat_samUv_entry


==================== Asm code ====================
2018-03-16 16:05:23.123357647 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUv_info:
	.quad	sat_samUv_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.123957834 UTC

.section .text
.align 8
sat_samUw_entry:
_canm3:
	movq 7(%rbx),%rbx
	jmp stg_maskUninterruptible#
	.size sat_samUw_entry, .-sat_samUw_entry


==================== Asm code ====================
2018-03-16 16:05:23.12449082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samUw_info:
	.quad	sat_samUw_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.125197261 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler1_entry
.type GHC.Conc.Signal.setHandler1_entry, @object
GHC.Conc.Signal.setHandler1_entry:
_canma:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canmb
_canmc:
	movq $block_canjh_info,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_getMaskingState#
_canmb:
	movl $GHC.Conc.Signal.setHandler1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.setHandler1_entry, .-GHC.Conc.Signal.setHandler1_entry


==================== Asm code ====================
2018-03-16 16:05:23.126295018 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler1_info
.type GHC.Conc.Signal.setHandler1_info, @object
GHC.Conc.Signal.setHandler1_info:
	.quad	GHC.Conc.Signal.setHandler1_entry
	.quad	0
	.quad	30064771086
	.quad	12884901903
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.127173688 UTC

.section .text
.align 8
_canjh:
_canjh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canmf
_canme:
	movq $io_samTx_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	testq %rbx,%rbx
	je _canm8
_uanmA:
	cmpq $1,%rbx
	je _canm9
_canm7:
	addq $-16,%r12
	movq $block_cank7_info,8(%rbp)
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cank7
_cank8:
	movq (%rbx),%rax
	jmp *(%rax)
_canmf:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
_canm8:
	movq $sat_samUp_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_canm9:
	addq $-16,%r12
	movq $block_canly_info,8(%rbp)
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canly
_canlz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canjh, .-_canjh


==================== Asm code ====================
2018-03-16 16:05:23.127934709 UTC

.section .data.rel.ro
.align 8
.align 1
block_canjh_info:
	.quad	_canjh
	.quad	2
	.quad	12884901918
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.128604303 UTC

.section .text
.align 8
_canly:
_canly:
	movq $block_canlD_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _canly, .-_canly


==================== Asm code ====================
2018-03-16 16:05:23.129155584 UTC

.section .data.rel.ro
.align 8
.align 1
block_canly_info:
	.quad	_canly
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.129892556 UTC

.section .text
.align 8
_canlD:
_canlD:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canmw
_canmv:
	movq $sat_samUA_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samUv_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samUw_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_canmq_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_canmw:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _canlD, .-_canlD


==================== Asm code ====================
2018-03-16 16:05:23.130574279 UTC

.section .data.rel.ro
.align 8
.align 1
block_canlD_info:
	.quad	_canlD
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.131241981 UTC

.section .text
.align 8
_canmq:
_canmq:
	movq 8(%rbp),%rax
	movq $block_canms_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _canmq, .-_canmq


==================== Asm code ====================
2018-03-16 16:05:23.13184101 UTC

.section .data.rel.ro
.align 8
.align 1
block_canmq_info:
	.quad	_canmq
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.132433176 UTC

.section .text
.align 8
_canms:
_canms:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canms, .-_canms


==================== Asm code ====================
2018-03-16 16:05:23.13298753 UTC

.section .data.rel.ro
.align 8
.align 1
block_canms_info:
	.quad	_canms
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.13364541 UTC

.section .text
.align 8
_cank7:
_cank7:
	movq $block_cankc_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _cank7, .-_cank7


==================== Asm code ====================
2018-03-16 16:05:23.134726629 UTC

.section .data.rel.ro
.align 8
.align 1
block_cank7_info:
	.quad	_cank7
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.135530692 UTC

.section .text
.align 8
_cankc:
_cankc:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canmm
_canml:
	movq $sat_samU4_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samTZ_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samU0_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_canmg_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_canmm:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cankc, .-_cankc


==================== Asm code ====================
2018-03-16 16:05:23.136221069 UTC

.section .data.rel.ro
.align 8
.align 1
block_cankc_info:
	.quad	_cankc
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.136895482 UTC

.section .text
.align 8
_canmg:
_canmg:
	movq 8(%rbp),%rax
	movq $block_canmi_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _canmg, .-_canmg


==================== Asm code ====================
2018-03-16 16:05:23.13810594 UTC

.section .data.rel.ro
.align 8
.align 1
block_canmg_info:
	.quad	_canmg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.138695684 UTC

.section .text
.align 8
_canmi:
_canmi:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canmi, .-_canmi


==================== Asm code ====================
2018-03-16 16:05:23.139260003 UTC

.section .data.rel.ro
.align 8
.align 1
block_canmi_info:
	.quad	_canmi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.141563032 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler_closure
.type GHC.Conc.Signal.setHandler_closure, @object
GHC.Conc.Signal.setHandler_closure:
	.quad	GHC.Conc.Signal.setHandler_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.142185052 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler_entry
.type GHC.Conc.Signal.setHandler_entry, @object
GHC.Conc.Signal.setHandler_entry:
_canoM:
	jmp GHC.Conc.Signal.setHandler1_entry
	.size GHC.Conc.Signal.setHandler_entry, .-GHC.Conc.Signal.setHandler_entry


==================== Asm code ====================
2018-03-16 16:05:23.142722712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler_info
.type GHC.Conc.Signal.setHandler_info, @object
GHC.Conc.Signal.setHandler_info:
	.quad	GHC.Conc.Signal.setHandler_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SamXS_srt+24


==================== Asm code ====================
2018-03-16 16:05:23.163525128 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers1_closure
.type GHC.Conc.Signal.runHandlers1_closure, @object
GHC.Conc.Signal.runHandlers1_closure:
	.quad	GHC.Conc.Signal.runHandlers1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.164252495 UTC

.section .text
.align 8
sat_samV3_entry:
_canpB:
	movq 16(%rbx),%r14
	movq 24(%rbx),%rbx
	jmp stg_ap_p_fast
	.size sat_samV3_entry, .-sat_samV3_entry


==================== Asm code ====================
2018-03-16 16:05:23.164794657 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samV3_info:
	.quad	sat_samV3_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:23.165597769 UTC

.section .text
.align 8
sat_samV4_entry:
_canpE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _canpI
_canpH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_samV3_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movl $GHC.Conc.Sync.forkIO2_closure+2,%r14d
	leaq -24(%r12),%rbx
	jmp stg_catch#
_canpI:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_samV4_entry, .-sat_samV4_entry


==================== Asm code ====================
2018-03-16 16:05:23.166252886 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samV4_info:
	.quad	sat_samV4_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.166986735 UTC

.section .text
.align 8
$wio_samUL_entry:
_canpJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canpK
_canpL:
	movq $block_canp4_info,-40(%rbp)
	movq 4(%rbx),%rax
	movq 12(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _canp4
_canp5:
	movq (%rbx),%rax
	jmp *(%rax)
_canpK:
	jmp *-8(%r13)
	.size $wio_samUL_entry, .-$wio_samUL_entry


==================== Asm code ====================
2018-03-16 16:05:23.167649112 UTC

.section .data.rel.ro
.align 8
.align 1
$wio_samUL_info:
	.quad	$wio_samUL_entry
	.quad	2
	.quad	4294967307
	.quad	17179869201
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.16843179 UTC

.section .text
.align 8
_canp4:
_canp4:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _uanq6
_canq4:
	cmpq 24(%rbp),%rax
	jg _uanq7
_canpR:
	movq 32(%rbp),%rbx
	movq 24(%rbx,%rax,8),%rax
	movq $block_canph_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _canph
_canpi:
	movq (%rbx),%rax
	jmp *(%rax)
_uanq7:
	addq $40,%rbp
	jmp _canpV
_uanq6:
	addq $40,%rbp
	jmp _canpV
	.size _canp4, .-_canp4


==================== Asm code ====================
2018-03-16 16:05:23.169113261 UTC

.section .data.rel.ro
.align 8
.align 1
block_canp4_info:
	.quad	_canp4
	.quad	388
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.169895437 UTC

.section .text
.align 8
_canph:
_canph:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uanq8
_canpY:
	movq $block_canpn_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _canpn
_canpo:
	movq (%rbx),%rax
	jmp *(%rax)
_uanq8:
	addq $40,%rbp
	jmp _canpV
	.size _canph, .-_canph


==================== Asm code ====================
2018-03-16 16:05:23.170525154 UTC

.section .data.rel.ro
.align 8
.align 1
block_canph_info:
	.quad	_canph
	.quad	900
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.171179967 UTC

.section .text
.align 8
_canpV:
_canpV:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canpV, .-_canpV


==================== Asm code ====================
2018-03-16 16:05:23.171974561 UTC

.section .text
.align 8
_canpn:
_canpn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _canq1
_canq0:
	movq 7(%rbx),%rax
	movq $sat_samV4_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_canpW_info,32(%rbp)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	jmp stg_fork#
_canq1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _canpn, .-_canpn


==================== Asm code ====================
2018-03-16 16:05:23.172614935 UTC

.section .data.rel.ro
.align 8
.align 1
block_canpn_info:
	.quad	_canpn
	.quad	900
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.17326716 UTC

.section .text
.align 8
_canpW:
_canpW:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canpW, .-_canpW


==================== Asm code ====================
2018-03-16 16:05:23.173820593 UTC

.section .data.rel.ro
.align 8
.align 1
block_canpW_info:
	.quad	_canpW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.174554177 UTC

.section .text
.align 8
io_samV8_entry:
_canqn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _canqw
_canqx:
	movq $block_canqk_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canqk
_canql:
	movq (%rbx),%rax
	jmp *(%rax)
_canqw:
	jmp *-8(%r13)
	.size io_samV8_entry, .-io_samV8_entry


==================== Asm code ====================
2018-03-16 16:05:23.175201233 UTC

.section .data.rel.ro
.align 8
.align 1
io_samV8_info:
	.quad	io_samV8_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.175894323 UTC

.section .text
.align 8
_canqk:
_canqk:
	movq $block_canqq_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canqq
_canqr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canqk, .-_canqk


==================== Asm code ====================
2018-03-16 16:05:23.176520687 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqk_info:
	.quad	_canqk
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.177211558 UTC

.section .text
.align 8
_canqq:
_canqq:
	movq $block_canqv_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _canqv
_canqA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canqq, .-_canqq


==================== Asm code ====================
2018-03-16 16:05:23.177884536 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqq_info:
	.quad	_canqq
	.quad	3
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.178497661 UTC

.section .text
.align 8
_canqv:
_canqv:
	movq 8(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp $wio_samUL_entry
	.size _canqv, .-_canqv


==================== Asm code ====================
2018-03-16 16:05:23.179081846 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqv_info:
	.quad	_canqv
	.quad	131
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.179800375 UTC

.section .text
.align 8
sat_samVv_entry:
_canqY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canqZ
_canr0:
	movq $block_canqW_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_canqZ:
	jmp *-8(%r13)
	.size sat_samVv_entry, .-sat_samVv_entry


==================== Asm code ====================
2018-03-16 16:05:23.180403945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVv_info:
	.quad	sat_samVv_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.181029867 UTC

.section .text
.align 8
_canqW:
_canqW:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _canqW, .-_canqW


==================== Asm code ====================
2018-03-16 16:05:23.181615846 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqW_info:
	.quad	_canqW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.182217614 UTC

.section .text
.align 8
sat_samVq_entry:
_canr7:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samV8_entry
	.size sat_samVq_entry, .-sat_samVq_entry


==================== Asm code ====================
2018-03-16 16:05:23.183607983 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVq_info:
	.quad	sat_samVq_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.184282691 UTC

.section .text
.align 8
sat_samVr_entry:
_canrf:
	movq 7(%rbx),%rbx
	jmp stg_maskAsyncExceptions#
	.size sat_samVr_entry, .-sat_samVr_entry


==================== Asm code ====================
2018-03-16 16:05:23.184887742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVr_info:
	.quad	sat_samVr_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.185614569 UTC

.section .text
.align 8
sat_samVL_entry:
_canrC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canrD
_canrE:
	movq $block_canrA_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_canrD:
	jmp *-8(%r13)
	.size sat_samVL_entry, .-sat_samVL_entry


==================== Asm code ====================
2018-03-16 16:05:23.186251964 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVL_info:
	.quad	sat_samVL_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.18686239 UTC

.section .text
.align 8
_canrA:
_canrA:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _canrA, .-_canrA


==================== Asm code ====================
2018-03-16 16:05:23.187418992 UTC

.section .data.rel.ro
.align 8
.align 1
block_canrA_info:
	.quad	_canrA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.188005886 UTC

.section .text
.align 8
sat_samVG_entry:
_canrL:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samV8_entry
	.size sat_samVG_entry, .-sat_samVG_entry


==================== Asm code ====================
2018-03-16 16:05:23.188578045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVG_info:
	.quad	sat_samVG_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.189751712 UTC

.section .text
.align 8
sat_samVH_entry:
_canrT:
	movq 7(%rbx),%rbx
	jmp stg_unmaskAsyncExceptions#
	.size sat_samVH_entry, .-sat_samVH_entry


==================== Asm code ====================
2018-03-16 16:05:23.190305993 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVH_info:
	.quad	sat_samVH_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.191084339 UTC

.section .text
.align 8
sat_samVQ_entry:
_canrW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cans0
_cans1:
	movq $block_canro_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canro
_canrp:
	movq (%rbx),%rax
	jmp *(%rax)
_cans0:
	jmp *-8(%r13)
	.size sat_samVQ_entry, .-sat_samVQ_entry


==================== Asm code ====================
2018-03-16 16:05:23.191740597 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVQ_info:
	.quad	sat_samVQ_entry
	.quad	1
	.quad	21474836489
	.quad	4294967299
	.quad	SamXS_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.192383519 UTC

.section .text
.align 8
_canro:
_canro:
	movq $block_canrt_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _canro, .-_canro


==================== Asm code ====================
2018-03-16 16:05:23.19298718 UTC

.section .data.rel.ro
.align 8
.align 1
block_canro_info:
	.quad	_canro
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.193757885 UTC

.section .text
.align 8
_canrt:
_canrt:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cans5
_cans4:
	movq $sat_samVL_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samVG_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samVH_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_canrX_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_cans5:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _canrt, .-_canrt


==================== Asm code ====================
2018-03-16 16:05:23.194465791 UTC

.section .data.rel.ro
.align 8
.align 1
block_canrt_info:
	.quad	_canrt
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.195093309 UTC

.section .text
.align 8
_canrX:
_canrX:
	movq 8(%rbp),%rax
	movq $block_canrZ_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _canrX, .-_canrX


==================== Asm code ====================
2018-03-16 16:05:23.195705715 UTC

.section .data.rel.ro
.align 8
.align 1
block_canrX_info:
	.quad	_canrX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.196342876 UTC

.section .text
.align 8
_canrZ:
_canrZ:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canrZ, .-_canrZ


==================== Asm code ====================
2018-03-16 16:05:23.196900716 UTC

.section .data.rel.ro
.align 8
.align 1
block_canrZ_info:
	.quad	_canrZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.197639171 UTC

.section .text
.align 8
sat_samW1_entry:
_cansp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cansq
_cansr:
	movq $block_cansn_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_cansq:
	jmp *-8(%r13)
	.size sat_samW1_entry, .-sat_samW1_entry


==================== Asm code ====================
2018-03-16 16:05:23.198296372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samW1_info:
	.quad	sat_samW1_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.198937329 UTC

.section .text
.align 8
_cansn:
_cansn:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _cansn, .-_cansn


==================== Asm code ====================
2018-03-16 16:05:23.199525391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cansn_info:
	.quad	_cansn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.200124971 UTC

.section .text
.align 8
sat_samVW_entry:
_cansy:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_samV8_entry
	.size sat_samVW_entry, .-sat_samVW_entry


==================== Asm code ====================
2018-03-16 16:05:23.200708844 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVW_info:
	.quad	sat_samVW_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.201762977 UTC

.section .text
.align 8
sat_samVX_entry:
_cansG:
	movq 7(%rbx),%rbx
	jmp stg_maskUninterruptible#
	.size sat_samVX_entry, .-sat_samVX_entry


==================== Asm code ====================
2018-03-16 16:05:23.202322835 UTC

.section .data.rel.ro
.align 8
.align 1
sat_samVX_info:
	.quad	sat_samVX_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.203025618 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlers1_entry
.type GHC.Conc.Signal.runHandlers1_entry, @object
GHC.Conc.Signal.runHandlers1_entry:
_cansN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cansO
_cansP:
	movq $block_canoX_info,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_getMaskingState#
_cansO:
	movl $GHC.Conc.Signal.runHandlers1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.runHandlers1_entry, .-GHC.Conc.Signal.runHandlers1_entry


==================== Asm code ====================
2018-03-16 16:05:23.203749834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers1_info
.type GHC.Conc.Signal.runHandlers1_info, @object
GHC.Conc.Signal.runHandlers1_info:
	.quad	GHC.Conc.Signal.runHandlers1_entry
	.quad	0
	.quad	55834574862
	.quad	12884901903
	.quad	SamXS_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.204695294 UTC

.section .text
.align 8
_canoX:
_canoX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cansS
_cansR:
	movq $$wio_samUL_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq $io_samV8_info,-24(%r12)
	leaq -44(%r12),%rax
	movq %rax,-16(%r12)
	leaq -22(%r12),%rax
	testq %rbx,%rbx
	je _cansL
_uantd:
	cmpq $1,%rbx
	je _cansM
_cansK:
	addq $-16,%r12
	movq $block_canqK_info,8(%rbp)
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canqK
_canqL:
	movq (%rbx),%rax
	jmp *(%rax)
_cansS:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
_cansL:
	movq $sat_samVQ_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cansM:
	addq $-16,%r12
	movq $block_cansb_info,8(%rbp)
	movl $GHC.Conc.Signal.signal_handlers_closure,%ebx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cansb
_cansc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canoX, .-_canoX


==================== Asm code ====================
2018-03-16 16:05:23.205570203 UTC

.section .data.rel.ro
.align 8
.align 1
block_canoX_info:
	.quad	_canoX
	.quad	2
	.quad	21474836510
	.quad	SamXS_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.206203728 UTC

.section .text
.align 8
_cansb:
_cansb:
	movq $block_cansg_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _cansb, .-_cansb


==================== Asm code ====================
2018-03-16 16:05:23.206774582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cansb_info:
	.quad	_cansb
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.207568397 UTC

.section .text
.align 8
_cansg:
_cansg:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cant9
_cant8:
	movq $sat_samW1_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samVW_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samVX_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_cant3_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_cant9:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cansg, .-_cansg


==================== Asm code ====================
2018-03-16 16:05:23.208288084 UTC

.section .data.rel.ro
.align 8
.align 1
block_cansg_info:
	.quad	_cansg
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.208957231 UTC

.section .text
.align 8
_cant3:
_cant3:
	movq 8(%rbp),%rax
	movq $block_cant5_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cant3, .-_cant3


==================== Asm code ====================
2018-03-16 16:05:23.209582686 UTC

.section .data.rel.ro
.align 8
.align 1
block_cant3_info:
	.quad	_cant3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.210182595 UTC

.section .text
.align 8
_cant5:
_cant5:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cant5, .-_cant5


==================== Asm code ====================
2018-03-16 16:05:23.210762173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cant5_info:
	.quad	_cant5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.211380305 UTC

.section .text
.align 8
_canqK:
_canqK:
	movq $block_canqP_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _canqK, .-_canqK


==================== Asm code ====================
2018-03-16 16:05:23.21245214 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqK_info:
	.quad	_canqK
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.213669753 UTC

.section .text
.align 8
_canqP:
_canqP:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cansZ
_cansY:
	movq $sat_samVv_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_samVq_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_samVr_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	movq $block_cansT_info,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp stg_catch#
_cansZ:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _canqP, .-_canqP


==================== Asm code ====================
2018-03-16 16:05:23.214388891 UTC

.section .data.rel.ro
.align 8
.align 1
block_canqP_info:
	.quad	_canqP
	.quad	2
	.quad	4294967326
	.quad	SamXS_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.215071406 UTC

.section .text
.align 8
_cansT:
_cansT:
	movq 8(%rbp),%rax
	movq $block_cansV_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cansT, .-_cansT


==================== Asm code ====================
2018-03-16 16:05:23.215692015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cansT_info:
	.quad	_cansT
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.216267094 UTC

.section .text
.align 8
_cansV:
_cansV:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cansV, .-_cansV


==================== Asm code ====================
2018-03-16 16:05:23.216844804 UTC

.section .data.rel.ro
.align 8
.align 1
block_cansV_info:
	.quad	_cansV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.219158445 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers_closure
.type GHC.Conc.Signal.runHandlers_closure, @object
GHC.Conc.Signal.runHandlers_closure:
	.quad	GHC.Conc.Signal.runHandlers_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.219767932 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlers_entry
.type GHC.Conc.Signal.runHandlers_entry, @object
GHC.Conc.Signal.runHandlers_entry:
_canvO:
	jmp GHC.Conc.Signal.runHandlers1_entry
	.size GHC.Conc.Signal.runHandlers_entry, .-GHC.Conc.Signal.runHandlers_entry


==================== Asm code ====================
2018-03-16 16:05:23.220328359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers_info
.type GHC.Conc.Signal.runHandlers_info, @object
GHC.Conc.Signal.runHandlers_info:
	.quad	GHC.Conc.Signal.runHandlers_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SamXS_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.223808069 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$wrunHandlersPtr_closure
.type GHC.Conc.Signal.$wrunHandlersPtr_closure, @object
GHC.Conc.Signal.$wrunHandlersPtr_closure:
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.224554021 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.$wrunHandlersPtr_entry
.type GHC.Conc.Signal.$wrunHandlersPtr_entry, @object
GHC.Conc.Signal.$wrunHandlersPtr_entry:
_canw5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canw6
_canw7:
	movq $block_canvZ_info,-24(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_newMutVar#
_canw6:
	movl $GHC.Conc.Signal.$wrunHandlersPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.$wrunHandlersPtr_entry, .-GHC.Conc.Signal.$wrunHandlersPtr_entry


==================== Asm code ====================
2018-03-16 16:05:23.225199649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.$wrunHandlersPtr_info
.type GHC.Conc.Signal.$wrunHandlersPtr_info, @object
GHC.Conc.Signal.$wrunHandlersPtr_info:
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_entry
	.quad	0
	.quad	30064771086
	.quad	12884901901
	.quad	SamXS_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.226348316 UTC

.section .text
.align 8
_canvZ:
_canvZ:
	movq $block_canw1_info,-8(%rbp)
	movq 8(%rbp),%r9
	xorl %r8d,%r8d
	xorl %edi,%edi
	movl $free,%esi
	movq %rbx,%r14
	movq $GHC.Tuple.()_closure+1,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.ForeignPtr.$winsertCFinalizer_entry
	.size _canvZ, .-_canvZ


==================== Asm code ====================
2018-03-16 16:05:23.226975022 UTC

.section .data.rel.ro
.align 8
.align 1
block_canvZ_info:
	.quad	_canvZ
	.quad	66
	.quad	12884901918
	.quad	SamXS_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.227735366 UTC

.section .text
.align 8
_canw1:
_canw1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canwb
_canwa:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%rsi
	leaq -15(%r12),%r14
	addq $32,%rbp
	jmp GHC.Conc.Signal.runHandlers1_entry
_canwb:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _canw1, .-_canw1


==================== Asm code ====================
2018-03-16 16:05:23.22842722 UTC

.section .data.rel.ro
.align 8
.align 1
block_canw1_info:
	.quad	_canw1
	.quad	131
	.quad	4294967326
	.quad	SamXS_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.231209288 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr1_closure
.type GHC.Conc.Signal.runHandlersPtr1_closure, @object
GHC.Conc.Signal.runHandlersPtr1_closure:
	.quad	GHC.Conc.Signal.runHandlersPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.23193963 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlersPtr1_entry
.type GHC.Conc.Signal.runHandlersPtr1_entry, @object
GHC.Conc.Signal.runHandlersPtr1_entry:
_canwx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canwy
_canwz:
	movq $block_canwu_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canwu
_canwv:
	movq (%rbx),%rax
	jmp *(%rax)
_canwy:
	movl $GHC.Conc.Signal.runHandlersPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.runHandlersPtr1_entry, .-GHC.Conc.Signal.runHandlersPtr1_entry


==================== Asm code ====================
2018-03-16 16:05:23.232615715 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr1_info
.type GHC.Conc.Signal.runHandlersPtr1_info, @object
GHC.Conc.Signal.runHandlersPtr1_info:
	.quad	GHC.Conc.Signal.runHandlersPtr1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SamXS_srt+56


==================== Asm code ====================
2018-03-16 16:05:23.23322702 UTC

.section .text
.align 8
_canwu:
_canwu:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Conc.Signal.$wrunHandlersPtr_entry
	.size _canwu, .-_canwu


==================== Asm code ====================
2018-03-16 16:05:23.233812473 UTC

.section .data.rel.ro
.align 8
.align 1
block_canwu_info:
	.quad	_canwu
	.quad	1
	.quad	4294967326
	.quad	SamXS_srt+56


==================== Asm code ====================
2018-03-16 16:05:23.235939716 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr_closure
.type GHC.Conc.Signal.runHandlersPtr_closure, @object
GHC.Conc.Signal.runHandlersPtr_closure:
	.quad	GHC.Conc.Signal.runHandlersPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.236550445 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlersPtr_entry
.type GHC.Conc.Signal.runHandlersPtr_entry, @object
GHC.Conc.Signal.runHandlersPtr_entry:
_canwR:
	jmp GHC.Conc.Signal.runHandlersPtr1_entry
	.size GHC.Conc.Signal.runHandlersPtr_entry, .-GHC.Conc.Signal.runHandlersPtr_entry


==================== Asm code ====================
2018-03-16 16:05:23.237135984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr_info
.type GHC.Conc.Signal.runHandlersPtr_info, @object
GHC.Conc.Signal.runHandlersPtr_info:
	.quad	GHC.Conc.Signal.runHandlersPtr_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SamXS_srt+64


==================== Asm code ====================
2018-03-16 16:05:23.239276257 UTC

.section .data.rel.ro
.align 8
.align 1
SamXS_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Conc.Signal.setHandler2_closure
	.quad	GHC.Conc.Signal.signal_handlers_closure
	.quad	GHC.Conc.Signal.setHandler1_closure
	.quad	GHC.Conc.Sync.forkIO2_closure
	.quad	GHC.Conc.Signal.runHandlers1_closure
	.quad	GHC.ForeignPtr.$winsertCFinalizer_closure
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_closure
	.quad	GHC.Conc.Signal.runHandlersPtr1_closure


==================== Asm code ====================
2018-03-16 16:05:23.787108945 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Conc.Signal.$trModule4_bytes
.type GHC.Conc.Signal.$trModule4_bytes, @object
GHC.Conc.Signal.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:05:23.788817652 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule3_closure
.type GHC.Conc.Signal.$trModule3_closure, @object
GHC.Conc.Signal.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Conc.Signal.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:05:23.790519528 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Conc.Signal.$trModule2_bytes
.type GHC.Conc.Signal.$trModule2_bytes, @object
GHC.Conc.Signal.$trModule2_bytes:
	.asciz "GHC.Conc.Signal"


==================== Asm code ====================
2018-03-16 16:05:23.792177221 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule1_closure
.type GHC.Conc.Signal.$trModule1_closure, @object
GHC.Conc.Signal.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Conc.Signal.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:05:23.794101396 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$trModule_closure
.type GHC.Conc.Signal.$trModule_closure, @object
GHC.Conc.Signal.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Conc.Signal.$trModule3_closure+1
	.quad	GHC.Conc.Signal.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:23.795858888 UTC

.section .data
.align 8
.align 1
lvl_ramSF_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.797643924 UTC

.section .data
.align 8
.align 1
lvl1_ramSG_closure:
	.quad	GHC.Types.I#_con_info
	.quad	64


==================== Asm code ====================
2018-03-16 16:05:23.804188158 UTC

.section .data
.align 8
.align 1
lvl2_ramSH_closure:
	.quad	lvl2_ramSH_info


==================== Asm code ====================
2018-03-16 16:05:23.805043455 UTC

.section .text
.align 8
sat_sanxB_entry:
_canBf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canBg
_canBh:
	leaq block_canB6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_makeStablePtr#@gotpcrel(%rip)
_canBg:
	jmp *-8(%r13)
	.size sat_sanxB_entry, .-sat_sanxB_entry


==================== Asm code ====================
2018-03-16 16:05:23.806050234 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanxB_info:
	.quad	sat_sanxB_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.806875467 UTC

.section .text
.align 8
_canB6:
_canB6:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call getOrSetGHCConcSignalSignalHandlerStore@plt
	addq $8,%rsp
	cmpq %rax,%rbx
	je _canBe
_canBd:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call hs_free_stable_ptr@plt
	addq $8,%rsp
	addq $16,%rbp
	jmp *stg_deRefStablePtr#@gotpcrel(%rip)
_canBe:
	movq %r14,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canB6, .-_canB6


==================== Asm code ====================
2018-03-16 16:05:23.807606653 UTC

.section .data.rel.ro
.align 8
.align 1
block_canB6_info:
	.quad	_canB6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.808294948 UTC

.section .text
.align 8
lvl2_ramSH_entry:
_canBp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canBq
_canBr:
	leaq block_canAM_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_canBq:
	leaq lvl2_ramSH_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl2_ramSH_entry, .-lvl2_ramSH_entry


==================== Asm code ====================
2018-03-16 16:05:23.80897019 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_ramSH_info:
	.quad	lvl2_ramSH_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.809642457 UTC

.section .text
.align 8
_canAM:
_canAM:
	leaq block_canAO_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movl $65,%ebx
	jmp *stg_newArray#@gotpcrel(%rip)
	.size _canAM, .-_canAM


==================== Asm code ====================
2018-03-16 16:05:23.810245845 UTC

.section .data.rel.ro
.align 8
.align 1
block_canAM_info:
	.quad	_canAM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.810919792 UTC

.section .text
.align 8
_canAO:
_canAO:
	leaq block_canAQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
	.size _canAO, .-_canAO


==================== Asm code ====================
2018-03-16 16:05:23.814643491 UTC

.section .data.rel.ro
.align 8
.align 1
block_canAO_info:
	.quad	_canAO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.815451067 UTC

.section .text
.align 8
_canAQ:
_canAQ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canBw
_canBv:
	movq GHC.Arr.STArray_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq lvl_ramSF_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl1_ramSG_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq $65,(%r12)
	leaq block_canAT_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -31(%r12),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
_canBw:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canAQ, .-_canAQ


==================== Asm code ====================
2018-03-16 16:05:23.816172179 UTC

.section .data.rel.ro
.align 8
.align 1
block_canAQ_info:
	.quad	_canAQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.816781431 UTC

.section .text
.align 8
_canAT:
_canAT:
	leaq block_canAV_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _canAT, .-_canAT


==================== Asm code ====================
2018-03-16 16:05:23.817644077 UTC

.section .data.rel.ro
.align 8
.align 1
block_canAT_info:
	.quad	_canAT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.818419057 UTC

.section .text
.align 8
_canAV:
_canAV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _canBA
_canBz:
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _canBo
_canBn:
	addq $-16,%r12
	leaq block_canBB_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	movq %rax,8(%rbp)
	jmp *stg_makeStablePtr#@gotpcrel(%rip)
_canBA:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_canBo:
	leaq sat_sanxB_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _canAV, .-_canAV


==================== Asm code ====================
2018-03-16 16:05:23.819154941 UTC

.section .data.rel.ro
.align 8
.align 1
block_canAV_info:
	.quad	_canAV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.819907647 UTC

.section .text
.align 8
_canBB:
_canBB:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call getOrSetGHCConcSignalSignalHandlerStore@plt
	addq $8,%rsp
	cmpq %rax,%rbx
	je _canBK
_canBJ:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call hs_free_stable_ptr@plt
	addq $8,%rsp
	addq $16,%rbp
	jmp *stg_deRefStablePtr#@gotpcrel(%rip)
_canBK:
	movq %r14,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canBB, .-_canBB


==================== Asm code ====================
2018-03-16 16:05:23.820566376 UTC

.section .data.rel.ro
.align 8
.align 1
block_canBB_info:
	.quad	_canBB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.823588285 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.signal_handlers_closure
.type GHC.Conc.Signal.signal_handlers_closure, @object
GHC.Conc.Signal.signal_handlers_closure:
	.quad	GHC.Conc.Signal.signal_handlers_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.824348722 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.signal_handlers_entry
.type GHC.Conc.Signal.signal_handlers_entry, @object
GHC.Conc.Signal.signal_handlers_entry:
_canCH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canCI
_canCJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _canCE
_canCD:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_canCF_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl2_ramSH_entry
_canCI:
	jmp *-16(%r13)
_canCE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Conc.Signal.signal_handlers_entry, .-GHC.Conc.Signal.signal_handlers_entry


==================== Asm code ====================
2018-03-16 16:05:23.825068703 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.signal_handlers_info
.type GHC.Conc.Signal.signal_handlers_info, @object
GHC.Conc.Signal.signal_handlers_info:
	.quad	GHC.Conc.Signal.signal_handlers_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:23.826010609 UTC

.section .text
.align 8
_canCF:
_canCF:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canCF, .-_canCF


==================== Asm code ====================
2018-03-16 16:05:23.826563517 UTC

.section .data.rel.ro
.align 8
.align 1
block_canCF_info:
	.quad	_canCF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.828212552 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_ramSI_bytes:
	.asciz "GHC.Conc.setHandler: signal out of range"


==================== Asm code ====================
2018-03-16 16:05:23.831077473 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler2_closure
.type GHC.Conc.Signal.setHandler2_closure, @object
GHC.Conc.Signal.setHandler2_closure:
	.quad	GHC.Conc.Signal.setHandler2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.831928844 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler2_entry
.type GHC.Conc.Signal.setHandler2_entry, @object
GHC.Conc.Signal.setHandler2_entry:
_canD8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canD9
_canDa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _canD5
_canD4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_canD6_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl3_ramSI_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_canD9:
	jmp *-16(%r13)
_canD5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Conc.Signal.setHandler2_entry, .-GHC.Conc.Signal.setHandler2_entry


==================== Asm code ====================
2018-03-16 16:05:23.832635192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler2_info
.type GHC.Conc.Signal.setHandler2_info, @object
GHC.Conc.Signal.setHandler2_info:
	.quad	GHC.Conc.Signal.setHandler2_entry
	.quad	0
	.quad	4294967317
	.quad	SanDe_srt


==================== Asm code ====================
2018-03-16 16:05:23.833299754 UTC

.section .text
.align 8
_canD6:
_canD6:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _canD6, .-_canD6


==================== Asm code ====================
2018-03-16 16:05:23.833880451 UTC

.section .data.rel.ro
.align 8
.align 1
block_canD6_info:
	.quad	_canD6
	.quad	0
	.quad	4294967326
	.quad	SanDe_srt


==================== Asm code ====================
2018-03-16 16:05:23.853304829 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler1_closure
.type GHC.Conc.Signal.setHandler1_closure, @object
GHC.Conc.Signal.setHandler1_closure:
	.quad	GHC.Conc.Signal.setHandler1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.85455195 UTC

.section .text
.align 8
io_sanxM_entry:
_canDF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canDT
_canDU:
	leaq block_canDC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _canDC
_canDD:
	movq (%rbx),%rax
	jmp *(%rax)
_canDT:
	jmp *-8(%r13)
	.size io_sanxM_entry, .-io_sanxM_entry


==================== Asm code ====================
2018-03-16 16:05:23.85542595 UTC

.section .data.rel.ro
.align 8
.align 1
io_sanxM_info:
	.quad	io_sanxM_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.856275132 UTC

.section .text
.align 8
_canDC:
_canDC:
	leaq block_canDI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canDI
_canDJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canDC, .-_canDC


==================== Asm code ====================
2018-03-16 16:05:23.857155792 UTC

.section .data.rel.ro
.align 8
.align 1
block_canDC_info:
	.quad	_canDC
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.858120573 UTC

.section .text
.align 8
_canDI:
_canDI:
	leaq block_canDN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _canDN
_canDO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canDI, .-_canDI


==================== Asm code ====================
2018-03-16 16:05:23.858960673 UTC

.section .data.rel.ro
.align 8
.align 1
block_canDI_info:
	.quad	_canDI
	.quad	4
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.859892548 UTC

.section .text
.align 8
_canDN:
_canDN:
	leaq block_canDS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _canDS
_canDY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canDN, .-_canDN


==================== Asm code ====================
2018-03-16 16:05:23.860748929 UTC

.section .data.rel.ro
.align 8
.align 1
block_canDN_info:
	.quad	_canDN
	.quad	132
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.861933418 UTC

.section .text
.align 8
_canDS:
_canDS:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _canEc
_canEe:
	cmpq 24(%rbp),%rax
	jg _canEc
_canEd:
	movq 32(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 24(%rcx,%rax,8),%rdx
	movq %rbx,24(%rcx,%rax,8)
	movq stg_MUT_ARR_PTRS_DIRTY_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rcx)
	leaq 24(%rcx),%rbx
	shrq $7,%rax
	movq 8(%rcx),%rcx
	shlq $3,%rcx
	addq %rax,%rcx
	movb $1,(%rbx,%rcx,1)
	movq %rdx,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_canEc:
	leaq GHC.Conc.Signal.setHandler2_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _canDS, .-_canDS


==================== Asm code ====================
2018-03-16 16:05:23.862921206 UTC

.section .data.rel.ro
.align 8
.align 1
block_canDS_info:
	.quad	_canDS
	.quad	388
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.863870661 UTC

.section .text
.align 8
sat_sanyj_entry:
_canEz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canEA
_canEB:
	leaq block_canEx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canEA:
	jmp *-8(%r13)
	.size sat_sanyj_entry, .-sat_sanyj_entry


==================== Asm code ====================
2018-03-16 16:05:23.86473168 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyj_info:
	.quad	sat_sanyj_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.865511232 UTC

.section .text
.align 8
_canEx:
_canEx:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canEx, .-_canEx


==================== Asm code ====================
2018-03-16 16:05:23.866287236 UTC

.section .data.rel.ro
.align 8
.align 1
block_canEx_info:
	.quad	_canEx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.868171007 UTC

.section .text
.align 8
sat_sanye_entry:
_canEI:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanxM_entry
	.size sat_sanye_entry, .-sat_sanye_entry


==================== Asm code ====================
2018-03-16 16:05:23.868993267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanye_info:
	.quad	sat_sanye_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.86990413 UTC

.section .text
.align 8
sat_sanyf_entry:
_canEQ:
	movq 7(%rbx),%rbx
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size sat_sanyf_entry, .-sat_sanyf_entry


==================== Asm code ====================
2018-03-16 16:05:23.870663021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyf_info:
	.quad	sat_sanyf_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.871623629 UTC

.section .text
.align 8
sat_sanyz_entry:
_canFd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canFe
_canFf:
	leaq block_canFb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canFe:
	jmp *-8(%r13)
	.size sat_sanyz_entry, .-sat_sanyz_entry


==================== Asm code ====================
2018-03-16 16:05:23.87246767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyz_info:
	.quad	sat_sanyz_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.873301587 UTC

.section .text
.align 8
_canFb:
_canFb:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canFb, .-_canFb


==================== Asm code ====================
2018-03-16 16:05:23.874120644 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFb_info:
	.quad	_canFb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.874959093 UTC

.section .text
.align 8
sat_sanyu_entry:
_canFm:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanxM_entry
	.size sat_sanyu_entry, .-sat_sanyu_entry


==================== Asm code ====================
2018-03-16 16:05:23.875748755 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyu_info:
	.quad	sat_sanyu_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.876459828 UTC

.section .text
.align 8
sat_sanyv_entry:
_canFu:
	movq 7(%rbx),%rbx
	jmp *stg_unmaskAsyncExceptions#@gotpcrel(%rip)
	.size sat_sanyv_entry, .-sat_sanyv_entry


==================== Asm code ====================
2018-03-16 16:05:23.877001204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyv_info:
	.quad	sat_sanyv_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.877744789 UTC

.section .text
.align 8
sat_sanyE_entry:
_canFx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canFB
_canFC:
	leaq block_canEZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canEZ
_canF0:
	movq (%rbx),%rax
	jmp *(%rax)
_canFB:
	jmp *-8(%r13)
	.size sat_sanyE_entry, .-sat_sanyE_entry


==================== Asm code ====================
2018-03-16 16:05:23.878342926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyE_info:
	.quad	sat_sanyE_entry
	.quad	1
	.quad	12884901897
	.quad	4294967299
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.878994218 UTC

.section .text
.align 8
_canEZ:
_canEZ:
	leaq block_canF4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canEZ, .-_canEZ


==================== Asm code ====================
2018-03-16 16:05:23.879605683 UTC

.section .data.rel.ro
.align 8
.align 1
block_canEZ_info:
	.quad	_canEZ
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.880361506 UTC

.section .text
.align 8
_canF4:
_canF4:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canFG
_canFF:
	leaq sat_sanyz_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanyu_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanyv_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canFy_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canFG:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canF4, .-_canF4


==================== Asm code ====================
2018-03-16 16:05:23.881086508 UTC

.section .data.rel.ro
.align 8
.align 1
block_canF4_info:
	.quad	_canF4
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.881782693 UTC

.section .text
.align 8
_canFy:
_canFy:
	movq 8(%rbp),%rax
	leaq block_canFA_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canFy, .-_canFy


==================== Asm code ====================
2018-03-16 16:05:23.88235815 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFy_info:
	.quad	_canFy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.882928629 UTC

.section .text
.align 8
_canFA:
_canFA:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canFA, .-_canFA


==================== Asm code ====================
2018-03-16 16:05:23.883496332 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFA_info:
	.quad	_canFA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.884196448 UTC

.section .text
.align 8
sat_sanyP_entry:
_canG0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canG1
_canG2:
	leaq block_canFY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canG1:
	jmp *-8(%r13)
	.size sat_sanyP_entry, .-sat_sanyP_entry


==================== Asm code ====================
2018-03-16 16:05:23.884769262 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyP_info:
	.quad	sat_sanyP_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.885620129 UTC

.section .text
.align 8
_canFY:
_canFY:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canFY, .-_canFY


==================== Asm code ====================
2018-03-16 16:05:23.886217645 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFY_info:
	.quad	_canFY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.886854372 UTC

.section .text
.align 8
sat_sanyK_entry:
_canG9:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanxM_entry
	.size sat_sanyK_entry, .-sat_sanyK_entry


==================== Asm code ====================
2018-03-16 16:05:23.887474526 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyK_info:
	.quad	sat_sanyK_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.888114172 UTC

.section .text
.align 8
sat_sanyL_entry:
_canGh:
	movq 7(%rbx),%rbx
	jmp *stg_maskUninterruptible#@gotpcrel(%rip)
	.size sat_sanyL_entry, .-sat_sanyL_entry


==================== Asm code ====================
2018-03-16 16:05:23.888664013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanyL_info:
	.quad	sat_sanyL_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.889358685 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler1_entry
.type GHC.Conc.Signal.setHandler1_entry, @object
GHC.Conc.Signal.setHandler1_entry:
_canGo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canGp
_canGq:
	leaq block_canDv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_canGp:
	leaq GHC.Conc.Signal.setHandler1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.setHandler1_entry, .-GHC.Conc.Signal.setHandler1_entry


==================== Asm code ====================
2018-03-16 16:05:23.88996649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler1_info
.type GHC.Conc.Signal.setHandler1_info, @object
GHC.Conc.Signal.setHandler1_info:
	.quad	GHC.Conc.Signal.setHandler1_entry
	.quad	0
	.quad	30064771086
	.quad	12884901903
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.890873128 UTC

.section .text
.align 8
_canDv:
_canDv:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canGt
_canGs:
	leaq io_sanxM_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	testq %rbx,%rbx
	je _canGm
_uanGO:
	cmpq $1,%rbx
	je _canGn
_canGl:
	addq $-16,%r12
	leaq block_canEl_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canEl
_canEm:
	movq (%rbx),%rax
	jmp *(%rax)
_canGt:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_canGm:
	leaq sat_sanyE_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_canGn:
	addq $-16,%r12
	leaq block_canFM_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canFM
_canFN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canDv, .-_canDv


==================== Asm code ====================
2018-03-16 16:05:23.891641676 UTC

.section .data.rel.ro
.align 8
.align 1
block_canDv_info:
	.quad	_canDv
	.quad	2
	.quad	12884901918
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.892282426 UTC

.section .text
.align 8
_canFM:
_canFM:
	leaq block_canFR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canFM, .-_canFM


==================== Asm code ====================
2018-03-16 16:05:23.892877854 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFM_info:
	.quad	_canFM
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.894350224 UTC

.section .text
.align 8
_canFR:
_canFR:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canGK
_canGJ:
	leaq sat_sanyP_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanyK_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanyL_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canGE_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canGK:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canFR, .-_canFR


==================== Asm code ====================
2018-03-16 16:05:23.895036855 UTC

.section .data.rel.ro
.align 8
.align 1
block_canFR_info:
	.quad	_canFR
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.895674409 UTC

.section .text
.align 8
_canGE:
_canGE:
	movq 8(%rbp),%rax
	leaq block_canGG_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canGE, .-_canGE


==================== Asm code ====================
2018-03-16 16:05:23.896258445 UTC

.section .data.rel.ro
.align 8
.align 1
block_canGE_info:
	.quad	_canGE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.896866921 UTC

.section .text
.align 8
_canGG:
_canGG:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canGG, .-_canGG


==================== Asm code ====================
2018-03-16 16:05:23.897456314 UTC

.section .data.rel.ro
.align 8
.align 1
block_canGG_info:
	.quad	_canGG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.898599949 UTC

.section .text
.align 8
_canEl:
_canEl:
	leaq block_canEq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canEl, .-_canEl


==================== Asm code ====================
2018-03-16 16:05:23.899189367 UTC

.section .data.rel.ro
.align 8
.align 1
block_canEl_info:
	.quad	_canEl
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.899958552 UTC

.section .text
.align 8
_canEq:
_canEq:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canGA
_canGz:
	leaq sat_sanyj_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanye_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanyf_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canGu_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canGA:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canEq, .-_canEq


==================== Asm code ====================
2018-03-16 16:05:23.900664333 UTC

.section .data.rel.ro
.align 8
.align 1
block_canEq_info:
	.quad	_canEq
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+8


==================== Asm code ====================
2018-03-16 16:05:23.901596744 UTC

.section .text
.align 8
_canGu:
_canGu:
	movq 8(%rbp),%rax
	leaq block_canGw_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canGu, .-_canGu


==================== Asm code ====================
2018-03-16 16:05:23.902168136 UTC

.section .data.rel.ro
.align 8
.align 1
block_canGu_info:
	.quad	_canGu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.902764587 UTC

.section .text
.align 8
_canGw:
_canGw:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canGw, .-_canGw


==================== Asm code ====================
2018-03-16 16:05:23.903314879 UTC

.section .data.rel.ro
.align 8
.align 1
block_canGw_info:
	.quad	_canGw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.905560835 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler_closure
.type GHC.Conc.Signal.setHandler_closure, @object
GHC.Conc.Signal.setHandler_closure:
	.quad	GHC.Conc.Signal.setHandler_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.906184381 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.setHandler_entry
.type GHC.Conc.Signal.setHandler_entry, @object
GHC.Conc.Signal.setHandler_entry:
_canJw:
	jmp GHC.Conc.Signal.setHandler1_entry
	.size GHC.Conc.Signal.setHandler_entry, .-GHC.Conc.Signal.setHandler_entry


==================== Asm code ====================
2018-03-16 16:05:23.90675883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.setHandler_info
.type GHC.Conc.Signal.setHandler_info, @object
GHC.Conc.Signal.setHandler_info:
	.quad	GHC.Conc.Signal.setHandler_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SanDe_srt+24


==================== Asm code ====================
2018-03-16 16:05:23.927313071 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers1_closure
.type GHC.Conc.Signal.runHandlers1_closure, @object
GHC.Conc.Signal.runHandlers1_closure:
	.quad	GHC.Conc.Signal.runHandlers1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.928046631 UTC

.section .text
.align 8
sat_sanzi_entry:
_canKl:
	movq 16(%rbx),%r14
	movq 24(%rbx),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size sat_sanzi_entry, .-sat_sanzi_entry


==================== Asm code ====================
2018-03-16 16:05:23.928639613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzi_info:
	.quad	sat_sanzi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:23.929493844 UTC

.section .text
.align 8
sat_sanzj_entry:
_canKo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _canKs
_canKr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sanzi_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq GHC.Conc.Sync.forkIO2_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	leaq -24(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_canKs:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_sanzj_entry, .-sat_sanzj_entry


==================== Asm code ====================
2018-03-16 16:05:23.930396355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzj_info:
	.quad	sat_sanzj_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.93139284 UTC

.section .text
.align 8
$wio_sanz0_entry:
_canKt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canKu
_canKv:
	leaq block_canJO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 4(%rbx),%rax
	movq 12(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _canJO
_canJP:
	movq (%rbx),%rax
	jmp *(%rax)
_canKu:
	jmp *-8(%r13)
	.size $wio_sanz0_entry, .-$wio_sanz0_entry


==================== Asm code ====================
2018-03-16 16:05:23.932284667 UTC

.section .data.rel.ro
.align 8
.align 1
$wio_sanz0_info:
	.quad	$wio_sanz0_entry
	.quad	2
	.quad	4294967307
	.quad	17179869201
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.933428383 UTC

.section .text
.align 8
_canJO:
_canJO:
	movq 7(%rbx),%rax
	cmpq 16(%rbp),%rax
	jl _uanKQ
_canKO:
	cmpq 24(%rbp),%rax
	jg _uanKR
_canKB:
	movq 32(%rbp),%rbx
	movq 24(%rbx,%rax,8),%rax
	leaq block_canK1_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _canK1
_canK2:
	movq (%rbx),%rax
	jmp *(%rax)
_uanKR:
	addq $40,%rbp
	jmp _canKF
_uanKQ:
	addq $40,%rbp
	jmp _canKF
	.size _canJO, .-_canJO


==================== Asm code ====================
2018-03-16 16:05:23.934309591 UTC

.section .data.rel.ro
.align 8
.align 1
block_canJO_info:
	.quad	_canJO
	.quad	388
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.935267569 UTC

.section .text
.align 8
_canK1:
_canK1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uanKS
_canKI:
	leaq block_canK7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _canK7
_canK8:
	movq (%rbx),%rax
	jmp *(%rax)
_uanKS:
	addq $40,%rbp
	jmp _canKF
	.size _canK1, .-_canK1


==================== Asm code ====================
2018-03-16 16:05:23.936126551 UTC

.section .data.rel.ro
.align 8
.align 1
block_canK1_info:
	.quad	_canK1
	.quad	900
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.936975675 UTC

.section .text
.align 8
_canKF:
_canKF:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canKF, .-_canKF


==================== Asm code ====================
2018-03-16 16:05:23.937998092 UTC

.section .text
.align 8
_canK7:
_canK7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _canKL
_canKK:
	movq 7(%rbx),%rax
	leaq sat_sanzj_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_canKG_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	jmp *stg_fork#@gotpcrel(%rip)
_canKL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canK7, .-_canK7


==================== Asm code ====================
2018-03-16 16:05:23.938938332 UTC

.section .data.rel.ro
.align 8
.align 1
block_canK7_info:
	.quad	_canK7
	.quad	900
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.939810276 UTC

.section .text
.align 8
_canKG:
_canKG:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canKG, .-_canKG


==================== Asm code ====================
2018-03-16 16:05:23.940626953 UTC

.section .data.rel.ro
.align 8
.align 1
block_canKG_info:
	.quad	_canKG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.941700988 UTC

.section .text
.align 8
io_sanzn_entry:
_canL7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _canLg
_canLh:
	leaq block_canL4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canL4
_canL5:
	movq (%rbx),%rax
	jmp *(%rax)
_canLg:
	jmp *-8(%r13)
	.size io_sanzn_entry, .-io_sanzn_entry


==================== Asm code ====================
2018-03-16 16:05:23.942559913 UTC

.section .data.rel.ro
.align 8
.align 1
io_sanzn_info:
	.quad	io_sanzn_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.943522227 UTC

.section .text
.align 8
_canL4:
_canL4:
	leaq block_canLa_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canLa
_canLb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canL4, .-_canL4


==================== Asm code ====================
2018-03-16 16:05:23.944255561 UTC

.section .data.rel.ro
.align 8
.align 1
block_canL4_info:
	.quad	_canL4
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.94494858 UTC

.section .text
.align 8
_canLa:
_canLa:
	leaq block_canLf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _canLf
_canLk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canLa, .-_canLa


==================== Asm code ====================
2018-03-16 16:05:23.945801155 UTC

.section .data.rel.ro
.align 8
.align 1
block_canLa_info:
	.quad	_canLa
	.quad	3
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.946677827 UTC

.section .text
.align 8
_canLf:
_canLf:
	movq 8(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp $wio_sanz0_entry
	.size _canLf, .-_canLf


==================== Asm code ====================
2018-03-16 16:05:23.947454865 UTC

.section .data.rel.ro
.align 8
.align 1
block_canLf_info:
	.quad	_canLf
	.quad	131
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.948335676 UTC

.section .text
.align 8
sat_sanzK_entry:
_canLI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canLJ
_canLK:
	leaq block_canLG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canLJ:
	jmp *-8(%r13)
	.size sat_sanzK_entry, .-sat_sanzK_entry


==================== Asm code ====================
2018-03-16 16:05:23.949228948 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzK_info:
	.quad	sat_sanzK_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.950227361 UTC

.section .text
.align 8
_canLG:
_canLG:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canLG, .-_canLG


==================== Asm code ====================
2018-03-16 16:05:23.950985046 UTC

.section .data.rel.ro
.align 8
.align 1
block_canLG_info:
	.quad	_canLG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.952730896 UTC

.section .text
.align 8
sat_sanzF_entry:
_canLR:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanzn_entry
	.size sat_sanzF_entry, .-sat_sanzF_entry


==================== Asm code ====================
2018-03-16 16:05:23.953539629 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzF_info:
	.quad	sat_sanzF_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.954325289 UTC

.section .text
.align 8
sat_sanzG_entry:
_canLZ:
	movq 7(%rbx),%rbx
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size sat_sanzG_entry, .-sat_sanzG_entry


==================== Asm code ====================
2018-03-16 16:05:23.955083992 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzG_info:
	.quad	sat_sanzG_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.956026026 UTC

.section .text
.align 8
sat_sanA0_entry:
_canMm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canMn
_canMo:
	leaq block_canMk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canMn:
	jmp *-8(%r13)
	.size sat_sanA0_entry, .-sat_sanA0_entry


==================== Asm code ====================
2018-03-16 16:05:23.956891748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanA0_info:
	.quad	sat_sanA0_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.957774769 UTC

.section .text
.align 8
_canMk:
_canMk:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canMk, .-_canMk


==================== Asm code ====================
2018-03-16 16:05:23.958564951 UTC

.section .data.rel.ro
.align 8
.align 1
block_canMk_info:
	.quad	_canMk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.959334764 UTC

.section .text
.align 8
sat_sanzV_entry:
_canMv:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanzn_entry
	.size sat_sanzV_entry, .-sat_sanzV_entry


==================== Asm code ====================
2018-03-16 16:05:23.960098069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzV_info:
	.quad	sat_sanzV_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.960944425 UTC

.section .text
.align 8
sat_sanzW_entry:
_canMD:
	movq 7(%rbx),%rbx
	jmp *stg_unmaskAsyncExceptions#@gotpcrel(%rip)
	.size sat_sanzW_entry, .-sat_sanzW_entry


==================== Asm code ====================
2018-03-16 16:05:23.961774676 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanzW_info:
	.quad	sat_sanzW_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.962764952 UTC

.section .text
.align 8
sat_sanA5_entry:
_canMG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canMK
_canML:
	leaq block_canM8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canM8
_canM9:
	movq (%rbx),%rax
	jmp *(%rax)
_canMK:
	jmp *-8(%r13)
	.size sat_sanA5_entry, .-sat_sanA5_entry


==================== Asm code ====================
2018-03-16 16:05:23.963641302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanA5_info:
	.quad	sat_sanA5_entry
	.quad	1
	.quad	21474836489
	.quad	4294967299
	.quad	SanDe_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.9644373 UTC

.section .text
.align 8
_canM8:
_canM8:
	leaq block_canMd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canM8, .-_canM8


==================== Asm code ====================
2018-03-16 16:05:23.965295972 UTC

.section .data.rel.ro
.align 8
.align 1
block_canM8_info:
	.quad	_canM8
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.966088162 UTC

.section .text
.align 8
_canMd:
_canMd:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canMP
_canMO:
	leaq sat_sanA0_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanzV_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanzW_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canMH_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canMP:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canMd, .-_canMd


==================== Asm code ====================
2018-03-16 16:05:23.966819753 UTC

.section .data.rel.ro
.align 8
.align 1
block_canMd_info:
	.quad	_canMd
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.967491865 UTC

.section .text
.align 8
_canMH:
_canMH:
	movq 8(%rbp),%rax
	leaq block_canMJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canMH, .-_canMH


==================== Asm code ====================
2018-03-16 16:05:23.968075159 UTC

.section .data.rel.ro
.align 8
.align 1
block_canMH_info:
	.quad	_canMH
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.968674701 UTC

.section .text
.align 8
_canMJ:
_canMJ:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canMJ, .-_canMJ


==================== Asm code ====================
2018-03-16 16:05:23.96920863 UTC

.section .data.rel.ro
.align 8
.align 1
block_canMJ_info:
	.quad	_canMJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.970032195 UTC

.section .text
.align 8
sat_sanAg_entry:
_canN9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canNa
_canNb:
	leaq block_canN7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_canNa:
	jmp *-8(%r13)
	.size sat_sanAg_entry, .-sat_sanAg_entry


==================== Asm code ====================
2018-03-16 16:05:23.970669003 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanAg_info:
	.quad	sat_sanAg_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:23.971284451 UTC

.section .text
.align 8
_canN7:
_canN7:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _canN7, .-_canN7


==================== Asm code ====================
2018-03-16 16:05:23.971834182 UTC

.section .data.rel.ro
.align 8
.align 1
block_canN7_info:
	.quad	_canN7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.972449883 UTC

.section .text
.align 8
sat_sanAb_entry:
_canNi:
	movq 15(%rbx),%r14
	movq 7(%rbx),%rbx
	jmp io_sanzn_entry
	.size sat_sanAb_entry, .-sat_sanAb_entry


==================== Asm code ====================
2018-03-16 16:05:23.973009029 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanAb_info:
	.quad	sat_sanAb_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.973671639 UTC

.section .text
.align 8
sat_sanAc_entry:
_canNq:
	movq 7(%rbx),%rbx
	jmp *stg_maskUninterruptible#@gotpcrel(%rip)
	.size sat_sanAc_entry, .-sat_sanAc_entry


==================== Asm code ====================
2018-03-16 16:05:23.97423984 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sanAc_info:
	.quad	sat_sanAc_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:23.974904604 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlers1_entry
.type GHC.Conc.Signal.runHandlers1_entry, @object
GHC.Conc.Signal.runHandlers1_entry:
_canNx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _canNy
_canNz:
	leaq block_canJH_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_canNy:
	leaq GHC.Conc.Signal.runHandlers1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.runHandlers1_entry, .-GHC.Conc.Signal.runHandlers1_entry


==================== Asm code ====================
2018-03-16 16:05:23.975558826 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers1_info
.type GHC.Conc.Signal.runHandlers1_info, @object
GHC.Conc.Signal.runHandlers1_info:
	.quad	GHC.Conc.Signal.runHandlers1_entry
	.quad	0
	.quad	55834574862
	.quad	12884901903
	.quad	SanDe_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.976527591 UTC

.section .text
.align 8
_canJH:
_canJH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _canNC
_canNB:
	leaq $wio_sanz0_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	leaq io_sanzn_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -44(%r12),%rax
	movq %rax,-16(%r12)
	leaq -22(%r12),%rax
	testq %rbx,%rbx
	je _canNv
_uanNX:
	cmpq $1,%rbx
	je _canNw
_canNu:
	addq $-16,%r12
	leaq block_canLu_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canLu
_canLv:
	movq (%rbx),%rax
	jmp *(%rax)
_canNC:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_canNv:
	leaq sat_sanA5_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_canNw:
	addq $-16,%r12
	leaq block_canMV_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Conc.Signal.signal_handlers_closure(%rip),%rbx
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _canMV
_canMW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _canJH, .-_canJH


==================== Asm code ====================
2018-03-16 16:05:23.977430822 UTC

.section .data.rel.ro
.align 8
.align 1
block_canJH_info:
	.quad	_canJH
	.quad	2
	.quad	21474836510
	.quad	SanDe_srt+16


==================== Asm code ====================
2018-03-16 16:05:23.978067247 UTC

.section .text
.align 8
_canMV:
_canMV:
	leaq block_canN0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canMV, .-_canMV


==================== Asm code ====================
2018-03-16 16:05:23.978669185 UTC

.section .data.rel.ro
.align 8
.align 1
block_canMV_info:
	.quad	_canMV
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.979443445 UTC

.section .text
.align 8
_canN0:
_canN0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canNT
_canNS:
	leaq sat_sanAg_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanAb_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanAc_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canNN_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canNT:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canN0, .-_canN0


==================== Asm code ====================
2018-03-16 16:05:23.980139762 UTC

.section .data.rel.ro
.align 8
.align 1
block_canN0_info:
	.quad	_canN0
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.980761688 UTC

.section .text
.align 8
_canNN:
_canNN:
	movq 8(%rbp),%rax
	leaq block_canNP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canNN, .-_canNN


==================== Asm code ====================
2018-03-16 16:05:23.98135256 UTC

.section .data.rel.ro
.align 8
.align 1
block_canNN_info:
	.quad	_canNN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.981926547 UTC

.section .text
.align 8
_canNP:
_canNP:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canNP, .-_canNP


==================== Asm code ====================
2018-03-16 16:05:23.982496196 UTC

.section .data.rel.ro
.align 8
.align 1
block_canNP_info:
	.quad	_canNP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.983121873 UTC

.section .text
.align 8
_canLu:
_canLu:
	leaq block_canLz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _canLu, .-_canLu


==================== Asm code ====================
2018-03-16 16:05:23.98426687 UTC

.section .data.rel.ro
.align 8
.align 1
block_canLu_info:
	.quad	_canLu
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.985004148 UTC

.section .text
.align 8
_canLz:
_canLz:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _canNJ
_canNI:
	leaq sat_sanzK_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_sanzF_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sanzG_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq block_canND_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -54(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,16(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_canNJ:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canLz, .-_canLz


==================== Asm code ====================
2018-03-16 16:05:23.985733186 UTC

.section .data.rel.ro
.align 8
.align 1
block_canLz_info:
	.quad	_canLz
	.quad	2
	.quad	4294967326
	.quad	SanDe_srt+32


==================== Asm code ====================
2018-03-16 16:05:23.986415423 UTC

.section .text
.align 8
_canND:
_canND:
	movq 8(%rbp),%rax
	leaq block_canNF_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _canND, .-_canND


==================== Asm code ====================
2018-03-16 16:05:23.987007469 UTC

.section .data.rel.ro
.align 8
.align 1
block_canND_info:
	.quad	_canND
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.987613186 UTC

.section .text
.align 8
_canNF:
_canNF:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _canNF, .-_canNF


==================== Asm code ====================
2018-03-16 16:05:23.988195446 UTC

.section .data.rel.ro
.align 8
.align 1
block_canNF_info:
	.quad	_canNF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:23.990707007 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers_closure
.type GHC.Conc.Signal.runHandlers_closure, @object
GHC.Conc.Signal.runHandlers_closure:
	.quad	GHC.Conc.Signal.runHandlers_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.991310722 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlers_entry
.type GHC.Conc.Signal.runHandlers_entry, @object
GHC.Conc.Signal.runHandlers_entry:
_canRc:
	jmp GHC.Conc.Signal.runHandlers1_entry
	.size GHC.Conc.Signal.runHandlers_entry, .-GHC.Conc.Signal.runHandlers_entry


==================== Asm code ====================
2018-03-16 16:05:23.991879059 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlers_info
.type GHC.Conc.Signal.runHandlers_info, @object
GHC.Conc.Signal.runHandlers_info:
	.quad	GHC.Conc.Signal.runHandlers_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SanDe_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.995383258 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.$wrunHandlersPtr_closure
.type GHC.Conc.Signal.$wrunHandlersPtr_closure, @object
GHC.Conc.Signal.$wrunHandlersPtr_closure:
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:23.996102711 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.$wrunHandlersPtr_entry
.type GHC.Conc.Signal.$wrunHandlersPtr_entry, @object
GHC.Conc.Signal.$wrunHandlersPtr_entry:
_canRt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _canRu
_canRv:
	leaq block_canRn_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_canRu:
	leaq GHC.Conc.Signal.$wrunHandlersPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.$wrunHandlersPtr_entry, .-GHC.Conc.Signal.$wrunHandlersPtr_entry


==================== Asm code ====================
2018-03-16 16:05:23.996778573 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.$wrunHandlersPtr_info
.type GHC.Conc.Signal.$wrunHandlersPtr_info, @object
GHC.Conc.Signal.$wrunHandlersPtr_info:
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_entry
	.quad	0
	.quad	30064771086
	.quad	12884901901
	.quad	SanDe_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.997917678 UTC

.section .text
.align 8
_canRn:
_canRn:
	leaq block_canRp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r9
	xorl %r8d,%r8d
	xorl %edi,%edi
	movq free@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.ForeignPtr.$winsertCFinalizer_entry@gotpcrel(%rip)
	.size _canRn, .-_canRn


==================== Asm code ====================
2018-03-16 16:05:23.998540865 UTC

.section .data.rel.ro
.align 8
.align 1
block_canRn_info:
	.quad	_canRn
	.quad	66
	.quad	12884901918
	.quad	SanDe_srt+40


==================== Asm code ====================
2018-03-16 16:05:23.999259196 UTC

.section .text
.align 8
_canRp:
_canRp:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _canRz
_canRy:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%rsi
	leaq -15(%r12),%r14
	addq $32,%rbp
	jmp GHC.Conc.Signal.runHandlers1_entry
_canRz:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _canRp, .-_canRp


==================== Asm code ====================
2018-03-16 16:05:23.999923585 UTC

.section .data.rel.ro
.align 8
.align 1
block_canRp_info:
	.quad	_canRp
	.quad	131
	.quad	4294967326
	.quad	SanDe_srt+40


==================== Asm code ====================
2018-03-16 16:05:24.002590809 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr1_closure
.type GHC.Conc.Signal.runHandlersPtr1_closure, @object
GHC.Conc.Signal.runHandlersPtr1_closure:
	.quad	GHC.Conc.Signal.runHandlersPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:24.003323571 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlersPtr1_entry
.type GHC.Conc.Signal.runHandlersPtr1_entry, @object
GHC.Conc.Signal.runHandlersPtr1_entry:
_canS2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _canS3
_canS4:
	leaq block_canRZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _canRZ
_canS0:
	movq (%rbx),%rax
	jmp *(%rax)
_canS3:
	leaq GHC.Conc.Signal.runHandlersPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Conc.Signal.runHandlersPtr1_entry, .-GHC.Conc.Signal.runHandlersPtr1_entry


==================== Asm code ====================
2018-03-16 16:05:24.003978717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr1_info
.type GHC.Conc.Signal.runHandlersPtr1_info, @object
GHC.Conc.Signal.runHandlersPtr1_info:
	.quad	GHC.Conc.Signal.runHandlersPtr1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SanDe_srt+56


==================== Asm code ====================
2018-03-16 16:05:24.004573961 UTC

.section .text
.align 8
_canRZ:
_canRZ:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Conc.Signal.$wrunHandlersPtr_entry
	.size _canRZ, .-_canRZ


==================== Asm code ====================
2018-03-16 16:05:24.005158129 UTC

.section .data.rel.ro
.align 8
.align 1
block_canRZ_info:
	.quad	_canRZ
	.quad	1
	.quad	4294967326
	.quad	SanDe_srt+56


==================== Asm code ====================
2018-03-16 16:05:24.007475638 UTC

.section .data
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr_closure
.type GHC.Conc.Signal.runHandlersPtr_closure, @object
GHC.Conc.Signal.runHandlersPtr_closure:
	.quad	GHC.Conc.Signal.runHandlersPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:24.00803762 UTC

.section .text
.align 8
.globl GHC.Conc.Signal.runHandlersPtr_entry
.type GHC.Conc.Signal.runHandlersPtr_entry, @object
GHC.Conc.Signal.runHandlersPtr_entry:
_canSn:
	jmp GHC.Conc.Signal.runHandlersPtr1_entry
	.size GHC.Conc.Signal.runHandlersPtr_entry, .-GHC.Conc.Signal.runHandlersPtr_entry


==================== Asm code ====================
2018-03-16 16:05:24.008573957 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Conc.Signal.runHandlersPtr_info
.type GHC.Conc.Signal.runHandlersPtr_info, @object
GHC.Conc.Signal.runHandlersPtr_info:
	.quad	GHC.Conc.Signal.runHandlersPtr_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SanDe_srt+64


==================== Asm code ====================
2018-03-16 16:05:24.010446787 UTC

.section .data.rel.ro
.align 8
.align 1
SanDe_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Conc.Signal.setHandler2_closure
	.quad	GHC.Conc.Signal.signal_handlers_closure
	.quad	GHC.Conc.Signal.setHandler1_closure
	.quad	GHC.Conc.Sync.forkIO2_closure
	.quad	GHC.Conc.Signal.runHandlers1_closure
	.quad	GHC.ForeignPtr.$winsertCFinalizer_closure
	.quad	GHC.Conc.Signal.$wrunHandlersPtr_closure
	.quad	GHC.Conc.Signal.runHandlersPtr1_closure

