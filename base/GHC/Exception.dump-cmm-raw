
==================== Raw Cmm ====================
2018-03-16 16:02:42.581945988 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:42.583768671 UTC

[section ""data" . GHC.Exception.$p1Exception_closure" {
     GHC.Exception.$p1Exception_closure:
         const GHC.Exception.$p1Exception_info;
 },
 GHC.Exception.$p1Exception_entry() //  [R2]
         { []
         }
     {offset
       c7uMr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uMs; else goto c7uMt;
       c7uMs: // global
           R2 = R2;
           R1 = GHC.Exception.$p1Exception_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uMt: // global
           I64[Sp - 8] = block_c7uMo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uMx; else goto c7uMp;
       u7uMx: // global
           call _c7uMo(R1) args: 0, res: 0, upd: 0;
       c7uMp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$p1Exception_info" {
     GHC.Exception.$p1Exception_info:
         const GHC.Exception.$p1Exception_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uMo() //  [R1]
         { []
         }
     {offset
       c7uMo: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uMo_info" {
     block_c7uMo_info:
         const _c7uMo;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.589581534 UTC

[section ""data" . GHC.Exception.$p2Exception_closure" {
     GHC.Exception.$p2Exception_closure:
         const GHC.Exception.$p2Exception_info;
 },
 GHC.Exception.$p2Exception_entry() //  [R2]
         { []
         }
     {offset
       c7uMQ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uMR; else goto c7uMS;
       c7uMR: // global
           R2 = R2;
           R1 = GHC.Exception.$p2Exception_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uMS: // global
           I64[Sp - 8] = block_c7uMN_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uMW; else goto c7uMO;
       u7uMW: // global
           call _c7uMN(R1) args: 0, res: 0, upd: 0;
       c7uMO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$p2Exception_info" {
     GHC.Exception.$p2Exception_info:
         const GHC.Exception.$p2Exception_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uMN() //  [R1]
         { []
         }
     {offset
       c7uMN: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uMN_info" {
     block_c7uMN_info:
         const _c7uMN;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.594941543 UTC

[section ""data" . GHC.Exception.toException_closure" {
     GHC.Exception.toException_closure:
         const GHC.Exception.toException_info;
 },
 GHC.Exception.toException_entry() //  [R2]
         { []
         }
     {offset
       c7uNf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uNg; else goto c7uNh;
       c7uNg: // global
           R2 = R2;
           R1 = GHC.Exception.toException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uNh: // global
           I64[Sp - 8] = block_c7uNc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uNl; else goto c7uNd;
       u7uNl: // global
           call _c7uNc(R1) args: 0, res: 0, upd: 0;
       c7uNd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.toException_info" {
     GHC.Exception.toException_info:
         const GHC.Exception.toException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uNc() //  [R1]
         { []
         }
     {offset
       c7uNc: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uNc_info" {
     block_c7uNc_info:
         const _c7uNc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.60134303 UTC

[section ""data" . GHC.Exception.fromException_closure" {
     GHC.Exception.fromException_closure:
         const GHC.Exception.fromException_info;
 },
 GHC.Exception.fromException_entry() //  [R2]
         { []
         }
     {offset
       c7uNC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uND; else goto c7uNE;
       c7uND: // global
           R2 = R2;
           R1 = GHC.Exception.fromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uNE: // global
           I64[Sp - 8] = block_c7uNz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uNI; else goto c7uNA;
       u7uNI: // global
           call _c7uNz(R1) args: 0, res: 0, upd: 0;
       c7uNA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.fromException_info" {
     GHC.Exception.fromException_info:
         const GHC.Exception.fromException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uNz() //  [R1]
         { []
         }
     {offset
       c7uNz: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uNz_info" {
     block_c7uNz_info:
         const _c7uNz;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.606618229 UTC

[section ""data" . GHC.Exception.displayException_closure" {
     GHC.Exception.displayException_closure:
         const GHC.Exception.displayException_info;
 },
 GHC.Exception.displayException_entry() //  [R2]
         { []
         }
     {offset
       c7uNZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uO0; else goto c7uO1;
       c7uO0: // global
           R2 = R2;
           R1 = GHC.Exception.displayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uO1: // global
           I64[Sp - 8] = block_c7uNW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uO5; else goto c7uNX;
       u7uO5: // global
           call _c7uNW(R1) args: 0, res: 0, upd: 0;
       c7uNX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.displayException_info" {
     GHC.Exception.displayException_info:
         const GHC.Exception.displayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uNW() //  [R1]
         { []
         }
     {offset
       c7uNW: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uNW_info" {
     block_c7uNW_info:
         const _c7uNW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.612203912 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshowsPrec_closure" {
     GHC.Exception.$fShowSomeException_$cshowsPrec_closure:
         const GHC.Exception.$fShowSomeException_$cshowsPrec_info;
 },
 GHC.Exception.$fShowSomeException_$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uOm: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7uOq; else goto c7uOr;
       c7uOq: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uOr: // global
           I64[Sp - 16] = block_c7uOj_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7uOx; else goto c7uOk;
       u7uOx: // global
           call _c7uOj(R1) args: 0, res: 0, upd: 0;
       c7uOk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshowsPrec_info" {
     GHC.Exception.$fShowSomeException_$cshowsPrec_info:
         const GHC.Exception.$fShowSomeException_$cshowsPrec_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7uOj() //  [R1]
         { []
         }
     {offset
       c7uOj: // global
           I64[Sp - 8] = block_c7uOp_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uOj_info" {
     block_c7uOj_info:
         const _c7uOj;
         const 1;
         const 30;
 },
 _c7uOp() //  [R1]
         { []
         }
     {offset
       c7uOp: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _s7t9x::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s7t9x::P64;
           call GHC.Show.showsPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uOp_info" {
     block_c7uOp_info:
         const _c7uOp;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.618416888 UTC

[section ""data" . GHC.Exception.$fExceptionArithException1_closure" {
     GHC.Exception.$fExceptionArithException1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.621108088 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshow_closure" {
     GHC.Exception.$fShowSomeException_$cshow_closure:
         const GHC.Exception.$fShowSomeException_$cshow_info;
 },
 GHC.Exception.$fShowSomeException_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7uOU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7uOY; else goto c7uOZ;
       c7uOY: // global
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uOZ: // global
           I64[Sp - 8] = block_c7uOR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uP5; else goto c7uOS;
       u7uP5: // global
           call _c7uOR(R1) args: 0, res: 0, upd: 0;
       c7uOS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshow_info" {
     GHC.Exception.$fShowSomeException_$cshow_info:
         const GHC.Exception.$fShowSomeException_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uOR() //  [R1]
         { []
         }
     {offset
       c7uOR: // global
           I64[Sp - 8] = block_c7uOX_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uOR_info" {
     block_c7uOR_info:
         const _c7uOR;
         const 0;
         const 30;
 },
 _c7uOX() //  [R1]
         { []
         }
     {offset
       c7uOX: // global
           R2 = R1;
           I64[Sp - 16] = stg_ap_ppp_info;
           P64[Sp - 8] = GHC.Exception.$fExceptionArithException1_closure+1;
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uOX_info" {
     block_c7uOX_info:
         const _c7uOX;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.628244182 UTC

[section ""data" . GHC.Exception.$fShowSomeException1_closure" {
     GHC.Exception.$fShowSomeException1_closure:
         const GHC.Exception.$fShowSomeException1_info;
 },
 GHC.Exception.$fShowSomeException1_entry() //  [R2]
         { []
         }
     {offset
       c7uPr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7uPv; else goto c7uPw;
       c7uPv: // global
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uPw: // global
           I64[Sp - 8] = block_c7uPo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uPC; else goto c7uPp;
       u7uPC: // global
           call _c7uPo(R1) args: 0, res: 0, upd: 0;
       c7uPp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException1_info" {
     GHC.Exception.$fShowSomeException1_info:
         const GHC.Exception.$fShowSomeException1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uPo() //  [R1]
         { []
         }
     {offset
       c7uPo: // global
           I64[Sp - 8] = block_c7uPu_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uPo_info" {
     block_c7uPo_info:
         const _c7uPo;
         const 0;
         const 30;
 },
 _c7uPu() //  [R1]
         { []
         }
     {offset
       c7uPu: // global
           R2 = R1;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = GHC.Exception.$fExceptionArithException1_closure+1;
           Sp = Sp - 8;
           call GHC.Show.showsPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uPu_info" {
     block_c7uPu_info:
         const _c7uPu;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.635475724 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshowList_closure" {
     GHC.Exception.$fShowSomeException_$cshowList_closure:
         const GHC.Exception.$fShowSomeException_$cshowList_info;
 },
 GHC.Exception.$fShowSomeException_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uPU: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$fShowSomeException1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshowList_info" {
     GHC.Exception.$fShowSomeException_$cshowList_info:
         const GHC.Exception.$fShowSomeException_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.643225361 UTC

[section ""data" . GHC.Exception.$fShowSomeException_closure" {
     GHC.Exception.$fShowSomeException_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fShowSomeException_$cshowsPrec_closure+2;
         const GHC.Exception.$fShowSomeException_$cshow_closure+1;
         const GHC.Exception.$fShowSomeException_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.646395621 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_$cdisplayException_closure" {
     GHC.Exception.$fExceptionSomeException_$cdisplayException_closure:
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_info;
 },
 GHC.Exception.$fExceptionSomeException_$cdisplayException_entry() //  [R2]
         { []
         }
     {offset
       c7uQ9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uQa; else goto c7uQb;
       c7uQa: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionSomeException_$cdisplayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uQb: // global
           I64[Sp - 8] = block_c7uQ6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uQf; else goto c7uQ7;
       u7uQf: // global
           call _c7uQ6(R1) args: 0, res: 0, upd: 0;
       c7uQ7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException_$cdisplayException_info" {
     GHC.Exception.$fExceptionSomeException_$cdisplayException_info:
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uQ6() //  [R1]
         { []
         }
     {offset
       c7uQ6: // global
           R2 = P64[R1 + 7];
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.displayException_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uQ6_info" {
     block_c7uQ6_info:
         const _c7uQ6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.652733219 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_$ctoException_closure" {
     GHC.Exception.$fExceptionSomeException_$ctoException_closure:
         const GHC.Exception.$fExceptionSomeException_$ctoException_info;
 },
 GHC.Exception.$fExceptionSomeException_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7uQu: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException_$ctoException_info" {
     GHC.Exception.$fExceptionSomeException_$ctoException_info:
         const GHC.Exception.$fExceptionSomeException_$ctoException_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.656847513 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall1_closure" {
     GHC.Exception.$fExceptionErrorCall1_closure:
         const GHC.Types.C#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.661189836 UTC

[section ""data" . GHC.Exception.$w$cshowsPrec1_closure" {
     GHC.Exception.$w$cshowsPrec1_closure:
         const GHC.Exception.$w$cshowsPrec1_info;
 },
 sat_s7t9W_entry() //  [R1]
         { []
         }
     {offset
       c7uQS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uQT; else goto c7uQU;
       c7uQT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uQU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7t9W_info" {
     sat_s7t9W_info:
         const sat_s7t9W_entry;
         const 2;
         const 18;
 },
 GHC.Exception.$w$cshowsPrec1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7uQZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7uR0; else goto c7uR1;
       c7uR0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$cshowsPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uR1: // global
           I64[Sp - 24] = block_c7uQI_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7uR8; else goto c7uQJ;
       u7uR8: // global
           call _c7uQI(R1) args: 0, res: 0, upd: 0;
       c7uQJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$cshowsPrec1_info" {
     GHC.Exception.$w$cshowsPrec1_info:
         const GHC.Exception.$w$cshowsPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7uQI() //  [R1]
         { []
         }
     {offset
       c7uQI: // global
           _s7t9Q::P64 = P64[Sp + 8];
           _s7t9S::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c7uQW; else goto c7uQX;
       c7uQW: // global
           R3 = _s7t9S::P64;
           R2 = _s7t9Q::P64;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uQX: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7uR7; else goto c7uR6;
       c7uR7: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7uR6: // global
           I64[Hp - 48] = sat_s7t9W_info;
           P64[Hp - 32] = _s7t9S::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionErrorCall1_closure+1;
           P64[Hp] = Hp - 48;
           R3 = Hp - 14;
           R2 = _s7t9Q::P64;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uQI_info" {
     block_c7uQI_info:
         const _c7uQI;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.671557149 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure" {
     GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure:
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info;
 },
 GHC.Exception.$fExceptionErrorCall_$cshowsPrec_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c7uRw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uRx; else goto c7uRy;
       c7uRx: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uRy: // global
           I64[Sp - 16] = block_c7uRt_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7uRC; else goto c7uRu;
       u7uRC: // global
           call _c7uRt(R1) args: 0, res: 0, upd: 0;
       c7uRu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info" {
     GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info:
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7uRt() //  [R1]
         { []
         }
     {offset
       c7uRt: // global
           R4 = P64[Sp + 8];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 16;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uRt_info" {
     block_c7uRt_info:
         const _c7uRt;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.679462426 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cshow_closure" {
     GHC.Exception.$fExceptionErrorCall_$cshow_closure:
         const GHC.Exception.$fExceptionErrorCall_$cshow_info;
 },
 GHC.Exception.$fExceptionErrorCall_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7uRT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7uRU; else goto c7uRV;
       c7uRU: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7uRV: // global
           I64[Sp - 8] = block_c7uRQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7uRZ; else goto c7uRR;
       u7uRZ: // global
           call _c7uRQ(R1) args: 0, res: 0, upd: 0;
       c7uRR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cshow_info" {
     GHC.Exception.$fExceptionErrorCall_$cshow_info:
         const GHC.Exception.$fExceptionErrorCall_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7uRQ() //  [R1]
         { []
         }
     {offset
       c7uRQ: // global
           R4 = GHC.Types.[]_closure+1;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uRQ_info" {
     block_c7uRQ_info:
         const _c7uRQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.686595883 UTC

[section ""data" . GHC.Exception.$fShowErrorCall1_closure" {
     GHC.Exception.$fShowErrorCall1_closure:
         const GHC.Exception.$fShowErrorCall1_info;
 },
 GHC.Exception.$fShowErrorCall1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uSg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uSh; else goto c7uSi;
       c7uSh: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fShowErrorCall1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uSi: // global
           I64[Sp - 16] = block_c7uSd_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7uSm; else goto c7uSe;
       u7uSm: // global
           call _c7uSd(R1) args: 0, res: 0, upd: 0;
       c7uSe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowErrorCall1_info" {
     GHC.Exception.$fShowErrorCall1_info:
         const GHC.Exception.$fShowErrorCall1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7uSd() //  [R1]
         { []
         }
     {offset
       c7uSd: // global
           R4 = P64[Sp + 8];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 16;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uSd_info" {
     block_c7uSd_info:
         const _c7uSd;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.692252516 UTC

[section ""data" . GHC.Exception.$fShowErrorCall_$cshowList_closure" {
     GHC.Exception.$fShowErrorCall_$cshowList_closure:
         const GHC.Exception.$fShowErrorCall_$cshowList_info;
 },
 GHC.Exception.$fShowErrorCall_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uSA: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$fShowErrorCall1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowErrorCall_$cshowList_info" {
     GHC.Exception.$fShowErrorCall_$cshowList_info:
         const GHC.Exception.$fShowErrorCall_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.695370626 UTC

[section ""data" . GHC.Exception.$fShowErrorCall_closure" {
     GHC.Exception.$fShowErrorCall_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure+3;
         const GHC.Exception.$fExceptionErrorCall_$cshow_closure+1;
         const GHC.Exception.$fShowErrorCall_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.697062104 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException13_bytes" {
     GHC.Exception.$fExceptionArithException13_bytes:
         I8[] [97,114,105,116,104,109,101,116,105,99,32,111,118,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.69933642 UTC

[section ""data" . GHC.Exception.$fExceptionArithException12_closure" {
     GHC.Exception.$fExceptionArithException12_closure:
         const GHC.Exception.$fExceptionArithException12_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException12_entry() //  [R1]
         { []
         }
     {offset
       c7uSP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uSQ; else goto c7uSR;
       c7uSQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uSR: // global
           (_c7uSM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uSM::I64 == 0) goto c7uSO; else goto c7uSN;
       c7uSO: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uSN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uSM::I64;
           R2 = GHC.Exception.$fExceptionArithException13_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException12_info" {
     GHC.Exception.$fExceptionArithException12_info:
         const GHC.Exception.$fExceptionArithException12_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.70315223 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException11_bytes" {
     GHC.Exception.$fExceptionArithException11_bytes:
         I8[] [97,114,105,116,104,109,101,116,105,99,32,117,110,100,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.705397305 UTC

[section ""data" . GHC.Exception.$fExceptionArithException10_closure" {
     GHC.Exception.$fExceptionArithException10_closure:
         const GHC.Exception.$fExceptionArithException10_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException10_entry() //  [R1]
         { []
         }
     {offset
       c7uT6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uT7; else goto c7uT8;
       c7uT7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uT8: // global
           (_c7uT3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uT3::I64 == 0) goto c7uT5; else goto c7uT4;
       c7uT5: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uT4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uT3::I64;
           R2 = GHC.Exception.$fExceptionArithException11_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException10_info" {
     GHC.Exception.$fExceptionArithException10_info:
         const GHC.Exception.$fExceptionArithException10_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.708859458 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException9_bytes" {
     GHC.Exception.$fExceptionArithException9_bytes:
         I8[] [108,111,115,115,32,111,102,32,112,114,101,99,105,115,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.711128238 UTC

[section ""data" . GHC.Exception.$fExceptionArithException8_closure" {
     GHC.Exception.$fExceptionArithException8_closure:
         const GHC.Exception.$fExceptionArithException8_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException8_entry() //  [R1]
         { []
         }
     {offset
       c7uTn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uTo; else goto c7uTp;
       c7uTo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uTp: // global
           (_c7uTk::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uTk::I64 == 0) goto c7uTm; else goto c7uTl;
       c7uTm: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uTl: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uTk::I64;
           R2 = GHC.Exception.$fExceptionArithException9_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException8_info" {
     GHC.Exception.$fExceptionArithException8_info:
         const GHC.Exception.$fExceptionArithException8_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.715508331 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException7_bytes" {
     GHC.Exception.$fExceptionArithException7_bytes:
         I8[] [100,105,118,105,100,101,32,98,121,32,122,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.717762524 UTC

[section ""data" . GHC.Exception.$fExceptionArithException6_closure" {
     GHC.Exception.$fExceptionArithException6_closure:
         const GHC.Exception.$fExceptionArithException6_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException6_entry() //  [R1]
         { []
         }
     {offset
       c7uTE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uTF; else goto c7uTG;
       c7uTF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uTG: // global
           (_c7uTB::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uTB::I64 == 0) goto c7uTD; else goto c7uTC;
       c7uTD: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uTC: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uTB::I64;
           R2 = GHC.Exception.$fExceptionArithException7_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException6_info" {
     GHC.Exception.$fExceptionArithException6_info:
         const GHC.Exception.$fExceptionArithException6_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.72121954 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException5_bytes" {
     GHC.Exception.$fExceptionArithException5_bytes:
         I8[] [100,101,110,111,114,109,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.723514049 UTC

[section ""data" . GHC.Exception.$fExceptionArithException4_closure" {
     GHC.Exception.$fExceptionArithException4_closure:
         const GHC.Exception.$fExceptionArithException4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException4_entry() //  [R1]
         { []
         }
     {offset
       c7uTV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uTW; else goto c7uTX;
       c7uTW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uTX: // global
           (_c7uTS::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uTS::I64 == 0) goto c7uTU; else goto c7uTT;
       c7uTU: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uTT: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uTS::I64;
           R2 = GHC.Exception.$fExceptionArithException5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException4_info" {
     GHC.Exception.$fExceptionArithException4_info:
         const GHC.Exception.$fExceptionArithException4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.72737654 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException3_bytes" {
     GHC.Exception.$fExceptionArithException3_bytes:
         I8[] [82,97,116,105,111,32,104,97,115,32,122,101,114,111,32,100,101,110,111,109,105,110,97,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.729573004 UTC

[section ""data" . GHC.Exception.$fExceptionArithException2_closure" {
     GHC.Exception.$fExceptionArithException2_closure:
         const GHC.Exception.$fExceptionArithException2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException2_entry() //  [R1]
         { []
         }
     {offset
       c7uUc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uUd; else goto c7uUe;
       c7uUd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7uUe: // global
           (_c7uU9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7uU9::I64 == 0) goto c7uUb; else goto c7uUa;
       c7uUb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7uUa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7uU9::I64;
           R2 = GHC.Exception.$fExceptionArithException3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException2_info" {
     GHC.Exception.$fExceptionArithException2_info:
         const GHC.Exception.$fExceptionArithException2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.734450944 UTC

[section ""data" . GHC.Exception.$w$cshowsPrec_closure" {
     GHC.Exception.$w$cshowsPrec_closure:
         const GHC.Exception.$w$cshowsPrec_info;
         const 0;
 },
 GHC.Exception.$w$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uUB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uUC; else goto c7uUD;
       c7uUC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uUD: // global
           I64[Sp - 16] = block_c7uUq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7uUW; else goto c7uUr;
       u7uUW: // global
           call _c7uUq(R1) args: 0, res: 0, upd: 0;
       c7uUr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$cshowsPrec_info" {
     GHC.Exception.$w$cshowsPrec_info:
         const GHC.Exception.$w$cshowsPrec_entry;
         const 0;
         const 545460846606;
         const 8589934607;
         const S7tkS_srt;
 },
 _c7uUq() //  [R1]
         { []
         }
     {offset
       c7uUq: // global
           _s7tag::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7uUu;
               case 2 : goto c7uUv;
               case 3 : goto c7uUw;
               case 4 : goto c7uUx;
               case 5 : goto c7uUy;
               case 6 : goto c7uUz;
           }
       c7uUz: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uUy: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uUx: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException6_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uUw: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException8_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uUv: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException10_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7uUu: // global
           R3 = _s7tag::P64;
           R2 = GHC.Exception.$fExceptionArithException12_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uUq_info" {
     block_c7uUq_info:
         const _c7uUq;
         const 1;
         const 270582939678;
         const S7tkS_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.740311395 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cshowsPrec_closure" {
     GHC.Exception.$fExceptionArithException_$cshowsPrec_closure:
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cshowsPrec_entry() //  [R3,
                                                                  R4]
         { []
         }
     {offset
       c7uVd: // global
           _s7taj::P64 = R3;
           R3 = R4;
           R2 = _s7taj::P64;
           call GHC.Exception.$w$cshowsPrec_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cshowsPrec_info" {
     GHC.Exception.$fExceptionArithException_$cshowsPrec_info:
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S7tkS_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.74380117 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cshow_closure" {
     GHC.Exception.$fExceptionArithException_$cshow_closure:
         const GHC.Exception.$fExceptionArithException_$cshow_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7uVo: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R2;
           call GHC.Exception.$w$cshowsPrec_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cshow_info" {
     GHC.Exception.$fExceptionArithException_$cshow_info:
         const GHC.Exception.$fExceptionArithException_$cshow_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7tkS_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.748076738 UTC

[section ""data" . GHC.Exception.$fShowArithException_$cshowList_closure" {
     GHC.Exception.$fShowArithException_$cshowList_closure:
         const GHC.Exception.$fShowArithException_$cshowList_info;
         const 0;
 },
 GHC.Exception.$fShowArithException_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uVz: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$w$cshowsPrec_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowArithException_$cshowList_info" {
     GHC.Exception.$fShowArithException_$cshowList_info:
         const GHC.Exception.$fShowArithException_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S7tkS_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.751172518 UTC

[section ""data" . GHC.Exception.$fShowArithException_closure" {
     GHC.Exception.$fShowArithException_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_closure+3;
         const GHC.Exception.$fExceptionArithException_$cshow_closure+1;
         const GHC.Exception.$fShowArithException_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.756072609 UTC

[section ""data" . GHC.Exception.$fEqArithException_$c==_closure" {
     GHC.Exception.$fEqArithException_$c==_closure:
         const GHC.Exception.$fEqArithException_$c==_info;
 },
 GHC.Exception.$fEqArithException_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uVW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uVX; else goto c7uVY;
       c7uVX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqArithException_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uVY: // global
           I64[Sp - 16] = block_c7uVL_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7uXP; else goto c7uVM;
       u7uXP: // global
           call _c7uVL(R1) args: 0, res: 0, upd: 0;
       c7uVM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqArithException_$c==_info" {
     GHC.Exception.$fEqArithException_$c==_info:
         const GHC.Exception.$fEqArithException_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7uVL() //  [R1]
         { []
         }
     {offset
       c7uVL: // global
           _s7tap::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7uVP;
               case 2 : goto c7uVQ;
               case 3 : goto c7uVR;
               case 4 : goto c7uVS;
               case 5 : goto c7uVT;
               case 6 : goto c7uVU;
           }
       c7uVU: // global
           I64[Sp + 8] = block_c7uXe_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXO; else goto c7uXg;
       u7uXO: // global
           call _c7uXe(R1) args: 0, res: 0, upd: 0;
       c7uXg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uVT: // global
           I64[Sp + 8] = block_c7uWZ_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXN; else goto c7uX1;
       u7uXN: // global
           call _c7uWZ(R1) args: 0, res: 0, upd: 0;
       c7uX1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uVS: // global
           I64[Sp + 8] = block_c7uWK_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXM; else goto c7uWM;
       u7uXM: // global
           call _c7uWK(R1) args: 0, res: 0, upd: 0;
       c7uWM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uVR: // global
           I64[Sp + 8] = block_c7uWv_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXL; else goto c7uWx;
       u7uXL: // global
           call _c7uWv(R1) args: 0, res: 0, upd: 0;
       c7uWx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uVQ: // global
           I64[Sp + 8] = block_c7uWg_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXK; else goto c7uWi;
       u7uXK: // global
           call _c7uWg(R1) args: 0, res: 0, upd: 0;
       c7uWi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uVP: // global
           I64[Sp + 8] = block_c7uW1_info;
           R1 = _s7tap::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7uXJ; else goto c7uW3;
       u7uXJ: // global
           call _c7uW1(R1) args: 0, res: 0, upd: 0;
       c7uW3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uVL_info" {
     block_c7uVL_info:
         const _c7uVL;
         const 1;
         const 30;
 },
 _c7uXe() //  [R1]
         { []
         }
     {offset
       c7uXe: // global
           if (R1 & 7 == 6) goto u7uXx; else goto u7uXy;
       u7uXx: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXy: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uXe_info" {
     block_c7uXe_info:
         const _c7uXe;
         const 0;
         const 30;
 },
 _c7uWZ() //  [R1]
         { []
         }
     {offset
       c7uWZ: // global
           if (R1 & 7 == 5) goto u7uXz; else goto u7uXA;
       u7uXz: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXA: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uWZ_info" {
     block_c7uWZ_info:
         const _c7uWZ;
         const 0;
         const 30;
 },
 _c7uWK() //  [R1]
         { []
         }
     {offset
       c7uWK: // global
           if (R1 & 7 == 4) goto u7uXB; else goto u7uXC;
       u7uXB: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXC: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uWK_info" {
     block_c7uWK_info:
         const _c7uWK;
         const 0;
         const 30;
 },
 _c7uWv() //  [R1]
         { []
         }
     {offset
       c7uWv: // global
           if (R1 & 7 == 3) goto u7uXD; else goto u7uXE;
       u7uXD: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXE: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uWv_info" {
     block_c7uWv_info:
         const _c7uWv;
         const 0;
         const 30;
 },
 _c7uWg() //  [R1]
         { []
         }
     {offset
       c7uWg: // global
           if (R1 & 7 == 2) goto u7uXF; else goto u7uXG;
       u7uXF: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXG: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uWg_info" {
     block_c7uWg_info:
         const _c7uWg;
         const 0;
         const 30;
 },
 _c7uW1() //  [R1]
         { []
         }
     {offset
       c7uW1: // global
           if (R1 & 7 == 1) goto u7uXH; else goto u7uXI;
       u7uXH: // global
           Sp = Sp + 8;
           call _c7uXq() args: 0, res: 0, upd: 0;
       u7uXI: // global
           Sp = Sp + 8;
           call _c7uXm() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uW1_info" {
     block_c7uW1_info:
         const _c7uW1;
         const 0;
         const 30;
 },
 _c7uXq() //  []
         { []
         }
     {offset
       c7uXq: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7uXm() //  []
         { []
         }
     {offset
       c7uXm: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.775677918 UTC

[section ""data" . GHC.Exception.$fEqArithException_$c/=_closure" {
     GHC.Exception.$fEqArithException_$c/=_closure:
         const GHC.Exception.$fEqArithException_$c/=_info;
 },
 GHC.Exception.$fEqArithException_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7uZ9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7uZa; else goto c7uZb;
       c7uZa: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqArithException_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7uZb: // global
           I64[Sp - 16] = block_c7uYY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v12; else goto c7uYZ;
       u7v12: // global
           call _c7uYY(R1) args: 0, res: 0, upd: 0;
       c7uYZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqArithException_$c/=_info" {
     GHC.Exception.$fEqArithException_$c/=_info:
         const GHC.Exception.$fEqArithException_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7uYY() //  [R1]
         { []
         }
     {offset
       c7uYY: // global
           _s7tay::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7uZ2;
               case 2 : goto c7uZ3;
               case 3 : goto c7uZ4;
               case 4 : goto c7uZ5;
               case 5 : goto c7uZ6;
               case 6 : goto c7uZ7;
           }
       c7uZ7: // global
           I64[Sp + 8] = block_c7v0r_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v11; else goto c7v0t;
       u7v11: // global
           call _c7v0r(R1) args: 0, res: 0, upd: 0;
       c7v0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uZ6: // global
           I64[Sp + 8] = block_c7v0c_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v10; else goto c7v0e;
       u7v10: // global
           call _c7v0c(R1) args: 0, res: 0, upd: 0;
       c7v0e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uZ5: // global
           I64[Sp + 8] = block_c7uZX_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v0Z; else goto c7uZZ;
       u7v0Z: // global
           call _c7uZX(R1) args: 0, res: 0, upd: 0;
       c7uZZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uZ4: // global
           I64[Sp + 8] = block_c7uZI_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v0Y; else goto c7uZK;
       u7v0Y: // global
           call _c7uZI(R1) args: 0, res: 0, upd: 0;
       c7uZK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uZ3: // global
           I64[Sp + 8] = block_c7uZt_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v0X; else goto c7uZv;
       u7v0X: // global
           call _c7uZt(R1) args: 0, res: 0, upd: 0;
       c7uZv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7uZ2: // global
           I64[Sp + 8] = block_c7uZe_info;
           R1 = _s7tay::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7v0W; else goto c7uZg;
       u7v0W: // global
           call _c7uZe(R1) args: 0, res: 0, upd: 0;
       c7uZg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7uYY_info" {
     block_c7uYY_info:
         const _c7uYY;
         const 1;
         const 30;
 },
 _c7v0r() //  [R1]
         { []
         }
     {offset
       c7v0r: // global
           if (R1 & 7 == 6) goto u7v0K; else goto u7v0L;
       u7v0K: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0L: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v0r_info" {
     block_c7v0r_info:
         const _c7v0r;
         const 0;
         const 30;
 },
 _c7v0c() //  [R1]
         { []
         }
     {offset
       c7v0c: // global
           if (R1 & 7 == 5) goto u7v0M; else goto u7v0N;
       u7v0M: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0N: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v0c_info" {
     block_c7v0c_info:
         const _c7v0c;
         const 0;
         const 30;
 },
 _c7uZX() //  [R1]
         { []
         }
     {offset
       c7uZX: // global
           if (R1 & 7 == 4) goto u7v0O; else goto u7v0P;
       u7v0O: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0P: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uZX_info" {
     block_c7uZX_info:
         const _c7uZX;
         const 0;
         const 30;
 },
 _c7uZI() //  [R1]
         { []
         }
     {offset
       c7uZI: // global
           if (R1 & 7 == 3) goto u7v0Q; else goto u7v0R;
       u7v0Q: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0R: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uZI_info" {
     block_c7uZI_info:
         const _c7uZI;
         const 0;
         const 30;
 },
 _c7uZt() //  [R1]
         { []
         }
     {offset
       c7uZt: // global
           if (R1 & 7 == 2) goto u7v0S; else goto u7v0T;
       u7v0S: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0T: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uZt_info" {
     block_c7uZt_info:
         const _c7uZt;
         const 0;
         const 30;
 },
 _c7uZe() //  [R1]
         { []
         }
     {offset
       c7uZe: // global
           if (R1 & 7 == 1) goto u7v0U; else goto u7v0V;
       u7v0U: // global
           Sp = Sp + 8;
           call _c7v0D() args: 0, res: 0, upd: 0;
       u7v0V: // global
           Sp = Sp + 8;
           call _c7v0z() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7uZe_info" {
     block_c7uZe_info:
         const _c7uZe;
         const 0;
         const 30;
 },
 _c7v0D() //  []
         { []
         }
     {offset
       c7v0D: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7v0z() //  []
         { []
         }
     {offset
       c7v0z: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.794769929 UTC

[section ""data" . GHC.Exception.$fEqArithException_closure" {
     GHC.Exception.$fEqArithException_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Exception.$fEqArithException_$c==_closure+2;
         const GHC.Exception.$fEqArithException_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.797654531 UTC

[section ""data" . GHC.Exception.$w$c<_closure" {
     GHC.Exception.$w$c<_closure:
         const GHC.Exception.$w$c<_info;
 },
 GHC.Exception.$w$c<_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7v2j: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v2k; else goto c7v2l;
       c7v2k: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c<_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v2l: // global
           I64[Sp - 24] = block_c7v2c_info;
           _s7taH::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7taH::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c<_info" {
     GHC.Exception.$w$c<_info:
         const GHC.Exception.$w$c<_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7v2c() //  [R1]
         { []
         }
     {offset
       c7v2c: // global
           _c7v2i::P64 = R1 & 7;
           if (_c7v2i::P64 < 3) goto u7v2v; else goto c7v2h;
       u7v2v: // global
           if (_c7v2i::P64 < 2) goto c7v2f; else goto c7v2g;
       c7v2f: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7v2g: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Classes.$fOrd[]_$s$c<1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
       c7v2h: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v2c_info" {
     block_c7v2c_info:
         const _c7v2c;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.803824315 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c<_closure" {
     GHC.Exception.$fOrdErrorCall_$c<_closure:
         const GHC.Exception.$fOrdErrorCall_$c<_info;
 },
 GHC.Exception.$fOrdErrorCall_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v2O: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v2S; else goto c7v2T;
       c7v2S: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v2T: // global
           I64[Sp - 16] = block_c7v2L_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v31; else goto c7v2M;
       u7v31: // global
           call _c7v2L(R1) args: 0, res: 0, upd: 0;
       c7v2M: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c<_info" {
     GHC.Exception.$fOrdErrorCall_$c<_info:
         const GHC.Exception.$fOrdErrorCall_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v2L() //  [R1]
         { []
         }
     {offset
       c7v2L: // global
           I64[Sp - 8] = block_c7v2R_info;
           _s7taO::P64 = P64[R1 + 7];
           _s7taP::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7taP::P64;
           P64[Sp + 8] = _s7taO::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7v30; else goto c7v2V;
       u7v30: // global
           call _c7v2R(R1) args: 0, res: 0, upd: 0;
       c7v2V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v2L_info" {
     block_c7v2L_info:
         const _c7v2L;
         const 1;
         const 30;
 },
 _c7v2R() //  [R1]
         { []
         }
     {offset
       c7v2R: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c<_entry(R5,
                                          R4,
                                          R3,
                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v2R_info" {
     block_c7v2R_info:
         const _c7v2R;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.811569628 UTC

[section ""data" . GHC.Exception.$w$ccompare_closure" {
     GHC.Exception.$w$ccompare_closure:
         const GHC.Exception.$w$ccompare_info;
 },
 GHC.Exception.$w$ccompare_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7v3q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v3r; else goto c7v3s;
       c7v3r: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$ccompare_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v3s: // global
           I64[Sp - 24] = block_c7v3j_info;
           _s7taU::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7taU::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$ccompare_info" {
     GHC.Exception.$w$ccompare_info:
         const GHC.Exception.$w$ccompare_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7v3j() //  [R1]
         { []
         }
     {offset
       c7v3j: // global
           _c7v3p::P64 = R1 & 7;
           if (_c7v3p::P64 < 3) goto u7v3C; else goto c7v3o;
       u7v3C: // global
           if (_c7v3p::P64 < 2) goto c7v3m; else goto c7v3n;
       c7v3m: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7v3n: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c7v3o: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v3j_info" {
     block_c7v3j_info:
         const _c7v3j;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.818055717 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$ccompare_closure" {
     GHC.Exception.$fOrdErrorCall_$ccompare_closure:
         const GHC.Exception.$fOrdErrorCall_$ccompare_info;
 },
 GHC.Exception.$fOrdErrorCall_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v3V: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v3Z; else goto c7v40;
       c7v3Z: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v40: // global
           I64[Sp - 16] = block_c7v3S_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v48; else goto c7v3T;
       u7v48: // global
           call _c7v3S(R1) args: 0, res: 0, upd: 0;
       c7v3T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$ccompare_info" {
     GHC.Exception.$fOrdErrorCall_$ccompare_info:
         const GHC.Exception.$fOrdErrorCall_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v3S() //  [R1]
         { []
         }
     {offset
       c7v3S: // global
           I64[Sp - 8] = block_c7v3Y_info;
           _s7tb1::P64 = P64[R1 + 7];
           _s7tb2::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7tb2::P64;
           P64[Sp + 8] = _s7tb1::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7v47; else goto c7v42;
       u7v47: // global
           call _c7v3Y(R1) args: 0, res: 0, upd: 0;
       c7v42: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v3S_info" {
     block_c7v3S_info:
         const _c7v3S;
         const 1;
         const 30;
 },
 _c7v3Y() //  [R1]
         { []
         }
     {offset
       c7v3Y: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$ccompare_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v3Y_info" {
     block_c7v3Y_info:
         const _c7v3Y;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.826698924 UTC

[section ""data" . GHC.Exception.$w$c==_closure" {
     GHC.Exception.$w$c==_closure:
         const GHC.Exception.$w$c==_info;
 },
 GHC.Exception.$w$c==_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7v4w: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v4x; else goto c7v4y;
       c7v4x: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c==_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v4y: // global
           I64[Sp - 24] = block_c7v4q_info;
           _s7tb7::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7tb7::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c==_info" {
     GHC.Exception.$w$c==_info:
         const GHC.Exception.$w$c==_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7v4q() //  [R1]
         { []
         }
     {offset
       c7v4q: // global
           if (R1 & 7 == 1) goto c7v4t; else goto c7v4u;
       c7v4t: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7v4u: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v4q_info" {
     block_c7v4q_info:
         const _c7v4q;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.832759685 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_$c==_closure" {
     GHC.Exception.$fEqErrorCall_$c==_closure:
         const GHC.Exception.$fEqErrorCall_$c==_info;
 },
 GHC.Exception.$fEqErrorCall_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v4X: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v51; else goto c7v52;
       c7v51: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqErrorCall_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v52: // global
           I64[Sp - 16] = block_c7v4U_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v5a; else goto c7v4V;
       u7v5a: // global
           call _c7v4U(R1) args: 0, res: 0, upd: 0;
       c7v4V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqErrorCall_$c==_info" {
     GHC.Exception.$fEqErrorCall_$c==_info:
         const GHC.Exception.$fEqErrorCall_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v4U() //  [R1]
         { []
         }
     {offset
       c7v4U: // global
           I64[Sp - 8] = block_c7v50_info;
           _s7tbe::P64 = P64[R1 + 7];
           _s7tbf::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7tbf::P64;
           P64[Sp + 8] = _s7tbe::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7v59; else goto c7v54;
       u7v59: // global
           call _c7v50(R1) args: 0, res: 0, upd: 0;
       c7v54: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v4U_info" {
     block_c7v4U_info:
         const _c7v4U;
         const 1;
         const 30;
 },
 _c7v50() //  [R1]
         { []
         }
     {offset
       c7v50: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c==_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v50_info" {
     block_c7v50_info:
         const _c7v50;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.840762836 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_$c/=_closure" {
     GHC.Exception.$fEqErrorCall_$c/=_closure:
         const GHC.Exception.$fEqErrorCall_$c/=_info;
 },
 GHC.Exception.$fEqErrorCall_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v5v: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v5z; else goto c7v5A;
       c7v5z: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqErrorCall_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v5A: // global
           I64[Sp - 16] = block_c7v5s_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v68; else goto c7v5t;
       u7v68: // global
           call _c7v5s(R1) args: 0, res: 0, upd: 0;
       c7v5t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqErrorCall_$c/=_info" {
     GHC.Exception.$fEqErrorCall_$c/=_info:
         const GHC.Exception.$fEqErrorCall_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v5s() //  [R1]
         { []
         }
     {offset
       c7v5s: // global
           I64[Sp - 8] = block_c7v5y_info;
           _s7tbm::P64 = P64[R1 + 7];
           _s7tbn::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7tbn::P64;
           P64[Sp + 8] = _s7tbm::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7v67; else goto c7v5C;
       u7v67: // global
           call _c7v5y(R1) args: 0, res: 0, upd: 0;
       c7v5C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v5s_info" {
     block_c7v5s_info:
         const _c7v5s;
         const 1;
         const 30;
 },
 _c7v5y() //  [R1]
         { []
         }
     {offset
       c7v5y: // global
           I64[Sp] = block_c7v5G_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 15];
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v5y_info" {
     block_c7v5y_info:
         const _c7v5y;
         const 2;
         const 30;
 },
 _c7v5G() //  [R1]
         { []
         }
     {offset
       c7v5G: // global
           if (R1 & 7 == 1) goto u7v65; else goto c7v5S;
       u7v65: // global
           Sp = Sp + 24;
           call _c7v5Y() args: 0, res: 0, upd: 0;
       c7v5S: // global
           _s7tbq::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7v5Q_info;
           R3 = _s7tbq::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v5G_info" {
     block_c7v5G_info:
         const _c7v5G;
         const 2;
         const 30;
 },
 _c7v5Q() //  [R1]
         { []
         }
     {offset
       c7v5Q: // global
           if (R1 & 7 == 1) goto u7v66; else goto c7v62;
       u7v66: // global
           Sp = Sp + 8;
           call _c7v5Y() args: 0, res: 0, upd: 0;
       c7v62: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v5Q_info" {
     block_c7v5Q_info:
         const _c7v5Q;
         const 0;
         const 30;
 },
 _c7v5Y() //  []
         { []
         }
     {offset
       c7v5Y: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.850804205 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_closure" {
     GHC.Exception.$fEqErrorCall_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Exception.$fEqErrorCall_$c==_closure+2;
         const GHC.Exception.$fEqErrorCall_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.854109815 UTC

[section ""data" . GHC.Exception.$w$c<=_closure" {
     GHC.Exception.$w$c<=_closure:
         const GHC.Exception.$w$c<=_info;
 },
 GHC.Exception.$w$c<=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7v6P: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v6Q; else goto c7v6R;
       c7v6Q: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c<=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v6R: // global
           I64[Sp - 24] = block_c7v6I_info;
           _s7tbu::P64 = R3;
           R3 = R2;
           R2 = R4;
           P64[Sp - 16] = _s7tbu::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c<=_info" {
     GHC.Exception.$w$c<=_info:
         const GHC.Exception.$w$c<=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7v6I() //  [R1]
         { []
         }
     {offset
       c7v6I: // global
           _c7v6O::P64 = R1 & 7;
           if (_c7v6O::P64 < 3) goto u7v7d; else goto u7v7e;
       u7v7d: // global
           if (_c7v6O::P64 < 2) goto u7v7f; else goto c7v6M;
       u7v7f: // global
           Sp = Sp + 24;
           call _c7v78() args: 0, res: 0, upd: 0;
       c7v6M: // global
           _s7tbw::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7v6X_info;
           R3 = P64[Sp + 8];
           R2 = _s7tbw::P64;
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7v7e: // global
           Sp = Sp + 24;
           call _c7v6N() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v6I_info" {
     block_c7v6I_info:
         const _c7v6I;
         const 2;
         const 30;
 },
 _c7v6X() //  [R1]
         { []
         }
     {offset
       c7v6X: // global
           if (R1 & 7 == 1) goto u7v7g; else goto u7v7h;
       u7v7g: // global
           Sp = Sp + 8;
           call _c7v78() args: 0, res: 0, upd: 0;
       u7v7h: // global
           Sp = Sp + 8;
           call _c7v6N() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v6X_info" {
     block_c7v6X_info:
         const _c7v6X;
         const 0;
         const 30;
 },
 _c7v78() //  []
         { []
         }
     {offset
       c7v78: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7v6N() //  []
         { []
         }
     {offset
       c7v6N: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.86395936 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c<=_closure" {
     GHC.Exception.$fOrdErrorCall_$c<=_closure:
         const GHC.Exception.$fOrdErrorCall_$c<=_info;
 },
 GHC.Exception.$fOrdErrorCall_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v7N: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v7R; else goto c7v7S;
       c7v7R: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v7S: // global
           I64[Sp - 16] = block_c7v7K_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v80; else goto c7v7L;
       u7v80: // global
           call _c7v7K(R1) args: 0, res: 0, upd: 0;
       c7v7L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c<=_info" {
     GHC.Exception.$fOrdErrorCall_$c<=_info:
         const GHC.Exception.$fOrdErrorCall_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v7K() //  [R1]
         { []
         }
     {offset
       c7v7K: // global
           I64[Sp - 8] = block_c7v7Q_info;
           _s7tbC::P64 = P64[R1 + 7];
           _s7tbD::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7tbD::P64;
           P64[Sp + 8] = _s7tbC::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7v7Z; else goto c7v7U;
       u7v7Z: // global
           call _c7v7Q(R1) args: 0, res: 0, upd: 0;
       c7v7U: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v7K_info" {
     block_c7v7K_info:
         const _c7v7K;
         const 1;
         const 30;
 },
 _c7v7Q() //  [R1]
         { []
         }
     {offset
       c7v7Q: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c<=_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v7Q_info" {
     block_c7v7Q_info:
         const _c7v7Q;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.872548113 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$cmax_closure" {
     GHC.Exception.$fOrdErrorCall_$cmax_closure:
         const GHC.Exception.$fOrdErrorCall_$cmax_info;
 },
 GHC.Exception.$fOrdErrorCall_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c7v8l: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7v8p; else goto c7v8q;
       c7v8p: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v8q: // global
           I64[Sp - 16] = block_c7v8i_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v95; else goto c7v8j;
       u7v95: // global
           call _c7v8i(R1) args: 0, res: 0, upd: 0;
       c7v8j: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$cmax_info" {
     GHC.Exception.$fOrdErrorCall_$cmax_info:
         const GHC.Exception.$fOrdErrorCall_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7v8i() //  [R1]
         { []
         }
     {offset
       c7v8i: // global
           I64[Sp - 16] = block_c7v8o_info;
           _s7tbJ::P64 = R1;
           _s7tbK::P64 = P64[R1 + 7];
           _s7tbL::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s7tbL::P64;
           P64[Sp] = _s7tbK::P64;
           P64[Sp + 8] = _s7tbJ::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7v94; else goto c7v8s;
       u7v94: // global
           call _c7v8o(R1) args: 0, res: 0, upd: 0;
       c7v8s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v8i_info" {
     block_c7v8i_info:
         const _c7v8i;
         const 1;
         const 30;
 },
 _c7v8o() //  [R1]
         { []
         }
     {offset
       c7v8o: // global
           I64[Sp - 8] = block_c7v8w_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 16] = R1;
           Sp = Sp - 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7v8o_info" {
     block_c7v8o_info:
         const _c7v8o;
         const 3;
         const 30;
 },
 _c7v8w() //  [R1]
         { []
         }
     {offset
       c7v8w: // global
           _c7v8X::P64 = R1 & 7;
           if (_c7v8X::P64 < 3) goto u7v8Z; else goto u7v90;
       u7v8Z: // global
           if (_c7v8X::P64 < 2) goto u7v91; else goto c7v8I;
       u7v91: // global
           Sp = Sp + 32;
           call _c7v8S() args: 0, res: 0, upd: 0;
       c7v8I: // global
           _s7tbL::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7v8G_info;
           R3 = _s7tbL::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7v90: // global
           Sp = Sp + 24;
           call _c7v8W() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v8w_info" {
     block_c7v8w_info:
         const _c7v8w;
         const 4;
         const 30;
 },
 _c7v8G() //  [R1]
         { []
         }
     {offset
       c7v8G: // global
           if (R1 & 7 == 1) goto u7v92; else goto u7v93;
       u7v92: // global
           Sp = Sp + 16;
           call _c7v8S() args: 0, res: 0, upd: 0;
       u7v93: // global
           Sp = Sp + 8;
           call _c7v8W() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v8G_info" {
     block_c7v8G_info:
         const _c7v8G;
         const 2;
         const 30;
 },
 _c7v8S() //  []
         { []
         }
     {offset
       c7v8S: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7v8W() //  []
         { []
         }
     {offset
       c7v8W: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.886725877 UTC

[section ""data" . GHC.Exception.$w$c>=_closure" {
     GHC.Exception.$w$c>=_closure:
         const GHC.Exception.$w$c>=_info;
 },
 GHC.Exception.$w$c>=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7v9Q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7v9R; else goto c7v9S;
       c7v9R: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c>=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7v9S: // global
           I64[Sp - 24] = block_c7v9J_info;
           _s7tbS::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7tbS::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c>=_info" {
     GHC.Exception.$w$c>=_info:
         const GHC.Exception.$w$c>=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7v9J() //  [R1]
         { []
         }
     {offset
       c7v9J: // global
           _c7v9P::P64 = R1 & 7;
           if (_c7v9P::P64 < 3) goto u7vae; else goto u7vaf;
       u7vae: // global
           if (_c7v9P::P64 < 2) goto u7vag; else goto c7v9N;
       u7vag: // global
           Sp = Sp + 24;
           call _c7va9() args: 0, res: 0, upd: 0;
       c7v9N: // global
           _s7tbU::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7v9Y_info;
           R3 = _s7tbU::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7vaf: // global
           Sp = Sp + 24;
           call _c7v9O() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v9J_info" {
     block_c7v9J_info:
         const _c7v9J;
         const 2;
         const 30;
 },
 _c7v9Y() //  [R1]
         { []
         }
     {offset
       c7v9Y: // global
           if (R1 & 7 == 1) goto u7vah; else goto u7vai;
       u7vah: // global
           Sp = Sp + 8;
           call _c7va9() args: 0, res: 0, upd: 0;
       u7vai: // global
           Sp = Sp + 8;
           call _c7v9O() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7v9Y_info" {
     block_c7v9Y_info:
         const _c7v9Y;
         const 0;
         const 30;
 },
 _c7va9() //  []
         { []
         }
     {offset
       c7va9: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7v9O() //  []
         { []
         }
     {offset
       c7v9O: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.898787561 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c>=_closure" {
     GHC.Exception.$fOrdErrorCall_$c>=_closure:
         const GHC.Exception.$fOrdErrorCall_$c>=_info;
 },
 GHC.Exception.$fOrdErrorCall_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vaO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vaS; else goto c7vaT;
       c7vaS: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vaT: // global
           I64[Sp - 16] = block_c7vaL_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vb1; else goto c7vaM;
       u7vb1: // global
           call _c7vaL(R1) args: 0, res: 0, upd: 0;
       c7vaM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c>=_info" {
     GHC.Exception.$fOrdErrorCall_$c>=_info:
         const GHC.Exception.$fOrdErrorCall_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vaL() //  [R1]
         { []
         }
     {offset
       c7vaL: // global
           I64[Sp - 8] = block_c7vaR_info;
           _s7tc0::P64 = P64[R1 + 7];
           _s7tc1::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7tc1::P64;
           P64[Sp + 8] = _s7tc0::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7vb0; else goto c7vaV;
       u7vb0: // global
           call _c7vaR(R1) args: 0, res: 0, upd: 0;
       c7vaV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vaL_info" {
     block_c7vaL_info:
         const _c7vaL;
         const 1;
         const 30;
 },
 _c7vaR() //  [R1]
         { []
         }
     {offset
       c7vaR: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c>=_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vaR_info" {
     block_c7vaR_info:
         const _c7vaR;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.907757066 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c>_closure" {
     GHC.Exception.$fOrdErrorCall_$c>_closure:
         const GHC.Exception.$fOrdErrorCall_$c>_info;
 },
 GHC.Exception.$fOrdErrorCall_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vbj: // global
           _s7tc6::P64 = R3;
           R3 = R2;
           R2 = _s7tc6::P64;
           call GHC.Exception.$fOrdErrorCall_$c<_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c>_info" {
     GHC.Exception.$fOrdErrorCall_$c>_info:
         const GHC.Exception.$fOrdErrorCall_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.913183541 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$cmin_closure" {
     GHC.Exception.$fOrdErrorCall_$cmin_closure:
         const GHC.Exception.$fOrdErrorCall_$cmin_info;
 },
 GHC.Exception.$fOrdErrorCall_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vbx: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7vbB; else goto c7vbC;
       c7vbB: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vbC: // global
           I64[Sp - 16] = block_c7vbu_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vch; else goto c7vbv;
       u7vch: // global
           call _c7vbu(R1) args: 0, res: 0, upd: 0;
       c7vbv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$cmin_info" {
     GHC.Exception.$fOrdErrorCall_$cmin_info:
         const GHC.Exception.$fOrdErrorCall_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vbu() //  [R1]
         { []
         }
     {offset
       c7vbu: // global
           I64[Sp - 16] = block_c7vbA_info;
           _s7tc9::P64 = R1;
           _s7tca::P64 = P64[R1 + 7];
           _s7tcb::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s7tcb::P64;
           P64[Sp] = _s7tca::P64;
           P64[Sp + 8] = _s7tc9::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vcg; else goto c7vbE;
       u7vcg: // global
           call _c7vbA(R1) args: 0, res: 0, upd: 0;
       c7vbE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vbu_info" {
     block_c7vbu_info:
         const _c7vbu;
         const 1;
         const 30;
 },
 _c7vbA() //  [R1]
         { []
         }
     {offset
       c7vbA: // global
           I64[Sp - 8] = block_c7vbI_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 16] = R1;
           Sp = Sp - 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vbA_info" {
     block_c7vbA_info:
         const _c7vbA;
         const 3;
         const 30;
 },
 _c7vbI() //  [R1]
         { []
         }
     {offset
       c7vbI: // global
           _c7vc9::P64 = R1 & 7;
           if (_c7vc9::P64 < 3) goto u7vcb; else goto u7vcc;
       u7vcb: // global
           if (_c7vc9::P64 < 2) goto u7vcd; else goto c7vbU;
       u7vcd: // global
           Sp = Sp + 24;
           call _c7vc4() args: 0, res: 0, upd: 0;
       c7vbU: // global
           _s7tcb::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7vbS_info;
           R3 = _s7tcb::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7vcc: // global
           Sp = Sp + 32;
           call _c7vc8() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vbI_info" {
     block_c7vbI_info:
         const _c7vbI;
         const 4;
         const 30;
 },
 _c7vbS() //  [R1]
         { []
         }
     {offset
       c7vbS: // global
           if (R1 & 7 == 1) goto u7vce; else goto u7vcf;
       u7vce: // global
           Sp = Sp + 8;
           call _c7vc4() args: 0, res: 0, upd: 0;
       u7vcf: // global
           Sp = Sp + 16;
           call _c7vc8() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vbS_info" {
     block_c7vbS_info:
         const _c7vbS;
         const 2;
         const 30;
 },
 _c7vc4() //  []
         { []
         }
     {offset
       c7vc4: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vc8() //  []
         { []
         }
     {offset
       c7vc8: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.925954752 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_closure" {
     GHC.Exception.$fOrdErrorCall_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.Exception.$fEqErrorCall_closure+1;
         const GHC.Exception.$fOrdErrorCall_$ccompare_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c<_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c<=_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c>_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c>=_closure+2;
         const GHC.Exception.$fOrdErrorCall_$cmax_closure+2;
         const GHC.Exception.$fOrdErrorCall_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.929582798 UTC

[section ""data" . GHC.Exception.$dmdisplayException_closure" {
     GHC.Exception.$dmdisplayException_closure:
         const GHC.Exception.$dmdisplayException_info;
 },
 GHC.Exception.$dmdisplayException_entry() //  [R2]
         { []
         }
     {offset
       c7vcY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7vcZ; else goto c7vd0;
       c7vcZ: // global
           R2 = R2;
           R1 = GHC.Exception.$dmdisplayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vd0: // global
           I64[Sp - 8] = block_c7vcW_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmdisplayException_info" {
     GHC.Exception.$dmdisplayException_info:
         const GHC.Exception.$dmdisplayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7vcW() //  [R1]
         { []
         }
     {offset
       c7vcW: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Show.show_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vcW_info" {
     block_c7vcW_info:
         const _c7vcW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.940140122 UTC

[section ""data" . GHC.Exception.$dmfromException_closure" {
     GHC.Exception.$dmfromException_closure:
         const GHC.Exception.$dmfromException_info;
         const 0;
 },
 GHC.Exception.$dmfromException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vdj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vdr; else goto c7vds;
       c7vdr: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$dmfromException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vds: // global
           I64[Sp - 16] = block_c7vdg_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vdO; else goto c7vdh;
       u7vdO: // global
           call _c7vdg(R1) args: 0, res: 0, upd: 0;
       c7vdh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmfromException_info" {
     GHC.Exception.$dmfromException_info:
         const GHC.Exception.$dmfromException_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S7tkS_srt+56;
 },
 _c7vdg() //  [R1]
         { []
         }
     {offset
       c7vdg: // global
           I64[Sp - 8] = block_c7vdm_info;
           R2 = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 8] = P64[R1 + 7];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vdg_info" {
     block_c7vdg_info:
         const _c7vdg;
         const 1;
         const 4294967326;
         const S7tkS_srt+56;
 },
 _c7vdm() //  [R1]
         { []
         }
     {offset
       c7vdm: // global
           I64[Sp] = block_c7vdq_info;
           R2 = P64[Sp + 16];
           P64[Sp + 16] = R1;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vdm_info" {
     block_c7vdm_info:
         const _c7vdm;
         const 2;
         const 4294967326;
         const S7tkS_srt+56;
 },
 _c7vdq() //  [R1]
         { []
         }
     {offset
       c7vdq: // global
           I64[Sp] = block_c7vdy_info;
           R3 = P64[Sp + 16];
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vdq_info" {
     block_c7vdq_info:
         const _c7vdq;
         const 2;
         const 4294967326;
         const S7tkS_srt+56;
 },
 _c7vdy() //  [R1]
         { []
         }
     {offset
       c7vdy: // global
           if (R1 & 7 == 1) goto c7vdF; else goto c7vdJ;
       c7vdF: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vdJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7vdM; else goto c7vdL;
       c7vdM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vdL: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vdy_info" {
     block_c7vdy_info:
         const _c7vdy;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.957021989 UTC

[section ""data" . GHC.Exception.$dmtoException_closure" {
     GHC.Exception.$dmtoException_closure:
         const GHC.Exception.$dmtoException_info;
 },
 GHC.Exception.$dmtoException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vej: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7ven; else goto c7vem;
       c7ven: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$dmtoException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vem: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmtoException_info" {
     GHC.Exception.$dmtoException_info:
         const GHC.Exception.$dmtoException_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.962037977 UTC

[section ""data" . GHC.Exception.$bErrorCall_closure" {
     GHC.Exception.$bErrorCall_closure:
         const GHC.Exception.$bErrorCall_info;
 },
 GHC.Exception.$bErrorCall_entry() //  [R2]
         { []
         }
     {offset
       c7vey: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7veC; else goto c7veB;
       c7veC: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$bErrorCall_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7veB: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$bErrorCall_info" {
     GHC.Exception.$bErrorCall_info:
         const GHC.Exception.$bErrorCall_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.967024089 UTC

[section ""data" . GHC.Exception.throw_closure" {
     GHC.Exception.throw_closure:
         const GHC.Exception.throw_info;
 },
 sat_s7tcu_entry() //  [R1]
         { []
         }
     {offset
       c7veQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7veR; else goto c7veS;
       c7veR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7veS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Exception.toException_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tcu_info" {
     sat_s7tcu_info:
         const sat_s7tcu_entry;
         const 2;
         const 18;
 },
 GHC.Exception.throw_entry() //  [R2, R3]
         { []
         }
     {offset
       c7veT: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7veX; else goto c7veW;
       c7veX: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.throw_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7veW: // global
           I64[Hp - 24] = sat_s7tcu_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.throw_info" {
     GHC.Exception.throw_info:
         const GHC.Exception.throw_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.973952409 UTC

[section ""data" . GHC.Exception.$mErrorCall_closure" {
     GHC.Exception.$mErrorCall_closure:
         const GHC.Exception.$mErrorCall_info;
 },
 GHC.Exception.$mErrorCall_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7vfe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vff; else goto c7vfg;
       c7vff: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$mErrorCall_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vfg: // global
           I64[Sp - 16] = block_c7vfb_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vfk; else goto c7vfc;
       u7vfk: // global
           call _c7vfb(R1) args: 0, res: 0, upd: 0;
       c7vfc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$mErrorCall_info" {
     GHC.Exception.$mErrorCall_info:
         const GHC.Exception.$mErrorCall_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7vfb() //  [R1]
         { []
         }
     {offset
       c7vfb: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vfb_info" {
     block_c7vfb_info:
         const _c7vfb;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.979779484 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException12_bytes" {
     GHC.Exception.errorCallWithCallStackException12_bytes:
         I8[] [67,97,108,108,83,116,97,99,107,32,40,102,114,111,109,32,45,112,114,111,102,41,58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.982495062 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException11_closure" {
     GHC.Exception.errorCallWithCallStackException11_closure:
         const GHC.Exception.errorCallWithCallStackException11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException11_entry() //  [R1]
         { []
         }
     {offset
       c7vfB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vfC; else goto c7vfD;
       c7vfC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vfD: // global
           (_c7vfy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vfy::I64 == 0) goto c7vfA; else goto c7vfz;
       c7vfA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vfz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vfy::I64;
           R2 = GHC.Exception.errorCallWithCallStackException12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException11_info" {
     GHC.Exception.errorCallWithCallStackException11_info:
         const GHC.Exception.errorCallWithCallStackException11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.986401204 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException5_bytes" {
     GHC.Exception.errorCallWithCallStackException5_bytes:
         I8[] [32,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.988891696 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException10_closure" {
     GHC.Exception.errorCallWithCallStackException10_closure:
         const GHC.Exception.errorCallWithCallStackException10_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException10_entry() //  [R1]
         { []
         }
     {offset
       c7vfS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vfT; else goto c7vfU;
       c7vfT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vfU: // global
           (_c7vfP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vfP::I64 == 0) goto c7vfR; else goto c7vfQ;
       c7vfR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vfQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vfP::I64;
           R2 = GHC.Exception.errorCallWithCallStackException5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException10_info" {
     GHC.Exception.errorCallWithCallStackException10_info:
         const GHC.Exception.errorCallWithCallStackException10_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.994295734 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException9_closure" {
     GHC.Exception.errorCallWithCallStackException9_closure:
         const GHC.Exception.errorCallWithCallStackException9_info;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException9_entry() //  [R2]
         { []
         }
     {offset
       c7vg6: // global
           R3 = R2;
           R2 = GHC.Exception.errorCallWithCallStackException10_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException9_info" {
     GHC.Exception.errorCallWithCallStackException9_info:
         const GHC.Exception.errorCallWithCallStackException9_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7tkS_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:42.999179599 UTC

[section ""data" . GHC.Exception.showCCSStack_closure" {
     GHC.Exception.showCCSStack_closure:
         const GHC.Exception.showCCSStack_info;
         const 0;
 },
 sat_s7tcG_entry() //  [R1]
         { []
         }
     {offset
       c7vgt: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vgu; else goto c7vgv;
       c7vgu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vgv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vgr_info;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tcG_info" {
     sat_s7tcG_info:
         const sat_s7tcG_entry;
         const 1;
         const 4294967312;
         const S7tkS_srt+80;
 },
 _c7vgr() //  [R1]
         { []
         }
     {offset
       c7vgr: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException9_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vgr_info" {
     block_c7vgr_info:
         const _c7vgr;
         const 0;
         const 4294967326;
         const S7tkS_srt+80;
 },
 GHC.Exception.showCCSStack_entry() //  [R2]
         { []
         }
     {offset
       c7vgD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7vgE; else goto c7vgF;
       c7vgE: // global
           R2 = R2;
           R1 = GHC.Exception.showCCSStack_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vgF: // global
           I64[Sp - 8] = block_c7vgh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7vgM; else goto c7vgi;
       u7vgM: // global
           call _c7vgh(R1) args: 0, res: 0, upd: 0;
       c7vgi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.showCCSStack_info" {
     GHC.Exception.showCCSStack_info:
         const GHC.Exception.showCCSStack_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7tkS_srt+80;
 },
 _c7vgh() //  [R1]
         { []
         }
     {offset
       c7vgh: // global
           if (R1 & 7 == 1) goto c7vgA; else goto c7vgB;
       c7vgA: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vgB: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vgL; else goto c7vgK;
       c7vgL: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vgK: // global
           I64[Hp - 40] = sat_s7tcG_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException11_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vgh_info" {
     block_c7vgh_info:
         const _c7vgh;
         const 0;
         const 21474836510;
         const S7tkS_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.011862207 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$ccompare_closure" {
     GHC.Exception.$fOrdArithException_$ccompare_closure:
         const GHC.Exception.$fOrdArithException_$ccompare_info;
 },
 GHC.Exception.$fOrdArithException_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vhn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vho; else goto c7vhp;
       c7vho: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vhp: // global
           I64[Sp - 16] = block_c7vhc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vks; else goto c7vhd;
       u7vks: // global
           call _c7vhc(R1) args: 0, res: 0, upd: 0;
       c7vhd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$ccompare_info" {
     GHC.Exception.$fOrdArithException_$ccompare_info:
         const GHC.Exception.$fOrdArithException_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vhc() //  [R1]
         { []
         }
     {offset
       c7vhc: // global
           _s7tcI::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vhg;
               case 2 : goto c7vhh;
               case 3 : goto c7vhi;
               case 4 : goto c7vhj;
               case 5 : goto c7vhk;
               case 6 : goto c7vhl;
           }
       c7vhl: // global
           I64[Sp + 8] = block_c7vjz_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vkr; else goto c7vjB;
       u7vkr: // global
           call _c7vjz(R1) args: 0, res: 0, upd: 0;
       c7vjB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vhk: // global
           I64[Sp + 8] = block_c7vjg_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vkq; else goto c7vji;
       u7vkq: // global
           call _c7vjg(R1) args: 0, res: 0, upd: 0;
       c7vji: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vhj: // global
           I64[Sp + 8] = block_c7viT_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vkp; else goto c7viV;
       u7vkp: // global
           call _c7viT(R1) args: 0, res: 0, upd: 0;
       c7viV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vhi: // global
           I64[Sp + 8] = block_c7vis_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vko; else goto c7viu;
       u7vko: // global
           call _c7vis(R1) args: 0, res: 0, upd: 0;
       c7viu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vhh: // global
           I64[Sp + 8] = block_c7vhX_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vkn; else goto c7vhZ;
       u7vkn: // global
           call _c7vhX(R1) args: 0, res: 0, upd: 0;
       c7vhZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vhg: // global
           I64[Sp + 8] = block_c7vhs_info;
           R1 = _s7tcI::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vkm; else goto c7vhu;
       u7vkm: // global
           call _c7vhs(R1) args: 0, res: 0, upd: 0;
       c7vhu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vhc_info" {
     block_c7vhc_info:
         const _c7vhc;
         const 1;
         const 30;
 },
 _c7vjz() //  [R1]
         { []
         }
     {offset
       c7vjz: // global
           if (R1 & 7 == 6) goto u7vjX; else goto u7vjY;
       u7vjX: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
       u7vjY: // global
           Sp = Sp + 8;
           call _c7vjH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vjz_info" {
     block_c7vjz_info:
         const _c7vjz;
         const 0;
         const 30;
 },
 _c7vjg() //  [R1]
         { []
         }
     {offset
       c7vjg: // global
           _c7vjN::P64 = R1 & 7;
           if (_c7vjN::P64 != 5) goto u7vjW; else goto u7vjZ;
       u7vjW: // global
           if (_c7vjN::P64 != 6) goto u7vk1; else goto u7vk0;
       u7vk1: // global
           Sp = Sp + 8;
           call _c7vjH() args: 0, res: 0, upd: 0;
       u7vk0: // global
           Sp = Sp + 8;
           call _c7vjw() args: 0, res: 0, upd: 0;
       u7vjZ: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vjg_info" {
     block_c7vjg_info:
         const _c7vjg;
         const 0;
         const 30;
 },
 _c7viT() //  [R1]
         { []
         }
     {offset
       c7viT: // global
           _c7vjO::P64 = R1 & 7;
           if (_c7vjO::P64 < 5) goto u7vjU; else goto u7vjV;
       u7vjU: // global
           if (_c7vjO::P64 < 4) goto u7vk3; else goto u7vk2;
       u7vk3: // global
           Sp = Sp + 8;
           call _c7vjH() args: 0, res: 0, upd: 0;
       u7vk2: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
       u7vjV: // global
           if (_c7vjO::P64 < 6) goto u7vk5; else goto u7vk5;
       u7vk5: // global
           Sp = Sp + 8;
           call _c7vjw() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7viT_info" {
     block_c7viT_info:
         const _c7viT;
         const 0;
         const 30;
 },
 _c7vis() //  [R1]
         { []
         }
     {offset
       c7vis: // global
           _c7vjP::P64 = R1 & 7;
           if (_c7vjP::P64 < 4) goto u7vjS; else goto u7vjT;
       u7vjS: // global
           if (_c7vjP::P64 < 3) goto u7vk7; else goto u7vk6;
       u7vk7: // global
           Sp = Sp + 8;
           call _c7vjH() args: 0, res: 0, upd: 0;
       u7vk6: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
       u7vjT: // global
           if (_c7vjP::P64 != 5) goto u7vk9; else goto u7vk9;
       u7vk9: // global
           Sp = Sp + 8;
           call _c7vjw() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vis_info" {
     block_c7vis_info:
         const _c7vis;
         const 0;
         const 30;
 },
 _c7vhX() //  [R1]
         { []
         }
     {offset
       c7vhX: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7vka;
               case 2 : goto u7vkb;
               case 3, 4, 5, 6 : goto u7vkf;
           }
       u7vkf: // global
           Sp = Sp + 8;
           call _c7vjw() args: 0, res: 0, upd: 0;
       u7vkb: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
       u7vka: // global
           Sp = Sp + 8;
           call _c7vjH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vhX_info" {
     block_c7vhX_info:
         const _c7vhX;
         const 0;
         const 30;
 },
 _c7vjH() //  []
         { []
         }
     {offset
       c7vjH: // global
           R1 = GHC.Types.GT_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vhs() //  [R1]
         { []
         }
     {offset
       c7vhs: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7vkg;
               case 2, 3, 4, 5, 6 : goto u7vkl;
           }
       u7vkl: // global
           Sp = Sp + 8;
           call _c7vjw() args: 0, res: 0, upd: 0;
       u7vkg: // global
           Sp = Sp + 8;
           call _c7vjL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vhs_info" {
     block_c7vhs_info:
         const _c7vhs;
         const 0;
         const 30;
 },
 _c7vjw() //  []
         { []
         }
     {offset
       c7vjw: // global
           R1 = GHC.Types.LT_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vjL() //  []
         { []
         }
     {offset
       c7vjL: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.034122329 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c<_closure" {
     GHC.Exception.$fOrdArithException_$c<_closure:
         const GHC.Exception.$fOrdArithException_$c<_info;
 },
 GHC.Exception.$fOrdArithException_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vlS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vlT; else goto c7vlU;
       c7vlT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vlU: // global
           I64[Sp - 16] = block_c7vlH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vos; else goto c7vlI;
       u7vos: // global
           call _c7vlH(R1) args: 0, res: 0, upd: 0;
       c7vlI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c<_info" {
     GHC.Exception.$fOrdArithException_$c<_info:
         const GHC.Exception.$fOrdArithException_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vlH() //  [R1]
         { []
         }
     {offset
       c7vlH: // global
           _s7tcR::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vlL;
               case 2 : goto c7vlM;
               case 3 : goto c7vlN;
               case 4 : goto c7vlO;
               case 5 : goto c7vlP;
               case 6 : goto c7vlQ;
           }
       c7vlQ: // global
           I64[Sp + 8] = block_c7vnO_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vor; else goto c7vnQ;
       u7vor: // global
           call _c7vnO() args: 0, res: 0, upd: 0;
       c7vnQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vlP: // global
           I64[Sp + 8] = block_c7vnz_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7voq; else goto c7vnB;
       u7voq: // global
           call _c7vnz(R1) args: 0, res: 0, upd: 0;
       c7vnB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vlO: // global
           I64[Sp + 8] = block_c7vng_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vop; else goto c7vni;
       u7vop: // global
           call _c7vng(R1) args: 0, res: 0, upd: 0;
       c7vni: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vlN: // global
           I64[Sp + 8] = block_c7vmT_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7voo; else goto c7vmV;
       u7voo: // global
           call _c7vmT(R1) args: 0, res: 0, upd: 0;
       c7vmV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vlM: // global
           I64[Sp + 8] = block_c7vms_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7von; else goto c7vmu;
       u7von: // global
           call _c7vms(R1) args: 0, res: 0, upd: 0;
       c7vmu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vlL: // global
           I64[Sp + 8] = block_c7vlX_info;
           R1 = _s7tcR::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vom; else goto c7vlZ;
       u7vom: // global
           call _c7vlX(R1) args: 0, res: 0, upd: 0;
       c7vlZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vlH_info" {
     block_c7vlH_info:
         const _c7vlH;
         const 1;
         const 30;
 },
 _c7vnO() //  []
         { []
         }
     {offset
       c7vnO: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vnO_info" {
     block_c7vnO_info:
         const _c7vnO;
         const 0;
         const 30;
 },
 _c7vnz() //  [R1]
         { []
         }
     {offset
       c7vnz: // global
           if (R1 & 7 == 6) goto u7vo4; else goto u7vo5;
       u7vo4: // global
           Sp = Sp + 8;
           call _c7vnL() args: 0, res: 0, upd: 0;
       u7vo5: // global
           Sp = Sp + 8;
           call _c7vnH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vnz_info" {
     block_c7vnz_info:
         const _c7vnz;
         const 0;
         const 30;
 },
 _c7vng() //  [R1]
         { []
         }
     {offset
       c7vng: // global
           _c7vnW::P64 = R1 & 7;
           if (_c7vnW::P64 != 5) goto u7vo3; else goto u7vo6;
       u7vo3: // global
           if (_c7vnW::P64 != 6) goto u7vo8; else goto u7vo7;
       u7vo8: // global
           Sp = Sp + 8;
           call _c7vnH() args: 0, res: 0, upd: 0;
       u7vo7: // global
           Sp = Sp + 8;
           goto u7voB;
       u7vo6: // global
           Sp = Sp + 8;
           goto u7voB;
       u7voB: // global
           call _c7vnL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vng_info" {
     block_c7vng_info:
         const _c7vng;
         const 0;
         const 30;
 },
 _c7vmT() //  [R1]
         { []
         }
     {offset
       c7vmT: // global
           _c7vnX::P64 = R1 & 7;
           if (_c7vnX::P64 < 4) goto u7vo9; else goto u7vo2;
       u7vo9: // global
           Sp = Sp + 8;
           call _c7vnH() args: 0, res: 0, upd: 0;
       u7vo2: // global
           if (_c7vnX::P64 != 5) goto u7vob; else goto u7vob;
       u7vob: // global
           Sp = Sp + 8;
           call _c7vnL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vmT_info" {
     block_c7vmT_info:
         const _c7vmT;
         const 0;
         const 30;
 },
 _c7vms() //  [R1]
         { []
         }
     {offset
       c7vms: // global
           _c7vnY::P64 = R1 & 7;
           if (_c7vnY::P64 < 6) goto u7vo0; else goto u7voc;
       u7vo0: // global
           if (_c7vnY::P64 < 3) goto u7vod; else goto u7vo1;
       u7vod: // global
           Sp = Sp + 8;
           call _c7vnH() args: 0, res: 0, upd: 0;
       u7vo1: // global
           if (_c7vnY::P64 != 4) goto u7vof; else goto u7vof;
       u7vof: // global
           Sp = Sp + 8;
           goto u7vox;
       u7voc: // global
           Sp = Sp + 8;
           goto u7vox;
       u7vox: // global
           call _c7vnL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vms_info" {
     block_c7vms_info:
         const _c7vms;
         const 0;
         const 30;
 },
 _c7vlX() //  [R1]
         { []
         }
     {offset
       c7vlX: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7vog;
               case 2, 3, 4, 5, 6 : goto u7vol;
           }
       u7vol: // global
           Sp = Sp + 8;
           call _c7vnL() args: 0, res: 0, upd: 0;
       u7vog: // global
           Sp = Sp + 8;
           call _c7vnH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vlX_info" {
     block_c7vlX_info:
         const _c7vlX;
         const 0;
         const 30;
 },
 _c7vnL() //  []
         { []
         }
     {offset
       c7vnL: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vnH() //  []
         { []
         }
     {offset
       c7vnH: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.057369789 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c<=_closure" {
     GHC.Exception.$fOrdArithException_$c<=_closure:
         const GHC.Exception.$fOrdArithException_$c<=_info;
 },
 GHC.Exception.$fOrdArithException_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vpJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vpK; else goto c7vpL;
       c7vpK: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vpL: // global
           I64[Sp - 16] = block_c7vpy_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vsj; else goto c7vpz;
       u7vsj: // global
           call _c7vpy(R1) args: 0, res: 0, upd: 0;
       c7vpz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c<=_info" {
     GHC.Exception.$fOrdArithException_$c<=_info:
         const GHC.Exception.$fOrdArithException_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vpy() //  [R1]
         { []
         }
     {offset
       c7vpy: // global
           _s7tcZ::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vpC;
               case 2 : goto c7vpD;
               case 3 : goto c7vpE;
               case 4 : goto c7vpF;
               case 5 : goto c7vpG;
               case 6 : goto c7vpH;
           }
       c7vpH: // global
           I64[Sp + 8] = block_c7vrF_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vsi; else goto c7vrH;
       u7vsi: // global
           call _c7vrF() args: 0, res: 0, upd: 0;
       c7vrH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vpG: // global
           I64[Sp + 8] = block_c7vrq_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vsh; else goto c7vrs;
       u7vsh: // global
           call _c7vrq(R1) args: 0, res: 0, upd: 0;
       c7vrs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vpF: // global
           I64[Sp + 8] = block_c7vr7_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vsg; else goto c7vr9;
       u7vsg: // global
           call _c7vr7(R1) args: 0, res: 0, upd: 0;
       c7vr9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vpE: // global
           I64[Sp + 8] = block_c7vqK_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vsf; else goto c7vqM;
       u7vsf: // global
           call _c7vqK(R1) args: 0, res: 0, upd: 0;
       c7vqM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vpD: // global
           I64[Sp + 8] = block_c7vqj_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vse; else goto c7vql;
       u7vse: // global
           call _c7vqj(R1) args: 0, res: 0, upd: 0;
       c7vql: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vpC: // global
           I64[Sp + 8] = block_c7vpO_info;
           R1 = _s7tcZ::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vsd; else goto c7vpQ;
       u7vsd: // global
           call _c7vpO(R1) args: 0, res: 0, upd: 0;
       c7vpQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vpy_info" {
     block_c7vpy_info:
         const _c7vpy;
         const 1;
         const 30;
 },
 _c7vrF() //  []
         { []
         }
     {offset
       c7vrF: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vrF_info" {
     block_c7vrF_info:
         const _c7vrF;
         const 0;
         const 30;
 },
 _c7vrq() //  [R1]
         { []
         }
     {offset
       c7vrq: // global
           if (R1 & 7 == 6) goto u7vrV; else goto u7vrW;
       u7vrV: // global
           Sp = Sp + 8;
           call _c7vrC() args: 0, res: 0, upd: 0;
       u7vrW: // global
           Sp = Sp + 8;
           call _c7vry() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vrq_info" {
     block_c7vrq_info:
         const _c7vrq;
         const 0;
         const 30;
 },
 _c7vr7() //  [R1]
         { []
         }
     {offset
       c7vr7: // global
           _c7vrN::P64 = R1 & 7;
           if (_c7vrN::P64 != 5) goto u7vrU; else goto u7vrX;
       u7vrU: // global
           if (_c7vrN::P64 != 6) goto u7vrZ; else goto u7vrY;
       u7vrZ: // global
           Sp = Sp + 8;
           call _c7vry() args: 0, res: 0, upd: 0;
       u7vrY: // global
           Sp = Sp + 8;
           goto u7vss;
       u7vrX: // global
           Sp = Sp + 8;
           goto u7vss;
       u7vss: // global
           call _c7vrC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vr7_info" {
     block_c7vr7_info:
         const _c7vr7;
         const 0;
         const 30;
 },
 _c7vqK() //  [R1]
         { []
         }
     {offset
       c7vqK: // global
           _c7vrO::P64 = R1 & 7;
           if (_c7vrO::P64 < 4) goto u7vs0; else goto u7vrT;
       u7vs0: // global
           Sp = Sp + 8;
           call _c7vry() args: 0, res: 0, upd: 0;
       u7vrT: // global
           if (_c7vrO::P64 != 5) goto u7vs2; else goto u7vs2;
       u7vs2: // global
           Sp = Sp + 8;
           call _c7vrC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vqK_info" {
     block_c7vqK_info:
         const _c7vqK;
         const 0;
         const 30;
 },
 _c7vqj() //  [R1]
         { []
         }
     {offset
       c7vqj: // global
           _c7vrP::P64 = R1 & 7;
           if (_c7vrP::P64 < 6) goto u7vrR; else goto u7vs3;
       u7vrR: // global
           if (_c7vrP::P64 < 3) goto u7vs4; else goto u7vrS;
       u7vs4: // global
           Sp = Sp + 8;
           call _c7vry() args: 0, res: 0, upd: 0;
       u7vrS: // global
           if (_c7vrP::P64 != 4) goto u7vs6; else goto u7vs6;
       u7vs6: // global
           Sp = Sp + 8;
           goto u7vso;
       u7vs3: // global
           Sp = Sp + 8;
           goto u7vso;
       u7vso: // global
           call _c7vrC() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vqj_info" {
     block_c7vqj_info:
         const _c7vqj;
         const 0;
         const 30;
 },
 _c7vpO() //  [R1]
         { []
         }
     {offset
       c7vpO: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7vs7;
               case 2, 3, 4, 5, 6 : goto u7vsc;
           }
       u7vsc: // global
           Sp = Sp + 8;
           call _c7vrC() args: 0, res: 0, upd: 0;
       u7vs7: // global
           Sp = Sp + 8;
           call _c7vry() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vpO_info" {
     block_c7vpO_info:
         const _c7vpO;
         const 0;
         const 30;
 },
 _c7vrC() //  []
         { []
         }
     {offset
       c7vrC: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vry() //  []
         { []
         }
     {offset
       c7vry: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.078443962 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$cmax_closure" {
     GHC.Exception.$fOrdArithException_$cmax_closure:
         const GHC.Exception.$fOrdArithException_$cmax_info;
 },
 GHC.Exception.$fOrdArithException_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vtA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vtB; else goto c7vtC;
       c7vtB: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vtC: // global
           I64[Sp - 16] = block_c7vtp_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vvD; else goto c7vtq;
       u7vvD: // global
           call _c7vtp(R1) args: 0, res: 0, upd: 0;
       c7vtq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$cmax_info" {
     GHC.Exception.$fOrdArithException_$cmax_info:
         const GHC.Exception.$fOrdArithException_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vtp() //  [R1]
         { []
         }
     {offset
       c7vtp: // global
           _s7td8::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vtt;
               case 2 : goto c7vtu;
               case 3 : goto c7vtv;
               case 4 : goto c7vtw;
               case 5 : goto c7vtx;
               case 6 : goto c7vty;
           }
       c7vty: // global
           I64[Sp + 8] = block_c7vv4_info;
           R1 = _s7td8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vvC; else goto c7vv6;
       u7vvC: // global
           call _c7vv4() args: 0, res: 0, upd: 0;
       c7vv6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vtx: // global
           I64[Sp + 8] = block_c7vuP_info;
           R1 = _s7td8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vvB; else goto c7vuR;
       u7vvB: // global
           call _c7vuP(R1) args: 0, res: 0, upd: 0;
       c7vuR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vtw: // global
           I64[Sp + 8] = block_c7vuw_info;
           R1 = _s7td8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vvA; else goto c7vuy;
       u7vvA: // global
           call _c7vuw(R1) args: 0, res: 0, upd: 0;
       c7vuy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vtv: // global
           I64[Sp + 8] = block_c7vu9_info;
           R1 = _s7td8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vvz; else goto c7vub;
       u7vvz: // global
           call _c7vu9(R1) args: 0, res: 0, upd: 0;
       c7vub: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vtu: // global
           I64[Sp + 8] = block_c7vtI_info;
           R1 = _s7td8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vvy; else goto c7vtK;
       u7vvy: // global
           call _c7vtI(R1) args: 0, res: 0, upd: 0;
       c7vtK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vtt: // global
           R1 = _s7td8::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vtp_info" {
     block_c7vtp_info:
         const _c7vtp;
         const 1;
         const 30;
 },
 _c7vv4() //  []
         { []
         }
     {offset
       c7vv4: // global
           R1 = GHC.Exception.RatioZeroDenominator_closure+6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vv4_info" {
     block_c7vv4_info:
         const _c7vv4;
         const 0;
         const 30;
 },
 _c7vuP() //  [R1]
         { []
         }
     {offset
       c7vuP: // global
           if (R1 & 7 == 6) goto u7vvl; else goto u7vvm;
       u7vvl: // global
           Sp = Sp + 8;
           call _c7vv1() args: 0, res: 0, upd: 0;
       u7vvm: // global
           Sp = Sp + 8;
           call _c7vuX() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vuP_info" {
     block_c7vuP_info:
         const _c7vuP;
         const 0;
         const 30;
 },
 _c7vuw() //  [R1]
         { []
         }
     {offset
       c7vuw: // global
           _c7vvc::P64 = R1 & 7;
           if (_c7vvc::P64 != 5) goto u7vvk; else goto u7vvn;
       u7vvk: // global
           if (_c7vvc::P64 != 6) goto u7vvp; else goto u7vvo;
       u7vvp: // global
           Sp = Sp + 8;
           call _c7vuE() args: 0, res: 0, upd: 0;
       u7vvo: // global
           Sp = Sp + 8;
           call _c7vv1() args: 0, res: 0, upd: 0;
       u7vvn: // global
           Sp = Sp + 8;
           call _c7vuX() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vuw_info" {
     block_c7vuw_info:
         const _c7vuw;
         const 0;
         const 30;
 },
 _c7vu9() //  [R1]
         { []
         }
     {offset
       c7vu9: // global
           _c7vvd::P64 = R1 & 7;
           if (_c7vvd::P64 < 5) goto u7vvi; else goto u7vvj;
       u7vvi: // global
           if (_c7vvd::P64 < 4) goto u7vvr; else goto u7vvq;
       u7vvr: // global
           Sp = Sp + 8;
           call _c7vuh() args: 0, res: 0, upd: 0;
       u7vvq: // global
           Sp = Sp + 8;
           call _c7vuE() args: 0, res: 0, upd: 0;
       u7vvj: // global
           if (_c7vvd::P64 < 6) goto u7vvt; else goto u7vvs;
       u7vvt: // global
           Sp = Sp + 8;
           call _c7vuX() args: 0, res: 0, upd: 0;
       u7vvs: // global
           Sp = Sp + 8;
           call _c7vv1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vu9_info" {
     block_c7vu9_info:
         const _c7vu9;
         const 0;
         const 30;
 },
 _c7vtI() //  [R1]
         { []
         }
     {offset
       c7vtI: // global
           _c7vve::P64 = R1 & 7;
           if (_c7vve::P64 < 5) goto u7vvf; else goto u7vvh;
       u7vvf: // global
           if (_c7vve::P64 < 4) goto u7vvg; else goto u7vvu;
       u7vvg: // global
           if (_c7vve::P64 < 3) goto c7vtQ; else goto u7vvv;
       c7vtQ: // global
           R1 = GHC.Exception.Underflow_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7vvv: // global
           Sp = Sp + 8;
           call _c7vuh() args: 0, res: 0, upd: 0;
       u7vvu: // global
           Sp = Sp + 8;
           call _c7vuE() args: 0, res: 0, upd: 0;
       u7vvh: // global
           if (_c7vve::P64 < 6) goto u7vvx; else goto u7vvw;
       u7vvx: // global
           Sp = Sp + 8;
           call _c7vuX() args: 0, res: 0, upd: 0;
       u7vvw: // global
           Sp = Sp + 8;
           call _c7vv1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vtI_info" {
     block_c7vtI_info:
         const _c7vtI;
         const 0;
         const 30;
 },
 _c7vuh() //  []
         { []
         }
     {offset
       c7vuh: // global
           R1 = GHC.Exception.LossOfPrecision_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vuE() //  []
         { []
         }
     {offset
       c7vuE: // global
           R1 = GHC.Exception.DivideByZero_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vuX() //  []
         { []
         }
     {offset
       c7vuX: // global
           R1 = GHC.Exception.Denormal_closure+5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vv1() //  []
         { []
         }
     {offset
       c7vv1: // global
           R1 = GHC.Exception.RatioZeroDenominator_closure+6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.101007811 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c>=_closure" {
     GHC.Exception.$fOrdArithException_$c>=_closure:
         const GHC.Exception.$fOrdArithException_$c>=_info;
 },
 GHC.Exception.$fOrdArithException_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vwX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vwY; else goto c7vwZ;
       c7vwY: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vwZ: // global
           I64[Sp - 16] = block_c7vwM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vzx; else goto c7vwN;
       u7vzx: // global
           call _c7vwM(R1) args: 0, res: 0, upd: 0;
       c7vwN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c>=_info" {
     GHC.Exception.$fOrdArithException_$c>=_info:
         const GHC.Exception.$fOrdArithException_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vwM() //  [R1]
         { []
         }
     {offset
       c7vwM: // global
           _s7tdh::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vwQ;
               case 2 : goto c7vwR;
               case 3 : goto c7vwS;
               case 4 : goto c7vwT;
               case 5 : goto c7vwU;
               case 6 : goto c7vwV;
           }
       c7vwV: // global
           I64[Sp + 8] = block_c7vyT_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzw; else goto c7vyV;
       u7vzw: // global
           call _c7vyT() args: 0, res: 0, upd: 0;
       c7vyV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vwU: // global
           I64[Sp + 8] = block_c7vyE_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzv; else goto c7vyG;
       u7vzv: // global
           call _c7vyE(R1) args: 0, res: 0, upd: 0;
       c7vyG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vwT: // global
           I64[Sp + 8] = block_c7vyl_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzu; else goto c7vyn;
       u7vzu: // global
           call _c7vyl(R1) args: 0, res: 0, upd: 0;
       c7vyn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vwS: // global
           I64[Sp + 8] = block_c7vxY_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzt; else goto c7vy0;
       u7vzt: // global
           call _c7vxY(R1) args: 0, res: 0, upd: 0;
       c7vy0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vwR: // global
           I64[Sp + 8] = block_c7vxx_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzs; else goto c7vxz;
       u7vzs: // global
           call _c7vxx(R1) args: 0, res: 0, upd: 0;
       c7vxz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vwQ: // global
           I64[Sp + 8] = block_c7vx2_info;
           R1 = _s7tdh::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vzr; else goto c7vx4;
       u7vzr: // global
           call _c7vx2(R1) args: 0, res: 0, upd: 0;
       c7vx4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vwM_info" {
     block_c7vwM_info:
         const _c7vwM;
         const 1;
         const 30;
 },
 _c7vyT() //  []
         { []
         }
     {offset
       c7vyT: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vyT_info" {
     block_c7vyT_info:
         const _c7vyT;
         const 0;
         const 30;
 },
 _c7vyE() //  [R1]
         { []
         }
     {offset
       c7vyE: // global
           if (R1 & 7 == 6) goto u7vz9; else goto u7vza;
       u7vz9: // global
           Sp = Sp + 8;
           call _c7vyQ() args: 0, res: 0, upd: 0;
       u7vza: // global
           Sp = Sp + 8;
           call _c7vyM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vyE_info" {
     block_c7vyE_info:
         const _c7vyE;
         const 0;
         const 30;
 },
 _c7vyl() //  [R1]
         { []
         }
     {offset
       c7vyl: // global
           _c7vz1::P64 = R1 & 7;
           if (_c7vz1::P64 != 5) goto u7vz8; else goto u7vzb;
       u7vz8: // global
           if (_c7vz1::P64 != 6) goto u7vzd; else goto u7vzc;
       u7vzd: // global
           Sp = Sp + 8;
           call _c7vyM() args: 0, res: 0, upd: 0;
       u7vzc: // global
           Sp = Sp + 8;
           goto u7vzG;
       u7vzb: // global
           Sp = Sp + 8;
           goto u7vzG;
       u7vzG: // global
           call _c7vyQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vyl_info" {
     block_c7vyl_info:
         const _c7vyl;
         const 0;
         const 30;
 },
 _c7vxY() //  [R1]
         { []
         }
     {offset
       c7vxY: // global
           _c7vz2::P64 = R1 & 7;
           if (_c7vz2::P64 < 4) goto u7vze; else goto u7vz7;
       u7vze: // global
           Sp = Sp + 8;
           call _c7vyM() args: 0, res: 0, upd: 0;
       u7vz7: // global
           if (_c7vz2::P64 != 5) goto u7vzg; else goto u7vzg;
       u7vzg: // global
           Sp = Sp + 8;
           call _c7vyQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vxY_info" {
     block_c7vxY_info:
         const _c7vxY;
         const 0;
         const 30;
 },
 _c7vxx() //  [R1]
         { []
         }
     {offset
       c7vxx: // global
           _c7vz3::P64 = R1 & 7;
           if (_c7vz3::P64 < 6) goto u7vz5; else goto u7vzh;
       u7vz5: // global
           if (_c7vz3::P64 < 3) goto u7vzi; else goto u7vz6;
       u7vzi: // global
           Sp = Sp + 8;
           call _c7vyM() args: 0, res: 0, upd: 0;
       u7vz6: // global
           if (_c7vz3::P64 != 4) goto u7vzk; else goto u7vzk;
       u7vzk: // global
           Sp = Sp + 8;
           goto u7vzC;
       u7vzh: // global
           Sp = Sp + 8;
           goto u7vzC;
       u7vzC: // global
           call _c7vyQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vxx_info" {
     block_c7vxx_info:
         const _c7vxx;
         const 0;
         const 30;
 },
 _c7vx2() //  [R1]
         { []
         }
     {offset
       c7vx2: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7vzl;
               case 2, 3, 4, 5, 6 : goto u7vzq;
           }
       u7vzq: // global
           Sp = Sp + 8;
           call _c7vyQ() args: 0, res: 0, upd: 0;
       u7vzl: // global
           Sp = Sp + 8;
           call _c7vyM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vx2_info" {
     block_c7vx2_info:
         const _c7vx2;
         const 0;
         const 30;
 },
 _c7vyQ() //  []
         { []
         }
     {offset
       c7vyQ: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7vyM() //  []
         { []
         }
     {offset
       c7vyM: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.119061512 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c>_closure" {
     GHC.Exception.$fOrdArithException_$c>_closure:
         const GHC.Exception.$fOrdArithException_$c>_info;
 },
 GHC.Exception.$fOrdArithException_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vAD: // global
           _s7tdq::P64 = R3;
           R3 = R2;
           R2 = _s7tdq::P64;
           call GHC.Exception.$fOrdArithException_$c<_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c>_info" {
     GHC.Exception.$fOrdArithException_$c>_info:
         const GHC.Exception.$fOrdArithException_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.126753795 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$cmin_closure" {
     GHC.Exception.$fOrdArithException_$cmin_closure:
         const GHC.Exception.$fOrdArithException_$cmin_info;
 },
 GHC.Exception.$fOrdArithException_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vAZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vB0; else goto c7vB1;
       c7vB0: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vB1: // global
           I64[Sp - 16] = block_c7vAO_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7vCN; else goto c7vAP;
       u7vCN: // global
           call _c7vAO(R1) args: 0, res: 0, upd: 0;
       c7vAP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$cmin_info" {
     GHC.Exception.$fOrdArithException_$cmin_info:
         const GHC.Exception.$fOrdArithException_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7vAO() //  [R1]
         { []
         }
     {offset
       c7vAO: // global
           _s7tdr::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7vAS;
               case 2 : goto c7vAT;
               case 3 : goto c7vAU;
               case 4 : goto c7vAV;
               case 5 : goto c7vAW;
               case 6 : goto c7vAX;
           }
       c7vAX: // global
           R1 = _s7tdr::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c7vAW: // global
           I64[Sp + 8] = block_c7vCk_info;
           R1 = _s7tdr::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vCM; else goto c7vCm;
       u7vCM: // global
           call _c7vCk(R1) args: 0, res: 0, upd: 0;
       c7vCm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vAV: // global
           I64[Sp + 8] = block_c7vC1_info;
           R1 = _s7tdr::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vCL; else goto c7vC3;
       u7vCL: // global
           call _c7vC1(R1) args: 0, res: 0, upd: 0;
       c7vC3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vAU: // global
           I64[Sp + 8] = block_c7vBE_info;
           R1 = _s7tdr::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vCK; else goto c7vBG;
       u7vCK: // global
           call _c7vBE(R1) args: 0, res: 0, upd: 0;
       c7vBG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vAT: // global
           I64[Sp + 8] = block_c7vBd_info;
           R1 = _s7tdr::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vCJ; else goto c7vBf;
       u7vCJ: // global
           call _c7vBd(R1) args: 0, res: 0, upd: 0;
       c7vBf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7vAS: // global
           I64[Sp + 8] = block_c7vB4_info;
           R1 = _s7tdr::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vCI; else goto c7vB6;
       u7vCI: // global
           call _c7vB4() args: 0, res: 0, upd: 0;
       c7vB6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vAO_info" {
     block_c7vAO_info:
         const _c7vAO;
         const 1;
         const 30;
 },
 _c7vCk() //  [R1]
         { []
         }
     {offset
       c7vCk: // global
           if (R1 & 7 == 6) goto c7vCw; else goto c7vCs;
       c7vCw: // global
           R1 = GHC.Exception.Denormal_closure+5;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vCs: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vCk_info" {
     block_c7vCk_info:
         const _c7vCk;
         const 0;
         const 30;
 },
 _c7vC1() //  [R1]
         { []
         }
     {offset
       c7vC1: // global
           _c7vCB::P64 = R1 & 7;
           if (_c7vCB::P64 == 5) goto c7vCh; else goto u7vCH;
       u7vCH: // global
           if (_c7vCB::P64 == 6) goto c7vCh; else goto c7vC9;
       c7vCh: // global
           R1 = GHC.Exception.DivideByZero_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vC9: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vC1_info" {
     block_c7vC1_info:
         const _c7vC1;
         const 0;
         const 30;
 },
 _c7vBE() //  [R1]
         { []
         }
     {offset
       c7vBE: // global
           _c7vCC::P64 = R1 & 7;
           if (_c7vCC::P64 < 4) goto c7vBM; else goto u7vCG;
       c7vBM: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u7vCG: // global
           if (_c7vCC::P64 != 5) goto c7vBY; else goto c7vBY;
       c7vBY: // global
           R1 = GHC.Exception.LossOfPrecision_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vBE_info" {
     block_c7vBE_info:
         const _c7vBE;
         const 0;
         const 30;
 },
 _c7vBd() //  [R1]
         { []
         }
     {offset
       c7vBd: // global
           _c7vCD::P64 = R1 & 7;
           if (_c7vCD::P64 >= 6) goto c7vBB; else goto u7vCE;
       u7vCE: // global
           if (_c7vCD::P64 < 3) goto c7vBl; else goto u7vCF;
       c7vBl: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u7vCF: // global
           if (_c7vCD::P64 != 4) goto c7vBB; else goto c7vBB;
       c7vBB: // global
           R1 = GHC.Exception.Underflow_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vBd_info" {
     block_c7vBd_info:
         const _c7vBd;
         const 0;
         const 30;
 },
 _c7vB4() //  []
         { []
         }
     {offset
       c7vB4: // global
           R1 = GHC.Exception.Overflow_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vB4_info" {
     block_c7vB4_info:
         const _c7vB4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.14102528 UTC

[section ""data" . GHC.Exception.$fOrdArithException_closure" {
     GHC.Exception.$fOrdArithException_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.Exception.$fEqArithException_closure+1;
         const GHC.Exception.$fOrdArithException_$ccompare_closure+2;
         const GHC.Exception.$fOrdArithException_$c<_closure+2;
         const GHC.Exception.$fOrdArithException_$c<=_closure+2;
         const GHC.Exception.$fOrdArithException_$c>_closure+2;
         const GHC.Exception.$fOrdArithException_$c>=_closure+2;
         const GHC.Exception.$fOrdArithException_$cmax_closure+2;
         const GHC.Exception.$fOrdArithException_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.143262115 UTC

[section ""cstring" . GHC.Exception.$trModule4_bytes" {
     GHC.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.144979842 UTC

[section ""data" . GHC.Exception.$trModule3_closure" {
     GHC.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.146785401 UTC

[section ""cstring" . GHC.Exception.$trModule2_bytes" {
     GHC.Exception.$trModule2_bytes:
         I8[] [71,72,67,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.14858658 UTC

[section ""data" . GHC.Exception.$trModule1_closure" {
     GHC.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.150467864 UTC

[section ""data" . GHC.Exception.$trModule_closure" {
     GHC.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Exception.$trModule3_closure+1;
         const GHC.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.152346972 UTC

[section ""data" . $krep_r7t8y_closure" {
     $krep_r7t8y_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.154278519 UTC

[section ""data" . $krep1_r7t8z_closure" {
     $krep1_r7t8z_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.156053818 UTC

[section ""data" . $krep2_r7t8A_closure" {
     $krep2_r7t8A_closure:
         const :_con_info;
         const $krep1_r7t8z_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.158897504 UTC

[section ""data" . $krep3_r7t8B_closure" {
     $krep3_r7t8B_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep2_r7t8A_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.16068476 UTC

[section ""data" . GHC.Exception.$tcException1_closure" {
     GHC.Exception.$tcException1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep_r7t8y_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.162536656 UTC

[section ""data" . $krep4_r7t8C_closure" {
     $krep4_r7t8C_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.164204174 UTC

[section ""data" . $krep5_r7t8D_closure" {
     $krep5_r7t8D_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r7t8C_closure+2;
         const $krep3_r7t8B_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.165901923 UTC

[section ""data" . $krep6_r7t8E_closure" {
     $krep6_r7t8E_closure:
         const :_con_info;
         const $krep4_r7t8C_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.167705273 UTC

[section ""data" . $krep7_r7t8F_closure" {
     $krep7_r7t8F_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.169430676 UTC

[section ""data" . $krep8_r7t8G_closure" {
     $krep8_r7t8G_closure:
         const :_con_info;
         const GHC.Types.krep$*_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.171188456 UTC

[section ""data" . $krep9_r7t8H_closure" {
     $krep9_r7t8H_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Typeable.Internal.$tcTypeable_closure;
         const $krep8_r7t8G_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.172974738 UTC

[section ""data" . $krep10_r7t8I_closure" {
     $krep10_r7t8I_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Show.$tcShow_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.174702234 UTC

[section ""cstring" . GHC.Exception.$fExceptionSomeException3_bytes" {
     GHC.Exception.$fExceptionSomeException3_bytes:
         I8[] [83,111,109,101,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.17650148 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException2_closure" {
     GHC.Exception.$fExceptionSomeException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionSomeException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.178782218 UTC

[section ""data" . GHC.Exception.$tcSomeException_closure" {
     GHC.Exception.$tcSomeException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionSomeException2_closure+1;
         const GHC.Types.krep$*_closure;
         const 13267649630904555636;
         const 2959581124447004473;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.180706148 UTC

[section ""data" . $krep11_r7t8J_closure" {
     $krep11_r7t8J_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcSomeException_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.182467832 UTC

[section ""data" . $krep12_r7t8K_closure" {
     $krep12_r7t8K_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r7t8C_closure+2;
         const $krep11_r7t8J_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.184765983 UTC

[section ""data" . $krep13_r7t8L_closure" {
     $krep13_r7t8L_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r7t8J_closure+1;
         const $krep7_r7t8F_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.188160077 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException1_closure" {
     GHC.Exception.$fExceptionSomeException1_closure:
         const GHC.Exception.$fExceptionSomeException1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionSomeException1_entry() //  [R1]
         { []
         }
     {offset
       c7vEd: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7vEe; else goto c7vEf;
       c7vEe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vEf: // global
           (_c7vE5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vE5::I64 == 0) goto c7vE7; else goto c7vE6;
       c7vE7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vE6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vE5::I64;
           I64[Sp - 24] = block_c7vE8_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionSomeException2_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 2959581124447004473;
           R2 = 13267649630904555636;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException1_info" {
     GHC.Exception.$fExceptionSomeException1_info:
         const GHC.Exception.$fExceptionSomeException1_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+104;
 },
 _c7vE8() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7vE8: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7vE9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vE8_info" {
     block_c7vE8_info:
         const _c7vE8;
         const 0;
         const 30;
 },
 _c7vE9() //  []
         { []
         }
     {offset
       c7vE9: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vEi; else goto c7vEh;
       c7vEi: // global
           HpAlloc = 48;
           I64[Sp] = block_c7vE9_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7vEh: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vE9_info" {
     block_c7vE9_info:
         const _c7vE9;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.195537508 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_closure" {
     GHC.Exception.$fExceptionSomeException_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionSomeException1_closure;
         const GHC.Exception.$fShowSomeException_closure+1;
         const GHC.Exception.$fExceptionSomeException_$ctoException_closure+1;
         const GHC.Base.Just_closure+1;
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.197366223 UTC

[section ""cstring" . GHC.Exception.$tcException3_bytes" {
     GHC.Exception.$tcException3_bytes:
         I8[] [69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.199028981 UTC

[section ""data" . GHC.Exception.$tcException2_closure" {
     GHC.Exception.$tcException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tcException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.200753384 UTC

[section ""data" . GHC.Exception.$tcException_closure" {
     GHC.Exception.$tcException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tcException2_closure+1;
         const GHC.Exception.$tcException1_closure+4;
         const 5005890060182917952;
         const 3990091377913498827;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.203194285 UTC

[section ""data" . $krep14_r7t8M_closure" {
     $krep14_r7t8M_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure+1;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.204968757 UTC

[section ""data" . $krep15_r7t8N_closure" {
     $krep15_r7t8N_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r7t8D_closure+4;
         const $krep14_r7t8M_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.206815964 UTC

[section ""data" . $krep16_r7t8O_closure" {
     $krep16_r7t8O_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r7t8L_closure+4;
         const $krep15_r7t8N_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.208571056 UTC

[section ""data" . $krep17_r7t8P_closure" {
     $krep17_r7t8P_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r7t8K_closure+4;
         const $krep16_r7t8O_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.210405166 UTC

[section ""data" . $krep18_r7t8Q_closure" {
     $krep18_r7t8Q_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r7t8I_closure+1;
         const $krep17_r7t8P_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.212101923 UTC

[section ""data" . GHC.Exception.$tc'C:Exception1_closure" {
     GHC.Exception.$tc'C:Exception1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep9_r7t8H_closure+1;
         const $krep18_r7t8Q_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.214525329 UTC

[section ""cstring" . GHC.Exception.$tc'C:Exception3_bytes" {
     GHC.Exception.$tc'C:Exception3_bytes:
         I8[] [39,67,58,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.21647228 UTC

[section ""data" . GHC.Exception.$tc'C:Exception2_closure" {
     GHC.Exception.$tc'C:Exception2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'C:Exception3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.218921832 UTC

[section ""data" . GHC.Exception.$tc'C:Exception_closure" {
     GHC.Exception.$tc'C:Exception_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'C:Exception2_closure+1;
         const GHC.Exception.$tc'C:Exception1_closure+4;
         const 10820889188949131006;
         const 4069342579395079435;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.220783595 UTC

[section ""data" . GHC.Exception.$tc'SomeException1_closure" {
     GHC.Exception.$tc'SomeException1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r7t8M_closure+1;
         const $krep12_r7t8K_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.222590201 UTC

[section ""cstring" . GHC.Exception.$tc'SomeException3_bytes" {
     GHC.Exception.$tc'SomeException3_bytes:
         I8[] [39,83,111,109,101,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.224358556 UTC

[section ""data" . GHC.Exception.$tc'SomeException2_closure" {
     GHC.Exception.$tc'SomeException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'SomeException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.226221549 UTC

[section ""data" . GHC.Exception.$tc'SomeException_closure" {
     GHC.Exception.$tc'SomeException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'SomeException2_closure+1;
         const GHC.Exception.$tc'SomeException1_closure+4;
         const 16790271558916100413;
         const 1524061796422226345;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.228077713 UTC

[section ""cstring" . GHC.Exception.$fExceptionErrorCall4_bytes" {
     GHC.Exception.$fExceptionErrorCall4_bytes:
         I8[] [69,114,114,111,114,67,97,108,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.229892236 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall3_closure" {
     GHC.Exception.$fExceptionErrorCall3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionErrorCall4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.231681342 UTC

[section ""data" . GHC.Exception.$tcErrorCall_closure" {
     GHC.Exception.$tcErrorCall_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionErrorCall3_closure+1;
         const GHC.Types.krep$*_closure;
         const 4106747399780464988;
         const 1398564497631027702;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.23349209 UTC

[section ""data" . $krep19_r7t8R_closure" {
     $krep19_r7t8R_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcErrorCall_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.23532599 UTC

[section ""data" . $krep20_r7t8S_closure" {
     $krep20_r7t8S_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r7t8B_closure+1;
         const $krep19_r7t8R_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.237038435 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation1_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r7t8B_closure+1;
         const $krep20_r7t8S_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.239281356 UTC

[section ""cstring" . GHC.Exception.$tc'ErrorCallWithLocation3_bytes" {
     GHC.Exception.$tc'ErrorCallWithLocation3_bytes:
         I8[] [39,69,114,114,111,114,67,97,108,108,87,105,116,104,76,111,99,97,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.241075341 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation2_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'ErrorCallWithLocation3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.24358314 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'ErrorCallWithLocation2_closure+1;
         const GHC.Exception.$tc'ErrorCallWithLocation1_closure+4;
         const 14789594717732302892;
         const 17317233711857548947;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.247106208 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall2_closure" {
     GHC.Exception.$fExceptionErrorCall2_closure:
         const GHC.Exception.$fExceptionErrorCall2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall2_entry() //  [R1]
         { []
         }
     {offset
       c7vFf: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7vFg; else goto c7vFh;
       c7vFg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vFh: // global
           (_c7vF7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vF7::I64 == 0) goto c7vF9; else goto c7vF8;
       c7vF9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vF8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vF7::I64;
           I64[Sp - 24] = block_c7vFa_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionErrorCall3_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 1398564497631027702;
           R2 = 4106747399780464988;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall2_info" {
     GHC.Exception.$fExceptionErrorCall2_info:
         const GHC.Exception.$fExceptionErrorCall2_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+104;
 },
 _c7vFa() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7vFa: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7vFb() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vFa_info" {
     block_c7vFa_info:
         const _c7vFa;
         const 0;
         const 30;
 },
 _c7vFb() //  []
         { []
         }
     {offset
       c7vFb: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vFk; else goto c7vFj;
       c7vFk: // global
           HpAlloc = 48;
           I64[Sp] = block_c7vFb_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7vFj: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vFb_info" {
     block_c7vFb_info:
         const _c7vFb;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.254509906 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException16_bytes" {
     GHC.Exception.$fExceptionArithException16_bytes:
         I8[] [65,114,105,116,104,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.256211515 UTC

[section ""data" . GHC.Exception.$fExceptionArithException15_closure" {
     GHC.Exception.$fExceptionArithException15_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionArithException16_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.259267811 UTC

[section ""data" . GHC.Exception.$tcArithException_closure" {
     GHC.Exception.$tcArithException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionArithException15_closure+1;
         const GHC.Types.krep$*_closure;
         const 11275459110071720610;
         const 9614411694476093403;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.261407683 UTC

[section ""data" . GHC.Exception.$tc'Denormal1_closure" {
     GHC.Exception.$tc'Denormal1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcArithException_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.263546061 UTC

[section ""cstring" . GHC.Exception.$tc'Overflow2_bytes" {
     GHC.Exception.$tc'Overflow2_bytes:
         I8[] [39,79,118,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.265767683 UTC

[section ""data" . GHC.Exception.$tc'Overflow1_closure" {
     GHC.Exception.$tc'Overflow1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Overflow2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.267962693 UTC

[section ""data" . GHC.Exception.$tc'Overflow_closure" {
     GHC.Exception.$tc'Overflow_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Overflow1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 868785644779029835;
         const 15802889491790460831;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.270830541 UTC

[section ""cstring" . GHC.Exception.$tc'Underflow2_bytes" {
     GHC.Exception.$tc'Underflow2_bytes:
         I8[] [39,85,110,100,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.272758545 UTC

[section ""data" . GHC.Exception.$tc'Underflow1_closure" {
     GHC.Exception.$tc'Underflow1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Underflow2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.274912665 UTC

[section ""data" . GHC.Exception.$tc'Underflow_closure" {
     GHC.Exception.$tc'Underflow_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Underflow1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 12747416996077452468;
         const 11539058234473019035;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.277843622 UTC

[section ""cstring" . GHC.Exception.$tc'LossOfPrecision2_bytes" {
     GHC.Exception.$tc'LossOfPrecision2_bytes:
         I8[] [39,76,111,115,115,79,102,80,114,101,99,105,115,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.279857361 UTC

[section ""data" . GHC.Exception.$tc'LossOfPrecision1_closure" {
     GHC.Exception.$tc'LossOfPrecision1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'LossOfPrecision2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.281969149 UTC

[section ""data" . GHC.Exception.$tc'LossOfPrecision_closure" {
     GHC.Exception.$tc'LossOfPrecision_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'LossOfPrecision1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 6720322370825216637;
         const 1452601476582167815;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.284090031 UTC

[section ""cstring" . GHC.Exception.$tc'DivideByZero2_bytes" {
     GHC.Exception.$tc'DivideByZero2_bytes:
         I8[] [39,68,105,118,105,100,101,66,121,90,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.286157764 UTC

[section ""data" . GHC.Exception.$tc'DivideByZero1_closure" {
     GHC.Exception.$tc'DivideByZero1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'DivideByZero2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.288291695 UTC

[section ""data" . GHC.Exception.$tc'DivideByZero_closure" {
     GHC.Exception.$tc'DivideByZero_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'DivideByZero1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 17029085746322105003;
         const 1338659094893400307;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.290305745 UTC

[section ""cstring" . GHC.Exception.$tc'Denormal3_bytes" {
     GHC.Exception.$tc'Denormal3_bytes:
         I8[] [39,68,101,110,111,114,109,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.292249495 UTC

[section ""data" . GHC.Exception.$tc'Denormal2_closure" {
     GHC.Exception.$tc'Denormal2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Denormal3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.294078198 UTC

[section ""data" . GHC.Exception.$tc'Denormal_closure" {
     GHC.Exception.$tc'Denormal_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Denormal2_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 3563997708427691429;
         const 10171683790716248215;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.295868147 UTC

[section ""cstring" . GHC.Exception.$tc'RatioZeroDenominator2_bytes" {
     GHC.Exception.$tc'RatioZeroDenominator2_bytes:
         I8[] [39,82,97,116,105,111,90,101,114,111,68,101,110,111,109,105,110,97,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.297672205 UTC

[section ""data" . GHC.Exception.$tc'RatioZeroDenominator1_closure" {
     GHC.Exception.$tc'RatioZeroDenominator1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'RatioZeroDenominator2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.299500707 UTC

[section ""data" . GHC.Exception.$tc'RatioZeroDenominator_closure" {
     GHC.Exception.$tc'RatioZeroDenominator_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'RatioZeroDenominator1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 12115498985276514171;
         const 17178069790958498690;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.303385631 UTC

[section ""data" . GHC.Exception.$fExceptionArithException14_closure" {
     GHC.Exception.$fExceptionArithException14_closure:
         const GHC.Exception.$fExceptionArithException14_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException14_entry() //  [R1]
         { []
         }
     {offset
       c7vGd: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7vGe; else goto c7vGf;
       c7vGe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vGf: // global
           (_c7vG5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vG5::I64 == 0) goto c7vG7; else goto c7vG6;
       c7vG7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vG6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vG5::I64;
           I64[Sp - 24] = block_c7vG8_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionArithException15_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 9614411694476093403;
           R2 = 11275459110071720610;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException14_info" {
     GHC.Exception.$fExceptionArithException14_info:
         const GHC.Exception.$fExceptionArithException14_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+104;
 },
 _c7vG8() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7vG8: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7vG9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7vG8_info" {
     block_c7vG8_info:
         const _c7vG8;
         const 0;
         const 30;
 },
 _c7vG9() //  []
         { []
         }
     {offset
       c7vG9: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vGi; else goto c7vGh;
       c7vGi: // global
           HpAlloc = 48;
           I64[Sp] = block_c7vG9_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7vGh: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vG9_info" {
     block_c7vG9_info:
         const _c7vG9;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.313034125 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cfromException_closure" {
     GHC.Exception.$fExceptionErrorCall_$cfromException_closure:
         const GHC.Exception.$fExceptionErrorCall_$cfromException_info;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c7vGL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vGP; else goto c7vGQ;
       c7vGP: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vGQ: // global
           I64[Sp - 8] = block_c7vGI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7vHb; else goto c7vGJ;
       u7vHb: // global
           call _c7vGI(R1) args: 0, res: 0, upd: 0;
       c7vGJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cfromException_info" {
     GHC.Exception.$fExceptionErrorCall_$cfromException_info:
         const GHC.Exception.$fExceptionErrorCall_$cfromException_entry;
         const 0;
         const 1653562408974;
         const 4294967301;
         const S7tkS_srt+56;
 },
 _c7vGI() //  [R1]
         { []
         }
     {offset
       c7vGI: // global
           I64[Sp - 8] = block_c7vGO_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vGI_info" {
     block_c7vGI_info:
         const _c7vGI;
         const 0;
         const 1103806595102;
         const S7tkS_srt+56;
 },
 _c7vGO() //  [R1]
         { []
         }
     {offset
       c7vGO: // global
           I64[Sp] = block_c7vGV_info;
           R3 = GHC.Exception.$fExceptionErrorCall2_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vGO_info" {
     block_c7vGO_info:
         const _c7vGO;
         const 1;
         const 1103806595102;
         const S7tkS_srt+56;
 },
 _c7vGV() //  [R1]
         { []
         }
     {offset
       c7vGV: // global
           if (R1 & 7 == 1) goto c7vH2; else goto c7vH6;
       c7vH2: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vH6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7vH9; else goto c7vH8;
       c7vH9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vH8: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vGV_info" {
     block_c7vGV_info:
         const _c7vGV;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.322890305 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_closure" {
     GHC.Exception.$fExceptionErrorCall_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionErrorCall2_closure;
         const GHC.Exception.$fShowErrorCall_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$ctoException_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$cfromException_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$cshow_closure+1;
         const 0;
 },
 section ""data" . GHC.Exception.$fExceptionErrorCall_$ctoException_closure" {
     GHC.Exception.$fExceptionErrorCall_$ctoException_closure:
         const GHC.Exception.$fExceptionErrorCall_$ctoException_info;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7vHC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vHG; else goto c7vHF;
       c7vHG: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vHF: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionErrorCall_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$ctoException_info" {
     GHC.Exception.$fExceptionErrorCall_$ctoException_info:
         const GHC.Exception.$fExceptionErrorCall_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7tkS_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.327808857 UTC

[section ""data" . GHC.Exception.errorCallException_closure" {
     GHC.Exception.errorCallException_closure:
         const GHC.Exception.errorCallException_info;
         const 0;
 },
 GHC.Exception.errorCallException_entry() //  [R2]
         { []
         }
     {offset
       c7vHS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vHW; else goto c7vHV;
       c7vHW: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.errorCallException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vHV: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R2 = Hp - 15;
           call GHC.Exception.$fExceptionErrorCall_$ctoException_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallException_info" {
     GHC.Exception.errorCallException_info:
         const GHC.Exception.errorCallException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7tkS_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.331275492 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException3_bytes" {
     GHC.Exception.errorCallWithCallStackException3_bytes:
         I8[] [58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.332900468 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException2_bytes" {
     GHC.Exception.errorCallWithCallStackException2_bytes:
         I8[] [32,105,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.340225602 UTC

[section ""data" . GHC.Exception.$wprettySrcLoc_closure" {
     GHC.Exception.$wprettySrcLoc_closure:
         const GHC.Exception.$wprettySrcLoc_info;
 },
 sat_s7teg_entry() //  [R1]
         { []
         }
     {offset
       c7vIN: // global
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7teg_info" {
     sat_s7teg_info:
         const sat_s7teg_entry;
         const 1;
         const 16;
 },
 sat_s7teh_entry() //  [R1]
         { []
         }
     {offset
       c7vIQ: // global
           _s7teh::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7vIR; else goto c7vIS;
       c7vIS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vIU; else goto c7vIT;
       c7vIU: // global
           HpAlloc = 24;
           goto c7vIR;
       c7vIR: // global
           R1 = _s7teh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vIT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7teh::P64;
           _s7tdZ::P64 = P64[_s7teh::P64 + 16];
           _s7te0::P64 = P64[_s7teh::P64 + 24];
           I64[Hp - 16] = sat_s7teg_info;
           P64[Hp] = _s7te0::P64;
           R3 = Hp - 16;
           R2 = _s7tdZ::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7teh_info" {
     sat_s7teh_info:
         const sat_s7teh_entry;
         const 2;
         const 18;
 },
 sat_s7tei_entry() //  [R1]
         { []
         }
     {offset
       c7vIV: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7vIZ; else goto c7vIY;
       c7vIZ: // global
           HpAlloc = 32;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vIY: // global
           _s7tdZ::P64 = P64[R1 + 16];
           _s7te0::P64 = P64[R1 + 24];
           I64[Hp - 24] = sat_s7teh_info;
           P64[Hp - 8] = _s7tdZ::P64;
           P64[Hp] = _s7te0::P64;
           R3 = Hp - 24;
           R2 = GHC.Exception.errorCallWithCallStackException2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7tei_info" {
     sat_s7tei_info:
         const sat_s7tei_entry;
         const 2;
         const 18;
 },
 sat_s7tej_entry() //  [R1]
         { []
         }
     {offset
       c7vJ0: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7vJ2; else goto c7vJ3;
       c7vJ2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vJ3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c7vIu_info;
           _s7tdZ::P64 = P64[R1 + 16];
           _s7te0::P64 = P64[R1 + 24];
           R1 = P64[R1 + 32];
           P64[Sp - 32] = _s7tdZ::P64;
           P64[Sp - 24] = _s7te0::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u7vJ8; else goto c7vIv;
       u7vJ8: // global
           call _c7vIu(R1) args: 0, res: 0, upd: 0;
       c7vIv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tej_info" {
     sat_s7tej_info:
         const sat_s7tej_entry;
         const 3;
         const 15;
 },
 _c7vIu() //  [R1]
         { []
         }
     {offset
       c7vIu: // global
           I64[Sp] = block_c7vIz_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 0;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vIu_info" {
     block_c7vIu_info:
         const _c7vIu;
         const 2;
         const 30;
 },
 _c7vIz() //  [R1, R2]
         { []
         }
     {offset
       c7vIz: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7vJ7; else goto c7vJ6;
       c7vJ7: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c7vJ6: // global
           I64[Hp - 48] = sat_s7tei_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vIz_info" {
     block_c7vIz_info:
         const _c7vIz;
         const 2;
         const 30;
 },
 sat_s7tek_entry() //  [R1]
         { []
         }
     {offset
       c7vJ9: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7vJd; else goto c7vJc;
       c7vJd: // global
           HpAlloc = 40;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vJc: // global
           _s7tdZ::P64 = P64[R1 + 16];
           _s7te0::P64 = P64[R1 + 24];
           _s7te3::P64 = P64[R1 + 32];
           I64[Hp - 32] = sat_s7tej_info;
           P64[Hp - 16] = _s7tdZ::P64;
           P64[Hp - 8] = _s7te0::P64;
           P64[Hp] = _s7te3::P64;
           R3 = Hp - 32;
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7tek_info" {
     sat_s7tek_info:
         const sat_s7tek_entry;
         const 3;
         const 15;
 },
 sat_s7tel_entry() //  [R1]
         { []
         }
     {offset
       c7vJe: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c7vJg; else goto c7vJh;
       c7vJg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vJh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 48] = block_c7vIf_info;
           _s7tdZ::P64 = P64[R1 + 16];
           _s7te0::P64 = P64[R1 + 24];
           _s7te3::P64 = P64[R1 + 40];
           R1 = P64[R1 + 32];
           P64[Sp - 40] = _s7tdZ::P64;
           P64[Sp - 32] = _s7te0::P64;
           P64[Sp - 24] = _s7te3::P64;
           Sp = Sp - 48;
           if (R1 & 7 != 0) goto u7vJm; else goto c7vIg;
       u7vJm: // global
           call _c7vIf(R1) args: 0, res: 0, upd: 0;
       c7vIg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tel_info" {
     sat_s7tel_info:
         const sat_s7tel_entry;
         const 4;
         const 15;
 },
 _c7vIf() //  [R1]
         { []
         }
     {offset
       c7vIf: // global
           I64[Sp] = block_c7vIk_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 0;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vIf_info" {
     block_c7vIf_info:
         const _c7vIf;
         const 3;
         const 30;
 },
 _c7vIk() //  [R1, R2]
         { []
         }
     {offset
       c7vIk: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c7vJl; else goto c7vJk;
       c7vJl: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c7vJk: // global
           I64[Hp - 56] = sat_s7tek_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = Hp - 56;
           R2 = Hp - 14;
           Sp = Sp + 32;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vIk_info" {
     block_c7vIk_info:
         const _c7vIk;
         const 3;
         const 30;
 },
 sat_s7tem_entry() //  [R1]
         { []
         }
     {offset
       c7vJn: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vJr; else goto c7vJq;
       c7vJr: // global
           HpAlloc = 48;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vJq: // global
           _s7tdZ::P64 = P64[R1 + 16];
           _s7te0::P64 = P64[R1 + 24];
           _s7te2::P64 = P64[R1 + 32];
           _s7te3::P64 = P64[R1 + 40];
           I64[Hp - 40] = sat_s7tel_info;
           P64[Hp - 24] = _s7tdZ::P64;
           P64[Hp - 16] = _s7te0::P64;
           P64[Hp - 8] = _s7te2::P64;
           P64[Hp] = _s7te3::P64;
           R3 = Hp - 40;
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7tem_info" {
     sat_s7tem_info:
         const sat_s7tem_entry;
         const 4;
         const 15;
 },
 GHC.Exception.$wprettySrcLoc_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c7vJs: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vJw; else goto c7vJv;
       c7vJw: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$wprettySrcLoc_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vJv: // global
           I64[Hp - 40] = sat_s7tem_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R3 = Hp - 40;
           R2 = R4;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$wprettySrcLoc_info" {
     GHC.Exception.$wprettySrcLoc_info:
         const GHC.Exception.$wprettySrcLoc_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.365497885 UTC

[section ""data" . GHC.Exception.prettySrcLoc_closure" {
     GHC.Exception.prettySrcLoc_closure:
         const GHC.Exception.prettySrcLoc_info;
 },
 GHC.Exception.prettySrcLoc_entry() //  [R2]
         { []
         }
     {offset
       c7vKp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7vKq; else goto c7vKr;
       c7vKq: // global
           R2 = R2;
           R1 = GHC.Exception.prettySrcLoc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vKr: // global
           I64[Sp - 8] = block_c7vKm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7vKv; else goto c7vKn;
       u7vKv: // global
           call _c7vKm(R1) args: 0, res: 0, upd: 0;
       c7vKn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettySrcLoc_info" {
     GHC.Exception.prettySrcLoc_info:
         const GHC.Exception.prettySrcLoc_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7vKm() //  [R1]
         { []
         }
     {offset
       c7vKm: // global
           R6 = P64[R1 + 39];
           R5 = P64[R1 + 31];
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$wprettySrcLoc_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vKm_info" {
     block_c7vKm_info:
         const _c7vKm;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.370581199 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException7_bytes" {
     GHC.Exception.errorCallWithCallStackException7_bytes:
         I8[] [67,97,108,108,83,116,97,99,107,32,40,102,114,111,109,32,72,97,115,67,97,108,108,83,116,97,99,107,41,58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.373082755 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException6_closure" {
     GHC.Exception.errorCallWithCallStackException6_closure:
         const GHC.Exception.errorCallWithCallStackException6_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException6_entry() //  [R1]
         { []
         }
     {offset
       c7vKM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vKN; else goto c7vKO;
       c7vKN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vKO: // global
           (_c7vKJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vKJ::I64 == 0) goto c7vKL; else goto c7vKK;
       c7vKL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vKK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vKJ::I64;
           R2 = GHC.Exception.errorCallWithCallStackException7_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException6_info" {
     GHC.Exception.errorCallWithCallStackException6_info:
         const GHC.Exception.errorCallWithCallStackException6_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.377076868 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException4_bytes" {
     GHC.Exception.errorCallWithCallStackException4_bytes:
         I8[] [44,32,99,97,108,108,101,100,32,97,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.382127534 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException1_closure" {
     GHC.Exception.errorCallWithCallStackException1_closure:
         const GHC.Exception.errorCallWithCallStackException1_info;
 },
 sat_s7teI_entry() //  [R1]
         { []
         }
     {offset
       c7vLl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vLm; else goto c7vLn;
       c7vLm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vLn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vLi_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7vLr; else goto c7vLj;
       u7vLr: // global
           call _c7vLi(R1) args: 0, res: 0, upd: 0;
       c7vLj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7teI_info" {
     sat_s7teI_info:
         const sat_s7teI_entry;
         const 1;
         const 16;
 },
 _c7vLi() //  [R1]
         { []
         }
     {offset
       c7vLi: // global
           R6 = P64[R1 + 39];
           R5 = P64[R1 + 31];
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$wprettySrcLoc_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vLi_info" {
     block_c7vLi_info:
         const _c7vLi;
         const 0;
         const 30;
 },
 sat_s7teJ_entry() //  [R1]
         { []
         }
     {offset
       c7vLs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vLw; else goto c7vLv;
       c7vLw: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vLv: // global
           _s7tez::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s7teI_info;
           P64[Hp] = _s7tez::P64;
           R3 = Hp - 16;
           R2 = GHC.Exception.errorCallWithCallStackException4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7teJ_info" {
     sat_s7teJ_info:
         const sat_s7teJ_entry;
         const 1;
         const 16;
 },
 sat_s7teK_entry() //  [R1]
         { []
         }
     {offset
       c7vLx: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vLy; else goto c7vLz;
       c7vLy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vLz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vL5_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7vLD; else goto c7vL6;
       u7vLD: // global
           call _c7vL5(R1) args: 0, res: 0, upd: 0;
       c7vL6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7teK_info" {
     sat_s7teK_info:
         const sat_s7teK_entry;
         const 1;
         const 16;
 },
 _c7vL5() //  [R1]
         { []
         }
     {offset
       c7vL5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vLC; else goto c7vLB;
       c7vLC: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7vLB: // global
           _s7tey::P64 = P64[R1 + 7];
           _s7tez::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s7teJ_info;
           P64[Hp] = _s7tez::P64;
           R3 = Hp - 16;
           R2 = _s7tey::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vL5_info" {
     block_c7vL5_info:
         const _c7vL5;
         const 0;
         const 30;
 },
 GHC.Exception.errorCallWithCallStackException1_entry() //  [R2]
         { []
         }
     {offset
       c7vLE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vLI; else goto c7vLH;
       c7vLI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.errorCallWithCallStackException1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vLH: // global
           I64[Hp - 16] = sat_s7teK_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Exception.errorCallWithCallStackException5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException1_info" {
     GHC.Exception.errorCallWithCallStackException1_info:
         const GHC.Exception.errorCallWithCallStackException1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.396479562 UTC

[section ""data" . GHC.Exception.prettyCallStackLines_closure" {
     GHC.Exception.prettyCallStackLines_closure:
         const GHC.Exception.prettyCallStackLines_info;
         const 0;
 },
 sat_s7teP_entry() //  [R1]
         { []
         }
     {offset
       c7vMj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vMk; else goto c7vMl;
       c7vMk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vMl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException1_closure+1;
           Sp = Sp - 16;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7teP_info" {
     sat_s7teP_info:
         const sat_s7teP_entry;
         const 1;
         const 16;
 },
 GHC.Exception.prettyCallStackLines_entry() //  [R2]
         { []
         }
     {offset
       c7vMq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7vMr; else goto c7vMs;
       c7vMr: // global
           R2 = R2;
           R1 = GHC.Exception.prettyCallStackLines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vMs: // global
           I64[Sp - 8] = block_c7vMa_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettyCallStackLines_info" {
     GHC.Exception.prettyCallStackLines_info:
         const GHC.Exception.prettyCallStackLines_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7tkS_srt+152;
 },
 _c7vMa() //  [R1]
         { []
         }
     {offset
       c7vMa: // global
           if (R1 & 7 == 1) goto c7vMn; else goto c7vMo;
       c7vMn: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vMo: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vMy; else goto c7vMx;
       c7vMy: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vMx: // global
           I64[Hp - 40] = sat_s7teP_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vMa_info" {
     block_c7vMa_info:
         const _c7vMa;
         const 0;
         const 4294967326;
         const S7tkS_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.404067757 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException8_bytes" {
     GHC.Exception.errorCallWithCallStackException8_bytes:
         I8[] [10]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.40653051 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException_xs_closure" {
     GHC.Exception.errorCallWithCallStackException_xs_closure:
         const GHC.Exception.errorCallWithCallStackException_xs_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException_xs_entry() //  [R1]
         { []
         }
     {offset
       c7vMX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vMY; else goto c7vMZ;
       c7vMY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vMZ: // global
           (_c7vMU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vMU::I64 == 0) goto c7vMW; else goto c7vMV;
       c7vMW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vMV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vMU::I64;
           R2 = GHC.Exception.errorCallWithCallStackException8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException_xs_info" {
     GHC.Exception.errorCallWithCallStackException_xs_info:
         const GHC.Exception.errorCallWithCallStackException_xs_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.412174702 UTC

[section ""data" . GHC.Exception.prettyCallStack_closure" {
     GHC.Exception.prettyCallStack_closure:
         const GHC.Exception.prettyCallStack_info;
         const 0;
 },
 sat_s7teV_entry() //  [R1]
         { []
         }
     {offset
       c7vNm: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vNn; else goto c7vNo;
       c7vNn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vNo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vNk_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException1_closure+1;
           Sp = Sp - 24;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7teV_info" {
     sat_s7teV_info:
         const sat_s7teV_entry;
         const 1;
         const 4294967312;
         const S7tkS_srt+168;
 },
 _c7vNk() //  [R1]
         { []
         }
     {offset
       c7vNk: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp + 8;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vNk_info" {
     block_c7vNk_info:
         const _c7vNk;
         const 0;
         const 4294967326;
         const S7tkS_srt+168;
 },
 GHC.Exception.prettyCallStack_entry() //  [R2]
         { []
         }
     {offset
       c7vNw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7vNx; else goto c7vNy;
       c7vNx: // global
           R2 = R2;
           R1 = GHC.Exception.prettyCallStack_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vNy: // global
           I64[Sp - 8] = block_c7vNb_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettyCallStack_info" {
     GHC.Exception.prettyCallStack_info:
         const GHC.Exception.prettyCallStack_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7tkS_srt+160;
 },
 _c7vNb() //  [R1]
         { []
         }
     {offset
       c7vNb: // global
           if (R1 & 7 == 1) goto c7vNt; else goto c7vNu;
       c7vNt: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vNu: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vNE; else goto c7vND;
       c7vNE: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vND: // global
           I64[Hp - 40] = sat_s7teV_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vNb_info" {
     block_c7vNb_info:
         const _c7vNb;
         const 0;
         const 12884901918;
         const S7tkS_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.429102107 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException_closure" {
     GHC.Exception.errorCallWithCallStackException_closure:
         const GHC.Exception.errorCallWithCallStackException_info;
         const 0;
 },
 sat_s7tf7_entry() //  [R1]
         { []
         }
     {offset
       c7vOs: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vOt; else goto c7vOu;
       c7vOt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vOu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vOq_info;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tf7_info" {
     sat_s7tf7_info:
         const sat_s7tf7_entry;
         const 1;
         const 4294967312;
         const S7tkS_srt+80;
 },
 _c7vOq() //  [R1]
         { []
         }
     {offset
       c7vOq: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException9_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vOq_info" {
     block_c7vOq_info:
         const _c7vOq;
         const 0;
         const 4294967326;
         const S7tkS_srt+80;
 },
 n_s7tf2_entry() //  [R1]
         { []
         }
     {offset
       c7vOC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vOD; else goto c7vOE;
       c7vOD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vOE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7vOg_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7vOL; else goto c7vOh;
       u7vOL: // global
           call _c7vOg(R1) args: 0, res: 0, upd: 0;
       c7vOh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . n_s7tf2_info" {
     n_s7tf2_info:
         const n_s7tf2_entry;
         const 1;
         const 21474836496;
         const S7tkS_srt+80;
 },
 _c7vOg() //  [R1]
         { []
         }
     {offset
       c7vOg: // global
           if (R1 & 7 == 1) goto c7vOz; else goto c7vOA;
       c7vOz: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7vOA: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vOK; else goto c7vOJ;
       c7vOK: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7vOJ: // global
           I64[Hp - 40] = sat_s7tf7_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException11_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vOg_info" {
     block_c7vOg_info:
         const _c7vOg;
         const 0;
         const 21474836510;
         const S7tkS_srt+80;
 },
 sat_s7tfc_entry() //  [R1]
         { []
         }
     {offset
       c7vP0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vP1; else goto c7vP2;
       c7vP1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vP2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tfc_info" {
     sat_s7tfc_info:
         const sat_s7tfc_entry;
         const 1;
         const 4294967312;
         const S7tkS_srt+168;
 },
 sat_s7tfl_entry() //  [R1]
         { []
         }
     {offset
       c7vPp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vPq; else goto c7vPr;
       c7vPq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vPr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Exception.errorCallWithCallStackException1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tfl_info" {
     sat_s7tfl_info:
         const sat_s7tfl_entry;
         const 1;
         const 16;
 },
 go_s7tfg_entry() //  [R1, R2]
         { []
         }
     {offset
       c7vPw: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vPx; else goto c7vPy;
       c7vPx: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vPy: // global
           I64[Sp - 24] = block_c7vPe_info;
           _s7tfg::P64 = R1;
           _s7tf2::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s7tf2::P64;
           P64[Sp - 8] = _s7tfg::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7vPF; else goto c7vPf;
       u7vPF: // global
           call _c7vPe(R1) args: 0, res: 0, upd: 0;
       c7vPf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s7tfg_info" {
     go_s7tfg_info:
         const go_s7tfg_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c7vPe() //  [R1]
         { []
         }
     {offset
       c7vPe: // global
           if (R1 & 7 == 1) goto c7vPt; else goto c7vPu;
       c7vPt: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c7vPu: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c7vPE; else goto c7vPD;
       c7vPE: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vPD: // global
           _s7tfj::P64 = P64[R1 + 6];
           _s7tfk::P64 = P64[R1 + 14];
           I64[Hp - 72] = stg_ap_2_upd_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = _s7tfk::P64;
           I64[Hp - 40] = sat_s7tfl_info;
           P64[Hp - 24] = _s7tfj::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vPe_info" {
     block_c7vPe_info:
         const _c7vPe;
         const 2;
         const 30;
 },
 sat_s7tfo_entry() //  [R1]
         { []
         }
     {offset
       c7vPI: // global
           _s7tfo::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c7vPJ; else goto c7vPK;
       c7vPK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7vPM; else goto c7vPL;
       c7vPM: // global
           HpAlloc = 16;
           goto c7vPJ;
       c7vPJ: // global
           R1 = _s7tfo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vPL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7tfo::P64;
           _s7tf2::P64 = P64[_s7tfo::P64 + 16];
           _s7tf8::P64 = P64[_s7tfo::P64 + 24];
           I64[Hp - 8] = go_s7tfg_info;
           P64[Hp] = _s7tf2::P64;
           I64[Sp - 24] = block_c7vPG_info;
           R2 = _s7tf8::P64;
           R1 = Hp - 7;
           Sp = Sp - 24;
           call go_s7tfg_entry(R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tfo_info" {
     sat_s7tfo_info:
         const sat_s7tfo_entry;
         const 2;
         const 4294967314;
         const S7tkS_srt+168;
 },
 _c7vPG() //  [R1]
         { []
         }
     {offset
       c7vPG: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp + 8;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vPG_info" {
     block_c7vPG_info:
         const _c7vPG;
         const 0;
         const 4294967326;
         const S7tkS_srt+168;
 },
 sat_s7tfq_entry() //  [R1]
         { []
         }
     {offset
       c7vPU: // global
           _s7tfq::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c7vPV; else goto c7vPW;
       c7vPW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vPY; else goto c7vPX;
       c7vPY: // global
           HpAlloc = 24;
           goto c7vPV;
       c7vPV: // global
           R1 = _s7tfq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vPX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7tfq::P64;
           _s7teY::P64 = P64[_s7tfq::P64 + 16];
           _s7tf1::P64 = P64[_s7tfq::P64 + 24];
           I64[Hp - 16] = n_s7tf2_info;
           P64[Hp] = _s7tf1::P64;
           I64[Sp - 32] = block_c7vOM_info;
           R2 = _s7teY::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tfq_info" {
     sat_s7tfq_info:
         const sat_s7tfq_entry;
         const 2;
         const 13215614369810;
         const S7tkS_srt+80;
 },
 _c7vOM() //  [R1]
         { []
         }
     {offset
       c7vOM: // global
           _c7vOc::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c7vPR; else goto c7vPS;
       c7vPR: // global
           I64[Sp + 8] = block_c7vOQ_info;
           R1 = _c7vOc::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7vQe; else goto c7vOR;
       u7vQe: // global
           call _c7vOQ(R1) args: 0, res: 0, upd: 0;
       c7vOR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
       c7vPS: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7vQc; else goto c7vQb;
       c7vQc: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7vQb: // global
           I64[Hp - 48] = sat_s7tfo_info;
           P64[Hp - 32] = _c7vOc::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 16;
           call Data.OldList.intercalate1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vOM_info" {
     block_c7vOM_info:
         const _c7vOM;
         const 1;
         const 12884901918;
         const S7tkS_srt+160;
 },
 _c7vOQ() //  [R1]
         { []
         }
     {offset
       c7vOQ: // global
           if (R1 & 7 == 1) goto c7vQ3; else goto c7vQ5;
       c7vQ3: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7vQ5: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vQ8; else goto c7vQ7;
       c7vQ8: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7vQ7: // global
           _s7tfa::P64 = P64[R1 + 6];
           _s7tfb::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s7tfc_info;
           P64[Hp - 24] = _s7tfb::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s7tfa::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7vOQ_info" {
     block_c7vOQ_info:
         const _c7vOQ;
         const 0;
         const 4294967326;
         const S7tkS_srt+168;
 },
 sat_s7tfs_entry() //  [R1]
         { []
         }
     {offset
       c7vQg: // global
           _s7tfs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7vQh; else goto c7vQi;
       c7vQi: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7vQk; else goto c7vQj;
       c7vQk: // global
           HpAlloc = 56;
           goto c7vQh;
       c7vQh: // global
           R1 = _s7tfs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vQj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7tfs::P64;
           _s7teX::P64 = P64[_s7tfs::P64 + 16];
           _s7teY::P64 = P64[_s7tfs::P64 + 24];
           _s7tf1::P64 = P64[_s7tfs::P64 + 32];
           I64[Hp - 48] = sat_s7tfq_info;
           P64[Hp - 32] = _s7teY::P64;
           P64[Hp - 24] = _s7tf1::P64;
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = _s7teX::P64;
           P64[Hp] = Hp - 48;
           R2 = Hp - 15;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionErrorCall_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7tfs_info" {
     sat_s7tfs_info:
         const sat_s7tfs_entry;
         const 3;
         const 13765370183695;
         const S7tkS_srt+80;
 },
 GHC.Exception.errorCallWithCallStackException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vQo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7vQp; else goto c7vQq;
       c7vQp: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vQq: // global
           I64[Sp - 24] = block_c7vO2_info;
           R1 = GHC.Stack.CCS.currentCallStack_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException_info" {
     GHC.Exception.errorCallWithCallStackException_info:
         const GHC.Exception.errorCallWithCallStackException_entry;
         const 0;
         const 119318486450190;
         const 8589934607;
         const S7tkS_srt+80;
 },
 _c7vO2() //  [R1]
         { []
         }
     {offset
       c7vO2: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7vQt; else goto c7vQs;
       c7vQt: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vQs: // global
           I64[Hp - 32] = sat_s7tfs_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = (Hp + -32) & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vO2_info" {
     block_c7vO2_info:
         const _c7vO2;
         const 2;
         const 13765370183710;
         const S7tkS_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.462193225 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cfromException_closure" {
     GHC.Exception.$fExceptionArithException_$cfromException_closure:
         const GHC.Exception.$fExceptionArithException_$cfromException_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c7vS1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vS5; else goto c7vS6;
       c7vS5: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionArithException_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vS6: // global
           I64[Sp - 8] = block_c7vRY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7vSr; else goto c7vRZ;
       u7vSr: // global
           call _c7vRY(R1) args: 0, res: 0, upd: 0;
       c7vRZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cfromException_info" {
     GHC.Exception.$fExceptionArithException_$cfromException_info:
         const GHC.Exception.$fExceptionArithException_$cfromException_entry;
         const 0;
         const 3377704015495182;
         const 4294967301;
         const S7tkS_srt+56;
 },
 _c7vRY() //  [R1]
         { []
         }
     {offset
       c7vRY: // global
           I64[Sp - 8] = block_c7vS4_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vRY_info" {
     block_c7vRY_info:
         const _c7vRY;
         const 0;
         const 2251804108652574;
         const S7tkS_srt+56;
 },
 _c7vS4() //  [R1]
         { []
         }
     {offset
       c7vS4: // global
           I64[Sp] = block_c7vSb_info;
           R3 = GHC.Exception.$fExceptionArithException14_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vS4_info" {
     block_c7vS4_info:
         const _c7vS4;
         const 1;
         const 2251804108652574;
         const S7tkS_srt+56;
 },
 _c7vSb() //  [R1]
         { []
         }
     {offset
       c7vSb: // global
           if (R1 & 7 == 1) goto c7vSi; else goto c7vSm;
       c7vSi: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7vSm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7vSp; else goto c7vSo;
       c7vSp: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7vSo: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7vSb_info" {
     block_c7vSb_info:
         const _c7vSb;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.471836058 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_closure" {
     GHC.Exception.$fExceptionArithException_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionArithException14_closure;
         const GHC.Exception.$fShowArithException_closure+1;
         const GHC.Exception.$fExceptionArithException_$ctoException_closure+1;
         const GHC.Exception.$fExceptionArithException_$cfromException_closure+1;
         const GHC.Exception.$fExceptionArithException_$cshow_closure+1;
         const 0;
 },
 section ""data" . GHC.Exception.$fExceptionArithException_$ctoException_closure" {
     GHC.Exception.$fExceptionArithException_$ctoException_closure:
         const GHC.Exception.$fExceptionArithException_$ctoException_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7vSS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vSW; else goto c7vSV;
       c7vSW: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionArithException_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7vSV: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionArithException_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$ctoException_info" {
     GHC.Exception.$fExceptionArithException_$ctoException_info:
         const GHC.Exception.$fExceptionArithException_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7tkS_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.476864634 UTC

[section ""data" . GHC.Exception.underflowException_closure" {
     GHC.Exception.underflowException_closure:
         const GHC.Exception.underflowException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.underflowException_entry() //  [R1]
         { []
         }
     {offset
       c7vT9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vTa; else goto c7vTb;
       c7vTa: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vTb: // global
           (_c7vT6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vT6::I64 == 0) goto c7vT8; else goto c7vT7;
       c7vT8: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vT7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vT6::I64;
           R2 = GHC.Exception.Underflow_closure+2;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.underflowException_info" {
     GHC.Exception.underflowException_info:
         const GHC.Exception.underflowException_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.481836044 UTC

[section ""data" . GHC.Exception.ratioZeroDenomException_closure" {
     GHC.Exception.ratioZeroDenomException_closure:
         const GHC.Exception.ratioZeroDenomException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.ratioZeroDenomException_entry() //  [R1]
         { []
         }
     {offset
       c7vTp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vTq; else goto c7vTr;
       c7vTq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vTr: // global
           (_c7vTm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vTm::I64 == 0) goto c7vTo; else goto c7vTn;
       c7vTo: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vTn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vTm::I64;
           R2 = GHC.Exception.RatioZeroDenominator_closure+6;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.ratioZeroDenomException_info" {
     GHC.Exception.ratioZeroDenomException_info:
         const GHC.Exception.ratioZeroDenomException_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.486342795 UTC

[section ""data" . GHC.Exception.overflowException_closure" {
     GHC.Exception.overflowException_closure:
         const GHC.Exception.overflowException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.overflowException_entry() //  [R1]
         { []
         }
     {offset
       c7vTF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vTG; else goto c7vTH;
       c7vTG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vTH: // global
           (_c7vTC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vTC::I64 == 0) goto c7vTE; else goto c7vTD;
       c7vTE: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vTD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vTC::I64;
           R2 = GHC.Exception.Overflow_closure+1;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.overflowException_info" {
     GHC.Exception.overflowException_info:
         const GHC.Exception.overflowException_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.490730228 UTC

[section ""data" . GHC.Exception.divZeroException_closure" {
     GHC.Exception.divZeroException_closure:
         const GHC.Exception.divZeroException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.divZeroException_entry() //  [R1]
         { []
         }
     {offset
       c7vTV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7vTW; else goto c7vTX;
       c7vTW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7vTX: // global
           (_c7vTS::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7vTS::I64 == 0) goto c7vTU; else goto c7vTT;
       c7vTU: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7vTT: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7vTS::I64;
           R2 = GHC.Exception.DivideByZero_closure+4;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.divZeroException_info" {
     GHC.Exception.divZeroException_info:
         const GHC.Exception.divZeroException_entry;
         const 0;
         const 4294967317;
         const S7tkS_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.495186759 UTC

[section ""data" . GHC.Exception.SomeException_closure" {
     GHC.Exception.SomeException_closure:
         const GHC.Exception.SomeException_info;
 },
 GHC.Exception.SomeException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vUa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vUe; else goto c7vUd;
       c7vUe: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.SomeException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vUd: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.SomeException_info" {
     GHC.Exception.SomeException_info:
         const GHC.Exception.SomeException_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.499044822 UTC

[section ""data" . GHC.Exception.Overflow_closure" {
     GHC.Exception.Overflow_closure:
         const GHC.Exception.Overflow_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.50073758 UTC

[section ""data" . GHC.Exception.Underflow_closure" {
     GHC.Exception.Underflow_closure:
         const GHC.Exception.Underflow_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.50239238 UTC

[section ""data" . GHC.Exception.LossOfPrecision_closure" {
     GHC.Exception.LossOfPrecision_closure:
         const GHC.Exception.LossOfPrecision_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.504016114 UTC

[section ""data" . GHC.Exception.DivideByZero_closure" {
     GHC.Exception.DivideByZero_closure:
         const GHC.Exception.DivideByZero_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.506261934 UTC

[section ""data" . GHC.Exception.Denormal_closure" {
     GHC.Exception.Denormal_closure:
         const GHC.Exception.Denormal_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.508087964 UTC

[section ""data" . GHC.Exception.RatioZeroDenominator_closure" {
     GHC.Exception.RatioZeroDenominator_closure:
         const GHC.Exception.RatioZeroDenominator_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.510640504 UTC

[section ""data" . GHC.Exception.ErrorCallWithLocation_closure" {
     GHC.Exception.ErrorCallWithLocation_closure:
         const GHC.Exception.ErrorCallWithLocation_info;
 },
 GHC.Exception.ErrorCallWithLocation_entry() //  [R2, R3]
         { []
         }
     {offset
       c7vUv: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7vUz; else goto c7vUy;
       c7vUz: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.ErrorCallWithLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vUy: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.ErrorCallWithLocation_info" {
     GHC.Exception.ErrorCallWithLocation_info:
         const GHC.Exception.ErrorCallWithLocation_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.514904755 UTC

[section ""data" . GHC.Exception.C:Exception_closure" {
     GHC.Exception.C:Exception_closure:
         const GHC.Exception.C:Exception_info;
 },
 GHC.Exception.C:Exception_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c7vUK: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7vUO; else goto c7vUN;
       c7vUO: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.C:Exception_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7vUN: // global
           I64[Hp - 40] = GHC.Exception.C:Exception_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.C:Exception_info" {
     GHC.Exception.C:Exception_info:
         const GHC.Exception.C:Exception_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.51858346 UTC

[section ""cstring" . i7uM3_str" {
     i7uM3_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,83,111,109,101,69,120,99,101,112,116,105,111,110]
 },
 GHC.Exception.SomeException_con_entry() //  [R1]
         { []
         }
     {offset
       c7vUU: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.SomeException_con_info" {
     GHC.Exception.SomeException_con_info:
         const GHC.Exception.SomeException_con_entry;
         const 2;
         const 4;
         const i7uM3_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.5218306 UTC

[section ""relreadonly" . GHC.Exception.ArithException_closure_tbl" {
     GHC.Exception.ArithException_closure_tbl:
         const GHC.Exception.Overflow_closure+1;
         const GHC.Exception.Underflow_closure+2;
         const GHC.Exception.LossOfPrecision_closure+3;
         const GHC.Exception.DivideByZero_closure+4;
         const GHC.Exception.Denormal_closure+5;
         const GHC.Exception.RatioZeroDenominator_closure+6;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.52393245 UTC

[section ""cstring" . i7uM5_str" {
     i7uM5_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,79,118,101,114,102,108,111,119]
 },
 GHC.Exception.Overflow_con_entry() //  [R1]
         { []
         }
     {offset
       c7vV1: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Overflow_con_info" {
     GHC.Exception.Overflow_con_info:
         const GHC.Exception.Overflow_con_entry;
         const 4294967296;
         const 3;
         const i7uM5_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.527344703 UTC

[section ""cstring" . i7uM7_str" {
     i7uM7_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,85,110,100,101,114,102,108,111,119]
 },
 GHC.Exception.Underflow_con_entry() //  [R1]
         { []
         }
     {offset
       c7vV7: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Underflow_con_info" {
     GHC.Exception.Underflow_con_info:
         const GHC.Exception.Underflow_con_entry;
         const 4294967296;
         const 4294967299;
         const i7uM7_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.531305228 UTC

[section ""cstring" . i7uM9_str" {
     i7uM9_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,76,111,115,115,79,102,80,114,101,99,105,115,105,111,110]
 },
 GHC.Exception.LossOfPrecision_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVd: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.LossOfPrecision_con_info" {
     GHC.Exception.LossOfPrecision_con_info:
         const GHC.Exception.LossOfPrecision_con_entry;
         const 4294967296;
         const 8589934595;
         const i7uM9_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.534791251 UTC

[section ""cstring" . i7uMb_str" {
     i7uMb_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,68,105,118,105,100,101,66,121,90,101,114,111]
 },
 GHC.Exception.DivideByZero_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVj: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.DivideByZero_con_info" {
     GHC.Exception.DivideByZero_con_info:
         const GHC.Exception.DivideByZero_con_entry;
         const 4294967296;
         const 12884901891;
         const i7uMb_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.539139258 UTC

[section ""cstring" . i7uMd_str" {
     i7uMd_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,68,101,110,111,114,109,97,108]
 },
 GHC.Exception.Denormal_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVp: // global
           R1 = R1 + 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Denormal_con_info" {
     GHC.Exception.Denormal_con_info:
         const GHC.Exception.Denormal_con_entry;
         const 4294967296;
         const 17179869187;
         const i7uMd_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.542764313 UTC

[section ""cstring" . i7uMf_str" {
     i7uMf_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,82,97,116,105,111,90,101,114,111,68,101,110,111,109,105,110,97,116,111,114]
 },
 GHC.Exception.RatioZeroDenominator_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVv: // global
           R1 = R1 + 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.RatioZeroDenominator_con_info" {
     GHC.Exception.RatioZeroDenominator_con_info:
         const GHC.Exception.RatioZeroDenominator_con_entry;
         const 4294967296;
         const 21474836483;
         const i7uMf_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.546564614 UTC

[section ""cstring" . i7uMh_str" {
     i7uMh_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,69,114,114,111,114,67,97,108,108,87,105,116,104,76,111,99,97,116,105,111,110]
 },
 GHC.Exception.ErrorCallWithLocation_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVB: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.ErrorCallWithLocation_con_info" {
     GHC.Exception.ErrorCallWithLocation_con_info:
         const GHC.Exception.ErrorCallWithLocation_con_entry;
         const 2;
         const 4;
         const i7uMh_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.550023364 UTC

[section ""cstring" . i7uMj_str" {
     i7uMj_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,67,58,69,120,99,101,112,116,105,111,110]
 },
 GHC.Exception.C:Exception_con_entry() //  [R1]
         { []
         }
     {offset
       c7vVH: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.C:Exception_con_info" {
     GHC.Exception.C:Exception_con_info:
         const GHC.Exception.C:Exception_con_entry;
         const 5;
         const 1;
         const i7uMj_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:43.553387917 UTC

[section ""relreadonly" . S7tkS_srt" {
     S7tkS_srt:
         const GHC.Exception.$w$cshowsPrec_closure;
         const GHC.Exception.$fExceptionArithException2_closure;
         const GHC.Exception.$fExceptionArithException4_closure;
         const GHC.Exception.$fExceptionArithException6_closure;
         const GHC.Exception.$fExceptionArithException8_closure;
         const GHC.Exception.$fExceptionArithException10_closure;
         const GHC.Exception.$fExceptionArithException12_closure;
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.Exception.$dmfromException_closure;
         const GHC.Exception.errorCallWithCallStackException10_closure;
         const GHC.Exception.errorCallWithCallStackException9_closure;
         const GHC.Exception.showCCSStack_closure;
         const GHC.Exception.errorCallWithCallStackException11_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const GHC.Exception.$fExceptionErrorCall_$cfromException_closure;
         const GHC.Exception.$fExceptionErrorCall2_closure;
         const GHC.Exception.$fExceptionErrorCall_closure;
         const GHC.Exception.$fExceptionErrorCall_$ctoException_closure;
         const GHC.Exception.errorCallException_closure;
         const GHC.Exception.prettyCallStackLines_closure;
         const GHC.Exception.errorCallWithCallStackException6_closure;
         const GHC.Exception.errorCallWithCallStackException_xs_closure;
         const GHC.Exception.prettyCallStack_closure;
         const GHC.Exception.errorCallWithCallStackException_closure;
         const GHC.Stack.CCS.currentCallStack_closure;
         const GHC.Exception.$fExceptionArithException_$cfromException_closure;
         const GHC.Exception.$fExceptionArithException14_closure;
         const GHC.Exception.$fExceptionArithException_closure;
         const GHC.Exception.$fExceptionArithException_$ctoException_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.067541429 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:46.06950822 UTC

[section ""data" . GHC.Exception.$p1Exception_closure" {
     GHC.Exception.$p1Exception_closure:
         const GHC.Exception.$p1Exception_info;
 },
 GHC.Exception.$p1Exception_entry() //  [R2]
         { []
         }
     {offset
       c7w2D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w2E; else goto c7w2F;
       c7w2E: // global
           R2 = R2;
           R1 = GHC.Exception.$p1Exception_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w2F: // global
           I64[Sp - 8] = block_c7w2A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w2J; else goto c7w2B;
       u7w2J: // global
           call _c7w2A(R1) args: 0, res: 0, upd: 0;
       c7w2B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$p1Exception_info" {
     GHC.Exception.$p1Exception_info:
         const GHC.Exception.$p1Exception_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w2A() //  [R1]
         { []
         }
     {offset
       c7w2A: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w2A_info" {
     block_c7w2A_info:
         const _c7w2A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.074854242 UTC

[section ""data" . GHC.Exception.$p2Exception_closure" {
     GHC.Exception.$p2Exception_closure:
         const GHC.Exception.$p2Exception_info;
 },
 GHC.Exception.$p2Exception_entry() //  [R2]
         { []
         }
     {offset
       c7w33: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w34; else goto c7w35;
       c7w34: // global
           R2 = R2;
           R1 = GHC.Exception.$p2Exception_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w35: // global
           I64[Sp - 8] = block_c7w30_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w39; else goto c7w31;
       u7w39: // global
           call _c7w30(R1) args: 0, res: 0, upd: 0;
       c7w31: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$p2Exception_info" {
     GHC.Exception.$p2Exception_info:
         const GHC.Exception.$p2Exception_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w30() //  [R1]
         { []
         }
     {offset
       c7w30: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w30_info" {
     block_c7w30_info:
         const _c7w30;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.080142554 UTC

[section ""data" . GHC.Exception.toException_closure" {
     GHC.Exception.toException_closure:
         const GHC.Exception.toException_info;
 },
 GHC.Exception.toException_entry() //  [R2]
         { []
         }
     {offset
       c7w3t: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w3u; else goto c7w3v;
       c7w3u: // global
           R2 = R2;
           R1 = GHC.Exception.toException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w3v: // global
           I64[Sp - 8] = block_c7w3q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w3z; else goto c7w3r;
       u7w3z: // global
           call _c7w3q(R1) args: 0, res: 0, upd: 0;
       c7w3r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.toException_info" {
     GHC.Exception.toException_info:
         const GHC.Exception.toException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w3q() //  [R1]
         { []
         }
     {offset
       c7w3q: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w3q_info" {
     block_c7w3q_info:
         const _c7w3q;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.08541837 UTC

[section ""data" . GHC.Exception.fromException_closure" {
     GHC.Exception.fromException_closure:
         const GHC.Exception.fromException_info;
 },
 GHC.Exception.fromException_entry() //  [R2]
         { []
         }
     {offset
       c7w3R: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w3S; else goto c7w3T;
       c7w3S: // global
           R2 = R2;
           R1 = GHC.Exception.fromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w3T: // global
           I64[Sp - 8] = block_c7w3O_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w3X; else goto c7w3P;
       u7w3X: // global
           call _c7w3O(R1) args: 0, res: 0, upd: 0;
       c7w3P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.fromException_info" {
     GHC.Exception.fromException_info:
         const GHC.Exception.fromException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w3O() //  [R1]
         { []
         }
     {offset
       c7w3O: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w3O_info" {
     block_c7w3O_info:
         const _c7w3O;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.090941022 UTC

[section ""data" . GHC.Exception.displayException_closure" {
     GHC.Exception.displayException_closure:
         const GHC.Exception.displayException_info;
 },
 GHC.Exception.displayException_entry() //  [R2]
         { []
         }
     {offset
       c7w4f: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w4g; else goto c7w4h;
       c7w4g: // global
           R2 = R2;
           R1 = GHC.Exception.displayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w4h: // global
           I64[Sp - 8] = block_c7w4c_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w4l; else goto c7w4d;
       u7w4l: // global
           call _c7w4c(R1) args: 0, res: 0, upd: 0;
       c7w4d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.displayException_info" {
     GHC.Exception.displayException_info:
         const GHC.Exception.displayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w4c() //  [R1]
         { []
         }
     {offset
       c7w4c: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w4c_info" {
     block_c7w4c_info:
         const _c7w4c;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.096702432 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshowsPrec_closure" {
     GHC.Exception.$fShowSomeException_$cshowsPrec_closure:
         const GHC.Exception.$fShowSomeException_$cshowsPrec_info;
 },
 GHC.Exception.$fShowSomeException_$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c7w4D: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7w4H; else goto c7w4I;
       c7w4H: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7w4I: // global
           I64[Sp - 16] = block_c7w4A_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7w4O; else goto c7w4B;
       u7w4O: // global
           call _c7w4A(R1) args: 0, res: 0, upd: 0;
       c7w4B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshowsPrec_info" {
     GHC.Exception.$fShowSomeException_$cshowsPrec_info:
         const GHC.Exception.$fShowSomeException_$cshowsPrec_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7w4A() //  [R1]
         { []
         }
     {offset
       c7w4A: // global
           I64[Sp - 8] = block_c7w4G_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w4A_info" {
     block_c7w4A_info:
         const _c7w4A;
         const 1;
         const 30;
 },
 _c7w4G() //  [R1]
         { []
         }
     {offset
       c7w4G: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _s7vWr::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s7vWr::P64;
           call GHC.Show.showsPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w4G_info" {
     block_c7w4G_info:
         const _c7w4G;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.105396734 UTC

[section ""data" . GHC.Exception.$fExceptionArithException1_closure" {
     GHC.Exception.$fExceptionArithException1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.108063113 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshow_closure" {
     GHC.Exception.$fShowSomeException_$cshow_closure:
         const GHC.Exception.$fShowSomeException_$cshow_info;
 },
 GHC.Exception.$fShowSomeException_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7w5e: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7w5i; else goto c7w5j;
       c7w5i: // global
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w5j: // global
           I64[Sp - 8] = block_c7w5b_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w5p; else goto c7w5c;
       u7w5p: // global
           call _c7w5b(R1) args: 0, res: 0, upd: 0;
       c7w5c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshow_info" {
     GHC.Exception.$fShowSomeException_$cshow_info:
         const GHC.Exception.$fShowSomeException_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w5b() //  [R1]
         { []
         }
     {offset
       c7w5b: // global
           I64[Sp - 8] = block_c7w5h_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w5b_info" {
     block_c7w5b_info:
         const _c7w5b;
         const 0;
         const 30;
 },
 _c7w5h() //  [R1]
         { []
         }
     {offset
       c7w5h: // global
           R2 = R1;
           I64[Sp - 16] = stg_ap_ppp_info;
           P64[Sp - 8] = GHC.Exception.$fExceptionArithException1_closure+1;
           P64[Sp] = P64[Sp + 8];
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Show.showsPrec_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w5h_info" {
     block_c7w5h_info:
         const _c7w5h;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.115362378 UTC

[section ""data" . GHC.Exception.$fShowSomeException1_closure" {
     GHC.Exception.$fShowSomeException1_closure:
         const GHC.Exception.$fShowSomeException1_info;
 },
 GHC.Exception.$fShowSomeException1_entry() //  [R2]
         { []
         }
     {offset
       c7w5R: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7w5V; else goto c7w5W;
       c7w5V: // global
           R2 = R2;
           R1 = GHC.Exception.$fShowSomeException1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w5W: // global
           I64[Sp - 8] = block_c7w5O_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w62; else goto c7w5P;
       u7w62: // global
           call _c7w5O(R1) args: 0, res: 0, upd: 0;
       c7w5P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException1_info" {
     GHC.Exception.$fShowSomeException1_info:
         const GHC.Exception.$fShowSomeException1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w5O() //  [R1]
         { []
         }
     {offset
       c7w5O: // global
           I64[Sp - 8] = block_c7w5U_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w5O_info" {
     block_c7w5O_info:
         const _c7w5O;
         const 0;
         const 30;
 },
 _c7w5U() //  [R1]
         { []
         }
     {offset
       c7w5U: // global
           R2 = R1;
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = GHC.Exception.$fExceptionArithException1_closure+1;
           Sp = Sp - 8;
           call GHC.Show.showsPrec_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w5U_info" {
     block_c7w5U_info:
         const _c7w5U;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.12205269 UTC

[section ""data" . GHC.Exception.$fShowSomeException_$cshowList_closure" {
     GHC.Exception.$fShowSomeException_$cshowList_closure:
         const GHC.Exception.$fShowSomeException_$cshowList_info;
 },
 GHC.Exception.$fShowSomeException_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7w6o: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$fShowSomeException1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowSomeException_$cshowList_info" {
     GHC.Exception.$fShowSomeException_$cshowList_info:
         const GHC.Exception.$fShowSomeException_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.125103889 UTC

[section ""data" . GHC.Exception.$fShowSomeException_closure" {
     GHC.Exception.$fShowSomeException_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fShowSomeException_$cshowsPrec_closure+2;
         const GHC.Exception.$fShowSomeException_$cshow_closure+1;
         const GHC.Exception.$fShowSomeException_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.127529904 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_$cdisplayException_closure" {
     GHC.Exception.$fExceptionSomeException_$cdisplayException_closure:
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_info;
 },
 GHC.Exception.$fExceptionSomeException_$cdisplayException_entry() //  [R2]
         { []
         }
     {offset
       c7w6D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w6E; else goto c7w6F;
       c7w6E: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionSomeException_$cdisplayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w6F: // global
           I64[Sp - 8] = block_c7w6A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w6J; else goto c7w6B;
       u7w6J: // global
           call _c7w6A(R1) args: 0, res: 0, upd: 0;
       c7w6B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException_$cdisplayException_info" {
     GHC.Exception.$fExceptionSomeException_$cdisplayException_info:
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w6A() //  [R1]
         { []
         }
     {offset
       c7w6A: // global
           R2 = P64[R1 + 7];
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.displayException_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w6A_info" {
     block_c7w6A_info:
         const _c7w6A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.133094765 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_$ctoException_closure" {
     GHC.Exception.$fExceptionSomeException_$ctoException_closure:
         const GHC.Exception.$fExceptionSomeException_$ctoException_info;
 },
 GHC.Exception.$fExceptionSomeException_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7w70: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException_$ctoException_info" {
     GHC.Exception.$fExceptionSomeException_$ctoException_info:
         const GHC.Exception.$fExceptionSomeException_$ctoException_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.136262066 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall1_closure" {
     GHC.Exception.$fExceptionErrorCall1_closure:
         const GHC.Types.C#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.139403031 UTC

[section ""data" . GHC.Exception.$w$cshowsPrec1_closure" {
     GHC.Exception.$w$cshowsPrec1_closure:
         const GHC.Exception.$w$cshowsPrec1_info;
 },
 sat_s7vWQ_entry() //  [R1]
         { []
         }
     {offset
       c7w7o: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w7p; else goto c7w7q;
       c7w7p: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7w7q: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7vWQ_info" {
     sat_s7vWQ_info:
         const sat_s7vWQ_entry;
         const 2;
         const 18;
 },
 GHC.Exception.$w$cshowsPrec1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7w7v: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7w7w; else goto c7w7x;
       c7w7w: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$cshowsPrec1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7w7x: // global
           I64[Sp - 24] = block_c7w7e_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7w7E; else goto c7w7f;
       u7w7E: // global
           call _c7w7e(R1) args: 0, res: 0, upd: 0;
       c7w7f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$cshowsPrec1_info" {
     GHC.Exception.$w$cshowsPrec1_info:
         const GHC.Exception.$w$cshowsPrec1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7w7e() //  [R1]
         { []
         }
     {offset
       c7w7e: // global
           _s7vWK::P64 = P64[Sp + 8];
           _s7vWM::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto c7w7s; else goto c7w7t;
       c7w7s: // global
           R3 = _s7vWM::P64;
           R2 = _s7vWK::P64;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7w7t: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7w7D; else goto c7w7C;
       c7w7D: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7w7C: // global
           I64[Hp - 48] = sat_s7vWQ_info;
           P64[Hp - 32] = _s7vWM::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionErrorCall1_closure+1;
           P64[Hp] = Hp - 48;
           R3 = Hp - 14;
           R2 = _s7vWK::P64;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w7e_info" {
     block_c7w7e_info:
         const _c7w7e;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.146800551 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure" {
     GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure:
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info;
 },
 GHC.Exception.$fExceptionErrorCall_$cshowsPrec_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c7w87: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w88; else goto c7w89;
       c7w88: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7w89: // global
           I64[Sp - 16] = block_c7w84_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7w8d; else goto c7w85;
       u7w8d: // global
           call _c7w84(R1) args: 0, res: 0, upd: 0;
       c7w85: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info" {
     GHC.Exception.$fExceptionErrorCall_$cshowsPrec_info:
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7w84() //  [R1]
         { []
         }
     {offset
       c7w84: // global
           R4 = P64[Sp + 8];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 16;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w84_info" {
     block_c7w84_info:
         const _c7w84;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.152451912 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cshow_closure" {
     GHC.Exception.$fExceptionErrorCall_$cshow_closure:
         const GHC.Exception.$fExceptionErrorCall_$cshow_info;
 },
 GHC.Exception.$fExceptionErrorCall_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7w8v: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7w8w; else goto c7w8x;
       c7w8w: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7w8x: // global
           I64[Sp - 8] = block_c7w8s_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7w8B; else goto c7w8t;
       u7w8B: // global
           call _c7w8s(R1) args: 0, res: 0, upd: 0;
       c7w8t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cshow_info" {
     GHC.Exception.$fExceptionErrorCall_$cshow_info:
         const GHC.Exception.$fExceptionErrorCall_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7w8s() //  [R1]
         { []
         }
     {offset
       c7w8s: // global
           R4 = GHC.Types.[]_closure+1;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w8s_info" {
     block_c7w8s_info:
         const _c7w8s;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.157823725 UTC

[section ""data" . GHC.Exception.$fShowErrorCall1_closure" {
     GHC.Exception.$fShowErrorCall1_closure:
         const GHC.Exception.$fShowErrorCall1_info;
 },
 GHC.Exception.$fShowErrorCall1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7w8U: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w8V; else goto c7w8W;
       c7w8V: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fShowErrorCall1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7w8W: // global
           I64[Sp - 16] = block_c7w8R_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7w90; else goto c7w8S;
       u7w90: // global
           call _c7w8R(R1) args: 0, res: 0, upd: 0;
       c7w8S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowErrorCall1_info" {
     GHC.Exception.$fShowErrorCall1_info:
         const GHC.Exception.$fShowErrorCall1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7w8R() //  [R1]
         { []
         }
     {offset
       c7w8R: // global
           R4 = P64[Sp + 8];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 16;
           call GHC.Exception.$w$cshowsPrec1_entry(R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7w8R_info" {
     block_c7w8R_info:
         const _c7w8R;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.163136059 UTC

[section ""data" . GHC.Exception.$fShowErrorCall_$cshowList_closure" {
     GHC.Exception.$fShowErrorCall_$cshowList_closure:
         const GHC.Exception.$fShowErrorCall_$cshowList_info;
 },
 GHC.Exception.$fShowErrorCall_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7w9f: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$fShowErrorCall1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowErrorCall_$cshowList_info" {
     GHC.Exception.$fShowErrorCall_$cshowList_info:
         const GHC.Exception.$fShowErrorCall_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.166697372 UTC

[section ""data" . GHC.Exception.$fShowErrorCall_closure" {
     GHC.Exception.$fShowErrorCall_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fExceptionErrorCall_$cshowsPrec_closure+3;
         const GHC.Exception.$fExceptionErrorCall_$cshow_closure+1;
         const GHC.Exception.$fShowErrorCall_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.168348529 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException13_bytes" {
     GHC.Exception.$fExceptionArithException13_bytes:
         I8[] [97,114,105,116,104,109,101,116,105,99,32,111,118,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.170574526 UTC

[section ""data" . GHC.Exception.$fExceptionArithException12_closure" {
     GHC.Exception.$fExceptionArithException12_closure:
         const GHC.Exception.$fExceptionArithException12_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException12_entry() //  [R1]
         { []
         }
     {offset
       c7w9u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w9v; else goto c7w9w;
       c7w9v: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7w9w: // global
           (_c7w9r::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7w9r::I64 == 0) goto c7w9t; else goto c7w9s;
       c7w9t: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7w9s: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7w9r::I64;
           R2 = GHC.Exception.$fExceptionArithException13_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException12_info" {
     GHC.Exception.$fExceptionArithException12_info:
         const GHC.Exception.$fExceptionArithException12_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.174373342 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException11_bytes" {
     GHC.Exception.$fExceptionArithException11_bytes:
         I8[] [97,114,105,116,104,109,101,116,105,99,32,117,110,100,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.17655151 UTC

[section ""data" . GHC.Exception.$fExceptionArithException10_closure" {
     GHC.Exception.$fExceptionArithException10_closure:
         const GHC.Exception.$fExceptionArithException10_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException10_entry() //  [R1]
         { []
         }
     {offset
       c7w9M: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7w9N; else goto c7w9O;
       c7w9N: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7w9O: // global
           (_c7w9J::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7w9J::I64 == 0) goto c7w9L; else goto c7w9K;
       c7w9L: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7w9K: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7w9J::I64;
           R2 = GHC.Exception.$fExceptionArithException11_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException10_info" {
     GHC.Exception.$fExceptionArithException10_info:
         const GHC.Exception.$fExceptionArithException10_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.18005936 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException9_bytes" {
     GHC.Exception.$fExceptionArithException9_bytes:
         I8[] [108,111,115,115,32,111,102,32,112,114,101,99,105,115,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.182142516 UTC

[section ""data" . GHC.Exception.$fExceptionArithException8_closure" {
     GHC.Exception.$fExceptionArithException8_closure:
         const GHC.Exception.$fExceptionArithException8_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException8_entry() //  [R1]
         { []
         }
     {offset
       c7wa4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wa5; else goto c7wa6;
       c7wa5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wa6: // global
           (_c7wa1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wa1::I64 == 0) goto c7wa3; else goto c7wa2;
       c7wa3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wa2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wa1::I64;
           R2 = GHC.Exception.$fExceptionArithException9_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException8_info" {
     GHC.Exception.$fExceptionArithException8_info:
         const GHC.Exception.$fExceptionArithException8_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.185629281 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException7_bytes" {
     GHC.Exception.$fExceptionArithException7_bytes:
         I8[] [100,105,118,105,100,101,32,98,121,32,122,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.187743124 UTC

[section ""data" . GHC.Exception.$fExceptionArithException6_closure" {
     GHC.Exception.$fExceptionArithException6_closure:
         const GHC.Exception.$fExceptionArithException6_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException6_entry() //  [R1]
         { []
         }
     {offset
       c7wam: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wan; else goto c7wao;
       c7wan: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wao: // global
           (_c7waj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7waj::I64 == 0) goto c7wal; else goto c7wak;
       c7wal: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wak: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7waj::I64;
           R2 = GHC.Exception.$fExceptionArithException7_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException6_info" {
     GHC.Exception.$fExceptionArithException6_info:
         const GHC.Exception.$fExceptionArithException6_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.191470877 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException5_bytes" {
     GHC.Exception.$fExceptionArithException5_bytes:
         I8[] [100,101,110,111,114,109,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.193660754 UTC

[section ""data" . GHC.Exception.$fExceptionArithException4_closure" {
     GHC.Exception.$fExceptionArithException4_closure:
         const GHC.Exception.$fExceptionArithException4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException4_entry() //  [R1]
         { []
         }
     {offset
       c7waE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7waF; else goto c7waG;
       c7waF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7waG: // global
           (_c7waB::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7waB::I64 == 0) goto c7waD; else goto c7waC;
       c7waD: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7waC: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7waB::I64;
           R2 = GHC.Exception.$fExceptionArithException5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException4_info" {
     GHC.Exception.$fExceptionArithException4_info:
         const GHC.Exception.$fExceptionArithException4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.197691353 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException3_bytes" {
     GHC.Exception.$fExceptionArithException3_bytes:
         I8[] [82,97,116,105,111,32,104,97,115,32,122,101,114,111,32,100,101,110,111,109,105,110,97,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.199813169 UTC

[section ""data" . GHC.Exception.$fExceptionArithException2_closure" {
     GHC.Exception.$fExceptionArithException2_closure:
         const GHC.Exception.$fExceptionArithException2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException2_entry() //  [R1]
         { []
         }
     {offset
       c7waW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7waX; else goto c7waY;
       c7waX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7waY: // global
           (_c7waT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7waT::I64 == 0) goto c7waV; else goto c7waU;
       c7waV: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7waU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7waT::I64;
           R2 = GHC.Exception.$fExceptionArithException3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException2_info" {
     GHC.Exception.$fExceptionArithException2_info:
         const GHC.Exception.$fExceptionArithException2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.204460523 UTC

[section ""data" . GHC.Exception.$w$cshowsPrec_closure" {
     GHC.Exception.$w$cshowsPrec_closure:
         const GHC.Exception.$w$cshowsPrec_info;
         const 0;
 },
 GHC.Exception.$w$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wbm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wbn; else goto c7wbo;
       c7wbn: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wbo: // global
           I64[Sp - 16] = block_c7wbb_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wbH; else goto c7wbc;
       u7wbH: // global
           call _c7wbb(R1) args: 0, res: 0, upd: 0;
       c7wbc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$cshowsPrec_info" {
     GHC.Exception.$w$cshowsPrec_info:
         const GHC.Exception.$w$cshowsPrec_entry;
         const 0;
         const 545460846606;
         const 8589934607;
         const S7wbI_srt;
 },
 _c7wbb() //  [R1]
         { []
         }
     {offset
       c7wbb: // global
           _s7vXa::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wbf;
               case 2 : goto c7wbg;
               case 3 : goto c7wbh;
               case 4 : goto c7wbi;
               case 5 : goto c7wbj;
               case 6 : goto c7wbk;
           }
       c7wbk: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7wbj: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7wbi: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException6_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7wbh: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException8_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7wbg: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException10_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c7wbf: // global
           R3 = _s7vXa::P64;
           R2 = GHC.Exception.$fExceptionArithException12_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wbb_info" {
     block_c7wbb_info:
         const _c7wbb;
         const 1;
         const 270582939678;
         const S7wbI_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.210374776 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cshowsPrec_closure" {
     GHC.Exception.$fExceptionArithException_$cshowsPrec_closure:
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cshowsPrec_entry() //  [R3,
                                                                  R4]
         { []
         }
     {offset
       c7wc2: // global
           _s7vXd::P64 = R3;
           R3 = R4;
           R2 = _s7vXd::P64;
           call GHC.Exception.$w$cshowsPrec_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cshowsPrec_info" {
     GHC.Exception.$fExceptionArithException_$cshowsPrec_info:
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_entry;
         const 0;
         const 4294967310;
         const 12884901911;
         const S7wbI_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.213737442 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cshow_closure" {
     GHC.Exception.$fExceptionArithException_$cshow_closure:
         const GHC.Exception.$fExceptionArithException_$cshow_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c7wcd: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = R2;
           call GHC.Exception.$w$cshowsPrec_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cshow_info" {
     GHC.Exception.$fExceptionArithException_$cshow_info:
         const GHC.Exception.$fExceptionArithException_$cshow_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7wbI_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.216998505 UTC

[section ""data" . GHC.Exception.$fShowArithException_$cshowList_closure" {
     GHC.Exception.$fShowArithException_$cshowList_closure:
         const GHC.Exception.$fShowArithException_$cshowList_info;
         const 0;
 },
 GHC.Exception.$fShowArithException_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wcp: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Exception.$w$cshowsPrec_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fShowArithException_$cshowList_info" {
     GHC.Exception.$fShowArithException_$cshowList_info:
         const GHC.Exception.$fShowArithException_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S7wbI_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.220199358 UTC

[section ""data" . GHC.Exception.$fShowArithException_closure" {
     GHC.Exception.$fShowArithException_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Exception.$fExceptionArithException_$cshowsPrec_closure+3;
         const GHC.Exception.$fExceptionArithException_$cshow_closure+1;
         const GHC.Exception.$fShowArithException_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.227605093 UTC

[section ""data" . GHC.Exception.$fEqArithException_$c==_closure" {
     GHC.Exception.$fEqArithException_$c==_closure:
         const GHC.Exception.$fEqArithException_$c==_info;
 },
 GHC.Exception.$fEqArithException_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wcM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wcN; else goto c7wcO;
       c7wcN: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqArithException_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wcO: // global
           I64[Sp - 16] = block_c7wcB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7weF; else goto c7wcC;
       u7weF: // global
           call _c7wcB(R1) args: 0, res: 0, upd: 0;
       c7wcC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqArithException_$c==_info" {
     GHC.Exception.$fEqArithException_$c==_info:
         const GHC.Exception.$fEqArithException_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wcB() //  [R1]
         { []
         }
     {offset
       c7wcB: // global
           _s7vXj::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wcF;
               case 2 : goto c7wcG;
               case 3 : goto c7wcH;
               case 4 : goto c7wcI;
               case 5 : goto c7wcJ;
               case 6 : goto c7wcK;
           }
       c7wcK: // global
           I64[Sp + 8] = block_c7we4_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7weE; else goto c7we6;
       u7weE: // global
           call _c7we4(R1) args: 0, res: 0, upd: 0;
       c7we6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wcJ: // global
           I64[Sp + 8] = block_c7wdP_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7weD; else goto c7wdR;
       u7weD: // global
           call _c7wdP(R1) args: 0, res: 0, upd: 0;
       c7wdR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wcI: // global
           I64[Sp + 8] = block_c7wdA_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7weC; else goto c7wdC;
       u7weC: // global
           call _c7wdA(R1) args: 0, res: 0, upd: 0;
       c7wdC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wcH: // global
           I64[Sp + 8] = block_c7wdl_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7weB; else goto c7wdn;
       u7weB: // global
           call _c7wdl(R1) args: 0, res: 0, upd: 0;
       c7wdn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wcG: // global
           I64[Sp + 8] = block_c7wd6_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7weA; else goto c7wd8;
       u7weA: // global
           call _c7wd6(R1) args: 0, res: 0, upd: 0;
       c7wd8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wcF: // global
           I64[Sp + 8] = block_c7wcR_info;
           R1 = _s7vXj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wez; else goto c7wcT;
       u7wez: // global
           call _c7wcR(R1) args: 0, res: 0, upd: 0;
       c7wcT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wcB_info" {
     block_c7wcB_info:
         const _c7wcB;
         const 1;
         const 30;
 },
 _c7we4() //  [R1]
         { []
         }
     {offset
       c7we4: // global
           if (R1 & 7 == 6) goto u7wen; else goto u7weo;
       u7wen: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7weo: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7we4_info" {
     block_c7we4_info:
         const _c7we4;
         const 0;
         const 30;
 },
 _c7wdP() //  [R1]
         { []
         }
     {offset
       c7wdP: // global
           if (R1 & 7 == 5) goto u7wep; else goto u7weq;
       u7wep: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7weq: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wdP_info" {
     block_c7wdP_info:
         const _c7wdP;
         const 0;
         const 30;
 },
 _c7wdA() //  [R1]
         { []
         }
     {offset
       c7wdA: // global
           if (R1 & 7 == 4) goto u7wer; else goto u7wes;
       u7wer: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7wes: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wdA_info" {
     block_c7wdA_info:
         const _c7wdA;
         const 0;
         const 30;
 },
 _c7wdl() //  [R1]
         { []
         }
     {offset
       c7wdl: // global
           if (R1 & 7 == 3) goto u7wet; else goto u7weu;
       u7wet: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7weu: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wdl_info" {
     block_c7wdl_info:
         const _c7wdl;
         const 0;
         const 30;
 },
 _c7wd6() //  [R1]
         { []
         }
     {offset
       c7wd6: // global
           if (R1 & 7 == 2) goto u7wev; else goto u7wew;
       u7wev: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7wew: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wd6_info" {
     block_c7wd6_info:
         const _c7wd6;
         const 0;
         const 30;
 },
 _c7wcR() //  [R1]
         { []
         }
     {offset
       c7wcR: // global
           if (R1 & 7 == 1) goto u7wex; else goto u7wey;
       u7wex: // global
           Sp = Sp + 8;
           call _c7weg() args: 0, res: 0, upd: 0;
       u7wey: // global
           Sp = Sp + 8;
           call _c7wec() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wcR_info" {
     block_c7wcR_info:
         const _c7wcR;
         const 0;
         const 30;
 },
 _c7weg() //  []
         { []
         }
     {offset
       c7weg: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wec() //  []
         { []
         }
     {offset
       c7wec: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.248582502 UTC

[section ""data" . GHC.Exception.$fEqArithException_$c/=_closure" {
     GHC.Exception.$fEqArithException_$c/=_closure:
         const GHC.Exception.$fEqArithException_$c/=_info;
 },
 GHC.Exception.$fEqArithException_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wga: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wgb; else goto c7wgc;
       c7wgb: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqArithException_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wgc: // global
           I64[Sp - 16] = block_c7wfZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wi3; else goto c7wg0;
       u7wi3: // global
           call _c7wfZ(R1) args: 0, res: 0, upd: 0;
       c7wg0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqArithException_$c/=_info" {
     GHC.Exception.$fEqArithException_$c/=_info:
         const GHC.Exception.$fEqArithException_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wfZ() //  [R1]
         { []
         }
     {offset
       c7wfZ: // global
           _s7vXs::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wg3;
               case 2 : goto c7wg4;
               case 3 : goto c7wg5;
               case 4 : goto c7wg6;
               case 5 : goto c7wg7;
               case 6 : goto c7wg8;
           }
       c7wg8: // global
           I64[Sp + 8] = block_c7whs_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wi2; else goto c7whu;
       u7wi2: // global
           call _c7whs(R1) args: 0, res: 0, upd: 0;
       c7whu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wg7: // global
           I64[Sp + 8] = block_c7whd_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wi1; else goto c7whf;
       u7wi1: // global
           call _c7whd(R1) args: 0, res: 0, upd: 0;
       c7whf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wg6: // global
           I64[Sp + 8] = block_c7wgY_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wi0; else goto c7wh0;
       u7wi0: // global
           call _c7wgY(R1) args: 0, res: 0, upd: 0;
       c7wh0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wg5: // global
           I64[Sp + 8] = block_c7wgJ_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7whZ; else goto c7wgL;
       u7whZ: // global
           call _c7wgJ(R1) args: 0, res: 0, upd: 0;
       c7wgL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wg4: // global
           I64[Sp + 8] = block_c7wgu_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7whY; else goto c7wgw;
       u7whY: // global
           call _c7wgu(R1) args: 0, res: 0, upd: 0;
       c7wgw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wg3: // global
           I64[Sp + 8] = block_c7wgf_info;
           R1 = _s7vXs::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7whX; else goto c7wgh;
       u7whX: // global
           call _c7wgf(R1) args: 0, res: 0, upd: 0;
       c7wgh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wfZ_info" {
     block_c7wfZ_info:
         const _c7wfZ;
         const 1;
         const 30;
 },
 _c7whs() //  [R1]
         { []
         }
     {offset
       c7whs: // global
           if (R1 & 7 == 6) goto u7whL; else goto u7whM;
       u7whL: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whM: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7whs_info" {
     block_c7whs_info:
         const _c7whs;
         const 0;
         const 30;
 },
 _c7whd() //  [R1]
         { []
         }
     {offset
       c7whd: // global
           if (R1 & 7 == 5) goto u7whN; else goto u7whO;
       u7whN: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whO: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7whd_info" {
     block_c7whd_info:
         const _c7whd;
         const 0;
         const 30;
 },
 _c7wgY() //  [R1]
         { []
         }
     {offset
       c7wgY: // global
           if (R1 & 7 == 4) goto u7whP; else goto u7whQ;
       u7whP: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whQ: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wgY_info" {
     block_c7wgY_info:
         const _c7wgY;
         const 0;
         const 30;
 },
 _c7wgJ() //  [R1]
         { []
         }
     {offset
       c7wgJ: // global
           if (R1 & 7 == 3) goto u7whR; else goto u7whS;
       u7whR: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whS: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wgJ_info" {
     block_c7wgJ_info:
         const _c7wgJ;
         const 0;
         const 30;
 },
 _c7wgu() //  [R1]
         { []
         }
     {offset
       c7wgu: // global
           if (R1 & 7 == 2) goto u7whT; else goto u7whU;
       u7whT: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whU: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wgu_info" {
     block_c7wgu_info:
         const _c7wgu;
         const 0;
         const 30;
 },
 _c7wgf() //  [R1]
         { []
         }
     {offset
       c7wgf: // global
           if (R1 & 7 == 1) goto u7whV; else goto u7whW;
       u7whV: // global
           Sp = Sp + 8;
           call _c7whE() args: 0, res: 0, upd: 0;
       u7whW: // global
           Sp = Sp + 8;
           call _c7whA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wgf_info" {
     block_c7wgf_info:
         const _c7wgf;
         const 0;
         const 30;
 },
 _c7whE() //  []
         { []
         }
     {offset
       c7whE: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7whA() //  []
         { []
         }
     {offset
       c7whA: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.265042176 UTC

[section ""data" . GHC.Exception.$fEqArithException_closure" {
     GHC.Exception.$fEqArithException_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Exception.$fEqArithException_$c==_closure+2;
         const GHC.Exception.$fEqArithException_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.267805265 UTC

[section ""data" . GHC.Exception.$w$c<_closure" {
     GHC.Exception.$w$c<_closure:
         const GHC.Exception.$w$c<_info;
 },
 GHC.Exception.$w$c<_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7wjv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wjw; else goto c7wjx;
       c7wjw: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c<_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wjx: // global
           I64[Sp - 24] = block_c7wjo_info;
           _s7vXB::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7vXB::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c<_info" {
     GHC.Exception.$w$c<_info:
         const GHC.Exception.$w$c<_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7wjo() //  [R1]
         { []
         }
     {offset
       c7wjo: // global
           _c7wju::P64 = R1 & 7;
           if (_c7wju::P64 < 3) goto u7wjH; else goto c7wjt;
       u7wjH: // global
           if (_c7wju::P64 < 2) goto c7wjr; else goto c7wjs;
       c7wjr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wjs: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Classes.$fOrd[]_$s$c<1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
       c7wjt: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wjo_info" {
     block_c7wjo_info:
         const _c7wjo;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.274646138 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c<_closure" {
     GHC.Exception.$fOrdErrorCall_$c<_closure:
         const GHC.Exception.$fOrdErrorCall_$c<_info;
 },
 GHC.Exception.$fOrdErrorCall_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wk3: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wk7; else goto c7wk8;
       c7wk7: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wk8: // global
           I64[Sp - 16] = block_c7wk0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wkg; else goto c7wk1;
       u7wkg: // global
           call _c7wk0(R1) args: 0, res: 0, upd: 0;
       c7wk1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c<_info" {
     GHC.Exception.$fOrdErrorCall_$c<_info:
         const GHC.Exception.$fOrdErrorCall_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wk0() //  [R1]
         { []
         }
     {offset
       c7wk0: // global
           I64[Sp - 8] = block_c7wk6_info;
           _s7vXI::P64 = P64[R1 + 7];
           _s7vXJ::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vXJ::P64;
           P64[Sp + 8] = _s7vXI::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wkf; else goto c7wka;
       u7wkf: // global
           call _c7wk6(R1) args: 0, res: 0, upd: 0;
       c7wka: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wk0_info" {
     block_c7wk0_info:
         const _c7wk0;
         const 1;
         const 30;
 },
 _c7wk6() //  [R1]
         { []
         }
     {offset
       c7wk6: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c<_entry(R5,
                                          R4,
                                          R3,
                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wk6_info" {
     block_c7wk6_info:
         const _c7wk6;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.281873285 UTC

[section ""data" . GHC.Exception.$w$ccompare_closure" {
     GHC.Exception.$w$ccompare_closure:
         const GHC.Exception.$w$ccompare_info;
 },
 GHC.Exception.$w$ccompare_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7wkH: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wkI; else goto c7wkJ;
       c7wkI: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$ccompare_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wkJ: // global
           I64[Sp - 24] = block_c7wkA_info;
           _s7vXO::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7vXO::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$ccompare_info" {
     GHC.Exception.$w$ccompare_info:
         const GHC.Exception.$w$ccompare_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7wkA() //  [R1]
         { []
         }
     {offset
       c7wkA: // global
           _c7wkG::P64 = R1 & 7;
           if (_c7wkG::P64 < 3) goto u7wkT; else goto c7wkF;
       u7wkT: // global
           if (_c7wkG::P64 < 2) goto c7wkD; else goto c7wkE;
       c7wkD: // global
           R1 = GHC.Types.LT_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wkE: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c7wkF: // global
           R1 = GHC.Types.GT_closure+3;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wkA_info" {
     block_c7wkA_info:
         const _c7wkA;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.288225131 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$ccompare_closure" {
     GHC.Exception.$fOrdErrorCall_$ccompare_closure:
         const GHC.Exception.$fOrdErrorCall_$ccompare_info;
 },
 GHC.Exception.$fOrdErrorCall_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wlf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wlj; else goto c7wlk;
       c7wlj: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wlk: // global
           I64[Sp - 16] = block_c7wlc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wls; else goto c7wld;
       u7wls: // global
           call _c7wlc(R1) args: 0, res: 0, upd: 0;
       c7wld: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$ccompare_info" {
     GHC.Exception.$fOrdErrorCall_$ccompare_info:
         const GHC.Exception.$fOrdErrorCall_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wlc() //  [R1]
         { []
         }
     {offset
       c7wlc: // global
           I64[Sp - 8] = block_c7wli_info;
           _s7vXV::P64 = P64[R1 + 7];
           _s7vXW::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vXW::P64;
           P64[Sp + 8] = _s7vXV::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wlr; else goto c7wlm;
       u7wlr: // global
           call _c7wli(R1) args: 0, res: 0, upd: 0;
       c7wlm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wlc_info" {
     block_c7wlc_info:
         const _c7wlc;
         const 1;
         const 30;
 },
 _c7wli() //  [R1]
         { []
         }
     {offset
       c7wli: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$ccompare_entry(R5,
                                                R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wli_info" {
     block_c7wli_info:
         const _c7wli;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.295451318 UTC

[section ""data" . GHC.Exception.$w$c==_closure" {
     GHC.Exception.$w$c==_closure:
         const GHC.Exception.$w$c==_info;
 },
 GHC.Exception.$w$c==_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7wlS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wlT; else goto c7wlU;
       c7wlT: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c==_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wlU: // global
           I64[Sp - 24] = block_c7wlM_info;
           _s7vY1::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7vY1::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c==_info" {
     GHC.Exception.$w$c==_info:
         const GHC.Exception.$w$c==_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7wlM() //  [R1]
         { []
         }
     {offset
       c7wlM: // global
           if (R1 & 7 == 1) goto c7wlP; else goto c7wlQ;
       c7wlP: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wlQ: // global
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wlM_info" {
     block_c7wlM_info:
         const _c7wlM;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.301582509 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_$c==_closure" {
     GHC.Exception.$fEqErrorCall_$c==_closure:
         const GHC.Exception.$fEqErrorCall_$c==_info;
 },
 GHC.Exception.$fEqErrorCall_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wml: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wmp; else goto c7wmq;
       c7wmp: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqErrorCall_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wmq: // global
           I64[Sp - 16] = block_c7wmi_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wmy; else goto c7wmj;
       u7wmy: // global
           call _c7wmi(R1) args: 0, res: 0, upd: 0;
       c7wmj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqErrorCall_$c==_info" {
     GHC.Exception.$fEqErrorCall_$c==_info:
         const GHC.Exception.$fEqErrorCall_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wmi() //  [R1]
         { []
         }
     {offset
       c7wmi: // global
           I64[Sp - 8] = block_c7wmo_info;
           _s7vY8::P64 = P64[R1 + 7];
           _s7vY9::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vY9::P64;
           P64[Sp + 8] = _s7vY8::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wmx; else goto c7wms;
       u7wmx: // global
           call _c7wmo(R1) args: 0, res: 0, upd: 0;
       c7wms: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wmi_info" {
     block_c7wmi_info:
         const _c7wmi;
         const 1;
         const 30;
 },
 _c7wmo() //  [R1]
         { []
         }
     {offset
       c7wmo: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c==_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wmo_info" {
     block_c7wmo_info:
         const _c7wmo;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.309751104 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_$c/=_closure" {
     GHC.Exception.$fEqErrorCall_$c/=_closure:
         const GHC.Exception.$fEqErrorCall_$c/=_info;
 },
 GHC.Exception.$fEqErrorCall_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wmV: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wmZ; else goto c7wn0;
       c7wmZ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fEqErrorCall_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wn0: // global
           I64[Sp - 16] = block_c7wmS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wny; else goto c7wmT;
       u7wny: // global
           call _c7wmS(R1) args: 0, res: 0, upd: 0;
       c7wmT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fEqErrorCall_$c/=_info" {
     GHC.Exception.$fEqErrorCall_$c/=_info:
         const GHC.Exception.$fEqErrorCall_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wmS() //  [R1]
         { []
         }
     {offset
       c7wmS: // global
           I64[Sp - 8] = block_c7wmY_info;
           _s7vYg::P64 = P64[R1 + 7];
           _s7vYh::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vYh::P64;
           P64[Sp + 8] = _s7vYg::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wnx; else goto c7wn2;
       u7wnx: // global
           call _c7wmY(R1) args: 0, res: 0, upd: 0;
       c7wn2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wmS_info" {
     block_c7wmS_info:
         const _c7wmS;
         const 1;
         const 30;
 },
 _c7wmY() //  [R1]
         { []
         }
     {offset
       c7wmY: // global
           I64[Sp] = block_c7wn6_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 16];
           P64[Sp + 16] = P64[R1 + 15];
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wmY_info" {
     block_c7wmY_info:
         const _c7wmY;
         const 2;
         const 30;
 },
 _c7wn6() //  [R1]
         { []
         }
     {offset
       c7wn6: // global
           if (R1 & 7 == 1) goto u7wnv; else goto c7wni;
       u7wnv: // global
           Sp = Sp + 24;
           call _c7wno() args: 0, res: 0, upd: 0;
       c7wni: // global
           _s7vYk::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7wng_info;
           R3 = _s7vYk::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wn6_info" {
     block_c7wn6_info:
         const _c7wn6;
         const 2;
         const 30;
 },
 _c7wng() //  [R1]
         { []
         }
     {offset
       c7wng: // global
           if (R1 & 7 == 1) goto u7wnw; else goto c7wns;
       u7wnw: // global
           Sp = Sp + 8;
           call _c7wno() args: 0, res: 0, upd: 0;
       c7wns: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wng_info" {
     block_c7wng_info:
         const _c7wng;
         const 0;
         const 30;
 },
 _c7wno() //  []
         { []
         }
     {offset
       c7wno: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.320258275 UTC

[section ""data" . GHC.Exception.$fEqErrorCall_closure" {
     GHC.Exception.$fEqErrorCall_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Exception.$fEqErrorCall_$c==_closure+2;
         const GHC.Exception.$fEqErrorCall_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.323713383 UTC

[section ""data" . GHC.Exception.$w$c<=_closure" {
     GHC.Exception.$w$c<=_closure:
         const GHC.Exception.$w$c<=_info;
 },
 GHC.Exception.$w$c<=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7wol: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wom; else goto c7won;
       c7wom: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c<=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7won: // global
           I64[Sp - 24] = block_c7woe_info;
           _s7vYo::P64 = R3;
           R3 = R2;
           R2 = R4;
           P64[Sp - 16] = _s7vYo::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c<=_info" {
     GHC.Exception.$w$c<=_info:
         const GHC.Exception.$w$c<=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7woe() //  [R1]
         { []
         }
     {offset
       c7woe: // global
           _c7wok::P64 = R1 & 7;
           if (_c7wok::P64 < 3) goto u7woJ; else goto u7woK;
       u7woJ: // global
           if (_c7wok::P64 < 2) goto u7woL; else goto c7woi;
       u7woL: // global
           Sp = Sp + 24;
           call _c7woE() args: 0, res: 0, upd: 0;
       c7woi: // global
           _s7vYq::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7wot_info;
           R3 = P64[Sp + 8];
           R2 = _s7vYq::P64;
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7woK: // global
           Sp = Sp + 24;
           call _c7woj() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7woe_info" {
     block_c7woe_info:
         const _c7woe;
         const 2;
         const 30;
 },
 _c7wot() //  [R1]
         { []
         }
     {offset
       c7wot: // global
           if (R1 & 7 == 1) goto u7woM; else goto u7woN;
       u7woM: // global
           Sp = Sp + 8;
           call _c7woE() args: 0, res: 0, upd: 0;
       u7woN: // global
           Sp = Sp + 8;
           call _c7woj() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wot_info" {
     block_c7wot_info:
         const _c7wot;
         const 0;
         const 30;
 },
 _c7woE() //  []
         { []
         }
     {offset
       c7woE: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7woj() //  []
         { []
         }
     {offset
       c7woj: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.332565238 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c<=_closure" {
     GHC.Exception.$fOrdErrorCall_$c<=_closure:
         const GHC.Exception.$fOrdErrorCall_$c<=_info;
 },
 GHC.Exception.$fOrdErrorCall_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wpn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wpr; else goto c7wps;
       c7wpr: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wps: // global
           I64[Sp - 16] = block_c7wpk_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wpA; else goto c7wpl;
       u7wpA: // global
           call _c7wpk(R1) args: 0, res: 0, upd: 0;
       c7wpl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c<=_info" {
     GHC.Exception.$fOrdErrorCall_$c<=_info:
         const GHC.Exception.$fOrdErrorCall_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wpk() //  [R1]
         { []
         }
     {offset
       c7wpk: // global
           I64[Sp - 8] = block_c7wpq_info;
           _s7vYw::P64 = P64[R1 + 7];
           _s7vYx::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vYx::P64;
           P64[Sp + 8] = _s7vYw::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wpz; else goto c7wpu;
       u7wpz: // global
           call _c7wpq(R1) args: 0, res: 0, upd: 0;
       c7wpu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wpk_info" {
     block_c7wpk_info:
         const _c7wpk;
         const 1;
         const 30;
 },
 _c7wpq() //  [R1]
         { []
         }
     {offset
       c7wpq: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c<=_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wpq_info" {
     block_c7wpq_info:
         const _c7wpq;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.341023606 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$cmax_closure" {
     GHC.Exception.$fOrdErrorCall_$cmax_closure:
         const GHC.Exception.$fOrdErrorCall_$cmax_info;
 },
 GHC.Exception.$fOrdErrorCall_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wpX: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7wq1; else goto c7wq2;
       c7wq1: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wq2: // global
           I64[Sp - 16] = block_c7wpU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wqH; else goto c7wpV;
       u7wqH: // global
           call _c7wpU(R1) args: 0, res: 0, upd: 0;
       c7wpV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$cmax_info" {
     GHC.Exception.$fOrdErrorCall_$cmax_info:
         const GHC.Exception.$fOrdErrorCall_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wpU() //  [R1]
         { []
         }
     {offset
       c7wpU: // global
           I64[Sp - 16] = block_c7wq0_info;
           _s7vYD::P64 = R1;
           _s7vYE::P64 = P64[R1 + 7];
           _s7vYF::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s7vYF::P64;
           P64[Sp] = _s7vYE::P64;
           P64[Sp + 8] = _s7vYD::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wqG; else goto c7wq4;
       u7wqG: // global
           call _c7wq0(R1) args: 0, res: 0, upd: 0;
       c7wq4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wpU_info" {
     block_c7wpU_info:
         const _c7wpU;
         const 1;
         const 30;
 },
 _c7wq0() //  [R1]
         { []
         }
     {offset
       c7wq0: // global
           I64[Sp - 8] = block_c7wq8_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 16] = R1;
           Sp = Sp - 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wq0_info" {
     block_c7wq0_info:
         const _c7wq0;
         const 3;
         const 30;
 },
 _c7wq8() //  [R1]
         { []
         }
     {offset
       c7wq8: // global
           _c7wqz::P64 = R1 & 7;
           if (_c7wqz::P64 < 3) goto u7wqB; else goto u7wqC;
       u7wqB: // global
           if (_c7wqz::P64 < 2) goto u7wqD; else goto c7wqk;
       u7wqD: // global
           Sp = Sp + 32;
           call _c7wqu() args: 0, res: 0, upd: 0;
       c7wqk: // global
           _s7vYF::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7wqi_info;
           R3 = _s7vYF::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7wqC: // global
           Sp = Sp + 24;
           call _c7wqy() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wq8_info" {
     block_c7wq8_info:
         const _c7wq8;
         const 4;
         const 30;
 },
 _c7wqi() //  [R1]
         { []
         }
     {offset
       c7wqi: // global
           if (R1 & 7 == 1) goto u7wqE; else goto u7wqF;
       u7wqE: // global
           Sp = Sp + 16;
           call _c7wqu() args: 0, res: 0, upd: 0;
       u7wqF: // global
           Sp = Sp + 8;
           call _c7wqy() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wqi_info" {
     block_c7wqi_info:
         const _c7wqi;
         const 2;
         const 30;
 },
 _c7wqu() //  []
         { []
         }
     {offset
       c7wqu: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wqy() //  []
         { []
         }
     {offset
       c7wqy: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.354253214 UTC

[section ""data" . GHC.Exception.$w$c>=_closure" {
     GHC.Exception.$w$c>=_closure:
         const GHC.Exception.$w$c>=_info;
 },
 GHC.Exception.$w$c>=_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c7wrw: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wrx; else goto c7wry;
       c7wrx: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$w$c>=_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wry: // global
           I64[Sp - 24] = block_c7wrp_info;
           _s7vYM::P64 = R3;
           R3 = R4;
           R2 = R2;
           P64[Sp - 16] = _s7vYM::P64;
           P64[Sp - 8] = R5;
           Sp = Sp - 24;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$w$c>=_info" {
     GHC.Exception.$w$c>=_info:
         const GHC.Exception.$w$c>=_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c7wrp() //  [R1]
         { []
         }
     {offset
       c7wrp: // global
           _c7wrv::P64 = R1 & 7;
           if (_c7wrv::P64 < 3) goto u7wrU; else goto u7wrV;
       u7wrU: // global
           if (_c7wrv::P64 < 2) goto u7wrW; else goto c7wrt;
       u7wrW: // global
           Sp = Sp + 24;
           call _c7wrP() args: 0, res: 0, upd: 0;
       c7wrt: // global
           _s7vYO::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7wrE_info;
           R3 = _s7vYO::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7wrV: // global
           Sp = Sp + 24;
           call _c7wru() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wrp_info" {
     block_c7wrp_info:
         const _c7wrp;
         const 2;
         const 30;
 },
 _c7wrE() //  [R1]
         { []
         }
     {offset
       c7wrE: // global
           if (R1 & 7 == 1) goto u7wrX; else goto u7wrY;
       u7wrX: // global
           Sp = Sp + 8;
           call _c7wrP() args: 0, res: 0, upd: 0;
       u7wrY: // global
           Sp = Sp + 8;
           call _c7wru() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wrE_info" {
     block_c7wrE_info:
         const _c7wrE;
         const 0;
         const 30;
 },
 _c7wrP() //  []
         { []
         }
     {offset
       c7wrP: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wru() //  []
         { []
         }
     {offset
       c7wru: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.363524484 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c>=_closure" {
     GHC.Exception.$fOrdErrorCall_$c>=_closure:
         const GHC.Exception.$fOrdErrorCall_$c>=_info;
 },
 GHC.Exception.$fOrdErrorCall_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wsy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wsC; else goto c7wsD;
       c7wsC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wsD: // global
           I64[Sp - 16] = block_c7wsv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wsL; else goto c7wsw;
       u7wsL: // global
           call _c7wsv(R1) args: 0, res: 0, upd: 0;
       c7wsw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c>=_info" {
     GHC.Exception.$fOrdErrorCall_$c>=_info:
         const GHC.Exception.$fOrdErrorCall_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wsv() //  [R1]
         { []
         }
     {offset
       c7wsv: // global
           I64[Sp - 8] = block_c7wsB_info;
           _s7vYU::P64 = P64[R1 + 7];
           _s7vYV::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _s7vYV::P64;
           P64[Sp + 8] = _s7vYU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wsK; else goto c7wsF;
       u7wsK: // global
           call _c7wsB(R1) args: 0, res: 0, upd: 0;
       c7wsF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wsv_info" {
     block_c7wsv_info:
         const _c7wsv;
         const 1;
         const 30;
 },
 _c7wsB() //  [R1]
         { []
         }
     {offset
       c7wsB: // global
           R5 = P64[R1 + 15];
           R4 = P64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Exception.$w$c>=_entry(R5,
                                           R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wsB_info" {
     block_c7wsB_info:
         const _c7wsB;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.370114904 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$c>_closure" {
     GHC.Exception.$fOrdErrorCall_$c>_closure:
         const GHC.Exception.$fOrdErrorCall_$c>_info;
 },
 GHC.Exception.$fOrdErrorCall_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wt5: // global
           _s7vZ0::P64 = R3;
           R3 = R2;
           R2 = _s7vZ0::P64;
           call GHC.Exception.$fOrdErrorCall_$c<_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$c>_info" {
     GHC.Exception.$fOrdErrorCall_$c>_info:
         const GHC.Exception.$fOrdErrorCall_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.375344452 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_$cmin_closure" {
     GHC.Exception.$fOrdErrorCall_$cmin_closure:
         const GHC.Exception.$fOrdErrorCall_$cmin_info;
 },
 GHC.Exception.$fOrdErrorCall_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wtj: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7wtn; else goto c7wto;
       c7wtn: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdErrorCall_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wto: // global
           I64[Sp - 16] = block_c7wtg_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wu3; else goto c7wth;
       u7wu3: // global
           call _c7wtg(R1) args: 0, res: 0, upd: 0;
       c7wth: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdErrorCall_$cmin_info" {
     GHC.Exception.$fOrdErrorCall_$cmin_info:
         const GHC.Exception.$fOrdErrorCall_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wtg() //  [R1]
         { []
         }
     {offset
       c7wtg: // global
           I64[Sp - 16] = block_c7wtm_info;
           _s7vZ3::P64 = R1;
           _s7vZ4::P64 = P64[R1 + 7];
           _s7vZ5::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp - 8] = _s7vZ5::P64;
           P64[Sp] = _s7vZ4::P64;
           P64[Sp + 8] = _s7vZ3::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wu2; else goto c7wtq;
       u7wu2: // global
           call _c7wtm(R1) args: 0, res: 0, upd: 0;
       c7wtq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wtg_info" {
     block_c7wtg_info:
         const _c7wtg;
         const 1;
         const 30;
 },
 _c7wtm() //  [R1]
         { []
         }
     {offset
       c7wtm: // global
           I64[Sp - 8] = block_c7wtu_info;
           R3 = P64[Sp + 16];
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 16] = R1;
           Sp = Sp - 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wtm_info" {
     block_c7wtm_info:
         const _c7wtm;
         const 3;
         const 30;
 },
 _c7wtu() //  [R1]
         { []
         }
     {offset
       c7wtu: // global
           _c7wtV::P64 = R1 & 7;
           if (_c7wtV::P64 < 3) goto u7wtX; else goto u7wtY;
       u7wtX: // global
           if (_c7wtV::P64 < 2) goto u7wtZ; else goto c7wtG;
       u7wtZ: // global
           Sp = Sp + 24;
           call _c7wtQ() args: 0, res: 0, upd: 0;
       c7wtG: // global
           _s7vZ5::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c7wtE_info;
           R3 = _s7vZ5::P64;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
       u7wtY: // global
           Sp = Sp + 32;
           call _c7wtU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wtu_info" {
     block_c7wtu_info:
         const _c7wtu;
         const 4;
         const 30;
 },
 _c7wtE() //  [R1]
         { []
         }
     {offset
       c7wtE: // global
           if (R1 & 7 == 1) goto u7wu0; else goto u7wu1;
       u7wu0: // global
           Sp = Sp + 8;
           call _c7wtQ() args: 0, res: 0, upd: 0;
       u7wu1: // global
           Sp = Sp + 16;
           call _c7wtU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wtE_info" {
     block_c7wtE_info:
         const _c7wtE;
         const 2;
         const 30;
 },
 _c7wtQ() //  []
         { []
         }
     {offset
       c7wtQ: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wtU() //  []
         { []
         }
     {offset
       c7wtU: // global
           R1 = P64[Sp] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.387241643 UTC

[section ""data" . GHC.Exception.$fOrdErrorCall_closure" {
     GHC.Exception.$fOrdErrorCall_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.Exception.$fEqErrorCall_closure+1;
         const GHC.Exception.$fOrdErrorCall_$ccompare_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c<_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c<=_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c>_closure+2;
         const GHC.Exception.$fOrdErrorCall_$c>=_closure+2;
         const GHC.Exception.$fOrdErrorCall_$cmax_closure+2;
         const GHC.Exception.$fOrdErrorCall_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.389728813 UTC

[section ""data" . GHC.Exception.$dmdisplayException_closure" {
     GHC.Exception.$dmdisplayException_closure:
         const GHC.Exception.$dmdisplayException_info;
 },
 GHC.Exception.$dmdisplayException_entry() //  [R2]
         { []
         }
     {offset
       c7wuO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7wuP; else goto c7wuQ;
       c7wuP: // global
           R2 = R2;
           R1 = GHC.Exception.$dmdisplayException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7wuQ: // global
           I64[Sp - 8] = block_c7wuM_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Exception.$p2Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmdisplayException_info" {
     GHC.Exception.$dmdisplayException_info:
         const GHC.Exception.$dmdisplayException_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7wuM() //  [R1]
         { []
         }
     {offset
       c7wuM: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Show.show_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wuM_info" {
     block_c7wuM_info:
         const _c7wuM;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.395736805 UTC

[section ""data" . GHC.Exception.$dmfromException_closure" {
     GHC.Exception.$dmfromException_closure:
         const GHC.Exception.$dmfromException_info;
         const 0;
 },
 GHC.Exception.$dmfromException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wva: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wvi; else goto c7wvj;
       c7wvi: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$dmfromException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wvj: // global
           I64[Sp - 16] = block_c7wv7_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wvF; else goto c7wv8;
       u7wvF: // global
           call _c7wv7(R1) args: 0, res: 0, upd: 0;
       c7wv8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmfromException_info" {
     GHC.Exception.$dmfromException_info:
         const GHC.Exception.$dmfromException_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S7wbI_srt+56;
 },
 _c7wv7() //  [R1]
         { []
         }
     {offset
       c7wv7: // global
           I64[Sp - 8] = block_c7wvd_info;
           R2 = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           P64[Sp + 8] = P64[R1 + 7];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wv7_info" {
     block_c7wv7_info:
         const _c7wv7;
         const 1;
         const 4294967326;
         const S7wbI_srt+56;
 },
 _c7wvd() //  [R1]
         { []
         }
     {offset
       c7wvd: // global
           I64[Sp] = block_c7wvh_info;
           R2 = P64[Sp + 16];
           P64[Sp + 16] = R1;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wvd_info" {
     block_c7wvd_info:
         const _c7wvd;
         const 2;
         const 4294967326;
         const S7wbI_srt+56;
 },
 _c7wvh() //  [R1]
         { []
         }
     {offset
       c7wvh: // global
           I64[Sp] = block_c7wvp_info;
           R3 = P64[Sp + 16];
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wvh_info" {
     block_c7wvh_info:
         const _c7wvh;
         const 2;
         const 4294967326;
         const S7wbI_srt+56;
 },
 _c7wvp() //  [R1]
         { []
         }
     {offset
       c7wvp: // global
           if (R1 & 7 == 1) goto c7wvw; else goto c7wvA;
       c7wvw: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wvA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7wvD; else goto c7wvC;
       c7wvD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7wvC: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wvp_info" {
     block_c7wvp_info:
         const _c7wvp;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.405682959 UTC

[section ""data" . GHC.Exception.$dmtoException_closure" {
     GHC.Exception.$dmtoException_closure:
         const GHC.Exception.$dmtoException_info;
 },
 GHC.Exception.$dmtoException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wwg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7wwk; else goto c7wwj;
       c7wwk: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$dmtoException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wwj: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$dmtoException_info" {
     GHC.Exception.$dmtoException_info:
         const GHC.Exception.$dmtoException_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.409432662 UTC

[section ""data" . GHC.Exception.$bErrorCall_closure" {
     GHC.Exception.$bErrorCall_closure:
         const GHC.Exception.$bErrorCall_info;
 },
 GHC.Exception.$bErrorCall_entry() //  [R2]
         { []
         }
     {offset
       c7www: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7wwA; else goto c7wwz;
       c7wwA: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$bErrorCall_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7wwz: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$bErrorCall_info" {
     GHC.Exception.$bErrorCall_info:
         const GHC.Exception.$bErrorCall_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.413784153 UTC

[section ""data" . GHC.Exception.throw_closure" {
     GHC.Exception.throw_closure:
         const GHC.Exception.throw_info;
 },
 sat_s7vZo_entry() //  [R1]
         { []
         }
     {offset
       c7wwR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7wwS; else goto c7wwT;
       c7wwS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wwT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call GHC.Exception.toException_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7vZo_info" {
     sat_s7vZo_info:
         const sat_s7vZo_entry;
         const 2;
         const 18;
 },
 GHC.Exception.throw_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wwU: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7wwY; else goto c7wwX;
       c7wwY: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.throw_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wwX: // global
           I64[Hp - 24] = sat_s7vZo_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.throw_info" {
     GHC.Exception.throw_info:
         const GHC.Exception.throw_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.419864369 UTC

[section ""data" . GHC.Exception.$mErrorCall_closure" {
     GHC.Exception.$mErrorCall_closure:
         const GHC.Exception.$mErrorCall_info;
 },
 GHC.Exception.$mErrorCall_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7wxi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wxj; else goto c7wxk;
       c7wxj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$mErrorCall_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wxk: // global
           I64[Sp - 16] = block_c7wxf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wxo; else goto c7wxg;
       u7wxo: // global
           call _c7wxf(R1) args: 0, res: 0, upd: 0;
       c7wxg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$mErrorCall_info" {
     GHC.Exception.$mErrorCall_info:
         const GHC.Exception.$mErrorCall_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c7wxf() //  [R1]
         { []
         }
     {offset
       c7wxf: // global
           R2 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wxf_info" {
     block_c7wxf_info:
         const _c7wxf;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.424574103 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException12_bytes" {
     GHC.Exception.errorCallWithCallStackException12_bytes:
         I8[] [67,97,108,108,83,116,97,99,107,32,40,102,114,111,109,32,45,112,114,111,102,41,58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.426861507 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException11_closure" {
     GHC.Exception.errorCallWithCallStackException11_closure:
         const GHC.Exception.errorCallWithCallStackException11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException11_entry() //  [R1]
         { []
         }
     {offset
       c7wxG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wxH; else goto c7wxI;
       c7wxH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wxI: // global
           (_c7wxD::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wxD::I64 == 0) goto c7wxF; else goto c7wxE;
       c7wxF: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wxE: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wxD::I64;
           R2 = GHC.Exception.errorCallWithCallStackException12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException11_info" {
     GHC.Exception.errorCallWithCallStackException11_info:
         const GHC.Exception.errorCallWithCallStackException11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.430705305 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException5_bytes" {
     GHC.Exception.errorCallWithCallStackException5_bytes:
         I8[] [32,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.432820671 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException10_closure" {
     GHC.Exception.errorCallWithCallStackException10_closure:
         const GHC.Exception.errorCallWithCallStackException10_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException10_entry() //  [R1]
         { []
         }
     {offset
       c7wxY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wxZ; else goto c7wy0;
       c7wxZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wy0: // global
           (_c7wxV::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wxV::I64 == 0) goto c7wxX; else goto c7wxW;
       c7wxX: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wxW: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wxV::I64;
           R2 = GHC.Exception.errorCallWithCallStackException5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException10_info" {
     GHC.Exception.errorCallWithCallStackException10_info:
         const GHC.Exception.errorCallWithCallStackException10_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.436644418 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException9_closure" {
     GHC.Exception.errorCallWithCallStackException9_closure:
         const GHC.Exception.errorCallWithCallStackException9_info;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException9_entry() //  [R2]
         { []
         }
     {offset
       c7wyd: // global
           R3 = R2;
           R2 = GHC.Exception.errorCallWithCallStackException10_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException9_info" {
     GHC.Exception.errorCallWithCallStackException9_info:
         const GHC.Exception.errorCallWithCallStackException9_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S7wbI_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.441208238 UTC

[section ""data" . GHC.Exception.showCCSStack_closure" {
     GHC.Exception.showCCSStack_closure:
         const GHC.Exception.showCCSStack_info;
         const 0;
 },
 sat_s7vZA_entry() //  [R1]
         { []
         }
     {offset
       c7wyA: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7wyB; else goto c7wyC;
       c7wyB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wyC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7wyy_info;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7vZA_info" {
     sat_s7vZA_info:
         const sat_s7vZA_entry;
         const 1;
         const 4294967312;
         const S7wbI_srt+80;
 },
 _c7wyy() //  [R1]
         { []
         }
     {offset
       c7wyy: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException9_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7wyy_info" {
     block_c7wyy_info:
         const _c7wyy;
         const 0;
         const 4294967326;
         const S7wbI_srt+80;
 },
 GHC.Exception.showCCSStack_entry() //  [R2]
         { []
         }
     {offset
       c7wyK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7wyL; else goto c7wyM;
       c7wyL: // global
           R2 = R2;
           R1 = GHC.Exception.showCCSStack_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7wyM: // global
           I64[Sp - 8] = block_c7wyo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7wyT; else goto c7wyp;
       u7wyT: // global
           call _c7wyo(R1) args: 0, res: 0, upd: 0;
       c7wyp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.showCCSStack_info" {
     GHC.Exception.showCCSStack_info:
         const GHC.Exception.showCCSStack_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7wbI_srt+80;
 },
 _c7wyo() //  [R1]
         { []
         }
     {offset
       c7wyo: // global
           if (R1 & 7 == 1) goto c7wyH; else goto c7wyI;
       c7wyH: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wyI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7wyS; else goto c7wyR;
       c7wyS: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7wyR: // global
           I64[Hp - 40] = sat_s7vZA_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException11_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wyo_info" {
     block_c7wyo_info:
         const _c7wyo;
         const 0;
         const 21474836510;
         const S7wbI_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.453898724 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$ccompare_closure" {
     GHC.Exception.$fOrdArithException_$ccompare_closure:
         const GHC.Exception.$fOrdArithException_$ccompare_info;
 },
 GHC.Exception.$fOrdArithException_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wzC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wzD; else goto c7wzE;
       c7wzD: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wzE: // global
           I64[Sp - 16] = block_c7wzr_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wCH; else goto c7wzs;
       u7wCH: // global
           call _c7wzr(R1) args: 0, res: 0, upd: 0;
       c7wzs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$ccompare_info" {
     GHC.Exception.$fOrdArithException_$ccompare_info:
         const GHC.Exception.$fOrdArithException_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wzr() //  [R1]
         { []
         }
     {offset
       c7wzr: // global
           _s7vZC::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wzv;
               case 2 : goto c7wzw;
               case 3 : goto c7wzx;
               case 4 : goto c7wzy;
               case 5 : goto c7wzz;
               case 6 : goto c7wzA;
           }
       c7wzA: // global
           I64[Sp + 8] = block_c7wBO_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCG; else goto c7wBQ;
       u7wCG: // global
           call _c7wBO(R1) args: 0, res: 0, upd: 0;
       c7wBQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wzz: // global
           I64[Sp + 8] = block_c7wBv_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCF; else goto c7wBx;
       u7wCF: // global
           call _c7wBv(R1) args: 0, res: 0, upd: 0;
       c7wBx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wzy: // global
           I64[Sp + 8] = block_c7wB8_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCE; else goto c7wBa;
       u7wCE: // global
           call _c7wB8(R1) args: 0, res: 0, upd: 0;
       c7wBa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wzx: // global
           I64[Sp + 8] = block_c7wAH_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCD; else goto c7wAJ;
       u7wCD: // global
           call _c7wAH(R1) args: 0, res: 0, upd: 0;
       c7wAJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wzw: // global
           I64[Sp + 8] = block_c7wAc_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCC; else goto c7wAe;
       u7wCC: // global
           call _c7wAc(R1) args: 0, res: 0, upd: 0;
       c7wAe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wzv: // global
           I64[Sp + 8] = block_c7wzH_info;
           R1 = _s7vZC::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wCB; else goto c7wzJ;
       u7wCB: // global
           call _c7wzH(R1) args: 0, res: 0, upd: 0;
       c7wzJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wzr_info" {
     block_c7wzr_info:
         const _c7wzr;
         const 1;
         const 30;
 },
 _c7wBO() //  [R1]
         { []
         }
     {offset
       c7wBO: // global
           if (R1 & 7 == 6) goto u7wCc; else goto u7wCd;
       u7wCc: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
       u7wCd: // global
           Sp = Sp + 8;
           call _c7wBW() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wBO_info" {
     block_c7wBO_info:
         const _c7wBO;
         const 0;
         const 30;
 },
 _c7wBv() //  [R1]
         { []
         }
     {offset
       c7wBv: // global
           _c7wC2::P64 = R1 & 7;
           if (_c7wC2::P64 != 5) goto u7wCb; else goto u7wCe;
       u7wCb: // global
           if (_c7wC2::P64 != 6) goto u7wCg; else goto u7wCf;
       u7wCg: // global
           Sp = Sp + 8;
           call _c7wBW() args: 0, res: 0, upd: 0;
       u7wCf: // global
           Sp = Sp + 8;
           call _c7wBL() args: 0, res: 0, upd: 0;
       u7wCe: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wBv_info" {
     block_c7wBv_info:
         const _c7wBv;
         const 0;
         const 30;
 },
 _c7wB8() //  [R1]
         { []
         }
     {offset
       c7wB8: // global
           _c7wC3::P64 = R1 & 7;
           if (_c7wC3::P64 < 5) goto u7wC9; else goto u7wCa;
       u7wC9: // global
           if (_c7wC3::P64 < 4) goto u7wCi; else goto u7wCh;
       u7wCi: // global
           Sp = Sp + 8;
           call _c7wBW() args: 0, res: 0, upd: 0;
       u7wCh: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
       u7wCa: // global
           if (_c7wC3::P64 < 6) goto u7wCk; else goto u7wCk;
       u7wCk: // global
           Sp = Sp + 8;
           call _c7wBL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wB8_info" {
     block_c7wB8_info:
         const _c7wB8;
         const 0;
         const 30;
 },
 _c7wAH() //  [R1]
         { []
         }
     {offset
       c7wAH: // global
           _c7wC4::P64 = R1 & 7;
           if (_c7wC4::P64 < 4) goto u7wC7; else goto u7wC8;
       u7wC7: // global
           if (_c7wC4::P64 < 3) goto u7wCm; else goto u7wCl;
       u7wCm: // global
           Sp = Sp + 8;
           call _c7wBW() args: 0, res: 0, upd: 0;
       u7wCl: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
       u7wC8: // global
           if (_c7wC4::P64 != 5) goto u7wCo; else goto u7wCo;
       u7wCo: // global
           Sp = Sp + 8;
           call _c7wBL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wAH_info" {
     block_c7wAH_info:
         const _c7wAH;
         const 0;
         const 30;
 },
 _c7wAc() //  [R1]
         { []
         }
     {offset
       c7wAc: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7wCp;
               case 2 : goto u7wCq;
               case 3, 4, 5, 6 : goto u7wCu;
           }
       u7wCu: // global
           Sp = Sp + 8;
           call _c7wBL() args: 0, res: 0, upd: 0;
       u7wCq: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
       u7wCp: // global
           Sp = Sp + 8;
           call _c7wBW() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wAc_info" {
     block_c7wAc_info:
         const _c7wAc;
         const 0;
         const 30;
 },
 _c7wBW() //  []
         { []
         }
     {offset
       c7wBW: // global
           R1 = GHC.Types.GT_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wzH() //  [R1]
         { []
         }
     {offset
       c7wzH: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7wCv;
               case 2, 3, 4, 5, 6 : goto u7wCA;
           }
       u7wCA: // global
           Sp = Sp + 8;
           call _c7wBL() args: 0, res: 0, upd: 0;
       u7wCv: // global
           Sp = Sp + 8;
           call _c7wC0() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wzH_info" {
     block_c7wzH_info:
         const _c7wzH;
         const 0;
         const 30;
 },
 _c7wBL() //  []
         { []
         }
     {offset
       c7wBL: // global
           R1 = GHC.Types.LT_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wC0() //  []
         { []
         }
     {offset
       c7wC0: // global
           R1 = GHC.Types.EQ_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.475550833 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c<_closure" {
     GHC.Exception.$fOrdArithException_$c<_closure:
         const GHC.Exception.$fOrdArithException_$c<_info;
 },
 GHC.Exception.$fOrdArithException_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wEn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wEo; else goto c7wEp;
       c7wEo: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wEp: // global
           I64[Sp - 16] = block_c7wEc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wGX; else goto c7wEd;
       u7wGX: // global
           call _c7wEc(R1) args: 0, res: 0, upd: 0;
       c7wEd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c<_info" {
     GHC.Exception.$fOrdArithException_$c<_info:
         const GHC.Exception.$fOrdArithException_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wEc() //  [R1]
         { []
         }
     {offset
       c7wEc: // global
           _s7vZL::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wEg;
               case 2 : goto c7wEh;
               case 3 : goto c7wEi;
               case 4 : goto c7wEj;
               case 5 : goto c7wEk;
               case 6 : goto c7wEl;
           }
       c7wEl: // global
           I64[Sp + 8] = block_c7wGj_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGW; else goto c7wGl;
       u7wGW: // global
           call _c7wGj() args: 0, res: 0, upd: 0;
       c7wGl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wEk: // global
           I64[Sp + 8] = block_c7wG4_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGV; else goto c7wG6;
       u7wGV: // global
           call _c7wG4(R1) args: 0, res: 0, upd: 0;
       c7wG6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wEj: // global
           I64[Sp + 8] = block_c7wFL_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGU; else goto c7wFN;
       u7wGU: // global
           call _c7wFL(R1) args: 0, res: 0, upd: 0;
       c7wFN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wEi: // global
           I64[Sp + 8] = block_c7wFo_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGT; else goto c7wFq;
       u7wGT: // global
           call _c7wFo(R1) args: 0, res: 0, upd: 0;
       c7wFq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wEh: // global
           I64[Sp + 8] = block_c7wEX_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGS; else goto c7wEZ;
       u7wGS: // global
           call _c7wEX(R1) args: 0, res: 0, upd: 0;
       c7wEZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wEg: // global
           I64[Sp + 8] = block_c7wEs_info;
           R1 = _s7vZL::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wGR; else goto c7wEu;
       u7wGR: // global
           call _c7wEs(R1) args: 0, res: 0, upd: 0;
       c7wEu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wEc_info" {
     block_c7wEc_info:
         const _c7wEc;
         const 1;
         const 30;
 },
 _c7wGj() //  []
         { []
         }
     {offset
       c7wGj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wGj_info" {
     block_c7wGj_info:
         const _c7wGj;
         const 0;
         const 30;
 },
 _c7wG4() //  [R1]
         { []
         }
     {offset
       c7wG4: // global
           if (R1 & 7 == 6) goto u7wGz; else goto u7wGA;
       u7wGz: // global
           Sp = Sp + 8;
           call _c7wGg() args: 0, res: 0, upd: 0;
       u7wGA: // global
           Sp = Sp + 8;
           call _c7wGc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wG4_info" {
     block_c7wG4_info:
         const _c7wG4;
         const 0;
         const 30;
 },
 _c7wFL() //  [R1]
         { []
         }
     {offset
       c7wFL: // global
           _c7wGr::P64 = R1 & 7;
           if (_c7wGr::P64 != 5) goto u7wGy; else goto u7wGB;
       u7wGy: // global
           if (_c7wGr::P64 != 6) goto u7wGD; else goto u7wGC;
       u7wGD: // global
           Sp = Sp + 8;
           call _c7wGc() args: 0, res: 0, upd: 0;
       u7wGC: // global
           Sp = Sp + 8;
           goto u7wH6;
       u7wGB: // global
           Sp = Sp + 8;
           goto u7wH6;
       u7wH6: // global
           call _c7wGg() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wFL_info" {
     block_c7wFL_info:
         const _c7wFL;
         const 0;
         const 30;
 },
 _c7wFo() //  [R1]
         { []
         }
     {offset
       c7wFo: // global
           _c7wGs::P64 = R1 & 7;
           if (_c7wGs::P64 < 4) goto u7wGE; else goto u7wGx;
       u7wGE: // global
           Sp = Sp + 8;
           call _c7wGc() args: 0, res: 0, upd: 0;
       u7wGx: // global
           if (_c7wGs::P64 != 5) goto u7wGG; else goto u7wGG;
       u7wGG: // global
           Sp = Sp + 8;
           call _c7wGg() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wFo_info" {
     block_c7wFo_info:
         const _c7wFo;
         const 0;
         const 30;
 },
 _c7wEX() //  [R1]
         { []
         }
     {offset
       c7wEX: // global
           _c7wGt::P64 = R1 & 7;
           if (_c7wGt::P64 < 6) goto u7wGv; else goto u7wGH;
       u7wGv: // global
           if (_c7wGt::P64 < 3) goto u7wGI; else goto u7wGw;
       u7wGI: // global
           Sp = Sp + 8;
           call _c7wGc() args: 0, res: 0, upd: 0;
       u7wGw: // global
           if (_c7wGt::P64 != 4) goto u7wGK; else goto u7wGK;
       u7wGK: // global
           Sp = Sp + 8;
           goto u7wH2;
       u7wGH: // global
           Sp = Sp + 8;
           goto u7wH2;
       u7wH2: // global
           call _c7wGg() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wEX_info" {
     block_c7wEX_info:
         const _c7wEX;
         const 0;
         const 30;
 },
 _c7wEs() //  [R1]
         { []
         }
     {offset
       c7wEs: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7wGL;
               case 2, 3, 4, 5, 6 : goto u7wGQ;
           }
       u7wGQ: // global
           Sp = Sp + 8;
           call _c7wGg() args: 0, res: 0, upd: 0;
       u7wGL: // global
           Sp = Sp + 8;
           call _c7wGc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wEs_info" {
     block_c7wEs_info:
         const _c7wEs;
         const 0;
         const 30;
 },
 _c7wGg() //  []
         { []
         }
     {offset
       c7wGg: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wGc() //  []
         { []
         }
     {offset
       c7wGc: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.495684367 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c<=_closure" {
     GHC.Exception.$fOrdArithException_$c<=_closure:
         const GHC.Exception.$fOrdArithException_$c<=_info;
 },
 GHC.Exception.$fOrdArithException_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wIs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wIt; else goto c7wIu;
       c7wIt: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wIu: // global
           I64[Sp - 16] = block_c7wIh_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wL2; else goto c7wIi;
       u7wL2: // global
           call _c7wIh(R1) args: 0, res: 0, upd: 0;
       c7wIi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c<=_info" {
     GHC.Exception.$fOrdArithException_$c<=_info:
         const GHC.Exception.$fOrdArithException_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wIh() //  [R1]
         { []
         }
     {offset
       c7wIh: // global
           _s7vZT::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wIl;
               case 2 : goto c7wIm;
               case 3 : goto c7wIn;
               case 4 : goto c7wIo;
               case 5 : goto c7wIp;
               case 6 : goto c7wIq;
           }
       c7wIq: // global
           I64[Sp + 8] = block_c7wKo_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wL1; else goto c7wKq;
       u7wL1: // global
           call _c7wKo() args: 0, res: 0, upd: 0;
       c7wKq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wIp: // global
           I64[Sp + 8] = block_c7wK9_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wL0; else goto c7wKb;
       u7wL0: // global
           call _c7wK9(R1) args: 0, res: 0, upd: 0;
       c7wKb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wIo: // global
           I64[Sp + 8] = block_c7wJQ_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wKZ; else goto c7wJS;
       u7wKZ: // global
           call _c7wJQ(R1) args: 0, res: 0, upd: 0;
       c7wJS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wIn: // global
           I64[Sp + 8] = block_c7wJt_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wKY; else goto c7wJv;
       u7wKY: // global
           call _c7wJt(R1) args: 0, res: 0, upd: 0;
       c7wJv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wIm: // global
           I64[Sp + 8] = block_c7wJ2_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wKX; else goto c7wJ4;
       u7wKX: // global
           call _c7wJ2(R1) args: 0, res: 0, upd: 0;
       c7wJ4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wIl: // global
           I64[Sp + 8] = block_c7wIx_info;
           R1 = _s7vZT::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wKW; else goto c7wIz;
       u7wKW: // global
           call _c7wIx(R1) args: 0, res: 0, upd: 0;
       c7wIz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wIh_info" {
     block_c7wIh_info:
         const _c7wIh;
         const 1;
         const 30;
 },
 _c7wKo() //  []
         { []
         }
     {offset
       c7wKo: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wKo_info" {
     block_c7wKo_info:
         const _c7wKo;
         const 0;
         const 30;
 },
 _c7wK9() //  [R1]
         { []
         }
     {offset
       c7wK9: // global
           if (R1 & 7 == 6) goto u7wKE; else goto u7wKF;
       u7wKE: // global
           Sp = Sp + 8;
           call _c7wKl() args: 0, res: 0, upd: 0;
       u7wKF: // global
           Sp = Sp + 8;
           call _c7wKh() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wK9_info" {
     block_c7wK9_info:
         const _c7wK9;
         const 0;
         const 30;
 },
 _c7wJQ() //  [R1]
         { []
         }
     {offset
       c7wJQ: // global
           _c7wKw::P64 = R1 & 7;
           if (_c7wKw::P64 != 5) goto u7wKD; else goto u7wKG;
       u7wKD: // global
           if (_c7wKw::P64 != 6) goto u7wKI; else goto u7wKH;
       u7wKI: // global
           Sp = Sp + 8;
           call _c7wKh() args: 0, res: 0, upd: 0;
       u7wKH: // global
           Sp = Sp + 8;
           goto u7wLb;
       u7wKG: // global
           Sp = Sp + 8;
           goto u7wLb;
       u7wLb: // global
           call _c7wKl() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wJQ_info" {
     block_c7wJQ_info:
         const _c7wJQ;
         const 0;
         const 30;
 },
 _c7wJt() //  [R1]
         { []
         }
     {offset
       c7wJt: // global
           _c7wKx::P64 = R1 & 7;
           if (_c7wKx::P64 < 4) goto u7wKJ; else goto u7wKC;
       u7wKJ: // global
           Sp = Sp + 8;
           call _c7wKh() args: 0, res: 0, upd: 0;
       u7wKC: // global
           if (_c7wKx::P64 != 5) goto u7wKL; else goto u7wKL;
       u7wKL: // global
           Sp = Sp + 8;
           call _c7wKl() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wJt_info" {
     block_c7wJt_info:
         const _c7wJt;
         const 0;
         const 30;
 },
 _c7wJ2() //  [R1]
         { []
         }
     {offset
       c7wJ2: // global
           _c7wKy::P64 = R1 & 7;
           if (_c7wKy::P64 < 6) goto u7wKA; else goto u7wKM;
       u7wKA: // global
           if (_c7wKy::P64 < 3) goto u7wKN; else goto u7wKB;
       u7wKN: // global
           Sp = Sp + 8;
           call _c7wKh() args: 0, res: 0, upd: 0;
       u7wKB: // global
           if (_c7wKy::P64 != 4) goto u7wKP; else goto u7wKP;
       u7wKP: // global
           Sp = Sp + 8;
           goto u7wL7;
       u7wKM: // global
           Sp = Sp + 8;
           goto u7wL7;
       u7wL7: // global
           call _c7wKl() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wJ2_info" {
     block_c7wJ2_info:
         const _c7wJ2;
         const 0;
         const 30;
 },
 _c7wIx() //  [R1]
         { []
         }
     {offset
       c7wIx: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7wKQ;
               case 2, 3, 4, 5, 6 : goto u7wKV;
           }
       u7wKV: // global
           Sp = Sp + 8;
           call _c7wKl() args: 0, res: 0, upd: 0;
       u7wKQ: // global
           Sp = Sp + 8;
           call _c7wKh() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wIx_info" {
     block_c7wIx_info:
         const _c7wIx;
         const 0;
         const 30;
 },
 _c7wKl() //  []
         { []
         }
     {offset
       c7wKl: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wKh() //  []
         { []
         }
     {offset
       c7wKh: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.516424579 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$cmax_closure" {
     GHC.Exception.$fOrdArithException_$cmax_closure:
         const GHC.Exception.$fOrdArithException_$cmax_info;
 },
 GHC.Exception.$fOrdArithException_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wMx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wMy; else goto c7wMz;
       c7wMy: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wMz: // global
           I64[Sp - 16] = block_c7wMm_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wOA; else goto c7wMn;
       u7wOA: // global
           call _c7wMm(R1) args: 0, res: 0, upd: 0;
       c7wMn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$cmax_info" {
     GHC.Exception.$fOrdArithException_$cmax_info:
         const GHC.Exception.$fOrdArithException_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wMm() //  [R1]
         { []
         }
     {offset
       c7wMm: // global
           _s7w02::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wMq;
               case 2 : goto c7wMr;
               case 3 : goto c7wMs;
               case 4 : goto c7wMt;
               case 5 : goto c7wMu;
               case 6 : goto c7wMv;
           }
       c7wMv: // global
           I64[Sp + 8] = block_c7wO1_info;
           R1 = _s7w02::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wOz; else goto c7wO3;
       u7wOz: // global
           call _c7wO1() args: 0, res: 0, upd: 0;
       c7wO3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wMu: // global
           I64[Sp + 8] = block_c7wNM_info;
           R1 = _s7w02::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wOy; else goto c7wNO;
       u7wOy: // global
           call _c7wNM(R1) args: 0, res: 0, upd: 0;
       c7wNO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wMt: // global
           I64[Sp + 8] = block_c7wNt_info;
           R1 = _s7w02::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wOx; else goto c7wNv;
       u7wOx: // global
           call _c7wNt(R1) args: 0, res: 0, upd: 0;
       c7wNv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wMs: // global
           I64[Sp + 8] = block_c7wN6_info;
           R1 = _s7w02::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wOw; else goto c7wN8;
       u7wOw: // global
           call _c7wN6(R1) args: 0, res: 0, upd: 0;
       c7wN8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wMr: // global
           I64[Sp + 8] = block_c7wMF_info;
           R1 = _s7w02::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wOv; else goto c7wMH;
       u7wOv: // global
           call _c7wMF(R1) args: 0, res: 0, upd: 0;
       c7wMH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wMq: // global
           R1 = _s7w02::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wMm_info" {
     block_c7wMm_info:
         const _c7wMm;
         const 1;
         const 30;
 },
 _c7wO1() //  []
         { []
         }
     {offset
       c7wO1: // global
           R1 = GHC.Exception.RatioZeroDenominator_closure+6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wO1_info" {
     block_c7wO1_info:
         const _c7wO1;
         const 0;
         const 30;
 },
 _c7wNM() //  [R1]
         { []
         }
     {offset
       c7wNM: // global
           if (R1 & 7 == 6) goto u7wOi; else goto u7wOj;
       u7wOi: // global
           Sp = Sp + 8;
           call _c7wNY() args: 0, res: 0, upd: 0;
       u7wOj: // global
           Sp = Sp + 8;
           call _c7wNU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wNM_info" {
     block_c7wNM_info:
         const _c7wNM;
         const 0;
         const 30;
 },
 _c7wNt() //  [R1]
         { []
         }
     {offset
       c7wNt: // global
           _c7wO9::P64 = R1 & 7;
           if (_c7wO9::P64 != 5) goto u7wOh; else goto u7wOk;
       u7wOh: // global
           if (_c7wO9::P64 != 6) goto u7wOm; else goto u7wOl;
       u7wOm: // global
           Sp = Sp + 8;
           call _c7wNB() args: 0, res: 0, upd: 0;
       u7wOl: // global
           Sp = Sp + 8;
           call _c7wNY() args: 0, res: 0, upd: 0;
       u7wOk: // global
           Sp = Sp + 8;
           call _c7wNU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wNt_info" {
     block_c7wNt_info:
         const _c7wNt;
         const 0;
         const 30;
 },
 _c7wN6() //  [R1]
         { []
         }
     {offset
       c7wN6: // global
           _c7wOa::P64 = R1 & 7;
           if (_c7wOa::P64 < 5) goto u7wOf; else goto u7wOg;
       u7wOf: // global
           if (_c7wOa::P64 < 4) goto u7wOo; else goto u7wOn;
       u7wOo: // global
           Sp = Sp + 8;
           call _c7wNe() args: 0, res: 0, upd: 0;
       u7wOn: // global
           Sp = Sp + 8;
           call _c7wNB() args: 0, res: 0, upd: 0;
       u7wOg: // global
           if (_c7wOa::P64 < 6) goto u7wOq; else goto u7wOp;
       u7wOq: // global
           Sp = Sp + 8;
           call _c7wNU() args: 0, res: 0, upd: 0;
       u7wOp: // global
           Sp = Sp + 8;
           call _c7wNY() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wN6_info" {
     block_c7wN6_info:
         const _c7wN6;
         const 0;
         const 30;
 },
 _c7wMF() //  [R1]
         { []
         }
     {offset
       c7wMF: // global
           _c7wOb::P64 = R1 & 7;
           if (_c7wOb::P64 < 5) goto u7wOc; else goto u7wOe;
       u7wOc: // global
           if (_c7wOb::P64 < 4) goto u7wOd; else goto u7wOr;
       u7wOd: // global
           if (_c7wOb::P64 < 3) goto c7wMN; else goto u7wOs;
       c7wMN: // global
           R1 = GHC.Exception.Underflow_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u7wOs: // global
           Sp = Sp + 8;
           call _c7wNe() args: 0, res: 0, upd: 0;
       u7wOr: // global
           Sp = Sp + 8;
           call _c7wNB() args: 0, res: 0, upd: 0;
       u7wOe: // global
           if (_c7wOb::P64 < 6) goto u7wOu; else goto u7wOt;
       u7wOu: // global
           Sp = Sp + 8;
           call _c7wNU() args: 0, res: 0, upd: 0;
       u7wOt: // global
           Sp = Sp + 8;
           call _c7wNY() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wMF_info" {
     block_c7wMF_info:
         const _c7wMF;
         const 0;
         const 30;
 },
 _c7wNe() //  []
         { []
         }
     {offset
       c7wNe: // global
           R1 = GHC.Exception.LossOfPrecision_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wNB() //  []
         { []
         }
     {offset
       c7wNB: // global
           R1 = GHC.Exception.DivideByZero_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wNU() //  []
         { []
         }
     {offset
       c7wNU: // global
           R1 = GHC.Exception.Denormal_closure+5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wNY() //  []
         { []
         }
     {offset
       c7wNY: // global
           R1 = GHC.Exception.RatioZeroDenominator_closure+6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.536401461 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c>=_closure" {
     GHC.Exception.$fOrdArithException_$c>=_closure:
         const GHC.Exception.$fOrdArithException_$c>=_info;
 },
 GHC.Exception.$fOrdArithException_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wQ2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wQ3; else goto c7wQ4;
       c7wQ3: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wQ4: // global
           I64[Sp - 16] = block_c7wPR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wSC; else goto c7wPS;
       u7wSC: // global
           call _c7wPR(R1) args: 0, res: 0, upd: 0;
       c7wPS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c>=_info" {
     GHC.Exception.$fOrdArithException_$c>=_info:
         const GHC.Exception.$fOrdArithException_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wPR() //  [R1]
         { []
         }
     {offset
       c7wPR: // global
           _s7w0b::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wPV;
               case 2 : goto c7wPW;
               case 3 : goto c7wPX;
               case 4 : goto c7wPY;
               case 5 : goto c7wPZ;
               case 6 : goto c7wQ0;
           }
       c7wQ0: // global
           I64[Sp + 8] = block_c7wRY_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSB; else goto c7wS0;
       u7wSB: // global
           call _c7wRY() args: 0, res: 0, upd: 0;
       c7wS0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wPZ: // global
           I64[Sp + 8] = block_c7wRJ_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSA; else goto c7wRL;
       u7wSA: // global
           call _c7wRJ(R1) args: 0, res: 0, upd: 0;
       c7wRL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wPY: // global
           I64[Sp + 8] = block_c7wRq_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSz; else goto c7wRs;
       u7wSz: // global
           call _c7wRq(R1) args: 0, res: 0, upd: 0;
       c7wRs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wPX: // global
           I64[Sp + 8] = block_c7wR3_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSy; else goto c7wR5;
       u7wSy: // global
           call _c7wR3(R1) args: 0, res: 0, upd: 0;
       c7wR5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wPW: // global
           I64[Sp + 8] = block_c7wQC_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSx; else goto c7wQE;
       u7wSx: // global
           call _c7wQC(R1) args: 0, res: 0, upd: 0;
       c7wQE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wPV: // global
           I64[Sp + 8] = block_c7wQ7_info;
           R1 = _s7w0b::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wSw; else goto c7wQ9;
       u7wSw: // global
           call _c7wQ7(R1) args: 0, res: 0, upd: 0;
       c7wQ9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wPR_info" {
     block_c7wPR_info:
         const _c7wPR;
         const 1;
         const 30;
 },
 _c7wRY() //  []
         { []
         }
     {offset
       c7wRY: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wRY_info" {
     block_c7wRY_info:
         const _c7wRY;
         const 0;
         const 30;
 },
 _c7wRJ() //  [R1]
         { []
         }
     {offset
       c7wRJ: // global
           if (R1 & 7 == 6) goto u7wSe; else goto u7wSf;
       u7wSe: // global
           Sp = Sp + 8;
           call _c7wRV() args: 0, res: 0, upd: 0;
       u7wSf: // global
           Sp = Sp + 8;
           call _c7wRR() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wRJ_info" {
     block_c7wRJ_info:
         const _c7wRJ;
         const 0;
         const 30;
 },
 _c7wRq() //  [R1]
         { []
         }
     {offset
       c7wRq: // global
           _c7wS6::P64 = R1 & 7;
           if (_c7wS6::P64 != 5) goto u7wSd; else goto u7wSg;
       u7wSd: // global
           if (_c7wS6::P64 != 6) goto u7wSi; else goto u7wSh;
       u7wSi: // global
           Sp = Sp + 8;
           call _c7wRR() args: 0, res: 0, upd: 0;
       u7wSh: // global
           Sp = Sp + 8;
           goto u7wSL;
       u7wSg: // global
           Sp = Sp + 8;
           goto u7wSL;
       u7wSL: // global
           call _c7wRV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wRq_info" {
     block_c7wRq_info:
         const _c7wRq;
         const 0;
         const 30;
 },
 _c7wR3() //  [R1]
         { []
         }
     {offset
       c7wR3: // global
           _c7wS7::P64 = R1 & 7;
           if (_c7wS7::P64 < 4) goto u7wSj; else goto u7wSc;
       u7wSj: // global
           Sp = Sp + 8;
           call _c7wRR() args: 0, res: 0, upd: 0;
       u7wSc: // global
           if (_c7wS7::P64 != 5) goto u7wSl; else goto u7wSl;
       u7wSl: // global
           Sp = Sp + 8;
           call _c7wRV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wR3_info" {
     block_c7wR3_info:
         const _c7wR3;
         const 0;
         const 30;
 },
 _c7wQC() //  [R1]
         { []
         }
     {offset
       c7wQC: // global
           _c7wS8::P64 = R1 & 7;
           if (_c7wS8::P64 < 6) goto u7wSa; else goto u7wSm;
       u7wSa: // global
           if (_c7wS8::P64 < 3) goto u7wSn; else goto u7wSb;
       u7wSn: // global
           Sp = Sp + 8;
           call _c7wRR() args: 0, res: 0, upd: 0;
       u7wSb: // global
           if (_c7wS8::P64 != 4) goto u7wSp; else goto u7wSp;
       u7wSp: // global
           Sp = Sp + 8;
           goto u7wSH;
       u7wSm: // global
           Sp = Sp + 8;
           goto u7wSH;
       u7wSH: // global
           call _c7wRV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wQC_info" {
     block_c7wQC_info:
         const _c7wQC;
         const 0;
         const 30;
 },
 _c7wQ7() //  [R1]
         { []
         }
     {offset
       c7wQ7: // global
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto u7wSq;
               case 2, 3, 4, 5, 6 : goto u7wSv;
           }
       u7wSv: // global
           Sp = Sp + 8;
           call _c7wRV() args: 0, res: 0, upd: 0;
       u7wSq: // global
           Sp = Sp + 8;
           call _c7wRR() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wQ7_info" {
     block_c7wQ7_info:
         const _c7wQ7;
         const 0;
         const 30;
 },
 _c7wRV() //  []
         { []
         }
     {offset
       c7wRV: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c7wRR() //  []
         { []
         }
     {offset
       c7wRR: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.55418885 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$c>_closure" {
     GHC.Exception.$fOrdArithException_$c>_closure:
         const GHC.Exception.$fOrdArithException_$c>_info;
 },
 GHC.Exception.$fOrdArithException_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wTW: // global
           _s7w0k::P64 = R3;
           R3 = R2;
           R2 = _s7w0k::P64;
           call GHC.Exception.$fOrdArithException_$c<_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$c>_info" {
     GHC.Exception.$fOrdArithException_$c>_info:
         const GHC.Exception.$fOrdArithException_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.560224151 UTC

[section ""data" . GHC.Exception.$fOrdArithException_$cmin_closure" {
     GHC.Exception.$fOrdArithException_$cmin_closure:
         const GHC.Exception.$fOrdArithException_$cmin_info;
 },
 GHC.Exception.$fOrdArithException_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c7wUi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7wUj; else goto c7wUk;
       c7wUj: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$fOrdArithException_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7wUk: // global
           I64[Sp - 16] = block_c7wU7_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7wW6; else goto c7wU8;
       u7wW6: // global
           call _c7wU7(R1) args: 0, res: 0, upd: 0;
       c7wU8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fOrdArithException_$cmin_info" {
     GHC.Exception.$fOrdArithException_$cmin_info:
         const GHC.Exception.$fOrdArithException_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c7wU7() //  [R1]
         { []
         }
     {offset
       c7wU7: // global
           _s7w0l::P64 = P64[Sp + 8];
           switch [1 .. 6] (R1 & 7) {
               case 1 : goto c7wUb;
               case 2 : goto c7wUc;
               case 3 : goto c7wUd;
               case 4 : goto c7wUe;
               case 5 : goto c7wUf;
               case 6 : goto c7wUg;
           }
       c7wUg: // global
           R1 = _s7w0l::P64 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c7wUf: // global
           I64[Sp + 8] = block_c7wVD_info;
           R1 = _s7w0l::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wW5; else goto c7wVF;
       u7wW5: // global
           call _c7wVD(R1) args: 0, res: 0, upd: 0;
       c7wVF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wUe: // global
           I64[Sp + 8] = block_c7wVk_info;
           R1 = _s7w0l::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wW4; else goto c7wVm;
       u7wW4: // global
           call _c7wVk(R1) args: 0, res: 0, upd: 0;
       c7wVm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wUd: // global
           I64[Sp + 8] = block_c7wUX_info;
           R1 = _s7w0l::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wW3; else goto c7wUZ;
       u7wW3: // global
           call _c7wUX(R1) args: 0, res: 0, upd: 0;
       c7wUZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wUc: // global
           I64[Sp + 8] = block_c7wUw_info;
           R1 = _s7w0l::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wW2; else goto c7wUy;
       u7wW2: // global
           call _c7wUw(R1) args: 0, res: 0, upd: 0;
       c7wUy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c7wUb: // global
           I64[Sp + 8] = block_c7wUn_info;
           R1 = _s7w0l::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7wW1; else goto c7wUp;
       u7wW1: // global
           call _c7wUn() args: 0, res: 0, upd: 0;
       c7wUp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wU7_info" {
     block_c7wU7_info:
         const _c7wU7;
         const 1;
         const 30;
 },
 _c7wVD() //  [R1]
         { []
         }
     {offset
       c7wVD: // global
           if (R1 & 7 == 6) goto c7wVP; else goto c7wVL;
       c7wVP: // global
           R1 = GHC.Exception.Denormal_closure+5;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wVL: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wVD_info" {
     block_c7wVD_info:
         const _c7wVD;
         const 0;
         const 30;
 },
 _c7wVk() //  [R1]
         { []
         }
     {offset
       c7wVk: // global
           _c7wVU::P64 = R1 & 7;
           if (_c7wVU::P64 == 5) goto c7wVA; else goto u7wW0;
       u7wW0: // global
           if (_c7wVU::P64 == 6) goto c7wVA; else goto c7wVs;
       c7wVA: // global
           R1 = GHC.Exception.DivideByZero_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7wVs: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wVk_info" {
     block_c7wVk_info:
         const _c7wVk;
         const 0;
         const 30;
 },
 _c7wUX() //  [R1]
         { []
         }
     {offset
       c7wUX: // global
           _c7wVV::P64 = R1 & 7;
           if (_c7wVV::P64 < 4) goto c7wV5; else goto u7wVZ;
       c7wV5: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u7wVZ: // global
           if (_c7wVV::P64 != 5) goto c7wVh; else goto c7wVh;
       c7wVh: // global
           R1 = GHC.Exception.LossOfPrecision_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wUX_info" {
     block_c7wUX_info:
         const _c7wUX;
         const 0;
         const 30;
 },
 _c7wUw() //  [R1]
         { []
         }
     {offset
       c7wUw: // global
           _c7wVW::P64 = R1 & 7;
           if (_c7wVW::P64 >= 6) goto c7wUU; else goto u7wVX;
       u7wVX: // global
           if (_c7wVW::P64 < 3) goto c7wUE; else goto u7wVY;
       c7wUE: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       u7wVY: // global
           if (_c7wVW::P64 != 4) goto c7wUU; else goto c7wUU;
       c7wUU: // global
           R1 = GHC.Exception.Underflow_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wUw_info" {
     block_c7wUw_info:
         const _c7wUw;
         const 0;
         const 30;
 },
 _c7wUn() //  []
         { []
         }
     {offset
       c7wUn: // global
           R1 = GHC.Exception.Overflow_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7wUn_info" {
     block_c7wUn_info:
         const _c7wUn;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.574161571 UTC

[section ""data" . GHC.Exception.$fOrdArithException_closure" {
     GHC.Exception.$fOrdArithException_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.Exception.$fEqArithException_closure+1;
         const GHC.Exception.$fOrdArithException_$ccompare_closure+2;
         const GHC.Exception.$fOrdArithException_$c<_closure+2;
         const GHC.Exception.$fOrdArithException_$c<=_closure+2;
         const GHC.Exception.$fOrdArithException_$c>_closure+2;
         const GHC.Exception.$fOrdArithException_$c>=_closure+2;
         const GHC.Exception.$fOrdArithException_$cmax_closure+2;
         const GHC.Exception.$fOrdArithException_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.57652442 UTC

[section ""cstring" . GHC.Exception.$trModule4_bytes" {
     GHC.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.578218228 UTC

[section ""data" . GHC.Exception.$trModule3_closure" {
     GHC.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.579866148 UTC

[section ""cstring" . GHC.Exception.$trModule2_bytes" {
     GHC.Exception.$trModule2_bytes:
         I8[] [71,72,67,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.581698657 UTC

[section ""data" . GHC.Exception.$trModule1_closure" {
     GHC.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.583374336 UTC

[section ""data" . GHC.Exception.$trModule_closure" {
     GHC.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Exception.$trModule3_closure+1;
         const GHC.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.585031618 UTC

[section ""data" . $krep_r7t8y_closure" {
     $krep_r7t8y_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.586784646 UTC

[section ""data" . $krep1_r7t8z_closure" {
     $krep1_r7t8z_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.588465272 UTC

[section ""data" . $krep2_r7t8A_closure" {
     $krep2_r7t8A_closure:
         const :_con_info;
         const $krep1_r7t8z_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.5901427 UTC

[section ""data" . $krep3_r7t8B_closure" {
     $krep3_r7t8B_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep2_r7t8A_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.59177586 UTC

[section ""data" . GHC.Exception.$tcException1_closure" {
     GHC.Exception.$tcException1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep_r7t8y_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.593880715 UTC

[section ""data" . $krep4_r7t8C_closure" {
     $krep4_r7t8C_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.595509614 UTC

[section ""data" . $krep5_r7t8D_closure" {
     $krep5_r7t8D_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r7t8C_closure+2;
         const $krep3_r7t8B_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.597204999 UTC

[section ""data" . $krep6_r7t8E_closure" {
     $krep6_r7t8E_closure:
         const :_con_info;
         const $krep4_r7t8C_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.598901464 UTC

[section ""data" . $krep7_r7t8F_closure" {
     $krep7_r7t8F_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.601042518 UTC

[section ""data" . $krep8_r7t8G_closure" {
     $krep8_r7t8G_closure:
         const :_con_info;
         const GHC.Types.krep$*_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.602792236 UTC

[section ""data" . $krep9_r7t8H_closure" {
     $krep9_r7t8H_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Typeable.Internal.$tcTypeable_closure;
         const $krep8_r7t8G_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.604502994 UTC

[section ""data" . $krep10_r7t8I_closure" {
     $krep10_r7t8I_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Show.$tcShow_closure;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.606456496 UTC

[section ""cstring" . GHC.Exception.$fExceptionSomeException3_bytes" {
     GHC.Exception.$fExceptionSomeException3_bytes:
         I8[] [83,111,109,101,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.608025124 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException2_closure" {
     GHC.Exception.$fExceptionSomeException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionSomeException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.609804126 UTC

[section ""data" . GHC.Exception.$tcSomeException_closure" {
     GHC.Exception.$tcSomeException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionSomeException2_closure+1;
         const GHC.Types.krep$*_closure;
         const 13267649630904555636;
         const 2959581124447004473;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.611586683 UTC

[section ""data" . $krep11_r7t8J_closure" {
     $krep11_r7t8J_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcSomeException_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.613313691 UTC

[section ""data" . $krep12_r7t8K_closure" {
     $krep12_r7t8K_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r7t8C_closure+2;
         const $krep11_r7t8J_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.615037764 UTC

[section ""data" . $krep13_r7t8L_closure" {
     $krep13_r7t8L_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r7t8J_closure+1;
         const $krep7_r7t8F_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.618477285 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException1_closure" {
     GHC.Exception.$fExceptionSomeException1_closure:
         const GHC.Exception.$fExceptionSomeException1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionSomeException1_entry() //  [R1]
         { []
         }
     {offset
       c7wXE: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7wXF; else goto c7wXG;
       c7wXF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wXG: // global
           (_c7wXw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wXw::I64 == 0) goto c7wXy; else goto c7wXx;
       c7wXy: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wXx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wXw::I64;
           I64[Sp - 24] = block_c7wXz_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionSomeException2_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 2959581124447004473;
           R2 = 13267649630904555636;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionSomeException1_info" {
     GHC.Exception.$fExceptionSomeException1_info:
         const GHC.Exception.$fExceptionSomeException1_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+104;
 },
 _c7wXz() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7wXz: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7wXA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wXz_info" {
     block_c7wXz_info:
         const _c7wXz;
         const 0;
         const 30;
 },
 _c7wXA() //  []
         { []
         }
     {offset
       c7wXA: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7wXJ; else goto c7wXI;
       c7wXJ: // global
           HpAlloc = 48;
           I64[Sp] = block_c7wXA_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7wXI: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7wXA_info" {
     block_c7wXA_info:
         const _c7wXA;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.625753818 UTC

[section ""data" . GHC.Exception.$fExceptionSomeException_closure" {
     GHC.Exception.$fExceptionSomeException_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionSomeException1_closure;
         const GHC.Exception.$fShowSomeException_closure+1;
         const GHC.Exception.$fExceptionSomeException_$ctoException_closure+1;
         const GHC.Base.Just_closure+1;
         const GHC.Exception.$fExceptionSomeException_$cdisplayException_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.627442045 UTC

[section ""cstring" . GHC.Exception.$tcException3_bytes" {
     GHC.Exception.$tcException3_bytes:
         I8[] [69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.629628395 UTC

[section ""data" . GHC.Exception.$tcException2_closure" {
     GHC.Exception.$tcException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tcException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.631329228 UTC

[section ""data" . GHC.Exception.$tcException_closure" {
     GHC.Exception.$tcException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tcException2_closure+1;
         const GHC.Exception.$tcException1_closure+4;
         const 5005890060182917952;
         const 3990091377913498827;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.63307496 UTC

[section ""data" . $krep14_r7t8M_closure" {
     $krep14_r7t8M_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure+1;
         const $krep6_r7t8E_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.634792856 UTC

[section ""data" . $krep15_r7t8N_closure" {
     $krep15_r7t8N_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r7t8D_closure+4;
         const $krep14_r7t8M_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.636440748 UTC

[section ""data" . $krep16_r7t8O_closure" {
     $krep16_r7t8O_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r7t8L_closure+4;
         const $krep15_r7t8N_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.63834255 UTC

[section ""data" . $krep17_r7t8P_closure" {
     $krep17_r7t8P_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r7t8K_closure+4;
         const $krep16_r7t8O_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.640077762 UTC

[section ""data" . $krep18_r7t8Q_closure" {
     $krep18_r7t8Q_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r7t8I_closure+1;
         const $krep17_r7t8P_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.641803058 UTC

[section ""data" . GHC.Exception.$tc'C:Exception1_closure" {
     GHC.Exception.$tc'C:Exception1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep9_r7t8H_closure+1;
         const $krep18_r7t8Q_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.643370735 UTC

[section ""cstring" . GHC.Exception.$tc'C:Exception3_bytes" {
     GHC.Exception.$tc'C:Exception3_bytes:
         I8[] [39,67,58,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.645007528 UTC

[section ""data" . GHC.Exception.$tc'C:Exception2_closure" {
     GHC.Exception.$tc'C:Exception2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'C:Exception3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.646735939 UTC

[section ""data" . GHC.Exception.$tc'C:Exception_closure" {
     GHC.Exception.$tc'C:Exception_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'C:Exception2_closure+1;
         const GHC.Exception.$tc'C:Exception1_closure+4;
         const 10820889188949131006;
         const 4069342579395079435;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.648533016 UTC

[section ""data" . GHC.Exception.$tc'SomeException1_closure" {
     GHC.Exception.$tc'SomeException1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r7t8M_closure+1;
         const $krep12_r7t8K_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.650142394 UTC

[section ""cstring" . GHC.Exception.$tc'SomeException3_bytes" {
     GHC.Exception.$tc'SomeException3_bytes:
         I8[] [39,83,111,109,101,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.651744261 UTC

[section ""data" . GHC.Exception.$tc'SomeException2_closure" {
     GHC.Exception.$tc'SomeException2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'SomeException3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.654444474 UTC

[section ""data" . GHC.Exception.$tc'SomeException_closure" {
     GHC.Exception.$tc'SomeException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'SomeException2_closure+1;
         const GHC.Exception.$tc'SomeException1_closure+4;
         const 16790271558916100413;
         const 1524061796422226345;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.656198137 UTC

[section ""cstring" . GHC.Exception.$fExceptionErrorCall4_bytes" {
     GHC.Exception.$fExceptionErrorCall4_bytes:
         I8[] [69,114,114,111,114,67,97,108,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.657854572 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall3_closure" {
     GHC.Exception.$fExceptionErrorCall3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionErrorCall4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.659523153 UTC

[section ""data" . GHC.Exception.$tcErrorCall_closure" {
     GHC.Exception.$tcErrorCall_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionErrorCall3_closure+1;
         const GHC.Types.krep$*_closure;
         const 4106747399780464988;
         const 1398564497631027702;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.661276785 UTC

[section ""data" . $krep19_r7t8R_closure" {
     $krep19_r7t8R_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcErrorCall_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.662884843 UTC

[section ""data" . $krep20_r7t8S_closure" {
     $krep20_r7t8S_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r7t8B_closure+1;
         const $krep19_r7t8R_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.664570697 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation1_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r7t8B_closure+1;
         const $krep20_r7t8S_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.666661918 UTC

[section ""cstring" . GHC.Exception.$tc'ErrorCallWithLocation3_bytes" {
     GHC.Exception.$tc'ErrorCallWithLocation3_bytes:
         I8[] [39,69,114,114,111,114,67,97,108,108,87,105,116,104,76,111,99,97,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.668195881 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation2_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'ErrorCallWithLocation3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.669857313 UTC

[section ""data" . GHC.Exception.$tc'ErrorCallWithLocation_closure" {
     GHC.Exception.$tc'ErrorCallWithLocation_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'ErrorCallWithLocation2_closure+1;
         const GHC.Exception.$tc'ErrorCallWithLocation1_closure+4;
         const 14789594717732302892;
         const 17317233711857548947;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.672980187 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall2_closure" {
     GHC.Exception.$fExceptionErrorCall2_closure:
         const GHC.Exception.$fExceptionErrorCall2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall2_entry() //  [R1]
         { []
         }
     {offset
       c7wYN: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7wYO; else goto c7wYP;
       c7wYO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wYP: // global
           (_c7wYF::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wYF::I64 == 0) goto c7wYH; else goto c7wYG;
       c7wYH: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wYG: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wYF::I64;
           I64[Sp - 24] = block_c7wYI_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionErrorCall3_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 1398564497631027702;
           R2 = 4106747399780464988;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall2_info" {
     GHC.Exception.$fExceptionErrorCall2_info:
         const GHC.Exception.$fExceptionErrorCall2_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+104;
 },
 _c7wYI() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7wYI: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7wYJ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wYI_info" {
     block_c7wYI_info:
         const _c7wYI;
         const 0;
         const 30;
 },
 _c7wYJ() //  []
         { []
         }
     {offset
       c7wYJ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7wYS; else goto c7wYR;
       c7wYS: // global
           HpAlloc = 48;
           I64[Sp] = block_c7wYJ_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7wYR: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7wYJ_info" {
     block_c7wYJ_info:
         const _c7wYJ;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.680005435 UTC

[section ""cstring" . GHC.Exception.$fExceptionArithException16_bytes" {
     GHC.Exception.$fExceptionArithException16_bytes:
         I8[] [65,114,105,116,104,69,120,99,101,112,116,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.681641397 UTC

[section ""data" . GHC.Exception.$fExceptionArithException15_closure" {
     GHC.Exception.$fExceptionArithException15_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$fExceptionArithException16_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.683885785 UTC

[section ""data" . GHC.Exception.$tcArithException_closure" {
     GHC.Exception.$tcArithException_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$fExceptionArithException15_closure+1;
         const GHC.Types.krep$*_closure;
         const 11275459110071720610;
         const 9614411694476093403;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.685635023 UTC

[section ""data" . GHC.Exception.$tc'Denormal1_closure" {
     GHC.Exception.$tc'Denormal1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcArithException_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.687281723 UTC

[section ""cstring" . GHC.Exception.$tc'Overflow2_bytes" {
     GHC.Exception.$tc'Overflow2_bytes:
         I8[] [39,79,118,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.688841795 UTC

[section ""data" . GHC.Exception.$tc'Overflow1_closure" {
     GHC.Exception.$tc'Overflow1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Overflow2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.690559897 UTC

[section ""data" . GHC.Exception.$tc'Overflow_closure" {
     GHC.Exception.$tc'Overflow_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Overflow1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 868785644779029835;
         const 15802889491790460831;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.692331459 UTC

[section ""cstring" . GHC.Exception.$tc'Underflow2_bytes" {
     GHC.Exception.$tc'Underflow2_bytes:
         I8[] [39,85,110,100,101,114,102,108,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.693981581 UTC

[section ""data" . GHC.Exception.$tc'Underflow1_closure" {
     GHC.Exception.$tc'Underflow1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Underflow2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.695700919 UTC

[section ""data" . GHC.Exception.$tc'Underflow_closure" {
     GHC.Exception.$tc'Underflow_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Underflow1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 12747416996077452468;
         const 11539058234473019035;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.697394122 UTC

[section ""cstring" . GHC.Exception.$tc'LossOfPrecision2_bytes" {
     GHC.Exception.$tc'LossOfPrecision2_bytes:
         I8[] [39,76,111,115,115,79,102,80,114,101,99,105,115,105,111,110]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.699015424 UTC

[section ""data" . GHC.Exception.$tc'LossOfPrecision1_closure" {
     GHC.Exception.$tc'LossOfPrecision1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'LossOfPrecision2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.700742261 UTC

[section ""data" . GHC.Exception.$tc'LossOfPrecision_closure" {
     GHC.Exception.$tc'LossOfPrecision_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'LossOfPrecision1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 6720322370825216637;
         const 1452601476582167815;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.702879993 UTC

[section ""cstring" . GHC.Exception.$tc'DivideByZero2_bytes" {
     GHC.Exception.$tc'DivideByZero2_bytes:
         I8[] [39,68,105,118,105,100,101,66,121,90,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.704597886 UTC

[section ""data" . GHC.Exception.$tc'DivideByZero1_closure" {
     GHC.Exception.$tc'DivideByZero1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'DivideByZero2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.706282187 UTC

[section ""data" . GHC.Exception.$tc'DivideByZero_closure" {
     GHC.Exception.$tc'DivideByZero_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'DivideByZero1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 17029085746322105003;
         const 1338659094893400307;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.708508899 UTC

[section ""cstring" . GHC.Exception.$tc'Denormal3_bytes" {
     GHC.Exception.$tc'Denormal3_bytes:
         I8[] [39,68,101,110,111,114,109,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.710171027 UTC

[section ""data" . GHC.Exception.$tc'Denormal2_closure" {
     GHC.Exception.$tc'Denormal2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'Denormal3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.711813206 UTC

[section ""data" . GHC.Exception.$tc'Denormal_closure" {
     GHC.Exception.$tc'Denormal_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'Denormal2_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 3563997708427691429;
         const 10171683790716248215;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.713590905 UTC

[section ""cstring" . GHC.Exception.$tc'RatioZeroDenominator2_bytes" {
     GHC.Exception.$tc'RatioZeroDenominator2_bytes:
         I8[] [39,82,97,116,105,111,90,101,114,111,68,101,110,111,109,105,110,97,116,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.715177042 UTC

[section ""data" . GHC.Exception.$tc'RatioZeroDenominator1_closure" {
     GHC.Exception.$tc'RatioZeroDenominator1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Exception.$tc'RatioZeroDenominator2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.716853402 UTC

[section ""data" . GHC.Exception.$tc'RatioZeroDenominator_closure" {
     GHC.Exception.$tc'RatioZeroDenominator_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Exception.$trModule_closure+1;
         const GHC.Exception.$tc'RatioZeroDenominator1_closure+1;
         const GHC.Exception.$tc'Denormal1_closure+1;
         const 12115498985276514171;
         const 17178069790958498690;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.720239784 UTC

[section ""data" . GHC.Exception.$fExceptionArithException14_closure" {
     GHC.Exception.$fExceptionArithException14_closure:
         const GHC.Exception.$fExceptionArithException14_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.$fExceptionArithException14_entry() //  [R1]
         { []
         }
     {offset
       c7wZS: // global
           if ((Sp + -64) < SpLim) (likely: False) goto c7wZT; else goto c7wZU;
       c7wZT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7wZU: // global
           (_c7wZK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7wZK::I64 == 0) goto c7wZM; else goto c7wZL;
       c7wZM: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7wZL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7wZK::I64;
           I64[Sp - 24] = block_c7wZN_info;
           R6 = 0;
           R5 = GHC.Exception.$fExceptionArithException15_closure+1;
           R4 = GHC.Exception.$trModule_closure+1;
           R3 = 9614411694476093403;
           R2 = 11275459110071720610;
           P64[Sp - 40] = GHC.Types.krep$*_closure;
           P64[Sp - 32] = GHC.Types.[]_closure+1;
           Sp = Sp - 40;
           call Data.Typeable.Internal.$wmkTrCon_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException14_info" {
     GHC.Exception.$fExceptionArithException14_info:
         const GHC.Exception.$fExceptionArithException14_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+104;
 },
 _c7wZN() //  [R1, R2, R3, R4, R5]
         { []
         }
     {offset
       c7wZN: // global
           I64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           I64[Sp] = R1;
           Sp = Sp - 40;
           call _c7wZO() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c7wZN_info" {
     block_c7wZN_info:
         const _c7wZN;
         const 0;
         const 30;
 },
 _c7wZO() //  []
         { []
         }
     {offset
       c7wZO: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7wZX; else goto c7wZW;
       c7wZX: // global
           HpAlloc = 48;
           I64[Sp] = block_c7wZO_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 24;
       c7wZW: // global
           I64[Hp - 40] = Data.Typeable.Internal.TrTyCon_con_info;
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           P64[Hp - 16] = P64[Sp + 32];
           I64[Hp - 8] = I64[Sp + 40];
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 38;
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7wZO_info" {
     block_c7wZO_info:
         const _c7wZO;
         const 1093;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.729327598 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_$cfromException_closure" {
     GHC.Exception.$fExceptionErrorCall_$cfromException_closure:
         const GHC.Exception.$fExceptionErrorCall_$cfromException_info;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c7x0x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7x0B; else goto c7x0C;
       c7x0B: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x0C: // global
           I64[Sp - 8] = block_c7x0u_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7x0X; else goto c7x0v;
       u7x0X: // global
           call _c7x0u(R1) args: 0, res: 0, upd: 0;
       c7x0v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$cfromException_info" {
     GHC.Exception.$fExceptionErrorCall_$cfromException_info:
         const GHC.Exception.$fExceptionErrorCall_$cfromException_entry;
         const 0;
         const 1653562408974;
         const 4294967301;
         const S7wbI_srt+56;
 },
 _c7x0u() //  [R1]
         { []
         }
     {offset
       c7x0u: // global
           I64[Sp - 8] = block_c7x0A_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x0u_info" {
     block_c7x0u_info:
         const _c7x0u;
         const 0;
         const 1103806595102;
         const S7wbI_srt+56;
 },
 _c7x0A() //  [R1]
         { []
         }
     {offset
       c7x0A: // global
           I64[Sp] = block_c7x0H_info;
           R3 = GHC.Exception.$fExceptionErrorCall2_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x0A_info" {
     block_c7x0A_info:
         const _c7x0A;
         const 1;
         const 1103806595102;
         const S7wbI_srt+56;
 },
 _c7x0H() //  [R1]
         { []
         }
     {offset
       c7x0H: // global
           if (R1 & 7 == 1) goto c7x0O; else goto c7x0S;
       c7x0O: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7x0S: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7x0V; else goto c7x0U;
       c7x0V: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7x0U: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x0H_info" {
     block_c7x0H_info:
         const _c7x0H;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.737832365 UTC

[section ""data" . GHC.Exception.$fExceptionErrorCall_closure" {
     GHC.Exception.$fExceptionErrorCall_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionErrorCall2_closure;
         const GHC.Exception.$fShowErrorCall_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$ctoException_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$cfromException_closure+1;
         const GHC.Exception.$fExceptionErrorCall_$cshow_closure+1;
         const 0;
 },
 section ""data" . GHC.Exception.$fExceptionErrorCall_$ctoException_closure" {
     GHC.Exception.$fExceptionErrorCall_$ctoException_closure:
         const GHC.Exception.$fExceptionErrorCall_$ctoException_info;
         const 0;
 },
 GHC.Exception.$fExceptionErrorCall_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7x1t: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x1x; else goto c7x1w;
       c7x1x: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionErrorCall_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x1w: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionErrorCall_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionErrorCall_$ctoException_info" {
     GHC.Exception.$fExceptionErrorCall_$ctoException_info:
         const GHC.Exception.$fExceptionErrorCall_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7wbI_srt+128;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.742907021 UTC

[section ""data" . GHC.Exception.errorCallException_closure" {
     GHC.Exception.errorCallException_closure:
         const GHC.Exception.errorCallException_info;
         const 0;
 },
 GHC.Exception.errorCallException_entry() //  [R2]
         { []
         }
     {offset
       c7x1L: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x1P; else goto c7x1O;
       c7x1P: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.errorCallException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x1O: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = GHC.Types.[]_closure+1;
           R2 = Hp - 15;
           call GHC.Exception.$fExceptionErrorCall_$ctoException_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallException_info" {
     GHC.Exception.errorCallException_info:
         const GHC.Exception.errorCallException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7wbI_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.746199974 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException3_bytes" {
     GHC.Exception.errorCallWithCallStackException3_bytes:
         I8[] [58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.747844782 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException2_bytes" {
     GHC.Exception.errorCallWithCallStackException2_bytes:
         I8[] [32,105,110,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.75498396 UTC

[section ""data" . GHC.Exception.$wprettySrcLoc_closure" {
     GHC.Exception.$wprettySrcLoc_closure:
         const GHC.Exception.$wprettySrcLoc_info;
 },
 sat_s7w1a_entry() //  [R1]
         { []
         }
     {offset
       c7x2J: // global
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7w1a_info" {
     sat_s7w1a_info:
         const sat_s7w1a_entry;
         const 1;
         const 16;
 },
 sat_s7w1b_entry() //  [R1]
         { []
         }
     {offset
       c7x2M: // global
           _s7w1b::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7x2N; else goto c7x2O;
       c7x2O: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x2Q; else goto c7x2P;
       c7x2Q: // global
           HpAlloc = 24;
           goto c7x2N;
       c7x2N: // global
           R1 = _s7w1b::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x2P: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7w1b::P64;
           _s7w0T::P64 = P64[_s7w1b::P64 + 16];
           _s7w0U::P64 = P64[_s7w1b::P64 + 24];
           I64[Hp - 16] = sat_s7w1a_info;
           P64[Hp] = _s7w0U::P64;
           R3 = Hp - 16;
           R2 = _s7w0T::P64;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1b_info" {
     sat_s7w1b_info:
         const sat_s7w1b_entry;
         const 2;
         const 18;
 },
 sat_s7w1c_entry() //  [R1]
         { []
         }
     {offset
       c7x2R: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c7x2V; else goto c7x2U;
       c7x2V: // global
           HpAlloc = 32;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x2U: // global
           _s7w0T::P64 = P64[R1 + 16];
           _s7w0U::P64 = P64[R1 + 24];
           I64[Hp - 24] = sat_s7w1b_info;
           P64[Hp - 8] = _s7w0T::P64;
           P64[Hp] = _s7w0U::P64;
           R3 = Hp - 24;
           R2 = GHC.Exception.errorCallWithCallStackException2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7w1c_info" {
     sat_s7w1c_info:
         const sat_s7w1c_entry;
         const 2;
         const 18;
 },
 sat_s7w1d_entry() //  [R1]
         { []
         }
     {offset
       c7x2W: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c7x2Y; else goto c7x2Z;
       c7x2Y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x2Z: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c7x2q_info;
           _s7w0T::P64 = P64[R1 + 16];
           _s7w0U::P64 = P64[R1 + 24];
           R1 = P64[R1 + 32];
           P64[Sp - 32] = _s7w0T::P64;
           P64[Sp - 24] = _s7w0U::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u7x34; else goto c7x2r;
       u7x34: // global
           call _c7x2q(R1) args: 0, res: 0, upd: 0;
       c7x2r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1d_info" {
     sat_s7w1d_info:
         const sat_s7w1d_entry;
         const 3;
         const 15;
 },
 _c7x2q() //  [R1]
         { []
         }
     {offset
       c7x2q: // global
           I64[Sp] = block_c7x2v_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 0;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x2q_info" {
     block_c7x2q_info:
         const _c7x2q;
         const 2;
         const 30;
 },
 _c7x2v() //  [R1, R2]
         { []
         }
     {offset
       c7x2v: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7x33; else goto c7x32;
       c7x33: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c7x32: // global
           I64[Hp - 48] = sat_s7w1c_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = P64[Sp + 16];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x2v_info" {
     block_c7x2v_info:
         const _c7x2v;
         const 2;
         const 30;
 },
 sat_s7w1e_entry() //  [R1]
         { []
         }
     {offset
       c7x35: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7x39; else goto c7x38;
       c7x39: // global
           HpAlloc = 40;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x38: // global
           _s7w0T::P64 = P64[R1 + 16];
           _s7w0U::P64 = P64[R1 + 24];
           _s7w0X::P64 = P64[R1 + 32];
           I64[Hp - 32] = sat_s7w1d_info;
           P64[Hp - 16] = _s7w0T::P64;
           P64[Hp - 8] = _s7w0U::P64;
           P64[Hp] = _s7w0X::P64;
           R3 = Hp - 32;
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7w1e_info" {
     sat_s7w1e_info:
         const sat_s7w1e_entry;
         const 3;
         const 15;
 },
 sat_s7w1f_entry() //  [R1]
         { []
         }
     {offset
       c7x3a: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c7x3c; else goto c7x3d;
       c7x3c: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x3d: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 48] = block_c7x2b_info;
           _s7w0T::P64 = P64[R1 + 16];
           _s7w0U::P64 = P64[R1 + 24];
           _s7w0X::P64 = P64[R1 + 40];
           R1 = P64[R1 + 32];
           P64[Sp - 40] = _s7w0T::P64;
           P64[Sp - 32] = _s7w0U::P64;
           P64[Sp - 24] = _s7w0X::P64;
           Sp = Sp - 48;
           if (R1 & 7 != 0) goto u7x3i; else goto c7x2c;
       u7x3i: // global
           call _c7x2b(R1) args: 0, res: 0, upd: 0;
       c7x2c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1f_info" {
     sat_s7w1f_info:
         const sat_s7w1f_entry;
         const 4;
         const 15;
 },
 _c7x2b() //  [R1]
         { []
         }
     {offset
       c7x2b: // global
           I64[Sp] = block_c7x2g_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 0;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x2b_info" {
     block_c7x2b_info:
         const _c7x2b;
         const 3;
         const 30;
 },
 _c7x2g() //  [R1, R2]
         { []
         }
     {offset
       c7x2g: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c7x3h; else goto c7x3g;
       c7x3h: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c7x3g: // global
           I64[Hp - 56] = sat_s7w1e_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = Hp - 56;
           R2 = Hp - 14;
           Sp = Sp + 32;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x2g_info" {
     block_c7x2g_info:
         const _c7x2g;
         const 3;
         const 30;
 },
 sat_s7w1g_entry() //  [R1]
         { []
         }
     {offset
       c7x3j: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7x3n; else goto c7x3m;
       c7x3n: // global
           HpAlloc = 48;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x3m: // global
           _s7w0T::P64 = P64[R1 + 16];
           _s7w0U::P64 = P64[R1 + 24];
           _s7w0W::P64 = P64[R1 + 32];
           _s7w0X::P64 = P64[R1 + 40];
           I64[Hp - 40] = sat_s7w1f_info;
           P64[Hp - 24] = _s7w0T::P64;
           P64[Hp - 16] = _s7w0U::P64;
           P64[Hp - 8] = _s7w0W::P64;
           P64[Hp] = _s7w0X::P64;
           R3 = Hp - 40;
           R2 = GHC.Exception.errorCallWithCallStackException3_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7w1g_info" {
     sat_s7w1g_info:
         const sat_s7w1g_entry;
         const 4;
         const 15;
 },
 GHC.Exception.$wprettySrcLoc_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c7x3o: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7x3s; else goto c7x3r;
       c7x3s: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.$wprettySrcLoc_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7x3r: // global
           I64[Hp - 40] = sat_s7w1g_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = R3;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R3 = Hp - 40;
           R2 = R4;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$wprettySrcLoc_info" {
     GHC.Exception.$wprettySrcLoc_info:
         const GHC.Exception.$wprettySrcLoc_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.777535717 UTC

[section ""data" . GHC.Exception.prettySrcLoc_closure" {
     GHC.Exception.prettySrcLoc_closure:
         const GHC.Exception.prettySrcLoc_info;
 },
 GHC.Exception.prettySrcLoc_entry() //  [R2]
         { []
         }
     {offset
       c7x4D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7x4E; else goto c7x4F;
       c7x4E: // global
           R2 = R2;
           R1 = GHC.Exception.prettySrcLoc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x4F: // global
           I64[Sp - 8] = block_c7x4A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7x4J; else goto c7x4B;
       u7x4J: // global
           call _c7x4A(R1) args: 0, res: 0, upd: 0;
       c7x4B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettySrcLoc_info" {
     GHC.Exception.prettySrcLoc_info:
         const GHC.Exception.prettySrcLoc_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c7x4A() //  [R1]
         { []
         }
     {offset
       c7x4A: // global
           R6 = P64[R1 + 39];
           R5 = P64[R1 + 31];
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$wprettySrcLoc_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x4A_info" {
     block_c7x4A_info:
         const _c7x4A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.783238431 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException7_bytes" {
     GHC.Exception.errorCallWithCallStackException7_bytes:
         I8[] [67,97,108,108,83,116,97,99,107,32,40,102,114,111,109,32,72,97,115,67,97,108,108,83,116,97,99,107,41,58]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.78553185 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException6_closure" {
     GHC.Exception.errorCallWithCallStackException6_closure:
         const GHC.Exception.errorCallWithCallStackException6_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException6_entry() //  [R1]
         { []
         }
     {offset
       c7x51: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7x52; else goto c7x53;
       c7x52: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x53: // global
           (_c7x4Y::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7x4Y::I64 == 0) goto c7x50; else goto c7x4Z;
       c7x50: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7x4Z: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7x4Y::I64;
           R2 = GHC.Exception.errorCallWithCallStackException7_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException6_info" {
     GHC.Exception.errorCallWithCallStackException6_info:
         const GHC.Exception.errorCallWithCallStackException6_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.789100588 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException4_bytes" {
     GHC.Exception.errorCallWithCallStackException4_bytes:
         I8[] [44,32,99,97,108,108,101,100,32,97,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.79362112 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException1_closure" {
     GHC.Exception.errorCallWithCallStackException1_closure:
         const GHC.Exception.errorCallWithCallStackException1_info;
 },
 sat_s7w1C_entry() //  [R1]
         { []
         }
     {offset
       c7x5B: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7x5C; else goto c7x5D;
       c7x5C: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x5D: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7x5y_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7x5H; else goto c7x5z;
       u7x5H: // global
           call _c7x5y(R1) args: 0, res: 0, upd: 0;
       c7x5z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1C_info" {
     sat_s7w1C_info:
         const sat_s7w1C_entry;
         const 1;
         const 16;
 },
 _c7x5y() //  [R1]
         { []
         }
     {offset
       c7x5y: // global
           R6 = P64[R1 + 39];
           R5 = P64[R1 + 31];
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Exception.$wprettySrcLoc_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x5y_info" {
     block_c7x5y_info:
         const _c7x5y;
         const 0;
         const 30;
 },
 sat_s7w1D_entry() //  [R1]
         { []
         }
     {offset
       c7x5I: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x5M; else goto c7x5L;
       c7x5M: // global
           HpAlloc = 24;
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x5L: // global
           _s7w1t::P64 = P64[R1 + 16];
           I64[Hp - 16] = sat_s7w1C_info;
           P64[Hp] = _s7w1t::P64;
           R3 = Hp - 16;
           R2 = GHC.Exception.errorCallWithCallStackException4_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7w1D_info" {
     sat_s7w1D_info:
         const sat_s7w1D_entry;
         const 1;
         const 16;
 },
 sat_s7w1E_entry() //  [R1]
         { []
         }
     {offset
       c7x5N: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7x5O; else goto c7x5P;
       c7x5O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x5P: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7x5l_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7x5T; else goto c7x5m;
       u7x5T: // global
           call _c7x5l(R1) args: 0, res: 0, upd: 0;
       c7x5m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1E_info" {
     sat_s7w1E_info:
         const sat_s7w1E_entry;
         const 1;
         const 16;
 },
 _c7x5l() //  [R1]
         { []
         }
     {offset
       c7x5l: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x5S; else goto c7x5R;
       c7x5S: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7x5R: // global
           _s7w1s::P64 = P64[R1 + 7];
           _s7w1t::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s7w1D_info;
           P64[Hp] = _s7w1t::P64;
           R3 = Hp - 16;
           R2 = _s7w1s::P64;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x5l_info" {
     block_c7x5l_info:
         const _c7x5l;
         const 0;
         const 30;
 },
 GHC.Exception.errorCallWithCallStackException1_entry() //  [R2]
         { []
         }
     {offset
       c7x5U: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7x5Y; else goto c7x5X;
       c7x5Y: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.errorCallWithCallStackException1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x5X: // global
           I64[Hp - 16] = sat_s7w1E_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Exception.errorCallWithCallStackException5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException1_info" {
     GHC.Exception.errorCallWithCallStackException1_info:
         const GHC.Exception.errorCallWithCallStackException1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.807365079 UTC

[section ""data" . GHC.Exception.prettyCallStackLines_closure" {
     GHC.Exception.prettyCallStackLines_closure:
         const GHC.Exception.prettyCallStackLines_info;
         const 0;
 },
 sat_s7w1J_entry() //  [R1]
         { []
         }
     {offset
       c7x6G: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7x6H; else goto c7x6I;
       c7x6H: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x6I: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException1_closure+1;
           Sp = Sp - 16;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1J_info" {
     sat_s7w1J_info:
         const sat_s7w1J_entry;
         const 1;
         const 16;
 },
 GHC.Exception.prettyCallStackLines_entry() //  [R2]
         { []
         }
     {offset
       c7x6N: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7x6O; else goto c7x6P;
       c7x6O: // global
           R2 = R2;
           R1 = GHC.Exception.prettyCallStackLines_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x6P: // global
           I64[Sp - 8] = block_c7x6x_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettyCallStackLines_info" {
     GHC.Exception.prettyCallStackLines_info:
         const GHC.Exception.prettyCallStackLines_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7wbI_srt+152;
 },
 _c7x6x() //  [R1]
         { []
         }
     {offset
       c7x6x: // global
           if (R1 & 7 == 1) goto c7x6K; else goto c7x6L;
       c7x6K: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7x6L: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7x6V; else goto c7x6U;
       c7x6V: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7x6U: // global
           I64[Hp - 40] = sat_s7w1J_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x6x_info" {
     block_c7x6x_info:
         const _c7x6x;
         const 0;
         const 4294967326;
         const S7wbI_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.814635043 UTC

[section ""cstring" . GHC.Exception.errorCallWithCallStackException8_bytes" {
     GHC.Exception.errorCallWithCallStackException8_bytes:
         I8[] [10]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.817916735 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException_xs_closure" {
     GHC.Exception.errorCallWithCallStackException_xs_closure:
         const GHC.Exception.errorCallWithCallStackException_xs_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.errorCallWithCallStackException_xs_entry() //  [R1]
         { []
         }
     {offset
       c7x7q: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7x7r; else goto c7x7s;
       c7x7r: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x7s: // global
           (_c7x7n::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7x7n::I64 == 0) goto c7x7p; else goto c7x7o;
       c7x7p: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7x7o: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7x7n::I64;
           R2 = GHC.Exception.errorCallWithCallStackException8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException_xs_info" {
     GHC.Exception.errorCallWithCallStackException_xs_info:
         const GHC.Exception.errorCallWithCallStackException_xs_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.823091646 UTC

[section ""data" . GHC.Exception.prettyCallStack_closure" {
     GHC.Exception.prettyCallStack_closure:
         const GHC.Exception.prettyCallStack_info;
         const 0;
 },
 sat_s7w1P_entry() //  [R1]
         { []
         }
     {offset
       c7x7Q: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7x7R; else goto c7x7S;
       c7x7R: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x7S: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7x7O_info;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException1_closure+1;
           Sp = Sp - 24;
           call GHC.Base.map_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w1P_info" {
     sat_s7w1P_info:
         const sat_s7w1P_entry;
         const 1;
         const 4294967312;
         const S7wbI_srt+168;
 },
 _c7x7O() //  [R1]
         { []
         }
     {offset
       c7x7O: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp + 8;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x7O_info" {
     block_c7x7O_info:
         const _c7x7O;
         const 0;
         const 4294967326;
         const S7wbI_srt+168;
 },
 GHC.Exception.prettyCallStack_entry() //  [R2]
         { []
         }
     {offset
       c7x80: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c7x81; else goto c7x82;
       c7x81: // global
           R2 = R2;
           R1 = GHC.Exception.prettyCallStack_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7x82: // global
           I64[Sp - 8] = block_c7x7F_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.prettyCallStack_info" {
     GHC.Exception.prettyCallStack_info:
         const GHC.Exception.prettyCallStack_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7wbI_srt+160;
 },
 _c7x7F() //  [R1]
         { []
         }
     {offset
       c7x7F: // global
           if (R1 & 7 == 1) goto c7x7X; else goto c7x7Y;
       c7x7X: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7x7Y: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7x88; else goto c7x87;
       c7x88: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7x87: // global
           I64[Hp - 40] = sat_s7w1P_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x7F_info" {
     block_c7x7F_info:
         const _c7x7F;
         const 0;
         const 12884901918;
         const S7wbI_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.838243358 UTC

[section ""data" . GHC.Exception.errorCallWithCallStackException_closure" {
     GHC.Exception.errorCallWithCallStackException_closure:
         const GHC.Exception.errorCallWithCallStackException_info;
         const 0;
 },
 sat_s7w21_entry() //  [R1]
         { []
         }
     {offset
       c7x93: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7x94; else goto c7x95;
       c7x94: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x95: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7x91_info;
           R3 = GHC.Types.[]_closure+1;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call GHC.List.reverse1_entry(R3, R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w21_info" {
     sat_s7w21_info:
         const sat_s7w21_entry;
         const 1;
         const 4294967312;
         const S7wbI_srt+80;
 },
 _c7x91() //  [R1]
         { []
         }
     {offset
       c7x91: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException9_closure+1;
           Sp = Sp + 8;
           call GHC.Base.map_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x91_info" {
     block_c7x91_info:
         const _c7x91;
         const 0;
         const 4294967326;
         const S7wbI_srt+80;
 },
 n_s7w1W_entry() //  [R1]
         { []
         }
     {offset
       c7x9d: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7x9e; else goto c7x9f;
       c7x9e: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x9f: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c7x8R_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7x9m; else goto c7x8S;
       u7x9m: // global
           call _c7x8R(R1) args: 0, res: 0, upd: 0;
       c7x8S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . n_s7w1W_info" {
     n_s7w1W_info:
         const n_s7w1W_entry;
         const 1;
         const 21474836496;
         const S7wbI_srt+80;
 },
 _c7x8R() //  [R1]
         { []
         }
     {offset
       c7x8R: // global
           if (R1 & 7 == 1) goto c7x9a; else goto c7x9b;
       c7x9a: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7x9b: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7x9l; else goto c7x9k;
       c7x9l: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7x9k: // global
           I64[Hp - 40] = sat_s7w21_info;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException11_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x8R_info" {
     block_c7x8R_info:
         const _c7x8R;
         const 0;
         const 21474836510;
         const S7wbI_srt+80;
 },
 sat_s7w26_entry() //  [R1]
         { []
         }
     {offset
       c7x9B: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7x9C; else goto c7x9D;
       c7x9C: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7x9D: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w26_info" {
     sat_s7w26_info:
         const sat_s7w26_entry;
         const 1;
         const 4294967312;
         const S7wbI_srt+168;
 },
 sat_s7w2f_entry() //  [R1]
         { []
         }
     {offset
       c7xa0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xa1; else goto c7xa2;
       c7xa1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xa2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Exception.errorCallWithCallStackException1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w2f_info" {
     sat_s7w2f_info:
         const sat_s7w2f_entry;
         const 1;
         const 16;
 },
 go_s7w2a_entry() //  [R1, R2]
         { []
         }
     {offset
       c7xa7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7xa8; else goto c7xa9;
       c7xa8: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7xa9: // global
           I64[Sp - 24] = block_c7x9P_info;
           _s7w2a::P64 = R1;
           _s7w1W::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 16] = _s7w1W::P64;
           P64[Sp - 8] = _s7w2a::P64;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7xag; else goto c7x9Q;
       u7xag: // global
           call _c7x9P(R1) args: 0, res: 0, upd: 0;
       c7x9Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . go_s7w2a_info" {
     go_s7w2a_info:
         const go_s7w2a_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c7x9P() //  [R1]
         { []
         }
     {offset
       c7x9P: // global
           if (R1 & 7 == 1) goto c7xa4; else goto c7xa5;
       c7xa4: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c7xa5: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto c7xaf; else goto c7xae;
       c7xaf: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7xae: // global
           _s7w2d::P64 = P64[R1 + 6];
           _s7w2e::P64 = P64[R1 + 14];
           I64[Hp - 72] = stg_ap_2_upd_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = _s7w2e::P64;
           I64[Hp - 40] = sat_s7w2f_info;
           P64[Hp - 24] = _s7w2d::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 14;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x9P_info" {
     block_c7x9P_info:
         const _c7x9P;
         const 2;
         const 30;
 },
 sat_s7w2i_entry() //  [R1]
         { []
         }
     {offset
       c7xaj: // global
           _s7w2i::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c7xak; else goto c7xal;
       c7xal: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7xan; else goto c7xam;
       c7xan: // global
           HpAlloc = 16;
           goto c7xak;
       c7xak: // global
           R1 = _s7w2i::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xam: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7w2i::P64;
           _s7w1W::P64 = P64[_s7w2i::P64 + 16];
           _s7w22::P64 = P64[_s7w2i::P64 + 24];
           I64[Hp - 8] = go_s7w2a_info;
           P64[Hp] = _s7w1W::P64;
           I64[Sp - 24] = block_c7xah_info;
           R2 = _s7w22::P64;
           R1 = Hp - 7;
           Sp = Sp - 24;
           call go_s7w2a_entry(R2, R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w2i_info" {
     sat_s7w2i_info:
         const sat_s7w2i_entry;
         const 2;
         const 4294967314;
         const S7wbI_srt+168;
 },
 _c7xah() //  [R1]
         { []
         }
     {offset
       c7xah: // global
           R3 = R1;
           R2 = GHC.Exception.errorCallWithCallStackException_xs_closure;
           Sp = Sp + 8;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7xah_info" {
     block_c7xah_info:
         const _c7xah;
         const 0;
         const 4294967326;
         const S7wbI_srt+168;
 },
 sat_s7w2k_entry() //  [R1]
         { []
         }
     {offset
       c7xav: // global
           _s7w2k::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c7xaw; else goto c7xax;
       c7xax: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7xaz; else goto c7xay;
       c7xaz: // global
           HpAlloc = 24;
           goto c7xaw;
       c7xaw: // global
           R1 = _s7w2k::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xay: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7w2k::P64;
           _s7w1S::P64 = P64[_s7w2k::P64 + 16];
           _s7w1V::P64 = P64[_s7w2k::P64 + 24];
           I64[Hp - 16] = n_s7w1W_info;
           P64[Hp] = _s7w1V::P64;
           I64[Sp - 32] = block_c7x9n_info;
           R2 = _s7w1S::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Stack.Types.getCallStack_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w2k_info" {
     sat_s7w2k_info:
         const sat_s7w2k_entry;
         const 2;
         const 13215614369810;
         const S7wbI_srt+80;
 },
 _c7x9n() //  [R1]
         { []
         }
     {offset
       c7x9n: // global
           _c7x8N::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c7xas; else goto c7xat;
       c7xas: // global
           I64[Sp + 8] = block_c7x9r_info;
           R1 = _c7x8N::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u7xaP; else goto c7x9s;
       u7xaP: // global
           call _c7x9r(R1) args: 0, res: 0, upd: 0;
       c7x9s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
       c7xat: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7xaN; else goto c7xaM;
       c7xaN: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7xaM: // global
           I64[Hp - 48] = sat_s7w2i_info;
           P64[Hp - 32] = _c7x8N::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Exception.errorCallWithCallStackException6_closure;
           P64[Hp] = Hp - 48;
           R2 = Hp - 14;
           Sp = Sp + 16;
           call Data.OldList.intercalate1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x9n_info" {
     block_c7x9n_info:
         const _c7x9n;
         const 1;
         const 12884901918;
         const S7wbI_srt+160;
 },
 _c7x9r() //  [R1]
         { []
         }
     {offset
       c7x9r: // global
           if (R1 & 7 == 1) goto c7xaE; else goto c7xaG;
       c7xaE: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c7xaG: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7xaJ; else goto c7xaI;
       c7xaJ: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c7xaI: // global
           _s7w24::P64 = P64[R1 + 6];
           _s7w25::P64 = P64[R1 + 14];
           I64[Hp - 40] = sat_s7w26_info;
           P64[Hp - 24] = _s7w25::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = _s7w24::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c7x9r_info" {
     block_c7x9r_info:
         const _c7x9r;
         const 0;
         const 4294967326;
         const S7wbI_srt+168;
 },
 sat_s7w2m_entry() //  [R1]
         { []
         }
     {offset
       c7xaR: // global
           _s7w2m::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c7xaS; else goto c7xaT;
       c7xaT: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c7xaV; else goto c7xaU;
       c7xaV: // global
           HpAlloc = 56;
           goto c7xaS;
       c7xaS: // global
           R1 = _s7w2m::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xaU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s7w2m::P64;
           _s7w1R::P64 = P64[_s7w2m::P64 + 16];
           _s7w1S::P64 = P64[_s7w2m::P64 + 24];
           _s7w1V::P64 = P64[_s7w2m::P64 + 32];
           I64[Hp - 48] = sat_s7w2k_info;
           P64[Hp - 32] = _s7w1S::P64;
           P64[Hp - 24] = _s7w1V::P64;
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = _s7w1R::P64;
           P64[Hp] = Hp - 48;
           R2 = Hp - 15;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionErrorCall_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7w2m_info" {
     sat_s7w2m_info:
         const sat_s7w2m_entry;
         const 3;
         const 13765370183695;
         const S7wbI_srt+80;
 },
 GHC.Exception.errorCallWithCallStackException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7xaZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7xb0; else goto c7xb1;
       c7xb0: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7xb1: // global
           I64[Sp - 24] = block_c7x8D_info;
           R1 = GHC.Stack.CCS.currentCallStack_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.errorCallWithCallStackException_info" {
     GHC.Exception.errorCallWithCallStackException_info:
         const GHC.Exception.errorCallWithCallStackException_entry;
         const 0;
         const 119318486450190;
         const 8589934607;
         const S7wbI_srt+80;
 },
 _c7x8D() //  [R1]
         { []
         }
     {offset
       c7x8D: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7xb4; else goto c7xb3;
       c7xb4: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7xb3: // global
           I64[Hp - 32] = sat_s7w2m_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = (Hp + -32) & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7x8D_info" {
     block_c7x8D_info:
         const _c7x8D;
         const 2;
         const 13765370183710;
         const S7wbI_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.870233597 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_$cfromException_closure" {
     GHC.Exception.$fExceptionArithException_$cfromException_closure:
         const GHC.Exception.$fExceptionArithException_$cfromException_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$cfromException_entry() //  [R2]
         { []
         }
     {offset
       c7xd9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xdd; else goto c7xde;
       c7xdd: // global
           R2 = R2;
           R1 = GHC.Exception.$fExceptionArithException_$cfromException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7xde: // global
           I64[Sp - 8] = block_c7xd6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u7xdz; else goto c7xd7;
       u7xdz: // global
           call _c7xd6(R1) args: 0, res: 0, upd: 0;
       c7xd7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$cfromException_info" {
     GHC.Exception.$fExceptionArithException_$cfromException_info:
         const GHC.Exception.$fExceptionArithException_$cfromException_entry;
         const 0;
         const 3377704015495182;
         const 4294967301;
         const S7wbI_srt+56;
 },
 _c7xd6() //  [R1]
         { []
         }
     {offset
       c7xd6: // global
           I64[Sp - 8] = block_c7xdc_info;
           R2 = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 8;
           call GHC.Exception.$p1Exception_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7xd6_info" {
     block_c7xd6_info:
         const _c7xd6;
         const 0;
         const 2251804108652574;
         const S7wbI_srt+56;
 },
 _c7xdc() //  [R1]
         { []
         }
     {offset
       c7xdc: // global
           I64[Sp] = block_c7xdj_info;
           R3 = GHC.Exception.$fExceptionArithException14_closure;
           R2 = R1;
           call Data.Typeable.Internal.sameTypeRep_entry(R3,
                                                         R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7xdc_info" {
     block_c7xdc_info:
         const _c7xdc;
         const 1;
         const 2251804108652574;
         const S7wbI_srt+56;
 },
 _c7xdj() //  [R1]
         { []
         }
     {offset
       c7xdj: // global
           if (R1 & 7 == 1) goto c7xdq; else goto c7xdu;
       c7xdq: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c7xdu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c7xdx; else goto c7xdw;
       c7xdx: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7xdw: // global
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = P64[Sp + 8];
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7xdj_info" {
     block_c7xdj_info:
         const _c7xdj;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.878458634 UTC

[section ""data" . GHC.Exception.$fExceptionArithException_closure" {
     GHC.Exception.$fExceptionArithException_closure:
         const GHC.Exception.C:Exception_con_info;
         const GHC.Exception.$fExceptionArithException14_closure;
         const GHC.Exception.$fShowArithException_closure+1;
         const GHC.Exception.$fExceptionArithException_$ctoException_closure+1;
         const GHC.Exception.$fExceptionArithException_$cfromException_closure+1;
         const GHC.Exception.$fExceptionArithException_$cshow_closure+1;
         const 0;
 },
 section ""data" . GHC.Exception.$fExceptionArithException_$ctoException_closure" {
     GHC.Exception.$fExceptionArithException_$ctoException_closure:
         const GHC.Exception.$fExceptionArithException_$ctoException_info;
         const 0;
 },
 GHC.Exception.$fExceptionArithException_$ctoException_entry() //  [R2]
         { []
         }
     {offset
       c7xe5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7xe9; else goto c7xe8;
       c7xe9: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Exception.$fExceptionArithException_$ctoException_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7xe8: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = GHC.Exception.$fExceptionArithException_closure+1;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.$fExceptionArithException_$ctoException_info" {
     GHC.Exception.$fExceptionArithException_$ctoException_info:
         const GHC.Exception.$fExceptionArithException_$ctoException_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S7wbI_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.883118197 UTC

[section ""data" . GHC.Exception.underflowException_closure" {
     GHC.Exception.underflowException_closure:
         const GHC.Exception.underflowException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.underflowException_entry() //  [R1]
         { []
         }
     {offset
       c7xeo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xep; else goto c7xeq;
       c7xep: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xeq: // global
           (_c7xel::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7xel::I64 == 0) goto c7xen; else goto c7xem;
       c7xen: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7xem: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7xel::I64;
           R2 = GHC.Exception.Underflow_closure+2;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.underflowException_info" {
     GHC.Exception.underflowException_info:
         const GHC.Exception.underflowException_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.887608555 UTC

[section ""data" . GHC.Exception.ratioZeroDenomException_closure" {
     GHC.Exception.ratioZeroDenomException_closure:
         const GHC.Exception.ratioZeroDenomException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.ratioZeroDenomException_entry() //  [R1]
         { []
         }
     {offset
       c7xeF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xeG; else goto c7xeH;
       c7xeG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xeH: // global
           (_c7xeC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7xeC::I64 == 0) goto c7xeE; else goto c7xeD;
       c7xeE: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7xeD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7xeC::I64;
           R2 = GHC.Exception.RatioZeroDenominator_closure+6;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.ratioZeroDenomException_info" {
     GHC.Exception.ratioZeroDenomException_info:
         const GHC.Exception.ratioZeroDenomException_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.891577625 UTC

[section ""data" . GHC.Exception.overflowException_closure" {
     GHC.Exception.overflowException_closure:
         const GHC.Exception.overflowException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.overflowException_entry() //  [R1]
         { []
         }
     {offset
       c7xeW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xeX; else goto c7xeY;
       c7xeX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xeY: // global
           (_c7xeT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7xeT::I64 == 0) goto c7xeV; else goto c7xeU;
       c7xeV: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7xeU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7xeT::I64;
           R2 = GHC.Exception.Overflow_closure+1;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.overflowException_info" {
     GHC.Exception.overflowException_info:
         const GHC.Exception.overflowException_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.895610939 UTC

[section ""data" . GHC.Exception.divZeroException_closure" {
     GHC.Exception.divZeroException_closure:
         const GHC.Exception.divZeroException_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Exception.divZeroException_entry() //  [R1]
         { []
         }
     {offset
       c7xfd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7xfe; else goto c7xff;
       c7xfe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7xff: // global
           (_c7xfa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7xfa::I64 == 0) goto c7xfc; else goto c7xfb;
       c7xfc: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7xfb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7xfa::I64;
           R2 = GHC.Exception.DivideByZero_closure+4;
           Sp = Sp - 16;
           call GHC.Exception.$fExceptionArithException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Exception.divZeroException_info" {
     GHC.Exception.divZeroException_info:
         const GHC.Exception.divZeroException_entry;
         const 0;
         const 4294967317;
         const S7wbI_srt+224;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.900182668 UTC

[section ""data" . GHC.Exception.SomeException_closure" {
     GHC.Exception.SomeException_closure:
         const GHC.Exception.SomeException_info;
 },
 GHC.Exception.SomeException_entry() //  [R2, R3]
         { []
         }
     {offset
       c7xft: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7xfx; else goto c7xfw;
       c7xfx: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.SomeException_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7xfw: // global
           I64[Hp - 16] = GHC.Exception.SomeException_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.SomeException_info" {
     GHC.Exception.SomeException_info:
         const GHC.Exception.SomeException_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.903538189 UTC

[section ""data" . GHC.Exception.Overflow_closure" {
     GHC.Exception.Overflow_closure:
         const GHC.Exception.Overflow_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.905190705 UTC

[section ""data" . GHC.Exception.Underflow_closure" {
     GHC.Exception.Underflow_closure:
         const GHC.Exception.Underflow_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.906875209 UTC

[section ""data" . GHC.Exception.LossOfPrecision_closure" {
     GHC.Exception.LossOfPrecision_closure:
         const GHC.Exception.LossOfPrecision_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.908575509 UTC

[section ""data" . GHC.Exception.DivideByZero_closure" {
     GHC.Exception.DivideByZero_closure:
         const GHC.Exception.DivideByZero_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.910649104 UTC

[section ""data" . GHC.Exception.Denormal_closure" {
     GHC.Exception.Denormal_closure:
         const GHC.Exception.Denormal_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.912230916 UTC

[section ""data" . GHC.Exception.RatioZeroDenominator_closure" {
     GHC.Exception.RatioZeroDenominator_closure:
         const GHC.Exception.RatioZeroDenominator_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.914527219 UTC

[section ""data" . GHC.Exception.ErrorCallWithLocation_closure" {
     GHC.Exception.ErrorCallWithLocation_closure:
         const GHC.Exception.ErrorCallWithLocation_info;
 },
 GHC.Exception.ErrorCallWithLocation_entry() //  [R2, R3]
         { []
         }
     {offset
       c7xfP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7xfT; else goto c7xfS;
       c7xfT: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.ErrorCallWithLocation_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7xfS: // global
           I64[Hp - 16] = GHC.Exception.ErrorCallWithLocation_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.ErrorCallWithLocation_info" {
     GHC.Exception.ErrorCallWithLocation_info:
         const GHC.Exception.ErrorCallWithLocation_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.918484486 UTC

[section ""data" . GHC.Exception.C:Exception_closure" {
     GHC.Exception.C:Exception_closure:
         const GHC.Exception.C:Exception_info;
 },
 GHC.Exception.C:Exception_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c7xg5: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7xg9; else goto c7xg8;
       c7xg9: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Exception.C:Exception_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7xg8: // global
           I64[Hp - 40] = GHC.Exception.C:Exception_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.C:Exception_info" {
     GHC.Exception.C:Exception_info:
         const GHC.Exception.C:Exception_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.922608015 UTC

[section ""cstring" . i7xgh_str" {
     i7xgh_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,83,111,109,101,69,120,99,101,112,116,105,111,110]
 },
 GHC.Exception.SomeException_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgg: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.SomeException_con_info" {
     GHC.Exception.SomeException_con_info:
         const GHC.Exception.SomeException_con_entry;
         const 2;
         const 4;
         const i7xgh_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.925664044 UTC

[section ""relreadonly" . GHC.Exception.ArithException_closure_tbl" {
     GHC.Exception.ArithException_closure_tbl:
         const GHC.Exception.Overflow_closure+1;
         const GHC.Exception.Underflow_closure+2;
         const GHC.Exception.LossOfPrecision_closure+3;
         const GHC.Exception.DivideByZero_closure+4;
         const GHC.Exception.Denormal_closure+5;
         const GHC.Exception.RatioZeroDenominator_closure+6;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.928163971 UTC

[section ""cstring" . i7xgp_str" {
     i7xgp_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,79,118,101,114,102,108,111,119]
 },
 GHC.Exception.Overflow_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgo: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Overflow_con_info" {
     GHC.Exception.Overflow_con_info:
         const GHC.Exception.Overflow_con_entry;
         const 4294967296;
         const 3;
         const i7xgp_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.931331562 UTC

[section ""cstring" . i7xgw_str" {
     i7xgw_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,85,110,100,101,114,102,108,111,119]
 },
 GHC.Exception.Underflow_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgv: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Underflow_con_info" {
     GHC.Exception.Underflow_con_info:
         const GHC.Exception.Underflow_con_entry;
         const 4294967296;
         const 4294967299;
         const i7xgw_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.934412036 UTC

[section ""cstring" . i7xgD_str" {
     i7xgD_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,76,111,115,115,79,102,80,114,101,99,105,115,105,111,110]
 },
 GHC.Exception.LossOfPrecision_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgC: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.LossOfPrecision_con_info" {
     GHC.Exception.LossOfPrecision_con_info:
         const GHC.Exception.LossOfPrecision_con_entry;
         const 4294967296;
         const 8589934595;
         const i7xgD_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.937527826 UTC

[section ""cstring" . i7xgK_str" {
     i7xgK_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,68,105,118,105,100,101,66,121,90,101,114,111]
 },
 GHC.Exception.DivideByZero_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgJ: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.DivideByZero_con_info" {
     GHC.Exception.DivideByZero_con_info:
         const GHC.Exception.DivideByZero_con_entry;
         const 4294967296;
         const 12884901891;
         const i7xgK_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.940563373 UTC

[section ""cstring" . i7xgR_str" {
     i7xgR_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,68,101,110,111,114,109,97,108]
 },
 GHC.Exception.Denormal_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgQ: // global
           R1 = R1 + 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.Denormal_con_info" {
     GHC.Exception.Denormal_con_info:
         const GHC.Exception.Denormal_con_entry;
         const 4294967296;
         const 17179869187;
         const i7xgR_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.943710967 UTC

[section ""cstring" . i7xgY_str" {
     i7xgY_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,82,97,116,105,111,90,101,114,111,68,101,110,111,109,105,110,97,116,111,114]
 },
 GHC.Exception.RatioZeroDenominator_con_entry() //  [R1]
         { []
         }
     {offset
       c7xgX: // global
           R1 = R1 + 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.RatioZeroDenominator_con_info" {
     GHC.Exception.RatioZeroDenominator_con_info:
         const GHC.Exception.RatioZeroDenominator_con_entry;
         const 4294967296;
         const 21474836483;
         const i7xgY_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.947305012 UTC

[section ""cstring" . i7xh5_str" {
     i7xh5_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,69,114,114,111,114,67,97,108,108,87,105,116,104,76,111,99,97,116,105,111,110]
 },
 GHC.Exception.ErrorCallWithLocation_con_entry() //  [R1]
         { []
         }
     {offset
       c7xh4: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.ErrorCallWithLocation_con_info" {
     GHC.Exception.ErrorCallWithLocation_con_info:
         const GHC.Exception.ErrorCallWithLocation_con_entry;
         const 2;
         const 4;
         const i7xh5_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.950403169 UTC

[section ""cstring" . i7xhc_str" {
     i7xhc_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,120,99,101,112,116,105,111,110,46,67,58,69,120,99,101,112,116,105,111,110]
 },
 GHC.Exception.C:Exception_con_entry() //  [R1]
         { []
         }
     {offset
       c7xhb: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Exception.C:Exception_con_info" {
     GHC.Exception.C:Exception_con_info:
         const GHC.Exception.C:Exception_con_entry;
         const 5;
         const 1;
         const i7xhc_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:46.95358901 UTC

[section ""relreadonly" . S7wbI_srt" {
     S7wbI_srt:
         const GHC.Exception.$w$cshowsPrec_closure;
         const GHC.Exception.$fExceptionArithException2_closure;
         const GHC.Exception.$fExceptionArithException4_closure;
         const GHC.Exception.$fExceptionArithException6_closure;
         const GHC.Exception.$fExceptionArithException8_closure;
         const GHC.Exception.$fExceptionArithException10_closure;
         const GHC.Exception.$fExceptionArithException12_closure;
         const Data.Typeable.Internal.sameTypeRep_closure;
         const GHC.Exception.$dmfromException_closure;
         const GHC.Exception.errorCallWithCallStackException10_closure;
         const GHC.Exception.errorCallWithCallStackException9_closure;
         const GHC.Exception.showCCSStack_closure;
         const GHC.Exception.errorCallWithCallStackException11_closure;
         const Data.Typeable.Internal.$wmkTrCon_closure;
         const GHC.Exception.$fExceptionErrorCall_$cfromException_closure;
         const GHC.Exception.$fExceptionErrorCall2_closure;
         const GHC.Exception.$fExceptionErrorCall_closure;
         const GHC.Exception.$fExceptionErrorCall_$ctoException_closure;
         const GHC.Exception.errorCallException_closure;
         const GHC.Exception.prettyCallStackLines_closure;
         const GHC.Exception.errorCallWithCallStackException6_closure;
         const GHC.Exception.errorCallWithCallStackException_xs_closure;
         const GHC.Exception.prettyCallStack_closure;
         const GHC.Exception.errorCallWithCallStackException_closure;
         const GHC.Stack.CCS.currentCallStack_closure;
         const GHC.Exception.$fExceptionArithException_$cfromException_closure;
         const GHC.Exception.$fExceptionArithException14_closure;
         const GHC.Exception.$fExceptionArithException_closure;
         const GHC.Exception.$fExceptionArithException_$ctoException_closure;
 }]

