
==================== Pre unarise: ====================
2018-03-16 16:07:26.796730614 UTC

GHC.OverloadedLabels.fromLabel [InlPrag=INLINE]
  :: forall (x :: GHC.Types.Symbol) a.
     GHC.OverloadedLabels.IsLabel x a =>
     a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=OtherCon []] =
    [] \r [v_scxKa] v_scxKa;

GHC.OverloadedLabels.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.OverloadedLabels.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule4];

GHC.OverloadedLabels.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.OverloadedLabels"#;

GHC.OverloadedLabels.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule2];

GHC.OverloadedLabels.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.OverloadedLabels.$trModule3
                                     GHC.OverloadedLabels.$trModule1];

$krep_rcxK1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcxK2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcConstraint
                                              GHC.Types.[]];

$krep2_rcxK3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcSymbol
                                              GHC.Types.[]];

$krep3_rcxK4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Types.krep$*
                                         $krep1_rcxK2];

GHC.OverloadedLabels.$tcIsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcxK3 $krep3_rcxK4];

$krep4_rcxK5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [1#];

GHC.OverloadedLabels.$tcIsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IsLabel"#;

GHC.OverloadedLabels.$tcIsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tcIsLabel3];

GHC.OverloadedLabels.$tcIsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [63717145371698301##
                                    7516490703205987704##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tcIsLabel2
                                    0#
                                    GHC.OverloadedLabels.$tcIsLabel1];

$krep5_rcxK6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep4_rcxK5 GHC.Types.[]];

$krep6_rcxK7 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcxK1 $krep5_rcxK6];

$krep7_rcxK8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.OverloadedLabels.$tcIsLabel
                                              $krep6_rcxK7];

GHC.OverloadedLabels.$tc'C:IsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcxK5 $krep7_rcxK8];

GHC.OverloadedLabels.$tc'C:IsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'C:IsLabel"#;

GHC.OverloadedLabels.$tc'C:IsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tc'C:IsLabel3];

GHC.OverloadedLabels.$tc'C:IsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8283571148151255172##
                                    4485319284429056444##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tc'C:IsLabel2
                                    2#
                                    GHC.OverloadedLabels.$tc'C:IsLabel1];


==================== STG syntax: ====================
2018-03-16 16:07:26.798802395 UTC

GHC.OverloadedLabels.fromLabel [InlPrag=INLINE]
  :: forall (x :: GHC.Types.Symbol) a.
     GHC.OverloadedLabels.IsLabel x a =>
     a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=OtherCon []] =
    [] \r [v_scxKa] v_scxKa;

GHC.OverloadedLabels.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.OverloadedLabels.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule4];

GHC.OverloadedLabels.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.OverloadedLabels"#;

GHC.OverloadedLabels.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule2];

GHC.OverloadedLabels.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.OverloadedLabels.$trModule3
                                     GHC.OverloadedLabels.$trModule1];

$krep_rcxK1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcxK2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcConstraint
                                              GHC.Types.[]];

$krep2_rcxK3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcSymbol
                                              GHC.Types.[]];

$krep3_rcxK4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Types.krep$*
                                         $krep1_rcxK2];

GHC.OverloadedLabels.$tcIsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcxK3 $krep3_rcxK4];

$krep4_rcxK5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [1#];

GHC.OverloadedLabels.$tcIsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IsLabel"#;

GHC.OverloadedLabels.$tcIsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tcIsLabel3];

GHC.OverloadedLabels.$tcIsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [63717145371698301##
                                    7516490703205987704##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tcIsLabel2
                                    0#
                                    GHC.OverloadedLabels.$tcIsLabel1];

$krep5_rcxK6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep4_rcxK5 GHC.Types.[]];

$krep6_rcxK7 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcxK1 $krep5_rcxK6];

$krep7_rcxK8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.OverloadedLabels.$tcIsLabel
                                              $krep6_rcxK7];

GHC.OverloadedLabels.$tc'C:IsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcxK5 $krep7_rcxK8];

GHC.OverloadedLabels.$tc'C:IsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'C:IsLabel"#;

GHC.OverloadedLabels.$tc'C:IsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tc'C:IsLabel3];

GHC.OverloadedLabels.$tc'C:IsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8283571148151255172##
                                    4485319284429056444##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tc'C:IsLabel2
                                    2#
                                    GHC.OverloadedLabels.$tc'C:IsLabel1];


==================== Pre unarise: ====================
2018-03-16 16:07:26.898275062 UTC

GHC.OverloadedLabels.fromLabel [InlPrag=INLINE]
  :: forall (x :: GHC.Types.Symbol) a.
     GHC.OverloadedLabels.IsLabel x a =>
     a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=OtherCon []] =
    [] \r [v_scxKX] v_scxKX;

GHC.OverloadedLabels.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.OverloadedLabels.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule4];

GHC.OverloadedLabels.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.OverloadedLabels"#;

GHC.OverloadedLabels.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule2];

GHC.OverloadedLabels.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.OverloadedLabels.$trModule3
                                     GHC.OverloadedLabels.$trModule1];

$krep_rcxK1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcxK2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcConstraint
                                              GHC.Types.[]];

$krep2_rcxK3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcSymbol
                                              GHC.Types.[]];

$krep3_rcxK4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Types.krep$*
                                         $krep1_rcxK2];

GHC.OverloadedLabels.$tcIsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcxK3 $krep3_rcxK4];

$krep4_rcxK5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [1#];

GHC.OverloadedLabels.$tcIsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IsLabel"#;

GHC.OverloadedLabels.$tcIsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tcIsLabel3];

GHC.OverloadedLabels.$tcIsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [63717145371698301##
                                    7516490703205987704##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tcIsLabel2
                                    0#
                                    GHC.OverloadedLabels.$tcIsLabel1];

$krep5_rcxK6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep4_rcxK5 GHC.Types.[]];

$krep6_rcxK7 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcxK1 $krep5_rcxK6];

$krep7_rcxK8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.OverloadedLabels.$tcIsLabel
                                              $krep6_rcxK7];

GHC.OverloadedLabels.$tc'C:IsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcxK5 $krep7_rcxK8];

GHC.OverloadedLabels.$tc'C:IsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'C:IsLabel"#;

GHC.OverloadedLabels.$tc'C:IsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tc'C:IsLabel3];

GHC.OverloadedLabels.$tc'C:IsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8283571148151255172##
                                    4485319284429056444##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tc'C:IsLabel2
                                    2#
                                    GHC.OverloadedLabels.$tc'C:IsLabel1];


==================== STG syntax: ====================
2018-03-16 16:07:26.900120734 UTC

GHC.OverloadedLabels.fromLabel [InlPrag=INLINE]
  :: forall (x :: GHC.Types.Symbol) a.
     GHC.OverloadedLabels.IsLabel x a =>
     a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=OtherCon []] =
    [] \r [v_scxKX] v_scxKX;

GHC.OverloadedLabels.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.OverloadedLabels.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule4];

GHC.OverloadedLabels.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.OverloadedLabels"#;

GHC.OverloadedLabels.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$trModule2];

GHC.OverloadedLabels.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.OverloadedLabels.$trModule3
                                     GHC.OverloadedLabels.$trModule1];

$krep_rcxK1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep1_rcxK2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcConstraint
                                              GHC.Types.[]];

$krep2_rcxK3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcSymbol
                                              GHC.Types.[]];

$krep3_rcxK4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Types.krep$*
                                         $krep1_rcxK2];

GHC.OverloadedLabels.$tcIsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rcxK3 $krep3_rcxK4];

$krep4_rcxK5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [1#];

GHC.OverloadedLabels.$tcIsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IsLabel"#;

GHC.OverloadedLabels.$tcIsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tcIsLabel3];

GHC.OverloadedLabels.$tcIsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [63717145371698301##
                                    7516490703205987704##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tcIsLabel2
                                    0#
                                    GHC.OverloadedLabels.$tcIsLabel1];

$krep5_rcxK6 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep4_rcxK5 GHC.Types.[]];

$krep6_rcxK7 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep_rcxK1 $krep5_rcxK6];

$krep7_rcxK8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.OverloadedLabels.$tcIsLabel
                                              $krep6_rcxK7];

GHC.OverloadedLabels.$tc'C:IsLabel1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rcxK5 $krep7_rcxK8];

GHC.OverloadedLabels.$tc'C:IsLabel3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'C:IsLabel"#;

GHC.OverloadedLabels.$tc'C:IsLabel2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.OverloadedLabels.$tc'C:IsLabel3];

GHC.OverloadedLabels.$tc'C:IsLabel :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8283571148151255172##
                                    4485319284429056444##
                                    GHC.OverloadedLabels.$trModule
                                    GHC.OverloadedLabels.$tc'C:IsLabel2
                                    2#
                                    GHC.OverloadedLabels.$tc'C:IsLabel1];

