
==================== Asm code ====================
2018-03-16 16:07:27.448439308 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$fReadByteOrder11_bytes
.type GHC.ByteOrder.$fReadByteOrder11_bytes, @object
GHC.ByteOrder.$fReadByteOrder11_bytes:
	.asciz "BigEndian"


==================== Asm code ====================
2018-03-16 16:07:27.451162925 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder10_closure
.type GHC.ByteOrder.$fReadByteOrder10_closure, @object
GHC.ByteOrder.$fReadByteOrder10_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.452092566 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder10_entry
.type GHC.ByteOrder.$fReadByteOrder10_entry, @object
GHC.ByteOrder.$fReadByteOrder10_entry:
_cczr2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczr3
_cczr4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczr1
_cczr0:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.ByteOrder.$fReadByteOrder11_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczr3:
	jmp *-16(%r13)
_cczr1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder10_entry, .-GHC.ByteOrder.$fReadByteOrder10_entry


==================== Asm code ====================
2018-03-16 16:07:27.452805088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder10_info
.type GHC.ByteOrder.$fReadByteOrder10_info, @object
GHC.ByteOrder.$fReadByteOrder10_info:
	.quad	GHC.ByteOrder.$fReadByteOrder10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.454525446 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$fReadByteOrder7_bytes
.type GHC.ByteOrder.$fReadByteOrder7_bytes, @object
GHC.ByteOrder.$fReadByteOrder7_bytes:
	.asciz "LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:27.457022278 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder6_closure
.type GHC.ByteOrder.$fReadByteOrder6_closure, @object
GHC.ByteOrder.$fReadByteOrder6_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.457893541 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder6_entry
.type GHC.ByteOrder.$fReadByteOrder6_entry, @object
GHC.ByteOrder.$fReadByteOrder6_entry:
_cczrj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczrk
_cczrl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczri
_cczrh:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.ByteOrder.$fReadByteOrder7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczrk:
	jmp *-16(%r13)
_cczri:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder6_entry, .-GHC.ByteOrder.$fReadByteOrder6_entry


==================== Asm code ====================
2018-03-16 16:07:27.458626812 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder6_info
.type GHC.ByteOrder.$fReadByteOrder6_info, @object
GHC.ByteOrder.$fReadByteOrder6_info:
	.quad	GHC.ByteOrder.$fReadByteOrder6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.461884823 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.462661268 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry:
_cczrE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczrF
_cczrG:
	movq $block_cczrx_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczrx
_cczry:
	movq (%rbx),%rax
	jmp *(%rax)
_cczrF:
	movl $GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:27.463357316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.464105693 UTC

.section .text
.align 8
_cczrx:
_cczrx:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczrB
_cczrC:
	movq %rax,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_cczrB:
	movq %rax,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _cczrx, .-_cczrx


==================== Asm code ====================
2018-03-16 16:07:27.464764333 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczrx_info:
	.quad	_cczrx
	.quad	1
	.quad	12884901918
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.467762246 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshow_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.46853952 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshow_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_entry:
_cczsa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczsb
_cczsc:
	movq $block_cczs3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczs3
_cczs4:
	movq (%rbx),%rax
	jmp *(%rax)
_cczsb:
	movl $GHC.ByteOrder.$fShowByteOrder_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder_$cshow_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:27.469191062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_info
.type GHC.ByteOrder.$fShowByteOrder_$cshow_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.469987465 UTC

.section .text
.align 8
_cczs3:
_cczs3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczs7
_cczs8:
	movl $GHC.ByteOrder.$fReadByteOrder6_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cczs7:
	movl $GHC.ByteOrder.$fReadByteOrder10_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczs3, .-_cczs3


==================== Asm code ====================
2018-03-16 16:07:27.470618153 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczs3_info:
	.quad	_cczs3
	.quad	0
	.quad	12884901918
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.474712555 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder1_closure
.type GHC.ByteOrder.$fShowByteOrder1_closure, @object
GHC.ByteOrder.$fShowByteOrder1_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.47552645 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder1_entry
.type GHC.ByteOrder.$fShowByteOrder1_entry, @object
GHC.ByteOrder.$fShowByteOrder1_entry:
_cczsI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczsJ
_cczsK:
	movq $block_cczsB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczsB
_cczsC:
	movq (%rbx),%rax
	jmp *(%rax)
_cczsJ:
	movl $GHC.ByteOrder.$fShowByteOrder1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder1_entry, .-GHC.ByteOrder.$fShowByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:27.476236232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder1_info
.type GHC.ByteOrder.$fShowByteOrder1_info, @object
GHC.ByteOrder.$fShowByteOrder1_info:
	.quad	GHC.ByteOrder.$fShowByteOrder1_entry
	.quad	0
	.quad	81604378638
	.quad	8589934607
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.476997972 UTC

.section .text
.align 8
_cczsB:
_cczsB:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczsF
_cczsG:
	movq %rax,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_cczsF:
	movq %rax,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _cczsB, .-_cczsB


==================== Asm code ====================
2018-03-16 16:07:27.477692106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczsB_info:
	.quad	_cczsB
	.quad	1
	.quad	12884901918
	.quad	ScypP_srt


==================== Asm code ====================
2018-03-16 16:07:27.480705401 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.48138028 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_entry:
_cczt7:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.ByteOrder.$fShowByteOrder1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.ByteOrder.$fShowByteOrder_$cshowList_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:27.481971419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_info
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScypP_srt+32


==================== Asm code ====================
2018-03-16 16:07:27.483748116 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_closure
.type GHC.ByteOrder.$fShowByteOrder_closure, @object
GHC.ByteOrder.$fShowByteOrder_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure+3
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_closure+1
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.486229733 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder9_closure
.type GHC.ByteOrder.$fReadByteOrder9_closure, @object
GHC.ByteOrder.$fReadByteOrder9_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder9_info


==================== Asm code ====================
2018-03-16 16:07:27.486899393 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder9_entry
.type GHC.ByteOrder.$fReadByteOrder9_entry, @object
GHC.ByteOrder.$fReadByteOrder9_entry:
_ccztj:
	movl $GHC.ByteOrder.BigEndian_closure+1,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.ByteOrder.$fReadByteOrder9_entry, .-GHC.ByteOrder.$fReadByteOrder9_entry


==================== Asm code ====================
2018-03-16 16:07:27.487483726 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder9_info
.type GHC.ByteOrder.$fReadByteOrder9_info, @object
GHC.ByteOrder.$fReadByteOrder9_info:
	.quad	GHC.ByteOrder.$fReadByteOrder9_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.489177144 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder8_closure
.type GHC.ByteOrder.$fReadByteOrder8_closure, @object
GHC.ByteOrder.$fReadByteOrder8_closure:
	.quad	(,)_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder10_closure
	.quad	GHC.ByteOrder.$fReadByteOrder9_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.49131752 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder5_closure
.type GHC.ByteOrder.$fReadByteOrder5_closure, @object
GHC.ByteOrder.$fReadByteOrder5_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder5_info


==================== Asm code ====================
2018-03-16 16:07:27.491927964 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder5_entry
.type GHC.ByteOrder.$fReadByteOrder5_entry, @object
GHC.ByteOrder.$fReadByteOrder5_entry:
_ccztv:
	movl $GHC.ByteOrder.LittleEndian_closure+2,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.ByteOrder.$fReadByteOrder5_entry, .-GHC.ByteOrder.$fReadByteOrder5_entry


==================== Asm code ====================
2018-03-16 16:07:27.492533879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder5_info
.type GHC.ByteOrder.$fReadByteOrder5_info, @object
GHC.ByteOrder.$fReadByteOrder5_info:
	.quad	GHC.ByteOrder.$fReadByteOrder5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.494381077 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder4_closure
.type GHC.ByteOrder.$fReadByteOrder4_closure, @object
GHC.ByteOrder.$fReadByteOrder4_closure:
	.quad	(,)_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder6_closure
	.quad	GHC.ByteOrder.$fReadByteOrder5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.496126856 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder3_closure
.type GHC.ByteOrder.$fReadByteOrder3_closure, @object
GHC.ByteOrder.$fReadByteOrder3_closure:
	.quad	:_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder4_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.498145249 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_sps_closure
.type GHC.ByteOrder.$fReadByteOrder_sps_closure, @object
GHC.ByteOrder.$fReadByteOrder_sps_closure:
	.quad	:_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder8_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder3_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.500279279 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder2_closure
.type GHC.ByteOrder.$fReadByteOrder2_closure, @object
GHC.ByteOrder.$fReadByteOrder2_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.500946336 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder2_entry
.type GHC.ByteOrder.$fReadByteOrder2_entry, @object
GHC.ByteOrder.$fReadByteOrder2_entry:
_ccztJ:
	movq %r14,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder_sps_closure+2,%r14d
	jmp GHC.Read.choose2_entry
	.size GHC.ByteOrder.$fReadByteOrder2_entry, .-GHC.ByteOrder.$fReadByteOrder2_entry


==================== Asm code ====================
2018-03-16 16:07:27.501557566 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder2_info
.type GHC.ByteOrder.$fReadByteOrder2_info, @object
GHC.ByteOrder.$fReadByteOrder2_info:
	.quad	GHC.ByteOrder.$fReadByteOrder2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScypP_srt+40


==================== Asm code ====================
2018-03-16 16:07:27.503726777 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder1_closure
.type GHC.ByteOrder.$fReadByteOrder1_closure, @object
GHC.ByteOrder.$fReadByteOrder1_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.504398026 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder1_entry
.type GHC.ByteOrder.$fReadByteOrder1_entry, @object
GHC.ByteOrder.$fReadByteOrder1_entry:
_ccztU:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder2_closure+1,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.ByteOrder.$fReadByteOrder1_entry, .-GHC.ByteOrder.$fReadByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:27.505053634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder1_info
.type GHC.ByteOrder.$fReadByteOrder1_info, @object
GHC.ByteOrder.$fReadByteOrder1_info:
	.quad	GHC.ByteOrder.$fReadByteOrder1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScypP_srt+56


==================== Asm code ====================
2018-03-16 16:07:27.508351012 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.509718365 UTC

.section .text
.align 8
sat_scyl0_entry:
_cczu9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczua
_cczub:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.ByteOrder.$fReadByteOrder2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_cczua:
	jmp *-16(%r13)
	.size sat_scyl0_entry, .-sat_scyl0_entry


==================== Asm code ====================
2018-03-16 16:07:27.510366806 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyl0_info:
	.quad	sat_scyl0_entry
	.quad	1
	.quad	12884901904
	.quad	ScypP_srt+56


==================== Asm code ====================
2018-03-16 16:07:27.511132242 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry:
_cczuc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczug
_cczuf:
	movq $sat_scyl0_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_cczug:
	movq $24,904(%r13)
	movl $GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:27.511837334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScypP_srt+56


==================== Asm code ====================
2018-03-16 16:07:27.514944804 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.515811742 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry:
_cczuv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczuw
_cczux:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczuu
_cczut:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.ByteOrder.$fReadByteOrder1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_cczuw:
	jmp *-16(%r13)
_cczuu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:27.516535469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	ScypP_srt+80


==================== Asm code ====================
2018-03-16 16:07:27.519160205 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder12_closure
.type GHC.ByteOrder.$fReadByteOrder12_closure, @object
GHC.ByteOrder.$fReadByteOrder12_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.520029185 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder12_entry
.type GHC.ByteOrder.$fReadByteOrder12_entry, @object
GHC.ByteOrder.$fReadByteOrder12_entry:
_cczuL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczuM
_cczuN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczuK
_cczuJ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cczuM:
	jmp *-16(%r13)
_cczuK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder12_entry, .-GHC.ByteOrder.$fReadByteOrder12_entry


==================== Asm code ====================
2018-03-16 16:07:27.520745632 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder12_info
.type GHC.ByteOrder.$fReadByteOrder12_info, @object
GHC.ByteOrder.$fReadByteOrder12_info:
	.quad	GHC.ByteOrder.$fReadByteOrder12_entry
	.quad	0
	.quad	4294967317
	.quad	ScypP_srt+96


==================== Asm code ====================
2018-03-16 16:07:27.522948734 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadList_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.523603537 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadList_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_entry:
_cczuZ:
	movq %r14,%rsi
	movl $GHC.ByteOrder.$fReadByteOrder12_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.ByteOrder.$fReadByteOrder_$creadList_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:27.524247379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_info
.type GHC.ByteOrder.$fReadByteOrder_$creadList_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScypP_srt+104


==================== Asm code ====================
2018-03-16 16:07:27.526607363 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_closure
.type GHC.ByteOrder.$fReadByteOrder_closure, @object
GHC.ByteOrder.$fReadByteOrder_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder1_closure+2
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.528450034 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fBoundedByteOrder_closure
.type GHC.ByteOrder.$fBoundedByteOrder_closure, @object
GHC.ByteOrder.$fBoundedByteOrder_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.ByteOrder.BigEndian_closure+1
	.quad	GHC.ByteOrder.LittleEndian_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.532507759 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c<_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_info


==================== Asm code ====================
2018-03-16 16:07:27.533323717 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c<_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_entry:
_cczvj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczvk
_cczvl:
	movq $block_cczvc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczvc
_cczvd:
	movq (%rbx),%rax
	jmp *(%rax)
_cczvk:
	movl $GHC.ByteOrder.$fOrdByteOrder_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c<_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c<_entry


==================== Asm code ====================
2018-03-16 16:07:27.534028215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_info
.type GHC.ByteOrder.$fOrdByteOrder_$c<_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.534857008 UTC

.section .text
.align 8
_cczvc:
_cczvc:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczvg
_cczvh:
	movq $block_cczvD_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczvD
_cczvF:
	movq (%rbx),%rax
	jmp *(%rax)
_cczvg:
	movq $block_cczvo_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczvo
_cczvq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczvc, .-_cczvc


==================== Asm code ====================
2018-03-16 16:07:27.535530173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczvc_info:
	.quad	_cczvc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.536298078 UTC

.section .text
.align 8
_cczvo:
_cczvo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczvw
_cczvA:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczvw:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczvo, .-_cczvo


==================== Asm code ====================
2018-03-16 16:07:27.536996923 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczvo_info:
	.quad	_cczvo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.53807517 UTC

.section .text
.align 8
_cczvD:
_cczvD:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczvD, .-_cczvD


==================== Asm code ====================
2018-03-16 16:07:27.538690096 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczvD_info:
	.quad	_cczvD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.543779368 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_info


==================== Asm code ====================
2018-03-16 16:07:27.544574693 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry:
_cczwn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczwo
_cczwp:
	movq $block_cczwg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczwg
_cczwh:
	movq (%rbx),%rax
	jmp *(%rax)
_cczwo:
	movl $GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry, .-GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:07:27.545611112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_info
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_info, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.546377112 UTC

.section .text
.align 8
_cczwg:
_cczwg:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczwk
_cczwl:
	movq $block_cczwH_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczwH
_cczwJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cczwk:
	movq $block_cczws_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczws
_cczwu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczwg, .-_cczwg


==================== Asm code ====================
2018-03-16 16:07:27.547064518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczwg_info:
	.quad	_cczwg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.547755933 UTC

.section .text
.align 8
_cczws:
_cczws:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uczwX
_cczwE:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uczwX:
	addq $8,%rbp
	jmp _cczwT
	.size _cczws, .-_cczws


==================== Asm code ====================
2018-03-16 16:07:27.548408062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczws_info:
	.quad	_cczws
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.54912906 UTC

.section .text
.align 8
_cczwH:
_cczwH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczwP
_uczwW:
	addq $8,%rbp
	jmp _cczwT
_cczwP:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczwH, .-_cczwH


==================== Asm code ====================
2018-03-16 16:07:27.549798633 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczwH_info:
	.quad	_cczwH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.550458415 UTC

.section .text
.align 8
_cczwT:
_cczwT:
	movl $GHC.Types.EQ_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczwT, .-_cczwT


==================== Asm code ====================
2018-03-16 16:07:27.554837486 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c==_closure
.type GHC.ByteOrder.$fEqByteOrder_$c==_closure, @object
GHC.ByteOrder.$fEqByteOrder_$c==_closure:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_info


==================== Asm code ====================
2018-03-16 16:07:27.555617499 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEqByteOrder_$c==_entry
.type GHC.ByteOrder.$fEqByteOrder_$c==_entry, @object
GHC.ByteOrder.$fEqByteOrder_$c==_entry:
_cczxG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczxH
_cczxI:
	movq $block_cczxz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczxz
_cczxA:
	movq (%rbx),%rax
	jmp *(%rax)
_cczxH:
	movl $GHC.ByteOrder.$fEqByteOrder_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEqByteOrder_$c==_entry, .-GHC.ByteOrder.$fEqByteOrder_$c==_entry


==================== Asm code ====================
2018-03-16 16:07:27.55628055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c==_info
.type GHC.ByteOrder.$fEqByteOrder_$c==_info, @object
GHC.ByteOrder.$fEqByteOrder_$c==_info:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.557078412 UTC

.section .text
.align 8
_cczxz:
_cczxz:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczxD
_cczxE:
	movq $block_cczy0_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczy0
_cczy2:
	movq (%rbx),%rax
	jmp *(%rax)
_cczxD:
	movq $block_cczxL_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczxL
_cczxN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczxz, .-_cczxz


==================== Asm code ====================
2018-03-16 16:07:27.557784403 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczxz_info:
	.quad	_cczxz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.558502424 UTC

.section .text
.align 8
_cczxL:
_cczxL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uczyh
_uczyi:
	addq $8,%rbp
	jmp _cczy8
_uczyh:
	addq $8,%rbp
	jmp _cczyc
	.size _cczxL, .-_cczxL


==================== Asm code ====================
2018-03-16 16:07:27.559101709 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczxL_info:
	.quad	_cczxL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.55978378 UTC

.section .text
.align 8
_cczy0:
_cczy0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uczyf
_uczyg:
	addq $8,%rbp
	jmp _cczyc
_uczyf:
	addq $8,%rbp
	jmp _cczy8
	.size _cczy0, .-_cczy0


==================== Asm code ====================
2018-03-16 16:07:27.560375349 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczy0_info:
	.quad	_cczy0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.56103642 UTC

.section .text
.align 8
_cczy8:
_cczy8:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczy8, .-_cczy8


==================== Asm code ====================
2018-03-16 16:07:27.561694387 UTC

.section .text
.align 8
_cczyc:
_cczyc:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczyc, .-_cczyc


==================== Asm code ====================
2018-03-16 16:07:27.566466415 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_closure
.type GHC.ByteOrder.$fEqByteOrder_$c/=_closure, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_closure:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_info


==================== Asm code ====================
2018-03-16 16:07:27.567246672 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_entry
.type GHC.ByteOrder.$fEqByteOrder_$c/=_entry, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_entry:
_cczz4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczz5
_cczz6:
	movq $block_cczyX_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczyX
_cczyY:
	movq (%rbx),%rax
	jmp *(%rax)
_cczz5:
	movl $GHC.ByteOrder.$fEqByteOrder_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEqByteOrder_$c/=_entry, .-GHC.ByteOrder.$fEqByteOrder_$c/=_entry


==================== Asm code ====================
2018-03-16 16:07:27.567931677 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_info
.type GHC.ByteOrder.$fEqByteOrder_$c/=_info, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_info:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.568748078 UTC

.section .text
.align 8
_cczyX:
_cczyX:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczz1
_cczz2:
	movq $block_cczzo_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczzo
_cczzq:
	movq (%rbx),%rax
	jmp *(%rax)
_cczz1:
	movq $block_cczz9_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczz9
_cczzb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczyX, .-_cczyX


==================== Asm code ====================
2018-03-16 16:07:27.569493546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczyX_info:
	.quad	_cczyX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.570171428 UTC

.section .text
.align 8
_cczz9:
_cczz9:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uczzF
_uczzG:
	addq $8,%rbp
	jmp _cczzw
_uczzF:
	addq $8,%rbp
	jmp _cczzA
	.size _cczz9, .-_cczz9


==================== Asm code ====================
2018-03-16 16:07:27.57080712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczz9_info:
	.quad	_cczz9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.571500142 UTC

.section .text
.align 8
_cczzo:
_cczzo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uczzD
_uczzE:
	addq $8,%rbp
	jmp _cczzA
_uczzD:
	addq $8,%rbp
	jmp _cczzw
	.size _cczzo, .-_cczzo


==================== Asm code ====================
2018-03-16 16:07:27.572124009 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczzo_info:
	.quad	_cczzo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.572828226 UTC

.section .text
.align 8
_cczzw:
_cczzw:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczzw, .-_cczzw


==================== Asm code ====================
2018-03-16 16:07:27.57351891 UTC

.section .text
.align 8
_cczzA:
_cczzA:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczzA, .-_cczzA


==================== Asm code ====================
2018-03-16 16:07:27.575988874 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_closure
.type GHC.ByteOrder.$fEqByteOrder_closure, @object
GHC.ByteOrder.$fEqByteOrder_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_closure+2
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.580617203 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_info


==================== Asm code ====================
2018-03-16 16:07:27.581439023 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_entry:
_cczAt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczAu
_cczAv:
	movq $block_cczAm_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczAm
_cczAn:
	movq (%rbx),%rax
	jmp *(%rax)
_cczAu:
	movl $GHC.ByteOrder.$fOrdByteOrder_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c<=_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c<=_entry


==================== Asm code ====================
2018-03-16 16:07:27.582143469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_info
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.582942626 UTC

.section .text
.align 8
_cczAm:
_cczAm:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczAq
_cczAr:
	movq $block_cczAN_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczAN
_cczAP:
	movq (%rbx),%rax
	jmp *(%rax)
_cczAq:
	movq $block_cczAy_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczAy
_cczAA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczAm, .-_cczAm


==================== Asm code ====================
2018-03-16 16:07:27.583616482 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczAm_info:
	.quad	_cczAm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.584347902 UTC

.section .text
.align 8
_cczAy:
_cczAy:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczAG
_cczAK:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczAG:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczAy, .-_cczAy


==================== Asm code ====================
2018-03-16 16:07:27.584969468 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczAy_info:
	.quad	_cczAy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.585634407 UTC

.section .text
.align 8
_cczAN:
_cczAN:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczAN, .-_cczAN


==================== Asm code ====================
2018-03-16 16:07:27.58622795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczAN_info:
	.quad	_cczAN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.590023467 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_closure
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_info


==================== Asm code ====================
2018-03-16 16:07:27.590849379 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_entry
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_entry:
_cczBx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczBy
_cczBz:
	movq $block_cczBq_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczBq
_cczBr:
	movq (%rbx),%rax
	jmp *(%rax)
_cczBy:
	movl $GHC.ByteOrder.$fOrdByteOrder_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$cmax_entry, .-GHC.ByteOrder.$fOrdByteOrder_$cmax_entry


==================== Asm code ====================
2018-03-16 16:07:27.591561365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_info
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_info, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.592352897 UTC

.section .text
.align 8
_cczBq:
_cczBq:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczBu
_cczBv:
	movq $block_cczBF_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczBF
_cczBH:
	movq (%rbx),%rax
	jmp *(%rax)
_cczBu:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczBq, .-_cczBq


==================== Asm code ====================
2018-03-16 16:07:27.59307551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczBq_info:
	.quad	_cczBq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.593777634 UTC

.section .text
.align 8
_cczBF:
_cczBF:
	movl $GHC.ByteOrder.LittleEndian_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczBF, .-_cczBF


==================== Asm code ====================
2018-03-16 16:07:27.594366235 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczBF_info:
	.quad	_cczBF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.598292582 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_info


==================== Asm code ====================
2018-03-16 16:07:27.59908461 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_entry:
_cczCh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczCi
_cczCj:
	movq $block_cczCa_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczCa
_cczCb:
	movq (%rbx),%rax
	jmp *(%rax)
_cczCi:
	movl $GHC.ByteOrder.$fOrdByteOrder_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c>=_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c>=_entry


==================== Asm code ====================
2018-03-16 16:07:27.599744073 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_info
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.600500866 UTC

.section .text
.align 8
_cczCa:
_cczCa:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczCe
_cczCf:
	movq $block_cczCB_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczCB
_cczCD:
	movq (%rbx),%rax
	jmp *(%rax)
_cczCe:
	movq $block_cczCm_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczCm
_cczCo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczCa, .-_cczCa


==================== Asm code ====================
2018-03-16 16:07:27.601161052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczCa_info:
	.quad	_cczCa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.602171321 UTC

.section .text
.align 8
_cczCm:
_cczCm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczCu
_cczCy:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczCu:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczCm, .-_cczCm


==================== Asm code ====================
2018-03-16 16:07:27.602913177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczCm_info:
	.quad	_cczCm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.603594822 UTC

.section .text
.align 8
_cczCB:
_cczCB:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczCB, .-_cczCB


==================== Asm code ====================
2018-03-16 16:07:27.604207512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczCB_info:
	.quad	_cczCB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.606542316 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c>_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_info


==================== Asm code ====================
2018-03-16 16:07:27.607219409 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c>_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_entry:
_cczDe:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.ByteOrder.$fOrdByteOrder_$c<_entry
	.size GHC.ByteOrder.$fOrdByteOrder_$c>_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c>_entry


==================== Asm code ====================
2018-03-16 16:07:27.608395279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_info
.type GHC.ByteOrder.$fOrdByteOrder_$c>_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.611821177 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_closure
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_info


==================== Asm code ====================
2018-03-16 16:07:27.612630756 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_entry
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_entry:
_cczDw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczDx
_cczDy:
	movq $block_cczDp_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczDp
_cczDq:
	movq (%rbx),%rax
	jmp *(%rax)
_cczDx:
	movl $GHC.ByteOrder.$fOrdByteOrder_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$cmin_entry, .-GHC.ByteOrder.$fOrdByteOrder_$cmin_entry


==================== Asm code ====================
2018-03-16 16:07:27.613377101 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_info
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_info, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.614193414 UTC

.section .text
.align 8
_cczDp:
_cczDp:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczDt
_cczDu:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cczDt:
	movq $block_cczDB_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cczDB
_cczDD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczDp, .-_cczDp


==================== Asm code ====================
2018-03-16 16:07:27.61486835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczDp_info:
	.quad	_cczDp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.615502297 UTC

.section .text
.align 8
_cczDB:
_cczDB:
	movl $GHC.ByteOrder.BigEndian_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczDB, .-_cczDB


==================== Asm code ====================
2018-03-16 16:07:27.616103275 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczDB_info:
	.quad	_cczDB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.618349494 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_closure
.type GHC.ByteOrder.$fOrdByteOrder_closure, @object
GHC.ByteOrder.$fOrdByteOrder_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.ByteOrder.$fEqByteOrder_closure+1
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.62007304 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.targetByteOrder_closure
.type GHC.ByteOrder.targetByteOrder_closure, @object
GHC.ByteOrder.targetByteOrder_closure:
	.quad	GHC.ByteOrder.LittleEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:27.621893823 UTC

.section .data
.align 8
.align 1
lvl_rcykn_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.623664994 UTC

.section .data
.align 8
.align 1
lvl1_rcyko_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:27.626775804 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info


==================== Asm code ====================
2018-03-16 16:07:27.627624415 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry:
_cczEk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczEl
_cczEm:
	movq $block_cczEd_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczEd
_cczEe:
	movq (%rbx),%rax
	jmp *(%rax)
_cczEl:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 16:07:27.628329384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:27.629083817 UTC

.section .text
.align 8
_cczEd:
_cczEd:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczEh
_cczEi:
	movl $lvl1_rcyko_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczEh:
	movl $lvl_rcykn_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczEd, .-_cczEd


==================== Asm code ====================
2018-03-16 16:07:27.63024052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczEd_info:
	.quad	_cczEd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.632018541 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rcykp_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:07:27.634702076 UTC

.section .data
.align 8
.align 1
lvl3_rcykq_closure:
	.quad	lvl3_rcykq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.635568023 UTC

.section .text
.align 8
lvl3_rcykq_entry:
_cczEO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczEP
_cczEQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczEN
_cczEM:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl2_rcykp_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczEP:
	jmp *-16(%r13)
_cczEN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rcykq_entry, .-lvl3_rcykq_entry


==================== Asm code ====================
2018-03-16 16:07:27.636320538 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rcykq_info:
	.quad	lvl3_rcykq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.638157283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$trModule4_bytes
.type GHC.ByteOrder.$trModule4_bytes, @object
GHC.ByteOrder.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:27.641730216 UTC

.section .data
.align 8
.align 1
lvl4_rcykr_closure:
	.quad	lvl4_rcykr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.642540271 UTC

.section .text
.align 8
lvl4_rcykr_entry:
_cczF5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczF6
_cczF7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczF4
_cczF3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.ByteOrder.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczF6:
	jmp *-16(%r13)
_cczF4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_rcykr_entry, .-lvl4_rcykr_entry


==================== Asm code ====================
2018-03-16 16:07:27.643231967 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rcykr_info:
	.quad	lvl4_rcykr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.645008743 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$trModule2_bytes
.type GHC.ByteOrder.$trModule2_bytes, @object
GHC.ByteOrder.$trModule2_bytes:
	.asciz "GHC.ByteOrder"


==================== Asm code ====================
2018-03-16 16:07:27.647570758 UTC

.section .data
.align 8
.align 1
lvl5_rcyks_closure:
	.quad	lvl5_rcyks_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.648379979 UTC

.section .text
.align 8
lvl5_rcyks_entry:
_cczFm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczFn
_cczFo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczFl
_cczFk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.ByteOrder.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczFn:
	jmp *-16(%r13)
_cczFl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_rcyks_entry, .-lvl5_rcyks_entry


==================== Asm code ====================
2018-03-16 16:07:27.649107834 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rcyks_info:
	.quad	lvl5_rcyks_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.650788762 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rcykt_bytes:
	.asciz "./GHC/ByteOrder.hs"


==================== Asm code ====================
2018-03-16 16:07:27.65336334 UTC

.section .data
.align 8
.align 1
lvl7_rcyku_closure:
	.quad	lvl7_rcyku_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.654195264 UTC

.section .text
.align 8
lvl7_rcyku_entry:
_cczFD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczFE
_cczFF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczFC
_cczFB:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl6_rcykt_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczFE:
	jmp *-16(%r13)
_cczFC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rcyku_entry, .-lvl7_rcyku_entry


==================== Asm code ====================
2018-03-16 16:07:27.654867938 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rcyku_info:
	.quad	lvl7_rcyku_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.65660028 UTC

.section .data
.align 8
.align 1
lvl8_rcykv_closure:
	.quad	GHC.Types.I#_con_info
	.quad	26


==================== Asm code ====================
2018-03-16 16:07:27.658368492 UTC

.section .data
.align 8
.align 1
lvl9_rcykw_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:27.660065058 UTC

.section .data
.align 8
.align 1
lvl10_rcykx_closure:
	.quad	GHC.Types.I#_con_info
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:27.662239094 UTC

.section .data
.align 8
.align 1
lvl11_rcyky_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl4_rcykr_closure
	.quad	lvl5_rcyks_closure
	.quad	lvl7_rcyku_closure
	.quad	lvl8_rcykv_closure+1
	.quad	lvl9_rcykw_closure+1
	.quad	lvl8_rcykv_closure+1
	.quad	lvl10_rcykx_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.664046601 UTC

.section .data
.align 8
.align 1
lvl12_rcykz_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl3_rcykq_closure
	.quad	lvl11_rcyky_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.665842912 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rcykA_bytes:
	.asciz "pred{ByteOrder}: tried to take `pred' of first tag in enumeration"


==================== Asm code ====================
2018-03-16 16:07:27.66898584 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder3_closure
.type GHC.ByteOrder.$fEnumByteOrder3_closure, @object
GHC.ByteOrder.$fEnumByteOrder3_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.670641059 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder3_entry
.type GHC.ByteOrder.$fEnumByteOrder3_entry, @object
GHC.ByteOrder.$fEnumByteOrder3_entry:
_cczG1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cczG2
_cczG3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczFY
_cczFX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cczFZ_info,-24(%rbp)
	movl $lvl13_rcykA_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczG2:
	jmp *-16(%r13)
_cczFY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder3_entry, .-GHC.ByteOrder.$fEnumByteOrder3_entry


==================== Asm code ====================
2018-03-16 16:07:27.67199829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder3_info
.type GHC.ByteOrder.$fEnumByteOrder3_info, @object
GHC.ByteOrder.$fEnumByteOrder3_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder3_entry
	.quad	0
	.quad	12884901909
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.67267507 UTC

.section .text
.align 8
_cczFZ:
_cczFZ:
	movq %rbx,%rsi
	movl $lvl12_rcykz_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cczFZ, .-_cczFZ


==================== Asm code ====================
2018-03-16 16:07:27.673283991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczFZ_info:
	.quad	_cczFZ
	.quad	0
	.quad	12884901918
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.67624768 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.676951363 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_entry:
_cczGs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczGt
_cczGu:
	movq $block_cczGl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczGl
_cczGm:
	movq (%rbx),%rax
	jmp *(%rax)
_cczGt:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cpred_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cpred_entry


==================== Asm code ====================
2018-03-16 16:07:27.677638884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_info
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScypP_srt+128


==================== Asm code ====================
2018-03-16 16:07:27.678363151 UTC

.section .text
.align 8
_cczGl:
_cczGl:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczGp
_cczGq:
	movl $GHC.ByteOrder.BigEndian_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczGp:
	movl $GHC.ByteOrder.$fEnumByteOrder3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczGl, .-_cczGl


==================== Asm code ====================
2018-03-16 16:07:27.678982835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczGl_info:
	.quad	_cczGl
	.quad	0
	.quad	4294967326
	.quad	ScypP_srt+136


==================== Asm code ====================
2018-03-16 16:07:27.680740925 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rcykB_bytes:
	.asciz "succ{ByteOrder}: tried to take `succ' of last tag in enumeration"


==================== Asm code ====================
2018-03-16 16:07:27.683902706 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder4_closure
.type GHC.ByteOrder.$fEnumByteOrder4_closure, @object
GHC.ByteOrder.$fEnumByteOrder4_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.684771962 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder4_entry
.type GHC.ByteOrder.$fEnumByteOrder4_entry, @object
GHC.ByteOrder.$fEnumByteOrder4_entry:
_cczGY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cczGZ
_cczH0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczGV
_cczGU:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cczGW_info,-24(%rbp)
	movl $lvl14_rcykB_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczGZ:
	jmp *-16(%r13)
_cczGV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder4_entry, .-GHC.ByteOrder.$fEnumByteOrder4_entry


==================== Asm code ====================
2018-03-16 16:07:27.685502115 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder4_info
.type GHC.ByteOrder.$fEnumByteOrder4_info, @object
GHC.ByteOrder.$fEnumByteOrder4_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder4_entry
	.quad	0
	.quad	12884901909
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.686157476 UTC

.section .text
.align 8
_cczGW:
_cczGW:
	movq %rbx,%rsi
	movl $lvl12_rcykz_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cczGW, .-_cczGW


==================== Asm code ====================
2018-03-16 16:07:27.686774093 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczGW_info:
	.quad	_cczGW
	.quad	0
	.quad	12884901918
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.689765161 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_closure
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.690511602 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_entry
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_entry:
_cczHp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczHq
_cczHr:
	movq $block_cczHi_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczHi
_cczHj:
	movq (%rbx),%rax
	jmp *(%rax)
_cczHq:
	movl $GHC.ByteOrder.$fEnumByteOrder_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$csucc_entry, .-GHC.ByteOrder.$fEnumByteOrder_$csucc_entry


==================== Asm code ====================
2018-03-16 16:07:27.691225646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_info
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_info, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScypP_srt+144


==================== Asm code ====================
2018-03-16 16:07:27.691955765 UTC

.section .text
.align 8
_cczHi:
_cczHi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczHm
_cczHn:
	movl $GHC.ByteOrder.$fEnumByteOrder4_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cczHm:
	movl $GHC.ByteOrder.LittleEndian_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczHi, .-_cczHi


==================== Asm code ====================
2018-03-16 16:07:27.692582735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczHi_info:
	.quad	_cczHi
	.quad	0
	.quad	4294967326
	.quad	ScypP_srt+152


==================== Asm code ====================
2018-03-16 16:07:27.694617451 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rcykC_bytes:
	.asciz ") is outside of enumeration's range (0,"


==================== Asm code ====================
2018-03-16 16:07:27.696214678 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl16_rcykD_bytes:
	.asciz ")"


==================== Asm code ====================
2018-03-16 16:07:27.698879662 UTC

.section .data
.align 8
.align 1
lvl17_rcykE_closure:
	.quad	lvl17_rcykE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.699736837 UTC

.section .text
.align 8
lvl17_rcykE_entry:
_cczHU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczHV
_cczHW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczHT
_cczHS:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl16_rcykD_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cczHV:
	jmp *-16(%r13)
_cczHT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl17_rcykE_entry, .-lvl17_rcykE_entry


==================== Asm code ====================
2018-03-16 16:07:27.700470744 UTC

.section .data.rel.ro
.align 8
.align 1
lvl17_rcykE_info:
	.quad	lvl17_rcykE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.703808078 UTC

.section .data
.align 8
.align 1
lvl18_rcykF_closure:
	.quad	lvl18_rcykF_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.705176095 UTC

.section .text
.align 8
lvl18_rcykF_entry:
_cczId:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cczIe
_cczIf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczI9
_cczI8:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cczIa_info,-24(%rbp)
	movl $lvl17_rcykE_closure,%edi
	movl $1,%esi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_cczIe:
	jmp *-16(%r13)
_cczI9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_rcykF_entry, .-lvl18_rcykF_entry


==================== Asm code ====================
2018-03-16 16:07:27.705908317 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_rcykF_info:
	.quad	lvl18_rcykF_entry
	.quad	0
	.quad	4294967317
	.quad	ScypP_srt+160


==================== Asm code ====================
2018-03-16 16:07:27.70658236 UTC

.section .text
.align 8
_cczIa:
_cczIa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczIi
_cczIh:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczIi:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cczIa, .-_cczIa


==================== Asm code ====================
2018-03-16 16:07:27.707226637 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczIa_info:
	.quad	_cczIa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.710156721 UTC

.section .data
.align 8
.align 1
lvl19_rcykG_closure:
	.quad	lvl19_rcykG_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.710969715 UTC

.section .text
.align 8
lvl19_rcykG_entry:
_cczIA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczIB
_cczIC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczIz
_cczIy:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl18_rcykF_closure,%esi
	movl $lvl15_rcykC_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cczIB:
	jmp *-16(%r13)
_cczIz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl19_rcykG_entry, .-lvl19_rcykG_entry


==================== Asm code ====================
2018-03-16 16:07:27.711673546 UTC

.section .data.rel.ro
.align 8
.align 1
lvl19_rcykG_info:
	.quad	lvl19_rcykG_entry
	.quad	0
	.quad	4294967317
	.quad	ScypP_srt+168


==================== Asm code ====================
2018-03-16 16:07:27.714521515 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_rcykH_bytes:
	.asciz "toEnum{ByteOrder}: tag ("


==================== Asm code ====================
2018-03-16 16:07:27.718855346 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$wlvl_closure
.type GHC.ByteOrder.$wlvl_closure, @object
GHC.ByteOrder.$wlvl_closure:
	.quad	GHC.ByteOrder.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.719658356 UTC

.section .text
.align 8
sat_scylU_entry:
_cczIW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cczIX
_cczIY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cczIT_info,-24(%rbp)
	movl $lvl19_rcykG_closure,%edi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_cczIX:
	jmp *-16(%r13)
	.size sat_scylU_entry, .-sat_scylU_entry


==================== Asm code ====================
2018-03-16 16:07:27.720308885 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scylU_info:
	.quad	sat_scylU_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+176


==================== Asm code ====================
2018-03-16 16:07:27.721099478 UTC

.section .text
.align 8
_cczIT:
_cczIT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczJ1
_cczJ0:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczJ1:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cczIT, .-_cczIT


==================== Asm code ====================
2018-03-16 16:07:27.72183857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczIT_info:
	.quad	_cczIT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.72263343 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$wlvl_entry
.type GHC.ByteOrder.$wlvl_entry, @object
GHC.ByteOrder.$wlvl_entry:
_cczJ4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczJ5
_cczJ6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczJ8
_cczJ7:
	movq $sat_scylU_info,-16(%r12)
	movq %r14,(%r12)
	movq $block_cczJ2_info,-8(%rbp)
	leaq -16(%r12),%rsi
	movl $lvl20_rcykH_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cczJ8:
	movq $24,904(%r13)
_cczJ5:
	movl $GHC.ByteOrder.$wlvl_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$wlvl_entry, .-GHC.ByteOrder.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:07:27.723379956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$wlvl_info
.type GHC.ByteOrder.$wlvl_info, @object
GHC.ByteOrder.$wlvl_info:
	.quad	GHC.ByteOrder.$wlvl_entry
	.quad	0
	.quad	3311419785230
	.quad	4294967300
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.724058213 UTC

.section .text
.align 8
_cczJ2:
_cczJ2:
	movq %rbx,%rsi
	movl $lvl12_rcykz_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cczJ2, .-_cczJ2


==================== Asm code ====================
2018-03-16 16:07:27.724675263 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczJ2_info:
	.quad	_cczJ2
	.quad	0
	.quad	12884901918
	.quad	ScypP_srt+112


==================== Asm code ====================
2018-03-16 16:07:27.727325758 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$w$ctoEnum_closure
.type GHC.ByteOrder.$w$ctoEnum_closure, @object
GHC.ByteOrder.$w$ctoEnum_closure:
	.quad	GHC.ByteOrder.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.728093615 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$w$ctoEnum_entry
.type GHC.ByteOrder.$w$ctoEnum_entry, @object
GHC.ByteOrder.$w$ctoEnum_entry:
_cczJB:
	movq %r14,%rax
	testq %r14,%r14
	jl _cczJJ
_cczJA:
	cmpq $1,%rax
	jg _cczJJ
_cczJK:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczJJ:
	movq %rax,%r14
	jmp GHC.ByteOrder.$wlvl_entry
	.size GHC.ByteOrder.$w$ctoEnum_entry, .-GHC.ByteOrder.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 16:07:27.728777695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$w$ctoEnum_info
.type GHC.ByteOrder.$w$ctoEnum_info, @object
GHC.ByteOrder.$w$ctoEnum_info:
	.quad	GHC.ByteOrder.$w$ctoEnum_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.731630975 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.732404081 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry:
_cczJY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczJZ
_cczK0:
	movq $block_cczJV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczJV
_cczJW:
	movq (%rbx),%rax
	jmp *(%rax)
_cczJZ:
	movl $GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry, .-GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 16:07:27.7331417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScypP_srt+192


==================== Asm code ====================
2018-03-16 16:07:27.734313383 UTC

.section .text
.align 8
_cczJV:
_cczJV:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.ByteOrder.$w$ctoEnum_entry
	.size _cczJV, .-_cczJV


==================== Asm code ====================
2018-03-16 16:07:27.735014704 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczJV_info:
	.quad	_cczJV
	.quad	0
	.quad	4294967326
	.quad	ScypP_srt+200


==================== Asm code ====================
2018-03-16 16:07:27.739929573 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go2_closure
.type GHC.ByteOrder.$fEnumByteOrder_go2_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go2_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go2_info


==================== Asm code ====================
2018-03-16 16:07:27.740744603 UTC

.section .text
.align 8
sat_scym6_entry:
_cczKq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczKr
_cczKs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $1,%rax
	jne _cczKo
_cczKp:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczKr:
	jmp *-16(%r13)
_cczKo:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
	.size sat_scym6_entry, .-sat_scym6_entry


==================== Asm code ====================
2018-03-16 16:07:27.741496646 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scym6_info:
	.quad	sat_scym6_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.742217317 UTC

.section .text
.align 8
sat_scym3_entry:
_cczKz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczKA
_cczKB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczKA:
	jmp *-16(%r13)
	.size sat_scym3_entry, .-sat_scym3_entry


==================== Asm code ====================
2018-03-16 16:07:27.742903371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scym3_info:
	.quad	sat_scym3_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.743722642 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go2_entry
.type GHC.ByteOrder.$fEnumByteOrder_go2_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go2_entry:
_cczKD:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cczKH
_cczKG:
	movq $sat_scym6_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_scym3_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczKH:
	movq $72,904(%r13)
	movl $GHC.ByteOrder.$fEnumByteOrder_go2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go2_entry, .-GHC.ByteOrder.$fEnumByteOrder_go2_entry


==================== Asm code ====================
2018-03-16 16:07:27.744459726 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go2_info
.type GHC.ByteOrder.$fEnumByteOrder_go2_info, @object
GHC.ByteOrder.$fEnumByteOrder_go2_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go2_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:27.74711914 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder2_closure
.type GHC.ByteOrder.$fEnumByteOrder2_closure, @object
GHC.ByteOrder.$fEnumByteOrder2_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.748010909 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder2_entry
.type GHC.ByteOrder.$fEnumByteOrder2_entry, @object
GHC.ByteOrder.$fEnumByteOrder2_entry:
_cczL6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczL7
_cczL8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczL5
_cczL4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	xorl %r14d,%r14d
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
_cczL7:
	jmp *-16(%r13)
_cczL5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder2_entry, .-GHC.ByteOrder.$fEnumByteOrder2_entry


==================== Asm code ====================
2018-03-16 16:07:27.748731662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder2_info
.type GHC.ByteOrder.$fEnumByteOrder2_info, @object
GHC.ByteOrder.$fEnumByteOrder2_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.751831525 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder1_closure
.type GHC.ByteOrder.$fEnumByteOrder1_closure, @object
GHC.ByteOrder.$fEnumByteOrder1_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.752634212 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder1_entry
.type GHC.ByteOrder.$fEnumByteOrder1_entry, @object
GHC.ByteOrder.$fEnumByteOrder1_entry:
_cczLm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczLn
_cczLo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cczLl
_cczLk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $1,%r14d
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
_cczLn:
	jmp *-16(%r13)
_cczLl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder1_entry, .-GHC.ByteOrder.$fEnumByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:27.75337786 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder1_info
.type GHC.ByteOrder.$fEnumByteOrder1_info, @object
GHC.ByteOrder.$fEnumByteOrder1_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:27.756378924 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.757139212 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry:
_cczLH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cczLI
_cczLJ:
	movq $block_cczLA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cczLA
_cczLB:
	movq (%rbx),%rax
	jmp *(%rax)
_cczLI:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 16:07:27.757835854 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScypP_srt+208


==================== Asm code ====================
2018-03-16 16:07:27.758596459 UTC

.section .text
.align 8
_cczLA:
_cczLA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczLE
_cczLF:
	movl $GHC.ByteOrder.$fEnumByteOrder1_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cczLE:
	movl $GHC.ByteOrder.$fEnumByteOrder2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cczLA, .-_cczLA


==================== Asm code ====================
2018-03-16 16:07:27.759259565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczLA_info:
	.quad	_cczLA
	.quad	0
	.quad	12884901918
	.quad	ScypP_srt+216


==================== Asm code ====================
2018-03-16 16:07:27.787928244 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info


==================== Asm code ====================
2018-03-16 16:07:27.788828601 UTC

.section .text
.align 8
sat_scymq_entry:
_cczMP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczMQ
_cczMR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scyml_entry
_cczMQ:
	jmp *-16(%r13)
	.size sat_scymq_entry, .-sat_scymq_entry


==================== Asm code ====================
2018-03-16 16:07:27.789857231 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymq_info:
	.quad	sat_scymq_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:27.790591248 UTC

.section .text
.align 8
sat_scymo_entry:
_cczMW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczMX
_cczMY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczMX:
	jmp *-16(%r13)
	.size sat_scymo_entry, .-sat_scymo_entry


==================== Asm code ====================
2018-03-16 16:07:27.791263733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymo_info:
	.quad	sat_scymo_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.792031075 UTC

.section .text
.align 8
sat_scymr_entry:
_cczN4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczN5
_cczN6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczN5:
	jmp *-16(%r13)
	.size sat_scymr_entry, .-sat_scymr_entry


==================== Asm code ====================
2018-03-16 16:07:27.792666206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymr_info:
	.quad	sat_scymr_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.793618801 UTC

.section .text
.align 8
go_dn_scyml_entry:
_cczNa:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cczNe
_cczNd:
	cmpq 15(%rbx),%r14
	jge _cczN8
_cczN9:
	movq $sat_scymr_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczNe:
	movq $88,904(%r13)
	jmp *-8(%r13)
_cczN8:
	movq 7(%rbx),%rax
	movq $sat_scymq_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scymo_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scyml_entry, .-go_dn_scyml_entry


==================== Asm code ====================
2018-03-16 16:07:27.794443363 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scyml_info:
	.quad	go_dn_scyml_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:27.795290905 UTC

.section .text
.align 8
sat_scyms_entry:
_cczNh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczNi
_cczNj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczNl
_cczNk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_dn_scyml_info,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scyml_entry
_cczNl:
	movq $24,904(%r13)
_cczNi:
	jmp *-16(%r13)
	.size sat_scyms_entry, .-sat_scyms_entry


==================== Asm code ====================
2018-03-16 16:07:27.796014222 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyms_info:
	.quad	sat_scyms_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:27.796774038 UTC

.section .text
.align 8
sat_scymi_entry:
_cczNq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczNr
_cczNs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczNr:
	jmp *-16(%r13)
	.size sat_scymi_entry, .-sat_scymi_entry


==================== Asm code ====================
2018-03-16 16:07:27.797483804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymi_info:
	.quad	sat_scymi_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.798213427 UTC

.section .text
.align 8
sat_scymu_entry:
_cczNB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczNC
_cczND:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczNC:
	jmp *-16(%r13)
	.size sat_scymu_entry, .-sat_scymu_entry


==================== Asm code ====================
2018-03-16 16:07:27.798865753 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymu_info:
	.quad	sat_scymu_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.799653228 UTC

.section .text
.align 8
sat_scymE_entry:
_cczO6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczO7
_cczO8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scymz_entry
_cczO7:
	jmp *-16(%r13)
	.size sat_scymE_entry, .-sat_scymE_entry


==================== Asm code ====================
2018-03-16 16:07:27.800326603 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymE_info:
	.quad	sat_scymE_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:27.801026464 UTC

.section .text
.align 8
sat_scymC_entry:
_cczOd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczOe
_cczOf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczOe:
	jmp *-16(%r13)
	.size sat_scymC_entry, .-sat_scymC_entry


==================== Asm code ====================
2018-03-16 16:07:27.801680577 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymC_info:
	.quad	sat_scymC_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.802398619 UTC

.section .text
.align 8
sat_scymF_entry:
_cczOl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczOm
_cczOn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczOm:
	jmp *-16(%r13)
	.size sat_scymF_entry, .-sat_scymF_entry


==================== Asm code ====================
2018-03-16 16:07:27.80309947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymF_info:
	.quad	sat_scymF_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.803973543 UTC

.section .text
.align 8
go_up_scymz_entry:
_cczOr:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cczOv
_cczOu:
	cmpq 15(%rbx),%r14
	jle _cczOp
_cczOq:
	movq $sat_scymF_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczOv:
	movq $88,904(%r13)
	jmp *-8(%r13)
_cczOp:
	movq 7(%rbx),%rax
	movq $sat_scymE_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scymC_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scymz_entry, .-go_up_scymz_entry


==================== Asm code ====================
2018-03-16 16:07:27.804786494 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scymz_info:
	.quad	go_up_scymz_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:27.805717649 UTC

.section .text
.align 8
sat_scymG_entry:
_cczOy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczOz
_cczOA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczOC
_cczOB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_up_scymz_info,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scymz_entry
_cczOC:
	movq $24,904(%r13)
_cczOz:
	jmp *-16(%r13)
	.size sat_scymG_entry, .-sat_scymG_entry


==================== Asm code ====================
2018-03-16 16:07:27.806451029 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymG_info:
	.quad	sat_scymG_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:27.807210112 UTC

.section .text
.align 8
sat_scymw_entry:
_cczOH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczOI
_cczOJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczOI:
	jmp *-16(%r13)
	.size sat_scymw_entry, .-sat_scymw_entry


==================== Asm code ====================
2018-03-16 16:07:27.808546856 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymw_info:
	.quad	sat_scymw_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.80926671 UTC

.section .text
.align 8
sat_scymI_entry:
_cczOS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczOT
_cczOU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczOT:
	jmp *-16(%r13)
	.size sat_scymI_entry, .-sat_scymI_entry


==================== Asm code ====================
2018-03-16 16:07:27.809940686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymI_info:
	.quad	sat_scymI_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.810677369 UTC

.section .text
.align 8
sat_scymT_entry:
_cczPq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczPr
_cczPs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scymO_entry
_cczPr:
	jmp *-16(%r13)
	.size sat_scymT_entry, .-sat_scymT_entry


==================== Asm code ====================
2018-03-16 16:07:27.811336296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymT_info:
	.quad	sat_scymT_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:27.812102403 UTC

.section .text
.align 8
sat_scymR_entry:
_cczPx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczPy
_cczPz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczPy:
	jmp *-16(%r13)
	.size sat_scymR_entry, .-sat_scymR_entry


==================== Asm code ====================
2018-03-16 16:07:27.812734444 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymR_info:
	.quad	sat_scymR_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.813496666 UTC

.section .text
.align 8
sat_scymU_entry:
_cczPF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczPG
_cczPH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczPG:
	jmp *-16(%r13)
	.size sat_scymU_entry, .-sat_scymU_entry


==================== Asm code ====================
2018-03-16 16:07:27.814139191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymU_info:
	.quad	sat_scymU_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.815070595 UTC

.section .text
.align 8
go_dn_scymO_entry:
_cczPL:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cczPP
_cczPO:
	cmpq 15(%rbx),%r14
	jge _cczPJ
_cczPK:
	movq $sat_scymU_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczPP:
	movq $88,904(%r13)
	jmp *-8(%r13)
_cczPJ:
	movq 7(%rbx),%rax
	movq $sat_scymT_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scymR_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scymO_entry, .-go_dn_scymO_entry


==================== Asm code ====================
2018-03-16 16:07:27.815817079 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scymO_info:
	.quad	go_dn_scymO_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:27.816680219 UTC

.section .text
.align 8
sat_scymV_entry:
_cczPS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczPT
_cczPU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczPW
_cczPV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_dn_scymO_info,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scymO_entry
_cczPW:
	movq $24,904(%r13)
_cczPT:
	jmp *-16(%r13)
	.size sat_scymV_entry, .-sat_scymV_entry


==================== Asm code ====================
2018-03-16 16:07:27.817446791 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymV_info:
	.quad	sat_scymV_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:27.818205267 UTC

.section .text
.align 8
sat_scymL_entry:
_cczQ1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczQ2
_cczQ3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczQ2:
	jmp *-16(%r13)
	.size sat_scymL_entry, .-sat_scymL_entry


==================== Asm code ====================
2018-03-16 16:07:27.818843946 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymL_info:
	.quad	sat_scymL_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.819586159 UTC

.section .text
.align 8
sat_scymX_entry:
_cczQc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczQd
_cczQe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczQd:
	jmp *-16(%r13)
	.size sat_scymX_entry, .-sat_scymX_entry


==================== Asm code ====================
2018-03-16 16:07:27.820302334 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymX_info:
	.quad	sat_scymX_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.821050756 UTC

.section .text
.align 8
sat_scyn7_entry:
_cczQH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczQI
_cczQJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scyn2_entry
_cczQI:
	jmp *-16(%r13)
	.size sat_scyn7_entry, .-sat_scyn7_entry


==================== Asm code ====================
2018-03-16 16:07:27.821743267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyn7_info:
	.quad	sat_scyn7_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:27.822516126 UTC

.section .text
.align 8
sat_scyn5_entry:
_cczQO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczQP
_cczQQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczQP:
	jmp *-16(%r13)
	.size sat_scyn5_entry, .-sat_scyn5_entry


==================== Asm code ====================
2018-03-16 16:07:27.823209372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyn5_info:
	.quad	sat_scyn5_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.824009659 UTC

.section .text
.align 8
sat_scyn8_entry:
_cczQW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczQX
_cczQY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczQX:
	jmp *-16(%r13)
	.size sat_scyn8_entry, .-sat_scyn8_entry


==================== Asm code ====================
2018-03-16 16:07:27.824671181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyn8_info:
	.quad	sat_scyn8_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.826070949 UTC

.section .text
.align 8
go_up_scyn2_entry:
_cczR2:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cczR6
_cczR5:
	cmpq 15(%rbx),%r14
	jle _cczR0
_cczR1:
	movq $sat_scyn8_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczR6:
	movq $88,904(%r13)
	jmp *-8(%r13)
_cczR0:
	movq 7(%rbx),%rax
	movq $sat_scyn7_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scyn5_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scyn2_entry, .-go_up_scyn2_entry


==================== Asm code ====================
2018-03-16 16:07:27.826871764 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scyn2_info:
	.quad	go_up_scyn2_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:27.827683901 UTC

.section .text
.align 8
sat_scyn9_entry:
_cczR9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczRa
_cczRb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cczRd
_cczRc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_up_scyn2_info,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scyn2_entry
_cczRd:
	movq $24,904(%r13)
_cczRa:
	jmp *-16(%r13)
	.size sat_scyn9_entry, .-sat_scyn9_entry


==================== Asm code ====================
2018-03-16 16:07:27.82842314 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyn9_info:
	.quad	sat_scyn9_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:27.82913867 UTC

.section .text
.align 8
sat_scymZ_entry:
_cczRi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczRj
_cczRk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRj:
	jmp *-16(%r13)
	.size sat_scymZ_entry, .-sat_scymZ_entry


==================== Asm code ====================
2018-03-16 16:07:27.829897485 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scymZ_info:
	.quad	sat_scymZ_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.83060828 UTC

.section .text
.align 8
sat_scynb_entry:
_cczRt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczRu
_cczRv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRu:
	jmp *-16(%r13)
	.size sat_scynb_entry, .-sat_scynb_entry


==================== Asm code ====================
2018-03-16 16:07:27.831272082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynb_info:
	.quad	sat_scynb_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:27.831995503 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry:
_cczRD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczRE
_cczRF:
	movq $block_cczRw_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczRw
_cczRx:
	movq (%rbx),%rax
	jmp *(%rax)
_cczRE:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 16:07:27.832702144 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:27.833513915 UTC

.section .text
.align 8
_cczRw:
_cczRw:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczRA
_cczRB:
	movl $1,%ebx
_scymb:
	movq $block_cczRG_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _cczRG
_cczSq:
	movq (%rbx),%rax
	jmp *(%rax)
_cczRA:
	xorl %ebx,%ebx
	jmp _scymb
	.size _cczRw, .-_cczRw


==================== Asm code ====================
2018-03-16 16:07:27.834152019 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczRw_info:
	.quad	_cczRw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.834865242 UTC

.section .text
.align 8
_cczRG:
_cczRG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczSw
_cczSA:
	movq $1,(%rbp)
	jmp _cczMg
_cczSw:
	movq $0,(%rbp)
	jmp _cczMg
	.size _cczRG, .-_cczRG


==================== Asm code ====================
2018-03-16 16:07:27.835511207 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczRG_info:
	.quad	_cczRG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.837089322 UTC

.section .text
.align 8
_cczMg:
_cczMg:
	addq $80,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cczRK
_cczRJ:
	movq 8(%rbp),%rbx
	cmpq %rax,%rbx
	jle _cczS5
_cczSp:
	cmpq %rbx,%rax
	jl _cczSf
_cczSo:
	cmpq $0,%rax
	jle _cczSi
_cczSn:
	cmpq $0,%rbx
	jg _cczSm
_cczSl:
	movq $sat_scynb_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczSm:
	addq $-80,%r12
	movl $[]_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczSi:
	movq $sat_scyn9_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $sat_scymZ_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczSf:
	cmpq $0,%rax
	jge _cczS8
_cczSd:
	cmpq $0,%rbx
	jl _cczSm
_cczSb:
	movq $sat_scymX_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczS8:
	movq $sat_scymV_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $sat_scymL_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczS5:
	cmpq %rbx,%rax
	jl _cczRU
_cczS3:
	cmpq $1,%rax
	jle _cczRX
_cczS2:
	cmpq $1,%rbx
	jg _cczSm
_cczS0:
	movq $sat_scymI_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRX:
	movq $sat_scymG_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $sat_scymw_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRU:
	cmpq $1,%rax
	jge _cczRN
_cczRS:
	cmpq $1,%rbx
	jl _cczSm
_cczRQ:
	movq $sat_scymu_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRN:
	movq $sat_scyms_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $sat_scymi_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczRK:
	movq $80,904(%r13)
	movq $block_cczMf_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _cczMg, .-_cczMg


==================== Asm code ====================
2018-03-16 16:07:27.838738191 UTC

.section .text
.align 8
_cczMf:
_cczMf:
	movq %rbx,(%rbp)
	jmp _cczMg
	.size _cczMf, .-_cczMf


==================== Asm code ====================
2018-03-16 16:07:27.839371449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczMf_info:
	.quad	_cczMf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:27.845141678 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go1_closure
.type GHC.ByteOrder.$fEnumByteOrder_go1_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go1_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.846037545 UTC

.section .text
.align 8
sat_scynk_entry:
_cczWD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczWE
_cczWF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jne _cczWB
_cczWC:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczWE:
	jmp *-16(%r13)
_cczWB:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.size sat_scynk_entry, .-sat_scynk_entry


==================== Asm code ====================
2018-03-16 16:07:27.846694276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynk_info:
	.quad	sat_scynk_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+232


==================== Asm code ====================
2018-03-16 16:07:27.847474362 UTC

.section .text
.align 8
sat_scynh_entry:
_cczWR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczWS
_cczX0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _cczWY
_cczWQ:
	cmpq $1,%rax
	jg _cczWY
_cczWZ:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczWY:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_cczWS:
	jmp *-16(%r13)
	.size sat_scynh_entry, .-sat_scynh_entry


==================== Asm code ====================
2018-03-16 16:07:27.848211314 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynh_info:
	.quad	sat_scynh_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.848980465 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go1_entry
.type GHC.ByteOrder.$fEnumByteOrder_go1_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go1_entry:
_cczX2:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cczX6
_cczX5:
	movq $sat_scynk_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_scynh_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczX6:
	movq $72,904(%r13)
	movl $GHC.ByteOrder.$fEnumByteOrder_go1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go1_entry, .-GHC.ByteOrder.$fEnumByteOrder_go1_entry


==================== Asm code ====================
2018-03-16 16:07:27.850097196 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go1_info
.type GHC.ByteOrder.$fEnumByteOrder_go1_info, @object
GHC.ByteOrder.$fEnumByteOrder_go1_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.quad	0
	.quad	279172874254
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.854492011 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go_closure
.type GHC.ByteOrder.$fEnumByteOrder_go_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.855372722 UTC

.section .text
.align 8
sat_scynr_entry:
_cczXB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczXC
_cczXD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $1,%rax
	jne _cczXz
_cczXA:
	movl $[]_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczXC:
	jmp *-16(%r13)
_cczXz:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go_entry
	.size sat_scynr_entry, .-sat_scynr_entry


==================== Asm code ====================
2018-03-16 16:07:27.856081478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynr_info:
	.quad	sat_scynr_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+240


==================== Asm code ====================
2018-03-16 16:07:27.856924452 UTC

.section .text
.align 8
sat_scyno_entry:
_cczXP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczXQ
_cczXY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _cczXW
_cczXO:
	cmpq $1,%rax
	jg _cczXW
_cczXX:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczXW:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_cczXQ:
	jmp *-16(%r13)
	.size sat_scyno_entry, .-sat_scyno_entry


==================== Asm code ====================
2018-03-16 16:07:27.857661563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyno_info:
	.quad	sat_scyno_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.858425556 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go_entry
.type GHC.ByteOrder.$fEnumByteOrder_go_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go_entry:
_cczY0:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cczY4
_cczY3:
	movq $sat_scynr_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_scyno_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cczY4:
	movq $72,904(%r13)
	movl $GHC.ByteOrder.$fEnumByteOrder_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go_entry, .-GHC.ByteOrder.$fEnumByteOrder_go_entry


==================== Asm code ====================
2018-03-16 16:07:27.859149502 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go_info
.type GHC.ByteOrder.$fEnumByteOrder_go_info, @object
GHC.ByteOrder.$fEnumByteOrder_go_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.863674089 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.864503246 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry:
_cczYA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cczYB
_cczYC:
	movq $block_cczYt_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cczYt
_cczYu:
	movq (%rbx),%rax
	jmp *(%rax)
_cczYB:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 16:07:27.865217643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	ScypP_srt+232


==================== Asm code ====================
2018-03-16 16:07:27.86606277 UTC

.section .text
.align 8
_cczYt:
_cczYt:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczYx
_cczYy:
	movl $1,%ebx
_scynu:
	movq $block_cczYG_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _cczYG
_cczYI:
	movq (%rbx),%rax
	jmp *(%rax)
_cczYx:
	xorl %ebx,%ebx
	jmp _scynu
	.size _cczYt, .-_cczYt


==================== Asm code ====================
2018-03-16 16:07:27.866712628 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczYt_info:
	.quad	_cczYt
	.quad	1
	.quad	12884901918
	.quad	ScypP_srt+232


==================== Asm code ====================
2018-03-16 16:07:27.867467856 UTC

.section .text
.align 8
_cczYG:
_cczYG:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cczYT
_cczZ2:
	cmpq $1,%rax
	jg _cczZ1
_cczZ0:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go_entry
_cczZ1:
	movl $[]_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cczYT:
	testq %rax,%rax
	jg _cczZ1
_cczYQ:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.size _cczYG, .-_cczYG


==================== Asm code ====================
2018-03-16 16:07:27.868131668 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczYG_info:
	.quad	_cczYG
	.quad	65
	.quad	12884901918
	.quad	ScypP_srt+232


==================== Asm code ====================
2018-03-16 16:07:27.903279718 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.904211921 UTC

.section .text
.align 8
sat_scynW_entry:
_ccA0h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA0i
_ccA0j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scynP_entry
_ccA0i:
	jmp *-16(%r13)
	.size sat_scynW_entry, .-sat_scynW_entry


==================== Asm code ====================
2018-03-16 16:07:27.904888251 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynW_info:
	.quad	sat_scynW_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.905816838 UTC

.section .text
.align 8
sat_scynU_entry:
_ccA0t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA0u
_ccA0C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA0A
_ccA0s:
	cmpq $1,%rax
	jg _ccA0A
_ccA0B:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA0A:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA0u:
	jmp *-16(%r13)
	.size sat_scynU_entry, .-sat_scynU_entry


==================== Asm code ====================
2018-03-16 16:07:27.906599841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynU_info:
	.quad	sat_scynU_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.90747068 UTC

.section .text
.align 8
sat_scynZ_entry:
_ccA0N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA0O
_ccA0W:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA0U
_ccA0M:
	cmpq $1,%rax
	jg _ccA0U
_ccA0V:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA0U:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA0O:
	jmp *-16(%r13)
	.size sat_scynZ_entry, .-sat_scynZ_entry


==================== Asm code ====================
2018-03-16 16:07:27.908188156 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynZ_info:
	.quad	sat_scynZ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.909083117 UTC

.section .text
.align 8
go_dn_scynP_entry:
_ccA10:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccA14
_ccA13:
	cmpq 15(%rbx),%r14
	jge _ccA0Y
_ccA0Z:
	movq $sat_scynZ_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccA14:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccA0Y:
	movq 7(%rbx),%rax
	movq $sat_scynW_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scynU_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scynP_entry, .-go_dn_scynP_entry


==================== Asm code ====================
2018-03-16 16:07:27.909930122 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scynP_info:
	.quad	go_dn_scynP_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.910832658 UTC

.section .text
.align 8
sat_scyo0_entry:
_ccA17:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA18
_ccA19:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccA1b
_ccA1a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_dn_scynP_info,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scynP_entry
_ccA1b:
	movq $24,904(%r13)
_ccA18:
	jmp *-16(%r13)
	.size sat_scyo0_entry, .-sat_scyo0_entry


==================== Asm code ====================
2018-03-16 16:07:27.912243896 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyo0_info:
	.quad	sat_scyo0_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.913057171 UTC

.section .text
.align 8
sat_scynM_entry:
_ccA1l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA1m
_ccA1u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA1s
_ccA1k:
	cmpq $1,%rax
	jg _ccA1s
_ccA1t:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA1s:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA1m:
	jmp *-16(%r13)
	.size sat_scynM_entry, .-sat_scynM_entry


==================== Asm code ====================
2018-03-16 16:07:27.91376742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scynM_info:
	.quad	sat_scynM_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.914581571 UTC

.section .text
.align 8
sat_scyo4_entry:
_ccA1I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA1J
_ccA1R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA1P
_ccA1H:
	cmpq $1,%rax
	jg _ccA1P
_ccA1Q:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA1P:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA1J:
	jmp *-16(%r13)
	.size sat_scyo4_entry, .-sat_scyo4_entry


==================== Asm code ====================
2018-03-16 16:07:27.915280213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyo4_info:
	.quad	sat_scyo4_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.916037117 UTC

.section .text
.align 8
sat_scyoi_entry:
_ccA2k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA2l
_ccA2m:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scyob_entry
_ccA2l:
	jmp *-16(%r13)
	.size sat_scyoi_entry, .-sat_scyoi_entry


==================== Asm code ====================
2018-03-16 16:07:27.916693413 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoi_info:
	.quad	sat_scyoi_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.917541378 UTC

.section .text
.align 8
sat_scyog_entry:
_ccA2w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA2x
_ccA2F:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA2D
_ccA2v:
	cmpq $1,%rax
	jg _ccA2D
_ccA2E:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA2D:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA2x:
	jmp *-16(%r13)
	.size sat_scyog_entry, .-sat_scyog_entry


==================== Asm code ====================
2018-03-16 16:07:27.918228855 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyog_info:
	.quad	sat_scyog_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.919027408 UTC

.section .text
.align 8
sat_scyol_entry:
_ccA2Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA2R
_ccA2Z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA2X
_ccA2P:
	cmpq $1,%rax
	jg _ccA2X
_ccA2Y:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA2X:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA2R:
	jmp *-16(%r13)
	.size sat_scyol_entry, .-sat_scyol_entry


==================== Asm code ====================
2018-03-16 16:07:27.919720754 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyol_info:
	.quad	sat_scyol_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.920532191 UTC

.section .text
.align 8
go_up_scyob_entry:
_ccA33:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccA37
_ccA36:
	cmpq 15(%rbx),%r14
	jle _ccA31
_ccA32:
	movq $sat_scyol_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccA37:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccA31:
	movq 7(%rbx),%rax
	movq $sat_scyoi_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scyog_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scyob_entry, .-go_up_scyob_entry


==================== Asm code ====================
2018-03-16 16:07:27.921376653 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scyob_info:
	.quad	go_up_scyob_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.922195671 UTC

.section .text
.align 8
sat_scyom_entry:
_ccA3a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA3b
_ccA3c:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccA3e
_ccA3d:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_up_scyob_info,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scyob_entry
_ccA3e:
	movq $24,904(%r13)
_ccA3b:
	jmp *-16(%r13)
	.size sat_scyom_entry, .-sat_scyom_entry


==================== Asm code ====================
2018-03-16 16:07:27.922942397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyom_info:
	.quad	sat_scyom_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.923727615 UTC

.section .text
.align 8
sat_scyo8_entry:
_ccA3o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA3p
_ccA3x:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA3v
_ccA3n:
	cmpq $1,%rax
	jg _ccA3v
_ccA3w:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA3v:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA3p:
	jmp *-16(%r13)
	.size sat_scyo8_entry, .-sat_scyo8_entry


==================== Asm code ====================
2018-03-16 16:07:27.924471901 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyo8_info:
	.quad	sat_scyo8_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.925264147 UTC

.section .text
.align 8
sat_scyoq_entry:
_ccA3L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA3M
_ccA3U:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA3S
_ccA3K:
	cmpq $1,%rax
	jg _ccA3S
_ccA3T:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA3S:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA3M:
	jmp *-16(%r13)
	.size sat_scyoq_entry, .-sat_scyoq_entry


==================== Asm code ====================
2018-03-16 16:07:27.926017622 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoq_info:
	.quad	sat_scyoq_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.926781664 UTC

.section .text
.align 8
sat_scyoF_entry:
_ccA4r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA4s
_ccA4t:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scyoy_entry
_ccA4s:
	jmp *-16(%r13)
	.size sat_scyoF_entry, .-sat_scyoF_entry


==================== Asm code ====================
2018-03-16 16:07:27.927426317 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoF_info:
	.quad	sat_scyoF_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.928218084 UTC

.section .text
.align 8
sat_scyoD_entry:
_ccA4D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA4E
_ccA4M:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA4K
_ccA4C:
	cmpq $1,%rax
	jg _ccA4K
_ccA4L:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA4K:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA4E:
	jmp *-16(%r13)
	.size sat_scyoD_entry, .-sat_scyoD_entry


==================== Asm code ====================
2018-03-16 16:07:27.928942076 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoD_info:
	.quad	sat_scyoD_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.930108851 UTC

.section .text
.align 8
sat_scyoI_entry:
_ccA4X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA4Y
_ccA56:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA54
_ccA4W:
	cmpq $1,%rax
	jg _ccA54
_ccA55:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA54:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA4Y:
	jmp *-16(%r13)
	.size sat_scyoI_entry, .-sat_scyoI_entry


==================== Asm code ====================
2018-03-16 16:07:27.930829058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoI_info:
	.quad	sat_scyoI_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.93166253 UTC

.section .text
.align 8
go_dn_scyoy_entry:
_ccA5a:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccA5e
_ccA5d:
	cmpq 15(%rbx),%r14
	jge _ccA58
_ccA59:
	movq $sat_scyoI_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccA5e:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccA58:
	movq 7(%rbx),%rax
	movq $sat_scyoF_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scyoD_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scyoy_entry, .-go_dn_scyoy_entry


==================== Asm code ====================
2018-03-16 16:07:27.932465584 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scyoy_info:
	.quad	go_dn_scyoy_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.933286934 UTC

.section .text
.align 8
sat_scyoJ_entry:
_ccA5h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA5i
_ccA5j:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccA5l
_ccA5k:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_dn_scyoy_info,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scyoy_entry
_ccA5l:
	movq $24,904(%r13)
_ccA5i:
	jmp *-16(%r13)
	.size sat_scyoJ_entry, .-sat_scyoJ_entry


==================== Asm code ====================
2018-03-16 16:07:27.934008097 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoJ_info:
	.quad	sat_scyoJ_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.934819934 UTC

.section .text
.align 8
sat_scyov_entry:
_ccA5v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA5w
_ccA5E:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA5C
_ccA5u:
	cmpq $1,%rax
	jg _ccA5C
_ccA5D:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA5C:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA5w:
	jmp *-16(%r13)
	.size sat_scyov_entry, .-sat_scyov_entry


==================== Asm code ====================
2018-03-16 16:07:27.935522835 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyov_info:
	.quad	sat_scyov_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.936349193 UTC

.section .text
.align 8
sat_scyoN_entry:
_ccA5S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA5T
_ccA61:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA5Z
_ccA5R:
	cmpq $1,%rax
	jg _ccA5Z
_ccA60:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA5Z:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA5T:
	jmp *-16(%r13)
	.size sat_scyoN_entry, .-sat_scyoN_entry


==================== Asm code ====================
2018-03-16 16:07:27.937078379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoN_info:
	.quad	sat_scyoN_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.938139607 UTC

.section .text
.align 8
sat_scyp1_entry:
_ccA6u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA6v
_ccA6w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scyoU_entry
_ccA6v:
	jmp *-16(%r13)
	.size sat_scyp1_entry, .-sat_scyp1_entry


==================== Asm code ====================
2018-03-16 16:07:27.938786163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyp1_info:
	.quad	sat_scyp1_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.93960024 UTC

.section .text
.align 8
sat_scyoZ_entry:
_ccA6G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA6H
_ccA6P:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA6N
_ccA6F:
	cmpq $1,%rax
	jg _ccA6N
_ccA6O:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA6N:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA6H:
	jmp *-16(%r13)
	.size sat_scyoZ_entry, .-sat_scyoZ_entry


==================== Asm code ====================
2018-03-16 16:07:27.94034085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoZ_info:
	.quad	sat_scyoZ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.941138776 UTC

.section .text
.align 8
sat_scyp4_entry:
_ccA70:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA71
_ccA79:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA77
_ccA6Z:
	cmpq $1,%rax
	jg _ccA77
_ccA78:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA77:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA71:
	jmp *-16(%r13)
	.size sat_scyp4_entry, .-sat_scyp4_entry


==================== Asm code ====================
2018-03-16 16:07:27.941912621 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyp4_info:
	.quad	sat_scyp4_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.942843594 UTC

.section .text
.align 8
go_up_scyoU_entry:
_ccA7d:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccA7h
_ccA7g:
	cmpq 15(%rbx),%r14
	jle _ccA7b
_ccA7c:
	movq $sat_scyp4_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $:_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Types.[]_closure+1,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccA7h:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccA7b:
	movq 7(%rbx),%rax
	movq $sat_scyp1_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_scyoZ_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scyoU_entry, .-go_up_scyoU_entry


==================== Asm code ====================
2018-03-16 16:07:27.943678626 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scyoU_info:
	.quad	go_up_scyoU_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.944572958 UTC

.section .text
.align 8
sat_scyp5_entry:
_ccA7k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA7l
_ccA7m:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccA7o
_ccA7n:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	movq $go_up_scyoU_info,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scyoU_entry
_ccA7o:
	movq $24,904(%r13)
_ccA7l:
	jmp *-16(%r13)
	.size sat_scyp5_entry, .-sat_scyp5_entry


==================== Asm code ====================
2018-03-16 16:07:27.945850597 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyp5_info:
	.quad	sat_scyp5_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.946663388 UTC

.section .text
.align 8
sat_scyoR_entry:
_ccA7y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA7z
_ccA7H:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA7F
_ccA7x:
	cmpq $1,%rax
	jg _ccA7F
_ccA7G:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA7F:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA7z:
	jmp *-16(%r13)
	.size sat_scyoR_entry, .-sat_scyoR_entry


==================== Asm code ====================
2018-03-16 16:07:27.947348369 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyoR_info:
	.quad	sat_scyoR_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.948122168 UTC

.section .text
.align 8
sat_scyp9_entry:
_ccA7V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA7W
_ccA84:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccA82
_ccA7U:
	cmpq $1,%rax
	jg _ccA82
_ccA83:
	shlq $3,%rax
	movq GHC.ByteOrder.ByteOrder_closure_tbl(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA82:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccA7W:
	jmp *-16(%r13)
	.size sat_scyp9_entry, .-sat_scyp9_entry


==================== Asm code ====================
2018-03-16 16:07:27.948859698 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scyp9_info:
	.quad	sat_scyp9_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.949637038 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry:
_ccA8c:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccA8d
_ccA8e:
	movq $block_ccA85_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccA85
_ccA86:
	movq (%rbx),%rax
	jmp *(%rax)
_ccA8d:
	movl $GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 16:07:27.950315296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry
	.quad	0
	.quad	2203318222862
	.quad	12884901911
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.951050214 UTC

.section .text
.align 8
_ccA85:
_ccA85:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccA89
_ccA8a:
	movl $1,%ebx
_scynD:
	movq $block_ccA8f_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _ccA8f
_ccA93:
	movq (%rbx),%rax
	jmp *(%rax)
_ccA89:
	xorl %ebx,%ebx
	jmp _scynD
	.size _ccA85, .-_ccA85


==================== Asm code ====================
2018-03-16 16:07:27.951703137 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccA85_info:
	.quad	_ccA85
	.quad	2
	.quad	4294967326
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.952456288 UTC

.section .text
.align 8
_ccA8f:
_ccA8f:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccA99
_ccA9d:
	movl $1,%ebx
_scynF:
	movq $block_cczZI_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cczZI
_cczZJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccA99:
	xorl %ebx,%ebx
	jmp _scynF
	.size _ccA8f, .-_ccA8f


==================== Asm code ====================
2018-03-16 16:07:27.953089001 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccA8f_info:
	.quad	_ccA8f
	.quad	66
	.quad	4294967326
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.954787248 UTC

.section .text
.align 8
_cczZI:
_cczZI:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _ccA8j
_ccA8G:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccA8J
_ccA8I:
	cmpq %rax,%rcx
	jl _ccA8T
_ccA92:
	cmpq $1,%rcx
	jle _ccA8W
_ccA91:
	cmpq $1,%rax
	jg _ccA90
_ccA8Z:
	movq $sat_scyp9_info,-72(%r12)
	movq %rax,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA90:
	addq $-80,%r12
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8W:
	movq $sat_scyp5_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq $sat_scyoR_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8T:
	cmpq $1,%rcx
	jge _ccA8M
_ccA8R:
	cmpq $1,%rax
	jl _ccA90
_ccA8P:
	movq $sat_scyoN_info,-72(%r12)
	movq %rax,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8M:
	movq $sat_scyoJ_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq $sat_scyov_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8J:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_ccA8j:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccA8J
_ccA8l:
	cmpq %rax,%rcx
	jl _ccA8w
_ccA8F:
	cmpq $0,%rcx
	jle _ccA8z
_ccA8E:
	cmpq $0,%rax
	jg _ccA90
_ccA8C:
	movq $sat_scyoq_info,-72(%r12)
	movq %rax,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8z:
	movq $sat_scyom_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq $sat_scyo8_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8w:
	cmpq $0,%rcx
	jge _ccA8p
_ccA8u:
	cmpq $0,%rax
	jl _ccA90
_ccA8s:
	movq $sat_scyo4_info,-72(%r12)
	movq %rax,-56(%r12)
	movq $:_con_info,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccA8p:
	movq $sat_scyo0_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq $sat_scynM_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cczZI, .-_cczZI


==================== Asm code ====================
2018-03-16 16:07:27.956156917 UTC

.section .data.rel.ro
.align 8
.align 1
block_cczZI_info:
	.quad	_cczZI
	.quad	194
	.quad	4294967326
	.quad	ScypP_srt+184


==================== Asm code ====================
2018-03-16 16:07:27.958082755 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_closure
.type GHC.ByteOrder.$fEnumByteOrder_closure, @object
GHC.ByteOrder.$fEnumByteOrder_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure+2
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure+2
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:27.959835276 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule3_closure
.type GHC.ByteOrder.$trModule3_closure, @object
GHC.ByteOrder.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:27.961959363 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule1_closure
.type GHC.ByteOrder.$trModule1_closure, @object
GHC.ByteOrder.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:27.96374332 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule_closure
.type GHC.ByteOrder.$trModule_closure, @object
GHC.ByteOrder.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.ByteOrder.$trModule3_closure+1
	.quad	GHC.ByteOrder.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.965534212 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tcByteOrder2_bytes
.type GHC.ByteOrder.$tcByteOrder2_bytes, @object
GHC.ByteOrder.$tcByteOrder2_bytes:
	.asciz "ByteOrder"


==================== Asm code ====================
2018-03-16 16:07:27.967161509 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tcByteOrder1_closure
.type GHC.ByteOrder.$tcByteOrder1_closure, @object
GHC.ByteOrder.$tcByteOrder1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tcByteOrder2_bytes


==================== Asm code ====================
2018-03-16 16:07:27.969070459 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tcByteOrder_closure
.type GHC.ByteOrder.$tcByteOrder_closure, @object
GHC.ByteOrder.$tcByteOrder_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tcByteOrder1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-1635693389259889532
	.quad	-1173738738462527525
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.971085071 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian1_closure
.type GHC.ByteOrder.$tc'BigEndian1_closure, @object
GHC.ByteOrder.$tc'BigEndian1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.ByteOrder.$tcByteOrder_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.97286859 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tc'BigEndian3_bytes
.type GHC.ByteOrder.$tc'BigEndian3_bytes, @object
GHC.ByteOrder.$tc'BigEndian3_bytes:
	.asciz "'BigEndian"


==================== Asm code ====================
2018-03-16 16:07:27.975091372 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian2_closure
.type GHC.ByteOrder.$tc'BigEndian2_closure, @object
GHC.ByteOrder.$tc'BigEndian2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tc'BigEndian3_bytes


==================== Asm code ====================
2018-03-16 16:07:27.97694673 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian_closure
.type GHC.ByteOrder.$tc'BigEndian_closure, @object
GHC.ByteOrder.$tc'BigEndian_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian2_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian1_closure+1
	.quad	2645192688778293591
	.quad	7455668807059762078
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.978659316 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian2_bytes
.type GHC.ByteOrder.$tc'LittleEndian2_bytes, @object
GHC.ByteOrder.$tc'LittleEndian2_bytes:
	.asciz "'LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:27.980308791 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian1_closure
.type GHC.ByteOrder.$tc'LittleEndian1_closure, @object
GHC.ByteOrder.$tc'LittleEndian1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tc'LittleEndian2_bytes


==================== Asm code ====================
2018-03-16 16:07:27.982432179 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian_closure
.type GHC.ByteOrder.$tc'LittleEndian_closure, @object
GHC.ByteOrder.$tc'LittleEndian_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tc'LittleEndian1_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian1_closure+1
	.quad	8702700204875460152
	.quad	-8109065057340253469
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:27.984131793 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.BigEndian_closure
.type GHC.ByteOrder.BigEndian_closure, @object
GHC.ByteOrder.BigEndian_closure:
	.quad	GHC.ByteOrder.BigEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:27.985869236 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.LittleEndian_closure
.type GHC.ByteOrder.LittleEndian_closure, @object
GHC.ByteOrder.LittleEndian_closure:
	.quad	GHC.ByteOrder.LittleEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:27.987584053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.ByteOrder_closure_tbl
.type GHC.ByteOrder.ByteOrder_closure_tbl, @object
GHC.ByteOrder.ByteOrder_closure_tbl:
	.quad	GHC.ByteOrder.BigEndian_closure+1
	.quad	GHC.ByteOrder.LittleEndian_closure+2


==================== Asm code ====================
2018-03-16 16:07:27.989788508 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iczqS_str:
	.asciz "base:GHC.ByteOrder.BigEndian"


==================== Asm code ====================
2018-03-16 16:07:27.990449565 UTC

.section .text
.align 8
.globl GHC.ByteOrder.BigEndian_con_entry
.type GHC.ByteOrder.BigEndian_con_entry, @object
GHC.ByteOrder.BigEndian_con_entry:
_ccAdi:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.BigEndian_con_entry, .-GHC.ByteOrder.BigEndian_con_entry


==================== Asm code ====================
2018-03-16 16:07:27.991050986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.BigEndian_con_info
.type GHC.ByteOrder.BigEndian_con_info, @object
GHC.ByteOrder.BigEndian_con_info:
	.quad	GHC.ByteOrder.BigEndian_con_entry
	.quad	4294967296
	.quad	3
	.quad	iczqS_str


==================== Asm code ====================
2018-03-16 16:07:27.993015713 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iczqU_str:
	.asciz "base:GHC.ByteOrder.LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:27.994074859 UTC

.section .text
.align 8
.globl GHC.ByteOrder.LittleEndian_con_entry
.type GHC.ByteOrder.LittleEndian_con_entry, @object
GHC.ByteOrder.LittleEndian_con_entry:
_ccAdo:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.LittleEndian_con_entry, .-GHC.ByteOrder.LittleEndian_con_entry


==================== Asm code ====================
2018-03-16 16:07:27.994696582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.LittleEndian_con_info
.type GHC.ByteOrder.LittleEndian_con_info, @object
GHC.ByteOrder.LittleEndian_con_info:
	.quad	GHC.ByteOrder.LittleEndian_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	iczqU_str


==================== Asm code ====================
2018-03-16 16:07:27.996853812 UTC

.section .data.rel.ro
.align 8
.align 1
ScypP_srt:
	.quad	GHC.ByteOrder.$fReadByteOrder6_closure
	.quad	GHC.ByteOrder.$fReadByteOrder10_closure
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_closure
	.quad	GHC.ByteOrder.$fShowByteOrder1_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_sps_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.ByteOrder.$fReadByteOrder2_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.ByteOrder.$fReadByteOrder1_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
	.quad	GHC.ByteOrder.$fReadByteOrder12_closure
	.quad	GHC.Err.error_closure
	.quad	lvl12_rcykz_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder3_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder4_closure
	.quad	lvl17_rcykE_closure
	.quad	lvl18_rcykF_closure
	.quad	lvl19_rcykG_closure
	.quad	GHC.ByteOrder.$wlvl_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure
	.quad	GHC.ByteOrder.$w$ctoEnum_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder1_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder2_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure


==================== Asm code ====================
2018-03-16 16:07:29.631645504 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$fReadByteOrder11_bytes
.type GHC.ByteOrder.$fReadByteOrder11_bytes, @object
GHC.ByteOrder.$fReadByteOrder11_bytes:
	.asciz "BigEndian"


==================== Asm code ====================
2018-03-16 16:07:29.634334669 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder10_closure
.type GHC.ByteOrder.$fReadByteOrder10_closure, @object
GHC.ByteOrder.$fReadByteOrder10_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.63528632 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder10_entry
.type GHC.ByteOrder.$fReadByteOrder10_entry, @object
GHC.ByteOrder.$fReadByteOrder10_entry:
_ccAi5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAi6
_ccAi7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAi4
_ccAi3:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.ByteOrder.$fReadByteOrder11_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAi6:
	jmp *-16(%r13)
_ccAi4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder10_entry, .-GHC.ByteOrder.$fReadByteOrder10_entry


==================== Asm code ====================
2018-03-16 16:07:29.636003639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder10_info
.type GHC.ByteOrder.$fReadByteOrder10_info, @object
GHC.ByteOrder.$fReadByteOrder10_info:
	.quad	GHC.ByteOrder.$fReadByteOrder10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.637741696 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$fReadByteOrder7_bytes
.type GHC.ByteOrder.$fReadByteOrder7_bytes, @object
GHC.ByteOrder.$fReadByteOrder7_bytes:
	.asciz "LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:29.640175688 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder6_closure
.type GHC.ByteOrder.$fReadByteOrder6_closure, @object
GHC.ByteOrder.$fReadByteOrder6_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.641028791 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder6_entry
.type GHC.ByteOrder.$fReadByteOrder6_entry, @object
GHC.ByteOrder.$fReadByteOrder6_entry:
_ccAin:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAio
_ccAip:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAim
_ccAil:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.ByteOrder.$fReadByteOrder7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAio:
	jmp *-16(%r13)
_ccAim:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder6_entry, .-GHC.ByteOrder.$fReadByteOrder6_entry


==================== Asm code ====================
2018-03-16 16:07:29.641801626 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder6_info
.type GHC.ByteOrder.$fReadByteOrder6_info, @object
GHC.ByteOrder.$fReadByteOrder6_info:
	.quad	GHC.ByteOrder.$fReadByteOrder6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.644977431 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.645771881 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry:
_ccAiJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAiK
_ccAiL:
	leaq block_ccAiC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAiC
_ccAiD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAiK:
	leaq GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:29.646467532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info
.type GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.647196252 UTC

.section .text
.align 8
_ccAiC:
_ccAiC:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAiG
_ccAiH:
	movq %rax,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccAiG:
	movq %rax,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _ccAiC, .-_ccAiC


==================== Asm code ====================
2018-03-16 16:07:29.647789651 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAiC_info:
	.quad	_ccAiC
	.quad	1
	.quad	12884901918
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.650727529 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshow_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.651472139 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshow_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_entry:
_ccAjh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAji
_ccAjj:
	leaq block_ccAja_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccAja
_ccAjb:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAji:
	leaq GHC.ByteOrder.$fShowByteOrder_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder_$cshow_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:29.652140168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshow_info
.type GHC.ByteOrder.$fShowByteOrder_$cshow_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshow_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.65286166 UTC

.section .text
.align 8
_ccAja:
_ccAja:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAje
_ccAjf:
	leaq GHC.ByteOrder.$fReadByteOrder6_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ccAje:
	leaq GHC.ByteOrder.$fReadByteOrder10_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAja, .-_ccAja


==================== Asm code ====================
2018-03-16 16:07:29.653498022 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAja_info:
	.quad	_ccAja
	.quad	0
	.quad	12884901918
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.656541729 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder1_closure
.type GHC.ByteOrder.$fShowByteOrder1_closure, @object
GHC.ByteOrder.$fShowByteOrder1_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.657705419 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder1_entry
.type GHC.ByteOrder.$fShowByteOrder1_entry, @object
GHC.ByteOrder.$fShowByteOrder1_entry:
_ccAjQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAjR
_ccAjS:
	leaq block_ccAjJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAjJ
_ccAjK:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAjR:
	leaq GHC.ByteOrder.$fShowByteOrder1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fShowByteOrder1_entry, .-GHC.ByteOrder.$fShowByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:29.658411206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder1_info
.type GHC.ByteOrder.$fShowByteOrder1_info, @object
GHC.ByteOrder.$fShowByteOrder1_info:
	.quad	GHC.ByteOrder.$fShowByteOrder1_entry
	.quad	0
	.quad	81604378638
	.quad	8589934607
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.65917568 UTC

.section .text
.align 8
_ccAjJ:
_ccAjJ:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAjN
_ccAjO:
	movq %rax,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccAjN:
	movq %rax,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _ccAjJ, .-_ccAjJ


==================== Asm code ====================
2018-03-16 16:07:29.659764274 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAjJ_info:
	.quad	_ccAjJ
	.quad	1
	.quad	12884901918
	.quad	ScAiT_srt


==================== Asm code ====================
2018-03-16 16:07:29.661929755 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_closure
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_closure, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_closure:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.663398685 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_entry
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_entry, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_entry:
_ccAkg:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.ByteOrder.$fShowByteOrder1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.ByteOrder.$fShowByteOrder_$cshowList_entry, .-GHC.ByteOrder.$fShowByteOrder_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:29.663920919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_$cshowList_info
.type GHC.ByteOrder.$fShowByteOrder_$cshowList_info, @object
GHC.ByteOrder.$fShowByteOrder_$cshowList_info:
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScAiT_srt+32


==================== Asm code ====================
2018-03-16 16:07:29.665652748 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fShowByteOrder_closure
.type GHC.ByteOrder.$fShowByteOrder_closure, @object
GHC.ByteOrder.$fShowByteOrder_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure+3
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_closure+1
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.667686059 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder9_closure
.type GHC.ByteOrder.$fReadByteOrder9_closure, @object
GHC.ByteOrder.$fReadByteOrder9_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder9_info


==================== Asm code ====================
2018-03-16 16:07:29.668328494 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder9_entry
.type GHC.ByteOrder.$fReadByteOrder9_entry, @object
GHC.ByteOrder.$fReadByteOrder9_entry:
_ccAks:
	leaq GHC.ByteOrder.BigEndian_closure+1(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.ByteOrder.$fReadByteOrder9_entry, .-GHC.ByteOrder.$fReadByteOrder9_entry


==================== Asm code ====================
2018-03-16 16:07:29.668919108 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder9_info
.type GHC.ByteOrder.$fReadByteOrder9_info, @object
GHC.ByteOrder.$fReadByteOrder9_info:
	.quad	GHC.ByteOrder.$fReadByteOrder9_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.670615664 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder8_closure
.type GHC.ByteOrder.$fReadByteOrder8_closure, @object
GHC.ByteOrder.$fReadByteOrder8_closure:
	.quad	(,)_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder10_closure
	.quad	GHC.ByteOrder.$fReadByteOrder9_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.672655737 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder5_closure
.type GHC.ByteOrder.$fReadByteOrder5_closure, @object
GHC.ByteOrder.$fReadByteOrder5_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder5_info


==================== Asm code ====================
2018-03-16 16:07:29.673705209 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder5_entry
.type GHC.ByteOrder.$fReadByteOrder5_entry, @object
GHC.ByteOrder.$fReadByteOrder5_entry:
_ccAkE:
	leaq GHC.ByteOrder.LittleEndian_closure+2(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.ByteOrder.$fReadByteOrder5_entry, .-GHC.ByteOrder.$fReadByteOrder5_entry


==================== Asm code ====================
2018-03-16 16:07:29.674318905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder5_info
.type GHC.ByteOrder.$fReadByteOrder5_info, @object
GHC.ByteOrder.$fReadByteOrder5_info:
	.quad	GHC.ByteOrder.$fReadByteOrder5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.676029991 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder4_closure
.type GHC.ByteOrder.$fReadByteOrder4_closure, @object
GHC.ByteOrder.$fReadByteOrder4_closure:
	.quad	(,)_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder6_closure
	.quad	GHC.ByteOrder.$fReadByteOrder5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.677779467 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder3_closure
.type GHC.ByteOrder.$fReadByteOrder3_closure, @object
GHC.ByteOrder.$fReadByteOrder3_closure:
	.quad	:_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder4_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.679430352 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_sps_closure
.type GHC.ByteOrder.$fReadByteOrder_sps_closure, @object
GHC.ByteOrder.$fReadByteOrder_sps_closure:
	.quad	:_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder8_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder3_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.681575013 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder2_closure
.type GHC.ByteOrder.$fReadByteOrder2_closure, @object
GHC.ByteOrder.$fReadByteOrder2_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.682252111 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder2_entry
.type GHC.ByteOrder.$fReadByteOrder2_entry, @object
GHC.ByteOrder.$fReadByteOrder2_entry:
_ccAkS:
	movq %r14,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder_sps_closure+2(%rip),%r14
	jmp *GHC.Read.choose2_entry@gotpcrel(%rip)
	.size GHC.ByteOrder.$fReadByteOrder2_entry, .-GHC.ByteOrder.$fReadByteOrder2_entry


==================== Asm code ====================
2018-03-16 16:07:29.682861025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder2_info
.type GHC.ByteOrder.$fReadByteOrder2_info, @object
GHC.ByteOrder.$fReadByteOrder2_info:
	.quad	GHC.ByteOrder.$fReadByteOrder2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScAiT_srt+40


==================== Asm code ====================
2018-03-16 16:07:29.684971679 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder1_closure
.type GHC.ByteOrder.$fReadByteOrder1_closure, @object
GHC.ByteOrder.$fReadByteOrder1_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.685669223 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder1_entry
.type GHC.ByteOrder.$fReadByteOrder1_entry, @object
GHC.ByteOrder.$fReadByteOrder1_entry:
_ccAl3:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder2_closure+1(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.ByteOrder.$fReadByteOrder1_entry, .-GHC.ByteOrder.$fReadByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:29.686292387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder1_info
.type GHC.ByteOrder.$fReadByteOrder1_info, @object
GHC.ByteOrder.$fReadByteOrder1_info:
	.quad	GHC.ByteOrder.$fReadByteOrder1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScAiT_srt+56


==================== Asm code ====================
2018-03-16 16:07:29.689803321 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.690595137 UTC

.section .text
.align 8
sat_scAdM_entry:
_ccAli:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAlj
_ccAlk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.ByteOrder.$fReadByteOrder2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_ccAlj:
	jmp *-16(%r13)
	.size sat_scAdM_entry, .-sat_scAdM_entry


==================== Asm code ====================
2018-03-16 16:07:29.691284874 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAdM_info:
	.quad	sat_scAdM_entry
	.quad	1
	.quad	12884901904
	.quad	ScAiT_srt+56


==================== Asm code ====================
2018-03-16 16:07:29.692531568 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry:
_ccAll:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAlp
_ccAlo:
	leaq sat_scAdM_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccAlp:
	movq $24,904(%r13)
	leaq GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:29.693182401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info
.type GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadsPrec_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScAiT_srt+56


==================== Asm code ====================
2018-03-16 16:07:29.69570611 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.696539839 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry:
_ccAlI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAlJ
_ccAlK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAlH
_ccAlG:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.ByteOrder.$fReadByteOrder1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_ccAlJ:
	jmp *-16(%r13)
_ccAlH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:29.697302205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info
.type GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadListPrec_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	ScAiT_srt+80


==================== Asm code ====================
2018-03-16 16:07:29.699746485 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder12_closure
.type GHC.ByteOrder.$fReadByteOrder12_closure, @object
GHC.ByteOrder.$fReadByteOrder12_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.700575558 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder12_entry
.type GHC.ByteOrder.$fReadByteOrder12_entry, @object
GHC.ByteOrder.$fReadByteOrder12_entry:
_ccAlZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAm0
_ccAm1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAlY
_ccAlX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccAm0:
	jmp *-16(%r13)
_ccAlY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fReadByteOrder12_entry, .-GHC.ByteOrder.$fReadByteOrder12_entry


==================== Asm code ====================
2018-03-16 16:07:29.701842687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder12_info
.type GHC.ByteOrder.$fReadByteOrder12_info, @object
GHC.ByteOrder.$fReadByteOrder12_info:
	.quad	GHC.ByteOrder.$fReadByteOrder12_entry
	.quad	0
	.quad	4294967317
	.quad	ScAiT_srt+96


==================== Asm code ====================
2018-03-16 16:07:29.704004642 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_closure
.type GHC.ByteOrder.$fReadByteOrder_$creadList_closure, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_closure:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.704600055 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_entry
.type GHC.ByteOrder.$fReadByteOrder_$creadList_entry, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_entry:
_ccAmf:
	movq %r14,%rsi
	leaq GHC.ByteOrder.$fReadByteOrder12_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.ByteOrder.$fReadByteOrder_$creadList_entry, .-GHC.ByteOrder.$fReadByteOrder_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:29.70520495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_$creadList_info
.type GHC.ByteOrder.$fReadByteOrder_$creadList_info, @object
GHC.ByteOrder.$fReadByteOrder_$creadList_info:
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScAiT_srt+104


==================== Asm code ====================
2018-03-16 16:07:29.707067946 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fReadByteOrder_closure
.type GHC.ByteOrder.$fReadByteOrder_closure, @object
GHC.ByteOrder.$fReadByteOrder_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadList_closure+1
	.quad	GHC.ByteOrder.$fReadByteOrder1_closure+2
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.708777599 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fBoundedByteOrder_closure
.type GHC.ByteOrder.$fBoundedByteOrder_closure, @object
GHC.ByteOrder.$fBoundedByteOrder_closure:
	.quad	GHC.Enum.C:Bounded_con_info
	.quad	GHC.ByteOrder.BigEndian_closure+1
	.quad	GHC.ByteOrder.LittleEndian_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:29.712628034 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c<_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_info


==================== Asm code ====================
2018-03-16 16:07:29.713443652 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c<_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_entry:
_ccAmz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAmA
_ccAmB:
	leaq block_ccAms_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAms
_ccAmt:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAmA:
	leaq GHC.ByteOrder.$fOrdByteOrder_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c<_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c<_entry


==================== Asm code ====================
2018-03-16 16:07:29.714103217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<_info
.type GHC.ByteOrder.$fOrdByteOrder_$c<_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c<_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.7149022 UTC

.section .text
.align 8
_ccAms:
_ccAms:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAmw
_ccAmx:
	leaq block_ccAmT_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAmT
_ccAmV:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAmw:
	leaq block_ccAmE_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAmE
_ccAmG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAms, .-_ccAms


==================== Asm code ====================
2018-03-16 16:07:29.715525413 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAms_info:
	.quad	_ccAms
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.716273749 UTC

.section .text
.align 8
_ccAmE:
_ccAmE:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAmM
_ccAmQ:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAmM:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAmE, .-_ccAmE


==================== Asm code ====================
2018-03-16 16:07:29.71697342 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAmE_info:
	.quad	_ccAmE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.717626675 UTC

.section .text
.align 8
_ccAmT:
_ccAmT:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAmT, .-_ccAmT


==================== Asm code ====================
2018-03-16 16:07:29.718217464 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAmT_info:
	.quad	_ccAmT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.722716409 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_info


==================== Asm code ====================
2018-03-16 16:07:29.723531672 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry:
_ccAnJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAnK
_ccAnL:
	leaq block_ccAnC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAnC
_ccAnD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAnK:
	leaq GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry, .-GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:07:29.724231837 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$ccompare_info
.type GHC.ByteOrder.$fOrdByteOrder_$ccompare_info, @object
GHC.ByteOrder.$fOrdByteOrder_$ccompare_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.725064583 UTC

.section .text
.align 8
_ccAnC:
_ccAnC:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAnG
_ccAnH:
	leaq block_ccAo3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAo3
_ccAo5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAnG:
	leaq block_ccAnO_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAnO
_ccAnQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAnC, .-_ccAnC


==================== Asm code ====================
2018-03-16 16:07:29.725772348 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAnC_info:
	.quad	_ccAnC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.726431306 UTC

.section .text
.align 8
_ccAnO:
_ccAnO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ucAoj
_ccAo0:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ucAoj:
	addq $8,%rbp
	jmp _ccAof
	.size _ccAnO, .-_ccAnO


==================== Asm code ====================
2018-03-16 16:07:29.727043234 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAnO_info:
	.quad	_ccAnO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.728214645 UTC

.section .text
.align 8
_ccAo3:
_ccAo3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAob
_ucAoi:
	addq $8,%rbp
	jmp _ccAof
_ccAob:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAo3, .-_ccAo3


==================== Asm code ====================
2018-03-16 16:07:29.728852543 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAo3_info:
	.quad	_ccAo3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.729498818 UTC

.section .text
.align 8
_ccAof:
_ccAof:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAof, .-_ccAof


==================== Asm code ====================
2018-03-16 16:07:29.734228298 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c==_closure
.type GHC.ByteOrder.$fEqByteOrder_$c==_closure, @object
GHC.ByteOrder.$fEqByteOrder_$c==_closure:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_info


==================== Asm code ====================
2018-03-16 16:07:29.7349709 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEqByteOrder_$c==_entry
.type GHC.ByteOrder.$fEqByteOrder_$c==_entry, @object
GHC.ByteOrder.$fEqByteOrder_$c==_entry:
_ccAp8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAp9
_ccApa:
	leaq block_ccAp1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAp1
_ccAp2:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAp9:
	leaq GHC.ByteOrder.$fEqByteOrder_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEqByteOrder_$c==_entry, .-GHC.ByteOrder.$fEqByteOrder_$c==_entry


==================== Asm code ====================
2018-03-16 16:07:29.735599055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c==_info
.type GHC.ByteOrder.$fEqByteOrder_$c==_info, @object
GHC.ByteOrder.$fEqByteOrder_$c==_info:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.736403827 UTC

.section .text
.align 8
_ccAp1:
_ccAp1:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAp5
_ccAp6:
	leaq block_ccAps_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAps
_ccApu:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAp5:
	leaq block_ccApd_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccApd
_ccApf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAp1, .-_ccAp1


==================== Asm code ====================
2018-03-16 16:07:29.737097289 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAp1_info:
	.quad	_ccAp1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.737774613 UTC

.section .text
.align 8
_ccApd:
_ccApd:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ucApJ
_ucApK:
	addq $8,%rbp
	jmp _ccApA
_ucApJ:
	addq $8,%rbp
	jmp _ccApE
	.size _ccApd, .-_ccApd


==================== Asm code ====================
2018-03-16 16:07:29.738357506 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccApd_info:
	.quad	_ccApd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.739038968 UTC

.section .text
.align 8
_ccAps:
_ccAps:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ucApH
_ucApI:
	addq $8,%rbp
	jmp _ccApE
_ucApH:
	addq $8,%rbp
	jmp _ccApA
	.size _ccAps, .-_ccAps


==================== Asm code ====================
2018-03-16 16:07:29.739617047 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAps_info:
	.quad	_ccAps
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.740277266 UTC

.section .text
.align 8
_ccApA:
_ccApA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccApA, .-_ccApA


==================== Asm code ====================
2018-03-16 16:07:29.740914726 UTC

.section .text
.align 8
_ccApE:
_ccApE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccApE, .-_ccApE


==================== Asm code ====================
2018-03-16 16:07:29.745563393 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_closure
.type GHC.ByteOrder.$fEqByteOrder_$c/=_closure, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_closure:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_info


==================== Asm code ====================
2018-03-16 16:07:29.746300338 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_entry
.type GHC.ByteOrder.$fEqByteOrder_$c/=_entry, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_entry:
_ccAqB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAqC
_ccAqD:
	leaq block_ccAqu_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAqu
_ccAqv:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAqC:
	leaq GHC.ByteOrder.$fEqByteOrder_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEqByteOrder_$c/=_entry, .-GHC.ByteOrder.$fEqByteOrder_$c/=_entry


==================== Asm code ====================
2018-03-16 16:07:29.746960789 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_$c/=_info
.type GHC.ByteOrder.$fEqByteOrder_$c/=_info, @object
GHC.ByteOrder.$fEqByteOrder_$c/=_info:
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.747768823 UTC

.section .text
.align 8
_ccAqu:
_ccAqu:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAqy
_ccAqz:
	leaq block_ccAqV_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAqV
_ccAqX:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAqy:
	leaq block_ccAqG_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAqG
_ccAqI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAqu, .-_ccAqu


==================== Asm code ====================
2018-03-16 16:07:29.748458026 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAqu_info:
	.quad	_ccAqu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.749136359 UTC

.section .text
.align 8
_ccAqG:
_ccAqG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ucArc
_ucArd:
	addq $8,%rbp
	jmp _ccAr3
_ucArc:
	addq $8,%rbp
	jmp _ccAr7
	.size _ccAqG, .-_ccAqG


==================== Asm code ====================
2018-03-16 16:07:29.74978108 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAqG_info:
	.quad	_ccAqG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.75041784 UTC

.section .text
.align 8
_ccAqV:
_ccAqV:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ucAra
_ucArb:
	addq $8,%rbp
	jmp _ccAr7
_ucAra:
	addq $8,%rbp
	jmp _ccAr3
	.size _ccAqV, .-_ccAqV


==================== Asm code ====================
2018-03-16 16:07:29.750964545 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAqV_info:
	.quad	_ccAqV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.751597802 UTC

.section .text
.align 8
_ccAr3:
_ccAr3:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAr3, .-_ccAr3


==================== Asm code ====================
2018-03-16 16:07:29.752257182 UTC

.section .text
.align 8
_ccAr7:
_ccAr7:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAr7, .-_ccAr7


==================== Asm code ====================
2018-03-16 16:07:29.754089528 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEqByteOrder_closure
.type GHC.ByteOrder.$fEqByteOrder_closure, @object
GHC.ByteOrder.$fEqByteOrder_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.ByteOrder.$fEqByteOrder_$c==_closure+2
	.quad	GHC.ByteOrder.$fEqByteOrder_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:29.758365152 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_info


==================== Asm code ====================
2018-03-16 16:07:29.759118847 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_entry:
_ccAs5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAs6
_ccAs7:
	leaq block_ccArY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccArY
_ccArZ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAs6:
	leaq GHC.ByteOrder.$fOrdByteOrder_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c<=_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c<=_entry


==================== Asm code ====================
2018-03-16 16:07:29.759835921 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c<=_info
.type GHC.ByteOrder.$fOrdByteOrder_$c<=_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c<=_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.760605113 UTC

.section .text
.align 8
_ccArY:
_ccArY:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAs2
_ccAs3:
	leaq block_ccAsp_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAsp
_ccAsr:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAs2:
	leaq block_ccAsa_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAsa
_ccAsc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccArY, .-_ccArY


==================== Asm code ====================
2018-03-16 16:07:29.761312836 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccArY_info:
	.quad	_ccArY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.762026381 UTC

.section .text
.align 8
_ccAsa:
_ccAsa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAsi
_ccAsm:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAsi:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAsa, .-_ccAsa


==================== Asm code ====================
2018-03-16 16:07:29.762680563 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAsa_info:
	.quad	_ccAsa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.763351652 UTC

.section .text
.align 8
_ccAsp:
_ccAsp:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAsp, .-_ccAsp


==================== Asm code ====================
2018-03-16 16:07:29.763958102 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAsp_info:
	.quad	_ccAsp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.767825894 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_closure
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_info


==================== Asm code ====================
2018-03-16 16:07:29.768567487 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_entry
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_entry:
_ccAtf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAtg
_ccAth:
	leaq block_ccAt8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAt8
_ccAt9:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAtg:
	leaq GHC.ByteOrder.$fOrdByteOrder_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$cmax_entry, .-GHC.ByteOrder.$fOrdByteOrder_$cmax_entry


==================== Asm code ====================
2018-03-16 16:07:29.769220259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmax_info
.type GHC.ByteOrder.$fOrdByteOrder_$cmax_info, @object
GHC.ByteOrder.$fOrdByteOrder_$cmax_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.769980569 UTC

.section .text
.align 8
_ccAt8:
_ccAt8:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAtc
_ccAtd:
	leaq block_ccAtn_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAtn
_ccAtp:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAtc:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAt8, .-_ccAt8


==================== Asm code ====================
2018-03-16 16:07:29.770623236 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAt8_info:
	.quad	_ccAt8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.771266458 UTC

.section .text
.align 8
_ccAtn:
_ccAtn:
	leaq GHC.ByteOrder.LittleEndian_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAtn, .-_ccAtn


==================== Asm code ====================
2018-03-16 16:07:29.771830097 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAtn_info:
	.quad	_ccAtn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.776019874 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_info


==================== Asm code ====================
2018-03-16 16:07:29.776754662 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_entry:
_ccAu1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAu2
_ccAu3:
	leaq block_ccAtU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAtU
_ccAtV:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAu2:
	leaq GHC.ByteOrder.$fOrdByteOrder_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$c>=_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c>=_entry


==================== Asm code ====================
2018-03-16 16:07:29.777407395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>=_info
.type GHC.ByteOrder.$fOrdByteOrder_$c>=_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c>=_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.778159154 UTC

.section .text
.align 8
_ccAtU:
_ccAtU:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAtY
_ccAtZ:
	leaq block_ccAul_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAul
_ccAun:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAtY:
	leaq block_ccAu6_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAu6
_ccAu8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAtU, .-_ccAtU


==================== Asm code ====================
2018-03-16 16:07:29.778824655 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAtU_info:
	.quad	_ccAtU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.779532275 UTC

.section .text
.align 8
_ccAu6:
_ccAu6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAue
_ccAui:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAue:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAu6, .-_ccAu6


==================== Asm code ====================
2018-03-16 16:07:29.780144593 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAu6_info:
	.quad	_ccAu6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.780807392 UTC

.section .text
.align 8
_ccAul:
_ccAul:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAul, .-_ccAul


==================== Asm code ====================
2018-03-16 16:07:29.781392334 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAul_info:
	.quad	_ccAul
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.783448935 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_closure
.type GHC.ByteOrder.$fOrdByteOrder_$c>_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_info


==================== Asm code ====================
2018-03-16 16:07:29.784123831 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_entry
.type GHC.ByteOrder.$fOrdByteOrder_$c>_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_entry:
_ccAv4:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.ByteOrder.$fOrdByteOrder_$c<_entry
	.size GHC.ByteOrder.$fOrdByteOrder_$c>_entry, .-GHC.ByteOrder.$fOrdByteOrder_$c>_entry


==================== Asm code ====================
2018-03-16 16:07:29.784737373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$c>_info
.type GHC.ByteOrder.$fOrdByteOrder_$c>_info, @object
GHC.ByteOrder.$fOrdByteOrder_$c>_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.788647105 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_closure
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_closure, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_closure:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_info


==================== Asm code ====================
2018-03-16 16:07:29.789480127 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_entry
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_entry, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_entry:
_ccAvm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAvn
_ccAvo:
	leaq block_ccAvf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAvf
_ccAvg:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAvn:
	leaq GHC.ByteOrder.$fOrdByteOrder_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fOrdByteOrder_$cmin_entry, .-GHC.ByteOrder.$fOrdByteOrder_$cmin_entry


==================== Asm code ====================
2018-03-16 16:07:29.790154489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_$cmin_info
.type GHC.ByteOrder.$fOrdByteOrder_$cmin_info, @object
GHC.ByteOrder.$fOrdByteOrder_$cmin_info:
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.790922633 UTC

.section .text
.align 8
_ccAvf:
_ccAvf:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAvj
_ccAvk:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ccAvj:
	leaq block_ccAvr_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _ccAvr
_ccAvt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAvf, .-_ccAvf


==================== Asm code ====================
2018-03-16 16:07:29.791598403 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAvf_info:
	.quad	_ccAvf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.792196763 UTC

.section .text
.align 8
_ccAvr:
_ccAvr:
	leaq GHC.ByteOrder.BigEndian_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAvr, .-_ccAvr


==================== Asm code ====================
2018-03-16 16:07:29.792770463 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAvr_info:
	.quad	_ccAvr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.794664685 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fOrdByteOrder_closure
.type GHC.ByteOrder.$fOrdByteOrder_closure, @object
GHC.ByteOrder.$fOrdByteOrder_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.ByteOrder.$fEqByteOrder_closure+1
	.quad	GHC.ByteOrder.$fOrdByteOrder_$ccompare_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c<=_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$c>=_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmax_closure+2
	.quad	GHC.ByteOrder.$fOrdByteOrder_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:29.796387755 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.targetByteOrder_closure
.type GHC.ByteOrder.targetByteOrder_closure, @object
GHC.ByteOrder.targetByteOrder_closure:
	.quad	GHC.ByteOrder.LittleEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:29.798940195 UTC

.section .data
.align 8
.align 1
lvl_rcykn_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.800525093 UTC

.section .data
.align 8
.align 1
lvl1_rcyko_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:29.803397757 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info


==================== Asm code ====================
2018-03-16 16:07:29.804188138 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry:
_ccAwc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAwd
_ccAwe:
	leaq block_ccAw5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccAw5
_ccAw6:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAwd:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 16:07:29.804850251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info
.type GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:29.805930403 UTC

.section .text
.align 8
_ccAw5:
_ccAw5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAw9
_ccAwa:
	leaq lvl1_rcyko_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAw9:
	leaq lvl_rcykn_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAw5, .-_ccAw5


==================== Asm code ====================
2018-03-16 16:07:29.806537721 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAw5_info:
	.quad	_ccAw5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.808069426 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rcykp_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:07:29.810549977 UTC

.section .data
.align 8
.align 1
lvl3_rcykq_closure:
	.quad	lvl3_rcykq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.811367423 UTC

.section .text
.align 8
lvl3_rcykq_entry:
_ccAwH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAwI
_ccAwJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAwG
_ccAwF:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl2_rcykp_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAwI:
	jmp *-16(%r13)
_ccAwG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rcykq_entry, .-lvl3_rcykq_entry


==================== Asm code ====================
2018-03-16 16:07:29.812028719 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rcykq_info:
	.quad	lvl3_rcykq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.8136568 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$trModule4_bytes
.type GHC.ByteOrder.$trModule4_bytes, @object
GHC.ByteOrder.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:29.816015271 UTC

.section .data
.align 8
.align 1
lvl4_rcykr_closure:
	.quad	lvl4_rcykr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.81676328 UTC

.section .text
.align 8
lvl4_rcykr_entry:
_ccAwZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAx0
_ccAx1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAwY
_ccAwX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.ByteOrder.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAx0:
	jmp *-16(%r13)
_ccAwY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_rcykr_entry, .-lvl4_rcykr_entry


==================== Asm code ====================
2018-03-16 16:07:29.817683142 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rcykr_info:
	.quad	lvl4_rcykr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.819264546 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$trModule2_bytes
.type GHC.ByteOrder.$trModule2_bytes, @object
GHC.ByteOrder.$trModule2_bytes:
	.asciz "GHC.ByteOrder"


==================== Asm code ====================
2018-03-16 16:07:29.821720942 UTC

.section .data
.align 8
.align 1
lvl5_rcyks_closure:
	.quad	lvl5_rcyks_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.822558073 UTC

.section .text
.align 8
lvl5_rcyks_entry:
_ccAxh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAxi
_ccAxj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAxg
_ccAxf:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.ByteOrder.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAxi:
	jmp *-16(%r13)
_ccAxg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_rcyks_entry, .-lvl5_rcyks_entry


==================== Asm code ====================
2018-03-16 16:07:29.823287874 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rcyks_info:
	.quad	lvl5_rcyks_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.824956402 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rcykt_bytes:
	.asciz "./GHC/ByteOrder.hs"


==================== Asm code ====================
2018-03-16 16:07:29.827389708 UTC

.section .data
.align 8
.align 1
lvl7_rcyku_closure:
	.quad	lvl7_rcyku_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.828167285 UTC

.section .text
.align 8
lvl7_rcyku_entry:
_ccAxz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAxA
_ccAxB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAxy
_ccAxx:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl6_rcykt_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAxA:
	jmp *-16(%r13)
_ccAxy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rcyku_entry, .-lvl7_rcyku_entry


==================== Asm code ====================
2018-03-16 16:07:29.828859967 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rcyku_info:
	.quad	lvl7_rcyku_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.831412727 UTC

.section .data
.align 8
.align 1
lvl8_rcykv_closure:
	.quad	GHC.Types.I#_con_info
	.quad	26


==================== Asm code ====================
2018-03-16 16:07:29.833055898 UTC

.section .data
.align 8
.align 1
lvl9_rcykw_closure:
	.quad	GHC.Types.I#_con_info
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:29.834685939 UTC

.section .data
.align 8
.align 1
lvl10_rcykx_closure:
	.quad	GHC.Types.I#_con_info
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:29.836407206 UTC

.section .data
.align 8
.align 1
lvl11_rcyky_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl4_rcykr_closure
	.quad	lvl5_rcyks_closure
	.quad	lvl7_rcyku_closure
	.quad	lvl8_rcykv_closure+1
	.quad	lvl9_rcykw_closure+1
	.quad	lvl8_rcykv_closure+1
	.quad	lvl10_rcykx_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.83817637 UTC

.section .data
.align 8
.align 1
lvl12_rcykz_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl3_rcykq_closure
	.quad	lvl11_rcyky_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.839779128 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rcykA_bytes:
	.asciz "pred{ByteOrder}: tried to take `pred' of first tag in enumeration"


==================== Asm code ====================
2018-03-16 16:07:29.842690961 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder3_closure
.type GHC.ByteOrder.$fEnumByteOrder3_closure, @object
GHC.ByteOrder.$fEnumByteOrder3_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.843606563 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder3_entry
.type GHC.ByteOrder.$fEnumByteOrder3_entry, @object
GHC.ByteOrder.$fEnumByteOrder3_entry:
_ccAxY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAxZ
_ccAy0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAxV
_ccAxU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_ccAxW_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl13_rcykA_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAxZ:
	jmp *-16(%r13)
_ccAxV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder3_entry, .-GHC.ByteOrder.$fEnumByteOrder3_entry


==================== Asm code ====================
2018-03-16 16:07:29.844349478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder3_info
.type GHC.ByteOrder.$fEnumByteOrder3_info, @object
GHC.ByteOrder.$fEnumByteOrder3_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder3_entry
	.quad	0
	.quad	12884901909
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.844991507 UTC

.section .text
.align 8
_ccAxW:
_ccAxW:
	movq %rbx,%rsi
	leaq lvl12_rcykz_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _ccAxW, .-_ccAxW


==================== Asm code ====================
2018-03-16 16:07:29.846005157 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAxW_info:
	.quad	_ccAxW
	.quad	0
	.quad	12884901918
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.848811364 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.849593149 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_entry:
_ccAyr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAys
_ccAyt:
	leaq block_ccAyk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccAyk
_ccAyl:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAys:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cpred_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cpred_entry


==================== Asm code ====================
2018-03-16 16:07:29.850244227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cpred_info
.type GHC.ByteOrder.$fEnumByteOrder_$cpred_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cpred_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScAiT_srt+128


==================== Asm code ====================
2018-03-16 16:07:29.850980505 UTC

.section .text
.align 8
_ccAyk:
_ccAyk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAyo
_ccAyp:
	leaq GHC.ByteOrder.BigEndian_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAyo:
	leaq GHC.ByteOrder.$fEnumByteOrder3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccAyk, .-_ccAyk


==================== Asm code ====================
2018-03-16 16:07:29.851562628 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAyk_info:
	.quad	_ccAyk
	.quad	0
	.quad	4294967326
	.quad	ScAiT_srt+136


==================== Asm code ====================
2018-03-16 16:07:29.853204419 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rcykB_bytes:
	.asciz "succ{ByteOrder}: tried to take `succ' of last tag in enumeration"


==================== Asm code ====================
2018-03-16 16:07:29.85656977 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder4_closure
.type GHC.ByteOrder.$fEnumByteOrder4_closure, @object
GHC.ByteOrder.$fEnumByteOrder4_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.857432085 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder4_entry
.type GHC.ByteOrder.$fEnumByteOrder4_entry, @object
GHC.ByteOrder.$fEnumByteOrder4_entry:
_ccAyY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAyZ
_ccAz0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAyV
_ccAyU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_ccAyW_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl14_rcykB_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAyZ:
	jmp *-16(%r13)
_ccAyV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder4_entry, .-GHC.ByteOrder.$fEnumByteOrder4_entry


==================== Asm code ====================
2018-03-16 16:07:29.858172589 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder4_info
.type GHC.ByteOrder.$fEnumByteOrder4_info, @object
GHC.ByteOrder.$fEnumByteOrder4_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder4_entry
	.quad	0
	.quad	12884901909
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.85878988 UTC

.section .text
.align 8
_ccAyW:
_ccAyW:
	movq %rbx,%rsi
	leaq lvl12_rcykz_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _ccAyW, .-_ccAyW


==================== Asm code ====================
2018-03-16 16:07:29.859360277 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAyW_info:
	.quad	_ccAyW
	.quad	0
	.quad	12884901918
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.862717843 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_closure
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.863487128 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_entry
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_entry:
_ccAzr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAzs
_ccAzt:
	leaq block_ccAzk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccAzk
_ccAzl:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAzs:
	leaq GHC.ByteOrder.$fEnumByteOrder_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$csucc_entry, .-GHC.ByteOrder.$fEnumByteOrder_$csucc_entry


==================== Asm code ====================
2018-03-16 16:07:29.864123538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$csucc_info
.type GHC.ByteOrder.$fEnumByteOrder_$csucc_info, @object
GHC.ByteOrder.$fEnumByteOrder_$csucc_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScAiT_srt+144


==================== Asm code ====================
2018-03-16 16:07:29.864851105 UTC

.section .text
.align 8
_ccAzk:
_ccAzk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAzo
_ccAzp:
	leaq GHC.ByteOrder.$fEnumByteOrder4_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ccAzo:
	leaq GHC.ByteOrder.LittleEndian_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAzk, .-_ccAzk


==================== Asm code ====================
2018-03-16 16:07:29.865728002 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAzk_info:
	.quad	_ccAzk
	.quad	0
	.quad	4294967326
	.quad	ScAiT_srt+152


==================== Asm code ====================
2018-03-16 16:07:29.867237472 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rcykC_bytes:
	.asciz ") is outside of enumeration's range (0,"


==================== Asm code ====================
2018-03-16 16:07:29.86877552 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl16_rcykD_bytes:
	.asciz ")"


==================== Asm code ====================
2018-03-16 16:07:29.87127043 UTC

.section .data
.align 8
.align 1
lvl17_rcykE_closure:
	.quad	lvl17_rcykE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.872103188 UTC

.section .text
.align 8
lvl17_rcykE_entry:
_ccAzX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAzY
_ccAzZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAzW
_ccAzV:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl16_rcykD_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccAzY:
	jmp *-16(%r13)
_ccAzW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl17_rcykE_entry, .-lvl17_rcykE_entry


==================== Asm code ====================
2018-03-16 16:07:29.872818844 UTC

.section .data.rel.ro
.align 8
.align 1
lvl17_rcykE_info:
	.quad	lvl17_rcykE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.876205884 UTC

.section .data
.align 8
.align 1
lvl18_rcykF_closure:
	.quad	lvl18_rcykF_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.876968991 UTC

.section .text
.align 8
lvl18_rcykF_entry:
_ccAAh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAAi
_ccAAj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAAd
_ccAAc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_ccAAe_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl17_rcykE_closure(%rip),%rdi
	movl $1,%esi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccAAi:
	jmp *-16(%r13)
_ccAAd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_rcykF_entry, .-lvl18_rcykF_entry


==================== Asm code ====================
2018-03-16 16:07:29.877734297 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_rcykF_info:
	.quad	lvl18_rcykF_entry
	.quad	0
	.quad	4294967317
	.quad	ScAiT_srt+160


==================== Asm code ====================
2018-03-16 16:07:29.878475182 UTC

.section .text
.align 8
_ccAAe:
_ccAAe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAAm
_ccAAl:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAAm:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccAAe, .-_ccAAe


==================== Asm code ====================
2018-03-16 16:07:29.879119257 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAAe_info:
	.quad	_ccAAe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.881589865 UTC

.section .data
.align 8
.align 1
lvl19_rcykG_closure:
	.quad	lvl19_rcykG_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.882394675 UTC

.section .text
.align 8
lvl19_rcykG_entry:
_ccAAH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAAI
_ccAAJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccAAG
_ccAAF:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl18_rcykF_closure(%rip),%rsi
	leaq lvl15_rcykC_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccAAI:
	jmp *-16(%r13)
_ccAAG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl19_rcykG_entry, .-lvl19_rcykG_entry


==================== Asm code ====================
2018-03-16 16:07:29.883081219 UTC

.section .data.rel.ro
.align 8
.align 1
lvl19_rcykG_info:
	.quad	lvl19_rcykG_entry
	.quad	0
	.quad	4294967317
	.quad	ScAiT_srt+168


==================== Asm code ====================
2018-03-16 16:07:29.884733563 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_rcykH_bytes:
	.asciz "toEnum{ByteOrder}: tag ("


==================== Asm code ====================
2018-03-16 16:07:29.888986549 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$wlvl_closure
.type GHC.ByteOrder.$wlvl_closure, @object
GHC.ByteOrder.$wlvl_closure:
	.quad	GHC.ByteOrder.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.889763132 UTC

.section .text
.align 8
sat_scAeG_entry:
_ccAB4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAB5
_ccAB6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccAB1_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl19_rcykG_closure(%rip),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccAB5:
	jmp *-16(%r13)
	.size sat_scAeG_entry, .-sat_scAeG_entry


==================== Asm code ====================
2018-03-16 16:07:29.890386486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAeG_info:
	.quad	sat_scAeG_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+176


==================== Asm code ====================
2018-03-16 16:07:29.891102966 UTC

.section .text
.align 8
_ccAB1:
_ccAB1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAB9
_ccAB8:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAB9:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccAB1, .-_ccAB1


==================== Asm code ====================
2018-03-16 16:07:29.891779518 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAB1_info:
	.quad	_ccAB1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.892536668 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$wlvl_entry
.type GHC.ByteOrder.$wlvl_entry, @object
GHC.ByteOrder.$wlvl_entry:
_ccABc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccABd
_ccABe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccABg
_ccABf:
	leaq sat_scAeG_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq block_ccABa_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rsi
	leaq lvl20_rcykH_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccABg:
	movq $24,904(%r13)
_ccABd:
	leaq GHC.ByteOrder.$wlvl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$wlvl_entry, .-GHC.ByteOrder.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:07:29.893210848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$wlvl_info
.type GHC.ByteOrder.$wlvl_info, @object
GHC.ByteOrder.$wlvl_info:
	.quad	GHC.ByteOrder.$wlvl_entry
	.quad	0
	.quad	3311419785230
	.quad	4294967300
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.893853105 UTC

.section .text
.align 8
_ccABa:
_ccABa:
	movq %rbx,%rsi
	leaq lvl12_rcykz_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _ccABa, .-_ccABa


==================== Asm code ====================
2018-03-16 16:07:29.894899974 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccABa_info:
	.quad	_ccABa
	.quad	0
	.quad	12884901918
	.quad	ScAiT_srt+112


==================== Asm code ====================
2018-03-16 16:07:29.897740236 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$w$ctoEnum_closure
.type GHC.ByteOrder.$w$ctoEnum_closure, @object
GHC.ByteOrder.$w$ctoEnum_closure:
	.quad	GHC.ByteOrder.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.898452952 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$w$ctoEnum_entry
.type GHC.ByteOrder.$w$ctoEnum_entry, @object
GHC.ByteOrder.$w$ctoEnum_entry:
_ccABO:
	movq %r14,%rax
	testq %r14,%r14
	jl _ccABW
_ccABN:
	cmpq $1,%rax
	jg _ccABW
_ccABX:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccABW:
	movq %rax,%r14
	jmp GHC.ByteOrder.$wlvl_entry
	.size GHC.ByteOrder.$w$ctoEnum_entry, .-GHC.ByteOrder.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 16:07:29.899100651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$w$ctoEnum_info
.type GHC.ByteOrder.$w$ctoEnum_info, @object
GHC.ByteOrder.$w$ctoEnum_info:
	.quad	GHC.ByteOrder.$w$ctoEnum_entry
	.quad	0
	.quad	4294967310
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:29.901739117 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.902476631 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry:
_ccACc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccACd
_ccACe:
	leaq block_ccAC9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccAC9
_ccACa:
	movq (%rbx),%rax
	jmp *(%rax)
_ccACd:
	leaq GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry, .-GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 16:07:29.903111774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info
.type GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info, @object
GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScAiT_srt+192


==================== Asm code ====================
2018-03-16 16:07:29.90375023 UTC

.section .text
.align 8
_ccAC9:
_ccAC9:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.ByteOrder.$w$ctoEnum_entry
	.size _ccAC9, .-_ccAC9


==================== Asm code ====================
2018-03-16 16:07:29.904329891 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAC9_info:
	.quad	_ccAC9
	.quad	0
	.quad	4294967326
	.quad	ScAiT_srt+200


==================== Asm code ====================
2018-03-16 16:07:29.908088583 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go2_closure
.type GHC.ByteOrder.$fEnumByteOrder_go2_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go2_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go2_info


==================== Asm code ====================
2018-03-16 16:07:29.908876718 UTC

.section .text
.align 8
sat_scAeS_entry:
_ccACF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccACG
_ccACH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $1,%rax
	jne _ccACD
_ccACE:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccACG:
	jmp *-16(%r13)
_ccACD:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
	.size sat_scAeS_entry, .-sat_scAeS_entry


==================== Asm code ====================
2018-03-16 16:07:29.909827841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAeS_info:
	.quad	sat_scAeS_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.910514639 UTC

.section .text
.align 8
sat_scAeP_entry:
_ccACO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccACP
_ccACQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccACP:
	jmp *-16(%r13)
	.size sat_scAeP_entry, .-sat_scAeP_entry


==================== Asm code ====================
2018-03-16 16:07:29.911191383 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAeP_info:
	.quad	sat_scAeP_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.911927005 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go2_entry
.type GHC.ByteOrder.$fEnumByteOrder_go2_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go2_entry:
_ccACS:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccACW
_ccACV:
	leaq sat_scAeS_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAeP_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccACW:
	movq $72,904(%r13)
	leaq GHC.ByteOrder.$fEnumByteOrder_go2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go2_entry, .-GHC.ByteOrder.$fEnumByteOrder_go2_entry


==================== Asm code ====================
2018-03-16 16:07:29.912665094 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go2_info
.type GHC.ByteOrder.$fEnumByteOrder_go2_info, @object
GHC.ByteOrder.$fEnumByteOrder_go2_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go2_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:29.915151695 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder2_closure
.type GHC.ByteOrder.$fEnumByteOrder2_closure, @object
GHC.ByteOrder.$fEnumByteOrder2_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.915934903 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder2_entry
.type GHC.ByteOrder.$fEnumByteOrder2_entry, @object
GHC.ByteOrder.$fEnumByteOrder2_entry:
_ccADs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccADt
_ccADu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccADr
_ccADq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	xorl %r14d,%r14d
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
_ccADt:
	jmp *-16(%r13)
_ccADr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder2_entry, .-GHC.ByteOrder.$fEnumByteOrder2_entry


==================== Asm code ====================
2018-03-16 16:07:29.916634509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder2_info
.type GHC.ByteOrder.$fEnumByteOrder2_info, @object
GHC.ByteOrder.$fEnumByteOrder2_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.919091406 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder1_closure
.type GHC.ByteOrder.$fEnumByteOrder1_closure, @object
GHC.ByteOrder.$fEnumByteOrder1_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.919929359 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder1_entry
.type GHC.ByteOrder.$fEnumByteOrder1_entry, @object
GHC.ByteOrder.$fEnumByteOrder1_entry:
_ccADJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccADK
_ccADL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccADI
_ccADH:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $1,%r14d
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go2_entry
_ccADK:
	jmp *-16(%r13)
_ccADI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.$fEnumByteOrder1_entry, .-GHC.ByteOrder.$fEnumByteOrder1_entry


==================== Asm code ====================
2018-03-16 16:07:29.920630859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder1_info
.type GHC.ByteOrder.$fEnumByteOrder1_info, @object
GHC.ByteOrder.$fEnumByteOrder1_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:29.923833938 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:29.924555724 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry:
_ccAE5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAE6
_ccAE7:
	leaq block_ccADY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccADY
_ccADZ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAE6:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 16:07:29.925204815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScAiT_srt+208


==================== Asm code ====================
2018-03-16 16:07:29.925937871 UTC

.section .text
.align 8
_ccADY:
_ccADY:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAE2
_ccAE3:
	leaq GHC.ByteOrder.$fEnumByteOrder1_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ccAE2:
	leaq GHC.ByteOrder.$fEnumByteOrder2_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccADY, .-_ccADY


==================== Asm code ====================
2018-03-16 16:07:29.926555256 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccADY_info:
	.quad	_ccADY
	.quad	0
	.quad	12884901918
	.quad	ScAiT_srt+216


==================== Asm code ====================
2018-03-16 16:07:29.954253907 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info


==================== Asm code ====================
2018-03-16 16:07:29.955153701 UTC

.section .text
.align 8
sat_scAfc_entry:
_ccAFe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAFf
_ccAFg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scAf7_entry
_ccAFf:
	jmp *-16(%r13)
	.size sat_scAfc_entry, .-sat_scAfc_entry


==================== Asm code ====================
2018-03-16 16:07:29.956619935 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfc_info:
	.quad	sat_scAfc_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:29.957429629 UTC

.section .text
.align 8
sat_scAfa_entry:
_ccAFl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAFm
_ccAFn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAFm:
	jmp *-16(%r13)
	.size sat_scAfa_entry, .-sat_scAfa_entry


==================== Asm code ====================
2018-03-16 16:07:29.958074649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfa_info:
	.quad	sat_scAfa_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.958809919 UTC

.section .text
.align 8
sat_scAfd_entry:
_ccAFt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAFu
_ccAFv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAFu:
	jmp *-16(%r13)
	.size sat_scAfd_entry, .-sat_scAfd_entry


==================== Asm code ====================
2018-03-16 16:07:29.959445805 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfd_info:
	.quad	sat_scAfd_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.960280634 UTC

.section .text
.align 8
go_dn_scAf7_entry:
_ccAFz:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAFD
_ccAFC:
	cmpq 15(%rbx),%r14
	jge _ccAFx
_ccAFy:
	leaq sat_scAfd_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAFD:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAFx:
	movq 7(%rbx),%rax
	leaq sat_scAfc_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAfa_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scAf7_entry, .-go_dn_scAf7_entry


==================== Asm code ====================
2018-03-16 16:07:29.961037851 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scAf7_info:
	.quad	go_dn_scAf7_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:29.961861157 UTC

.section .text
.align 8
sat_scAfe_entry:
_ccAFG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAFH
_ccAFI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAFK
_ccAFJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_dn_scAf7_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scAf7_entry
_ccAFK:
	movq $24,904(%r13)
_ccAFH:
	jmp *-16(%r13)
	.size sat_scAfe_entry, .-sat_scAfe_entry


==================== Asm code ====================
2018-03-16 16:07:29.962545634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfe_info:
	.quad	sat_scAfe_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:29.963241914 UTC

.section .text
.align 8
sat_scAf4_entry:
_ccAFP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAFQ
_ccAFR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAFQ:
	jmp *-16(%r13)
	.size sat_scAf4_entry, .-sat_scAf4_entry


==================== Asm code ====================
2018-03-16 16:07:29.963889781 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAf4_info:
	.quad	sat_scAf4_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.964607795 UTC

.section .text
.align 8
sat_scAfg_entry:
_ccAG0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAG1
_ccAG2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAG1:
	jmp *-16(%r13)
	.size sat_scAfg_entry, .-sat_scAfg_entry


==================== Asm code ====================
2018-03-16 16:07:29.965262447 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfg_info:
	.quad	sat_scAfg_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.965973159 UTC

.section .text
.align 8
sat_scAfq_entry:
_ccAGv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAGw
_ccAGx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scAfl_entry
_ccAGw:
	jmp *-16(%r13)
	.size sat_scAfq_entry, .-sat_scAfq_entry


==================== Asm code ====================
2018-03-16 16:07:29.966606484 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfq_info:
	.quad	sat_scAfq_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:29.967306826 UTC

.section .text
.align 8
sat_scAfo_entry:
_ccAGC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAGD
_ccAGE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAGD:
	jmp *-16(%r13)
	.size sat_scAfo_entry, .-sat_scAfo_entry


==================== Asm code ====================
2018-03-16 16:07:29.967973945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfo_info:
	.quad	sat_scAfo_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.968678441 UTC

.section .text
.align 8
sat_scAfr_entry:
_ccAGK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAGL
_ccAGM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAGL:
	jmp *-16(%r13)
	.size sat_scAfr_entry, .-sat_scAfr_entry


==================== Asm code ====================
2018-03-16 16:07:29.969400168 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfr_info:
	.quad	sat_scAfr_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.970247165 UTC

.section .text
.align 8
go_up_scAfl_entry:
_ccAGQ:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAGU
_ccAGT:
	cmpq 15(%rbx),%r14
	jle _ccAGO
_ccAGP:
	leaq sat_scAfr_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAGU:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAGO:
	movq 7(%rbx),%rax
	leaq sat_scAfq_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAfo_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scAfl_entry, .-go_up_scAfl_entry


==================== Asm code ====================
2018-03-16 16:07:29.971069847 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scAfl_info:
	.quad	go_up_scAfl_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:29.971864852 UTC

.section .text
.align 8
sat_scAfs_entry:
_ccAGX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAGY
_ccAGZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAH1
_ccAH0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_up_scAfl_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scAfl_entry
_ccAH1:
	movq $24,904(%r13)
_ccAGY:
	jmp *-16(%r13)
	.size sat_scAfs_entry, .-sat_scAfs_entry


==================== Asm code ====================
2018-03-16 16:07:29.972572687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfs_info:
	.quad	sat_scAfs_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:29.973234 UTC

.section .text
.align 8
sat_scAfi_entry:
_ccAH6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAH7
_ccAH8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAH7:
	jmp *-16(%r13)
	.size sat_scAfi_entry, .-sat_scAfi_entry


==================== Asm code ====================
2018-03-16 16:07:29.973871654 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfi_info:
	.quad	sat_scAfi_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.974556007 UTC

.section .text
.align 8
sat_scAfu_entry:
_ccAHh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAHi
_ccAHj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAHi:
	jmp *-16(%r13)
	.size sat_scAfu_entry, .-sat_scAfu_entry


==================== Asm code ====================
2018-03-16 16:07:29.975180519 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfu_info:
	.quad	sat_scAfu_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.975899139 UTC

.section .text
.align 8
sat_scAfF_entry:
_ccAHP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAHQ
_ccAHR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scAfA_entry
_ccAHQ:
	jmp *-16(%r13)
	.size sat_scAfF_entry, .-sat_scAfF_entry


==================== Asm code ====================
2018-03-16 16:07:29.976539773 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfF_info:
	.quad	sat_scAfF_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:29.977231939 UTC

.section .text
.align 8
sat_scAfD_entry:
_ccAHW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAHX
_ccAHY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAHX:
	jmp *-16(%r13)
	.size sat_scAfD_entry, .-sat_scAfD_entry


==================== Asm code ====================
2018-03-16 16:07:29.97789685 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfD_info:
	.quad	sat_scAfD_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.978552735 UTC

.section .text
.align 8
sat_scAfG_entry:
_ccAI4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAI5
_ccAI6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAI5:
	jmp *-16(%r13)
	.size sat_scAfG_entry, .-sat_scAfG_entry


==================== Asm code ====================
2018-03-16 16:07:29.979169176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfG_info:
	.quad	sat_scAfG_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.979990988 UTC

.section .text
.align 8
go_dn_scAfA_entry:
_ccAIa:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAIe
_ccAId:
	cmpq 15(%rbx),%r14
	jge _ccAI8
_ccAI9:
	leaq sat_scAfG_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAIe:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAI8:
	movq 7(%rbx),%rax
	leaq sat_scAfF_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAfD_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scAfA_entry, .-go_dn_scAfA_entry


==================== Asm code ====================
2018-03-16 16:07:29.980746648 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scAfA_info:
	.quad	go_dn_scAfA_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:29.981907782 UTC

.section .text
.align 8
sat_scAfH_entry:
_ccAIh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAIi
_ccAIj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAIl
_ccAIk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_dn_scAfA_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scAfA_entry
_ccAIl:
	movq $24,904(%r13)
_ccAIi:
	jmp *-16(%r13)
	.size sat_scAfH_entry, .-sat_scAfH_entry


==================== Asm code ====================
2018-03-16 16:07:29.982621992 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfH_info:
	.quad	sat_scAfH_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:29.983325801 UTC

.section .text
.align 8
sat_scAfx_entry:
_ccAIq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAIr
_ccAIs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAIr:
	jmp *-16(%r13)
	.size sat_scAfx_entry, .-sat_scAfx_entry


==================== Asm code ====================
2018-03-16 16:07:29.983949563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfx_info:
	.quad	sat_scAfx_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.984657691 UTC

.section .text
.align 8
sat_scAfJ_entry:
_ccAIB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAIC
_ccAID:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAIC:
	jmp *-16(%r13)
	.size sat_scAfJ_entry, .-sat_scAfJ_entry


==================== Asm code ====================
2018-03-16 16:07:29.98533075 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfJ_info:
	.quad	sat_scAfJ_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.985952853 UTC

.section .text
.align 8
sat_scAfT_entry:
_ccAJ6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJ7
_ccAJ8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scAfO_entry
_ccAJ7:
	jmp *-16(%r13)
	.size sat_scAfT_entry, .-sat_scAfT_entry


==================== Asm code ====================
2018-03-16 16:07:29.986609559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfT_info:
	.quad	sat_scAfT_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:29.987940045 UTC

.section .text
.align 8
sat_scAfR_entry:
_ccAJd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJe
_ccAJf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAJe:
	jmp *-16(%r13)
	.size sat_scAfR_entry, .-sat_scAfR_entry


==================== Asm code ====================
2018-03-16 16:07:29.988541395 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfR_info:
	.quad	sat_scAfR_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.98927145 UTC

.section .text
.align 8
sat_scAfU_entry:
_ccAJl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJm
_ccAJn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAJm:
	jmp *-16(%r13)
	.size sat_scAfU_entry, .-sat_scAfU_entry


==================== Asm code ====================
2018-03-16 16:07:29.989885641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfU_info:
	.quad	sat_scAfU_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.990719324 UTC

.section .text
.align 8
go_up_scAfO_entry:
_ccAJr:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAJv
_ccAJu:
	cmpq 15(%rbx),%r14
	jle _ccAJp
_ccAJq:
	leaq sat_scAfU_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAJv:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAJp:
	movq 7(%rbx),%rax
	leaq sat_scAfT_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAfR_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scAfO_entry, .-go_up_scAfO_entry


==================== Asm code ====================
2018-03-16 16:07:29.991464052 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scAfO_info:
	.quad	go_up_scAfO_entry
	.quad	8589934592
	.quad	13
	.quad	4294967300


==================== Asm code ====================
2018-03-16 16:07:29.992241236 UTC

.section .text
.align 8
sat_scAfV_entry:
_ccAJy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJz
_ccAJA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAJC
_ccAJB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_up_scAfO_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scAfO_entry
_ccAJC:
	movq $24,904(%r13)
_ccAJz:
	jmp *-16(%r13)
	.size sat_scAfV_entry, .-sat_scAfV_entry


==================== Asm code ====================
2018-03-16 16:07:29.992890117 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfV_info:
	.quad	sat_scAfV_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:07:29.993968628 UTC

.section .text
.align 8
sat_scAfL_entry:
_ccAJH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJI
_ccAJJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAJI:
	jmp *-16(%r13)
	.size sat_scAfL_entry, .-sat_scAfL_entry


==================== Asm code ====================
2018-03-16 16:07:29.994571466 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfL_info:
	.quad	sat_scAfL_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.995260549 UTC

.section .text
.align 8
sat_scAfX_entry:
_ccAJS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAJT
_ccAJU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAJT:
	jmp *-16(%r13)
	.size sat_scAfX_entry, .-sat_scAfX_entry


==================== Asm code ====================
2018-03-16 16:07:29.995860526 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAfX_info:
	.quad	sat_scAfX_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:29.996639942 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry:
_ccAK2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAK3
_ccAK4:
	leaq block_ccAJV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccAJV
_ccAJW:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAK3:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 16:07:29.997321533 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:29.998087491 UTC

.section .text
.align 8
_ccAJV:
_ccAJV:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAJZ
_ccAK0:
	movl $1,%ebx
_scAeX:
	leaq block_ccAK5_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _ccAK5
_ccAKP:
	movq (%rbx),%rax
	jmp *(%rax)
_ccAJZ:
	xorl %ebx,%ebx
	jmp _scAeX
	.size _ccAJV, .-_ccAJV


==================== Asm code ====================
2018-03-16 16:07:29.99870848 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAJV_info:
	.quad	_ccAJV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:29.999301632 UTC

.section .text
.align 8
_ccAK5:
_ccAK5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccAKV
_ccAKZ:
	movq $1,(%rbp)
	jmp _ccAEF
_ccAKV:
	movq $0,(%rbp)
	jmp _ccAEF
	.size _ccAK5, .-_ccAK5


==================== Asm code ====================
2018-03-16 16:07:29.999787233 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAK5_info:
	.quad	_ccAK5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.001313618 UTC

.section .text
.align 8
_ccAEF:
_ccAEF:
	addq $80,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ccAK9
_ccAK8:
	movq 8(%rbp),%rbx
	cmpq %rax,%rbx
	jle _ccAKu
_ccAKO:
	cmpq %rbx,%rax
	jl _ccAKE
_ccAKN:
	cmpq $0,%rax
	jle _ccAKH
_ccAKM:
	cmpq $0,%rbx
	jg _ccAKL
_ccAKK:
	leaq sat_scAfX_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKL:
	addq $-80,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKH:
	leaq sat_scAfV_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	leaq sat_scAfL_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKE:
	cmpq $0,%rax
	jge _ccAKx
_ccAKC:
	cmpq $0,%rbx
	jl _ccAKL
_ccAKA:
	leaq sat_scAfJ_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKx:
	leaq sat_scAfH_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	leaq sat_scAfx_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKu:
	cmpq %rbx,%rax
	jl _ccAKj
_ccAKs:
	cmpq $1,%rax
	jle _ccAKm
_ccAKr:
	cmpq $1,%rbx
	jg _ccAKL
_ccAKp:
	leaq sat_scAfu_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKm:
	leaq sat_scAfs_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	leaq sat_scAfi_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKj:
	cmpq $1,%rax
	jge _ccAKc
_ccAKh:
	cmpq $1,%rbx
	jl _ccAKL
_ccAKf:
	leaq sat_scAfg_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAKc:
	leaq sat_scAfe_info(%rip),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	leaq sat_scAf4_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAK9:
	movq $80,904(%r13)
	leaq block_ccAEE_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ccAEF, .-_ccAEF


==================== Asm code ====================
2018-03-16 16:07:30.002859465 UTC

.section .text
.align 8
_ccAEE:
_ccAEE:
	movq %rbx,(%rbp)
	jmp _ccAEF
	.size _ccAEE, .-_ccAEE


==================== Asm code ====================
2018-03-16 16:07:30.003390697 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAEE_info:
	.quad	_ccAEE
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:30.007947743 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go1_closure
.type GHC.ByteOrder.$fEnumByteOrder_go1_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go1_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.008735637 UTC

.section .text
.align 8
sat_scAg6_entry:
_ccAQI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAQJ
_ccAQK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jne _ccAQG
_ccAQH:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAQJ:
	jmp *-16(%r13)
_ccAQG:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.size sat_scAg6_entry, .-sat_scAg6_entry


==================== Asm code ====================
2018-03-16 16:07:30.009380165 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAg6_info:
	.quad	sat_scAg6_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+232


==================== Asm code ====================
2018-03-16 16:07:30.010187586 UTC

.section .text
.align 8
sat_scAg3_entry:
_ccAQW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAQX
_ccAR5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAR3
_ccAQV:
	cmpq $1,%rax
	jg _ccAR3
_ccAR4:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAR3:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAQX:
	jmp *-16(%r13)
	.size sat_scAg3_entry, .-sat_scAg3_entry


==================== Asm code ====================
2018-03-16 16:07:30.010880548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAg3_info:
	.quad	sat_scAg3_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.011605541 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go1_entry
.type GHC.ByteOrder.$fEnumByteOrder_go1_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go1_entry:
_ccAR7:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccARb
_ccARa:
	leaq sat_scAg6_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAg3_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccARb:
	movq $72,904(%r13)
	leaq GHC.ByteOrder.$fEnumByteOrder_go1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go1_entry, .-GHC.ByteOrder.$fEnumByteOrder_go1_entry


==================== Asm code ====================
2018-03-16 16:07:30.012302591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go1_info
.type GHC.ByteOrder.$fEnumByteOrder_go1_info, @object
GHC.ByteOrder.$fEnumByteOrder_go1_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.quad	0
	.quad	279172874254
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.016467535 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go_closure
.type GHC.ByteOrder.$fEnumByteOrder_go_closure, @object
GHC.ByteOrder.$fEnumByteOrder_go_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.017229763 UTC

.section .text
.align 8
sat_scAgd_entry:
_ccARN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccARO
_ccARP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq $1,%rax
	jne _ccARL
_ccARM:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccARO:
	jmp *-16(%r13)
_ccARL:
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go_entry
	.size sat_scAgd_entry, .-sat_scAgd_entry


==================== Asm code ====================
2018-03-16 16:07:30.018250785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgd_info:
	.quad	sat_scAgd_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+240


==================== Asm code ====================
2018-03-16 16:07:30.019027366 UTC

.section .text
.align 8
sat_scAga_entry:
_ccAS1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAS2
_ccASa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAS8
_ccAS0:
	cmpq $1,%rax
	jg _ccAS8
_ccAS9:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAS8:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAS2:
	jmp *-16(%r13)
	.size sat_scAga_entry, .-sat_scAga_entry


==================== Asm code ====================
2018-03-16 16:07:30.019697753 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAga_info:
	.quad	sat_scAga_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.020455533 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_go_entry
.type GHC.ByteOrder.$fEnumByteOrder_go_entry, @object
GHC.ByteOrder.$fEnumByteOrder_go_entry:
_ccASc:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccASg
_ccASf:
	leaq sat_scAgd_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAga_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccASg:
	movq $72,904(%r13)
	leaq GHC.ByteOrder.$fEnumByteOrder_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_go_entry, .-GHC.ByteOrder.$fEnumByteOrder_go_entry


==================== Asm code ====================
2018-03-16 16:07:30.021153188 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_go_info
.type GHC.ByteOrder.$fEnumByteOrder_go_info, @object
GHC.ByteOrder.$fEnumByteOrder_go_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_entry
	.quad	0
	.quad	554050781198
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.025140897 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.026749213 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry:
_ccAST:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccASU
_ccASV:
	leaq block_ccASM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccASM
_ccASN:
	movq (%rbx),%rax
	jmp *(%rax)
_ccASU:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 16:07:30.027454067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	ScAiT_srt+232


==================== Asm code ====================
2018-03-16 16:07:30.028249016 UTC

.section .text
.align 8
_ccASM:
_ccASM:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccASQ
_ccASR:
	movl $1,%ebx
_scAgg:
	leaq block_ccASZ_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _ccASZ
_ccAT1:
	movq (%rbx),%rax
	jmp *(%rax)
_ccASQ:
	xorl %ebx,%ebx
	jmp _scAgg
	.size _ccASM, .-_ccASM


==================== Asm code ====================
2018-03-16 16:07:30.02886344 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccASM_info:
	.quad	_ccASM
	.quad	1
	.quad	12884901918
	.quad	ScAiT_srt+232


==================== Asm code ====================
2018-03-16 16:07:30.029613447 UTC

.section .text
.align 8
_ccASZ:
_ccASZ:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccATc
_ccATl:
	cmpq $1,%rax
	jg _ccATk
_ccATj:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go_entry
_ccATk:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccATc:
	testq %rax,%rax
	jg _ccATk
_ccAT9:
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.ByteOrder.$fEnumByteOrder_go1_entry
	.size _ccASZ, .-_ccASZ


==================== Asm code ====================
2018-03-16 16:07:30.030237922 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccASZ_info:
	.quad	_ccASZ
	.quad	65
	.quad	12884901918
	.quad	ScAiT_srt+232


==================== Asm code ====================
2018-03-16 16:07:30.062576308 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.063489926 UTC

.section .text
.align 8
sat_scAgI_entry:
_ccAUD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAUE
_ccAUF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scAgB_entry
_ccAUE:
	jmp *-16(%r13)
	.size sat_scAgI_entry, .-sat_scAgI_entry


==================== Asm code ====================
2018-03-16 16:07:30.064139986 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgI_info:
	.quad	sat_scAgI_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.064910967 UTC

.section .text
.align 8
sat_scAgG_entry:
_ccAUP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAUQ
_ccAUY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAUW
_ccAUO:
	cmpq $1,%rax
	jg _ccAUW
_ccAUX:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAUW:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAUQ:
	jmp *-16(%r13)
	.size sat_scAgG_entry, .-sat_scAgG_entry


==================== Asm code ====================
2018-03-16 16:07:30.065685384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgG_info:
	.quad	sat_scAgG_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.066457107 UTC

.section .text
.align 8
sat_scAgL_entry:
_ccAV9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAVa
_ccAVi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAVg
_ccAV8:
	cmpq $1,%rax
	jg _ccAVg
_ccAVh:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAVg:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAVa:
	jmp *-16(%r13)
	.size sat_scAgL_entry, .-sat_scAgL_entry


==================== Asm code ====================
2018-03-16 16:07:30.067143196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgL_info:
	.quad	sat_scAgL_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.068070395 UTC

.section .text
.align 8
go_dn_scAgB_entry:
_ccAVm:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAVq
_ccAVp:
	cmpq 15(%rbx),%r14
	jge _ccAVk
_ccAVl:
	leaq sat_scAgL_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAVq:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAVk:
	movq 7(%rbx),%rax
	leaq sat_scAgI_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAgG_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scAgB_entry, .-go_dn_scAgB_entry


==================== Asm code ====================
2018-03-16 16:07:30.068905133 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scAgB_info:
	.quad	go_dn_scAgB_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.069737518 UTC

.section .text
.align 8
sat_scAgM_entry:
_ccAVt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAVu
_ccAVv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAVx
_ccAVw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_dn_scAgB_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scAgB_entry
_ccAVx:
	movq $24,904(%r13)
_ccAVu:
	jmp *-16(%r13)
	.size sat_scAgM_entry, .-sat_scAgM_entry


==================== Asm code ====================
2018-03-16 16:07:30.070455168 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgM_info:
	.quad	sat_scAgM_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.071212806 UTC

.section .text
.align 8
sat_scAgy_entry:
_ccAVH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAVI
_ccAVQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAVO
_ccAVG:
	cmpq $1,%rax
	jg _ccAVO
_ccAVP:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAVO:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAVI:
	jmp *-16(%r13)
	.size sat_scAgy_entry, .-sat_scAgy_entry


==================== Asm code ====================
2018-03-16 16:07:30.071906 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgy_info:
	.quad	sat_scAgy_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.072680248 UTC

.section .text
.align 8
sat_scAgQ_entry:
_ccAW4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAW5
_ccAWd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAWb
_ccAW3:
	cmpq $1,%rax
	jg _ccAWb
_ccAWc:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAWb:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAW5:
	jmp *-16(%r13)
	.size sat_scAgQ_entry, .-sat_scAgQ_entry


==================== Asm code ====================
2018-03-16 16:07:30.073426081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgQ_info:
	.quad	sat_scAgQ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.074188652 UTC

.section .text
.align 8
sat_scAh4_entry:
_ccAWG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAWH
_ccAWI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scAgX_entry
_ccAWH:
	jmp *-16(%r13)
	.size sat_scAh4_entry, .-sat_scAh4_entry


==================== Asm code ====================
2018-03-16 16:07:30.074810515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAh4_info:
	.quad	sat_scAh4_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.075585298 UTC

.section .text
.align 8
sat_scAh2_entry:
_ccAWS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAWT
_ccAX1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAWZ
_ccAWR:
	cmpq $1,%rax
	jg _ccAWZ
_ccAX0:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAWZ:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAWT:
	jmp *-16(%r13)
	.size sat_scAh2_entry, .-sat_scAh2_entry


==================== Asm code ====================
2018-03-16 16:07:30.076308396 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAh2_info:
	.quad	sat_scAh2_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.077102844 UTC

.section .text
.align 8
sat_scAh7_entry:
_ccAXc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAXd
_ccAXl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAXj
_ccAXb:
	cmpq $1,%rax
	jg _ccAXj
_ccAXk:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAXj:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAXd:
	jmp *-16(%r13)
	.size sat_scAh7_entry, .-sat_scAh7_entry


==================== Asm code ====================
2018-03-16 16:07:30.077829083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAh7_info:
	.quad	sat_scAh7_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.078744681 UTC

.section .text
.align 8
go_up_scAgX_entry:
_ccAXp:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAXt
_ccAXs:
	cmpq 15(%rbx),%r14
	jle _ccAXn
_ccAXo:
	leaq sat_scAh7_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAXt:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAXn:
	movq 7(%rbx),%rax
	leaq sat_scAh4_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAh2_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scAgX_entry, .-go_up_scAgX_entry


==================== Asm code ====================
2018-03-16 16:07:30.079591536 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scAgX_info:
	.quad	go_up_scAgX_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.080389786 UTC

.section .text
.align 8
sat_scAh8_entry:
_ccAXw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAXx
_ccAXy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAXA
_ccAXz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_up_scAgX_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	xorl %ebx,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scAgX_entry
_ccAXA:
	movq $24,904(%r13)
_ccAXx:
	jmp *-16(%r13)
	.size sat_scAh8_entry, .-sat_scAh8_entry


==================== Asm code ====================
2018-03-16 16:07:30.081083728 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAh8_info:
	.quad	sat_scAh8_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.08200551 UTC

.section .text
.align 8
sat_scAgU_entry:
_ccAXK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAXL
_ccAXT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAXR
_ccAXJ:
	cmpq $1,%rax
	jg _ccAXR
_ccAXS:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAXR:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAXL:
	jmp *-16(%r13)
	.size sat_scAgU_entry, .-sat_scAgU_entry


==================== Asm code ====================
2018-03-16 16:07:30.082689002 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAgU_info:
	.quad	sat_scAgU_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.083500363 UTC

.section .text
.align 8
sat_scAhc_entry:
_ccAY7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAY8
_ccAYg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAYe
_ccAY6:
	cmpq $1,%rax
	jg _ccAYe
_ccAYf:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAYe:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAY8:
	jmp *-16(%r13)
	.size sat_scAhc_entry, .-sat_scAhc_entry


==================== Asm code ====================
2018-03-16 16:07:30.084232851 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhc_info:
	.quad	sat_scAhc_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.084955575 UTC

.section .text
.align 8
sat_scAhr_entry:
_ccAYN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAYO
_ccAYP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_dn_scAhk_entry
_ccAYO:
	jmp *-16(%r13)
	.size sat_scAhr_entry, .-sat_scAhr_entry


==================== Asm code ====================
2018-03-16 16:07:30.085618419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhr_info:
	.quad	sat_scAhr_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.086406779 UTC

.section .text
.align 8
sat_scAhp_entry:
_ccAYZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAZ0
_ccAZ8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAZ6
_ccAYY:
	cmpq $1,%rax
	jg _ccAZ6
_ccAZ7:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAZ6:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAZ0:
	jmp *-16(%r13)
	.size sat_scAhp_entry, .-sat_scAhp_entry


==================== Asm code ====================
2018-03-16 16:07:30.087112822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhp_info:
	.quad	sat_scAhp_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.087907252 UTC

.section .text
.align 8
sat_scAhu_entry:
_ccAZj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAZk
_ccAZs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAZq
_ccAZi:
	cmpq $1,%rax
	jg _ccAZq
_ccAZr:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAZq:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAZk:
	jmp *-16(%r13)
	.size sat_scAhu_entry, .-sat_scAhu_entry


==================== Asm code ====================
2018-03-16 16:07:30.088605473 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhu_info:
	.quad	sat_scAhu_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.090416753 UTC

.section .text
.align 8
go_dn_scAhk_entry:
_ccAZw:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccAZA
_ccAZz:
	cmpq 15(%rbx),%r14
	jge _ccAZu
_ccAZv:
	leaq sat_scAhu_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccAZA:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccAZu:
	movq 7(%rbx),%rax
	leaq sat_scAhr_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAhp_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_dn_scAhk_entry, .-go_dn_scAhk_entry


==================== Asm code ====================
2018-03-16 16:07:30.09124183 UTC

.section .data.rel.ro
.align 8
.align 1
go_dn_scAhk_info:
	.quad	go_dn_scAhk_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.091997236 UTC

.section .text
.align 8
sat_scAhv_entry:
_ccAZD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAZE
_ccAZF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccAZH
_ccAZG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_dn_scAhk_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_dn_scAhk_entry
_ccAZH:
	movq $24,904(%r13)
_ccAZE:
	jmp *-16(%r13)
	.size sat_scAhv_entry, .-sat_scAhv_entry


==================== Asm code ====================
2018-03-16 16:07:30.092707971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhv_info:
	.quad	sat_scAhv_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.093964031 UTC

.section .text
.align 8
sat_scAhh_entry:
_ccAZR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccAZS
_ccB00:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccAZY
_ccAZQ:
	cmpq $1,%rax
	jg _ccAZY
_ccAZZ:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccAZY:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccAZS:
	jmp *-16(%r13)
	.size sat_scAhh_entry, .-sat_scAhh_entry


==================== Asm code ====================
2018-03-16 16:07:30.0946655 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhh_info:
	.quad	sat_scAhh_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.095392098 UTC

.section .text
.align 8
sat_scAhz_entry:
_ccB0e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB0f
_ccB0n:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccB0l
_ccB0d:
	cmpq $1,%rax
	jg _ccB0l
_ccB0m:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB0l:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccB0f:
	jmp *-16(%r13)
	.size sat_scAhz_entry, .-sat_scAhz_entry


==================== Asm code ====================
2018-03-16 16:07:30.096061313 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhz_info:
	.quad	sat_scAhz_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.09678626 UTC

.section .text
.align 8
sat_scAhN_entry:
_ccB0Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB0R
_ccB0S:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 24(%rbx),%rax
	movq 32(%rbx),%r14
	addq (%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp go_up_scAhG_entry
_ccB0R:
	jmp *-16(%r13)
	.size sat_scAhN_entry, .-sat_scAhN_entry


==================== Asm code ====================
2018-03-16 16:07:30.097391714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhN_info:
	.quad	sat_scAhN_entry
	.quad	8589934593
	.quad	4294967311
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.098149424 UTC

.section .text
.align 8
sat_scAhL_entry:
_ccB12:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB13
_ccB1b:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccB19
_ccB11:
	cmpq $1,%rax
	jg _ccB19
_ccB1a:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB19:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccB13:
	jmp *-16(%r13)
	.size sat_scAhL_entry, .-sat_scAhL_entry


==================== Asm code ====================
2018-03-16 16:07:30.098806027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhL_info:
	.quad	sat_scAhL_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.099587844 UTC

.section .text
.align 8
sat_scAhQ_entry:
_ccB1m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB1n
_ccB1v:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccB1t
_ccB1l:
	cmpq $1,%rax
	jg _ccB1t
_ccB1u:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB1t:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccB1n:
	jmp *-16(%r13)
	.size sat_scAhQ_entry, .-sat_scAhQ_entry


==================== Asm code ====================
2018-03-16 16:07:30.100288646 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhQ_info:
	.quad	sat_scAhQ_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.101169058 UTC

.section .text
.align 8
go_up_scAhG_entry:
_ccB1z:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccB1D
_ccB1C:
	cmpq 15(%rbx),%r14
	jle _ccB1x
_ccB1y:
	leaq sat_scAhQ_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	leaq -54(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccB1D:
	movq $88,904(%r13)
	jmp *-8(%r13)
_ccB1x:
	movq 7(%rbx),%rax
	leaq sat_scAhN_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_scAhL_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size go_up_scAhG_entry, .-go_up_scAhG_entry


==================== Asm code ====================
2018-03-16 16:07:30.101988894 UTC

.section .data.rel.ro
.align 8
.align 1
go_up_scAhG_info:
	.quad	go_up_scAhG_entry
	.quad	8589934592
	.quad	4294967309
	.quad	4294967300
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.102833913 UTC

.section .text
.align 8
sat_scAhR_entry:
_ccB1G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB1H
_ccB1I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccB1K
_ccB1J:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%rcx
	subq 16(%rbx),%rcx
	leaq go_up_scAhG_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movl $1,%ebx
	subq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -15(%r12),%rbx
	addq $-16,%rbp
	jmp go_up_scAhG_entry
_ccB1K:
	movq $24,904(%r13)
_ccB1H:
	jmp *-16(%r13)
	.size sat_scAhR_entry, .-sat_scAhR_entry


==================== Asm code ====================
2018-03-16 16:07:30.103554467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhR_info:
	.quad	sat_scAhR_entry
	.quad	8589934592
	.quad	4294967316
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.104359368 UTC

.section .text
.align 8
sat_scAhD_entry:
_ccB1U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB1V
_ccB23:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccB21
_ccB1T:
	cmpq $1,%rax
	jg _ccB21
_ccB22:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB21:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccB1V:
	jmp *-16(%r13)
	.size sat_scAhD_entry, .-sat_scAhD_entry


==================== Asm code ====================
2018-03-16 16:07:30.105044197 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhD_info:
	.quad	sat_scAhD_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.106154533 UTC

.section .text
.align 8
sat_scAhV_entry:
_ccB2h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB2i
_ccB2q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jl _ccB2o
_ccB2g:
	cmpq $1,%rax
	jg _ccB2o
_ccB2p:
	shlq $3,%rax
	leaq GHC.ByteOrder.ByteOrder_closure_tbl(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB2o:
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.ByteOrder.$wlvl_entry
_ccB2i:
	jmp *-16(%r13)
	.size sat_scAhV_entry, .-sat_scAhV_entry


==================== Asm code ====================
2018-03-16 16:07:30.106880923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scAhV_info:
	.quad	sat_scAhV_entry
	.quad	4294967296
	.quad	4294967313
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.107602393 UTC

.section .text
.align 8
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry:
_ccB2y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccB2z
_ccB2A:
	leaq block_ccB2r_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ccB2r
_ccB2s:
	movq (%rbx),%rax
	jmp *(%rax)
_ccB2z:
	leaq GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry, .-GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 16:07:30.10829993 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info
.type GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info, @object
GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_info:
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_entry
	.quad	0
	.quad	2203318222862
	.quad	12884901911
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.109055491 UTC

.section .text
.align 8
_ccB2r:
_ccB2r:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccB2v
_ccB2w:
	movl $1,%ebx
_scAgp:
	leaq block_ccB2B_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _ccB2B
_ccB3p:
	movq (%rbx),%rax
	jmp *(%rax)
_ccB2v:
	xorl %ebx,%ebx
	jmp _scAgp
	.size _ccB2r, .-_ccB2r


==================== Asm code ====================
2018-03-16 16:07:30.10969415 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccB2r_info:
	.quad	_ccB2r
	.quad	2
	.quad	4294967326
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.110437277 UTC

.section .text
.align 8
_ccB2B:
_ccB2B:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _ccB3v
_ccB3z:
	movl $1,%ebx
_scAgr:
	leaq block_ccAU4_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ccAU4
_ccAU5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccB3v:
	xorl %ebx,%ebx
	jmp _scAgr
	.size _ccB2B, .-_ccB2B


==================== Asm code ====================
2018-03-16 16:07:30.111078972 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccB2B_info:
	.quad	_ccB2B
	.quad	66
	.quad	4294967326
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.112666531 UTC

.section .text
.align 8
_ccAU4:
_ccAU4:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _ccB2F
_ccB32:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccB35
_ccB34:
	cmpq %rax,%rcx
	jl _ccB3f
_ccB3o:
	cmpq $1,%rcx
	jle _ccB3i
_ccB3n:
	cmpq $1,%rax
	jg _ccB3m
_ccB3l:
	leaq sat_scAhV_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB3m:
	addq $-80,%r12
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB3i:
	leaq sat_scAhR_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	leaq sat_scAhD_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB3f:
	cmpq $1,%rcx
	jge _ccB38
_ccB3d:
	cmpq $1,%rax
	jl _ccB3m
_ccB3b:
	leaq sat_scAhz_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB38:
	leaq sat_scAhv_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	leaq sat_scAhh_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB35:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ccB2F:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccB35
_ccB2H:
	cmpq %rax,%rcx
	jl _ccB2S
_ccB31:
	cmpq $0,%rcx
	jle _ccB2V
_ccB30:
	cmpq $0,%rax
	jg _ccB3m
_ccB2Y:
	leaq sat_scAhc_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB2V:
	leaq sat_scAh8_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	leaq sat_scAgU_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB2S:
	cmpq $0,%rcx
	jge _ccB2L
_ccB2Q:
	cmpq $0,%rax
	jl _ccB3m
_ccB2O:
	leaq sat_scAgQ_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -72(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq -46(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccB2L:
	leaq sat_scAgM_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	leaq sat_scAgy_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccAU4, .-_ccAU4


==================== Asm code ====================
2018-03-16 16:07:30.114271094 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccAU4_info:
	.quad	_ccAU4
	.quad	194
	.quad	4294967326
	.quad	ScAiT_srt+184


==================== Asm code ====================
2018-03-16 16:07:30.11620069 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$fEnumByteOrder_closure
.type GHC.ByteOrder.$fEnumByteOrder_closure, @object
GHC.ByteOrder.$fEnumByteOrder_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cfromEnum_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure+1
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThen_closure+2
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure+2
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:30.118288075 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule3_closure
.type GHC.ByteOrder.$trModule3_closure, @object
GHC.ByteOrder.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:30.119977545 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule1_closure
.type GHC.ByteOrder.$trModule1_closure, @object
GHC.ByteOrder.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:30.121755064 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$trModule_closure
.type GHC.ByteOrder.$trModule_closure, @object
GHC.ByteOrder.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.ByteOrder.$trModule3_closure+1
	.quad	GHC.ByteOrder.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.123992297 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tcByteOrder2_bytes
.type GHC.ByteOrder.$tcByteOrder2_bytes, @object
GHC.ByteOrder.$tcByteOrder2_bytes:
	.asciz "ByteOrder"


==================== Asm code ====================
2018-03-16 16:07:30.125996185 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tcByteOrder1_closure
.type GHC.ByteOrder.$tcByteOrder1_closure, @object
GHC.ByteOrder.$tcByteOrder1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tcByteOrder2_bytes


==================== Asm code ====================
2018-03-16 16:07:30.127689061 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tcByteOrder_closure
.type GHC.ByteOrder.$tcByteOrder_closure, @object
GHC.ByteOrder.$tcByteOrder_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tcByteOrder1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-1635693389259889532
	.quad	-1173738738462527525
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.129421653 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian1_closure
.type GHC.ByteOrder.$tc'BigEndian1_closure, @object
GHC.ByteOrder.$tc'BigEndian1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.ByteOrder.$tcByteOrder_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.131047917 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tc'BigEndian3_bytes
.type GHC.ByteOrder.$tc'BigEndian3_bytes, @object
GHC.ByteOrder.$tc'BigEndian3_bytes:
	.asciz "'BigEndian"


==================== Asm code ====================
2018-03-16 16:07:30.132773444 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian2_closure
.type GHC.ByteOrder.$tc'BigEndian2_closure, @object
GHC.ByteOrder.$tc'BigEndian2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tc'BigEndian3_bytes


==================== Asm code ====================
2018-03-16 16:07:30.134565787 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'BigEndian_closure
.type GHC.ByteOrder.$tc'BigEndian_closure, @object
GHC.ByteOrder.$tc'BigEndian_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian2_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian1_closure+1
	.quad	2645192688778293591
	.quad	7455668807059762078
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.136180656 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian2_bytes
.type GHC.ByteOrder.$tc'LittleEndian2_bytes, @object
GHC.ByteOrder.$tc'LittleEndian2_bytes:
	.asciz "'LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:30.137850097 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian1_closure
.type GHC.ByteOrder.$tc'LittleEndian1_closure, @object
GHC.ByteOrder.$tc'LittleEndian1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.ByteOrder.$tc'LittleEndian2_bytes


==================== Asm code ====================
2018-03-16 16:07:30.139719862 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.$tc'LittleEndian_closure
.type GHC.ByteOrder.$tc'LittleEndian_closure, @object
GHC.ByteOrder.$tc'LittleEndian_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.ByteOrder.$trModule_closure+1
	.quad	GHC.ByteOrder.$tc'LittleEndian1_closure+1
	.quad	GHC.ByteOrder.$tc'BigEndian1_closure+1
	.quad	8702700204875460152
	.quad	-8109065057340253469
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:30.141710794 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.BigEndian_closure
.type GHC.ByteOrder.BigEndian_closure, @object
GHC.ByteOrder.BigEndian_closure:
	.quad	GHC.ByteOrder.BigEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:30.143320691 UTC

.section .data
.align 8
.align 1
.globl GHC.ByteOrder.LittleEndian_closure
.type GHC.ByteOrder.LittleEndian_closure, @object
GHC.ByteOrder.LittleEndian_closure:
	.quad	GHC.ByteOrder.LittleEndian_con_info


==================== Asm code ====================
2018-03-16 16:07:30.144955109 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.ByteOrder_closure_tbl
.type GHC.ByteOrder.ByteOrder_closure_tbl, @object
GHC.ByteOrder.ByteOrder_closure_tbl:
	.quad	GHC.ByteOrder.BigEndian_closure+1
	.quad	GHC.ByteOrder.LittleEndian_closure+2


==================== Asm code ====================
2018-03-16 16:07:30.147088085 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icB9l_str:
	.asciz "base:GHC.ByteOrder.BigEndian"


==================== Asm code ====================
2018-03-16 16:07:30.14777669 UTC

.section .text
.align 8
.globl GHC.ByteOrder.BigEndian_con_entry
.type GHC.ByteOrder.BigEndian_con_entry, @object
GHC.ByteOrder.BigEndian_con_entry:
_ccB9k:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.BigEndian_con_entry, .-GHC.ByteOrder.BigEndian_con_entry


==================== Asm code ====================
2018-03-16 16:07:30.148790053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.BigEndian_con_info
.type GHC.ByteOrder.BigEndian_con_info, @object
GHC.ByteOrder.BigEndian_con_info:
	.quad	GHC.ByteOrder.BigEndian_con_entry
	.quad	4294967296
	.quad	3
	.quad	icB9l_str


==================== Asm code ====================
2018-03-16 16:07:30.150801633 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icB9s_str:
	.asciz "base:GHC.ByteOrder.LittleEndian"


==================== Asm code ====================
2018-03-16 16:07:30.151410526 UTC

.section .text
.align 8
.globl GHC.ByteOrder.LittleEndian_con_entry
.type GHC.ByteOrder.LittleEndian_con_entry, @object
GHC.ByteOrder.LittleEndian_con_entry:
_ccB9r:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.ByteOrder.LittleEndian_con_entry, .-GHC.ByteOrder.LittleEndian_con_entry


==================== Asm code ====================
2018-03-16 16:07:30.15197503 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.ByteOrder.LittleEndian_con_info
.type GHC.ByteOrder.LittleEndian_con_info, @object
GHC.ByteOrder.LittleEndian_con_info:
	.quad	GHC.ByteOrder.LittleEndian_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	icB9s_str


==================== Asm code ====================
2018-03-16 16:07:30.154584194 UTC

.section .data.rel.ro
.align 8
.align 1
ScAiT_srt:
	.quad	GHC.ByteOrder.$fReadByteOrder6_closure
	.quad	GHC.ByteOrder.$fReadByteOrder10_closure
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshowsPrec_closure
	.quad	GHC.ByteOrder.$fShowByteOrder_$cshow_closure
	.quad	GHC.ByteOrder.$fShowByteOrder1_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_sps_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.ByteOrder.$fReadByteOrder2_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.ByteOrder.$fReadByteOrder1_closure
	.quad	GHC.ByteOrder.$fReadByteOrder_$creadListPrec_closure
	.quad	GHC.ByteOrder.$fReadByteOrder12_closure
	.quad	GHC.Err.error_closure
	.quad	lvl12_rcykz_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cpred_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder3_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$csucc_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder4_closure
	.quad	lvl17_rcykE_closure
	.quad	lvl18_rcykF_closure
	.quad	lvl19_rcykG_closure
	.quad	GHC.ByteOrder.$wlvl_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$ctoEnum_closure
	.quad	GHC.ByteOrder.$w$ctoEnum_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFrom_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder1_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder2_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_go1_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_go_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromTo_closure
	.quad	GHC.ByteOrder.$fEnumByteOrder_$cenumFromThenTo_closure

