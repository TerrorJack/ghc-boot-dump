
==================== Asm code ====================
2018-03-16 15:59:46.818691429 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Clock.$trModule4_bytes
.type GHC.Clock.$trModule4_bytes, @object
GHC.Clock.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:46.821437769 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule3_closure
.type GHC.Clock.$trModule3_closure, @object
GHC.Clock.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Clock.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:46.823933606 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Clock.$trModule2_bytes
.type GHC.Clock.$trModule2_bytes, @object
GHC.Clock.$trModule2_bytes:
	.asciz "GHC.Clock"


==================== Asm code ====================
2018-03-16 15:59:46.826560105 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule1_closure
.type GHC.Clock.$trModule1_closure, @object
GHC.Clock.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Clock.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:46.82919582 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule_closure
.type GHC.Clock.$trModule_closure, @object
GHC.Clock.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Clock.$trModule3_closure+1
	.quad	GHC.Clock.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:46.834417116 UTC

.section .data
.align 8
.align 1
getMonotonicTimeNSec1_r4RZ9_closure:
	.quad	getMonotonicTimeNSec1_r4RZ9_info


==================== Asm code ====================
2018-03-16 15:59:46.835759802 UTC

.section .text
.align 8
getMonotonicTimeNSec1_r4RZ9_entry:
_c4S0Z:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4S13
_c4S12:
	subq $8,%rsp
	xorl %eax,%eax
	call getMonotonicNSec
	addq $8,%rsp
	movq $GHC.Word.W64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4S13:
	movq $16,904(%r13)
	movl $getMonotonicTimeNSec1_r4RZ9_closure,%ebx
	jmp *-8(%r13)
	.size getMonotonicTimeNSec1_r4RZ9_entry, .-getMonotonicTimeNSec1_r4RZ9_entry


==================== Asm code ====================
2018-03-16 15:59:46.836761392 UTC

.section .data.rel.ro
.align 8
.align 1
getMonotonicTimeNSec1_r4RZ9_info:
	.quad	getMonotonicTimeNSec1_r4RZ9_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.839983141 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTimeNSec_closure
.type GHC.Clock.getMonotonicTimeNSec_closure, @object
GHC.Clock.getMonotonicTimeNSec_closure:
	.quad	GHC.Clock.getMonotonicTimeNSec_info


==================== Asm code ====================
2018-03-16 15:59:46.841048999 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTimeNSec_entry
.type GHC.Clock.getMonotonicTimeNSec_entry, @object
GHC.Clock.getMonotonicTimeNSec_entry:
_c4S1d:
	jmp getMonotonicTimeNSec1_r4RZ9_entry
	.size GHC.Clock.getMonotonicTimeNSec_entry, .-GHC.Clock.getMonotonicTimeNSec_entry


==================== Asm code ====================
2018-03-16 15:59:46.84204307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTimeNSec_info
.type GHC.Clock.getMonotonicTimeNSec_info, @object
GHC.Clock.getMonotonicTimeNSec_info:
	.quad	GHC.Clock.getMonotonicTimeNSec_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.84654129 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime1_closure
.type GHC.Clock.getMonotonicTime1_closure, @object
GHC.Clock.getMonotonicTime1_closure:
	.quad	GHC.Clock.getMonotonicTime1_info


==================== Asm code ====================
2018-03-16 15:59:46.847956922 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTime1_entry
.type GHC.Clock.getMonotonicTime1_entry, @object
GHC.Clock.getMonotonicTime1_entry:
_c4S1s:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4S1B
_c4S1A:
	subq $8,%rsp
	xorl %eax,%eax
	call getMonotonicNSec
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	call hs_word2float64
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	divsd _n4S1E(%rip),%xmm0
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4S1B:
	movq $16,904(%r13)
	movl $GHC.Clock.getMonotonicTime1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Clock.getMonotonicTime1_entry, .-GHC.Clock.getMonotonicTime1_entry
.section .rodata
.align 8
.align 8
_n4S1E:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	101
	.byte	205
	.byte	205
	.byte	65


==================== Asm code ====================
2018-03-16 15:59:46.849068967 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime1_info
.type GHC.Clock.getMonotonicTime1_info, @object
GHC.Clock.getMonotonicTime1_info:
	.quad	GHC.Clock.getMonotonicTime1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.85251799 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime_closure
.type GHC.Clock.getMonotonicTime_closure, @object
GHC.Clock.getMonotonicTime_closure:
	.quad	GHC.Clock.getMonotonicTime_info


==================== Asm code ====================
2018-03-16 15:59:46.854595375 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTime_entry
.type GHC.Clock.getMonotonicTime_entry, @object
GHC.Clock.getMonotonicTime_entry:
_c4S1O:
	jmp GHC.Clock.getMonotonicTime1_entry
	.size GHC.Clock.getMonotonicTime_entry, .-GHC.Clock.getMonotonicTime_entry


==================== Asm code ====================
2018-03-16 15:59:46.85548693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime_info
.type GHC.Clock.getMonotonicTime_info, @object
GHC.Clock.getMonotonicTime_info:
	.quad	GHC.Clock.getMonotonicTime_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.858139487 UTC

.section .data.rel.ro
.align 8
.align 1
S4S06_srt:


==================== Asm code ====================
2018-03-16 15:59:46.906485524 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Clock.$trModule4_bytes
.type GHC.Clock.$trModule4_bytes, @object
GHC.Clock.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:46.909374221 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule3_closure
.type GHC.Clock.$trModule3_closure, @object
GHC.Clock.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Clock.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:46.912699484 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Clock.$trModule2_bytes
.type GHC.Clock.$trModule2_bytes, @object
GHC.Clock.$trModule2_bytes:
	.asciz "GHC.Clock"


==================== Asm code ====================
2018-03-16 15:59:46.915338109 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule1_closure
.type GHC.Clock.$trModule1_closure, @object
GHC.Clock.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Clock.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:46.918097259 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.$trModule_closure
.type GHC.Clock.$trModule_closure, @object
GHC.Clock.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Clock.$trModule3_closure+1
	.quad	GHC.Clock.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:46.922104186 UTC

.section .data
.align 8
.align 1
getMonotonicTimeNSec1_r4RZ9_closure:
	.quad	getMonotonicTimeNSec1_r4RZ9_info


==================== Asm code ====================
2018-03-16 15:59:46.923322097 UTC

.section .text
.align 8
getMonotonicTimeNSec1_r4RZ9_entry:
_c4S2l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4S2p
_c4S2o:
	subq $8,%rsp
	xorl %eax,%eax
	call getMonotonicNSec@plt
	addq $8,%rsp
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4S2p:
	movq $16,904(%r13)
	leaq getMonotonicTimeNSec1_r4RZ9_closure(%rip),%rbx
	jmp *-8(%r13)
	.size getMonotonicTimeNSec1_r4RZ9_entry, .-getMonotonicTimeNSec1_r4RZ9_entry


==================== Asm code ====================
2018-03-16 15:59:46.924307064 UTC

.section .data.rel.ro
.align 8
.align 1
getMonotonicTimeNSec1_r4RZ9_info:
	.quad	getMonotonicTimeNSec1_r4RZ9_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.927549822 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTimeNSec_closure
.type GHC.Clock.getMonotonicTimeNSec_closure, @object
GHC.Clock.getMonotonicTimeNSec_closure:
	.quad	GHC.Clock.getMonotonicTimeNSec_info


==================== Asm code ====================
2018-03-16 15:59:46.928610959 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTimeNSec_entry
.type GHC.Clock.getMonotonicTimeNSec_entry, @object
GHC.Clock.getMonotonicTimeNSec_entry:
_c4S2A:
	jmp getMonotonicTimeNSec1_r4RZ9_entry
	.size GHC.Clock.getMonotonicTimeNSec_entry, .-GHC.Clock.getMonotonicTimeNSec_entry


==================== Asm code ====================
2018-03-16 15:59:46.929526571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTimeNSec_info
.type GHC.Clock.getMonotonicTimeNSec_info, @object
GHC.Clock.getMonotonicTimeNSec_info:
	.quad	GHC.Clock.getMonotonicTimeNSec_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.933772631 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime1_closure
.type GHC.Clock.getMonotonicTime1_closure, @object
GHC.Clock.getMonotonicTime1_closure:
	.quad	GHC.Clock.getMonotonicTime1_info


==================== Asm code ====================
2018-03-16 15:59:46.935202044 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTime1_entry
.type GHC.Clock.getMonotonicTime1_entry, @object
GHC.Clock.getMonotonicTime1_entry:
_c4S2P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4S2Y
_c4S2X:
	subq $8,%rsp
	xorl %eax,%eax
	call getMonotonicNSec@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	call hs_word2float64@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	divsd _n4S32(%rip),%xmm0
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c4S2Y:
	movq $16,904(%r13)
	leaq GHC.Clock.getMonotonicTime1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Clock.getMonotonicTime1_entry, .-GHC.Clock.getMonotonicTime1_entry
.section .rodata
.align 8
.align 8
_n4S32:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	101
	.byte	205
	.byte	205
	.byte	65


==================== Asm code ====================
2018-03-16 15:59:46.936416487 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime1_info
.type GHC.Clock.getMonotonicTime1_info, @object
GHC.Clock.getMonotonicTime1_info:
	.quad	GHC.Clock.getMonotonicTime1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.939732879 UTC

.section .data
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime_closure
.type GHC.Clock.getMonotonicTime_closure, @object
GHC.Clock.getMonotonicTime_closure:
	.quad	GHC.Clock.getMonotonicTime_info


==================== Asm code ====================
2018-03-16 15:59:46.940729844 UTC

.section .text
.align 8
.globl GHC.Clock.getMonotonicTime_entry
.type GHC.Clock.getMonotonicTime_entry, @object
GHC.Clock.getMonotonicTime_entry:
_c4S3c:
	jmp GHC.Clock.getMonotonicTime1_entry
	.size GHC.Clock.getMonotonicTime_entry, .-GHC.Clock.getMonotonicTime_entry


==================== Asm code ====================
2018-03-16 15:59:46.941606696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Clock.getMonotonicTime_info
.type GHC.Clock.getMonotonicTime_info, @object
GHC.Clock.getMonotonicTime_info:
	.quad	GHC.Clock.getMonotonicTime_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:59:46.944077969 UTC

.section .data.rel.ro
.align 8
.align 1
S4S3j_srt:

