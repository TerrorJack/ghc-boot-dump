
==================== Pre unarise: ====================
2018-03-16 15:54:38.952913634 UTC

GHC.Stack.Types.$fEqSrcLoc_$c==
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [ds_s2aa ds1_s2ab]
        case ds_s2aa of {
          GHC.Stack.Types.SrcLoc a1_s2ad [Occ=Once]
                                 a2_s2ae [Occ=Once]
                                 a3_s2af [Occ=Once]
                                 a4_s2ag [Occ=Once!]
                                 a5_s2ah [Occ=Once!]
                                 a6_s2ai [Occ=Once!]
                                 a7_s2aj [Occ=Once] ->
              case ds1_s2ab of {
                GHC.Stack.Types.SrcLoc b1_s2al [Occ=Once]
                                       b2_s2am [Occ=Once]
                                       b3_s2an [Occ=Once]
                                       b4_s2ao [Occ=Once!]
                                       b5_s2ap [Occ=Once!]
                                       b6_s2aq [Occ=Once!]
                                       b7_s2ar [Occ=Once] ->
                    case GHC.Classes.$fEqModule_$s$c== a1_s2ad b1_s2al of {
                      GHC.Types.False -> GHC.Types.False [];
                      GHC.Types.True ->
                          case GHC.Classes.$fEqModule_$s$c== a2_s2ae b2_s2am of {
                            GHC.Types.False -> GHC.Types.False [];
                            GHC.Types.True ->
                                case GHC.Classes.$fEqModule_$s$c== a3_s2af b3_s2an of {
                                  GHC.Types.False -> GHC.Types.False [];
                                  GHC.Types.True ->
                                      case a4_s2ag of {
                                        GHC.Types.I# x_s2aw [Occ=Once] ->
                                            case b4_s2ao of {
                                              GHC.Types.I# y_s2ay [Occ=Once] ->
                                                  case ==# [x_s2aw y_s2ay] of {
                                                    __DEFAULT -> GHC.Types.False [];
                                                    1# ->
                                                        case a5_s2ah of {
                                                          GHC.Types.I# x1_s2aB [Occ=Once] ->
                                                              case b5_s2ap of {
                                                                GHC.Types.I# y1_s2aD [Occ=Once] ->
                                                                    case ==# [x1_s2aB y1_s2aD] of {
                                                                      __DEFAULT ->
                                                                          GHC.Types.False [];
                                                                      1# ->
                                                                          case a6_s2ai of {
                                                                            GHC.Types.I# x2_s2aG [Occ=Once] ->
                                                                                case b6_s2aq of {
                                                                                  GHC.Types.I# y2_s2aI [Occ=Once] ->
                                                                                      case
                                                                                          ==# [x2_s2aG
                                                                                               y2_s2aI]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Types.False [];
                                                                                        1# ->
                                                                                            GHC.Classes.eqInt
                                                                                                a7_s2aj
                                                                                                b7_s2ar;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Stack.Types.$fEqSrcLoc_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [eta_s2aK eta1_s2aL]
        case GHC.Stack.Types.$fEqSrcLoc_$c== eta_s2aK eta1_s2aL of {
          GHC.Types.False -> GHC.Types.True [];
          GHC.Types.True -> GHC.Types.False [];
        };

GHC.Stack.Types.$fEqSrcLoc [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Stack.Types.SrcLoc
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Stack.Types.$fEqSrcLoc_$c==
                                     GHC.Stack.Types.$fEqSrcLoc_$c/=];

GHC.Stack.Types.srcLocEndCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s2aN]
        case ds_s2aN of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds7_s2aV [Occ=Once] ->
              ds7_s2aV;
        };

GHC.Stack.Types.srcLocEndLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),1*U(A,A,A,A,A,1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2aW]
        case ds_s2aW of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds6_s2b3 [Occ=Once]
                                 _ [Occ=Dead] ->
              ds6_s2b3;
        };

GHC.Stack.Types.srcLocStartCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),1*U(A,A,A,A,1*U(U),A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2b5]
        case ds_s2b5 of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds5_s2bb [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds5_s2bb;
        };

GHC.Stack.Types.srcLocStartLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),1*U(A,A,A,1*U(U),A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2be]
        case ds_s2be of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds4_s2bj [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds4_s2bj;
        };

GHC.Stack.Types.srcLocFile
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bn]
        case ds_s2bn of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds3_s2br [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds3_s2br;
        };

GHC.Stack.Types.srcLocModule
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bw]
        case ds_s2bw of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 ds2_s2bz [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds2_s2bz;
        };

GHC.Stack.Types.srcLocPackage
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bF]
        case ds_s2bF of {
          GHC.Stack.Types.SrcLoc ds1_s2bH [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds1_s2bH;
        };

GHC.Stack.Types.getCallStack [Occ=LoopBreaker]
  :: GHC.Stack.Types.CallStack
     -> [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [stk_s2bO]
        case stk_s2bO of {
          GHC.Stack.Types.EmptyCallStack -> [] [];
          GHC.Stack.Types.PushCallStack fn_s2bQ [Occ=Once]
                                        loc_s2bR [Occ=Once]
                                        stk'_s2bS [Occ=Once] ->
              let {
                sat_s2bU [Occ=Once] :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
                [LclId] =
                    [stk'_s2bS] \u [] GHC.Stack.Types.getCallStack stk'_s2bS; } in
              let {
                sat_s2bT [Occ=Once] :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                [LclId] =
                    CCCS (,)! [fn_s2bQ loc_s2bR];
              } in  : [sat_s2bT sat_s2bU];
          GHC.Stack.Types.FreezeCallStack stk'_s2bV [Occ=Once] ->
              GHC.Stack.Types.getCallStack stk'_s2bV;
        };

GHC.Stack.Types.fromCallSiteList [Occ=LoopBreaker]
  :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
     -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s2bW]
        case ds_s2bW of {
          [] -> GHC.Stack.Types.EmptyCallStack [];
          : ds1_s2bY [Occ=Once!] cs_s2bZ [Occ=Once] ->
              case ds1_s2bY of {
                (,) fn_s2c1 [Occ=Once] loc_s2c2 [Occ=Once] ->
                    let {
                      sat_s2c3 [Occ=Once] :: GHC.Stack.Types.CallStack
                      [LclId] =
                          [cs_s2bZ] \u [] GHC.Stack.Types.fromCallSiteList cs_s2bZ;
                    } in  GHC.Stack.Types.PushCallStack [fn_s2c1 loc_s2c2 sat_s2c3];
              };
        };

GHC.Stack.Types.pushCallStack [InlPrag=INLINE (sat-args=2)]
  :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
     -> GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s2c4 stk_s2c5]
        case ds_s2c4 of {
          (,) fn_s2c7 [Occ=Once] loc_s2c8 [Occ=Once] ->
              case stk_s2c5 of wild1_s2c9 {
                __DEFAULT ->
                    GHC.Stack.Types.PushCallStack [fn_s2c7 loc_s2c8 wild1_s2c9];
                GHC.Stack.Types.FreezeCallStack _ [Occ=Dead] -> wild1_s2c9;
              };
        };

GHC.Stack.Types.emptyCallStack [InlPrag=INLINE (sat-args=0)]
  :: GHC.Stack.Types.CallStack
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.freezeCallStack [InlPrag=INLINE (sat-args=1)]
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m3, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Stack.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule4];

GHC.Stack.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Stack.Types"#;

GHC.Stack.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule2];

GHC.Stack.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Stack.Types.$trModule3
                                     GHC.Stack.Types.$trModule1];

$krep_r29X :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r29Y :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep2_r29Z :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r29Y GHC.Types.[]];

$krep3_r2a0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep2_r29Z];

GHC.Stack.Types.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SrcLoc"#;

GHC.Stack.Types.$tcSrcLoc1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcSrcLoc2];

GHC.Stack.Types.$tcSrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11659135446504247116##
                                    7996606469851030013##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcSrcLoc1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r2a1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcSrcLoc
                                              GHC.Types.[]];

$krep5_r2a2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep4_r2a1];

$krep6_r2a3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep5_r2a2];

$krep7_r2a4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep6_r2a3];

$krep8_r2a5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep7_r2a4];

$krep9_r2a6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep8_r2a5];

$krep10_r2a7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep9_r2a6];

GHC.Stack.Types.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep10_r2a7];

GHC.Stack.Types.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SrcLoc"#;

GHC.Stack.Types.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'SrcLoc3];

GHC.Stack.Types.$tc'SrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13956426263269302848##
                                    15330088913444129695##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'SrcLoc2
                                    0#
                                    GHC.Stack.Types.$tc'SrcLoc1];

GHC.Stack.Types.$tcCallStack2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CallStack"#;

GHC.Stack.Types.$tcCallStack1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcCallStack2];

GHC.Stack.Types.$tcCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9079156173149315555##
                                    7592677015683705484##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcCallStack1
                                    0#
                                    GHC.Types.krep$*];

GHC.Stack.Types.$tc'EmptyCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcCallStack
                                              GHC.Types.[]];

GHC.Stack.Types.$tc'EmptyCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EmptyCallStack"#;

GHC.Stack.Types.$tc'EmptyCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'EmptyCallStack3];

GHC.Stack.Types.$tc'EmptyCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4745696424279029534##
                                    621383300069717314##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'EmptyCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Stack.Types.$tc'EmptyCallStack1
                                         GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FreezeCallStack"#;

GHC.Stack.Types.$tc'FreezeCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'FreezeCallStack3];

GHC.Stack.Types.$tc'FreezeCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13172881767820002692##
                                    8012125741085098641##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'FreezeCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'FreezeCallStack1];

$krep11_r2a8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r2a1
                                         GHC.Stack.Types.$tc'FreezeCallStack1];

GHC.Stack.Types.$tc'PushCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep11_r2a8];

GHC.Stack.Types.$tc'PushCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PushCallStack"#;

GHC.Stack.Types.$tc'PushCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'PushCallStack3];

GHC.Stack.Types.$tc'PushCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11257300383724147409##
                                    9589391422293138004##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'PushCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'PushCallStack1];

GHC.Stack.Types.EmptyCallStack :: GHC.Stack.Types.CallStack
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.PushCallStack
  :: [GHC.Types.Char]
     -> GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.CallStack
     -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.PushCallStack [eta_B3 eta_B2 eta_B1];

GHC.Stack.Types.FreezeCallStack
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.SrcLoc
  :: [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Stack.Types.SrcLoc
[GblId[DataCon],
 Arity=7,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.SrcLoc [eta_B7
                                eta_B6
                                eta_B5
                                eta_B4
                                eta_B3
                                eta_B2
                                eta_B1];


==================== STG syntax: ====================
2018-03-16 15:54:38.961634534 UTC

GHC.Stack.Types.$fEqSrcLoc_$c==
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [ds_s2aa ds1_s2ab]
        case ds_s2aa of {
          GHC.Stack.Types.SrcLoc a1_s2ad [Occ=Once]
                                 a2_s2ae [Occ=Once]
                                 a3_s2af [Occ=Once]
                                 a4_s2ag [Occ=Once!]
                                 a5_s2ah [Occ=Once!]
                                 a6_s2ai [Occ=Once!]
                                 a7_s2aj [Occ=Once] ->
              case ds1_s2ab of {
                GHC.Stack.Types.SrcLoc b1_s2al [Occ=Once]
                                       b2_s2am [Occ=Once]
                                       b3_s2an [Occ=Once]
                                       b4_s2ao [Occ=Once!]
                                       b5_s2ap [Occ=Once!]
                                       b6_s2aq [Occ=Once!]
                                       b7_s2ar [Occ=Once] ->
                    case GHC.Classes.$fEqModule_$s$c== a1_s2ad b1_s2al of {
                      GHC.Types.False -> GHC.Types.False [];
                      GHC.Types.True ->
                          case GHC.Classes.$fEqModule_$s$c== a2_s2ae b2_s2am of {
                            GHC.Types.False -> GHC.Types.False [];
                            GHC.Types.True ->
                                case GHC.Classes.$fEqModule_$s$c== a3_s2af b3_s2an of {
                                  GHC.Types.False -> GHC.Types.False [];
                                  GHC.Types.True ->
                                      case a4_s2ag of {
                                        GHC.Types.I# x_s2aw [Occ=Once] ->
                                            case b4_s2ao of {
                                              GHC.Types.I# y_s2ay [Occ=Once] ->
                                                  case ==# [x_s2aw y_s2ay] of {
                                                    __DEFAULT -> GHC.Types.False [];
                                                    1# ->
                                                        case a5_s2ah of {
                                                          GHC.Types.I# x1_s2aB [Occ=Once] ->
                                                              case b5_s2ap of {
                                                                GHC.Types.I# y1_s2aD [Occ=Once] ->
                                                                    case ==# [x1_s2aB y1_s2aD] of {
                                                                      __DEFAULT ->
                                                                          GHC.Types.False [];
                                                                      1# ->
                                                                          case a6_s2ai of {
                                                                            GHC.Types.I# x2_s2aG [Occ=Once] ->
                                                                                case b6_s2aq of {
                                                                                  GHC.Types.I# y2_s2aI [Occ=Once] ->
                                                                                      case
                                                                                          ==# [x2_s2aG
                                                                                               y2_s2aI]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Types.False [];
                                                                                        1# ->
                                                                                            GHC.Classes.eqInt
                                                                                                a7_s2aj
                                                                                                b7_s2ar;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Stack.Types.$fEqSrcLoc_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [eta_s2aK eta1_s2aL]
        case GHC.Stack.Types.$fEqSrcLoc_$c== eta_s2aK eta1_s2aL of {
          GHC.Types.False -> GHC.Types.True [];
          GHC.Types.True -> GHC.Types.False [];
        };

GHC.Stack.Types.$fEqSrcLoc [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Stack.Types.SrcLoc
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Stack.Types.$fEqSrcLoc_$c==
                                     GHC.Stack.Types.$fEqSrcLoc_$c/=];

GHC.Stack.Types.srcLocEndCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s2aN]
        case ds_s2aN of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds7_s2aV [Occ=Once] ->
              ds7_s2aV;
        };

GHC.Stack.Types.srcLocEndLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),1*U(A,A,A,A,A,1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2aW]
        case ds_s2aW of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds6_s2b3 [Occ=Once]
                                 _ [Occ=Dead] ->
              ds6_s2b3;
        };

GHC.Stack.Types.srcLocStartCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),1*U(A,A,A,A,1*U(U),A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2b5]
        case ds_s2b5 of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds5_s2bb [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds5_s2bb;
        };

GHC.Stack.Types.srcLocStartLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),1*U(A,A,A,1*U(U),A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2be]
        case ds_s2be of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds4_s2bj [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds4_s2bj;
        };

GHC.Stack.Types.srcLocFile
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bn]
        case ds_s2bn of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds3_s2br [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds3_s2br;
        };

GHC.Stack.Types.srcLocModule
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bw]
        case ds_s2bw of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 ds2_s2bz [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds2_s2bz;
        };

GHC.Stack.Types.srcLocPackage
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2bF]
        case ds_s2bF of {
          GHC.Stack.Types.SrcLoc ds1_s2bH [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds1_s2bH;
        };

GHC.Stack.Types.getCallStack [Occ=LoopBreaker]
  :: GHC.Stack.Types.CallStack
     -> [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [stk_s2bO]
        case stk_s2bO of {
          GHC.Stack.Types.EmptyCallStack -> [] [];
          GHC.Stack.Types.PushCallStack fn_s2bQ [Occ=Once]
                                        loc_s2bR [Occ=Once]
                                        stk'_s2bS [Occ=Once] ->
              let {
                sat_s2bU [Occ=Once] :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
                [LclId] =
                    [stk'_s2bS] \u [] GHC.Stack.Types.getCallStack stk'_s2bS; } in
              let {
                sat_s2bT [Occ=Once] :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                [LclId] =
                    CCCS (,)! [fn_s2bQ loc_s2bR];
              } in  : [sat_s2bT sat_s2bU];
          GHC.Stack.Types.FreezeCallStack stk'_s2bV [Occ=Once] ->
              GHC.Stack.Types.getCallStack stk'_s2bV;
        };

GHC.Stack.Types.fromCallSiteList [Occ=LoopBreaker]
  :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
     -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s2bW]
        case ds_s2bW of {
          [] -> GHC.Stack.Types.EmptyCallStack [];
          : ds1_s2bY [Occ=Once!] cs_s2bZ [Occ=Once] ->
              case ds1_s2bY of {
                (,) fn_s2c1 [Occ=Once] loc_s2c2 [Occ=Once] ->
                    let {
                      sat_s2c3 [Occ=Once] :: GHC.Stack.Types.CallStack
                      [LclId] =
                          [cs_s2bZ] \u [] GHC.Stack.Types.fromCallSiteList cs_s2bZ;
                    } in  GHC.Stack.Types.PushCallStack [fn_s2c1 loc_s2c2 sat_s2c3];
              };
        };

GHC.Stack.Types.pushCallStack [InlPrag=INLINE (sat-args=2)]
  :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
     -> GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s2c4 stk_s2c5]
        case ds_s2c4 of {
          (,) fn_s2c7 [Occ=Once] loc_s2c8 [Occ=Once] ->
              case stk_s2c5 of wild1_s2c9 {
                __DEFAULT ->
                    GHC.Stack.Types.PushCallStack [fn_s2c7 loc_s2c8 wild1_s2c9];
                GHC.Stack.Types.FreezeCallStack _ [Occ=Dead] -> wild1_s2c9;
              };
        };

GHC.Stack.Types.emptyCallStack [InlPrag=INLINE (sat-args=0)]
  :: GHC.Stack.Types.CallStack
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.freezeCallStack [InlPrag=INLINE (sat-args=1)]
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m3, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Stack.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule4];

GHC.Stack.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Stack.Types"#;

GHC.Stack.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule2];

GHC.Stack.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Stack.Types.$trModule3
                                     GHC.Stack.Types.$trModule1];

$krep_r29X :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r29Y :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep2_r29Z :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r29Y GHC.Types.[]];

$krep3_r2a0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep2_r29Z];

GHC.Stack.Types.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SrcLoc"#;

GHC.Stack.Types.$tcSrcLoc1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcSrcLoc2];

GHC.Stack.Types.$tcSrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11659135446504247116##
                                    7996606469851030013##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcSrcLoc1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r2a1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcSrcLoc
                                              GHC.Types.[]];

$krep5_r2a2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep4_r2a1];

$krep6_r2a3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep5_r2a2];

$krep7_r2a4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep6_r2a3];

$krep8_r2a5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep7_r2a4];

$krep9_r2a6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep8_r2a5];

$krep10_r2a7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep9_r2a6];

GHC.Stack.Types.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep10_r2a7];

GHC.Stack.Types.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SrcLoc"#;

GHC.Stack.Types.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'SrcLoc3];

GHC.Stack.Types.$tc'SrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13956426263269302848##
                                    15330088913444129695##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'SrcLoc2
                                    0#
                                    GHC.Stack.Types.$tc'SrcLoc1];

GHC.Stack.Types.$tcCallStack2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CallStack"#;

GHC.Stack.Types.$tcCallStack1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcCallStack2];

GHC.Stack.Types.$tcCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9079156173149315555##
                                    7592677015683705484##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcCallStack1
                                    0#
                                    GHC.Types.krep$*];

GHC.Stack.Types.$tc'EmptyCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcCallStack
                                              GHC.Types.[]];

GHC.Stack.Types.$tc'EmptyCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EmptyCallStack"#;

GHC.Stack.Types.$tc'EmptyCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'EmptyCallStack3];

GHC.Stack.Types.$tc'EmptyCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4745696424279029534##
                                    621383300069717314##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'EmptyCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Stack.Types.$tc'EmptyCallStack1
                                         GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FreezeCallStack"#;

GHC.Stack.Types.$tc'FreezeCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'FreezeCallStack3];

GHC.Stack.Types.$tc'FreezeCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13172881767820002692##
                                    8012125741085098641##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'FreezeCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'FreezeCallStack1];

$krep11_r2a8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r2a1
                                         GHC.Stack.Types.$tc'FreezeCallStack1];

GHC.Stack.Types.$tc'PushCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep11_r2a8];

GHC.Stack.Types.$tc'PushCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PushCallStack"#;

GHC.Stack.Types.$tc'PushCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'PushCallStack3];

GHC.Stack.Types.$tc'PushCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11257300383724147409##
                                    9589391422293138004##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'PushCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'PushCallStack1];

GHC.Stack.Types.EmptyCallStack :: GHC.Stack.Types.CallStack
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.PushCallStack
  :: [GHC.Types.Char]
     -> GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.CallStack
     -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.PushCallStack [eta_B3 eta_B2 eta_B1];

GHC.Stack.Types.FreezeCallStack
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.SrcLoc
  :: [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Stack.Types.SrcLoc
[GblId[DataCon],
 Arity=7,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.SrcLoc [eta_B7
                                eta_B6
                                eta_B5
                                eta_B4
                                eta_B3
                                eta_B2
                                eta_B1];


==================== Pre unarise: ====================
2018-03-16 15:54:39.68873604 UTC

GHC.Stack.Types.$fEqSrcLoc_$c==
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [ds_s2AC ds1_s2AD]
        case ds_s2AC of {
          GHC.Stack.Types.SrcLoc a1_s2AF [Occ=Once]
                                 a2_s2AG [Occ=Once]
                                 a3_s2AH [Occ=Once]
                                 a4_s2AI [Occ=Once!]
                                 a5_s2AJ [Occ=Once!]
                                 a6_s2AK [Occ=Once!]
                                 a7_s2AL [Occ=Once] ->
              case ds1_s2AD of {
                GHC.Stack.Types.SrcLoc b1_s2AN [Occ=Once]
                                       b2_s2AO [Occ=Once]
                                       b3_s2AP [Occ=Once]
                                       b4_s2AQ [Occ=Once!]
                                       b5_s2AR [Occ=Once!]
                                       b6_s2AS [Occ=Once!]
                                       b7_s2AT [Occ=Once] ->
                    case GHC.Classes.$fEqModule_$s$c== a1_s2AF b1_s2AN of {
                      GHC.Types.False -> GHC.Types.False [];
                      GHC.Types.True ->
                          case GHC.Classes.$fEqModule_$s$c== a2_s2AG b2_s2AO of {
                            GHC.Types.False -> GHC.Types.False [];
                            GHC.Types.True ->
                                case GHC.Classes.$fEqModule_$s$c== a3_s2AH b3_s2AP of {
                                  GHC.Types.False -> GHC.Types.False [];
                                  GHC.Types.True ->
                                      case a4_s2AI of {
                                        GHC.Types.I# x_s2AY [Occ=Once] ->
                                            case b4_s2AQ of {
                                              GHC.Types.I# y_s2B0 [Occ=Once] ->
                                                  case ==# [x_s2AY y_s2B0] of {
                                                    __DEFAULT -> GHC.Types.False [];
                                                    1# ->
                                                        case a5_s2AJ of {
                                                          GHC.Types.I# x1_s2B3 [Occ=Once] ->
                                                              case b5_s2AR of {
                                                                GHC.Types.I# y1_s2B5 [Occ=Once] ->
                                                                    case ==# [x1_s2B3 y1_s2B5] of {
                                                                      __DEFAULT ->
                                                                          GHC.Types.False [];
                                                                      1# ->
                                                                          case a6_s2AK of {
                                                                            GHC.Types.I# x2_s2B8 [Occ=Once] ->
                                                                                case b6_s2AS of {
                                                                                  GHC.Types.I# y2_s2Ba [Occ=Once] ->
                                                                                      case
                                                                                          ==# [x2_s2B8
                                                                                               y2_s2Ba]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Types.False [];
                                                                                        1# ->
                                                                                            GHC.Classes.eqInt
                                                                                                a7_s2AL
                                                                                                b7_s2AT;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Stack.Types.$fEqSrcLoc_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [eta_s2Bc eta1_s2Bd]
        case GHC.Stack.Types.$fEqSrcLoc_$c== eta_s2Bc eta1_s2Bd of {
          GHC.Types.False -> GHC.Types.True [];
          GHC.Types.True -> GHC.Types.False [];
        };

GHC.Stack.Types.$fEqSrcLoc [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Stack.Types.SrcLoc
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Stack.Types.$fEqSrcLoc_$c==
                                     GHC.Stack.Types.$fEqSrcLoc_$c/=];

GHC.Stack.Types.srcLocEndCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bf]
        case ds_s2Bf of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds7_s2Bn [Occ=Once] ->
              ds7_s2Bn;
        };

GHC.Stack.Types.srcLocEndLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),1*U(A,A,A,A,A,1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bo]
        case ds_s2Bo of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds6_s2Bv [Occ=Once]
                                 _ [Occ=Dead] ->
              ds6_s2Bv;
        };

GHC.Stack.Types.srcLocStartCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),1*U(A,A,A,A,1*U(U),A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bx]
        case ds_s2Bx of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds5_s2BD [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds5_s2BD;
        };

GHC.Stack.Types.srcLocStartLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),1*U(A,A,A,1*U(U),A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2BG]
        case ds_s2BG of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds4_s2BL [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds4_s2BL;
        };

GHC.Stack.Types.srcLocFile
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2BP]
        case ds_s2BP of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds3_s2BT [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds3_s2BT;
        };

GHC.Stack.Types.srcLocModule
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2BY]
        case ds_s2BY of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 ds2_s2C1 [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds2_s2C1;
        };

GHC.Stack.Types.srcLocPackage
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2C7]
        case ds_s2C7 of {
          GHC.Stack.Types.SrcLoc ds1_s2C9 [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds1_s2C9;
        };

GHC.Stack.Types.getCallStack [Occ=LoopBreaker]
  :: GHC.Stack.Types.CallStack
     -> [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [stk_s2Cg]
        case stk_s2Cg of {
          GHC.Stack.Types.EmptyCallStack -> [] [];
          GHC.Stack.Types.PushCallStack fn_s2Ci [Occ=Once]
                                        loc_s2Cj [Occ=Once]
                                        stk'_s2Ck [Occ=Once] ->
              let {
                sat_s2Cm [Occ=Once] :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
                [LclId] =
                    [stk'_s2Ck] \u [] GHC.Stack.Types.getCallStack stk'_s2Ck; } in
              let {
                sat_s2Cl [Occ=Once] :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                [LclId] =
                    CCCS (,)! [fn_s2Ci loc_s2Cj];
              } in  : [sat_s2Cl sat_s2Cm];
          GHC.Stack.Types.FreezeCallStack stk'_s2Cn [Occ=Once] ->
              GHC.Stack.Types.getCallStack stk'_s2Cn;
        };

GHC.Stack.Types.fromCallSiteList [Occ=LoopBreaker]
  :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
     -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s2Co]
        case ds_s2Co of {
          [] -> GHC.Stack.Types.EmptyCallStack [];
          : ds1_s2Cq [Occ=Once!] cs_s2Cr [Occ=Once] ->
              case ds1_s2Cq of {
                (,) fn_s2Ct [Occ=Once] loc_s2Cu [Occ=Once] ->
                    let {
                      sat_s2Cv [Occ=Once] :: GHC.Stack.Types.CallStack
                      [LclId] =
                          [cs_s2Cr] \u [] GHC.Stack.Types.fromCallSiteList cs_s2Cr;
                    } in  GHC.Stack.Types.PushCallStack [fn_s2Ct loc_s2Cu sat_s2Cv];
              };
        };

GHC.Stack.Types.pushCallStack [InlPrag=INLINE (sat-args=2)]
  :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
     -> GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s2Cw stk_s2Cx]
        case ds_s2Cw of {
          (,) fn_s2Cz [Occ=Once] loc_s2CA [Occ=Once] ->
              case stk_s2Cx of wild1_s2CB {
                __DEFAULT ->
                    GHC.Stack.Types.PushCallStack [fn_s2Cz loc_s2CA wild1_s2CB];
                GHC.Stack.Types.FreezeCallStack _ [Occ=Dead] -> wild1_s2CB;
              };
        };

GHC.Stack.Types.emptyCallStack [InlPrag=INLINE (sat-args=0)]
  :: GHC.Stack.Types.CallStack
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.freezeCallStack [InlPrag=INLINE (sat-args=1)]
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m3, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Stack.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule4];

GHC.Stack.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Stack.Types"#;

GHC.Stack.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule2];

GHC.Stack.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Stack.Types.$trModule3
                                     GHC.Stack.Types.$trModule1];

$krep_r29X :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r29Y :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep2_r29Z :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r29Y GHC.Types.[]];

$krep3_r2a0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep2_r29Z];

GHC.Stack.Types.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SrcLoc"#;

GHC.Stack.Types.$tcSrcLoc1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcSrcLoc2];

GHC.Stack.Types.$tcSrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11659135446504247116##
                                    7996606469851030013##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcSrcLoc1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r2a1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcSrcLoc
                                              GHC.Types.[]];

$krep5_r2a2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep4_r2a1];

$krep6_r2a3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep5_r2a2];

$krep7_r2a4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep6_r2a3];

$krep8_r2a5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep7_r2a4];

$krep9_r2a6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep8_r2a5];

$krep10_r2a7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep9_r2a6];

GHC.Stack.Types.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep10_r2a7];

GHC.Stack.Types.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SrcLoc"#;

GHC.Stack.Types.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'SrcLoc3];

GHC.Stack.Types.$tc'SrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13956426263269302848##
                                    15330088913444129695##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'SrcLoc2
                                    0#
                                    GHC.Stack.Types.$tc'SrcLoc1];

GHC.Stack.Types.$tcCallStack2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CallStack"#;

GHC.Stack.Types.$tcCallStack1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcCallStack2];

GHC.Stack.Types.$tcCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9079156173149315555##
                                    7592677015683705484##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcCallStack1
                                    0#
                                    GHC.Types.krep$*];

GHC.Stack.Types.$tc'EmptyCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcCallStack
                                              GHC.Types.[]];

GHC.Stack.Types.$tc'EmptyCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EmptyCallStack"#;

GHC.Stack.Types.$tc'EmptyCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'EmptyCallStack3];

GHC.Stack.Types.$tc'EmptyCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4745696424279029534##
                                    621383300069717314##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'EmptyCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Stack.Types.$tc'EmptyCallStack1
                                         GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FreezeCallStack"#;

GHC.Stack.Types.$tc'FreezeCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'FreezeCallStack3];

GHC.Stack.Types.$tc'FreezeCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13172881767820002692##
                                    8012125741085098641##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'FreezeCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'FreezeCallStack1];

$krep11_r2a8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r2a1
                                         GHC.Stack.Types.$tc'FreezeCallStack1];

GHC.Stack.Types.$tc'PushCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep11_r2a8];

GHC.Stack.Types.$tc'PushCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PushCallStack"#;

GHC.Stack.Types.$tc'PushCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'PushCallStack3];

GHC.Stack.Types.$tc'PushCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11257300383724147409##
                                    9589391422293138004##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'PushCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'PushCallStack1];

GHC.Stack.Types.EmptyCallStack :: GHC.Stack.Types.CallStack
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.PushCallStack
  :: [GHC.Types.Char]
     -> GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.CallStack
     -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.PushCallStack [eta_B3 eta_B2 eta_B1];

GHC.Stack.Types.FreezeCallStack
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.SrcLoc
  :: [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Stack.Types.SrcLoc
[GblId[DataCon],
 Arity=7,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.SrcLoc [eta_B7
                                eta_B6
                                eta_B5
                                eta_B4
                                eta_B3
                                eta_B2
                                eta_B1];


==================== STG syntax: ====================
2018-03-16 15:54:39.698150372 UTC

GHC.Stack.Types.$fEqSrcLoc_$c==
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [ds_s2AC ds1_s2AD]
        case ds_s2AC of {
          GHC.Stack.Types.SrcLoc a1_s2AF [Occ=Once]
                                 a2_s2AG [Occ=Once]
                                 a3_s2AH [Occ=Once]
                                 a4_s2AI [Occ=Once!]
                                 a5_s2AJ [Occ=Once!]
                                 a6_s2AK [Occ=Once!]
                                 a7_s2AL [Occ=Once] ->
              case ds1_s2AD of {
                GHC.Stack.Types.SrcLoc b1_s2AN [Occ=Once]
                                       b2_s2AO [Occ=Once]
                                       b3_s2AP [Occ=Once]
                                       b4_s2AQ [Occ=Once!]
                                       b5_s2AR [Occ=Once!]
                                       b6_s2AS [Occ=Once!]
                                       b7_s2AT [Occ=Once] ->
                    case GHC.Classes.$fEqModule_$s$c== a1_s2AF b1_s2AN of {
                      GHC.Types.False -> GHC.Types.False [];
                      GHC.Types.True ->
                          case GHC.Classes.$fEqModule_$s$c== a2_s2AG b2_s2AO of {
                            GHC.Types.False -> GHC.Types.False [];
                            GHC.Types.True ->
                                case GHC.Classes.$fEqModule_$s$c== a3_s2AH b3_s2AP of {
                                  GHC.Types.False -> GHC.Types.False [];
                                  GHC.Types.True ->
                                      case a4_s2AI of {
                                        GHC.Types.I# x_s2AY [Occ=Once] ->
                                            case b4_s2AQ of {
                                              GHC.Types.I# y_s2B0 [Occ=Once] ->
                                                  case ==# [x_s2AY y_s2B0] of {
                                                    __DEFAULT -> GHC.Types.False [];
                                                    1# ->
                                                        case a5_s2AJ of {
                                                          GHC.Types.I# x1_s2B3 [Occ=Once] ->
                                                              case b5_s2AR of {
                                                                GHC.Types.I# y1_s2B5 [Occ=Once] ->
                                                                    case ==# [x1_s2B3 y1_s2B5] of {
                                                                      __DEFAULT ->
                                                                          GHC.Types.False [];
                                                                      1# ->
                                                                          case a6_s2AK of {
                                                                            GHC.Types.I# x2_s2B8 [Occ=Once] ->
                                                                                case b6_s2AS of {
                                                                                  GHC.Types.I# y2_s2Ba [Occ=Once] ->
                                                                                      case
                                                                                          ==# [x2_s2B8
                                                                                               y2_s2Ba]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            GHC.Types.False [];
                                                                                        1# ->
                                                                                            GHC.Classes.eqInt
                                                                                                a7_s2AL
                                                                                                b7_s2AT;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Stack.Types.$fEqSrcLoc_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=OtherCon []] =
    [] \r [eta_s2Bc eta1_s2Bd]
        case GHC.Stack.Types.$fEqSrcLoc_$c== eta_s2Bc eta1_s2Bd of {
          GHC.Types.False -> GHC.Types.True [];
          GHC.Types.True -> GHC.Types.False [];
        };

GHC.Stack.Types.$fEqSrcLoc [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Stack.Types.SrcLoc
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Stack.Types.$fEqSrcLoc_$c==
                                     GHC.Stack.Types.$fEqSrcLoc_$c/=];

GHC.Stack.Types.srcLocEndCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bf]
        case ds_s2Bf of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds7_s2Bn [Occ=Once] ->
              ds7_s2Bn;
        };

GHC.Stack.Types.srcLocEndLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),1*U(A,A,A,A,A,1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bo]
        case ds_s2Bo of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds6_s2Bv [Occ=Once]
                                 _ [Occ=Dead] ->
              ds6_s2Bv;
        };

GHC.Stack.Types.srcLocStartCol
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),1*U(A,A,A,A,1*U(U),A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2Bx]
        case ds_s2Bx of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds5_s2BD [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds5_s2BD;
        };

GHC.Stack.Types.srcLocStartLine
  :: GHC.Stack.Types.SrcLoc -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),1*U(A,A,A,1*U(U),A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s2BG]
        case ds_s2BG of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds4_s2BL [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds4_s2BL;
        };

GHC.Stack.Types.srcLocFile
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2BP]
        case ds_s2BP of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 ds3_s2BT [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds3_s2BT;
        };

GHC.Stack.Types.srcLocModule
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2BY]
        case ds_s2BY of {
          GHC.Stack.Types.SrcLoc _ [Occ=Dead]
                                 ds2_s2C1 [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds2_s2C1;
        };

GHC.Stack.Types.srcLocPackage
  :: GHC.Stack.Types.SrcLoc -> [GHC.Types.Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s2C7]
        case ds_s2C7 of {
          GHC.Stack.Types.SrcLoc ds1_s2C9 [Occ=Once]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead]
                                 _ [Occ=Dead] ->
              ds1_s2C9;
        };

GHC.Stack.Types.getCallStack [Occ=LoopBreaker]
  :: GHC.Stack.Types.CallStack
     -> [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [stk_s2Cg]
        case stk_s2Cg of {
          GHC.Stack.Types.EmptyCallStack -> [] [];
          GHC.Stack.Types.PushCallStack fn_s2Ci [Occ=Once]
                                        loc_s2Cj [Occ=Once]
                                        stk'_s2Ck [Occ=Once] ->
              let {
                sat_s2Cm [Occ=Once] :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
                [LclId] =
                    [stk'_s2Ck] \u [] GHC.Stack.Types.getCallStack stk'_s2Ck; } in
              let {
                sat_s2Cl [Occ=Once] :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                [LclId] =
                    CCCS (,)! [fn_s2Ci loc_s2Cj];
              } in  : [sat_s2Cl sat_s2Cm];
          GHC.Stack.Types.FreezeCallStack stk'_s2Cn [Occ=Once] ->
              GHC.Stack.Types.getCallStack stk'_s2Cn;
        };

GHC.Stack.Types.fromCallSiteList [Occ=LoopBreaker]
  :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
     -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s2Co]
        case ds_s2Co of {
          [] -> GHC.Stack.Types.EmptyCallStack [];
          : ds1_s2Cq [Occ=Once!] cs_s2Cr [Occ=Once] ->
              case ds1_s2Cq of {
                (,) fn_s2Ct [Occ=Once] loc_s2Cu [Occ=Once] ->
                    let {
                      sat_s2Cv [Occ=Once] :: GHC.Stack.Types.CallStack
                      [LclId] =
                          [cs_s2Cr] \u [] GHC.Stack.Types.fromCallSiteList cs_s2Cr;
                    } in  GHC.Stack.Types.PushCallStack [fn_s2Ct loc_s2Cu sat_s2Cv];
              };
        };

GHC.Stack.Types.pushCallStack [InlPrag=INLINE (sat-args=2)]
  :: ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
     -> GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s2Cw stk_s2Cx]
        case ds_s2Cw of {
          (,) fn_s2Cz [Occ=Once] loc_s2CA [Occ=Once] ->
              case stk_s2Cx of wild1_s2CB {
                __DEFAULT ->
                    GHC.Stack.Types.PushCallStack [fn_s2Cz loc_s2CA wild1_s2CB];
                GHC.Stack.Types.FreezeCallStack _ [Occ=Dead] -> wild1_s2CB;
              };
        };

GHC.Stack.Types.emptyCallStack [InlPrag=INLINE (sat-args=0)]
  :: GHC.Stack.Types.CallStack
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.freezeCallStack [InlPrag=INLINE (sat-args=1)]
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m3, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Stack.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule4];

GHC.Stack.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Stack.Types"#;

GHC.Stack.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$trModule2];

GHC.Stack.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Stack.Types.$trModule3
                                     GHC.Stack.Types.$trModule1];

$krep_r29X :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r29Y :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcChar
                                              GHC.Types.[]];

$krep2_r29Z :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r29Y GHC.Types.[]];

$krep3_r2a0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tc[]
                                              $krep2_r29Z];

GHC.Stack.Types.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "SrcLoc"#;

GHC.Stack.Types.$tcSrcLoc1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcSrcLoc2];

GHC.Stack.Types.$tcSrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11659135446504247116##
                                    7996606469851030013##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcSrcLoc1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r2a1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcSrcLoc
                                              GHC.Types.[]];

$krep5_r2a2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep4_r2a1];

$krep6_r2a3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep5_r2a2];

$krep7_r2a4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep6_r2a3];

$krep8_r2a5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r29X $krep7_r2a4];

$krep9_r2a6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep8_r2a5];

$krep10_r2a7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep9_r2a6];

GHC.Stack.Types.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep10_r2a7];

GHC.Stack.Types.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'SrcLoc"#;

GHC.Stack.Types.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'SrcLoc3];

GHC.Stack.Types.$tc'SrcLoc :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13956426263269302848##
                                    15330088913444129695##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'SrcLoc2
                                    0#
                                    GHC.Stack.Types.$tc'SrcLoc1];

GHC.Stack.Types.$tcCallStack2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CallStack"#;

GHC.Stack.Types.$tcCallStack1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tcCallStack2];

GHC.Stack.Types.$tcCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9079156173149315555##
                                    7592677015683705484##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tcCallStack1
                                    0#
                                    GHC.Types.krep$*];

GHC.Stack.Types.$tc'EmptyCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Stack.Types.$tcCallStack
                                              GHC.Types.[]];

GHC.Stack.Types.$tc'EmptyCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EmptyCallStack"#;

GHC.Stack.Types.$tc'EmptyCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'EmptyCallStack3];

GHC.Stack.Types.$tc'EmptyCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4745696424279029534##
                                    621383300069717314##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'EmptyCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Stack.Types.$tc'EmptyCallStack1
                                         GHC.Stack.Types.$tc'EmptyCallStack1];

GHC.Stack.Types.$tc'FreezeCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FreezeCallStack"#;

GHC.Stack.Types.$tc'FreezeCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'FreezeCallStack3];

GHC.Stack.Types.$tc'FreezeCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13172881767820002692##
                                    8012125741085098641##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'FreezeCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'FreezeCallStack1];

$krep11_r2a8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r2a1
                                         GHC.Stack.Types.$tc'FreezeCallStack1];

GHC.Stack.Types.$tc'PushCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r2a0 $krep11_r2a8];

GHC.Stack.Types.$tc'PushCallStack3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PushCallStack"#;

GHC.Stack.Types.$tc'PushCallStack2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Stack.Types.$tc'PushCallStack3];

GHC.Stack.Types.$tc'PushCallStack :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11257300383724147409##
                                    9589391422293138004##
                                    GHC.Stack.Types.$trModule
                                    GHC.Stack.Types.$tc'PushCallStack2
                                    0#
                                    GHC.Stack.Types.$tc'PushCallStack1];

GHC.Stack.Types.EmptyCallStack :: GHC.Stack.Types.CallStack
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.EmptyCallStack! [];

GHC.Stack.Types.PushCallStack
  :: [GHC.Types.Char]
     -> GHC.Stack.Types.SrcLoc
     -> GHC.Stack.Types.CallStack
     -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.PushCallStack [eta_B3 eta_B2 eta_B1];

GHC.Stack.Types.FreezeCallStack
  :: GHC.Stack.Types.CallStack -> GHC.Stack.Types.CallStack
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Stack.Types.FreezeCallStack [eta_B1];

GHC.Stack.Types.SrcLoc
  :: [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> [GHC.Types.Char]
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Stack.Types.SrcLoc
[GblId[DataCon],
 Arity=7,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Stack.Types.SrcLoc [eta_B7
                                eta_B6
                                eta_B5
                                eta_B4
                                eta_B3
                                eta_B2
                                eta_B1];

