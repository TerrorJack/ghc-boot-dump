
==================== Tidy Core ====================
2018-03-16 15:54:38.920027609 UTC

Result size of Tidy Core
  = {terms: 335, types: 280, coercions: 0, joins: 0/0}

-- RHS size: {terms: 71, types: 42, coercions: 0, joins: 0/0}
GHC.Stack.Types.$fEqSrcLoc_$c==
  :: SrcLoc -> SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 20] 323 60}]
GHC.Stack.Types.$fEqSrcLoc_$c==
  = \ (ds_d221 :: SrcLoc) (ds1_d222 :: SrcLoc) ->
      case ds_d221 of
      { SrcLoc a1_a1U2 a2_a1U3 a3_a1U4 a4_a1U5 a5_a1U6 a6_a1U7 a7_a1U8 ->
      case ds1_d222 of
      { SrcLoc b1_a1U9 b2_a1Ua b3_a1Ub b4_a1Uc b5_a1Ud b6_a1Ue b7_a1Uf ->
      case GHC.Classes.$fEqModule_$s$c== a1_a1U2 b1_a1U9 of {
        GHC.Types.False -> GHC.Types.False;
        GHC.Types.True ->
          case GHC.Classes.$fEqModule_$s$c== a2_a1U3 b2_a1Ua of {
            GHC.Types.False -> GHC.Types.False;
            GHC.Types.True ->
              case GHC.Classes.$fEqModule_$s$c== a3_a1U4 b3_a1Ub of {
                GHC.Types.False -> GHC.Types.False;
                GHC.Types.True ->
                  case a4_a1U5 of { GHC.Types.I# x_a22G ->
                  case b4_a1Uc of { GHC.Types.I# y_a22K ->
                  case GHC.Prim.==# x_a22G y_a22K of {
                    __DEFAULT -> GHC.Types.False;
                    1# ->
                      case a5_a1U6 of { GHC.Types.I# x1_X24l ->
                      case b5_a1Ud of { GHC.Types.I# y1_X24u ->
                      case GHC.Prim.==# x1_X24l y1_X24u of {
                        __DEFAULT -> GHC.Types.False;
                        1# ->
                          case a6_a1U7 of { GHC.Types.I# x2_X24y ->
                          case b6_a1Ue of { GHC.Types.I# y2_X24H ->
                          case GHC.Prim.==# x2_X24y y2_X24H of {
                            __DEFAULT -> GHC.Types.False;
                            1# -> GHC.Classes.eqInt a7_a1U8 b7_a1Uf
                          }
                          }
                          }
                      }
                      }
                      }
                  }
                  }
                  }
              }
          }
      }
      }
      }

-- RHS size: {terms: 10, types: 3, coercions: 0, joins: 0/0}
GHC.Stack.Types.$fEqSrcLoc_$c/= [InlPrag=INLINE (sat-args=2)]
  :: SrcLoc -> SrcLoc -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a22b [Occ=Once] :: SrcLoc)
                 (y_a22c [Occ=Once] :: SrcLoc) ->
                 case GHC.Stack.Types.$fEqSrcLoc_$c== x_a22b y_a22c of {
                   GHC.Types.False -> GHC.Types.True;
                   GHC.Types.True -> GHC.Types.False
                 }}]
GHC.Stack.Types.$fEqSrcLoc_$c/=
  = \ (eta_B2 :: SrcLoc) (eta1_B1 :: SrcLoc) ->
      case GHC.Stack.Types.$fEqSrcLoc_$c== eta_B2 eta1_B1 of {
        GHC.Types.False -> GHC.Types.True;
        GHC.Types.True -> GHC.Types.False
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Stack.Types.$fEqSrcLoc [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq SrcLoc
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: SrcLoc
                        GHC.Stack.Types.$fEqSrcLoc_$c==
                        GHC.Stack.Types.$fEqSrcLoc_$c/=]
GHC.Stack.Types.$fEqSrcLoc
  = GHC.Classes.C:Eq
      @ SrcLoc
      GHC.Stack.Types.$fEqSrcLoc_$c==
      GHC.Stack.Types.$fEqSrcLoc_$c/=

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocEndCol :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLS),1*U(A,A,A,A,A,A,1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21T [Occ=Once!] :: SrcLoc) ->
                 case ds_d21T of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] ds7_d220 [Occ=Once] ->
                 ds7_d220
                 }}]
srcLocEndCol
  = \ (ds_d21T :: SrcLoc) ->
      case ds_d21T of
      { SrcLoc ds1_d21U ds2_d21V ds3_d21W ds4_d21X ds5_d21Y ds6_d21Z
               ds7_d220 ->
      ds7_d220
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocEndLine :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSL),1*U(A,A,A,A,A,1*U(U),A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21L [Occ=Once!] :: SrcLoc) ->
                 case ds_d21L of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] ds6_d21R [Occ=Once] _ [Occ=Dead] ->
                 ds6_d21R
                 }}]
srcLocEndLine
  = \ (ds_d21L :: SrcLoc) ->
      case ds_d21L of
      { SrcLoc ds1_d21M ds2_d21N ds3_d21O ds4_d21P ds5_d21Q ds6_d21R
               ds7_d21S ->
      ds6_d21R
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocStartCol :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSLL),1*U(A,A,A,A,1*U(U),A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21D [Occ=Once!] :: SrcLoc) ->
                 case ds_d21D of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          ds5_d21I [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds5_d21I
                 }}]
srcLocStartCol
  = \ (ds_d21D :: SrcLoc) ->
      case ds_d21D of
      { SrcLoc ds1_d21E ds2_d21F ds3_d21G ds4_d21H ds5_d21I ds6_d21J
               ds7_d21K ->
      ds5_d21I
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocStartLine :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLL),1*U(A,A,A,1*U(U),A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21v [Occ=Once!] :: SrcLoc) ->
                 case ds_d21v of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ds4_d21z [Occ=Once]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds4_d21z
                 }}]
srcLocStartLine
  = \ (ds_d21v :: SrcLoc) ->
      case ds_d21v of
      { SrcLoc ds1_d21w ds2_d21x ds3_d21y ds4_d21z ds5_d21A ds6_d21B
               ds7_d21C ->
      ds4_d21z
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocFile :: SrcLoc -> [Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21n [Occ=Once!] :: SrcLoc) ->
                 case ds_d21n of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] ds3_d21q [Occ=Once] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds3_d21q
                 }}]
srcLocFile
  = \ (ds_d21n :: SrcLoc) ->
      case ds_d21n of
      { SrcLoc ds1_d21o ds2_d21p ds3_d21q ds4_d21r ds5_d21s ds6_d21t
               ds7_d21u ->
      ds3_d21q
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocModule :: SrcLoc -> [Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d21f [Occ=Once!] :: SrcLoc) ->
                 case ds_d21f of
                 { SrcLoc _ [Occ=Dead] ds2_d21h [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds2_d21h
                 }}]
srcLocModule
  = \ (ds_d21f :: SrcLoc) ->
      case ds_d21f of
      { SrcLoc ds1_d21g ds2_d21h ds3_d21i ds4_d21j ds5_d21k ds6_d21l
               ds7_d21m ->
      ds2_d21h
      }

-- RHS size: {terms: 5, types: 12, coercions: 0, joins: 0/0}
srcLocPackage :: SrcLoc -> [Char]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d217 [Occ=Once!] :: SrcLoc) ->
                 case ds_d217 of
                 { SrcLoc ds1_d218 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds1_d218
                 }}]
srcLocPackage
  = \ (ds_d217 :: SrcLoc) ->
      case ds_d217 of
      { SrcLoc ds1_d218 ds2_d219 ds3_d21a ds4_d21b ds5_d21c ds6_d21d
               ds7_d21e ->
      ds1_d218
      }

Rec {
-- RHS size: {terms: 15, types: 18, coercions: 0, joins: 0/0}
getCallStack [Occ=LoopBreaker] :: CallStack -> [([Char], SrcLoc)]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []]
getCallStack
  = \ (stk_a1S1 :: CallStack) ->
      case stk_a1S1 of {
        EmptyCallStack -> GHC.Types.[] @ ([Char], SrcLoc);
        PushCallStack fn_a1S2 loc_a1S3 stk'_a1S4 ->
          GHC.Types.:
            @ ([Char], SrcLoc) (fn_a1S2, loc_a1S3) (getCallStack stk'_a1S4);
        FreezeCallStack stk'_a1S5 -> getCallStack stk'_a1S5
      }
end Rec }

Rec {
-- RHS size: {terms: 14, types: 26, coercions: 0, joins: 0/0}
fromCallSiteList [Occ=LoopBreaker]
  :: [([Char], SrcLoc)] -> CallStack
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []]
fromCallSiteList
  = \ (ds_d20N :: [([Char], SrcLoc)]) ->
      case ds_d20N of {
        [] -> GHC.Stack.Types.EmptyCallStack;
        : ds1_d20W cs_a1S8 ->
          case ds1_d20W of { (fn_a1S6, loc_a1S7) ->
          GHC.Stack.Types.PushCallStack
            fn_a1S6 loc_a1S7 (fromCallSiteList cs_a1S8)
          }
      }
end Rec }

-- RHS size: {terms: 14, types: 14, coercions: 0, joins: 0/0}
pushCallStack [InlPrag=INLINE (sat-args=2)]
  :: ([Char], SrcLoc) -> CallStack -> CallStack
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d20s [Occ=Once!] :: ([Char], SrcLoc))
                 (stk_a1Sb [Occ=Once!] :: CallStack) ->
                 case ds_d20s of { (fn_a1S9 [Occ=Once], loc_a1Sa [Occ=Once]) ->
                 case stk_a1Sb of wild1_X6 {
                   __DEFAULT ->
                     GHC.Stack.Types.PushCallStack fn_a1S9 loc_a1Sa wild1_X6;
                   FreezeCallStack _ [Occ=Dead] -> wild1_X6
                 }
                 }}]
pushCallStack
  = \ (ds_d20s :: ([Char], SrcLoc)) (stk_a1Sb :: CallStack) ->
      case ds_d20s of { (fn_a1S9, loc_a1Sa) ->
      case stk_a1Sb of wild1_Xi {
        __DEFAULT ->
          GHC.Stack.Types.PushCallStack fn_a1S9 loc_a1Sa wild1_Xi;
        FreezeCallStack ds1_d20G -> wild1_Xi
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
emptyCallStack [InlPrag=INLINE (sat-args=0)] :: CallStack
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=True)
         Tmpl= GHC.Stack.Types.EmptyCallStack}]
emptyCallStack = GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
freezeCallStack [InlPrag=INLINE (sat-args=1)]
  :: CallStack -> CallStack
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m3,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= GHC.Stack.Types.FreezeCallStack}]
freezeCallStack = GHC.Stack.Types.FreezeCallStack

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Stack.Types.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$trModule3
  = GHC.Types.TrNameS GHC.Stack.Types.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Stack.Types.$trModule2 = "GHC.Stack.Types"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$trModule1
  = GHC.Types.TrNameS GHC.Stack.Types.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Stack.Types.$trModule
  = GHC.Types.Module
      GHC.Stack.Types.$trModule3 GHC.Stack.Types.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r29X :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r29X
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_r29Y :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_r29Y
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcChar (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep2_r29Z :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep2_r29Z
  = GHC.Types.:
      @ GHC.Types.KindRep $krep1_r29Y (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_r2a0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_r2a0 = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep2_r29Z

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Stack.Types.$tcSrcLoc2 = "SrcLoc"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcSrcLoc1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tcSrcLoc1
  = GHC.Types.TrNameS GHC.Stack.Types.$tcSrcLoc2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcSrcLoc :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tcSrcLoc
  = GHC.Types.TyCon
      11659135446504247116##
      7996606469851030013##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tcSrcLoc1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep4_r2a1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_r2a1
  = GHC.Types.KindRepTyConApp
      GHC.Stack.Types.$tcSrcLoc (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r2a2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep5_r2a2 = GHC.Types.KindRepFun $krep_r29X $krep4_r2a1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep6_r2a3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep6_r2a3 = GHC.Types.KindRepFun $krep_r29X $krep5_r2a2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_r2a4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep7_r2a4 = GHC.Types.KindRepFun $krep_r29X $krep6_r2a3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8_r2a5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep8_r2a5 = GHC.Types.KindRepFun $krep_r29X $krep7_r2a4

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_r2a6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep9_r2a6 = GHC.Types.KindRepFun $krep3_r2a0 $krep8_r2a5

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep10_r2a7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep10_r2a7 = GHC.Types.KindRepFun $krep3_r2a0 $krep9_r2a6

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Stack.Types.$tc'SrcLoc1
  = GHC.Types.KindRepFun $krep3_r2a0 $krep10_r2a7

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Stack.Types.$tc'SrcLoc3 = "'SrcLoc"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tc'SrcLoc2
  = GHC.Types.TrNameS GHC.Stack.Types.$tc'SrcLoc3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'SrcLoc :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tc'SrcLoc
  = GHC.Types.TyCon
      13956426263269302848##
      15330088913444129695##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tc'SrcLoc2
      0#
      GHC.Stack.Types.$tc'SrcLoc1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcCallStack2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Stack.Types.$tcCallStack2 = "CallStack"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcCallStack1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tcCallStack1
  = GHC.Types.TrNameS GHC.Stack.Types.$tcCallStack2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tcCallStack :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tcCallStack
  = GHC.Types.TyCon
      9079156173149315555##
      7592677015683705484##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tcCallStack1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'EmptyCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.Stack.Types.$tc'EmptyCallStack1
  = GHC.Types.KindRepTyConApp
      GHC.Stack.Types.$tcCallStack (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'EmptyCallStack3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Stack.Types.$tc'EmptyCallStack3 = "'EmptyCallStack"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'EmptyCallStack2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tc'EmptyCallStack2
  = GHC.Types.TrNameS GHC.Stack.Types.$tc'EmptyCallStack3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'EmptyCallStack :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tc'EmptyCallStack
  = GHC.Types.TyCon
      4745696424279029534##
      621383300069717314##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tc'EmptyCallStack2
      0#
      GHC.Stack.Types.$tc'EmptyCallStack1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'FreezeCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Stack.Types.$tc'FreezeCallStack1
  = GHC.Types.KindRepFun
      GHC.Stack.Types.$tc'EmptyCallStack1
      GHC.Stack.Types.$tc'EmptyCallStack1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'FreezeCallStack3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Stack.Types.$tc'FreezeCallStack3 = "'FreezeCallStack"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'FreezeCallStack2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tc'FreezeCallStack2
  = GHC.Types.TrNameS GHC.Stack.Types.$tc'FreezeCallStack3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'FreezeCallStack :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tc'FreezeCallStack
  = GHC.Types.TyCon
      13172881767820002692##
      8012125741085098641##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tc'FreezeCallStack2
      0#
      GHC.Stack.Types.$tc'FreezeCallStack1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_r2a8 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep11_r2a8
  = GHC.Types.KindRepFun
      $krep4_r2a1 GHC.Stack.Types.$tc'FreezeCallStack1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'PushCallStack1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Stack.Types.$tc'PushCallStack1
  = GHC.Types.KindRepFun $krep3_r2a0 $krep11_r2a8

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'PushCallStack3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Stack.Types.$tc'PushCallStack3 = "'PushCallStack"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'PushCallStack2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Stack.Types.$tc'PushCallStack2
  = GHC.Types.TrNameS GHC.Stack.Types.$tc'PushCallStack3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Stack.Types.$tc'PushCallStack :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Stack.Types.$tc'PushCallStack
  = GHC.Types.TyCon
      11257300383724147409##
      9589391422293138004##
      GHC.Stack.Types.$trModule
      GHC.Stack.Types.$tc'PushCallStack2
      0#
      GHC.Stack.Types.$tc'PushCallStack1


