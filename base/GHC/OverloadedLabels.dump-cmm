
==================== Output Cmm ====================
2018-03-16 16:07:26.800355948 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.801122635 UTC

[section ""data" . GHC.OverloadedLabels.fromLabel_closure" {
     GHC.OverloadedLabels.fromLabel_closure:
         const GHC.OverloadedLabels.fromLabel_info;
 },
 GHC.OverloadedLabels.fromLabel_entry() //  [R2]
         { info_tbl: [(ccxKf,
                       label: GHC.OverloadedLabels.fromLabel_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxKf: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.801829211 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule4_bytes" {
     GHC.OverloadedLabels.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.80239898 UTC

[section ""data" . GHC.OverloadedLabels.$trModule3_closure" {
     GHC.OverloadedLabels.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.802927605 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule2_bytes" {
     GHC.OverloadedLabels.$trModule2_bytes:
         I8[] [71,72,67,46,79,118,101,114,108,111,97,100,101,100,76,97,98,101,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.803434042 UTC

[section ""data" . GHC.OverloadedLabels.$trModule1_closure" {
     GHC.OverloadedLabels.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.803976062 UTC

[section ""data" . GHC.OverloadedLabels.$trModule_closure" {
     GHC.OverloadedLabels.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.OverloadedLabels.$trModule3_closure+1;
         const GHC.OverloadedLabels.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.804533074 UTC

[section ""data" . $krep_rcxK1_closure" {
     $krep_rcxK1_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.805108642 UTC

[section ""data" . $krep1_rcxK2_closure" {
     $krep1_rcxK2_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.805747314 UTC

[section ""data" . $krep2_rcxK3_closure" {
     $krep2_rcxK3_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.806361188 UTC

[section ""data" . $krep3_rcxK4_closure" {
     $krep3_rcxK4_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_rcxK2_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.806950285 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel1_closure" {
     GHC.OverloadedLabels.$tcIsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcxK3_closure+1;
         const $krep3_rcxK4_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.80753652 UTC

[section ""data" . $krep4_rcxK5_closure" {
     $krep4_rcxK5_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.808094902 UTC

[section ""cstring" . GHC.OverloadedLabels.$tcIsLabel3_bytes" {
     GHC.OverloadedLabels.$tcIsLabel3_bytes:
         I8[] [73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.808645105 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel2_closure" {
     GHC.OverloadedLabels.$tcIsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tcIsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.809217487 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel_closure" {
     GHC.OverloadedLabels.$tcIsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel2_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel1_closure+4;
         const 63717145371698301;
         const 7516490703205987704;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.809864139 UTC

[section ""data" . $krep5_rcxK6_closure" {
     $krep5_rcxK6_closure:
         const :_con_info;
         const $krep4_rcxK5_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.810443338 UTC

[section ""data" . $krep6_rcxK7_closure" {
     $krep6_rcxK7_closure:
         const :_con_info;
         const $krep_rcxK1_closure+2;
         const $krep5_rcxK6_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.811059967 UTC

[section ""data" . $krep7_rcxK8_closure" {
     $krep7_rcxK8_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.OverloadedLabels.$tcIsLabel_closure+1;
         const $krep6_rcxK7_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.811631851 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel1_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rcxK5_closure+2;
         const $krep7_rcxK8_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.812219286 UTC

[section ""cstring" . GHC.OverloadedLabels.$tc'C:IsLabel3_bytes" {
     GHC.OverloadedLabels.$tc'C:IsLabel3_bytes:
         I8[] [39,67,58,73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.812804998 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel2_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tc'C:IsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.813423064 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel2_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel1_closure+4;
         const 8283571148151255172;
         const 4485319284429056444;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.814061374 UTC

[section ""relreadonly" . ScxKi_srt" { ScxKi_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.814658573 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.815502227 UTC

[section ""data" . GHC.OverloadedLabels.fromLabel_closure" {
     GHC.OverloadedLabels.fromLabel_closure:
         const GHC.OverloadedLabels.fromLabel_info;
 },
 GHC.OverloadedLabels.fromLabel_entry() //  [R2]
         { info_tbl: [(ccxKn,
                       label: GHC.OverloadedLabels.fromLabel_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxKn: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.816297283 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule4_bytes" {
     GHC.OverloadedLabels.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.816897768 UTC

[section ""data" . GHC.OverloadedLabels.$trModule3_closure" {
     GHC.OverloadedLabels.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.817496153 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule2_bytes" {
     GHC.OverloadedLabels.$trModule2_bytes:
         I8[] [71,72,67,46,79,118,101,114,108,111,97,100,101,100,76,97,98,101,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.818057073 UTC

[section ""data" . GHC.OverloadedLabels.$trModule1_closure" {
     GHC.OverloadedLabels.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.818629856 UTC

[section ""data" . GHC.OverloadedLabels.$trModule_closure" {
     GHC.OverloadedLabels.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.OverloadedLabels.$trModule3_closure+1;
         const GHC.OverloadedLabels.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.819183689 UTC

[section ""data" . $krep_rcxK1_closure" {
     $krep_rcxK1_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.819807292 UTC

[section ""data" . $krep1_rcxK2_closure" {
     $krep1_rcxK2_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.820415819 UTC

[section ""data" . $krep2_rcxK3_closure" {
     $krep2_rcxK3_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.821035638 UTC

[section ""data" . $krep3_rcxK4_closure" {
     $krep3_rcxK4_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_rcxK2_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.821717011 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel1_closure" {
     GHC.OverloadedLabels.$tcIsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcxK3_closure+1;
         const $krep3_rcxK4_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.822371253 UTC

[section ""data" . $krep4_rcxK5_closure" {
     $krep4_rcxK5_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.8230551 UTC

[section ""cstring" . GHC.OverloadedLabels.$tcIsLabel3_bytes" {
     GHC.OverloadedLabels.$tcIsLabel3_bytes:
         I8[] [73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.823652546 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel2_closure" {
     GHC.OverloadedLabels.$tcIsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tcIsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.824268742 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel_closure" {
     GHC.OverloadedLabels.$tcIsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel2_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel1_closure+4;
         const 63717145371698301;
         const 7516490703205987704;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.825932187 UTC

[section ""data" . $krep5_rcxK6_closure" {
     $krep5_rcxK6_closure:
         const :_con_info;
         const $krep4_rcxK5_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.826537761 UTC

[section ""data" . $krep6_rcxK7_closure" {
     $krep6_rcxK7_closure:
         const :_con_info;
         const $krep_rcxK1_closure+2;
         const $krep5_rcxK6_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.827104128 UTC

[section ""data" . $krep7_rcxK8_closure" {
     $krep7_rcxK8_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.OverloadedLabels.$tcIsLabel_closure+1;
         const $krep6_rcxK7_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.827669919 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel1_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rcxK5_closure+2;
         const $krep7_rcxK8_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.828263223 UTC

[section ""cstring" . GHC.OverloadedLabels.$tc'C:IsLabel3_bytes" {
     GHC.OverloadedLabels.$tc'C:IsLabel3_bytes:
         I8[] [39,67,58,73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.828842151 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel2_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tc'C:IsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.829517533 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel2_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel1_closure+4;
         const 8283571148151255172;
         const 4485319284429056444;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.830130908 UTC

[section ""relreadonly" . ScxKi_srt" { ScxKi_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.830913446 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.832309695 UTC

[section ""data" . GHC.OverloadedLabels.fromLabel_closure" {
     GHC.OverloadedLabels.fromLabel_closure:
         const GHC.OverloadedLabels.fromLabel_info;
 },
 GHC.OverloadedLabels.fromLabel_entry() //  [R2]
         { info_tbl: [(ccxKu,
                       label: GHC.OverloadedLabels.fromLabel_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxKu: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.835697212 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule4_bytes" {
     GHC.OverloadedLabels.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.837942986 UTC

[section ""data" . GHC.OverloadedLabels.$trModule3_closure" {
     GHC.OverloadedLabels.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.839613348 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule2_bytes" {
     GHC.OverloadedLabels.$trModule2_bytes:
         I8[] [71,72,67,46,79,118,101,114,108,111,97,100,101,100,76,97,98,101,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.84130077 UTC

[section ""data" . GHC.OverloadedLabels.$trModule1_closure" {
     GHC.OverloadedLabels.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.843040853 UTC

[section ""data" . GHC.OverloadedLabels.$trModule_closure" {
     GHC.OverloadedLabels.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.OverloadedLabels.$trModule3_closure+1;
         const GHC.OverloadedLabels.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.844861705 UTC

[section ""data" . $krep_rcxK1_closure" {
     $krep_rcxK1_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.84660443 UTC

[section ""data" . $krep1_rcxK2_closure" {
     $krep1_rcxK2_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.848369593 UTC

[section ""data" . $krep2_rcxK3_closure" {
     $krep2_rcxK3_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.85016652 UTC

[section ""data" . $krep3_rcxK4_closure" {
     $krep3_rcxK4_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_rcxK2_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.852644849 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel1_closure" {
     GHC.OverloadedLabels.$tcIsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcxK3_closure+1;
         const $krep3_rcxK4_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.854501562 UTC

[section ""data" . $krep4_rcxK5_closure" {
     $krep4_rcxK5_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.856264339 UTC

[section ""cstring" . GHC.OverloadedLabels.$tcIsLabel3_bytes" {
     GHC.OverloadedLabels.$tcIsLabel3_bytes:
         I8[] [73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.858268902 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel2_closure" {
     GHC.OverloadedLabels.$tcIsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tcIsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.860001133 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel_closure" {
     GHC.OverloadedLabels.$tcIsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel2_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel1_closure+4;
         const 63717145371698301;
         const 7516490703205987704;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.86189247 UTC

[section ""data" . $krep5_rcxK6_closure" {
     $krep5_rcxK6_closure:
         const :_con_info;
         const $krep4_rcxK5_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.863647297 UTC

[section ""data" . $krep6_rcxK7_closure" {
     $krep6_rcxK7_closure:
         const :_con_info;
         const $krep_rcxK1_closure+2;
         const $krep5_rcxK6_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.865414868 UTC

[section ""data" . $krep7_rcxK8_closure" {
     $krep7_rcxK8_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.OverloadedLabels.$tcIsLabel_closure+1;
         const $krep6_rcxK7_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.867126869 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel1_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rcxK5_closure+2;
         const $krep7_rcxK8_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.868870358 UTC

[section ""cstring" . GHC.OverloadedLabels.$tc'C:IsLabel3_bytes" {
     GHC.OverloadedLabels.$tc'C:IsLabel3_bytes:
         I8[] [39,67,58,73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.870665341 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel2_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tc'C:IsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.872465372 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel2_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel1_closure+4;
         const 8283571148151255172;
         const 4485319284429056444;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.874736967 UTC

[section ""relreadonly" . ScxKi_srt" { ScxKi_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.901965752 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.903229874 UTC

[section ""data" . GHC.OverloadedLabels.fromLabel_closure" {
     GHC.OverloadedLabels.fromLabel_closure:
         const GHC.OverloadedLabels.fromLabel_info;
 },
 GHC.OverloadedLabels.fromLabel_entry() //  [R2]
         { info_tbl: [(ccxL2,
                       label: GHC.OverloadedLabels.fromLabel_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxL2: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.906713738 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule4_bytes" {
     GHC.OverloadedLabels.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.908443562 UTC

[section ""data" . GHC.OverloadedLabels.$trModule3_closure" {
     GHC.OverloadedLabels.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.910197824 UTC

[section ""cstring" . GHC.OverloadedLabels.$trModule2_bytes" {
     GHC.OverloadedLabels.$trModule2_bytes:
         I8[] [71,72,67,46,79,118,101,114,108,111,97,100,101,100,76,97,98,101,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.911855862 UTC

[section ""data" . GHC.OverloadedLabels.$trModule1_closure" {
     GHC.OverloadedLabels.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.913617685 UTC

[section ""data" . GHC.OverloadedLabels.$trModule_closure" {
     GHC.OverloadedLabels.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.OverloadedLabels.$trModule3_closure+1;
         const GHC.OverloadedLabels.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.915457948 UTC

[section ""data" . $krep_rcxK1_closure" {
     $krep_rcxK1_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.91721446 UTC

[section ""data" . $krep1_rcxK2_closure" {
     $krep1_rcxK2_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.919106708 UTC

[section ""data" . $krep2_rcxK3_closure" {
     $krep2_rcxK3_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.9210031 UTC

[section ""data" . $krep3_rcxK4_closure" {
     $krep3_rcxK4_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep1_rcxK2_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.923430182 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel1_closure" {
     GHC.OverloadedLabels.$tcIsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_rcxK3_closure+1;
         const $krep3_rcxK4_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.925278899 UTC

[section ""data" . $krep4_rcxK5_closure" {
     $krep4_rcxK5_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.927080165 UTC

[section ""cstring" . GHC.OverloadedLabels.$tcIsLabel3_bytes" {
     GHC.OverloadedLabels.$tcIsLabel3_bytes:
         I8[] [73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.928852712 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel2_closure" {
     GHC.OverloadedLabels.$tcIsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tcIsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.93098023 UTC

[section ""data" . GHC.OverloadedLabels.$tcIsLabel_closure" {
     GHC.OverloadedLabels.$tcIsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel2_closure+1;
         const GHC.OverloadedLabels.$tcIsLabel1_closure+4;
         const 63717145371698301;
         const 7516490703205987704;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.932859376 UTC

[section ""data" . $krep5_rcxK6_closure" {
     $krep5_rcxK6_closure:
         const :_con_info;
         const $krep4_rcxK5_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.934657901 UTC

[section ""data" . $krep6_rcxK7_closure" {
     $krep6_rcxK7_closure:
         const :_con_info;
         const $krep_rcxK1_closure+2;
         const $krep5_rcxK6_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.936456995 UTC

[section ""data" . $krep7_rcxK8_closure" {
     $krep7_rcxK8_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.OverloadedLabels.$tcIsLabel_closure+1;
         const $krep6_rcxK7_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.938290521 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel1_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rcxK5_closure+2;
         const $krep7_rcxK8_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.94004444 UTC

[section ""cstring" . GHC.OverloadedLabels.$tc'C:IsLabel3_bytes" {
     GHC.OverloadedLabels.$tc'C:IsLabel3_bytes:
         I8[] [39,67,58,73,115,76,97,98,101,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.941818557 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel2_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.OverloadedLabels.$tc'C:IsLabel3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.943669828 UTC

[section ""data" . GHC.OverloadedLabels.$tc'C:IsLabel_closure" {
     GHC.OverloadedLabels.$tc'C:IsLabel_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.OverloadedLabels.$trModule_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel2_closure+1;
         const GHC.OverloadedLabels.$tc'C:IsLabel1_closure+4;
         const 8283571148151255172;
         const 4485319284429056444;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.945473942 UTC

[section ""relreadonly" . ScxLu_srt" { ScxLu_srt:
 }]

