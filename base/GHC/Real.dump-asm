
==================== Asm code ====================
2018-03-16 15:56:03.643379486 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Fractional_closure
.type GHC.Real.$p1Fractional_closure, @object
GHC.Real.$p1Fractional_closure:
	.quad	GHC.Real.$p1Fractional_info


==================== Asm code ====================
2018-03-16 15:56:03.64426691 UTC

.section .text
.align 8
.globl GHC.Real.$p1Fractional_entry
.type GHC.Real.$p1Fractional_entry, @object
GHC.Real.$p1Fractional_entry:
_c1omf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1omg
_c1omh:
	movq $block_c1omc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1omc
_c1omd:
	movq (%rbx),%rax
	jmp *(%rax)
_c1omg:
	movl $GHC.Real.$p1Fractional_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p1Fractional_entry, .-GHC.Real.$p1Fractional_entry


==================== Asm code ====================
2018-03-16 15:56:03.644893269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Fractional_info
.type GHC.Real.$p1Fractional_info, @object
GHC.Real.$p1Fractional_info:
	.quad	GHC.Real.$p1Fractional_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.645992658 UTC

.section .text
.align 8
_c1omc:
_c1omc:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1omc, .-_c1omc


==================== Asm code ====================
2018-03-16 15:56:03.64658506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1omc_info:
	.quad	_c1omc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.649368292 UTC

.section .data
.align 8
.align 1
.globl GHC.Real./_closure
.type GHC.Real./_closure, @object
GHC.Real./_closure:
	.quad	GHC.Real./_info


==================== Asm code ====================
2018-03-16 15:56:03.650114048 UTC

.section .text
.align 8
.globl GHC.Real./_entry
.type GHC.Real./_entry, @object
GHC.Real./_entry:
_c1omE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1omF
_c1omG:
	movq $block_c1omB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1omB
_c1omC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1omF:
	movl $GHC.Real./_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real./_entry, .-GHC.Real./_entry


==================== Asm code ====================
2018-03-16 15:56:03.650726599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real./_info
.type GHC.Real./_info, @object
GHC.Real./_info:
	.quad	GHC.Real./_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.651380011 UTC

.section .text
.align 8
_c1omB:
_c1omB:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1omB, .-_c1omB


==================== Asm code ====================
2018-03-16 15:56:03.651941012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1omB_info:
	.quad	_c1omB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.65473216 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.recip_closure
.type GHC.Real.recip_closure, @object
GHC.Real.recip_closure:
	.quad	GHC.Real.recip_info


==================== Asm code ====================
2018-03-16 15:56:03.655472218 UTC

.section .text
.align 8
.globl GHC.Real.recip_entry
.type GHC.Real.recip_entry, @object
GHC.Real.recip_entry:
_c1on1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1on2
_c1on3:
	movq $block_c1omY_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1omY
_c1omZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1on2:
	movl $GHC.Real.recip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.recip_entry, .-GHC.Real.recip_entry


==================== Asm code ====================
2018-03-16 15:56:03.656150743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.recip_info
.type GHC.Real.recip_info, @object
GHC.Real.recip_info:
	.quad	GHC.Real.recip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.656795247 UTC

.section .text
.align 8
_c1omY:
_c1omY:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1omY, .-_c1omY


==================== Asm code ====================
2018-03-16 15:56:03.657432383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1omY_info:
	.quad	_c1omY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.660167555 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.fromRational_closure
.type GHC.Real.fromRational_closure, @object
GHC.Real.fromRational_closure:
	.quad	GHC.Real.fromRational_info


==================== Asm code ====================
2018-03-16 15:56:03.661839424 UTC

.section .text
.align 8
.globl GHC.Real.fromRational_entry
.type GHC.Real.fromRational_entry, @object
GHC.Real.fromRational_entry:
_c1ono:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1onp
_c1onq:
	movq $block_c1onl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1onl
_c1onm:
	movq (%rbx),%rax
	jmp *(%rax)
_c1onp:
	movl $GHC.Real.fromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.fromRational_entry, .-GHC.Real.fromRational_entry


==================== Asm code ====================
2018-03-16 15:56:03.662476031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.fromRational_info
.type GHC.Real.fromRational_info, @object
GHC.Real.fromRational_info:
	.quad	GHC.Real.fromRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.66308994 UTC

.section .text
.align 8
_c1onl:
_c1onl:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1onl, .-_c1onl


==================== Asm code ====================
2018-03-16 15:56:03.663631917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1onl_info:
	.quad	_c1onl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.66659803 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Integral_closure
.type GHC.Real.$p1Integral_closure, @object
GHC.Real.$p1Integral_closure:
	.quad	GHC.Real.$p1Integral_info


==================== Asm code ====================
2018-03-16 15:56:03.667356871 UTC

.section .text
.align 8
.globl GHC.Real.$p1Integral_entry
.type GHC.Real.$p1Integral_entry, @object
GHC.Real.$p1Integral_entry:
_c1onL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1onM
_c1onN:
	movq $block_c1onI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1onI
_c1onJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1onM:
	movl $GHC.Real.$p1Integral_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p1Integral_entry, .-GHC.Real.$p1Integral_entry


==================== Asm code ====================
2018-03-16 15:56:03.668010318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Integral_info
.type GHC.Real.$p1Integral_info, @object
GHC.Real.$p1Integral_info:
	.quad	GHC.Real.$p1Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.668651572 UTC

.section .text
.align 8
_c1onI:
_c1onI:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1onI, .-_c1onI


==================== Asm code ====================
2018-03-16 15:56:03.669216348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1onI_info:
	.quad	_c1onI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.671985116 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2Integral_closure
.type GHC.Real.$p2Integral_closure, @object
GHC.Real.$p2Integral_closure:
	.quad	GHC.Real.$p2Integral_info


==================== Asm code ====================
2018-03-16 15:56:03.672728469 UTC

.section .text
.align 8
.globl GHC.Real.$p2Integral_entry
.type GHC.Real.$p2Integral_entry, @object
GHC.Real.$p2Integral_entry:
_c1ooa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oob
_c1ooc:
	movq $block_c1oo7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oo7
_c1oo8:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oob:
	movl $GHC.Real.$p2Integral_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p2Integral_entry, .-GHC.Real.$p2Integral_entry


==================== Asm code ====================
2018-03-16 15:56:03.673414525 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2Integral_info
.type GHC.Real.$p2Integral_info, @object
GHC.Real.$p2Integral_info:
	.quad	GHC.Real.$p2Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.674050029 UTC

.section .text
.align 8
_c1oo7:
_c1oo7:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oo7, .-_c1oo7


==================== Asm code ====================
2018-03-16 15:56:03.674600789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oo7_info:
	.quad	_c1oo7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.677306574 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.quot_closure
.type GHC.Real.quot_closure, @object
GHC.Real.quot_closure:
	.quad	GHC.Real.quot_info


==================== Asm code ====================
2018-03-16 15:56:03.678097908 UTC

.section .text
.align 8
.globl GHC.Real.quot_entry
.type GHC.Real.quot_entry, @object
GHC.Real.quot_entry:
_c1ooz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ooA
_c1ooB:
	movq $block_c1oow_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oow
_c1oox:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ooA:
	movl $GHC.Real.quot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.quot_entry, .-GHC.Real.quot_entry


==================== Asm code ====================
2018-03-16 15:56:03.678738486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.quot_info
.type GHC.Real.quot_info, @object
GHC.Real.quot_info:
	.quad	GHC.Real.quot_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.679379269 UTC

.section .text
.align 8
_c1oow:
_c1oow:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oow, .-_c1oow


==================== Asm code ====================
2018-03-16 15:56:03.67991023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oow_info:
	.quad	_c1oow
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.682708092 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.rem_closure
.type GHC.Real.rem_closure, @object
GHC.Real.rem_closure:
	.quad	GHC.Real.rem_info


==================== Asm code ====================
2018-03-16 15:56:03.683524101 UTC

.section .text
.align 8
.globl GHC.Real.rem_entry
.type GHC.Real.rem_entry, @object
GHC.Real.rem_entry:
_c1ooW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ooX
_c1ooY:
	movq $block_c1ooT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ooT
_c1ooU:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ooX:
	movl $GHC.Real.rem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.rem_entry, .-GHC.Real.rem_entry


==================== Asm code ====================
2018-03-16 15:56:03.684210083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.rem_info
.type GHC.Real.rem_info, @object
GHC.Real.rem_info:
	.quad	GHC.Real.rem_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.684782211 UTC

.section .text
.align 8
_c1ooT:
_c1ooT:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1ooT, .-_c1ooT


==================== Asm code ====================
2018-03-16 15:56:03.685367063 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ooT_info:
	.quad	_c1ooT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.688206894 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.div_closure
.type GHC.Real.div_closure, @object
GHC.Real.div_closure:
	.quad	GHC.Real.div_info


==================== Asm code ====================
2018-03-16 15:56:03.689544883 UTC

.section .text
.align 8
.globl GHC.Real.div_entry
.type GHC.Real.div_entry, @object
GHC.Real.div_entry:
_c1opj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1opk
_c1opl:
	movq $block_c1opg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1opg
_c1oph:
	movq (%rbx),%rax
	jmp *(%rax)
_c1opk:
	movl $GHC.Real.div_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.div_entry, .-GHC.Real.div_entry


==================== Asm code ====================
2018-03-16 15:56:03.690211016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.div_info
.type GHC.Real.div_info, @object
GHC.Real.div_info:
	.quad	GHC.Real.div_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.690843811 UTC

.section .text
.align 8
_c1opg:
_c1opg:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1opg, .-_c1opg


==================== Asm code ====================
2018-03-16 15:56:03.691413761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1opg_info:
	.quad	_c1opg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.694108869 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.mod_closure
.type GHC.Real.mod_closure, @object
GHC.Real.mod_closure:
	.quad	GHC.Real.mod_info


==================== Asm code ====================
2018-03-16 15:56:03.694863511 UTC

.section .text
.align 8
.globl GHC.Real.mod_entry
.type GHC.Real.mod_entry, @object
GHC.Real.mod_entry:
_c1opG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1opH
_c1opI:
	movq $block_c1opD_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1opD
_c1opE:
	movq (%rbx),%rax
	jmp *(%rax)
_c1opH:
	movl $GHC.Real.mod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.mod_entry, .-GHC.Real.mod_entry


==================== Asm code ====================
2018-03-16 15:56:03.695525605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.mod_info
.type GHC.Real.mod_info, @object
GHC.Real.mod_info:
	.quad	GHC.Real.mod_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.696150399 UTC

.section .text
.align 8
_c1opD:
_c1opD:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1opD, .-_c1opD


==================== Asm code ====================
2018-03-16 15:56:03.696720611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1opD_info:
	.quad	_c1opD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.699415145 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.quotRem_closure
.type GHC.Real.quotRem_closure, @object
GHC.Real.quotRem_closure:
	.quad	GHC.Real.quotRem_info


==================== Asm code ====================
2018-03-16 15:56:03.700120029 UTC

.section .text
.align 8
.globl GHC.Real.quotRem_entry
.type GHC.Real.quotRem_entry, @object
GHC.Real.quotRem_entry:
_c1oq3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oq4
_c1oq5:
	movq $block_c1oq0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oq0
_c1oq1:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oq4:
	movl $GHC.Real.quotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.quotRem_entry, .-GHC.Real.quotRem_entry


==================== Asm code ====================
2018-03-16 15:56:03.700775993 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.quotRem_info
.type GHC.Real.quotRem_info, @object
GHC.Real.quotRem_info:
	.quad	GHC.Real.quotRem_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.701453977 UTC

.section .text
.align 8
_c1oq0:
_c1oq0:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oq0, .-_c1oq0


==================== Asm code ====================
2018-03-16 15:56:03.702052863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oq0_info:
	.quad	_c1oq0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.704650989 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.divMod_closure
.type GHC.Real.divMod_closure, @object
GHC.Real.divMod_closure:
	.quad	GHC.Real.divMod_info


==================== Asm code ====================
2018-03-16 15:56:03.705418144 UTC

.section .text
.align 8
.globl GHC.Real.divMod_entry
.type GHC.Real.divMod_entry, @object
GHC.Real.divMod_entry:
_c1oqq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oqr
_c1oqs:
	movq $block_c1oqn_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oqn
_c1oqo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oqr:
	movl $GHC.Real.divMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.divMod_entry, .-GHC.Real.divMod_entry


==================== Asm code ====================
2018-03-16 15:56:03.706061269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.divMod_info
.type GHC.Real.divMod_info, @object
GHC.Real.divMod_info:
	.quad	GHC.Real.divMod_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.706688185 UTC

.section .text
.align 8
_c1oqn:
_c1oqn:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oqn, .-_c1oqn


==================== Asm code ====================
2018-03-16 15:56:03.70723157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oqn_info:
	.quad	_c1oqn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.710083987 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.toInteger_closure
.type GHC.Real.toInteger_closure, @object
GHC.Real.toInteger_closure:
	.quad	GHC.Real.toInteger_info


==================== Asm code ====================
2018-03-16 15:56:03.710854269 UTC

.section .text
.align 8
.globl GHC.Real.toInteger_entry
.type GHC.Real.toInteger_entry, @object
GHC.Real.toInteger_entry:
_c1oqN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oqO
_c1oqP:
	movq $block_c1oqK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oqK
_c1oqL:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oqO:
	movl $GHC.Real.toInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.toInteger_entry, .-GHC.Real.toInteger_entry


==================== Asm code ====================
2018-03-16 15:56:03.711521433 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.toInteger_info
.type GHC.Real.toInteger_info, @object
GHC.Real.toInteger_info:
	.quad	GHC.Real.toInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.712144909 UTC

.section .text
.align 8
_c1oqK:
_c1oqK:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oqK, .-_c1oqK


==================== Asm code ====================
2018-03-16 15:56:03.712757259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oqK_info:
	.quad	_c1oqK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.716158165 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Real_closure
.type GHC.Real.$p1Real_closure, @object
GHC.Real.$p1Real_closure:
	.quad	GHC.Real.$p1Real_info


==================== Asm code ====================
2018-03-16 15:56:03.717428619 UTC

.section .text
.align 8
.globl GHC.Real.$p1Real_entry
.type GHC.Real.$p1Real_entry, @object
GHC.Real.$p1Real_entry:
_c1ora:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1orb
_c1orc:
	movq $block_c1or7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1or7
_c1or8:
	movq (%rbx),%rax
	jmp *(%rax)
_c1orb:
	movl $GHC.Real.$p1Real_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p1Real_entry, .-GHC.Real.$p1Real_entry


==================== Asm code ====================
2018-03-16 15:56:03.71811336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Real_info
.type GHC.Real.$p1Real_info, @object
GHC.Real.$p1Real_info:
	.quad	GHC.Real.$p1Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.718803421 UTC

.section .text
.align 8
_c1or7:
_c1or7:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1or7, .-_c1or7


==================== Asm code ====================
2018-03-16 15:56:03.71933621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1or7_info:
	.quad	_c1or7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.722162018 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2Real_closure
.type GHC.Real.$p2Real_closure, @object
GHC.Real.$p2Real_closure:
	.quad	GHC.Real.$p2Real_info


==================== Asm code ====================
2018-03-16 15:56:03.722940774 UTC

.section .text
.align 8
.globl GHC.Real.$p2Real_entry
.type GHC.Real.$p2Real_entry, @object
GHC.Real.$p2Real_entry:
_c1orz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1orA
_c1orB:
	movq $block_c1orw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1orw
_c1orx:
	movq (%rbx),%rax
	jmp *(%rax)
_c1orA:
	movl $GHC.Real.$p2Real_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p2Real_entry, .-GHC.Real.$p2Real_entry


==================== Asm code ====================
2018-03-16 15:56:03.723575166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2Real_info
.type GHC.Real.$p2Real_info, @object
GHC.Real.$p2Real_info:
	.quad	GHC.Real.$p2Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.724226422 UTC

.section .text
.align 8
_c1orw:
_c1orw:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1orw, .-_c1orw


==================== Asm code ====================
2018-03-16 15:56:03.724770001 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1orw_info:
	.quad	_c1orw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.727540571 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.toRational_closure
.type GHC.Real.toRational_closure, @object
GHC.Real.toRational_closure:
	.quad	GHC.Real.toRational_info


==================== Asm code ====================
2018-03-16 15:56:03.728276071 UTC

.section .text
.align 8
.globl GHC.Real.toRational_entry
.type GHC.Real.toRational_entry, @object
GHC.Real.toRational_entry:
_c1orY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1orZ
_c1os0:
	movq $block_c1orV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1orV
_c1orW:
	movq (%rbx),%rax
	jmp *(%rax)
_c1orZ:
	movl $GHC.Real.toRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.toRational_entry, .-GHC.Real.toRational_entry


==================== Asm code ====================
2018-03-16 15:56:03.728911377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.toRational_info
.type GHC.Real.toRational_info, @object
GHC.Real.toRational_info:
	.quad	GHC.Real.toRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.729587389 UTC

.section .text
.align 8
_c1orV:
_c1orV:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1orV, .-_c1orV


==================== Asm code ====================
2018-03-16 15:56:03.730147424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1orV_info:
	.quad	_c1orV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.732863695 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1RealFrac_closure
.type GHC.Real.$p1RealFrac_closure, @object
GHC.Real.$p1RealFrac_closure:
	.quad	GHC.Real.$p1RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:03.73374772 UTC

.section .text
.align 8
.globl GHC.Real.$p1RealFrac_entry
.type GHC.Real.$p1RealFrac_entry, @object
GHC.Real.$p1RealFrac_entry:
_c1osl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1osm
_c1osn:
	movq $block_c1osi_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1osi
_c1osj:
	movq (%rbx),%rax
	jmp *(%rax)
_c1osm:
	movl $GHC.Real.$p1RealFrac_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p1RealFrac_entry, .-GHC.Real.$p1RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:03.73438431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1RealFrac_info
.type GHC.Real.$p1RealFrac_info, @object
GHC.Real.$p1RealFrac_info:
	.quad	GHC.Real.$p1RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.735001601 UTC

.section .text
.align 8
_c1osi:
_c1osi:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1osi, .-_c1osi


==================== Asm code ====================
2018-03-16 15:56:03.735577716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1osi_info:
	.quad	_c1osi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.738395797 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2RealFrac_closure
.type GHC.Real.$p2RealFrac_closure, @object
GHC.Real.$p2RealFrac_closure:
	.quad	GHC.Real.$p2RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:03.739154523 UTC

.section .text
.align 8
.globl GHC.Real.$p2RealFrac_entry
.type GHC.Real.$p2RealFrac_entry, @object
GHC.Real.$p2RealFrac_entry:
_c1osK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1osL
_c1osM:
	movq $block_c1osH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1osH
_c1osI:
	movq (%rbx),%rax
	jmp *(%rax)
_c1osL:
	movl $GHC.Real.$p2RealFrac_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$p2RealFrac_entry, .-GHC.Real.$p2RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:03.739810456 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2RealFrac_info
.type GHC.Real.$p2RealFrac_info, @object
GHC.Real.$p2RealFrac_info:
	.quad	GHC.Real.$p2RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.740438055 UTC

.section .text
.align 8
_c1osH:
_c1osH:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1osH, .-_c1osH


==================== Asm code ====================
2018-03-16 15:56:03.741008165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1osH_info:
	.quad	_c1osH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.744182755 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.properFraction_closure
.type GHC.Real.properFraction_closure, @object
GHC.Real.properFraction_closure:
	.quad	GHC.Real.properFraction_info


==================== Asm code ====================
2018-03-16 15:56:03.744918359 UTC

.section .text
.align 8
.globl GHC.Real.properFraction_entry
.type GHC.Real.properFraction_entry, @object
GHC.Real.properFraction_entry:
_c1ot9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ota
_c1otb:
	movq $block_c1ot6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ot6
_c1ot7:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ota:
	movl $GHC.Real.properFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.properFraction_entry, .-GHC.Real.properFraction_entry


==================== Asm code ====================
2018-03-16 15:56:03.745605235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.properFraction_info
.type GHC.Real.properFraction_info, @object
GHC.Real.properFraction_info:
	.quad	GHC.Real.properFraction_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.746233857 UTC

.section .text
.align 8
_c1ot6:
_c1ot6:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1ot6, .-_c1ot6


==================== Asm code ====================
2018-03-16 15:56:03.746783993 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ot6_info:
	.quad	_c1ot6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.749367701 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.truncate_closure
.type GHC.Real.truncate_closure, @object
GHC.Real.truncate_closure:
	.quad	GHC.Real.truncate_info


==================== Asm code ====================
2018-03-16 15:56:03.750084573 UTC

.section .text
.align 8
.globl GHC.Real.truncate_entry
.type GHC.Real.truncate_entry, @object
GHC.Real.truncate_entry:
_c1otw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1otx
_c1oty:
	movq $block_c1ott_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ott
_c1otu:
	movq (%rbx),%rax
	jmp *(%rax)
_c1otx:
	movl $GHC.Real.truncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.truncate_entry, .-GHC.Real.truncate_entry


==================== Asm code ====================
2018-03-16 15:56:03.750681251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.truncate_info
.type GHC.Real.truncate_info, @object
GHC.Real.truncate_info:
	.quad	GHC.Real.truncate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.75127972 UTC

.section .text
.align 8
_c1ott:
_c1ott:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1ott, .-_c1ott


==================== Asm code ====================
2018-03-16 15:56:03.751815743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ott_info:
	.quad	_c1ott
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.75447782 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.round_closure
.type GHC.Real.round_closure, @object
GHC.Real.round_closure:
	.quad	GHC.Real.round_info


==================== Asm code ====================
2018-03-16 15:56:03.755183454 UTC

.section .text
.align 8
.globl GHC.Real.round_entry
.type GHC.Real.round_entry, @object
GHC.Real.round_entry:
_c1otT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1otU
_c1otV:
	movq $block_c1otQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1otQ
_c1otR:
	movq (%rbx),%rax
	jmp *(%rax)
_c1otU:
	movl $GHC.Real.round_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.round_entry, .-GHC.Real.round_entry


==================== Asm code ====================
2018-03-16 15:56:03.7557886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.round_info
.type GHC.Real.round_info, @object
GHC.Real.round_info:
	.quad	GHC.Real.round_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.756378293 UTC

.section .text
.align 8
_c1otQ:
_c1otQ:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1otQ, .-_c1otQ


==================== Asm code ====================
2018-03-16 15:56:03.756949242 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1otQ_info:
	.quad	_c1otQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.759948701 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ceiling_closure
.type GHC.Real.ceiling_closure, @object
GHC.Real.ceiling_closure:
	.quad	GHC.Real.ceiling_info


==================== Asm code ====================
2018-03-16 15:56:03.760652364 UTC

.section .text
.align 8
.globl GHC.Real.ceiling_entry
.type GHC.Real.ceiling_entry, @object
GHC.Real.ceiling_entry:
_c1oug:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ouh
_c1oui:
	movq $block_c1oud_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oud
_c1oue:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ouh:
	movl $GHC.Real.ceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.ceiling_entry, .-GHC.Real.ceiling_entry


==================== Asm code ====================
2018-03-16 15:56:03.761351483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.ceiling_info
.type GHC.Real.ceiling_info, @object
GHC.Real.ceiling_info:
	.quad	GHC.Real.ceiling_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.761988216 UTC

.section .text
.align 8
_c1oud:
_c1oud:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oud, .-_c1oud


==================== Asm code ====================
2018-03-16 15:56:03.762556638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oud_info:
	.quad	_c1oud
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.765317892 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.floor_closure
.type GHC.Real.floor_closure, @object
GHC.Real.floor_closure:
	.quad	GHC.Real.floor_info


==================== Asm code ====================
2018-03-16 15:56:03.766128423 UTC

.section .text
.align 8
.globl GHC.Real.floor_entry
.type GHC.Real.floor_entry, @object
GHC.Real.floor_entry:
_c1ouD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ouE
_c1ouF:
	movq $block_c1ouA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ouA
_c1ouB:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ouE:
	movl $GHC.Real.floor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.floor_entry, .-GHC.Real.floor_entry


==================== Asm code ====================
2018-03-16 15:56:03.766807019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.floor_info
.type GHC.Real.floor_info, @object
GHC.Real.floor_info:
	.quad	GHC.Real.floor_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.76742248 UTC

.section .text
.align 8
_c1ouA:
_c1ouA:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1ouA, .-_c1ouA


==================== Asm code ====================
2018-03-16 15:56:03.767961692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ouA_info:
	.quad	_c1ouA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.771379036 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$W:%_closure
.type GHC.Real.$W:%_closure, @object
GHC.Real.$W:%_closure:
	.quad	GHC.Real.$W:%_info


==================== Asm code ====================
2018-03-16 15:56:03.772589412 UTC

.section .text
.align 8
.globl GHC.Real.$W:%_entry
.type GHC.Real.$W:%_entry, @object
GHC.Real.$W:%_entry:
_c1ov2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ov3
_c1ov4:
	movq $block_c1ouX_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_0_fast
_c1ov3:
	movl $GHC.Real.$W:%_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$W:%_entry, .-GHC.Real.$W:%_entry


==================== Asm code ====================
2018-03-16 15:56:03.773235749 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$W:%_info
.type GHC.Real.$W:%_info, @object
GHC.Real.$W:%_info:
	.quad	GHC.Real.$W:%_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:03.773959305 UTC

.section .text
.align 8
_c1ouX:
_c1ouX:
	movq $block_c1ouZ_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_0_fast
	.size _c1ouX, .-_c1ouX


==================== Asm code ====================
2018-03-16 15:56:03.774552152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ouX_info:
	.quad	_c1ouX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.775270945 UTC

.section .text
.align 8
_c1ouZ:
_c1ouZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1ov8
_c1ov7:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ov8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1ouZ, .-_c1ouZ


==================== Asm code ====================
2018-03-16 15:56:03.775862372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ouZ_info:
	.quad	_c1ouZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.780316891 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c<_closure
.type GHC.Real.$fOrdRatio_$s$c<_closure, @object
GHC.Real.$fOrdRatio_$s$c<_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c<_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.781142786 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c<_entry
.type GHC.Real.$fOrdRatio_$s$c<_entry, @object
GHC.Real.$fOrdRatio_$s$c<_entry:
_c1ovt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ovK
_c1ovL:
	movq $block_c1ovq_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1ovq
_c1ovr:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ovK:
	movl $GHC.Real.$fOrdRatio_$s$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c<_entry, .-GHC.Real.$fOrdRatio_$s$c<_entry


==================== Asm code ====================
2018-03-16 15:56:03.783867963 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c<_info
.type GHC.Real.$fOrdRatio_$s$c<_info, @object
GHC.Real.$fOrdRatio_$s$c<_info:
	.quad	GHC.Real.$fOrdRatio_$s$c<_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.784607762 UTC

.section .text
.align 8
_c1ovq:
_c1ovq:
	movq $block_c1ovw_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ovw
_c1ovx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1ovq, .-_c1ovq


==================== Asm code ====================
2018-03-16 15:56:03.785207947 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ovq_info:
	.quad	_c1ovq
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.785909679 UTC

.section .text
.align 8
_c1ovw:
_c1ovw:
	movq $block_c1ovB_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1ovw, .-_c1ovw


==================== Asm code ====================
2018-03-16 15:56:03.786504672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ovw_info:
	.quad	_c1ovw
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.787150865 UTC

.section .text
.align 8
_c1ovB:
_c1ovB:
	movq 8(%rbp),%rax
	movq $block_c1ovF_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1ovB, .-_c1ovB


==================== Asm code ====================
2018-03-16 15:56:03.787754285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ovB_info:
	.quad	_c1ovB
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.788394385 UTC

.section .text
.align 8
_c1ovF:
_c1ovF:
	movq 8(%rbp),%rax
	movq $block_c1ovJ_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c1ovF, .-_c1ovF


==================== Asm code ====================
2018-03-16 15:56:03.788978384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ovF_info:
	.quad	_c1ovF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.789650633 UTC

.section .text
.align 8
_c1ovJ:
_c1ovJ:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1ovJ, .-_c1ovJ


==================== Asm code ====================
2018-03-16 15:56:03.790210625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ovJ_info:
	.quad	_c1ovJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.794774788 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c<=_closure
.type GHC.Real.$fEnumRatio_$s$c<=_closure, @object
GHC.Real.$fEnumRatio_$s$c<=_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c<=_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.795606132 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c<=_entry
.type GHC.Real.$fEnumRatio_$s$c<=_entry, @object
GHC.Real.$fEnumRatio_$s$c<=_entry:
_c1ows:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1owJ
_c1owK:
	movq $block_c1owp_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1owp
_c1owq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1owJ:
	movl $GHC.Real.$fEnumRatio_$s$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c<=_entry, .-GHC.Real.$fEnumRatio_$s$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:03.796241111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c<=_info
.type GHC.Real.$fEnumRatio_$s$c<=_info, @object
GHC.Real.$fEnumRatio_$s$c<=_info:
	.quad	GHC.Real.$fEnumRatio_$s$c<=_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.796982067 UTC

.section .text
.align 8
_c1owp:
_c1owp:
	movq $block_c1owv_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1owv
_c1oww:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1owp, .-_c1owp


==================== Asm code ====================
2018-03-16 15:56:03.797683499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1owp_info:
	.quad	_c1owp
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.798337036 UTC

.section .text
.align 8
_c1owv:
_c1owv:
	movq $block_c1owA_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1owv, .-_c1owv


==================== Asm code ====================
2018-03-16 15:56:03.798944702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1owv_info:
	.quad	_c1owv
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.799599714 UTC

.section .text
.align 8
_c1owA:
_c1owA:
	movq 8(%rbp),%rax
	movq $block_c1owE_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1owA, .-_c1owA


==================== Asm code ====================
2018-03-16 15:56:03.800244753 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1owA_info:
	.quad	_c1owA
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.801393058 UTC

.section .text
.align 8
_c1owE:
_c1owE:
	movq 8(%rbp),%rax
	movq $block_c1owI_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c1owE, .-_c1owE


==================== Asm code ====================
2018-03-16 15:56:03.801973207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1owE_info:
	.quad	_c1owE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.802622353 UTC

.section .text
.align 8
_c1owI:
_c1owI:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1owI, .-_c1owI


==================== Asm code ====================
2018-03-16 15:56:03.80318308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1owI_info:
	.quad	_c1owI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.808226344 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$ccompare_closure
.type GHC.Real.$w$s$ccompare_closure, @object
GHC.Real.$w$s$ccompare_closure:
	.quad	GHC.Real.$w$s$ccompare_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.80906113 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$ccompare_entry
.type GHC.Real.$w$s$ccompare_entry, @object
GHC.Real.$w$s$ccompare_entry:
_c1oxq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oxr
_c1oxs:
	movq $block_c1oxo_info,-40(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1oxr:
	movl $GHC.Real.$w$s$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$ccompare_entry, .-GHC.Real.$w$s$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:03.809792026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$ccompare_info
.type GHC.Real.$w$s$ccompare_info, @object
GHC.Real.$w$s$ccompare_info:
	.quad	GHC.Real.$w$s$ccompare_entry
	.quad	0
	.quad	38654705678
	.quad	17179869208
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.810482381 UTC

.section .text
.align 8
_c1oxo:
_c1oxo:
	cmpq $1,%rbx
	je _c1oy3
_u1oye:
	addq $8,%rbp
	jmp _s1j7E
_c1oy3:
	movq $block_c1oy2_info,(%rbp)
	movq 32(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1oxo, .-_c1oxo


==================== Asm code ====================
2018-03-16 15:56:03.811064573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oxo_info:
	.quad	_c1oxo
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.811752368 UTC

.section .text
.align 8
_c1oy2:
_c1oy2:
	cmpq $1,%rbx
	je _c1oyd
_u1oyf:
	addq $8,%rbp
	jmp _s1j7E
_c1oyd:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oy2, .-_c1oy2


==================== Asm code ====================
2018-03-16 15:56:03.812357579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oy2_info:
	.quad	_c1oy2
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.813007713 UTC

.section .text
.align 8
_s1j7E:
_s1j7E:
	movq $block_c1oxB_info,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _s1j7E, .-_s1j7E


==================== Asm code ====================
2018-03-16 15:56:03.813746972 UTC

.section .text
.align 8
_c1oxB:
_c1oxB:
	movq $block_c1oxF_info,24(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1oxB, .-_c1oxB


==================== Asm code ====================
2018-03-16 15:56:03.814316822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oxB_info:
	.quad	_c1oxB
	.quad	388
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.815022226 UTC

.section .text
.align 8
_c1oxF:
_c1oxF:
	movq 8(%rbp),%rax
	movq $block_c1oxL_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c1oxF, .-_c1oxF


==================== Asm code ====================
2018-03-16 15:56:03.815603661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oxF_info:
	.quad	_c1oxF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.816297122 UTC

.section .text
.align 8
_c1oxL:
_c1oxL:
	cmpq $1,%rbx
	je _c1oxW
_c1oxS:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oxW:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oxL, .-_c1oxL


==================== Asm code ====================
2018-03-16 15:56:03.816891657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oxL_info:
	.quad	_c1oxL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.820463844 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$ccompare_closure
.type GHC.Real.$fEnumRatio_$s$ccompare_closure, @object
GHC.Real.$fEnumRatio_$s$ccompare_closure:
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.821227716 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$ccompare_entry
.type GHC.Real.$fEnumRatio_$s$ccompare_entry, @object
GHC.Real.$fEnumRatio_$s$ccompare_entry:
_c1oyO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oyS
_c1oyT:
	movq $block_c1oyL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oyL
_c1oyM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oyS:
	movl $GHC.Real.$fEnumRatio_$s$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$ccompare_entry, .-GHC.Real.$fEnumRatio_$s$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:03.821928042 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$ccompare_info
.type GHC.Real.$fEnumRatio_$s$ccompare_info, @object
GHC.Real.$fEnumRatio_$s$ccompare_info:
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.822678687 UTC

.section .text
.align 8
_c1oyL:
_c1oyL:
	movq $block_c1oyR_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oyR
_c1oyV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oyL, .-_c1oyL


==================== Asm code ====================
2018-03-16 15:56:03.823333553 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oyL_info:
	.quad	_c1oyL
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.823962999 UTC

.section .text
.align 8
_c1oyR:
_c1oyR:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1oyR, .-_c1oyR


==================== Asm code ====================
2018-03-16 15:56:03.824576155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oyR_info:
	.quad	_c1oyR
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.82930762 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c>=_closure
.type GHC.Real.$fEnumRatio_$s$c>=_closure, @object
GHC.Real.$fEnumRatio_$s$c>=_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c>=_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.830106203 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c>=_entry
.type GHC.Real.$fEnumRatio_$s$c>=_entry, @object
GHC.Real.$fEnumRatio_$s$c>=_entry:
_c1ozm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ozq
_c1ozr:
	movq $block_c1ozj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1ozj
_c1ozk:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ozq:
	movl $GHC.Real.$fEnumRatio_$s$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c>=_entry, .-GHC.Real.$fEnumRatio_$s$c>=_entry


==================== Asm code ====================
2018-03-16 15:56:03.830753772 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c>=_info
.type GHC.Real.$fEnumRatio_$s$c>=_info, @object
GHC.Real.$fEnumRatio_$s$c>=_info:
	.quad	GHC.Real.$fEnumRatio_$s$c>=_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.831461202 UTC

.section .text
.align 8
_c1ozj:
_c1ozj:
	movq $block_c1ozp_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ozp
_c1ozt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1ozj, .-_c1ozj


==================== Asm code ====================
2018-03-16 15:56:03.832065437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ozj_info:
	.quad	_c1ozj
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.832708066 UTC

.section .text
.align 8
_c1ozp:
_c1ozp:
	movq 16(%rbp),%rax
	movq $block_c1ozx_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1ozp, .-_c1ozp


==================== Asm code ====================
2018-03-16 15:56:03.833378145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ozp_info:
	.quad	_c1ozp
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.834038013 UTC

.section .text
.align 8
_c1ozx:
_c1ozx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1ozI
_c1ozE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ozI:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1ozx, .-_c1ozx


==================== Asm code ====================
2018-03-16 15:56:03.834650058 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ozx_info:
	.quad	_c1ozx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.839200502 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c>_closure
.type GHC.Real.$fOrdRatio_$s$c>_closure, @object
GHC.Real.$fOrdRatio_$s$c>_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c>_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.84001325 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c>_entry
.type GHC.Real.$fOrdRatio_$s$c>_entry, @object
GHC.Real.$fOrdRatio_$s$c>_entry:
_c1oAd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oAh
_c1oAi:
	movq $block_c1oAa_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oAa
_c1oAb:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oAh:
	movl $GHC.Real.$fOrdRatio_$s$c>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c>_entry, .-GHC.Real.$fOrdRatio_$s$c>_entry


==================== Asm code ====================
2018-03-16 15:56:03.840604614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c>_info
.type GHC.Real.$fOrdRatio_$s$c>_info, @object
GHC.Real.$fOrdRatio_$s$c>_info:
	.quad	GHC.Real.$fOrdRatio_$s$c>_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.84145149 UTC

.section .text
.align 8
_c1oAa:
_c1oAa:
	movq $block_c1oAg_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oAg
_c1oAk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oAa, .-_c1oAa


==================== Asm code ====================
2018-03-16 15:56:03.842081782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oAa_info:
	.quad	_c1oAa
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.842759696 UTC

.section .text
.align 8
_c1oAg:
_c1oAg:
	movq 16(%rbp),%rax
	movq $block_c1oAo_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1oAg, .-_c1oAg


==================== Asm code ====================
2018-03-16 15:56:03.843361319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oAg_info:
	.quad	_c1oAg
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+24


==================== Asm code ====================
2018-03-16 15:56:03.844055098 UTC

.section .text
.align 8
_c1oAo:
_c1oAo:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1oAz
_c1oAv:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oAz:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oAo, .-_c1oAo


==================== Asm code ====================
2018-03-16 15:56:03.844693238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oAo_info:
	.quad	_c1oAo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.84960141 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmin_closure
.type GHC.Real.$fOrdRatio_$s$cmin_closure, @object
GHC.Real.$fOrdRatio_$s$cmin_closure:
	.quad	GHC.Real.$fOrdRatio_$s$cmin_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.850472088 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$cmin_entry
.type GHC.Real.$fOrdRatio_$s$cmin_entry, @object
GHC.Real.$fOrdRatio_$s$cmin_entry:
_c1oB4:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oBh
_c1oBi:
	movq $block_c1oB1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oB1
_c1oB2:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oBh:
	movl $GHC.Real.$fOrdRatio_$s$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$cmin_entry, .-GHC.Real.$fOrdRatio_$s$cmin_entry


==================== Asm code ====================
2018-03-16 15:56:03.851150111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmin_info
.type GHC.Real.$fOrdRatio_$s$cmin_info, @object
GHC.Real.$fOrdRatio_$s$cmin_info:
	.quad	GHC.Real.$fOrdRatio_$s$cmin_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.851888969 UTC

.section .text
.align 8
_c1oB1:
_c1oB1:
	movq $block_c1oB7_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oB7
_c1oB8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oB1, .-_c1oB1


==================== Asm code ====================
2018-03-16 15:56:03.852539244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oB1_info:
	.quad	_c1oB1
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.853211975 UTC

.section .text
.align 8
_c1oB7:
_c1oB7:
	movq $block_c1oBc_info,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1oB7, .-_c1oB7


==================== Asm code ====================
2018-03-16 15:56:03.85384287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oB7_info:
	.quad	_c1oB7
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.854504267 UTC

.section .text
.align 8
_c1oBc:
_c1oBc:
	movq 8(%rbp),%rax
	movq $block_c1oBg_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1oBc, .-_c1oBc


==================== Asm code ====================
2018-03-16 15:56:03.855575664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oBc_info:
	.quad	_c1oBc
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.856199022 UTC

.section .text
.align 8
_c1oBg:
_c1oBg:
	movq $block_c1oBp_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c1oBg, .-_c1oBg


==================== Asm code ====================
2018-03-16 15:56:03.85677926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oBg_info:
	.quad	_c1oBg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.85754486 UTC

.section .text
.align 8
_c1oBp:
_c1oBp:
	cmpq $1,%rbx
	je _c1oBA
_c1oBw:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1oBA:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oBp, .-_c1oBp


==================== Asm code ====================
2018-03-16 15:56:03.858153857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oBp_info:
	.quad	_c1oBp
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.86298993 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmax_closure
.type GHC.Real.$fOrdRatio_$s$cmax_closure, @object
GHC.Real.$fOrdRatio_$s$cmax_closure:
	.quad	GHC.Real.$fOrdRatio_$s$cmax_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.863799662 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$cmax_entry
.type GHC.Real.$fOrdRatio_$s$cmax_entry, @object
GHC.Real.$fOrdRatio_$s$cmax_entry:
_c1oCb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oCo
_c1oCp:
	movq $block_c1oC8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oC8
_c1oC9:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oCo:
	movl $GHC.Real.$fOrdRatio_$s$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$cmax_entry, .-GHC.Real.$fOrdRatio_$s$cmax_entry


==================== Asm code ====================
2018-03-16 15:56:03.864406478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmax_info
.type GHC.Real.$fOrdRatio_$s$cmax_info, @object
GHC.Real.$fOrdRatio_$s$cmax_info:
	.quad	GHC.Real.$fOrdRatio_$s$cmax_entry
	.quad	0
	.quad	1103806595086
	.quad	8589934607
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.865094513 UTC

.section .text
.align 8
_c1oC8:
_c1oC8:
	movq $block_c1oCe_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oCe
_c1oCf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oC8, .-_c1oC8


==================== Asm code ====================
2018-03-16 15:56:03.865774946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oC8_info:
	.quad	_c1oC8
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.866438405 UTC

.section .text
.align 8
_c1oCe:
_c1oCe:
	movq $block_c1oCj_info,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1oCe, .-_c1oCe


==================== Asm code ====================
2018-03-16 15:56:03.867017526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oCe_info:
	.quad	_c1oCe
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.867666186 UTC

.section .text
.align 8
_c1oCj:
_c1oCj:
	movq 8(%rbp),%rax
	movq $block_c1oCn_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1oCj, .-_c1oCj


==================== Asm code ====================
2018-03-16 15:56:03.868253483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oCj_info:
	.quad	_c1oCj
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt


==================== Asm code ====================
2018-03-16 15:56:03.868907075 UTC

.section .text
.align 8
_c1oCn:
_c1oCn:
	movq $block_c1oCw_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c1oCn, .-_c1oCn


==================== Asm code ====================
2018-03-16 15:56:03.869545615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oCn_info:
	.quad	_c1oCn
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.870223842 UTC

.section .text
.align 8
_c1oCw:
_c1oCw:
	cmpq $1,%rbx
	je _c1oCH
_c1oCD:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1oCH:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oCw, .-_c1oCw


==================== Asm code ====================
2018-03-16 15:56:03.870809822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oCw_info:
	.quad	_c1oCw
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.874352863 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cnegate_closure
.type GHC.Real.$fFractionalRatio_$s$cnegate_closure, @object
GHC.Real.$fFractionalRatio_$s$cnegate_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_info


==================== Asm code ====================
2018-03-16 15:56:03.875124689 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cnegate_entry
.type GHC.Real.$fFractionalRatio_$s$cnegate_entry, @object
GHC.Real.$fFractionalRatio_$s$cnegate_entry:
_c1oDi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oDq
_c1oDr:
	movq $block_c1oDf_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oDf
_c1oDg:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oDq:
	movl $GHC.Real.$fFractionalRatio_$s$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cnegate_entry, .-GHC.Real.$fFractionalRatio_$s$cnegate_entry


==================== Asm code ====================
2018-03-16 15:56:03.875773071 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cnegate_info
.type GHC.Real.$fFractionalRatio_$s$cnegate_info, @object
GHC.Real.$fFractionalRatio_$s$cnegate_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.876404433 UTC

.section .text
.align 8
_c1oDf:
_c1oDf:
	movq $block_c1oDl_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c1oDf, .-_c1oDf


==================== Asm code ====================
2018-03-16 15:56:03.876961668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oDf_info:
	.quad	_c1oDf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.877705121 UTC

.section .text
.align 8
_c1oDl:
_c1oDl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oDv
_c1oDu:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oDv:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oDl, .-_c1oDl


==================== Asm code ====================
2018-03-16 15:56:03.878335869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oDl_info:
	.quad	_c1oDl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.881760973 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cabs_closure
.type GHC.Real.$fFractionalRatio_$s$cabs_closure, @object
GHC.Real.$fFractionalRatio_$s$cabs_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_info


==================== Asm code ====================
2018-03-16 15:56:03.883054821 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cabs_entry
.type GHC.Real.$fFractionalRatio_$s$cabs_entry, @object
GHC.Real.$fFractionalRatio_$s$cabs_entry:
_c1oDT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oE1
_c1oE2:
	movq $block_c1oDQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oDQ
_c1oDR:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oE1:
	movl $GHC.Real.$fFractionalRatio_$s$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cabs_entry, .-GHC.Real.$fFractionalRatio_$s$cabs_entry


==================== Asm code ====================
2018-03-16 15:56:03.883725371 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cabs_info
.type GHC.Real.$fFractionalRatio_$s$cabs_info, @object
GHC.Real.$fFractionalRatio_$s$cabs_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.884381779 UTC

.section .text
.align 8
_c1oDQ:
_c1oDQ:
	movq $block_c1oDW_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.absInteger_entry
	.size _c1oDQ, .-_c1oDQ


==================== Asm code ====================
2018-03-16 15:56:03.884978717 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oDQ_info:
	.quad	_c1oDQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.885734182 UTC

.section .text
.align 8
_c1oDW:
_c1oDW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oE6
_c1oE5:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oE6:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oDW, .-_c1oDW


==================== Asm code ====================
2018-03-16 15:56:03.886351541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oDW_info:
	.quad	_c1oDW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.887961747 UTC

.section .data
.align 8
.align 1
sat_s1j8G_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:03.889678086 UTC

.section .data
.align 8
.align 1
sat_s1j8H_closure:
	.quad	:_con_info
	.quad	sat_s1j8G_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.892365814 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio1_closure
.type GHC.Real.$fEnumRatio1_closure, @object
GHC.Real.$fEnumRatio1_closure:
	.quad	GHC.Real.$fEnumRatio1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.89337205 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio1_entry
.type GHC.Real.$fEnumRatio1_entry, @object
GHC.Real.$fEnumRatio1_entry:
_c1oEv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oEw
_c1oEx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1oEu
_c1oEt:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s1j8H_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c1oEw:
	jmp *-16(%r13)
_c1oEu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fEnumRatio1_entry, .-GHC.Real.$fEnumRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:03.894055594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio1_info
.type GHC.Real.$fEnumRatio1_info, @object
GHC.Real.$fEnumRatio1_info:
	.quad	GHC.Real.$fEnumRatio1_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+72


==================== Asm code ====================
2018-03-16 15:56:03.897344727 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$csignum_closure
.type GHC.Real.$fFractionalRatio_$s$csignum_closure, @object
GHC.Real.$fFractionalRatio_$s$csignum_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.898157015 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$csignum_entry
.type GHC.Real.$fFractionalRatio_$s$csignum_entry, @object
GHC.Real.$fFractionalRatio_$s$csignum_entry:
_c1oEM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oEU
_c1oEV:
	movq $block_c1oEJ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oEJ
_c1oEK:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oEU:
	movl $GHC.Real.$fFractionalRatio_$s$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$csignum_entry, .-GHC.Real.$fFractionalRatio_$s$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:03.898786485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$csignum_info
.type GHC.Real.$fFractionalRatio_$s$csignum_info, @object
GHC.Real.$fFractionalRatio_$s$csignum_info:
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.899434887 UTC

.section .text
.align 8
_c1oEJ:
_c1oEJ:
	movq $block_c1oEP_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c1oEJ, .-_c1oEJ


==================== Asm code ====================
2018-03-16 15:56:03.900012551 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oEJ_info:
	.quad	_c1oEJ
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.900693032 UTC

.section .text
.align 8
_c1oEP:
_c1oEP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oEZ
_c1oEY:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $GHC.Real.$fEnumRatio1_closure,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oEZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oEP, .-_c1oEP


==================== Asm code ====================
2018-03-16 15:56:03.901411032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oEP_info:
	.quad	_c1oEP
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.904482743 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_closure
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_closure, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.905372927 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_entry
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_entry, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_entry:
_c1oFl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oFp
_c1oFq:
	movq $block_c1oFi_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oFi
_c1oFj:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oFp:
	movl $GHC.Real.$fFractionalRatio_$s$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cfromInteger_entry, .-GHC.Real.$fFractionalRatio_$s$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:03.906054618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_info
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_info, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.906791816 UTC

.section .text
.align 8
_c1oFi:
_c1oFi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oFt
_c1oFs:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $GHC.Real.$fEnumRatio1_closure,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oFt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oFi, .-_c1oFi


==================== Asm code ====================
2018-03-16 15:56:03.907404852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oFi_info:
	.quad	_c1oFi
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.910814234 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealInteger_closure
.type GHC.Real.$fRealInteger_closure, @object
GHC.Real.$fRealInteger_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumInteger_closure
	.quad	GHC.Integer.Type.$fOrdInteger_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.913710478 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$ctoInteger_closure
.type GHC.Real.$fIntegralInt_$ctoInteger_closure, @object
GHC.Real.$fIntegralInt_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:03.914554503 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$ctoInteger_entry
.type GHC.Real.$fIntegralInt_$ctoInteger_entry, @object
GHC.Real.$fIntegralInt_$ctoInteger_entry:
_c1oFN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oFO
_c1oFP:
	movq $block_c1oFK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oFK
_c1oFL:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oFO:
	movl $GHC.Real.$fIntegralInt_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$ctoInteger_entry, .-GHC.Real.$fIntegralInt_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:03.915244259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$ctoInteger_info
.type GHC.Real.$fIntegralInt_$ctoInteger_info, @object
GHC.Real.$fIntegralInt_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.915882946 UTC

.section .text
.align 8
_c1oFK:
_c1oFK:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c1oFK, .-_c1oFK


==================== Asm code ====================
2018-03-16 15:56:03.91646983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oFK_info:
	.quad	_c1oFK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.919820235 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoRational_closure
.type GHC.Real.$fEnumRatio_$ctoRational_closure, @object
GHC.Real.$fEnumRatio_$ctoRational_closure:
	.quad	GHC.Real.$fEnumRatio_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.920584687 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$ctoRational_entry
.type GHC.Real.$fEnumRatio_$ctoRational_entry, @object
GHC.Real.$fEnumRatio_$ctoRational_entry:
_c1oGa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oGi
_c1oGj:
	movq $block_c1oG7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oG7
_c1oG8:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oGi:
	movl $GHC.Real.$fEnumRatio_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$ctoRational_entry, .-GHC.Real.$fEnumRatio_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:03.921301458 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoRational_info
.type GHC.Real.$fEnumRatio_$ctoRational_info, @object
GHC.Real.$fEnumRatio_$ctoRational_info:
	.quad	GHC.Real.$fEnumRatio_$ctoRational_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.921965835 UTC

.section .text
.align 8
_c1oG7:
_c1oG7:
	movq $block_c1oGd_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c1oG7, .-_c1oG7


==================== Asm code ====================
2018-03-16 15:56:03.92252938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oG7_info:
	.quad	_c1oG7
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.923240464 UTC

.section .text
.align 8
_c1oGd:
_c1oGd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oGn
_c1oGm:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq $GHC.Real.$fEnumRatio1_closure,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oGn:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oGd, .-_c1oGd


==================== Asm code ====================
2018-03-16 15:56:03.923830645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oGd_info:
	.quad	_c1oGd
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:03.9255522 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealInt_closure
.type GHC.Real.$fRealInt_closure, @object
GHC.Real.$fRealInt_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumInt_closure
	.quad	GHC.Classes.$fOrdInt_closure
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:03.928394889 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$ctoInteger_closure
.type GHC.Real.$fIntegralWord_$ctoInteger_closure, @object
GHC.Real.$fIntegralWord_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:03.929163022 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$ctoInteger_entry
.type GHC.Real.$fIntegralWord_$ctoInteger_entry, @object
GHC.Real.$fIntegralWord_$ctoInteger_entry:
_c1oGK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oGL
_c1oGM:
	movq $block_c1oGH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oGH
_c1oGI:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oGL:
	movl $GHC.Real.$fIntegralWord_$ctoInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$ctoInteger_entry, .-GHC.Real.$fIntegralWord_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:03.929864306 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$ctoInteger_info
.type GHC.Real.$fIntegralWord_$ctoInteger_info, @object
GHC.Real.$fIntegralWord_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.930521137 UTC

.section .text
.align 8
_c1oGH:
_c1oGH:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _c1oGH, .-_c1oGH


==================== Asm code ====================
2018-03-16 15:56:03.931085068 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oGH_info:
	.quad	_c1oGH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.933134796 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$ctoInteger_closure
.type GHC.Real.$fIntegralInteger_$ctoInteger_closure, @object
GHC.Real.$fIntegralInteger_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:03.933852567 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$ctoInteger_entry
.type GHC.Real.$fIntegralInteger_$ctoInteger_entry, @object
GHC.Real.$fIntegralInteger_$ctoInteger_entry:
_c1oH4:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fIntegralInteger_$ctoInteger_entry, .-GHC.Real.$fIntegralInteger_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:03.934440895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$ctoInteger_info
.type GHC.Real.$fIntegralInteger_$ctoInteger_info, @object
GHC.Real.$fIntegralInteger_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:03.939211411 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$s$c==_closure
.type GHC.Real.$fEqRatio_$s$c==_closure, @object
GHC.Real.$fEqRatio_$s$c==_closure:
	.quad	GHC.Real.$fEqRatio_$s$c==_info


==================== Asm code ====================
2018-03-16 15:56:03.940013248 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$s$c==_entry
.type GHC.Real.$fEqRatio_$s$c==_entry, @object
GHC.Real.$fEqRatio_$s$c==_entry:
_c1oHk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oHo
_c1oHp:
	movq $block_c1oHh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oHh
_c1oHi:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oHo:
	movl $GHC.Real.$fEqRatio_$s$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$s$c==_entry, .-GHC.Real.$fEqRatio_$s$c==_entry


==================== Asm code ====================
2018-03-16 15:56:03.940645854 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$s$c==_info
.type GHC.Real.$fEqRatio_$s$c==_info, @object
GHC.Real.$fEqRatio_$s$c==_info:
	.quad	GHC.Real.$fEqRatio_$s$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:03.941790095 UTC

.section .text
.align 8
_c1oHh:
_c1oHh:
	movq $block_c1oHn_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oHn
_c1oHr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oHh, .-_c1oHh


==================== Asm code ====================
2018-03-16 15:56:03.942411264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oHh_info:
	.quad	_c1oHh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.943001077 UTC

.section .text
.align 8
_c1oHn:
_c1oHn:
	movq $block_c1oHv_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1oHn, .-_c1oHn


==================== Asm code ====================
2018-03-16 15:56:03.943624752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oHn_info:
	.quad	_c1oHn
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.944284635 UTC

.section .text
.align 8
_c1oHv:
_c1oHv:
	cmpq $1,%rbx
	je _c1oHH
_c1oHC:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oHH:
	movq 16(%rbp),%rax
	movq $block_c1oHF_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1oHv, .-_c1oHv


==================== Asm code ====================
2018-03-16 15:56:03.944901641 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oHv_info:
	.quad	_c1oHv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.945558183 UTC

.section .text
.align 8
_c1oHF:
_c1oHF:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oHF, .-_c1oHF


==================== Asm code ====================
2018-03-16 15:56:03.946138719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oHF_info:
	.quad	_c1oHF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.950389089 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c==_closure
.type GHC.Real.$fEqRatio_$c==_closure, @object
GHC.Real.$fEqRatio_$c==_closure:
	.quad	GHC.Real.$fEqRatio_$c==_info


==================== Asm code ====================
2018-03-16 15:56:03.951181777 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$c==_entry
.type GHC.Real.$fEqRatio_$c==_entry, @object
GHC.Real.$fEqRatio_$c==_entry:
_c1oIi:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oIm
_c1oIn:
	movq $block_c1oIf_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1oIf
_c1oIg:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oIm:
	movl $GHC.Real.$fEqRatio_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$c==_entry, .-GHC.Real.$fEqRatio_$c==_entry


==================== Asm code ====================
2018-03-16 15:56:03.951837089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c==_info
.type GHC.Real.$fEqRatio_$c==_info, @object
GHC.Real.$fEqRatio_$c==_info:
	.quad	GHC.Real.$fEqRatio_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:03.952577659 UTC

.section .text
.align 8
_c1oIf:
_c1oIf:
	movq $block_c1oIl_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oIl
_c1oIp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oIf, .-_c1oIf


==================== Asm code ====================
2018-03-16 15:56:03.953169595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oIf_info:
	.quad	_c1oIf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.953858675 UTC

.section .text
.align 8
_c1oIl:
_c1oIl:
	movq $block_c1oIt_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1oIl, .-_c1oIl


==================== Asm code ====================
2018-03-16 15:56:03.95444175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oIl_info:
	.quad	_c1oIl
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.955112435 UTC

.section .text
.align 8
_c1oIt:
_c1oIt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1oIA
_c1oIE:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Classes.==_entry
_c1oIA:
	movl $GHC.Types.False_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oIt, .-_c1oIt


==================== Asm code ====================
2018-03-16 15:56:03.955715041 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oIt_info:
	.quad	_c1oIt
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.963926946 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c/=_closure
.type GHC.Real.$fOrdRatio_$s$c/=_closure, @object
GHC.Real.$fOrdRatio_$s$c/=_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c/=_info


==================== Asm code ====================
2018-03-16 15:56:03.965073024 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c/=_entry
.type GHC.Real.$fOrdRatio_$s$c/=_entry, @object
GHC.Real.$fOrdRatio_$s$c/=_entry:
_c1oJb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oJf
_c1oJg:
	movq $block_c1oJ8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oJ8
_c1oJ9:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oJf:
	movl $GHC.Real.$fOrdRatio_$s$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c/=_entry, .-GHC.Real.$fOrdRatio_$s$c/=_entry


==================== Asm code ====================
2018-03-16 15:56:03.966130091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c/=_info
.type GHC.Real.$fOrdRatio_$s$c/=_info, @object
GHC.Real.$fOrdRatio_$s$c/=_info:
	.quad	GHC.Real.$fOrdRatio_$s$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:03.967310173 UTC

.section .text
.align 8
_c1oJ8:
_c1oJ8:
	movq $block_c1oJe_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oJe
_c1oJi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oJ8, .-_c1oJ8


==================== Asm code ====================
2018-03-16 15:56:03.968221144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oJ8_info:
	.quad	_c1oJ8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.969175362 UTC

.section .text
.align 8
_c1oJe:
_c1oJe:
	movq $block_c1oJm_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1oJe, .-_c1oJe


==================== Asm code ====================
2018-03-16 15:56:03.970162933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oJe_info:
	.quad	_c1oJe
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.971847203 UTC

.section .text
.align 8
_c1oJm:
_c1oJm:
	cmpq $1,%rbx
	je _c1oJy
_u1oJJ:
	addq $24,%rbp
	jmp _c1oJE
_c1oJy:
	movq 16(%rbp),%rax
	movq $block_c1oJw_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1oJm, .-_c1oJm


==================== Asm code ====================
2018-03-16 15:56:03.972867987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oJm_info:
	.quad	_c1oJm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.973892715 UTC

.section .text
.align 8
_c1oJw:
_c1oJw:
	cmpq $1,%rbx
	je _c1oJI
_u1oJK:
	addq $8,%rbp
	jmp _c1oJE
_c1oJI:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oJw, .-_c1oJw


==================== Asm code ====================
2018-03-16 15:56:03.974835781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oJw_info:
	.quad	_c1oJw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.975758974 UTC

.section .text
.align 8
_c1oJE:
_c1oJE:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oJE, .-_c1oJE


==================== Asm code ====================
2018-03-16 15:56:03.984711121 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c/=_closure
.type GHC.Real.$fEqRatio_$c/=_closure, @object
GHC.Real.$fEqRatio_$c/=_closure:
	.quad	GHC.Real.$fEqRatio_$c/=_info


==================== Asm code ====================
2018-03-16 15:56:03.986048633 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$c/=_entry
.type GHC.Real.$fEqRatio_$c/=_entry, @object
GHC.Real.$fEqRatio_$c/=_entry:
_c1oKk:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oKo
_c1oKp:
	movq $block_c1oKh_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1oKh
_c1oKi:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oKo:
	movl $GHC.Real.$fEqRatio_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$c/=_entry, .-GHC.Real.$fEqRatio_$c/=_entry


==================== Asm code ====================
2018-03-16 15:56:03.987042814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c/=_info
.type GHC.Real.$fEqRatio_$c/=_info, @object
GHC.Real.$fEqRatio_$c/=_info:
	.quad	GHC.Real.$fEqRatio_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:03.988115388 UTC

.section .text
.align 8
_c1oKh:
_c1oKh:
	movq $block_c1oKn_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1oKn
_c1oKr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oKh, .-_c1oKh


==================== Asm code ====================
2018-03-16 15:56:03.989008889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oKh_info:
	.quad	_c1oKh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.990013516 UTC

.section .text
.align 8
_c1oKn:
_c1oKn:
	movq $block_c1oKv_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1oKn, .-_c1oKn


==================== Asm code ====================
2018-03-16 15:56:03.990970978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oKn_info:
	.quad	_c1oKn
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.991976873 UTC

.section .text
.align 8
_c1oKv:
_c1oKv:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1oKU
_c1oKH:
	movq 24(%rbp),%rax
	movq $block_c1oKF_info,24(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Classes.==_entry
_u1oKU:
	addq $32,%rbp
	jmp _c1oKN
	.size _c1oKv, .-_c1oKv


==================== Asm code ====================
2018-03-16 15:56:03.992921633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oKv_info:
	.quad	_c1oKv
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.993990729 UTC

.section .text
.align 8
_c1oKF:
_c1oKF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1oKV
_c1oKR:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1oKV:
	addq $8,%rbp
	jmp _c1oKN
	.size _c1oKF, .-_c1oKF


==================== Asm code ====================
2018-03-16 15:56:03.994885854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oKF_info:
	.quad	_c1oKF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:03.995699727 UTC

.section .text
.align 8
_c1oKN:
_c1oKN:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1oKN, .-_c1oKN


==================== Asm code ====================
2018-03-16 15:56:03.998287552 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$fEqRatio_closure
.type GHC.Real.$fOrdRatio_$s$fEqRatio_closure, @object
GHC.Real.$fOrdRatio_$s$fEqRatio_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Real.$fEqRatio_$s$c==_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:04.003468198 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_closure
.type GHC.Real.$fEqRatio_closure, @object
GHC.Real.$fEqRatio_closure:
	.quad	GHC.Real.$fEqRatio_info


==================== Asm code ====================
2018-03-16 15:56:04.004344028 UTC

.section .text
.align 8
sat_s1j9H_entry:
_c1oLE:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEqRatio_$c/=_entry
	.size sat_s1j9H_entry, .-sat_s1j9H_entry


==================== Asm code ====================
2018-03-16 15:56:04.005058202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1j9H_info:
	.quad	sat_s1j9H_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:04.005963226 UTC

.section .text
.align 8
sat_s1j9G_entry:
_c1oLM:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEqRatio_$c==_entry
	.size sat_s1j9G_entry, .-sat_s1j9G_entry


==================== Asm code ====================
2018-03-16 15:56:04.006726675 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1j9G_info:
	.quad	sat_s1j9G_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:04.007700413 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_entry
.type GHC.Real.$fEqRatio_entry, @object
GHC.Real.$fEqRatio_entry:
_c1oLQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1oLU
_c1oLT:
	movq $sat_s1j9H_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s1j9G_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Classes.C:Eq_con_info,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1oLU:
	movq $56,904(%r13)
	movl $GHC.Real.$fEqRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_entry, .-GHC.Real.$fEqRatio_entry


==================== Asm code ====================
2018-03-16 15:56:04.008638004 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_info
.type GHC.Real.$fEqRatio_info, @object
GHC.Real.$fEqRatio_info:
	.quad	GHC.Real.$fEqRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.011019929 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$fOrdRatio_closure
.type GHC.Real.$fOrdRatio_$s$fOrdRatio_closure, @object
GHC.Real.$fOrdRatio_$s$fOrdRatio_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Real.$fOrdRatio_$s$fEqRatio_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c<_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c>_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$cmax_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$cmin_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.015592807 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cp1Ord_closure
.type GHC.Real.$fOrdRatio_$cp1Ord_closure, @object
GHC.Real.$fOrdRatio_$cp1Ord_closure:
	.quad	GHC.Real.$fOrdRatio_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:56:04.016388391 UTC

.section .text
.align 8
sat_s1j9L_entry:
_c1oMj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oMn
_c1oMo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1oMh_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1oMn:
	jmp *-16(%r13)
	.size sat_s1j9L_entry, .-sat_s1j9L_entry


==================== Asm code ====================
2018-03-16 15:56:04.01692917 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1j9L_info:
	.quad	sat_s1j9L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.017583276 UTC

.section .text
.align 8
_c1oMh:
_c1oMh:
	movq $block_c1oMm_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1oMh, .-_c1oMh


==================== Asm code ====================
2018-03-16 15:56:04.018112066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oMh_info:
	.quad	_c1oMh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.01873715 UTC

.section .text
.align 8
_c1oMm:
_c1oMm:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Classes.$p1Ord_entry
	.size _c1oMm, .-_c1oMm


==================== Asm code ====================
2018-03-16 15:56:04.01924042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oMm_info:
	.quad	_c1oMm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.019901475 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cp1Ord_entry
.type GHC.Real.$fOrdRatio_$cp1Ord_entry, @object
GHC.Real.$fOrdRatio_$cp1Ord_entry:
_c1oMu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oMy
_c1oMx:
	movq $sat_s1j9L_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Real.$fEqRatio_entry
_c1oMy:
	movq $24,904(%r13)
	movl $GHC.Real.$fOrdRatio_$cp1Ord_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cp1Ord_entry, .-GHC.Real.$fOrdRatio_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:56:04.020479302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cp1Ord_info
.type GHC.Real.$fOrdRatio_$cp1Ord_info, @object
GHC.Real.$fOrdRatio_$cp1Ord_info:
	.quad	GHC.Real.$fOrdRatio_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.023196018 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even1_closure
.type GHC.Real.even1_closure, @object
GHC.Real.even1_closure:
	.quad	GHC.Real.even1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.024024913 UTC

.section .text
.align 8
.globl GHC.Real.even1_entry
.type GHC.Real.even1_entry, @object
GHC.Real.even1_entry:
_c1oMT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oMU
_c1oMV:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1oMS
_c1oMR:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c1oMU:
	jmp *-16(%r13)
_c1oMS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.even1_entry, .-GHC.Real.even1_entry


==================== Asm code ====================
2018-03-16 15:56:04.024714093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even1_info
.type GHC.Real.even1_info, @object
GHC.Real.even1_info:
	.quad	GHC.Real.even1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:56:04.032513162 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmfloor_closure
.type GHC.Real.$dmfloor_closure, @object
GHC.Real.$dmfloor_closure:
	.quad	GHC.Real.$dmfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.033450112 UTC

.section .text
.align 8
ds_s1j9P_entry:
_c1oNb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oNc
_c1oNd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1oNc:
	jmp *-16(%r13)
	.size ds_s1j9P_entry, .-ds_s1j9P_entry


==================== Asm code ====================
2018-03-16 15:56:04.03406451 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1j9P_info:
	.quad	ds_s1j9P_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.034755033 UTC

.section .text
.align 8
sat_s1j9X_entry:
_c1oNo:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oNp
_c1oNq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1oNm_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1oNp:
	jmp *-16(%r13)
	.size sat_s1j9X_entry, .-sat_s1j9X_entry


==================== Asm code ====================
2018-03-16 15:56:04.035351855 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1j9X_info:
	.quad	sat_s1j9X_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.035999084 UTC

.section .text
.align 8
_c1oNm:
_c1oNm:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Real.even1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1oNm, .-_c1oNm


==================== Asm code ====================
2018-03-16 15:56:04.036588509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNm_info:
	.quad	_c1oNm
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.037224071 UTC

.section .text
.align 8
sat_s1ja8_entry:
_c1oNQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oNR
_c1oNS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1oNR:
	jmp *-16(%r13)
	.size sat_s1ja8_entry, .-sat_s1ja8_entry


==================== Asm code ====================
2018-03-16 15:56:04.037922394 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ja8_info:
	.quad	sat_s1ja8_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.03876372 UTC

.section .text
.align 8
.globl GHC.Real.$dmfloor_entry
.type GHC.Real.$dmfloor_entry, @object
GHC.Real.$dmfloor_entry:
_c1oNT:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oNU
_c1oNV:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1oNX
_c1oNW:
	movq $ds_s1j9P_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $block_c1oNe_info,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1oNX:
	movq $40,904(%r13)
_c1oNU:
	movl $GHC.Real.$dmfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmfloor_entry, .-GHC.Real.$dmfloor_entry


==================== Asm code ====================
2018-03-16 15:56:04.039443557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmfloor_info
.type GHC.Real.$dmfloor_info, @object
GHC.Real.$dmfloor_info:
	.quad	GHC.Real.$dmfloor_entry
	.quad	0
	.quad	210453397518
	.quad	12884901911
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.040206599 UTC

.section .text
.align 8
_c1oNe:
_c1oNe:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1oO0
_c1oNZ:
	movq $sat_s1j9X_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $stg_sel_1_upd_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1oNv_info,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1oO0:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oNe, .-_c1oNe


==================== Asm code ====================
2018-03-16 15:56:04.040985563 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNe_info:
	.quad	_c1oNe
	.quad	2
	.quad	73014444062
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.042219807 UTC

.section .text
.align 8
_c1oNv:
_c1oNv:
	movq 16(%rbp),%rax
	movq $block_c1oNz_info,16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
	.size _c1oNv, .-_c1oNv


==================== Asm code ====================
2018-03-16 15:56:04.042829521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNv_info:
	.quad	_c1oNv
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.043583842 UTC

.section .text
.align 8
_c1oNz:
_c1oNz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1oO6
_c1oOd:
	movq $block_c1oNE_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1oO6:
	movq $block_c1oO3_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c1oO3
_c1oO7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oNz, .-_c1oNz


==================== Asm code ====================
2018-03-16 15:56:04.044217612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNz_info:
	.quad	_c1oNz
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.044822242 UTC

.section .text
.align 8
_c1oO3:
_c1oO3:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oO3, .-_c1oO3


==================== Asm code ====================
2018-03-16 15:56:04.04541503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oO3_info:
	.quad	_c1oO3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.045995488 UTC

.section .text
.align 8
_c1oNE:
_c1oNE:
	movq $block_c1oNI_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1oNE, .-_c1oNE


==================== Asm code ====================
2018-03-16 15:56:04.046546956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNE_info:
	.quad	_c1oNE
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.047285934 UTC

.section .text
.align 8
_c1oNI:
_c1oNI:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1oOh
_c1oOg:
	movq $sat_s1ja8_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
_c1oOh:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oNI, .-_c1oNI


==================== Asm code ====================
2018-03-16 15:56:04.047942534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oNI_info:
	.quad	_c1oNI
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.05572854 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmceiling_closure
.type GHC.Real.$dmceiling_closure, @object
GHC.Real.$dmceiling_closure:
	.quad	GHC.Real.$dmceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.056545014 UTC

.section .text
.align 8
ds_s1jac_entry:
_c1oPi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oPj
_c1oPk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1oPj:
	jmp *-16(%r13)
	.size ds_s1jac_entry, .-ds_s1jac_entry


==================== Asm code ====================
2018-03-16 15:56:04.057571242 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jac_info:
	.quad	ds_s1jac_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.058289682 UTC

.section .text
.align 8
sat_s1jak_entry:
_c1oPv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oPw
_c1oPx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1oPt_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1oPw:
	jmp *-16(%r13)
	.size sat_s1jak_entry, .-sat_s1jak_entry


==================== Asm code ====================
2018-03-16 15:56:04.058898031 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jak_info:
	.quad	sat_s1jak_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.059529904 UTC

.section .text
.align 8
_c1oPt:
_c1oPt:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Real.even1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1oPt, .-_c1oPt


==================== Asm code ====================
2018-03-16 15:56:04.060096536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPt_info:
	.quad	_c1oPt
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.060762175 UTC

.section .text
.align 8
sat_s1jav_entry:
_c1oPX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oPY
_c1oPZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1oPY:
	jmp *-16(%r13)
	.size sat_s1jav_entry, .-sat_s1jav_entry


==================== Asm code ====================
2018-03-16 15:56:04.061454039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jav_info:
	.quad	sat_s1jav_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.06226653 UTC

.section .text
.align 8
.globl GHC.Real.$dmceiling_entry
.type GHC.Real.$dmceiling_entry, @object
GHC.Real.$dmceiling_entry:
_c1oQ0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oQ1
_c1oQ2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1oQ4
_c1oQ3:
	movq $ds_s1jac_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $block_c1oPl_info,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1oQ4:
	movq $40,904(%r13)
_c1oQ1:
	movl $GHC.Real.$dmceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmceiling_entry, .-GHC.Real.$dmceiling_entry


==================== Asm code ====================
2018-03-16 15:56:04.0629588 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmceiling_info
.type GHC.Real.$dmceiling_info, @object
GHC.Real.$dmceiling_info:
	.quad	GHC.Real.$dmceiling_entry
	.quad	0
	.quad	347892350990
	.quad	12884901911
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.063686307 UTC

.section .text
.align 8
_c1oPl:
_c1oPl:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1oQ7
_c1oQ6:
	movq $sat_s1jak_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $stg_sel_1_upd_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1oPC_info,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1oQ7:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oPl, .-_c1oPl


==================== Asm code ====================
2018-03-16 15:56:04.064367506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPl_info:
	.quad	_c1oPl
	.quad	2
	.quad	73014444062
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.065054647 UTC

.section .text
.align 8
_c1oPC:
_c1oPC:
	movq 16(%rbp),%rax
	movq $block_c1oPG_info,16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.>_entry
	.size _c1oPC, .-_c1oPC


==================== Asm code ====================
2018-03-16 15:56:04.065732938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPC_info:
	.quad	_c1oPC
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.066485746 UTC

.section .text
.align 8
_c1oPG:
_c1oPG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1oQd
_c1oQk:
	movq $block_c1oPL_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1oQd:
	movq $block_c1oQa_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c1oQa
_c1oQe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oPG, .-_c1oPG


==================== Asm code ====================
2018-03-16 15:56:04.0671165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPG_info:
	.quad	_c1oPG
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.067697839 UTC

.section .text
.align 8
_c1oQa:
_c1oQa:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oQa, .-_c1oQa


==================== Asm code ====================
2018-03-16 15:56:04.068750989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oQa_info:
	.quad	_c1oQa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.06944526 UTC

.section .text
.align 8
_c1oPL:
_c1oPL:
	movq $block_c1oPP_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1oPL, .-_c1oPL


==================== Asm code ====================
2018-03-16 15:56:04.069984133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPL_info:
	.quad	_c1oPL
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.070704695 UTC

.section .text
.align 8
_c1oPP:
_c1oPP:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1oQo
_c1oQn:
	movq $sat_s1jav_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.+_entry
_c1oQo:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oPP, .-_c1oPP


==================== Asm code ====================
2018-03-16 15:56:04.071333977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oPP_info:
	.quad	_c1oPP
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.074335535 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmtruncate_closure
.type GHC.Real.$dmtruncate_closure, @object
GHC.Real.$dmtruncate_closure:
	.quad	GHC.Real.$dmtruncate_info


==================== Asm code ====================
2018-03-16 15:56:04.075057245 UTC

.section .text
.align 8
.globl GHC.Real.$dmtruncate_entry
.type GHC.Real.$dmtruncate_entry, @object
GHC.Real.$dmtruncate_entry:
_c1oRn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oRo
_c1oRp:
	movq $block_c1oRl_info,-8(%rbp)
	movq $stg_ap_pp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.properFraction_entry
_c1oRo:
	movl $GHC.Real.$dmtruncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmtruncate_entry, .-GHC.Real.$dmtruncate_entry


==================== Asm code ====================
2018-03-16 15:56:04.075690886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmtruncate_info
.type GHC.Real.$dmtruncate_info, @object
GHC.Real.$dmtruncate_info:
	.quad	GHC.Real.$dmtruncate_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.076325064 UTC

.section .text
.align 8
_c1oRl:
_c1oRl:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oRl, .-_c1oRl


==================== Asm code ====================
2018-03-16 15:56:04.076875148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oRl_info:
	.quad	_c1oRl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.081776894 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmrecip_closure
.type GHC.Real.$dmrecip_closure, @object
GHC.Real.$dmrecip_closure:
	.quad	GHC.Real.$dmrecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.082511526 UTC

.section .text
.align 8
sat_s1jaF_entry:
_c1oRL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oRM
_c1oRN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1oRJ_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1oRM:
	jmp *-16(%r13)
	.size sat_s1jaF_entry, .-sat_s1jaF_entry


==================== Asm code ====================
2018-03-16 15:56:04.083130443 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jaF_info:
	.quad	sat_s1jaF_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.08377611 UTC

.section .text
.align 8
_c1oRJ:
_c1oRJ:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1oRJ, .-_c1oRJ


==================== Asm code ====================
2018-03-16 15:56:04.084343442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oRJ_info:
	.quad	_c1oRJ
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.085113437 UTC

.section .text
.align 8
.globl GHC.Real.$dmrecip_entry
.type GHC.Real.$dmrecip_entry, @object
GHC.Real.$dmrecip_entry:
_c1oRR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oRS
_c1oRT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1oRV
_c1oRU:
	movq $sat_s1jaF_info,-16(%r12)
	movq %r14,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real./_entry
_c1oRV:
	movq $24,904(%r13)
_c1oRS:
	movl $GHC.Real.$dmrecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmrecip_entry, .-GHC.Real.$dmrecip_entry


==================== Asm code ====================
2018-03-16 15:56:04.085810601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmrecip_info
.type GHC.Real.$dmrecip_info, @object
GHC.Real.$dmrecip_info:
	.quad	GHC.Real.$dmrecip_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.089498686 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dm/_closure
.type GHC.Real.$dm/_closure, @object
GHC.Real.$dm/_closure:
	.quad	GHC.Real.$dm/_info


==================== Asm code ====================
2018-03-16 15:56:04.09025444 UTC

.section .text
.align 8
sat_s1jaK_entry:
_c1oSh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oSi
_c1oSj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.recip_entry
_c1oSi:
	jmp *-16(%r13)
	.size sat_s1jaK_entry, .-sat_s1jaK_entry


==================== Asm code ====================
2018-03-16 15:56:04.090806218 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jaK_info:
	.quad	sat_s1jaK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.091583579 UTC

.section .text
.align 8
.globl GHC.Real.$dm/_entry
.type GHC.Real.$dm/_entry, @object
GHC.Real.$dm/_entry:
_c1oSm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oSn
_c1oSo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1oSq
_c1oSp:
	movq $sat_s1jaK_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq $block_c1oSk_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1oSq:
	movq $32,904(%r13)
_c1oSn:
	movl $GHC.Real.$dm/_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dm/_entry, .-GHC.Real.$dm/_entry


==================== Asm code ====================
2018-03-16 15:56:04.092273537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dm/_info
.type GHC.Real.$dm/_info, @object
GHC.Real.$dm/_info:
	.quad	GHC.Real.$dm/_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.092947939 UTC

.section .text
.align 8
_c1oSk:
_c1oSk:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Num.*_entry
	.size _c1oSk, .-_c1oSk


==================== Asm code ====================
2018-03-16 15:56:04.093591534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oSk_info:
	.quad	_c1oSk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.10576898 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmdivMod_closure
.type GHC.Real.$dmdivMod_closure, @object
GHC.Real.$dmdivMod_closure:
	.quad	GHC.Real.$dmdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.106529784 UTC

.section .text
.align 8
$dNum_s1jaP_entry:
_c1oSV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oSW
_c1oSX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1oSW:
	jmp *-16(%r13)
	.size $dNum_s1jaP_entry, .-$dNum_s1jaP_entry


==================== Asm code ====================
2018-03-16 15:56:04.107131432 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jaP_info:
	.quad	$dNum_s1jaP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.107820393 UTC

.section .text
.align 8
ds_s1jaQ_entry:
_c1oT4:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oT8
_c1oT9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1oT2_info,-24(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.quotRem_entry
_c1oT8:
	jmp *-16(%r13)
	.size ds_s1jaQ_entry, .-ds_s1jaQ_entry


==================== Asm code ====================
2018-03-16 15:56:04.108476323 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jaQ_info:
	.quad	ds_s1jaQ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.10921356 UTC

.section .text
.align 8
_c1oT2:
_c1oT2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1oTc
_c1oTb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq $(,,)_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oTc:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oT2, .-_c1oT2


==================== Asm code ====================
2018-03-16 15:56:04.109866982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oT2_info:
	.quad	_c1oT2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.110555011 UTC

.section .text
.align 8
sat_s1jb2_entry:
_c1oTm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oTn
_c1oTo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.signum_entry
_c1oTn:
	jmp *-16(%r13)
	.size sat_s1jb2_entry, .-sat_s1jb2_entry


==================== Asm code ====================
2018-03-16 15:56:04.111171763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jb2_info:
	.quad	sat_s1jb2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.111954815 UTC

.section .text
.align 8
sat_s1jb3_entry:
_c1oTp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oTq
_c1oTr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1oTt
_c1oTs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jb2_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1oTt:
	movq $32,904(%r13)
_c1oTq:
	jmp *-16(%r13)
	.size sat_s1jb3_entry, .-sat_s1jb3_entry


==================== Asm code ====================
2018-03-16 15:56:04.112643303 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jb3_info:
	.quad	sat_s1jb3_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.113376322 UTC

.section .text
.align 8
sat_s1jb1_entry:
_c1oTy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oTz
_c1oTA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.signum_entry
_c1oTz:
	jmp *-16(%r13)
	.size sat_s1jb1_entry, .-sat_s1jb1_entry


==================== Asm code ====================
2018-03-16 15:56:04.114046133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jb1_info:
	.quad	sat_s1jb1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.114799525 UTC

.section .text
.align 8
sat_s1jbg_entry:
_c1oTS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oTT
_c1oTU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1oTT:
	jmp *-16(%r13)
	.size sat_s1jbg_entry, .-sat_s1jbg_entry


==================== Asm code ====================
2018-03-16 15:56:04.115415864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jbg_info:
	.quad	sat_s1jbg_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.116105056 UTC

.section .text
.align 8
sat_s1jbe_entry:
_c1oU3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oU4
_c1oU5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1oU4:
	jmp *-16(%r13)
	.size sat_s1jbe_entry, .-sat_s1jbe_entry


==================== Asm code ====================
2018-03-16 15:56:04.116733245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jbe_info:
	.quad	sat_s1jbe_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.117570086 UTC

.section .text
.align 8
sat_s1jbf_entry:
_c1oU7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oU8
_c1oU9:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1oUb
_c1oUa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jbe_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $stg_sel_1_upd_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.-_entry
_c1oUb:
	movq $48,904(%r13)
_c1oU8:
	jmp *-16(%r13)
	.size sat_s1jbf_entry, .-sat_s1jbf_entry


==================== Asm code ====================
2018-03-16 15:56:04.118274653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jbf_info:
	.quad	sat_s1jbf_entry
	.quad	2
	.quad	4294967314
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.118955297 UTC

.section .text
.align 8
.globl GHC.Real.$dmdivMod_entry
.type GHC.Real.$dmdivMod_entry, @object
GHC.Real.$dmdivMod_entry:
_c1oUc:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oUd
_c1oUe:
	movq $block_c1oSN_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1oUd:
	movl $GHC.Real.$dmdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmdivMod_entry, .-GHC.Real.$dmdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:04.119604868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmdivMod_info
.type GHC.Real.$dmdivMod_info, @object
GHC.Real.$dmdivMod_info:
	.quad	GHC.Real.$dmdivMod_entry
	.quad	0
	.quad	1103806595086
	.quad	12884901911
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.120479023 UTC

.section .text
.align 8
_c1oSN:
_c1oSN:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _c1oUh
_c1oUg:
	movq $$dNum_s1jaP_info,-144(%r12)
	movq %rbx,-128(%r12)
	movq $ds_s1jaQ_info,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-96(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	movq $stg_sel_2_upd_info,-80(%r12)
	leaq -120(%r12),%rcx
	movq %rcx,-64(%r12)
	movq $sat_s1jb3_info,-56(%r12)
	movq %rax,-40(%r12)
	leaq -144(%r12),%rax
	movq %rax,-32(%r12)
	movq $sat_s1jb1_info,-24(%r12)
	movq %rax,-8(%r12)
	leaq -80(%r12),%rdx
	movq %rdx,(%r12)
	movq $block_c1oTB_info,-24(%rbp)
	movq %rbx,%r14
	leaq -56(%r12),%rbx
	movq %rbx,-16(%rbp)
	leaq -24(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p2Real_entry
_c1oUh:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oSN, .-_c1oSN


==================== Asm code ====================
2018-03-16 15:56:04.12130122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oSN_info:
	.quad	_c1oSN
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.121918749 UTC

.section .text
.align 8
_c1oTB:
_c1oTB:
	movq $block_c1oTF_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1oTB, .-_c1oTB


==================== Asm code ====================
2018-03-16 15:56:04.122479827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oTB_info:
	.quad	_c1oTB
	.quad	6
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.123127635 UTC

.section .text
.align 8
_c1oTF:
_c1oTF:
	movq 16(%rbp),%rax
	movq $block_c1oTJ_info,16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.==_entry
	.size _c1oTF, .-_c1oTF


==================== Asm code ====================
2018-03-16 15:56:04.124162039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oTF_info:
	.quad	_c1oTF
	.quad	6
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.125033652 UTC

.section .text
.align 8
_c1oTJ:
_c1oTJ:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1oUo
_c1oUv:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1oUy
_c1oUx:
	movq $sat_s1jbg_info,-88(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq $sat_s1jbf_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oUy:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
_c1oUo:
	movq $block_c1oUl_info,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c1oUl
_c1oUp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oTJ, .-_c1oTJ


==================== Asm code ====================
2018-03-16 15:56:04.125798136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oTJ_info:
	.quad	_c1oTJ
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+80


==================== Asm code ====================
2018-03-16 15:56:04.126421633 UTC

.section .text
.align 8
_c1oUl:
_c1oUl:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oUl, .-_c1oUl


==================== Asm code ====================
2018-03-16 15:56:04.126978261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oUl_info:
	.quad	_c1oUl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.130315409 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmmod_closure
.type GHC.Real.$dmmod_closure, @object
GHC.Real.$dmmod_closure:
	.quad	GHC.Real.$dmmod_info


==================== Asm code ====================
2018-03-16 15:56:04.131068043 UTC

.section .text
.align 8
.globl GHC.Real.$dmmod_entry
.type GHC.Real.$dmmod_entry, @object
GHC.Real.$dmmod_entry:
_c1oVY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oVZ
_c1oW0:
	movq $block_c1oVW_info,-8(%rbp)
	movq $stg_ap_pp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.divMod_entry
_c1oVZ:
	movl $GHC.Real.$dmmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmmod_entry, .-GHC.Real.$dmmod_entry


==================== Asm code ====================
2018-03-16 15:56:04.131706906 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmmod_info
.type GHC.Real.$dmmod_info, @object
GHC.Real.$dmmod_info:
	.quad	GHC.Real.$dmmod_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.132285039 UTC

.section .text
.align 8
_c1oVW:
_c1oVW:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oVW, .-_c1oVW


==================== Asm code ====================
2018-03-16 15:56:04.13289328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oVW_info:
	.quad	_c1oVW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.13572333 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmdiv_closure
.type GHC.Real.$dmdiv_closure, @object
GHC.Real.$dmdiv_closure:
	.quad	GHC.Real.$dmdiv_info


==================== Asm code ====================
2018-03-16 15:56:04.136447846 UTC

.section .text
.align 8
.globl GHC.Real.$dmdiv_entry
.type GHC.Real.$dmdiv_entry, @object
GHC.Real.$dmdiv_entry:
_c1oWi:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oWj
_c1oWk:
	movq $block_c1oWg_info,-8(%rbp)
	movq $stg_ap_pp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.divMod_entry
_c1oWj:
	movl $GHC.Real.$dmdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmdiv_entry, .-GHC.Real.$dmdiv_entry


==================== Asm code ====================
2018-03-16 15:56:04.137055815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmdiv_info
.type GHC.Real.$dmdiv_info, @object
GHC.Real.$dmdiv_info:
	.quad	GHC.Real.$dmdiv_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.137686616 UTC

.section .text
.align 8
_c1oWg:
_c1oWg:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oWg, .-_c1oWg


==================== Asm code ====================
2018-03-16 15:56:04.138212704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oWg_info:
	.quad	_c1oWg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.140887003 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmrem_closure
.type GHC.Real.$dmrem_closure, @object
GHC.Real.$dmrem_closure:
	.quad	GHC.Real.$dmrem_info


==================== Asm code ====================
2018-03-16 15:56:04.141655713 UTC

.section .text
.align 8
.globl GHC.Real.$dmrem_entry
.type GHC.Real.$dmrem_entry, @object
GHC.Real.$dmrem_entry:
_c1oWC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oWD
_c1oWE:
	movq $block_c1oWA_info,-8(%rbp)
	movq $stg_ap_pp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.quotRem_entry
_c1oWD:
	movl $GHC.Real.$dmrem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmrem_entry, .-GHC.Real.$dmrem_entry


==================== Asm code ====================
2018-03-16 15:56:04.142312688 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmrem_info
.type GHC.Real.$dmrem_info, @object
GHC.Real.$dmrem_info:
	.quad	GHC.Real.$dmrem_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.14287172 UTC

.section .text
.align 8
_c1oWA:
_c1oWA:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oWA, .-_c1oWA


==================== Asm code ====================
2018-03-16 15:56:04.14336887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oWA_info:
	.quad	_c1oWA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.146145701 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmquot_closure
.type GHC.Real.$dmquot_closure, @object
GHC.Real.$dmquot_closure:
	.quad	GHC.Real.$dmquot_info


==================== Asm code ====================
2018-03-16 15:56:04.146917691 UTC

.section .text
.align 8
.globl GHC.Real.$dmquot_entry
.type GHC.Real.$dmquot_entry, @object
GHC.Real.$dmquot_entry:
_c1oWW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oWX
_c1oWY:
	movq $block_c1oWU_info,-8(%rbp)
	movq $stg_ap_pp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.quotRem_entry
_c1oWX:
	movl $GHC.Real.$dmquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmquot_entry, .-GHC.Real.$dmquot_entry


==================== Asm code ====================
2018-03-16 15:56:04.14759238 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmquot_info
.type GHC.Real.$dmquot_info, @object
GHC.Real.$dmquot_info:
	.quad	GHC.Real.$dmquot_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.148220971 UTC

.section .text
.align 8
_c1oWU:
_c1oWU:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1oWU, .-_c1oWU


==================== Asm code ====================
2018-03-16 15:56:04.14880469 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oWU_info:
	.quad	_c1oWU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.151983786 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.divZeroError_closure
.type GHC.Real.divZeroError_closure, @object
GHC.Real.divZeroError_closure:
	.quad	GHC.Real.divZeroError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.152898746 UTC

.section .text
.align 8
.globl GHC.Real.divZeroError_entry
.type GHC.Real.divZeroError_entry, @object
GHC.Real.divZeroError_entry:
_c1oXg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oXh
_c1oXi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1oXf
_c1oXe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Exception.divZeroException_closure,%ebx
	addq $-16,%rbp
	jmp stg_raise#
_c1oXh:
	jmp *-16(%r13)
_c1oXf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.divZeroError_entry, .-GHC.Real.divZeroError_entry


==================== Asm code ====================
2018-03-16 15:56:04.153675017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.divZeroError_info
.type GHC.Real.divZeroError_info, @object
GHC.Real.divZeroError_info:
	.quad	GHC.Real.divZeroError_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+152


==================== Asm code ====================
2018-03-16 15:56:04.155323333 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt1_closure
.type GHC.Real.$fIntegralInt1_closure, @object
GHC.Real.$fIntegralInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.159606544 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cmod_closure
.type GHC.Real.$fIntegralInt_$cmod_closure, @object
GHC.Real.$fIntegralInt_$cmod_closure:
	.quad	GHC.Real.$fIntegralInt_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.160483064 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cmod_entry
.type GHC.Real.$fIntegralInt_$cmod_entry, @object
GHC.Real.$fIntegralInt_$cmod_entry:
_c1oXy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oXz
_c1oXA:
	movq $block_c1oXv_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oXv
_c1oXw:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oXz:
	movl $GHC.Real.$fIntegralInt_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cmod_entry, .-GHC.Real.$fIntegralInt_$cmod_entry


==================== Asm code ====================
2018-03-16 15:56:04.161112521 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cmod_info
.type GHC.Real.$fIntegralInt_$cmod_info, @object
GHC.Real.$fIntegralInt_$cmod_info:
	.quad	GHC.Real.$fIntegralInt_$cmod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.161966275 UTC

.section .text
.align 8
_c1oXv:
_c1oXv:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u1oXY
_c1oXW:
	movl $GHC.Real.$fIntegralInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1oXY:
	testq %rax,%rax
	jne _c1oXR
_c1oXX:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1oXR:
	movq $block_c1oXG_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1oXG
_c1oXH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oXv, .-_c1oXv


==================== Asm code ====================
2018-03-16 15:56:04.162607771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oXv_info:
	.quad	_c1oXv
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.163245387 UTC

.section .text
.align 8
_c1oXG:
_c1oXG:
	movq 8(%rbp),%rax
	movq $block_c1oXL_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _c1oXG, .-_c1oXG


==================== Asm code ====================
2018-03-16 15:56:04.163800622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oXG_info:
	.quad	_c1oXG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.16451001 UTC

.section .text
.align 8
_c1oXL:
_c1oXL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1oXV
_c1oXU:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oXV:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1oXL, .-_c1oXL


==================== Asm code ====================
2018-03-16 15:56:04.165093549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oXL_info:
	.quad	_c1oXL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.170199347 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$crem_closure
.type GHC.Real.$fIntegralInt_$crem_closure, @object
GHC.Real.$fIntegralInt_$crem_closure:
	.quad	GHC.Real.$fIntegralInt_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.171022069 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$crem_entry
.type GHC.Real.$fIntegralInt_$crem_entry, @object
GHC.Real.$fIntegralInt_$crem_entry:
_c1oYq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oYr
_c1oYs:
	movq $block_c1oYn_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1oYn
_c1oYo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1oYr:
	movl $GHC.Real.$fIntegralInt_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$crem_entry, .-GHC.Real.$fIntegralInt_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:04.171702373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$crem_info
.type GHC.Real.$fIntegralInt_$crem_info, @object
GHC.Real.$fIntegralInt_$crem_info:
	.quad	GHC.Real.$fIntegralInt_$crem_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.172540186 UTC

.section .text
.align 8
_c1oYn:
_c1oYn:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u1oYO
_c1oYM:
	movl $GHC.Real.$fIntegralInt1_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1oYO:
	testq %rax,%rax
	jne _c1oYI
_c1oYN:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1oYI:
	movq $block_c1oYy_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1oYy
_c1oYz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1oYn, .-_c1oYn


==================== Asm code ====================
2018-03-16 15:56:04.173222951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oYn_info:
	.quad	_c1oYn
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.173973401 UTC

.section .text
.align 8
_c1oYy:
_c1oYy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1oYL
_c1oYK:
	movq 7(%rbx),%rax
	cqto
	idivq 8(%rbp)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1oYL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1oYy, .-_c1oYy


==================== Asm code ====================
2018-03-16 15:56:04.174637327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oYy_info:
	.quad	_c1oYy
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.177964431 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquot_closure
.type GHC.Real.$fIntegralInteger_$cquot_closure, @object
GHC.Real.$fIntegralInteger_$cquot_closure:
	.quad	GHC.Real.$fIntegralInteger_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.178811134 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cquot_entry
.type GHC.Real.$fIntegralInteger_$cquot_entry, @object
GHC.Real.$fIntegralInteger_$cquot_entry:
_c1oZf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oZg
_c1oZh:
	movq $block_c1oZa_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1oZg:
	movl $GHC.Real.$fIntegralInteger_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cquot_entry, .-GHC.Real.$fIntegralInteger_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:04.179552309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquot_info
.type GHC.Real.$fIntegralInteger_$cquot_info, @object
GHC.Real.$fIntegralInteger_$cquot_info:
	.quad	GHC.Real.$fIntegralInteger_$cquot_entry
	.quad	0
	.quad	2478196129806
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.18076895 UTC

.section .text
.align 8
_c1oZa:
_c1oZa:
	cmpq $1,%rbx
	je _c1oZe
_c1oZd:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.quotInteger_entry
_c1oZe:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1oZa, .-_c1oZa


==================== Asm code ====================
2018-03-16 15:56:04.181401359 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oZa_info:
	.quad	_c1oZa
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.18450654 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$crem_closure
.type GHC.Real.$fIntegralInteger_$crem_closure, @object
GHC.Real.$fIntegralInteger_$crem_closure:
	.quad	GHC.Real.$fIntegralInteger_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.185338605 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$crem_entry
.type GHC.Real.$fIntegralInteger_$crem_entry, @object
GHC.Real.$fIntegralInteger_$crem_entry:
_c1oZF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1oZG
_c1oZH:
	movq $block_c1oZA_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1oZG:
	movl $GHC.Real.$fIntegralInteger_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$crem_entry, .-GHC.Real.$fIntegralInteger_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:04.185989968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$crem_info
.type GHC.Real.$fIntegralInteger_$crem_info, @object
GHC.Real.$fIntegralInteger_$crem_info:
	.quad	GHC.Real.$fIntegralInteger_$crem_entry
	.quad	0
	.quad	4677219385358
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.186654595 UTC

.section .text
.align 8
_c1oZA:
_c1oZA:
	cmpq $1,%rbx
	je _c1oZE
_c1oZD:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.remInteger_entry
_c1oZE:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1oZA, .-_c1oZA


==================== Asm code ====================
2018-03-16 15:56:04.187237294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1oZA_info:
	.quad	_c1oZA
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.190253954 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdiv_closure
.type GHC.Real.$fIntegralInteger_$cdiv_closure, @object
GHC.Real.$fIntegralInteger_$cdiv_closure:
	.quad	GHC.Real.$fIntegralInteger_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.191022115 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cdiv_entry
.type GHC.Real.$fIntegralInteger_$cdiv_entry, @object
GHC.Real.$fIntegralInteger_$cdiv_entry:
_c1p05:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p06
_c1p07:
	movq $block_c1p00_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1p06:
	movl $GHC.Real.$fIntegralInteger_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cdiv_entry, .-GHC.Real.$fIntegralInteger_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:04.191664828 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdiv_info
.type GHC.Real.$fIntegralInteger_$cdiv_info, @object
GHC.Real.$fIntegralInteger_$cdiv_info:
	.quad	GHC.Real.$fIntegralInteger_$cdiv_entry
	.quad	0
	.quad	26667451940878
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.192356615 UTC

.section .text
.align 8
_c1p00:
_c1p00:
	cmpq $1,%rbx
	je _c1p04
_c1p03:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.divInteger_entry
_c1p04:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1p00, .-_c1p00


==================== Asm code ====================
2018-03-16 15:56:04.192924911 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p00_info:
	.quad	_c1p00
	.quad	2
	.quad	141733920798
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.19590775 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cmod_closure
.type GHC.Real.$fIntegralInteger_$cmod_closure, @object
GHC.Real.$fIntegralInteger_$cmod_closure:
	.quad	GHC.Real.$fIntegralInteger_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.19665156 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cmod_entry
.type GHC.Real.$fIntegralInteger_$cmod_entry, @object
GHC.Real.$fIntegralInteger_$cmod_entry:
_c1p0v:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p0w
_c1p0x:
	movq $block_c1p0q_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1p0w:
	movl $GHC.Real.$fIntegralInteger_$cmod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cmod_entry, .-GHC.Real.$fIntegralInteger_$cmod_entry


==================== Asm code ====================
2018-03-16 15:56:04.197359235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cmod_info
.type GHC.Real.$fIntegralInteger_$cmod_info, @object
GHC.Real.$fIntegralInteger_$cmod_info:
	.quad	GHC.Real.$fIntegralInteger_$cmod_entry
	.quad	0
	.quad	105832289140750
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.198042936 UTC

.section .text
.align 8
_c1p0q:
_c1p0q:
	cmpq $1,%rbx
	je _c1p0u
_c1p0t:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.modInteger_entry
_c1p0u:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1p0q, .-_c1p0q


==================== Asm code ====================
2018-03-16 15:56:04.198644325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p0q_info:
	.quad	_c1p0q
	.quad	2
	.quad	554050781214
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.202345722 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquotRem_closure
.type GHC.Real.$fIntegralInteger_$cquotRem_closure, @object
GHC.Real.$fIntegralInteger_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.203141799 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cquotRem_entry
.type GHC.Real.$fIntegralInteger_$cquotRem_entry, @object
GHC.Real.$fIntegralInteger_$cquotRem_entry:
_c1p0V:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p0W
_c1p0X:
	movq $block_c1p0Q_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1p0W:
	movl $GHC.Real.$fIntegralInteger_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cquotRem_entry, .-GHC.Real.$fIntegralInteger_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:04.203837323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquotRem_info
.type GHC.Real.$fIntegralInteger_$cquotRem_info, @object
GHC.Real.$fIntegralInteger_$cquotRem_info:
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_entry
	.quad	0
	.quad	141016661229582
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.204555968 UTC

.section .text
.align 8
_c1p0Q:
_c1p0Q:
	cmpq $1,%rbx
	je _c1p0U
_c1p0T:
	movq 16(%rbp),%rax
	movq $block_c1p10_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c1p0U:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1p0Q, .-_c1p0Q


==================== Asm code ====================
2018-03-16 15:56:04.205130123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p0Q_info:
	.quad	_c1p0Q
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.205884992 UTC

.section .text
.align 8
_c1p10:
_c1p10:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1p16
_c1p15:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p16:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1p10, .-_c1p10


==================== Asm code ====================
2018-03-16 15:56:04.206454281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p10_info:
	.quad	_c1p10
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.210846943 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdivMod_closure
.type GHC.Real.$fIntegralInteger_$cdivMod_closure, @object
GHC.Real.$fIntegralInteger_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.211665278 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cdivMod_entry
.type GHC.Real.$fIntegralInteger_$cdivMod_entry, @object
GHC.Real.$fIntegralInteger_$cdivMod_entry:
_c1p1v:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p1w
_c1p1x:
	movq $block_c1p1q_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1p1w:
	movl $GHC.Real.$fIntegralInteger_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cdivMod_entry, .-GHC.Real.$fIntegralInteger_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:04.212347629 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdivMod_info
.type GHC.Real.$fIntegralInteger_$cdivMod_info, @object
GHC.Real.$fIntegralInteger_$cdivMod_info:
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_entry
	.quad	0
	.quad	844704103006222
	.quad	8589934607
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.213070725 UTC

.section .text
.align 8
_c1p1q:
_c1p1q:
	cmpq $1,%rbx
	je _c1p1u
_c1p1t:
	movq 16(%rbp),%rax
	movq $block_c1p1A_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.divModInteger_entry
_c1p1u:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1p1q, .-_c1p1q


==================== Asm code ====================
2018-03-16 15:56:04.213671029 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p1q_info:
	.quad	_c1p1q
	.quad	2
	.quad	4402341478430
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.214395546 UTC

.section .text
.align 8
_c1p1A:
_c1p1A:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1p1G
_c1p1F:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p1G:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1p1A, .-_c1p1A


==================== Asm code ====================
2018-03-16 15:56:04.215022156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p1A_info:
	.quad	_c1p1A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.216867124 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_closure
.type GHC.Real.$fIntegralInteger_closure, @object
GHC.Real.$fIntegralInteger_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealInteger_closure+1
	.quad	GHC.Enum.$fEnumInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cquot_closure+2
	.quad	GHC.Real.$fIntegralInteger_$crem_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cdiv_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cmod_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.220838623 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquot_closure
.type GHC.Real.$fIntegralWord_$cquot_closure, @object
GHC.Real.$fIntegralWord_$cquot_closure:
	.quad	GHC.Real.$fIntegralWord_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.222555763 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cquot_entry
.type GHC.Real.$fIntegralWord_$cquot_entry, @object
GHC.Real.$fIntegralWord_$cquot_entry:
_c1p24:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p28
_c1p29:
	movq $block_c1p21_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1p21
_c1p22:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p28:
	movl $GHC.Real.$fIntegralWord_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cquot_entry, .-GHC.Real.$fIntegralWord_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:04.223226412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquot_info
.type GHC.Real.$fIntegralWord_$cquot_info, @object
GHC.Real.$fIntegralWord_$cquot_info:
	.quad	GHC.Real.$fIntegralWord_$cquot_entry
	.quad	0
	.quad	17596481011726
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.223933809 UTC

.section .text
.align 8
_c1p21:
_c1p21:
	movq $block_c1p27_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1p27
_c1p2b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1p21, .-_c1p21


==================== Asm code ====================
2018-03-16 15:56:04.224552724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p21_info:
	.quad	_c1p21
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.225412057 UTC

.section .text
.align 8
_c1p27:
_c1p27:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1p2h
_c1p2g:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1p2p
_c1p2q:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1p2p:
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p2h:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p27, .-_c1p27


==================== Asm code ====================
2018-03-16 15:56:04.226100342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p27_info:
	.quad	_c1p27
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.230030437 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$crem_closure
.type GHC.Real.$fIntegralWord_$crem_closure, @object
GHC.Real.$fIntegralWord_$crem_closure:
	.quad	GHC.Real.$fIntegralWord_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.23085495 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$crem_entry
.type GHC.Real.$fIntegralWord_$crem_entry, @object
GHC.Real.$fIntegralWord_$crem_entry:
_c1p2P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p2T
_c1p2U:
	movq $block_c1p2M_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1p2M
_c1p2N:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p2T:
	movl $GHC.Real.$fIntegralWord_$crem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$crem_entry, .-GHC.Real.$fIntegralWord_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:04.23147284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$crem_info
.type GHC.Real.$fIntegralWord_$crem_info, @object
GHC.Real.$fIntegralWord_$crem_info:
	.quad	GHC.Real.$fIntegralWord_$crem_entry
	.quad	0
	.quad	35188667056142
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.232114857 UTC

.section .text
.align 8
_c1p2M:
_c1p2M:
	movq $block_c1p2S_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1p2S
_c1p2W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1p2M, .-_c1p2M


==================== Asm code ====================
2018-03-16 15:56:04.232680687 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p2M_info:
	.quad	_c1p2M
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.233550729 UTC

.section .text
.align 8
_c1p2S:
_c1p2S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1p32
_c1p31:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1p3a
_c1p3b:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1p3a:
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p32:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p2S, .-_c1p2S


==================== Asm code ====================
2018-03-16 15:56:04.234260016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p2S_info:
	.quad	_c1p2S
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.238998675 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquotRem_closure
.type GHC.Real.$fIntegralWord_$cquotRem_closure, @object
GHC.Real.$fIntegralWord_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralWord_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.239761672 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cquotRem_entry
.type GHC.Real.$fIntegralWord_$cquotRem_entry, @object
GHC.Real.$fIntegralWord_$cquotRem_entry:
_c1p3A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p3E
_c1p3F:
	movq $block_c1p3x_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1p3x
_c1p3y:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p3E:
	movl $GHC.Real.$fIntegralWord_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cquotRem_entry, .-GHC.Real.$fIntegralWord_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:04.240456207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquotRem_info
.type GHC.Real.$fIntegralWord_$cquotRem_info, @object
GHC.Real.$fIntegralWord_$cquotRem_info:
	.quad	GHC.Real.$fIntegralWord_$cquotRem_entry
	.quad	0
	.quad	70373039144974
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.241166871 UTC

.section .text
.align 8
_c1p3x:
_c1p3x:
	movq $block_c1p3D_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1p3D
_c1p3H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1p3x, .-_c1p3x


==================== Asm code ====================
2018-03-16 15:56:04.241799764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p3x_info:
	.quad	_c1p3x
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.242604116 UTC

.section .text
.align 8
_c1p3D:
_c1p3D:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1p3N
_c1p3M:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1p3U
_c1p3V:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1p3U:
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq $GHC.Types.W#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.W#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p3N:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p3D, .-_c1p3D


==================== Asm code ====================
2018-03-16 15:56:04.243284917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p3D_info:
	.quad	_c1p3D
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.248853509 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cdivMod_closure
.type GHC.Real.$fIntegralWord_$cdivMod_closure, @object
GHC.Real.$fIntegralWord_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralWord_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.249895844 UTC

.section .text
.align 8
sat_s1jcW_entry:
_c1p4A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p4D
_c1p4E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1p4G
_c1p4F:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	xorq %rdx,%rdx
	divq 24(%rbx)
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p4G:
	movq $16,904(%r13)
_c1p4D:
	jmp *-16(%r13)
	.size sat_s1jcW_entry, .-sat_s1jcW_entry


==================== Asm code ====================
2018-03-16 15:56:04.250563017 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jcW_info:
	.quad	sat_s1jcW_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:56:04.251336746 UTC

.section .text
.align 8
sat_s1jcU_entry:
_c1p4N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p4Q
_c1p4R:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1p4T
_c1p4S:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	xorq %rdx,%rdx
	divq 24(%rbx)
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p4T:
	movq $16,904(%r13)
_c1p4Q:
	jmp *-16(%r13)
	.size sat_s1jcU_entry, .-sat_s1jcU_entry


==================== Asm code ====================
2018-03-16 15:56:04.25197747 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jcU_info:
	.quad	sat_s1jcU_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:56:04.252706097 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cdivMod_entry
.type GHC.Real.$fIntegralWord_$cdivMod_entry, @object
GHC.Real.$fIntegralWord_$cdivMod_entry:
_c1p4U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p4V
_c1p4W:
	movq $block_c1p4i_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1p4i
_c1p4j:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p4V:
	movl $GHC.Real.$fIntegralWord_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cdivMod_entry, .-GHC.Real.$fIntegralWord_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:04.25341372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cdivMod_info
.type GHC.Real.$fIntegralWord_$cdivMod_info, @object
GHC.Real.$fIntegralWord_$cdivMod_info:
	.quad	GHC.Real.$fIntegralWord_$cdivMod_entry
	.quad	0
	.quad	140741783322638
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.254085405 UTC

.section .text
.align 8
_c1p4i:
_c1p4i:
	movq $block_c1p4n_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1p4n
_c1p4o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1p4i, .-_c1p4i


==================== Asm code ====================
2018-03-16 15:56:04.254660719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p4i_info:
	.quad	_c1p4i
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.255498686 UTC

.section .text
.align 8
_c1p4n:
_c1p4n:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1p50
_c1p4Z:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1p53
_c1p54:
	addq $-88,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1p53:
	movq $sat_s1jcW_info,-80(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq $sat_s1jcU_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p50:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p4n, .-_c1p4n


==================== Asm code ====================
2018-03-16 15:56:04.25622965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p4n_info:
	.quad	_c1p4n
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.258909198 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioZeroDenominatorError_closure
.type GHC.Real.ratioZeroDenominatorError_closure, @object
GHC.Real.ratioZeroDenominatorError_closure:
	.quad	GHC.Real.ratioZeroDenominatorError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.259772756 UTC

.section .text
.align 8
.globl GHC.Real.ratioZeroDenominatorError_entry
.type GHC.Real.ratioZeroDenominatorError_entry, @object
GHC.Real.ratioZeroDenominatorError_entry:
_c1p5D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p5E
_c1p5F:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1p5C
_c1p5B:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Exception.ratioZeroDenomException_closure,%ebx
	addq $-16,%rbp
	jmp stg_raise#
_c1p5E:
	jmp *-16(%r13)
_c1p5C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.ratioZeroDenominatorError_entry, .-GHC.Real.ratioZeroDenominatorError_entry


==================== Asm code ====================
2018-03-16 15:56:04.260480042 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.ratioZeroDenominatorError_info
.type GHC.Real.ratioZeroDenominatorError_info, @object
GHC.Real.ratioZeroDenominatorError_info:
	.quad	GHC.Real.ratioZeroDenominatorError_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+288


==================== Asm code ====================
2018-03-16 15:56:04.266226147 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$crecip_closure
.type GHC.Real.$fFractionalRatio_$s$crecip_closure, @object
GHC.Real.$fFractionalRatio_$s$crecip_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.267094048 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$crecip_entry
.type GHC.Real.$fFractionalRatio_$s$crecip_entry, @object
GHC.Real.$fFractionalRatio_$s$crecip_entry:
_c1p5U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p5V
_c1p5W:
	movq $block_c1p5R_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1p5R
_c1p5S:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p5V:
	movl $GHC.Real.$fFractionalRatio_$s$crecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$crecip_entry, .-GHC.Real.$fFractionalRatio_$s$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:04.267741395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$crecip_info
.type GHC.Real.$fFractionalRatio_$s$crecip_info, @object
GHC.Real.$fFractionalRatio_$s$crecip_info:
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_entry
	.quad	0
	.quad	108086395351859214
	.quad	4294967301
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.268417019 UTC

.section .text
.align 8
_c1p5R:
_c1p5R:
	movq $block_c1p5Z_info,-16(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1p5R, .-_c1p5R


==================== Asm code ====================
2018-03-16 15:56:04.269077963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p5R_info:
	.quad	_c1p5R
	.quad	0
	.quad	36028801313931294
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.269832093 UTC

.section .text
.align 8
_c1p5Z:
_c1p5Z:
	cmpq $1,%rbx
	je _c1p6B
_c1p67:
	movq $block_c1p64_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_c1p6B:
	movl $GHC.Real.ratioZeroDenominatorError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1p5Z, .-_c1p5Z


==================== Asm code ====================
2018-03-16 15:56:04.27045378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p5Z_info:
	.quad	_c1p5Z
	.quad	2
	.quad	36028801313931294
	.quad	S1jKw_srt+112


==================== Asm code ====================
2018-03-16 15:56:04.27120804 UTC

.section .text
.align 8
_c1p64:
_c1p64:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c1p6t
_c1p6d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1p6g
_c1p6f:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p6t:
	movq $block_c1p6j_info,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c1p6g:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1p64, .-_c1p64


==================== Asm code ====================
2018-03-16 15:56:04.27181572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p64_info:
	.quad	_c1p64
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.272401886 UTC

.section .text
.align 8
_c1p6j:
_c1p6j:
	movq $block_c1p6n_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c1p6j, .-_c1p6j


==================== Asm code ====================
2018-03-16 15:56:04.272924282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p6j_info:
	.quad	_c1p6j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.273666256 UTC

.section .text
.align 8
_c1p6n:
_c1p6n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1p6x
_c1p6w:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p6x:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p6n, .-_c1p6n


==================== Asm code ====================
2018-03-16 15:56:04.274217353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p6n_info:
	.quad	_c1p6n
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.27688656 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.overflowError_closure
.type GHC.Real.overflowError_closure, @object
GHC.Real.overflowError_closure:
	.quad	GHC.Real.overflowError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.277778809 UTC

.section .text
.align 8
.globl GHC.Real.overflowError_entry
.type GHC.Real.overflowError_entry, @object
GHC.Real.overflowError_entry:
_c1p79:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p7a
_c1p7b:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1p78
_c1p77:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Exception.overflowException_closure,%ebx
	addq $-16,%rbp
	jmp stg_raise#
_c1p7a:
	jmp *-16(%r13)
_c1p78:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.overflowError_entry, .-GHC.Real.overflowError_entry


==================== Asm code ====================
2018-03-16 15:56:04.278435748 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.overflowError_info
.type GHC.Real.overflowError_info, @object
GHC.Real.overflowError_info:
	.quad	GHC.Real.overflowError_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+312


==================== Asm code ====================
2018-03-16 15:56:04.280106164 UTC

.section .data
.align 8
.align 1
lvl_r1j38_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.$fIntegralInt1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.288120865 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdivMod_closure
.type GHC.Real.$fIntegralInt_$cdivMod_closure, @object
GHC.Real.$fIntegralInt_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralInt_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.288991465 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cdivMod_entry
.type GHC.Real.$fIntegralInt_$cdivMod_entry, @object
GHC.Real.$fIntegralInt_$cdivMod_entry:
_c1p7r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1p7v
_c1p7w:
	movq $block_c1p7o_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1p7o
_c1p7p:
	movq (%rbx),%rax
	jmp *(%rax)
_c1p7v:
	movl $GHC.Real.$fIntegralInt_$cdivMod_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cdivMod_entry, .-GHC.Real.$fIntegralInt_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:04.289728737 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdivMod_info
.type GHC.Real.$fIntegralInt_$cdivMod_info, @object
GHC.Real.$fIntegralInt_$cdivMod_info:
	.quad	GHC.Real.$fIntegralInt_$cdivMod_entry
	.quad	0
	.quad	13510803177078798
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.290420235 UTC

.section .text
.align 8
_c1p7o:
_c1p7o:
	movq $block_c1p7u_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1p7u
_c1p7y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1p7o, .-_c1p7o


==================== Asm code ====================
2018-03-16 15:56:04.291019174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p7o_info:
	.quad	_c1p7o
	.quad	1
	.quad	9007203549708318
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.293636966 UTC

.section .text
.align 8
_c1p7u:
_c1p7u:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1p7E
_c1p7D:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1p9R
_c1p9P:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1p9O
_c1p9N:
	testq %rax,%rax
	jle _c1p9u
_c1p9L:
	movq $-1,%rbx
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1p9R:
	testq %rbx,%rbx
	jne _c1p9j
_c1p9Q:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1p9O:
	addq $-56,%r12
	movl $lvl_r1j38_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p9u:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p9j:
	testq %rax,%rax
	jle _c1p8k
_c1p9h:
	testq %rbx,%rbx
	jge _c1p8Z
_c1p9g:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p8Z:
	testq %rax,%rax
	jge _c1p8w
_c1p8X:
	testq %rbx,%rbx
	jle _c1p8F
_c1p8W:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p8F:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p8w:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p8k:
	testq %rax,%rax
	jge _c1p7R
_c1p8i:
	testq %rbx,%rbx
	jle _c1p80
_c1p8h:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p80:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p7R:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1p7E:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1p7u, .-_c1p7u


==================== Asm code ====================
2018-03-16 15:56:04.295235639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1p7u_info:
	.quad	_c1p7u
	.quad	65
	.quad	9007203549708318
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.301077231 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquotRem_closure
.type GHC.Real.$fIntegralInt_$cquotRem_closure, @object
GHC.Real.$fIntegralInt_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralInt_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.301978045 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cquotRem_entry
.type GHC.Real.$fIntegralInt_$cquotRem_entry, @object
GHC.Real.$fIntegralInt_$cquotRem_entry:
_c1paW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pb0
_c1pb1:
	movq $block_c1paT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1paT
_c1paU:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pb0:
	movl $GHC.Real.$fIntegralInt_$cquotRem_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cquotRem_entry, .-GHC.Real.$fIntegralInt_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:04.302642621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquotRem_info
.type GHC.Real.$fIntegralInt_$cquotRem_info, @object
GHC.Real.$fIntegralInt_$cquotRem_info:
	.quad	GHC.Real.$fIntegralInt_$cquotRem_entry
	.quad	0
	.quad	27021602059190286
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.303330178 UTC

.section .text
.align 8
_c1paT:
_c1paT:
	movq $block_c1paZ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1paZ
_c1pb3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1paT, .-_c1paT


==================== Asm code ====================
2018-03-16 15:56:04.303938772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1paT_info:
	.quad	_c1paT
	.quad	1
	.quad	9007203549708318
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.304952358 UTC

.section .text
.align 8
_c1paZ:
_c1paZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1pb9
_c1pb8:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1pbs
_c1pbq:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1pbp
_c1pbo:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1pbs:
	testq %rbx,%rbx
	jne _c1pbg
_c1pbr:
	addq $-56,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1pbp:
	addq $-56,%r12
	movl $lvl_r1j38_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pbg:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pb9:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1paZ, .-_c1paZ


==================== Asm code ====================
2018-03-16 15:56:04.305911386 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1paZ_info:
	.quad	_c1paZ
	.quad	65
	.quad	9007203549708318
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.308669399 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cdiv_closure
.type GHC.Real.$w$cdiv_closure, @object
GHC.Real.$w$cdiv_closure:
	.quad	GHC.Real.$w$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.309533764 UTC

.section .text
.align 8
.globl GHC.Real.$w$cdiv_entry
.type GHC.Real.$w$cdiv_entry, @object
GHC.Real.$w$cdiv_entry:
_c1pc0:
	cmpq $-1,%rsi
	je _c1pbY
_u1pc9:
	testq %rsi,%rsi
	je _c1pbZ
_c1pbX:
	jmp GHC.Classes.divInt#_entry
_c1pc8:
	movl $GHC.Real.overflowError_closure,%ebx
	jmp stg_ap_0_fast
_c1pbY:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c1pc8
_c1pc7:
	movq $-1,%rsi
	jmp GHC.Classes.divInt#_entry
_c1pbZ:
	movl $GHC.Real.divZeroError_closure,%ebx
	jmp stg_ap_0_fast
	.size GHC.Real.$w$cdiv_entry, .-GHC.Real.$w$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:04.310206482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cdiv_info
.type GHC.Real.$w$cdiv_info, @object
GHC.Real.$w$cdiv_info:
	.quad	GHC.Real.$w$cdiv_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934604
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.31414474 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdiv_closure
.type GHC.Real.$fIntegralInt_$cdiv_closure, @object
GHC.Real.$fIntegralInt_$cdiv_closure:
	.quad	GHC.Real.$fIntegralInt_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.314922035 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cdiv_entry
.type GHC.Real.$fIntegralInt_$cdiv_entry, @object
GHC.Real.$fIntegralInt_$cdiv_entry:
_c1pcm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pcz
_c1pcA:
	movq $block_c1pcj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pcj
_c1pck:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pcz:
	movl $GHC.Real.$fIntegralInt_$cdiv_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cdiv_entry, .-GHC.Real.$fIntegralInt_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:04.315600301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdiv_info
.type GHC.Real.$fIntegralInt_$cdiv_info, @object
GHC.Real.$fIntegralInt_$cdiv_info:
	.quad	GHC.Real.$fIntegralInt_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+352


==================== Asm code ====================
2018-03-16 15:56:04.316298275 UTC

.section .text
.align 8
_c1pcj:
_c1pcj:
	movq $block_c1pcp_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1pcp
_c1pcq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pcj, .-_c1pcj


==================== Asm code ====================
2018-03-16 15:56:04.316883673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pcj_info:
	.quad	_c1pcj
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+360


==================== Asm code ====================
2018-03-16 15:56:04.317618566 UTC

.section .text
.align 8
_c1pcp:
_c1pcp:
	movq 8(%rbp),%rax
	movq $block_c1pcu_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$cdiv_entry
	.size _c1pcp, .-_c1pcp


==================== Asm code ====================
2018-03-16 15:56:04.318230325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pcp_info:
	.quad	_c1pcp
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+360


==================== Asm code ====================
2018-03-16 15:56:04.318913659 UTC

.section .text
.align 8
_c1pcu:
_c1pcu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1pcF
_c1pcE:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pcF:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1pcu, .-_c1pcu


==================== Asm code ====================
2018-03-16 15:56:04.319554333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pcu_info:
	.quad	_c1pcu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.32464331 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquot_closure
.type GHC.Real.$fIntegralInt_$cquot_closure, @object
GHC.Real.$fIntegralInt_$cquot_closure:
	.quad	GHC.Real.$fIntegralInt_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.32572663 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cquot_entry
.type GHC.Real.$fIntegralInt_$cquot_entry, @object
GHC.Real.$fIntegralInt_$cquot_entry:
_c1pd6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pda
_c1pdb:
	movq $block_c1pd3_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pd3
_c1pd4:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pda:
	movl $GHC.Real.$fIntegralInt_$cquot_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cquot_entry, .-GHC.Real.$fIntegralInt_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:04.326455798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquot_info
.type GHC.Real.$fIntegralInt_$cquot_info, @object
GHC.Real.$fIntegralInt_$cquot_info:
	.quad	GHC.Real.$fIntegralInt_$cquot_entry
	.quad	0
	.quad	324259177465643022
	.quad	8589934607
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.327194331 UTC

.section .text
.align 8
_c1pd3:
_c1pd3:
	movq $block_c1pd9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1pd9
_c1pdd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pd3, .-_c1pd3


==================== Asm code ====================
2018-03-16 15:56:04.327788881 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pd3_info:
	.quad	_c1pd3
	.quad	1
	.quad	36028801313931294
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.328723905 UTC

.section .text
.align 8
_c1pd9:
_c1pd9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1pdj
_c1pdi:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1pdE
_c1pdC:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1pdB
_c1pdA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1pdE:
	testq %rbx,%rbx
	jne _c1pdr
_c1pdD:
	addq $-16,%r12
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1pdB:
	addq $-16,%r12
	movl $GHC.Real.overflowError_closure,%ebx
	addq $16,%rbp
	jmp stg_ap_0_fast
_c1pdr:
	movq $GHC.Types.I#_con_info,-8(%r12)
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pdj:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pd9, .-_c1pd9


==================== Asm code ====================
2018-03-16 15:56:04.329575479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pd9_info:
	.quad	_c1pd9
	.quad	65
	.quad	36028801313931294
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.331533545 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_closure
.type GHC.Real.$fIntegralInt_closure, @object
GHC.Real.$fIntegralInt_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealInt_closure+1
	.quad	GHC.Enum.$fEnumInt_closure
	.quad	GHC.Real.$fIntegralInt_$cquot_closure+2
	.quad	GHC.Real.$fIntegralInt_$crem_closure+2
	.quad	GHC.Real.$fIntegralInt_$cdiv_closure+2
	.quad	GHC.Real.$fIntegralInt_$cmod_closure+2
	.quad	GHC.Real.$fIntegralInt_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralInt_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.333286721 UTC

.section .data
.align 8
.align 1
lvl1_r1j39_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:56:04.338331177 UTC

.section .data
.align 8
.align 1
lvl2_r1j3a_closure:
	.quad	lvl2_r1j3a_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.339275264 UTC

.section .text
.align 8
lvl2_r1j3a_entry:
_c1pen:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1peo
_c1pep:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1pem
_c1pel:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	xorl %esi,%esi
	movl $lvl1_r1j39_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Real.$wgcd'_entry
_c1peo:
	jmp *-16(%r13)
_c1pem:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r1j3a_entry, .-lvl2_r1j3a_entry


==================== Asm code ====================
2018-03-16 15:56:04.339921772 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r1j3a_info:
	.quad	lvl2_r1j3a_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+376


==================== Asm code ====================
2018-03-16 15:56:04.340487531 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wgcd'_closure
.type GHC.Real.$wgcd'_closure, @object
GHC.Real.$wgcd'_closure:
	.quad	GHC.Real.$wgcd'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.341322506 UTC

.section .text
.align 8
.globl GHC.Real.$wgcd'_entry
.type GHC.Real.$wgcd'_entry, @object
GHC.Real.$wgcd'_entry:
_c1peu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pev
_u1peB:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1pe4
_c1pev:
	movl $GHC.Real.$wgcd'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$wgcd'_entry, .-GHC.Real.$wgcd'_entry


==================== Asm code ====================
2018-03-16 15:56:04.341954503 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wgcd'_info
.type GHC.Real.$wgcd'_info, @object
GHC.Real.$wgcd'_info:
	.quad	GHC.Real.$wgcd'_entry
	.quad	0
	.quad	12884901902
	.quad	8589934606
	.quad	S1jKw_srt+376


==================== Asm code ====================
2018-03-16 15:56:04.342779514 UTC

.section .text
.align 8
_c1pe4:
_c1pe4:
	movq 8(%rbp),%rax
	cmpq $-1,%rax
	jne _u1peA
_c1pes:
	movl $lvl2_r1j3a_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u1peA:
	movq (%rbp),%rbx
	testq %rax,%rax
	jne _c1per
_c1pet:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1per:
	movq $block_c1pe9_info,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1pe9
_c1pea:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pe4, .-_c1pe4


==================== Asm code ====================
2018-03-16 15:56:04.343637499 UTC

.section .text
.align 8
_c1pe9:
_c1pe9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1pez
_c1pey:
	movq 8(%rbp),%rax
	movq %rax,%rcx
	movq 7(%rbx),%rax
	cqto
	idivq %rcx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	jmp _c1pe4
_c1pez:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pe9, .-_c1pe9


==================== Asm code ====================
2018-03-16 15:56:04.344342399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pe9_info:
	.quad	_c1pe9
	.quad	65
	.quad	4294967326
	.quad	S1jKw_srt+384


==================== Asm code ====================
2018-03-16 15:56:04.348141986 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_gcd'_closure
.type GHC.Real.$fEnumRatio_gcd'_closure, @object
GHC.Real.$fEnumRatio_gcd'_closure:
	.quad	GHC.Real.$fEnumRatio_gcd'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.348891284 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_gcd'_entry
.type GHC.Real.$fEnumRatio_gcd'_entry, @object
GHC.Real.$fEnumRatio_gcd'_entry:
_c1pfb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pfc
_u1pfp:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1pf3
_c1pfc:
	movl $GHC.Real.$fEnumRatio_gcd'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_gcd'_entry, .-GHC.Real.$fEnumRatio_gcd'_entry


==================== Asm code ====================
2018-03-16 15:56:04.350622476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_gcd'_info
.type GHC.Real.$fEnumRatio_gcd'_info, @object
GHC.Real.$fEnumRatio_gcd'_info:
	.quad	GHC.Real.$fEnumRatio_gcd'_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+392


==================== Asm code ====================
2018-03-16 15:56:04.351297703 UTC

.section .text
.align 8
_c1pf3:
_c1pf3:
	movq $block_c1pf6_info,-8(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1pf3, .-_c1pf3


==================== Asm code ====================
2018-03-16 15:56:04.352020983 UTC

.section .text
.align 8
_c1pf6:
_c1pf6:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c1pfa
_c1pf9:
	movq $block_c1pfg_info,8(%rbp)
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.remInteger_entry
_c1pfa:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pf6, .-_c1pf6


==================== Asm code ====================
2018-03-16 15:56:04.352640905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pf6_info:
	.quad	_c1pf6
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.353325779 UTC

.section .text
.align 8
_c1pfg:
_c1pfg:
	movq 8(%rbp),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	jmp _c1pf3
	.size _c1pfg, .-_c1pfg


==================== Asm code ====================
2018-03-16 15:56:04.353893292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pfg_info:
	.quad	_c1pfg
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.362650154 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.gcd_closure
.type GHC.Real.gcd_closure, @object
GHC.Real.gcd_closure:
	.quad	GHC.Real.gcd_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.363459786 UTC

.section .text
.align 8
lvl8_s1jfi_entry:
_c1pgl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgm
_c1pgn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pgj_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pgm:
	jmp *-16(%r13)
	.size lvl8_s1jfi_entry, .-lvl8_s1jfi_entry


==================== Asm code ====================
2018-03-16 15:56:04.364038018 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_s1jfi_info:
	.quad	lvl8_s1jfi_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.364695408 UTC

.section .text
.align 8
_c1pgj:
_c1pgj:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Real.even1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1pgj, .-_c1pgj


==================== Asm code ====================
2018-03-16 15:56:04.365292139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pgj_info:
	.quad	_c1pgj
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.366010772 UTC

.section .text
.align 8
$dNum_s1jfm_entry:
_c1pgt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgu
_c1pgv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pgu:
	jmp *-16(%r13)
	.size $dNum_s1jfm_entry, .-$dNum_s1jfm_entry


==================== Asm code ====================
2018-03-16 15:56:04.366629781 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jfm_info:
	.quad	$dNum_s1jfm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.367365952 UTC

.section .text
.align 8
sat_s1jft_entry:
_c1pgy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgz
_c1pgA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.abs_entry
_c1pgz:
	jmp *-16(%r13)
	.size sat_s1jft_entry, .-sat_s1jft_entry


==================== Asm code ====================
2018-03-16 15:56:04.367998853 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jft_info:
	.quad	sat_s1jft_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.368728176 UTC

.section .text
.align 8
sat_s1jfs_entry:
_c1pgD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgE
_c1pgF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.abs_entry
_c1pgE:
	jmp *-16(%r13)
	.size sat_s1jfs_entry, .-sat_s1jfs_entry


==================== Asm code ====================
2018-03-16 15:56:04.369414208 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jfs_info:
	.quad	sat_s1jfs_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.370116552 UTC

.section .text
.align 8
sat_s1jfr_entry:
_c1pgJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgK
_c1pgL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.rem_entry
_c1pgK:
	jmp *-16(%r13)
	.size sat_s1jfr_entry, .-sat_s1jfr_entry


==================== Asm code ====================
2018-03-16 15:56:04.37076693 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jfr_info:
	.quad	sat_s1jfr_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.371492811 UTC

.section .text
.align 8
.globl GHC.Real.gcd_entry
.type GHC.Real.gcd_entry, @object
GHC.Real.gcd_entry:
_c1pgM:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pgN
_c1pgO:
	movq $block_c1pfN_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1pgN:
	movl $GHC.Real.gcd_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.gcd_entry, .-GHC.Real.gcd_entry


==================== Asm code ====================
2018-03-16 15:56:04.372196852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.gcd_info
.type GHC.Real.gcd_info, @object
GHC.Real.gcd_info:
	.quad	GHC.Real.gcd_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.372890894 UTC

.section .text
.align 8
_c1pfN:
_c1pfN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pgR
_c1pgQ:
	movq $lvl8_s1jfi_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1pfT_info,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1pgR:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pfN, .-_c1pfN


==================== Asm code ====================
2018-03-16 15:56:04.373581815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pfN_info:
	.quad	_c1pfN
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+400


==================== Asm code ====================
2018-03-16 15:56:04.374171214 UTC

.section .text
.align 8
_c1pfT:
_c1pfT:
	movq $block_c1pfX_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1pfT, .-_c1pfT


==================== Asm code ====================
2018-03-16 15:56:04.374751278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pfT_info:
	.quad	_c1pfT
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.375506007 UTC

.section .text
.align 8
_c1pfX:
_c1pfX:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1pgV
_c1pgU:
	movq $$dNum_s1jfm_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s1jft_info,-56(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	movq $sat_s1jfs_info,-24(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%rax
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,32(%rbp)
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _c1pga
_c1pgV:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pfX, .-_c1pfX


==================== Asm code ====================
2018-03-16 15:56:04.376263005 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pfX_info:
	.quad	_c1pfX
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.377492005 UTC

.section .text
.align 8
_c1pga:
_c1pga:
	movq $block_c1pgc_info,-8(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq (%rbp),%rax
	movq %rax,-24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
	.size _c1pga, .-_c1pga


==================== Asm code ====================
2018-03-16 15:56:04.378396284 UTC

.section .text
.align 8
_c1pgc:
_c1pgc:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1pgY
_c1ph5:
	movq %rax,%rbx
	addq $48,%rbp
	jmp stg_ap_0_fast
_c1ph1:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_c1pgY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1ph1
_c1ph0:
	movq $sat_s1jfr_info,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1pga
	.size _c1pgc, .-_c1pgc


==================== Asm code ====================
2018-03-16 15:56:04.379028963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pgc_info:
	.quad	_c1pgc
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.384397065 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$sreduce_closure
.type GHC.Real.$w$sreduce_closure, @object
GHC.Real.$w$sreduce_closure:
	.quad	GHC.Real.$w$sreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.384949654 UTC

.section .data.rel.ro
.align 8
.align 1
u1piZ_srtd:
	.quad	S1jKw_srt+160
	.quad	33
	.quad	5905711105


==================== Asm code ====================
2018-03-16 15:56:04.385840312 UTC

.section .text
.align 8
.globl GHC.Real.$w$sreduce_entry
.type GHC.Real.$w$sreduce_entry, @object
GHC.Real.$w$sreduce_entry:
_c1pig:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pih
_c1pii:
	movq $block_c1pib_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1pih:
	movl $GHC.Real.$w$sreduce_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$sreduce_entry, .-GHC.Real.$w$sreduce_entry


==================== Asm code ====================
2018-03-16 15:56:04.386518248 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$sreduce_info
.type GHC.Real.$w$sreduce_info, @object
GHC.Real.$w$sreduce_info:
	.quad	GHC.Real.$w$sreduce_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1piZ_srtd


==================== Asm code ====================
2018-03-16 15:56:04.387252562 UTC

.section .text
.align 8
_c1pib:
_c1pib:
	cmpq $1,%rbx
	je _c1pif
_c1pie:
	movq $block_c1pil_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.absInteger_entry
_c1pif:
	movl $GHC.Real.ratioZeroDenominatorError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1pib, .-_c1pib


==================== Asm code ====================
2018-03-16 15:56:04.387873585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pib_info:
	.quad	_c1pib
	.quad	2
	.quad	6918091981889470494
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.38854183 UTC

.section .text
.align 8
_c1pil:
_c1pil:
	movq $block_c1pip_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.absInteger_entry
	.size _c1pil, .-_c1pil


==================== Asm code ====================
2018-03-16 15:56:04.389144591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pil_info:
	.quad	_c1pil
	.quad	2
	.quad	6917529031936049182
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.389878558 UTC

.section .text
.align 8
_c1pip:
_c1pip:
	movq 8(%rbp),%rax
	movq $block_c1pit_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Real.$fEnumRatio_gcd'_entry
	.size _c1pip, .-_c1pip


==================== Asm code ====================
2018-03-16 15:56:04.390452907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pip_info:
	.quad	_c1pip
	.quad	3
	.quad	6917529031936049182
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.391088656 UTC

.section .text
.align 8
_c1pit:
_c1pit:
	movq $block_c1piA_info,-8(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1pit, .-_c1pit


==================== Asm code ====================
2018-03-16 15:56:04.391675004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pit_info:
	.quad	_c1pit
	.quad	2
	.quad	4611686022722355230
	.quad	S1jKw_srt+160


==================== Asm code ====================
2018-03-16 15:56:04.392379382 UTC

.section .text
.align 8
_c1piA:
_c1piA:
	cmpq $1,%rbx
	je _c1piV
_c1piM:
	movq $block_c1piF_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.quotInteger_entry
_c1piV:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _c1piA, .-_c1piA


==================== Asm code ====================
2018-03-16 15:56:04.393004851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1piA_info:
	.quad	_c1piA
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+424


==================== Asm code ====================
2018-03-16 15:56:04.393744765 UTC

.section .text
.align 8
_c1piF:
_c1piF:
	movq $block_c1piJ_info,16(%rbp)
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.quotInteger_entry
	.size _c1piF, .-_c1piF


==================== Asm code ====================
2018-03-16 15:56:04.394332322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1piF_info:
	.quad	_c1piF
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.394957443 UTC

.section .text
.align 8
_c1piJ:
_c1piJ:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1piJ, .-_c1piJ


==================== Asm code ====================
2018-03-16 15:56:04.395544845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1piJ_info:
	.quad	_c1piJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.398714138 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.reduce_$sreduce_closure
.type GHC.Real.reduce_$sreduce_closure, @object
GHC.Real.reduce_$sreduce_closure:
	.quad	GHC.Real.reduce_$sreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.399478607 UTC

.section .text
.align 8
.globl GHC.Real.reduce_$sreduce_entry
.type GHC.Real.reduce_$sreduce_entry, @object
GHC.Real.reduce_$sreduce_entry:
_c1pjz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pjA
_c1pjB:
	movq $block_c1pjw_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$sreduce_entry
_c1pjA:
	movl $GHC.Real.reduce_$sreduce_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.reduce_$sreduce_entry, .-GHC.Real.reduce_$sreduce_entry


==================== Asm code ====================
2018-03-16 15:56:04.400112934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.reduce_$sreduce_info
.type GHC.Real.reduce_$sreduce_info, @object
GHC.Real.reduce_$sreduce_info:
	.quad	GHC.Real.reduce_$sreduce_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.400852567 UTC

.section .text
.align 8
_c1pjw:
_c1pjw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pjE
_c1pjD:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pjE:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pjw, .-_c1pjw


==================== Asm code ====================
2018-03-16 15:56:04.401590925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pjw_info:
	.quad	_c1pjw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.407462045 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealWord_$ctoRational_closure
.type GHC.Real.$fRealWord_$ctoRational_closure, @object
GHC.Real.$fRealWord_$ctoRational_closure:
	.quad	GHC.Real.$fRealWord_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.408066361 UTC

.section .data.rel.ro
.align 8
.align 1
u1pki_srtd:
	.quad	S1jKw_srt
	.quad	56
	.quad	40532396646335489


==================== Asm code ====================
2018-03-16 15:56:04.40893479 UTC

.section .text
.align 8
.globl GHC.Real.$fRealWord_$ctoRational_entry
.type GHC.Real.$fRealWord_$ctoRational_entry, @object
GHC.Real.$fRealWord_$ctoRational_entry:
_c1pjV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pk9
_c1pka:
	movq $block_c1pjS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pjS
_c1pjT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pk9:
	movl $GHC.Real.$fRealWord_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealWord_$ctoRational_entry, .-GHC.Real.$fRealWord_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:04.409610892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealWord_$ctoRational_info
.type GHC.Real.$fRealWord_$ctoRational_info, @object
GHC.Real.$fRealWord_$ctoRational_info:
	.quad	GHC.Real.$fRealWord_$ctoRational_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1pki_srtd


==================== Asm code ====================
2018-03-16 15:56:04.410188253 UTC

.section .data.rel.ro
.align 8
.align 1
u1pkj_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627371521


==================== Asm code ====================
2018-03-16 15:56:04.410839613 UTC

.section .text
.align 8
_c1pjS:
_c1pjS:
	movq $block_c1pjY_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _c1pjS, .-_c1pjS


==================== Asm code ====================
2018-03-16 15:56:04.411411607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pjS_info:
	.quad	_c1pjS
	.quad	0
	.quad	-4294967266
	.quad	u1pkj_srtd


==================== Asm code ====================
2018-03-16 15:56:04.411976109 UTC

.section .data.rel.ro
.align 8
.align 1
u1pkk_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627371521


==================== Asm code ====================
2018-03-16 15:56:04.412632282 UTC

.section .text
.align 8
_c1pjY:
_c1pjY:
	movq $block_c1pk2_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pjY, .-_c1pjY


==================== Asm code ====================
2018-03-16 15:56:04.413332452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pjY_info:
	.quad	_c1pjY
	.quad	0
	.quad	-4294967266
	.quad	u1pkk_srtd


==================== Asm code ====================
2018-03-16 15:56:04.413874807 UTC

.section .data.rel.ro
.align 8
.align 1
u1pkl_srtd:
	.quad	S1jKw_srt+80
	.quad	43
	.quad	4398046511105


==================== Asm code ====================
2018-03-16 15:56:04.414491397 UTC

.section .text
.align 8
_c1pk2:
_c1pk2:
	movq $block_c1pk6_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pk2, .-_c1pk2


==================== Asm code ====================
2018-03-16 15:56:04.415062032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pk2_info:
	.quad	_c1pk2
	.quad	0
	.quad	-4294967266
	.quad	u1pkl_srtd


==================== Asm code ====================
2018-03-16 15:56:04.415791856 UTC

.section .text
.align 8
_c1pk6:
_c1pk6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pkg
_c1pkf:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pkg:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pk6, .-_c1pk6


==================== Asm code ====================
2018-03-16 15:56:04.416419238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pk6_info:
	.quad	_c1pk6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.418266696 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealWord_closure
.type GHC.Real.$fRealWord_closure, @object
GHC.Real.$fRealWord_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumWord_closure
	.quad	GHC.Classes.$fOrdWord_closure
	.quad	GHC.Real.$fRealWord_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.420115457 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_closure
.type GHC.Real.$fIntegralWord_closure, @object
GHC.Real.$fIntegralWord_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealWord_closure+1
	.quad	GHC.Enum.$fEnumWord_closure
	.quad	GHC.Real.$fIntegralWord_$cquot_closure+2
	.quad	GHC.Real.$fIntegralWord_$crem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cquot_closure+2
	.quad	GHC.Real.$fIntegralWord_$crem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.425589814 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c*_closure
.type GHC.Real.$fFractionalRatio_$s$c*_closure, @object
GHC.Real.$fFractionalRatio_$s$c*_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.426168765 UTC

.section .data.rel.ro
.align 8
.align 1
u1plm_srtd:
	.quad	S1jKw_srt
	.quad	57
	.quad	76561193665298433


==================== Asm code ====================
2018-03-16 15:56:04.427029597 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$c*_entry
.type GHC.Real.$fFractionalRatio_$s$c*_entry, @object
GHC.Real.$fFractionalRatio_$s$c*_entry:
_c1pkS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1plb
_c1plc:
	movq $block_c1pkP_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pkP
_c1pkQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1plb:
	movl $GHC.Real.$fFractionalRatio_$s$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$c*_entry, .-GHC.Real.$fFractionalRatio_$s$c*_entry


==================== Asm code ====================
2018-03-16 15:56:04.427681231 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c*_info
.type GHC.Real.$fFractionalRatio_$s$c*_info, @object
GHC.Real.$fFractionalRatio_$s$c*_info:
	.quad	GHC.Real.$fFractionalRatio_$s$c*_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1plm_srtd


==================== Asm code ====================
2018-03-16 15:56:04.428282327 UTC

.section .data.rel.ro
.align 8
.align 1
u1pln_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.428986446 UTC

.section .text
.align 8
_c1pkP:
_c1pkP:
	movq $block_c1pkV_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pkV
_c1pkW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pkP, .-_c1pkP


==================== Asm code ====================
2018-03-16 15:56:04.429682477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pkP_info:
	.quad	_c1pkP
	.quad	1
	.quad	-4294967266
	.quad	u1pln_srtd


==================== Asm code ====================
2018-03-16 15:56:04.430235981 UTC

.section .data.rel.ro
.align 8
.align 1
u1plo_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.430926302 UTC

.section .text
.align 8
_c1pkV:
_c1pkV:
	movq $block_c1pl0_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pkV, .-_c1pkV


==================== Asm code ====================
2018-03-16 15:56:04.432077428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pkV_info:
	.quad	_c1pkV
	.quad	2
	.quad	-4294967266
	.quad	u1plo_srtd


==================== Asm code ====================
2018-03-16 15:56:04.432615079 UTC

.section .data.rel.ro
.align 8
.align 1
u1plp_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.433333475 UTC

.section .text
.align 8
_c1pl0:
_c1pl0:
	movq 8(%rbp),%rax
	movq $block_c1pl4_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pl0, .-_c1pl0


==================== Asm code ====================
2018-03-16 15:56:04.433866872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pl0_info:
	.quad	_c1pl0
	.quad	2
	.quad	-4294967266
	.quad	u1plp_srtd


==================== Asm code ====================
2018-03-16 15:56:04.434474287 UTC

.section .text
.align 8
_c1pl4:
_c1pl4:
	movq 8(%rbp),%rax
	movq $block_c1pl8_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pl4, .-_c1pl4


==================== Asm code ====================
2018-03-16 15:56:04.435080786 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pl4_info:
	.quad	_c1pl4
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.435797279 UTC

.section .text
.align 8
_c1pl8:
_c1pl8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1plj
_c1pli:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1plj:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pl8, .-_c1pl8


==================== Asm code ====================
2018-03-16 15:56:04.436415605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pl8_info:
	.quad	_c1pl8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.441852269 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c-_closure
.type GHC.Real.$w$s$c-_closure, @object
GHC.Real.$w$s$c-_closure:
	.quad	GHC.Real.$w$s$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.442400923 UTC

.section .data.rel.ro
.align 8
.align 1
u1pmj_srtd:
	.quad	S1jKw_srt
	.quad	59
	.quad	436849163854938113


==================== Asm code ====================
2018-03-16 15:56:04.443239629 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c-_entry
.type GHC.Real.$w$s$c-_entry, @object
GHC.Real.$w$s$c-_entry:
_c1plY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pma
_c1pmb:
	movq $block_c1plW_info,-40(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1pma:
	movl $GHC.Real.$w$s$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c-_entry, .-GHC.Real.$w$s$c-_entry


==================== Asm code ====================
2018-03-16 15:56:04.443905676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c-_info
.type GHC.Real.$w$s$c-_info, @object
GHC.Real.$w$s$c-_info:
	.quad	GHC.Real.$w$s$c-_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1pmj_srtd


==================== Asm code ====================
2018-03-16 15:56:04.444406377 UTC

.section .data.rel.ro
.align 8
.align 1
u1pmk_srtd:
	.quad	S1jKw_srt
	.quad	58
	.quad	148618787703226369


==================== Asm code ====================
2018-03-16 15:56:04.445019177 UTC

.section .text
.align 8
_c1plW:
_c1plW:
	movq $block_c1pm1_info,(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1plW, .-_c1plW


==================== Asm code ====================
2018-03-16 15:56:04.445676054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1plW_info:
	.quad	_c1plW
	.quad	4
	.quad	-4294967266
	.quad	u1pmk_srtd


==================== Asm code ====================
2018-03-16 15:56:04.446207973 UTC

.section .data.rel.ro
.align 8
.align 1
u1pml_srtd:
	.quad	S1jKw_srt
	.quad	58
	.quad	148618787703226369


==================== Asm code ====================
2018-03-16 15:56:04.446811709 UTC

.section .text
.align 8
_c1pm1:
_c1pm1:
	movq $block_c1pm5_info,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pm1, .-_c1pm1


==================== Asm code ====================
2018-03-16 15:56:04.447361393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pm1_info:
	.quad	_c1pm1
	.quad	132
	.quad	-4294967266
	.quad	u1pml_srtd


==================== Asm code ====================
2018-03-16 15:56:04.447994015 UTC

.section .text
.align 8
_c1pm5:
_c1pm5:
	movq $block_c1pm9_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.minusInteger_entry
	.size _c1pm5, .-_c1pm5


==================== Asm code ====================
2018-03-16 15:56:04.448546769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pm5_info:
	.quad	_c1pm5
	.quad	2
	.quad	141733920798
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.449172918 UTC

.section .text
.align 8
_c1pm9:
_c1pm9:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pm9, .-_c1pm9


==================== Asm code ====================
2018-03-16 15:56:04.449781816 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pm9_info:
	.quad	_c1pm9
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.454031774 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c-_closure
.type GHC.Real.$fEnumRatio_$s$c-_closure, @object
GHC.Real.$fEnumRatio_$s$c-_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.454906591 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c-_entry
.type GHC.Real.$fEnumRatio_$s$c-_entry, @object
GHC.Real.$fEnumRatio_$s$c-_entry:
_c1pmN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pmY
_c1pmZ:
	movq $block_c1pmK_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pmK
_c1pmL:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pmY:
	movl $GHC.Real.$fEnumRatio_$s$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c-_entry, .-GHC.Real.$fEnumRatio_$s$c-_entry


==================== Asm code ====================
2018-03-16 15:56:04.455553403 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c-_info
.type GHC.Real.$fEnumRatio_$s$c-_info, @object
GHC.Real.$fEnumRatio_$s$c-_info:
	.quad	GHC.Real.$fEnumRatio_$s$c-_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.456268769 UTC

.section .text
.align 8
_c1pmK:
_c1pmK:
	movq $block_c1pmQ_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pmQ
_c1pmR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pmK, .-_c1pmK


==================== Asm code ====================
2018-03-16 15:56:04.456908186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pmK_info:
	.quad	_c1pmK
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.457617477 UTC

.section .text
.align 8
_c1pmQ:
_c1pmQ:
	movq 16(%rbp),%rax
	movq $block_c1pmV_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1pmQ, .-_c1pmQ


==================== Asm code ====================
2018-03-16 15:56:04.458243239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pmQ_info:
	.quad	_c1pmQ
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.458995895 UTC

.section .text
.align 8
_c1pmV:
_c1pmV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pn4
_c1pn3:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pn4:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pmV, .-_c1pmV


==================== Asm code ====================
2018-03-16 15:56:04.46013377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pmV_info:
	.quad	_c1pmV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.464441311 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c+_closure
.type GHC.Real.$w$s$c+_closure, @object
GHC.Real.$w$s$c+_closure:
	.quad	GHC.Real.$w$s$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.465049798 UTC

.section .data.rel.ro
.align 8
.align 1
u1pnP_srtd:
	.quad	S1jKw_srt
	.quad	62
	.quad	3463268113447911425


==================== Asm code ====================
2018-03-16 15:56:04.465955188 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c+_entry
.type GHC.Real.$w$s$c+_entry, @object
GHC.Real.$w$s$c+_entry:
_c1pnu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pnG
_c1pnH:
	movq $block_c1pns_info,-40(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1pnG:
	movl $GHC.Real.$w$s$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c+_entry, .-GHC.Real.$w$s$c+_entry


==================== Asm code ====================
2018-03-16 15:56:04.466640576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c+_info
.type GHC.Real.$w$s$c+_info, @object
GHC.Real.$w$s$c+_info:
	.quad	GHC.Real.$w$s$c+_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1pnP_srtd


==================== Asm code ====================
2018-03-16 15:56:04.46714373 UTC

.section .data.rel.ro
.align 8
.align 1
u1pnQ_srtd:
	.quad	S1jKw_srt
	.quad	61
	.quad	1157425104234217473


==================== Asm code ====================
2018-03-16 15:56:04.467737201 UTC

.section .text
.align 8
_c1pns:
_c1pns:
	movq $block_c1pnx_info,(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pns, .-_c1pns


==================== Asm code ====================
2018-03-16 15:56:04.468320209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pns_info:
	.quad	_c1pns
	.quad	4
	.quad	-4294967266
	.quad	u1pnQ_srtd


==================== Asm code ====================
2018-03-16 15:56:04.468898841 UTC

.section .data.rel.ro
.align 8
.align 1
u1pnR_srtd:
	.quad	S1jKw_srt
	.quad	61
	.quad	1157425104234217473


==================== Asm code ====================
2018-03-16 15:56:04.469625079 UTC

.section .text
.align 8
_c1pnx:
_c1pnx:
	movq $block_c1pnB_info,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pnx, .-_c1pnx


==================== Asm code ====================
2018-03-16 15:56:04.470257697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pnx_info:
	.quad	_c1pnx
	.quad	132
	.quad	-4294967266
	.quad	u1pnR_srtd


==================== Asm code ====================
2018-03-16 15:56:04.470893423 UTC

.section .text
.align 8
_c1pnB:
_c1pnB:
	movq $block_c1pnF_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c1pnB, .-_c1pnB


==================== Asm code ====================
2018-03-16 15:56:04.471473486 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pnB_info:
	.quad	_c1pnB
	.quad	2
	.quad	1103806595102
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.472119453 UTC

.section .text
.align 8
_c1pnF:
_c1pnF:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pnF, .-_c1pnF


==================== Asm code ====================
2018-03-16 15:56:04.472688868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pnF_info:
	.quad	_c1pnF
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.476961875 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c+_closure
.type GHC.Real.$fEnumRatio_$s$c+_closure, @object
GHC.Real.$fEnumRatio_$s$c+_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.477821339 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c+_entry
.type GHC.Real.$fEnumRatio_$s$c+_entry, @object
GHC.Real.$fEnumRatio_$s$c+_entry:
_c1poj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pou
_c1pov:
	movq $block_c1pog_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pog
_c1poh:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pou:
	movl $GHC.Real.$fEnumRatio_$s$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c+_entry, .-GHC.Real.$fEnumRatio_$s$c+_entry


==================== Asm code ====================
2018-03-16 15:56:04.478492875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c+_info
.type GHC.Real.$fEnumRatio_$s$c+_info, @object
GHC.Real.$fEnumRatio_$s$c+_info:
	.quad	GHC.Real.$fEnumRatio_$s$c+_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.479172535 UTC

.section .text
.align 8
_c1pog:
_c1pog:
	movq $block_c1pom_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pom
_c1pon:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pog, .-_c1pog


==================== Asm code ====================
2018-03-16 15:56:04.479763412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pog_info:
	.quad	_c1pog
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.480439061 UTC

.section .text
.align 8
_c1pom:
_c1pom:
	movq 16(%rbp),%rax
	movq $block_c1por_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1pom, .-_c1pom


==================== Asm code ====================
2018-03-16 15:56:04.481031908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pom_info:
	.quad	_c1pom
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.481814436 UTC

.section .text
.align 8
_c1por:
_c1por:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1poA
_c1poz:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1poA:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1por, .-_c1por


==================== Asm code ====================
2018-03-16 15:56:04.482452258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1por_info:
	.quad	_c1por
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.484347948 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$fNumRatio_closure
.type GHC.Real.$fFractionalRatio_$s$fNumRatio_closure, @object
GHC.Real.$fFractionalRatio_$s$fNumRatio_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Real.$fEnumRatio_$s$c+_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c-_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$c*_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.48878794 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfromRational_closure
.type GHC.Real.$w$s$cfromRational_closure, @object
GHC.Real.$w$s$cfromRational_closure:
	.quad	GHC.Real.$w$s$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.490393193 UTC

.section .data.rel.ro
.align 8
.align 1
u1pph_srtd:
	.quad	S1jKw_srt
	.quad	64
	.quad	-9218868437227405311


==================== Asm code ====================
2018-03-16 15:56:04.491240251 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfromRational_entry
.type GHC.Real.$w$s$cfromRational_entry, @object
GHC.Real.$w$s$cfromRational_entry:
_c1pp1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pp9
_c1ppa:
	movq $block_c1poZ_info,-24(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.absInteger_entry
_c1pp9:
	movl $GHC.Real.$w$s$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfromRational_entry, .-GHC.Real.$w$s$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:04.491907373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfromRational_info
.type GHC.Real.$w$s$cfromRational_info, @object
GHC.Real.$w$s$cfromRational_info:
	.quad	GHC.Real.$w$s$cfromRational_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1pph_srtd


==================== Asm code ====================
2018-03-16 15:56:04.492480744 UTC

.section .data.rel.ro
.align 8
.align 1
u1ppi_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.493079727 UTC

.section .text
.align 8
_c1poZ:
_c1poZ:
	movq $block_c1pp4_info,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c1poZ, .-_c1poZ


==================== Asm code ====================
2018-03-16 15:56:04.493735412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1poZ_info:
	.quad	_c1poZ
	.quad	2
	.quad	-4294967266
	.quad	u1ppi_srtd


==================== Asm code ====================
2018-03-16 15:56:04.494270816 UTC

.section .data.rel.ro
.align 8
.align 1
u1ppj_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.494882295 UTC

.section .text
.align 8
_c1pp4:
_c1pp4:
	movq 8(%rbp),%rax
	movq $block_c1pp8_info,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pp4, .-_c1pp4


==================== Asm code ====================
2018-03-16 15:56:04.495460752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pp4_info:
	.quad	_c1pp4
	.quad	2
	.quad	-4294967266
	.quad	u1ppj_srtd


==================== Asm code ====================
2018-03-16 15:56:04.496098717 UTC

.section .text
.align 8
_c1pp8:
_c1pp8:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pp8, .-_c1pp8


==================== Asm code ====================
2018-03-16 15:56:04.496697987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pp8_info:
	.quad	_c1pp8
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.500249718 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_closure
.type GHC.Real.$fFractionalRatio_$s$cfromRational_closure, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.501071374 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_entry
.type GHC.Real.$fFractionalRatio_$s$cfromRational_entry, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_entry:
_c1ppI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ppO
_c1ppP:
	movq $block_c1ppF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ppF
_c1ppG:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ppO:
	movl $GHC.Real.$fFractionalRatio_$s$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cfromRational_entry, .-GHC.Real.$fFractionalRatio_$s$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:04.502052976 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_info
.type GHC.Real.$fFractionalRatio_$s$cfromRational_info, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1jKw_srt+504


==================== Asm code ====================
2018-03-16 15:56:04.502976068 UTC

.section .text
.align 8
_c1ppF:
_c1ppF:
	movq $block_c1ppL_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cfromRational_entry
	.size _c1ppF, .-_c1ppF


==================== Asm code ====================
2018-03-16 15:56:04.503826776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ppF_info:
	.quad	_c1ppF
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+504


==================== Asm code ====================
2018-03-16 15:56:04.504852322 UTC

.section .text
.align 8
_c1ppL:
_c1ppL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1ppT
_c1ppS:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ppT:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1ppL, .-_c1ppL


==================== Asm code ====================
2018-03-16 15:56:04.505640018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ppL_info:
	.quad	_c1ppL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.510337076 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c/_closure
.type GHC.Real.$w$s$c/_closure, @object
GHC.Real.$w$s$c/_closure:
	.quad	GHC.Real.$w$s$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.510890708 UTC

.section .data.rel.ro
.align 8
.align 1
u1pqE_srtd:
	.quad	S1jKw_srt
	.quad	66
	.quad	4503599627370497
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:04.511740787 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c/_entry
.type GHC.Real.$w$s$c/_entry, @object
GHC.Real.$w$s$c/_entry:
_c1pqe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pqu
_c1pqv:
	movq $block_c1pqc_info,-24(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1pqu:
	movl $GHC.Real.$w$s$c/_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c/_entry, .-GHC.Real.$w$s$c/_entry


==================== Asm code ====================
2018-03-16 15:56:04.512439815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c/_info
.type GHC.Real.$w$s$c/_info, @object
GHC.Real.$w$s$c/_info:
	.quad	GHC.Real.$w$s$c/_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1pqE_srtd


==================== Asm code ====================
2018-03-16 15:56:04.513012849 UTC

.section .data.rel.ro
.align 8
.align 1
u1pqF_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.513842883 UTC

.section .text
.align 8
_c1pqc:
_c1pqc:
	movq $block_c1pqh_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.absInteger_entry
	.size _c1pqc, .-_c1pqc


==================== Asm code ====================
2018-03-16 15:56:04.514520313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pqc_info:
	.quad	_c1pqc
	.quad	2
	.quad	-4294967266
	.quad	u1pqF_srtd


==================== Asm code ====================
2018-03-16 15:56:04.515118249 UTC

.section .data.rel.ro
.align 8
.align 1
u1pqG_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.516306351 UTC

.section .text
.align 8
_c1pqh:
_c1pqh:
	movq $block_c1pql_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c1pqh, .-_c1pqh


==================== Asm code ====================
2018-03-16 15:56:04.516946726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pqh_info:
	.quad	_c1pqh
	.quad	3
	.quad	-4294967266
	.quad	u1pqG_srtd


==================== Asm code ====================
2018-03-16 15:56:04.517579054 UTC

.section .data.rel.ro
.align 8
.align 1
u1pqH_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.518240138 UTC

.section .text
.align 8
_c1pql:
_c1pql:
	movq $block_c1pqp_info,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pql, .-_c1pql


==================== Asm code ====================
2018-03-16 15:56:04.518867316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pql_info:
	.quad	_c1pql
	.quad	3
	.quad	-4294967266
	.quad	u1pqH_srtd


==================== Asm code ====================
2018-03-16 15:56:04.519359337 UTC

.section .data.rel.ro
.align 8
.align 1
u1pqI_srtd:
	.quad	S1jKw_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:04.520108529 UTC

.section .text
.align 8
_c1pqp:
_c1pqp:
	movq $block_c1pqt_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1pqp, .-_c1pqp


==================== Asm code ====================
2018-03-16 15:56:04.520677507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pqp_info:
	.quad	_c1pqp
	.quad	131
	.quad	-4294967266
	.quad	u1pqI_srtd


==================== Asm code ====================
2018-03-16 15:56:04.522097871 UTC

.section .text
.align 8
_c1pqt:
_c1pqt:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1pqt, .-_c1pqt


==================== Asm code ====================
2018-03-16 15:56:04.522681731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pqt_info:
	.quad	_c1pqt
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+416


==================== Asm code ====================
2018-03-16 15:56:04.527099313 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c/_closure
.type GHC.Real.$fFractionalRatio_$s$c/_closure, @object
GHC.Real.$fFractionalRatio_$s$c/_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.527972227 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$c/_entry
.type GHC.Real.$fFractionalRatio_$s$c/_entry, @object
GHC.Real.$fFractionalRatio_$s$c/_entry:
_c1prf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1prq
_c1prr:
	movq $block_c1prc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1prc
_c1prd:
	movq (%rbx),%rax
	jmp *(%rax)
_c1prq:
	movl $GHC.Real.$fFractionalRatio_$s$c/_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$c/_entry, .-GHC.Real.$fFractionalRatio_$s$c/_entry


==================== Asm code ====================
2018-03-16 15:56:04.528612706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c/_info
.type GHC.Real.$fFractionalRatio_$s$c/_info, @object
GHC.Real.$fFractionalRatio_$s$c/_info:
	.quad	GHC.Real.$fFractionalRatio_$s$c/_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+520


==================== Asm code ====================
2018-03-16 15:56:04.529361004 UTC

.section .text
.align 8
_c1prc:
_c1prc:
	movq $block_c1pri_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pri
_c1prj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1prc, .-_c1prc


==================== Asm code ====================
2018-03-16 15:56:04.529931575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1prc_info:
	.quad	_c1prc
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+520


==================== Asm code ====================
2018-03-16 15:56:04.530583875 UTC

.section .text
.align 8
_c1pri:
_c1pri:
	movq 16(%rbp),%rax
	movq $block_c1prn_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c/_entry
	.size _c1pri, .-_c1pri


==================== Asm code ====================
2018-03-16 15:56:04.531145616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pri_info:
	.quad	_c1pri
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+520


==================== Asm code ====================
2018-03-16 15:56:04.53185785 UTC

.section .text
.align 8
_c1prn:
_c1prn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1prw
_c1prv:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1prw:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1prn, .-_c1prn


==================== Asm code ====================
2018-03-16 15:56:04.532514673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1prn_info:
	.quad	_c1prn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.534422789 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure
.type GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure, @object
GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Real.$fFractionalRatio_$s$fNumRatio_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$c/_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.536283985 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioPrec_closure
.type GHC.Real.ratioPrec_closure, @object
GHC.Real.ratioPrec_closure:
	.quad	GHC.Types.I#_con_info
	.quad	7


==================== Asm code ====================
2018-03-16 15:56:04.538930319 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.infinity_closure
.type GHC.Real.infinity_closure, @object
GHC.Real.infinity_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.even1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.542935403 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.notANumber_closure
.type GHC.Real.notANumber_closure, @object
GHC.Real.notANumber_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.even1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.545978081 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numerator_closure
.type GHC.Real.numerator_closure, @object
GHC.Real.numerator_closure:
	.quad	GHC.Real.numerator_info


==================== Asm code ====================
2018-03-16 15:56:04.547352176 UTC

.section .text
.align 8
.globl GHC.Real.numerator_entry
.type GHC.Real.numerator_entry, @object
GHC.Real.numerator_entry:
_c1ps1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ps2
_c1ps3:
	movq $block_c1prY_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1prY
_c1prZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ps2:
	movl $GHC.Real.numerator_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.numerator_entry, .-GHC.Real.numerator_entry


==================== Asm code ====================
2018-03-16 15:56:04.547980666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numerator_info
.type GHC.Real.numerator_info, @object
GHC.Real.numerator_info:
	.quad	GHC.Real.numerator_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.548601554 UTC

.section .text
.align 8
_c1prY:
_c1prY:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1prY, .-_c1prY


==================== Asm code ====================
2018-03-16 15:56:04.54916927 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1prY_info:
	.quad	_c1prY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.552515538 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.denominator_closure
.type GHC.Real.denominator_closure, @object
GHC.Real.denominator_closure:
	.quad	GHC.Real.denominator_info


==================== Asm code ====================
2018-03-16 15:56:04.553445348 UTC

.section .text
.align 8
.globl GHC.Real.denominator_entry
.type GHC.Real.denominator_entry, @object
GHC.Real.denominator_entry:
_c1pso:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1psp
_c1psq:
	movq $block_c1psl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1psl
_c1psm:
	movq (%rbx),%rax
	jmp *(%rax)
_c1psp:
	movl $GHC.Real.denominator_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.denominator_entry, .-GHC.Real.denominator_entry


==================== Asm code ====================
2018-03-16 15:56:04.554074894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.denominator_info
.type GHC.Real.denominator_info, @object
GHC.Real.denominator_info:
	.quad	GHC.Real.denominator_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.554729481 UTC

.section .text
.align 8
_c1psl:
_c1psl:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1psl, .-_c1psl


==================== Asm code ====================
2018-03-16 15:56:04.555288334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1psl_info:
	.quad	_c1psl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.560403996 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFrom_closure
.type GHC.Real.$w$snumericEnumFrom_closure, @object
GHC.Real.$w$snumericEnumFrom_closure:
	.quad	GHC.Real.$w$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.561011022 UTC

.section .data.rel.ro
.align 8
.align 1
u1pt4_srtd:
	.quad	S1jKw_srt+80
	.quad	58
	.quad	146366987889541121


==================== Asm code ====================
2018-03-16 15:56:04.561948244 UTC

.section .text
.align 8
sat_s1jhu_entry:
_c1psR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1psS
_c1psT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1psM_info,-24(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.$fEnumRatio1_closure,%edi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$w$s$c+_entry
_c1psS:
	jmp *-16(%r13)
	.size sat_s1jhu_entry, .-sat_s1jhu_entry


==================== Asm code ====================
2018-03-16 15:56:04.562609976 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jhu_info:
	.quad	sat_s1jhu_entry
	.quad	2
	.quad	-4294967278
	.quad	u1pt4_srtd


==================== Asm code ====================
2018-03-16 15:56:04.563220843 UTC

.section .text
.align 8
_c1psM:
_c1psM:
	movq $block_c1psO_info,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$snumericEnumFrom_entry
	.size _c1psM, .-_c1psM


==================== Asm code ====================
2018-03-16 15:56:04.563789109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1psM_info:
	.quad	_c1psM
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+536


==================== Asm code ====================
2018-03-16 15:56:04.564526633 UTC

.section .text
.align 8
_c1psO:
_c1psO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1psX
_c1psW:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1psX:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1psO, .-_c1psO


==================== Asm code ====================
2018-03-16 15:56:04.565157082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1psO_info:
	.quad	_c1psO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.565807261 UTC

.section .data.rel.ro
.align 8
.align 1
u1pt5_srtd:
	.quad	S1jKw_srt+80
	.quad	58
	.quad	146366987889541121


==================== Asm code ====================
2018-03-16 15:56:04.566573227 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFrom_entry
.type GHC.Real.$w$snumericEnumFrom_entry, @object
GHC.Real.$w$snumericEnumFrom_entry:
_c1psZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1pt3
_c1pt2:
	movq $sat_s1jhu_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -48(%r12),%r14
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1pt3:
	movq $56,904(%r13)
	movl $GHC.Real.$w$snumericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFrom_entry, .-GHC.Real.$w$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:04.567257598 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFrom_info
.type GHC.Real.$w$snumericEnumFrom_info, @object
GHC.Real.$w$snumericEnumFrom_info:
	.quad	GHC.Real.$w$snumericEnumFrom_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1pt5_srtd


==================== Asm code ====================
2018-03-16 15:56:04.57089949 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.571707636 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_entry:
_c1ptv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ptB
_c1ptC:
	movq $block_c1pts_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pts
_c1ptt:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ptB:
	movl $GHC.Real.$fEnumRatio_$snumericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFrom_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:04.572346865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_info
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1jKw_srt+536


==================== Asm code ====================
2018-03-16 15:56:04.573074196 UTC

.section .text
.align 8
_c1pts:
_c1pts:
	movq $block_c1pty_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$snumericEnumFrom_entry
	.size _c1pts, .-_c1pts


==================== Asm code ====================
2018-03-16 15:56:04.57377047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pts_info:
	.quad	_c1pts
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+536


==================== Asm code ====================
2018-03-16 15:56:04.574667769 UTC

.section .text
.align 8
_c1pty:
_c1pty:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1ptG
_c1ptF:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ptG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pty, .-_c1pty


==================== Asm code ====================
2018-03-16 15:56:04.575778193 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pty_info:
	.quad	_c1pty
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.582966089 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFrom_closure
.type GHC.Real.$wnumericEnumFrom_closure, @object
GHC.Real.$wnumericEnumFrom_closure:
	.quad	GHC.Real.$wnumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.583907766 UTC

.section .text
.align 8
sat_s1jhG_entry:
_c1pud:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pue
_c1puf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pue:
	jmp *-16(%r13)
	.size sat_s1jhG_entry, .-sat_s1jhG_entry


==================== Asm code ====================
2018-03-16 15:56:04.584605776 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jhG_info:
	.quad	sat_s1jhG_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.585576972 UTC

.section .text
.align 8
sat_s1jhL_entry:
_c1pug:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pum
_c1pun:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pu5_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1pum:
	jmp *-16(%r13)
	.size sat_s1jhL_entry, .-sat_s1jhL_entry


==================== Asm code ====================
2018-03-16 15:56:04.586206679 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jhL_info:
	.quad	sat_s1jhL_entry
	.quad	2
	.quad	12884901906
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.586915085 UTC

.section .text
.align 8
_c1pu5:
_c1pu5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1puq
_c1pup:
	movq $sat_s1jhG_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1puh_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Num.+_entry
_c1puq:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pu5, .-_c1pu5


==================== Asm code ====================
2018-03-16 15:56:04.58757504 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pu5_info:
	.quad	_c1pu5
	.quad	2
	.quad	12884901918
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.58818493 UTC

.section .text
.align 8
_c1puh:
_c1puh:
	movq $block_c1puj_info,16(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
	.size _c1puh, .-_c1puh


==================== Asm code ====================
2018-03-16 15:56:04.588741408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1puh_info:
	.quad	_c1puh
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+560


==================== Asm code ====================
2018-03-16 15:56:04.589462452 UTC

.section .text
.align 8
_c1puj:
_c1puj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1puu
_c1put:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1puu:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1puj, .-_c1puj


==================== Asm code ====================
2018-03-16 15:56:04.590085924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1puj_info:
	.quad	_c1puj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.590824161 UTC

.section .text
.align 8
.globl GHC.Real.$wnumericEnumFrom_entry
.type GHC.Real.$wnumericEnumFrom_entry, @object
GHC.Real.$wnumericEnumFrom_entry:
_c1puv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1puw
_c1pux:
	movq $block_c1ptZ_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_0_fast
_c1puw:
	movl $GHC.Real.$wnumericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$wnumericEnumFrom_entry, .-GHC.Real.$wnumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:04.591498023 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFrom_info
.type GHC.Real.$wnumericEnumFrom_info, @object
GHC.Real.$wnumericEnumFrom_info:
	.quad	GHC.Real.$wnumericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.592238534 UTC

.section .text
.align 8
_c1ptZ:
_c1ptZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1puA
_c1puz:
	movq $sat_s1jhL_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1puA:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1ptZ, .-_c1ptZ


==================== Asm code ====================
2018-03-16 15:56:04.592848408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ptZ_info:
	.quad	_c1ptZ
	.quad	1
	.quad	12884901918
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.596020423 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFrom_closure
.type GHC.Real.numericEnumFrom_closure, @object
GHC.Real.numericEnumFrom_closure:
	.quad	GHC.Real.numericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.59685848 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFrom_entry
.type GHC.Real.numericEnumFrom_entry, @object
GHC.Real.numericEnumFrom_entry:
_c1pvd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pve
_c1pvf:
	movq $block_c1pva_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1pve:
	movl $GHC.Real.numericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFrom_entry, .-GHC.Real.numericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:04.597478051 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFrom_info
.type GHC.Real.numericEnumFrom_info, @object
GHC.Real.numericEnumFrom_info:
	.quad	GHC.Real.numericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+560


==================== Asm code ====================
2018-03-16 15:56:04.598220263 UTC

.section .text
.align 8
_c1pva:
_c1pva:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pvi
_c1pvh:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pvi:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pva, .-_c1pva


==================== Asm code ====================
2018-03-16 15:56:04.598868558 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pva_info:
	.quad	_c1pva
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.600528794 UTC

.section .data
.align 8
.align 1
sat_s1jhR_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:04.60224497 UTC

.section .data
.align 8
.align 1
sat_s1jhS_closure:
	.quad	:_con_info
	.quad	sat_s1jhR_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.605554967 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even2_closure
.type GHC.Real.even2_closure, @object
GHC.Real.even2_closure:
	.quad	GHC.Real.even2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.606460374 UTC

.section .text
.align 8
.globl GHC.Real.even2_entry
.type GHC.Real.even2_entry, @object
GHC.Real.even2_entry:
_c1pvA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pvB
_c1pvC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1pvz
_c1pvy:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s1jhS_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c1pvB:
	jmp *-16(%r13)
_c1pvz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.even2_entry, .-GHC.Real.even2_entry


==================== Asm code ====================
2018-03-16 15:56:04.607160052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even2_info
.type GHC.Real.even2_info, @object
GHC.Real.even2_info:
	.quad	GHC.Real.even2_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+576


==================== Asm code ====================
2018-03-16 15:56:04.610465871 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio2_closure
.type GHC.Real.$fEnumRatio2_closure, @object
GHC.Real.$fEnumRatio2_closure:
	.quad	GHC.Real.$fEnumRatio2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.611343403 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio2_entry
.type GHC.Real.$fEnumRatio2_entry, @object
GHC.Real.$fEnumRatio2_entry:
_c1pvT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pvU
_c1pvV:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1pvP
_c1pvO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1pvQ_info,-24(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.even2_closure,%edi
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movl $GHC.Real.$fEnumRatio1_closure,%r14d
	addq $-24,%rbp
	jmp GHC.Real.$w$s$c/_entry
_c1pvU:
	jmp *-16(%r13)
_c1pvP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fEnumRatio2_entry, .-GHC.Real.$fEnumRatio2_entry


==================== Asm code ====================
2018-03-16 15:56:04.612065732 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio2_info
.type GHC.Real.$fEnumRatio2_info, @object
GHC.Real.$fEnumRatio2_info:
	.quad	GHC.Real.$fEnumRatio2_entry
	.quad	0
	.quad	1172526071829
	.quad	S1jKw_srt+520


==================== Asm code ====================
2018-03-16 15:56:04.612827317 UTC

.section .text
.align 8
_c1pvQ:
_c1pvQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pvY
_c1pvX:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pvY:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pvQ, .-_c1pvQ


==================== Asm code ====================
2018-03-16 15:56:04.613502856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pvQ_info:
	.quad	_c1pvQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.619373494 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromTo_closure
.type GHC.Real.$w$snumericEnumFromTo_closure, @object
GHC.Real.$w$snumericEnumFromTo_closure:
	.quad	GHC.Real.$w$snumericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.620178859 UTC

.section .text
.align 8
ds_s1ji2_entry:
_c1pwo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pwz
_c1pwA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pwl_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c1pwl
_c1pwm:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pwz:
	jmp *-16(%r13)
	.size ds_s1ji2_entry, .-ds_s1ji2_entry


==================== Asm code ====================
2018-03-16 15:56:04.620836534 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1ji2_info:
	.quad	ds_s1ji2_entry
	.quad	1
	.quad	35188667056144
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.621609961 UTC

.section .text
.align 8
_c1pwl:
_c1pwl:
	movq $block_c1pwr_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movl $GHC.Real.$fEnumRatio2_closure,%ebx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pwr
_c1pws:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pwl, .-_c1pwl


==================== Asm code ====================
2018-03-16 15:56:04.622242745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pwl_info:
	.quad	_c1pwl
	.quad	0
	.quad	35188667056158
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.62285519 UTC

.section .text
.align 8
_c1pwr:
_c1pwr:
	movq 16(%rbp),%rax
	movq $block_c1pww_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1pwr, .-_c1pwr


==================== Asm code ====================
2018-03-16 15:56:04.623426864 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pwr_info:
	.quad	_c1pwr
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.624107467 UTC

.section .text
.align 8
_c1pww:
_c1pww:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pwF
_c1pwE:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pwF:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pww, .-_c1pww


==================== Asm code ====================
2018-03-16 15:56:04.624737536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pww_info:
	.quad	_c1pww
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.625325305 UTC

.section .text
.align 8
sat_s1jid_entry:
_c1pwN:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c<=_entry
	.size sat_s1jid_entry, .-sat_s1jid_entry


==================== Asm code ====================
2018-03-16 15:56:04.625874636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jid_info:
	.quad	sat_s1jid_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+600


==================== Asm code ====================
2018-03-16 15:56:04.626589124 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromTo_entry
.type GHC.Real.$w$snumericEnumFromTo_entry, @object
GHC.Real.$w$snumericEnumFromTo_entry:
_c1pwQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pwR
_c1pwS:
	movq $block_c1pwe_info,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$snumericEnumFrom_entry
_c1pwR:
	movl $GHC.Real.$w$snumericEnumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromTo_entry, .-GHC.Real.$w$snumericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.627235792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromTo_info
.type GHC.Real.$w$snumericEnumFromTo_info, @object
GHC.Real.$w$snumericEnumFromTo_info:
	.quad	GHC.Real.$w$snumericEnumFromTo_entry
	.quad	0
	.quad	246569777496078
	.quad	12884901911
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.627998673 UTC

.section .text
.align 8
_c1pwe:
_c1pwe:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1pwV
_c1pwU:
	movq $:_con_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq %r14,-40(%r12)
	movq $ds_s1ji2_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq $sat_s1jid_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -54(%r12),%rsi
	leaq -7(%r12),%r14
	addq $16,%rbp
	jmp GHC.List.takeWhile_entry
_c1pwV:
	movq $64,904(%r13)
	jmp stg_gc_pp
	.size _c1pwe, .-_c1pwe


==================== Asm code ====================
2018-03-16 15:56:04.62870698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pwe_info:
	.quad	_c1pwe
	.quad	1
	.quad	105557411233822
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.632404075 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.633490475 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry:
_c1pxw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pxx
_c1pxy:
	movq $block_c1pxt_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pxt
_c1pxu:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pxx:
	movl $GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.634164232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+608


==================== Asm code ====================
2018-03-16 15:56:04.634785644 UTC

.section .text
.align 8
_c1pxt:
_c1pxt:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromTo_entry
	.size _c1pxt, .-_c1pxt


==================== Asm code ====================
2018-03-16 15:56:04.635379629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pxt_info:
	.quad	_c1pxt
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+608


==================== Asm code ====================
2018-03-16 15:56:04.642992138 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromTo_closure
.type GHC.Real.numericEnumFromTo_closure, @object
GHC.Real.numericEnumFromTo_closure:
	.quad	GHC.Real.numericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.643782687 UTC

.section .text
.align 8
$dNum_s1jir_entry:
_c1pxW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pxX
_c1pxY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1pxX:
	jmp *-16(%r13)
	.size $dNum_s1jir_entry, .-$dNum_s1jir_entry


==================== Asm code ====================
2018-03-16 15:56:04.644412774 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jir_info:
	.quad	$dNum_s1jir_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.645146044 UTC

.section .text
.align 8
sat_s1jiu_entry:
_c1pyc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pyd
_c1pye:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even2_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pyd:
	jmp *-16(%r13)
	.size sat_s1jiu_entry, .-sat_s1jiu_entry


==================== Asm code ====================
2018-03-16 15:56:04.645956923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jiu_info:
	.quad	sat_s1jiu_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.646657304 UTC

.section .text
.align 8
sat_s1jit_entry:
_c1pyj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pyk
_c1pyl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pyk:
	jmp *-16(%r13)
	.size sat_s1jit_entry, .-sat_s1jit_entry


==================== Asm code ====================
2018-03-16 15:56:04.647247848 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jit_info:
	.quad	sat_s1jit_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.648066674 UTC

.section .text
.align 8
sat_s1jiv_entry:
_c1pym:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pyn
_c1pyo:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1pyq
_c1pyp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jiu_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s1jit_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real./_entry
_c1pyq:
	movq $48,904(%r13)
_c1pyn:
	jmp *-16(%r13)
	.size sat_s1jiv_entry, .-sat_s1jiv_entry


==================== Asm code ====================
2018-03-16 15:56:04.648747617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jiv_info:
	.quad	sat_s1jiv_entry
	.quad	2
	.quad	73014444050
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.649607225 UTC

.section .text
.align 8
ds_s1jis_entry:
_c1pyr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pys
_c1pyt:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1pyv
_c1pyu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jiv_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1pyv:
	movq $32,904(%r13)
_c1pys:
	jmp *-16(%r13)
	.size ds_s1jis_entry, .-ds_s1jis_entry


==================== Asm code ====================
2018-03-16 15:56:04.65031496 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jis_info:
	.quad	ds_s1jis_entry
	.quad	3
	.quad	73014444047
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.651006013 UTC

.section .text
.align 8
sat_s1jix_entry:
_c1pyB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pyC
_c1pyD:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<=_entry
_c1pyC:
	jmp *-8(%r13)
	.size sat_s1jix_entry, .-sat_s1jix_entry


==================== Asm code ====================
2018-03-16 15:56:04.651663728 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jix_info:
	.quad	sat_s1jix_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.652399276 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromTo_entry
.type GHC.Real.numericEnumFromTo_entry, @object
GHC.Real.numericEnumFromTo_entry:
_c1pyE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pyF
_c1pyG:
	movq $block_c1pxQ_info,-32(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1pyF:
	movl $GHC.Real.numericEnumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromTo_entry, .-GHC.Real.numericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.653086443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromTo_info
.type GHC.Real.numericEnumFromTo_info, @object
GHC.Real.numericEnumFromTo_info:
	.quad	GHC.Real.numericEnumFromTo_entry
	.quad	0
	.quad	2280627634190
	.quad	17179869208
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.653939298 UTC

.section .text
.align 8
_c1pxQ:
_c1pxQ:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1pyJ
_c1pyI:
	movq $$dNum_s1jir_info,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-88(%r12)
	movq $:_con_info,-80(%r12)
	movq %rbx,-72(%r12)
	movq %r14,-64(%r12)
	movq $ds_s1jis_info,-56(%r12)
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	movq $sat_s1jix_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -78(%r12),%rsi
	leaq -15(%r12),%r14
	addq $32,%rbp
	jmp GHC.List.takeWhile_entry
_c1pyJ:
	movq $112,904(%r13)
	jmp stg_gc_pp
	.size _c1pxQ, .-_c1pxQ


==================== Asm code ====================
2018-03-16 15:56:04.654659296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pxQ_info:
	.quad	_c1pxQ
	.quad	3
	.quad	73014444062
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.661505077 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThen_closure
.type GHC.Real.$w$snumericEnumFromThen_closure, @object
GHC.Real.$w$snumericEnumFromThen_closure:
	.quad	GHC.Real.$w$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.662391128 UTC

.section .text
.align 8
sat_s1jiN_entry:
_c1pzD:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pzE
_c1pzF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pzw_info,-56(%rbp)
	movq 40(%rbx),%rax
	movq %rax,%r8
	movq 32(%rbx),%rcx
	movq %rcx,%rdi
	movq %rax,%rsi
	movq %rcx,%r14
	movq 16(%rbx),%rdx
	movq %rdx,-48(%rbp)
	movq 24(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp GHC.Real.$w$s$c+_entry
_c1pzE:
	jmp *-16(%r13)
	.size sat_s1jiN_entry, .-sat_s1jiN_entry


==================== Asm code ====================
2018-03-16 15:56:04.663077813 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jiN_info:
	.quad	sat_s1jiN_entry
	.quad	4
	.quad	9007237909446671
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.663739156 UTC

.section .text
.align 8
_c1pzw:
_c1pzw:
	movq 16(%rbp),%rax
	movq $block_c1pzy_info,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq %r14,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1pzw, .-_c1pzw


==================== Asm code ====================
2018-03-16 15:56:04.664323501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pzw_info:
	.quad	_c1pzw
	.quad	4
	.quad	9007203549708318
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.664952551 UTC

.section .text
.align 8
_c1pzy:
_c1pzy:
	movq 16(%rbp),%rax
	movq $block_c1pzA_info,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
	.size _c1pzy, .-_c1pzy


==================== Asm code ====================
2018-03-16 15:56:04.665599251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pzy_info:
	.quad	_c1pzy
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+632


==================== Asm code ====================
2018-03-16 15:56:04.666306434 UTC

.section .text
.align 8
_c1pzA:
_c1pzA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pzK
_c1pzJ:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pzK:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pzA, .-_c1pzA


==================== Asm code ====================
2018-03-16 15:56:04.666941151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pzA_info:
	.quad	_c1pzA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.667676349 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromThen_entry
.type GHC.Real.$w$snumericEnumFromThen_entry, @object
GHC.Real.$w$snumericEnumFromThen_entry:
_c1pzM:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1pzQ
_c1pzP:
	movq $sat_s1jiN_info,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -64(%r12),%r14
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1pzQ:
	movq $72,904(%r13)
	movl $GHC.Real.$w$snumericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromThen_entry, .-GHC.Real.$w$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:04.668360367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThen_info
.type GHC.Real.$w$snumericEnumFromThen_info, @object
GHC.Real.$w$snumericEnumFromThen_info:
	.quad	GHC.Real.$w$snumericEnumFromThen_entry
	.quad	0
	.quad	9007237909446670
	.quad	17179869208
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.672602305 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.673838457 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry:
_c1pAj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pAu
_c1pAv:
	movq $block_c1pAg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1pAg
_c1pAh:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pAu:
	movl $GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:04.674522246 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+632


==================== Asm code ====================
2018-03-16 15:56:04.675248597 UTC

.section .text
.align 8
_c1pAg:
_c1pAg:
	movq $block_c1pAm_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pAm
_c1pAn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pAg, .-_c1pAg


==================== Asm code ====================
2018-03-16 15:56:04.675890138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pAg_info:
	.quad	_c1pAg
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+632


==================== Asm code ====================
2018-03-16 15:56:04.67651676 UTC

.section .text
.align 8
_c1pAm:
_c1pAm:
	movq 16(%rbp),%rax
	movq $block_c1pAr_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
	.size _c1pAm, .-_c1pAm


==================== Asm code ====================
2018-03-16 15:56:04.677073304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pAm_info:
	.quad	_c1pAm
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+632


==================== Asm code ====================
2018-03-16 15:56:04.677800914 UTC

.section .text
.align 8
_c1pAr:
_c1pAr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pAA
_c1pAz:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pAA:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pAr, .-_c1pAr


==================== Asm code ====================
2018-03-16 15:56:04.67847608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pAr_info:
	.quad	_c1pAr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.684926656 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFromThen_closure
.type GHC.Real.$wnumericEnumFromThen_closure, @object
GHC.Real.$wnumericEnumFromThen_closure:
	.quad	GHC.Real.$wnumericEnumFromThen_info


==================== Asm code ====================
2018-03-16 15:56:04.685782454 UTC

.section .text
.align 8
sat_s1jj5_entry:
_c1pBe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pBf
_c1pBg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1pBf:
	jmp *-16(%r13)
	.size sat_s1jj5_entry, .-sat_s1jj5_entry


==================== Asm code ====================
2018-03-16 15:56:04.686429927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jj5_info:
	.quad	sat_s1jj5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.687196297 UTC

.section .text
.align 8
sat_s1jja_entry:
_c1pBh:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pBn
_c1pBo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pB6_info,-48(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1pBn:
	jmp *-16(%r13)
	.size sat_s1jja_entry, .-sat_s1jja_entry


==================== Asm code ====================
2018-03-16 15:56:04.687885634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jja_info:
	.quad	sat_s1jja_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.68915192 UTC

.section .text
.align 8
_c1pB6:
_c1pB6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1pBr
_c1pBq:
	movq $sat_s1jj5_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1pBi_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Num.-_entry
_c1pBr:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pB6, .-_c1pB6


==================== Asm code ====================
2018-03-16 15:56:04.689995151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pB6_info:
	.quad	_c1pB6
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.690606482 UTC

.section .text
.align 8
_c1pBi:
_c1pBi:
	movq 24(%rbp),%rax
	movq $block_c1pBk_info,24(%rbp)
	movq %rbx,%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
	.size _c1pBi, .-_c1pBi


==================== Asm code ====================
2018-03-16 15:56:04.691185104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pBi_info:
	.quad	_c1pBi
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.691889324 UTC

.section .text
.align 8
_c1pBk:
_c1pBk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pBv
_c1pBu:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pBv:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pBk, .-_c1pBk


==================== Asm code ====================
2018-03-16 15:56:04.69253057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pBk_info:
	.quad	_c1pBk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.693218529 UTC

.section .text
.align 8
.globl GHC.Real.$wnumericEnumFromThen_entry
.type GHC.Real.$wnumericEnumFromThen_entry, @object
GHC.Real.$wnumericEnumFromThen_entry:
_c1pBw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pBx
_c1pBy:
	movq $block_c1pAY_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_0_fast
_c1pBx:
	movl $GHC.Real.$wnumericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$wnumericEnumFromThen_entry, .-GHC.Real.$wnumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:04.693887115 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFromThen_info
.type GHC.Real.$wnumericEnumFromThen_info, @object
GHC.Real.$wnumericEnumFromThen_info:
	.quad	GHC.Real.$wnumericEnumFromThen_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.694542556 UTC

.section .text
.align 8
_c1pAY:
_c1pAY:
	movq $block_c1pB0_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_0_fast
	.size _c1pAY, .-_c1pAY


==================== Asm code ====================
2018-03-16 15:56:04.69514439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pAY_info:
	.quad	_c1pAY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.695840359 UTC

.section .text
.align 8
_c1pB0:
_c1pB0:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1pBC
_c1pBB:
	movq $sat_s1jja_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pBC:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pB0, .-_c1pB0


==================== Asm code ====================
2018-03-16 15:56:04.696475446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pB0_info:
	.quad	_c1pB0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.699606265 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromThen_closure
.type GHC.Real.numericEnumFromThen_closure, @object
GHC.Real.numericEnumFromThen_closure:
	.quad	GHC.Real.numericEnumFromThen_info


==================== Asm code ====================
2018-03-16 15:56:04.700352233 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromThen_entry
.type GHC.Real.numericEnumFromThen_entry, @object
GHC.Real.numericEnumFromThen_entry:
_c1pCk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pCl
_c1pCm:
	movq $block_c1pCh_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1pCl:
	movl $GHC.Real.numericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromThen_entry, .-GHC.Real.numericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:04.70096606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromThen_info
.type GHC.Real.numericEnumFromThen_info, @object
GHC.Real.numericEnumFromThen_info:
	.quad	GHC.Real.numericEnumFromThen_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.701732971 UTC

.section .text
.align 8
_c1pCh:
_c1pCh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pCp
_c1pCo:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pCp:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pCh, .-_c1pCh


==================== Asm code ====================
2018-03-16 15:56:04.702373498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pCh_info:
	.quad	_c1pCh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.716004294 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThenTo_closure
.type GHC.Real.$w$snumericEnumFromThenTo_closure, @object
GHC.Real.$w$snumericEnumFromThenTo_closure:
	.quad	GHC.Real.$w$snumericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.716972976 UTC

.section .text
.align 8
ds_s1jjq_entry:
_c1pCV:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pD5
_c1pD6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pCS_info,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c1pCS
_c1pCT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pD5:
	jmp *-16(%r13)
	.size ds_s1jjq_entry, .-ds_s1jjq_entry


==================== Asm code ====================
2018-03-16 15:56:04.717677995 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jjq_info:
	.quad	ds_s1jjq_entry
	.quad	5
	.quad	150121991897103
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.718332827 UTC

.section .text
.align 8
_c1pCS:
_c1pCS:
	movq 16(%rbp),%rax
	movq $block_c1pCY_info,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1pCS, .-_c1pCS


==================== Asm code ====================
2018-03-16 15:56:04.718954342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pCS_info:
	.quad	_c1pCS
	.quad	4
	.quad	150121991897118
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.719591242 UTC

.section .text
.align 8
_c1pCY:
_c1pCY:
	movq $block_c1pD0_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.even2_closure,%edi
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c/_entry
	.size _c1pCY, .-_c1pCY


==================== Asm code ====================
2018-03-16 15:56:04.720219188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pCY_info:
	.quad	_c1pCY
	.quad	2
	.quad	18764712116254
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.720874857 UTC

.section .text
.align 8
_c1pD0:
_c1pD0:
	movq 16(%rbp),%rax
	movq $block_c1pD2_info,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1pD0, .-_c1pD0


==================== Asm code ====================
2018-03-16 15:56:04.72152962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pD0_info:
	.quad	_c1pD0
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.722238673 UTC

.section .text
.align 8
_c1pD2:
_c1pD2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pDc
_c1pDb:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pDc:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pD2, .-_c1pD2


==================== Asm code ====================
2018-03-16 15:56:04.722845336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pD2_info:
	.quad	_c1pD2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.723451437 UTC

.section .text
.align 8
sat_s1jjE_entry:
_c1pDj:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c<=_entry
	.size sat_s1jjE_entry, .-sat_s1jjE_entry


==================== Asm code ====================
2018-03-16 15:56:04.724027957 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jjE_info:
	.quad	sat_s1jjE_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+600


==================== Asm code ====================
2018-03-16 15:56:04.724808843 UTC

.section .text
.align 8
ds_s1jjF_entry:
_c1pDv:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pDF
_c1pDG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pDs_info,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c1pDs
_c1pDt:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pDF:
	jmp *-16(%r13)
	.size ds_s1jjF_entry, .-ds_s1jjF_entry


==================== Asm code ====================
2018-03-16 15:56:04.72582791 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jjF_info:
	.quad	ds_s1jjF_entry
	.quad	5
	.quad	150121991897103
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.726483029 UTC

.section .text
.align 8
_c1pDs:
_c1pDs:
	movq 16(%rbp),%rax
	movq $block_c1pDy_info,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1pDs, .-_c1pDs


==================== Asm code ====================
2018-03-16 15:56:04.727392489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pDs_info:
	.quad	_c1pDs
	.quad	4
	.quad	150121991897118
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.728259388 UTC

.section .text
.align 8
_c1pDy:
_c1pDy:
	movq $block_c1pDA_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.even2_closure,%edi
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c/_entry
	.size _c1pDy, .-_c1pDy


==================== Asm code ====================
2018-03-16 15:56:04.728839452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pDy_info:
	.quad	_c1pDy
	.quad	2
	.quad	18764712116254
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.729548102 UTC

.section .text
.align 8
_c1pDA:
_c1pDA:
	movq 16(%rbp),%rax
	movq $block_c1pDC_info,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1pDA, .-_c1pDA


==================== Asm code ====================
2018-03-16 15:56:04.730175882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pDA_info:
	.quad	_c1pDA
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+488


==================== Asm code ====================
2018-03-16 15:56:04.730937491 UTC

.section .text
.align 8
_c1pDC:
_c1pDC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pDM
_c1pDL:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pDM:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1pDC, .-_c1pDC


==================== Asm code ====================
2018-03-16 15:56:04.731608442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pDC_info:
	.quad	_c1pDC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.732250194 UTC

.section .text
.align 8
sat_s1jjT_entry:
_c1pDT:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c>=_entry
	.size sat_s1jjT_entry, .-sat_s1jjT_entry


==================== Asm code ====================
2018-03-16 15:56:04.732867213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jjT_info:
	.quad	sat_s1jjT_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+648


==================== Asm code ====================
2018-03-16 15:56:04.733676147 UTC

.section .data.rel.ro
.align 8
.align 1
u1pEf_srtd:
	.quad	S1jKw_srt+24
	.quad	79
	.quad	4935945191598063617
	.quad	16708


==================== Asm code ====================
2018-03-16 15:56:04.73467466 UTC

.section .text
.align 8
sat_s1jjU_entry:
_c1pE0:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pE1
_c1pE2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pCK_info,-64(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%r8
	movq 16(%rbx),%rcx
	movq %rcx,%rdi
	movq 40(%rbx),%rdx
	movq %rdx,%rsi
	movq 32(%rbx),%r9
	movq %r9,%r14
	movq %rcx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
_c1pE1:
	jmp *-16(%r13)
	.size sat_s1jjU_entry, .-sat_s1jjU_entry


==================== Asm code ====================
2018-03-16 15:56:04.735385653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jjU_info:
	.quad	sat_s1jjU_entry
	.quad	5
	.quad	-4294967281
	.quad	u1pEf_srtd


==================== Asm code ====================
2018-03-16 15:56:04.736343302 UTC

.section .text
.align 8
_c1pCK:
_c1pCK:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _c1pDY
_c1pDX:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1pE8
_c1pE4:
	movq $ds_s1jjq_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq $sat_s1jjE_info,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pE8:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c1pDY:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1pE8
_c1pE7:
	movq $ds_s1jjF_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq $sat_s1jjT_info,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pCK, .-_c1pCK


==================== Asm code ====================
2018-03-16 15:56:04.737220553 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pCK_info:
	.quad	_c1pCK
	.quad	5
	.quad	36741868964282398
	.quad	S1jKw_srt+464


==================== Asm code ====================
2018-03-16 15:56:04.737830921 UTC

.section .data.rel.ro
.align 8
.align 1
u1pEg_srtd:
	.quad	S1jKw_srt+24
	.quad	80
	.quad	4935945191598063617
	.quad	53572


==================== Asm code ====================
2018-03-16 15:56:04.738635493 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromThenTo_entry
.type GHC.Real.$w$snumericEnumFromThenTo_entry, @object
GHC.Real.$w$snumericEnumFromThenTo_entry:
_c1pE9:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pEa
_c1pEb:
	movq $block_c1pCD_info,-48(%rbp)
	movq %r8,%rax
	movq %rdi,%rbx
	movq %rsi,%rcx
	movq %r14,%rdx
	movq %rdx,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
_c1pEa:
	movl $GHC.Real.$w$snumericEnumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromThenTo_entry, .-GHC.Real.$w$snumericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.739336262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThenTo_info
.type GHC.Real.$w$snumericEnumFromThenTo_info, @object
GHC.Real.$w$snumericEnumFromThenTo_info:
	.quad	GHC.Real.$w$snumericEnumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836505
	.quad	u1pEg_srtd


==================== Asm code ====================
2018-03-16 15:56:04.739888779 UTC

.section .data.rel.ro
.align 8
.align 1
u1pEh_srtd:
	.quad	S1jKw_srt+24
	.quad	79
	.quad	4935945191598063617
	.quad	16708


==================== Asm code ====================
2018-03-16 15:56:04.740691217 UTC

.section .text
.align 8
_c1pCD:
_c1pCD:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1pEe
_c1pEd:
	movq $:_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	movq $sat_s1jjU_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -70(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp GHC.List.takeWhile_entry
_c1pEe:
	movq $80,904(%r13)
	jmp stg_gc_pp
	.size _c1pCD, .-_c1pCD


==================== Asm code ====================
2018-03-16 15:56:04.741719859 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pCD_info:
	.quad	_c1pCD
	.quad	5
	.quad	-4294967266
	.quad	u1pEh_srtd


==================== Asm code ====================
2018-03-16 15:56:04.746105017 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.746979628 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry:
_c1pFD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pFH
_c1pFI:
	movq $block_c1pFA_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1pFA
_c1pFB:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pFH:
	movl $GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.7476233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+656


==================== Asm code ====================
2018-03-16 15:56:04.748500584 UTC

.section .text
.align 8
_c1pFA:
_c1pFA:
	movq $block_c1pFG_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1pFG
_c1pFK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1pFA, .-_c1pFA


==================== Asm code ====================
2018-03-16 15:56:04.749429965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pFA_info:
	.quad	_c1pFA
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+656


==================== Asm code ====================
2018-03-16 15:56:04.750257428 UTC

.section .text
.align 8
_c1pFG:
_c1pFG:
	movq 24(%rbp),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$snumericEnumFromThenTo_entry
	.size _c1pFG, .-_c1pFG


==================== Asm code ====================
2018-03-16 15:56:04.7508461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pFG_info:
	.quad	_c1pFG
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+656


==================== Asm code ====================
2018-03-16 15:56:04.763608927 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromThenTo_closure
.type GHC.Real.numericEnumFromThenTo_closure, @object
GHC.Real.numericEnumFromThenTo_closure:
	.quad	GHC.Real.numericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.764469878 UTC

.section .text
.align 8
$dNum_s1jkd_entry:
_c1pGj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pGk
_c1pGl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1pGk:
	jmp *-16(%r13)
	.size $dNum_s1jkd_entry, .-$dNum_s1jkd_entry


==================== Asm code ====================
2018-03-16 15:56:04.765087302 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jkd_info:
	.quad	$dNum_s1jkd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.76588565 UTC

.section .text
.align 8
sat_s1jkg_entry:
_c1pGu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pGv
_c1pGw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even2_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pGv:
	jmp *-16(%r13)
	.size sat_s1jkg_entry, .-sat_s1jkg_entry


==================== Asm code ====================
2018-03-16 15:56:04.766498423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkg_info:
	.quad	sat_s1jkg_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.76726635 UTC

.section .text
.align 8
sat_s1jkf_entry:
_c1pGB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pGC
_c1pGD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.-_entry
_c1pGC:
	jmp *-16(%r13)
	.size sat_s1jkf_entry, .-sat_s1jkf_entry


==================== Asm code ====================
2018-03-16 15:56:04.767942319 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkf_info:
	.quad	sat_s1jkf_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.768784702 UTC

.section .text
.align 8
mid_s1jke_entry:
_c1pGE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pGF
_c1pGG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1pGI
_c1pGH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s1jkg_info,-56(%r12)
	movq %rbx,-40(%r12)
	movq $sat_s1jkf_info,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real./_entry
_c1pGI:
	movq $64,904(%r13)
_c1pGF:
	jmp *-16(%r13)
	.size mid_s1jke_entry, .-mid_s1jke_entry


==================== Asm code ====================
2018-03-16 15:56:04.769574652 UTC

.section .data.rel.ro
.align 8
.align 1
mid_s1jke_info:
	.quad	mid_s1jke_entry
	.quad	4
	.quad	4294967311
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.770320378 UTC

.section .text
.align 8
ds_s1jki_entry:
_c1pGR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pGS
_c1pGT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1pGS:
	jmp *-16(%r13)
	.size ds_s1jki_entry, .-ds_s1jki_entry


==================== Asm code ====================
2018-03-16 15:56:04.771026483 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jki_info:
	.quad	ds_s1jki_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.771803151 UTC

.section .text
.align 8
sat_s1jkk_entry:
_c1pGZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pH0
_c1pH1:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.>=_entry
_c1pH0:
	jmp *-8(%r13)
	.size sat_s1jkk_entry, .-sat_s1jkk_entry


==================== Asm code ====================
2018-03-16 15:56:04.773075122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkk_info:
	.quad	sat_s1jkk_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.773832927 UTC

.section .text
.align 8
ds_s1jkl_entry:
_c1pH8:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pH9
_c1pHa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1pH9:
	jmp *-16(%r13)
	.size ds_s1jkl_entry, .-ds_s1jkl_entry


==================== Asm code ====================
2018-03-16 15:56:04.77450384 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jkl_info:
	.quad	ds_s1jkl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.775191174 UTC

.section .text
.align 8
sat_s1jkn_entry:
_c1pHg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pHh
_c1pHi:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<=_entry
_c1pHh:
	jmp *-8(%r13)
	.size sat_s1jkn_entry, .-sat_s1jkn_entry


==================== Asm code ====================
2018-03-16 15:56:04.775800702 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkn_info:
	.quad	sat_s1jkn_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.776634481 UTC

.section .text
.align 8
sat_s1jko_entry:
_c1pHn:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pHo
_c1pHp:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1pHr
_c1pHq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $$dNum_s1jkd_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq $mid_s1jke_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -64(%r12),%rcx
	movq %rcx,(%r12)
	movq $block_c1pGJ_info,-56(%rbp)
	movq %rax,%r14
	movq $stg_ap_pp_info,-80(%rbp)
	movq %rsi,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %rcx,-48(%rbp)
	leaq -40(%r12),%rcx
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-80,%rbp
	jmp GHC.Classes.>=_entry
_c1pHr:
	movq $72,904(%r13)
_c1pHo:
	jmp *-16(%r13)
	.size sat_s1jko_entry, .-sat_s1jko_entry


==================== Asm code ====================
2018-03-16 15:56:04.777817989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jko_info:
	.quad	sat_s1jko_entry
	.quad	5
	.quad	4294967311
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.778709925 UTC

.section .text
.align 8
_c1pGJ:
_c1pGJ:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c1pHk
_c1pHl:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1pHx
_c1pHw:
	movq $ds_s1jkl_info,-56(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq $sat_s1jkn_info,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pHx:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
_c1pHk:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1pHx
_c1pHt:
	movq $ds_s1jki_info,-56(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq $sat_s1jkk_info,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pGJ, .-_c1pGJ


==================== Asm code ====================
2018-03-16 15:56:04.779460011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pGJ_info:
	.quad	_c1pGJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.780218379 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromThenTo_entry
.type GHC.Real.numericEnumFromThenTo_entry, @object
GHC.Real.numericEnumFromThenTo_entry:
_c1pHy:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pHz
_c1pHA:
	movq $block_c1pG8_info,-48(%rbp)
	movq %rdi,%rax
	movq %r8,%rdi
	movq %rsi,%rbx
	movq %rax,%rsi
	movq %r14,%rcx
	movq %rbx,%r14
	movq %rcx,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1pHz:
	movl $GHC.Real.numericEnumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromThenTo_entry, .-GHC.Real.numericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:04.780897998 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromThenTo_info
.type GHC.Real.numericEnumFromThenTo_info, @object
GHC.Real.numericEnumFromThenTo_info:
	.quad	GHC.Real.numericEnumFromThenTo_entry
	.quad	0
	.quad	8800387989518
	.quad	21474836505
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.781684088 UTC

.section .text
.align 8
_c1pG8:
_c1pG8:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1pHD
_c1pHC:
	movq $:_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	movq $sat_s1jko_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -70(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp GHC.List.takeWhile_entry
_c1pHD:
	movq $80,904(%r13)
	jmp stg_gc_pp
	.size _c1pG8, .-_c1pG8


==================== Asm code ====================
2018-03-16 15:56:04.782404131 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pG8_info:
	.quad	_c1pG8
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.785906164 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.fromIntegral_closure
.type GHC.Real.fromIntegral_closure, @object
GHC.Real.fromIntegral_closure:
	.quad	GHC.Real.fromIntegral_info


==================== Asm code ====================
2018-03-16 15:56:04.786663738 UTC

.section .text
.align 8
sat_s1jkt_entry:
_c1pIT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pIU
_c1pIV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toInteger_entry
_c1pIU:
	jmp *-16(%r13)
	.size sat_s1jkt_entry, .-sat_s1jkt_entry


==================== Asm code ====================
2018-03-16 15:56:04.787269801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkt_info:
	.quad	sat_s1jkt_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.788111921 UTC

.section .text
.align 8
.globl GHC.Real.fromIntegral_entry
.type GHC.Real.fromIntegral_entry, @object
GHC.Real.fromIntegral_entry:
_c1pIW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pIX
_c1pIY:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1pJ0
_c1pIZ:
	movq $sat_s1jkt_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pJ0:
	movq $32,904(%r13)
_c1pIX:
	movl $GHC.Real.fromIntegral_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.fromIntegral_entry, .-GHC.Real.fromIntegral_entry


==================== Asm code ====================
2018-03-16 15:56:04.788815481 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.fromIntegral_info
.type GHC.Real.fromIntegral_info, @object
GHC.Real.fromIntegral_info:
	.quad	GHC.Real.fromIntegral_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.792338689 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.realToFrac_closure
.type GHC.Real.realToFrac_closure, @object
GHC.Real.realToFrac_closure:
	.quad	GHC.Real.realToFrac_info


==================== Asm code ====================
2018-03-16 15:56:04.793099069 UTC

.section .text
.align 8
sat_s1jkx_entry:
_c1pJk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pJl
_c1pJm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toRational_entry
_c1pJl:
	jmp *-16(%r13)
	.size sat_s1jkx_entry, .-sat_s1jkx_entry


==================== Asm code ====================
2018-03-16 15:56:04.793768229 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkx_info:
	.quad	sat_s1jkx_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.794633571 UTC

.section .text
.align 8
.globl GHC.Real.realToFrac_entry
.type GHC.Real.realToFrac_entry, @object
GHC.Real.realToFrac_entry:
_c1pJn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pJo
_c1pJp:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1pJr
_c1pJq:
	movq $sat_s1jkx_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.fromRational_entry
_c1pJr:
	movq $32,904(%r13)
_c1pJo:
	movl $GHC.Real.realToFrac_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.realToFrac_entry, .-GHC.Real.realToFrac_entry


==================== Asm code ====================
2018-03-16 15:56:04.795375793 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.realToFrac_info
.type GHC.Real.realToFrac_info, @object
GHC.Real.realToFrac_info:
	.quad	GHC.Real.realToFrac_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:04.79717653 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.showSigned1_closure
.type GHC.Real.showSigned1_closure, @object
GHC.Real.showSigned1_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:56:04.807945072 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.showSigned_closure
.type GHC.Real.showSigned_closure, @object
GHC.Real.showSigned_closure:
	.quad	GHC.Real.showSigned_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.808757007 UTC

.section .text
.align 8
$dNum_s1jkC_entry:
_c1pJM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pJN
_c1pJO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pJN:
	jmp *-16(%r13)
	.size $dNum_s1jkC_entry, .-$dNum_s1jkC_entry


==================== Asm code ====================
2018-03-16 15:56:04.809402949 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jkC_info:
	.quad	$dNum_s1jkC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.810065754 UTC

.section .text
.align 8
sat_s1jkE_entry:
_c1pJT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pJU
_c1pJV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pJU:
	jmp *-16(%r13)
	.size sat_s1jkE_entry, .-sat_s1jkE_entry


==================== Asm code ====================
2018-03-16 15:56:04.810718807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkE_info:
	.quad	sat_s1jkE_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:04.811439652 UTC

.section .text
.align 8
sat_s1jkJ_entry:
_c1pKi:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pKj
_c1pKk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1pKj:
	jmp *-16(%r13)
	.size sat_s1jkJ_entry, .-sat_s1jkJ_entry


==================== Asm code ====================
2018-03-16 15:56:04.812068174 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkJ_info:
	.quad	sat_s1jkJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.812868813 UTC

.section .text
.align 8
g1_s1jkI_entry:
_c1pKl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pKm
_c1pKn:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1pKp
_c1pKo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jkJ_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c1pKp:
	movq $32,904(%r13)
_c1pKm:
	jmp *-16(%r13)
	.size g1_s1jkI_entry, .-g1_s1jkI_entry


==================== Asm code ====================
2018-03-16 15:56:04.813608266 UTC

.section .data.rel.ro
.align 8
.align 1
g1_s1jkI_info:
	.quad	g1_s1jkI_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.814349896 UTC

.section .text
.align 8
sat_s1jkN_entry:
_c1pKA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1pKE
_c1pKD:
	movq 7(%rbx),%rax
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Real.showSigned1_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1pKE:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s1jkN_entry, .-sat_s1jkN_entry


==================== Asm code ====================
2018-03-16 15:56:04.815022274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkN_info:
	.quad	sat_s1jkN_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.815809928 UTC

.section .text
.align 8
sat_s1jkQ_entry:
_c1pKQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pKR
_c1pKS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pKU
_c1pKT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c1pKU:
	movq $24,904(%r13)
_c1pKR:
	jmp *-16(%r13)
	.size sat_s1jkQ_entry, .-sat_s1jkQ_entry


==================== Asm code ====================
2018-03-16 15:56:04.816477866 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkQ_info:
	.quad	sat_s1jkQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.817300844 UTC

.section .text
.align 8
sat_s1jkS_entry:
_c1pKX:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1pL1
_c1pL0:
	movq 7(%rbx),%rax
	movq $sat_s1jkQ_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $GHC.Real.showSigned1_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1pL1:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s1jkS_entry, .-sat_s1jkS_entry


==================== Asm code ====================
2018-03-16 15:56:04.81799929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkS_info:
	.quad	sat_s1jkS_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:04.818850971 UTC

.section .text
.align 8
.globl GHC.Real.showSigned_entry
.type GHC.Real.showSigned_entry, @object
GHC.Real.showSigned_entry:
_c1pL2:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pL3
_c1pL4:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1pL6
_c1pL5:
	movq $$dNum_s1jkC_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s1jkE_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1pJW_info,-48(%rbp)
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p2Real_entry
_c1pL6:
	movq $48,904(%r13)
_c1pL3:
	movl $GHC.Real.showSigned_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.showSigned_entry, .-GHC.Real.showSigned_entry


==================== Asm code ====================
2018-03-16 15:56:04.819582928 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.showSigned_info
.type GHC.Real.showSigned_info, @object
GHC.Real.showSigned_info:
	.quad	GHC.Real.showSigned_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:04.820233987 UTC

.section .text
.align 8
_c1pJW:
_c1pJW:
	movq $block_c1pK0_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
	.size _c1pJW, .-_c1pJW


==================== Asm code ====================
2018-03-16 15:56:04.820860462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pJW_info:
	.quad	_c1pJW
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.821657376 UTC

.section .text
.align 8
_c1pK0:
_c1pK0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1pLb
_c1pLd:
	movq $block_c1pK5_info,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _c1pK5
_c1pK6:
	movq (%rbx),%rax
	jmp *(%rax)
_c1pLb:
	movq 40(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_p_fast
	.size _c1pK0, .-_c1pK0


==================== Asm code ====================
2018-03-16 15:56:04.822269232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pK0_info:
	.quad	_c1pK0
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.823048246 UTC

.section .text
.align 8
_c1pK5:
_c1pK5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1pLg
_c1pLf:
	movq 7(%rbx),%rax
	movq $g1_s1jkI_info,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	cmpq $6,%rax
	jle _c1pLi
_c1pLj:
	movq $sat_s1jkS_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pLi:
	movq $sat_s1jkN_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pLg:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pK5, .-_c1pK5


==================== Asm code ====================
2018-03-16 15:56:04.823823863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pK5_info:
	.quad	_c1pK5
	.quad	645
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.830855509 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even_closure
.type GHC.Real.even_closure, @object
GHC.Real.even_closure:
	.quad	GHC.Real.even_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.83171462 UTC

.section .text
.align 8
$dNum_s1jkW_entry:
_c1pMt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pMu
_c1pMv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pMu:
	jmp *-16(%r13)
	.size $dNum_s1jkW_entry, .-$dNum_s1jkW_entry


==================== Asm code ====================
2018-03-16 15:56:04.83231755 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jkW_info:
	.quad	$dNum_s1jkW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.832970889 UTC

.section .text
.align 8
sat_s1jl1_entry:
_c1pMA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pMB
_c1pMC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pMB:
	jmp *-16(%r13)
	.size sat_s1jl1_entry, .-sat_s1jl1_entry


==================== Asm code ====================
2018-03-16 15:56:04.833654055 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jl1_info:
	.quad	sat_s1jl1_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:04.834329748 UTC

.section .text
.align 8
sat_s1jkZ_entry:
_c1pML:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pMM
_c1pMN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even2_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pMM:
	jmp *-16(%r13)
	.size sat_s1jkZ_entry, .-sat_s1jkZ_entry


==================== Asm code ====================
2018-03-16 15:56:04.834935598 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jkZ_info:
	.quad	sat_s1jkZ_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.835749047 UTC

.section .text
.align 8
sat_s1jl0_entry:
_c1pMO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pMP
_c1pMQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pMS
_c1pMR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jkZ_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.rem_entry
_c1pMS:
	movq $24,904(%r13)
_c1pMP:
	jmp *-16(%r13)
	.size sat_s1jl0_entry, .-sat_s1jl0_entry


==================== Asm code ====================
2018-03-16 15:56:04.836408664 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jl0_info:
	.quad	sat_s1jl0_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.837171052 UTC

.section .text
.align 8
.globl GHC.Real.even_entry
.type GHC.Real.even_entry, @object
GHC.Real.even_entry:
_c1pMT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pMZ
_c1pN0:
	movq $block_c1pMl_info,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1pMZ:
	movl $GHC.Real.even_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.even_entry, .-GHC.Real.even_entry


==================== Asm code ====================
2018-03-16 15:56:04.837833054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even_info
.type GHC.Real.even_info, @object
GHC.Real.even_info:
	.quad	GHC.Real.even_entry
	.quad	0
	.quad	87965225189390
	.quad	8589934607
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.838565919 UTC

.section .text
.align 8
_c1pMl:
_c1pMl:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1pN3
_c1pN2:
	movq $$dNum_s1jkW_info,-80(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s1jl1_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jl0_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq $block_c1pMU_info,(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,8(%rbp)
	leaq -56(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Real.$p2Real_entry
_c1pN3:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pMl, .-_c1pMl


==================== Asm code ====================
2018-03-16 15:56:04.839271518 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pMl_info:
	.quad	_c1pMl
	.quad	2
	.quad	17596481011742
	.quad	S1jKw_srt+584


==================== Asm code ====================
2018-03-16 15:56:04.839899837 UTC

.section .text
.align 8
_c1pMU:
_c1pMU:
	movq $block_c1pMY_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1pMU, .-_c1pMU


==================== Asm code ====================
2018-03-16 15:56:04.840486257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pMU_info:
	.quad	_c1pMU
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.841140713 UTC

.section .text
.align 8
_c1pMY:
_c1pMY:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Classes.==_entry
	.size _c1pMY, .-_c1pMY


==================== Asm code ====================
2018-03-16 15:56:04.842172887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pMY_info:
	.quad	_c1pMY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.845153329 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.odd_closure
.type GHC.Real.odd_closure, @object
GHC.Real.odd_closure:
	.quad	GHC.Real.odd_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.846002284 UTC

.section .text
.align 8
.globl GHC.Real.odd_entry
.type GHC.Real.odd_entry, @object
GHC.Real.odd_entry:
_c1pNS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pNT
_c1pNU:
	movq $block_c1pNM_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.even_entry
_c1pNT:
	movl $GHC.Real.odd_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.odd_entry, .-GHC.Real.odd_entry


==================== Asm code ====================
2018-03-16 15:56:04.846654494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.odd_info
.type GHC.Real.odd_info, @object
GHC.Real.odd_info:
	.quad	GHC.Real.odd_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+696


==================== Asm code ====================
2018-03-16 15:56:04.847394755 UTC

.section .text
.align 8
_c1pNM:
_c1pNM:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1pNP
_c1pNQ:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pNP:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pNM, .-_c1pNM


==================== Asm code ====================
2018-03-16 15:56:04.847981205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pNM_info:
	.quad	_c1pNM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:04.849767031 UTC

.section .data
.align 8
.align 1
lvl3_r1j3b_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.even2_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.851476253 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_r1j3c_bytes:
	.asciz "round default defn: Bad value"


==================== Asm code ====================
2018-03-16 15:56:04.855257611 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio1_closure
.type GHC.Real.$fRealFracRatio1_closure, @object
GHC.Real.$fRealFracRatio1_closure:
	.quad	GHC.Real.$fRealFracRatio1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.85618045 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio1_entry
.type GHC.Real.$fRealFracRatio1_entry, @object
GHC.Real.$fRealFracRatio1_entry:
_c1pOn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pOo
_c1pOp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1pOk
_c1pOj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1pOl_info,-24(%rbp)
	movl $lvl4_r1j3c_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c1pOo:
	jmp *-16(%r13)
_c1pOk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealFracRatio1_entry, .-GHC.Real.$fRealFracRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:04.856846795 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio1_info
.type GHC.Real.$fRealFracRatio1_info, @object
GHC.Real.$fRealFracRatio1_info:
	.quad	GHC.Real.$fRealFracRatio1_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+712


==================== Asm code ====================
2018-03-16 15:56:04.857541983 UTC

.section .text
.align 8
_c1pOl:
_c1pOl:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c1pOl, .-_c1pOl


==================== Asm code ====================
2018-03-16 15:56:04.858094228 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pOl_info:
	.quad	_c1pOl
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+712


==================== Asm code ====================
2018-03-16 15:56:04.876579364 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmround_closure
.type GHC.Real.$dmround_closure, @object
GHC.Real.$dmround_closure:
	.quad	GHC.Real.$dmround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.877525126 UTC

.section .text
.align 8
ds_s1jl9_entry:
_c1pOL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pOM
_c1pON:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1pOM:
	jmp *-16(%r13)
	.size ds_s1jl9_entry, .-ds_s1jl9_entry


==================== Asm code ====================
2018-03-16 15:56:04.878155975 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jl9_info:
	.quad	ds_s1jl9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:04.878835947 UTC

.section .text
.align 8
$dNum_s1jld_entry:
_c1pP4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pP5
_c1pP6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pP5:
	jmp *-16(%r13)
	.size $dNum_s1jld_entry, .-$dNum_s1jld_entry


==================== Asm code ====================
2018-03-16 15:56:04.879464347 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jld_info:
	.quad	$dNum_s1jld_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.880178333 UTC

.section .text
.align 8
sat_s1jll_entry:
_c1pPm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPn
_c1pPo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pPk_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c1pPn:
	jmp *-16(%r13)
	.size sat_s1jll_entry, .-sat_s1jll_entry


==================== Asm code ====================
2018-03-16 15:56:04.881557779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jll_info:
	.quad	sat_s1jll_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+720


==================== Asm code ====================
2018-03-16 15:56:04.882220145 UTC

.section .text
.align 8
_c1pPk:
_c1pPk:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $lvl3_r1j3b_closure+1,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.fromRational_entry
	.size _c1pPk, .-_c1pPk


==================== Asm code ====================
2018-03-16 15:56:04.882816487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pPk_info:
	.quad	_c1pPk
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+720


==================== Asm code ====================
2018-03-16 15:56:04.883537088 UTC

.section .text
.align 8
sat_s1jlj_entry:
_c1pPw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPx
_c1pPy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.abs_entry
_c1pPx:
	jmp *-16(%r13)
	.size sat_s1jlj_entry, .-sat_s1jlj_entry


==================== Asm code ====================
2018-03-16 15:56:04.884140762 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlj_info:
	.quad	sat_s1jlj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.885005918 UTC

.section .text
.align 8
sat_s1jlm_entry:
_c1pPz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPA
_c1pPB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1pPD
_c1pPC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jll_info,-48(%r12)
	movq %rax,-32(%r12)
	movq $sat_s1jlj_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -48(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.-_entry
_c1pPD:
	movq $56,904(%r13)
_c1pPA:
	jmp *-16(%r13)
	.size sat_s1jlm_entry, .-sat_s1jlm_entry


==================== Asm code ====================
2018-03-16 15:56:04.885831303 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlm_info:
	.quad	sat_s1jlm_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+720


==================== Asm code ====================
2018-03-16 15:56:04.886642496 UTC

.section .text
.align 8
ds1_s1jli_entry:
_c1pPE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPF
_c1pPG:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1pPI
_c1pPH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jlm_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.signum_entry
_c1pPI:
	movq $40,904(%r13)
_c1pPF:
	jmp *-16(%r13)
	.size ds1_s1jli_entry, .-ds1_s1jli_entry


==================== Asm code ====================
2018-03-16 15:56:04.887370593 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s1jli_info:
	.quad	ds1_s1jli_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+720


==================== Asm code ====================
2018-03-16 15:56:04.888072135 UTC

.section .text
.align 8
sat_s1jlr_entry:
_c1pPS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPT
_c1pPU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pPT:
	jmp *-16(%r13)
	.size sat_s1jlr_entry, .-sat_s1jlr_entry


==================== Asm code ====================
2018-03-16 15:56:04.888706486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlr_info:
	.quad	sat_s1jlr_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.889548817 UTC

.section .text
.align 8
sat_s1jls_entry:
_c1pPV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pPW
_c1pPX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pPZ
_c1pPY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s1jlr_info,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1pPZ:
	movq $24,904(%r13)
_c1pPW:
	jmp *-16(%r13)
	.size sat_s1jls_entry, .-sat_s1jls_entry


==================== Asm code ====================
2018-03-16 15:56:04.890221861 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jls_info:
	.quad	sat_s1jls_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.890946465 UTC

.section .text
.align 8
sat_s1jlB_entry:
_c1pQ8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pQ9
_c1pQa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pQ9:
	jmp *-16(%r13)
	.size sat_s1jlB_entry, .-sat_s1jlB_entry


==================== Asm code ====================
2018-03-16 15:56:04.891568298 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlB_info:
	.quad	sat_s1jlB_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:04.892260085 UTC

.section .text
.align 8
sat_s1jlx_entry:
_c1pQs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pQt
_c1pQu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pQt:
	jmp *-16(%r13)
	.size sat_s1jlx_entry, .-sat_s1jlx_entry


==================== Asm code ====================
2018-03-16 15:56:04.892878933 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlx_info:
	.quad	sat_s1jlx_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:04.893606267 UTC

.section .text
.align 8
sat_s1jlz_entry:
_c1pQD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pQE
_c1pQF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pQE:
	jmp *-16(%r13)
	.size sat_s1jlz_entry, .-sat_s1jlz_entry


==================== Asm code ====================
2018-03-16 15:56:04.894192026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlz_info:
	.quad	sat_s1jlz_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.894869547 UTC

.section .text
.align 8
sat_s1jlA_entry:
_c1pQM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pQN
_c1pQO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pQN:
	jmp *-16(%r13)
	.size sat_s1jlA_entry, .-sat_s1jlA_entry


==================== Asm code ====================
2018-03-16 15:56:04.895470178 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlA_info:
	.quad	sat_s1jlA_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.896184043 UTC

.section .text
.align 8
sat_s1jlD_entry:
_c1pQX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pQY
_c1pQZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pQY:
	jmp *-16(%r13)
	.size sat_s1jlD_entry, .-sat_s1jlD_entry


==================== Asm code ====================
2018-03-16 15:56:04.896810178 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlD_info:
	.quad	sat_s1jlD_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.89769781 UTC

.section .text
.align 8
.globl GHC.Real.$dmround_entry
.type GHC.Real.$dmround_entry, @object
GHC.Real.$dmround_entry:
_c1pR0:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pR1
_c1pR2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1pR4
_c1pR3:
	movq $ds_s1jl9_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $block_c1pOO_info,-32(%rbp)
	movq %r14,%rax
	leaq -32(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1pR4:
	movq $40,904(%r13)
_c1pR1:
	movl $GHC.Real.$dmround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$dmround_entry, .-GHC.Real.$dmround_entry


==================== Asm code ====================
2018-03-16 15:56:04.898430716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmround_info
.type GHC.Real.$dmround_info, @object
GHC.Real.$dmround_info:
	.quad	GHC.Real.$dmround_entry
	.quad	0
	.quad	64457773961707534
	.quad	12884901911
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.899059094 UTC

.section .text
.align 8
_c1pOO:
_c1pOO:
	movq $block_c1pOS_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
	.size _c1pOO, .-_c1pOO


==================== Asm code ====================
2018-03-16 15:56:04.899635902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pOO_info:
	.quad	_c1pOO
	.quad	3
	.quad	46443375452225566
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.900278662 UTC

.section .text
.align 8
_c1pOS:
_c1pOS:
	movq $block_c1pOW_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.$p1Ord_entry
	.size _c1pOS, .-_c1pOS


==================== Asm code ====================
2018-03-16 15:56:04.900829362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pOS_info:
	.quad	_c1pOS
	.quad	4
	.quad	46443375452225566
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.901680772 UTC

.section .text
.align 8
_c1pOW:
_c1pOW:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c1pR9
_c1pR8:
	movq $$dNum_s1jld_info,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-112(%r12)
	movq $stg_sel_1_upd_info,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	movq $ds1_s1jli_info,-80(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-64(%r12)
	leaq -128(%r12),%rcx
	movq %rcx,-56(%r12)
	leaq -104(%r12),%rdx
	movq %rdx,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $sat_s1jls_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c1pQ0_info,-16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -80(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rsi
	movq %rsi,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -40(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,16(%rbp)
	movq %rdx,24(%rbp)
	movq %rcx,32(%rbp)
	addq $-40,%rbp
	jmp GHC.Classes.==_entry
_c1pR9:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pOW, .-_c1pOW


==================== Asm code ====================
2018-03-16 15:56:04.90247499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pOW_info:
	.quad	_c1pOW
	.quad	5
	.quad	46443375452225566
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.903259115 UTC

.section .text
.align 8
_c1pQ0:
_c1pQ0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1pRb
_u1pS7:
	addq $16,%rbp
	jmp _c1pS1
_c1pRe:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1pRb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pRe
_c1pRd:
	movq $sat_s1jlB_info,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1pQP_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1pQ0, .-_c1pQ0


==================== Asm code ====================
2018-03-16 15:56:04.903944391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pQ0_info:
	.quad	_c1pQ0
	.quad	7
	.quad	37436176197484574
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.904740508 UTC

.section .text
.align 8
_c1pQP:
_c1pQP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1pRv
_c1pRN:
	movq $block_c1pRL_info,8(%rbp)
	movq 16(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.even_entry
_c1pRy:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1pRv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pRy
_c1pRx:
	movq $sat_s1jlD_info,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	movq $block_c1pRt_info,8(%rbp)
	movq %rax,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1pQP, .-_c1pQP


==================== Asm code ====================
2018-03-16 15:56:04.90553445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pQP_info:
	.quad	_c1pQP
	.quad	7
	.quad	37436176197484574
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.906192665 UTC

.section .text
.align 8
_c1pRt:
_c1pRt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1pRE
_u1pSa:
	addq $8,%rbp
	jmp _s1jlu
_c1pRE:
	movl $GHC.Real.$fRealFracRatio1_closure,%ebx
	addq $56,%rbp
	jmp stg_ap_0_fast
	.size _c1pRt, .-_c1pRt


==================== Asm code ====================
2018-03-16 15:56:04.906798631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pRt_info:
	.quad	_c1pRt
	.quad	262
	.quad	36310276290641950
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.907542822 UTC

.section .text
.align 8
_c1pRL:
_c1pRL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1pS8
_u1pS9:
	addq $8,%rbp
	jmp _c1pS1
_u1pS8:
	addq $8,%rbp
	jmp _s1jlu
	.size _c1pRL, .-_c1pRL


==================== Asm code ====================
2018-03-16 15:56:04.908726291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pRL_info:
	.quad	_c1pRL
	.quad	262
	.quad	281479271677982
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.910348606 UTC

.section .text
.align 8
_s1jlu:
_s1jlu:
	movq $block_c1pQg_info,-8(%rbp)
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1jlu, .-_s1jlu


==================== Asm code ====================
2018-03-16 15:56:04.911231587 UTC

.section .text
.align 8
_c1pQg:
_c1pQg:
	movq $block_c1pQk_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1pQg, .-_c1pQg


==================== Asm code ====================
2018-03-16 15:56:04.912060204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pQg_info:
	.quad	_c1pQg
	.quad	2310
	.quad	281479271677982
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.912990658 UTC

.section .text
.align 8
_c1pQk:
_c1pQk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pRj
_c1pRi:
	movq $sat_s1jlx_info,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1pQv_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,48(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
_c1pRj:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pQk, .-_c1pQk


==================== Asm code ====================
2018-03-16 15:56:04.913708076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pQk_info:
	.quad	_c1pQk
	.quad	2310
	.quad	281479271677982
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.91454787 UTC

.section .text
.align 8
_c1pQv:
_c1pQv:
	movq 8(%rbp),%rax
	movq 48(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1pRl
_c1pRp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pRs
_c1pRr:
	movq $sat_s1jlA_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,32(%rbp)
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.Num.-_entry
_c1pRs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1pRl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pRs
_c1pRn:
	movq $sat_s1jlz_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,32(%rbp)
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.Num.+_entry
	.size _c1pQv, .-_c1pQv


==================== Asm code ====================
2018-03-16 15:56:04.915305727 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pQv_info:
	.quad	_c1pQv
	.quad	1926
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:04.915927458 UTC

.section .text
.align 8
_c1pS1:
_c1pS1:
	movq (%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_0_fast
	.size _c1pS1, .-_c1pS1


==================== Asm code ====================
2018-03-16 15:56:04.924620412 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFrom_closure
.type GHC.Real.integralEnumFrom_closure, @object
GHC.Real.integralEnumFrom_closure:
	.quad	GHC.Real.integralEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.925366761 UTC

.section .text
.align 8
f_s1jlJ_entry:
_c1pUq:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1jlJ_entry, .-f_s1jlJ_entry


==================== Asm code ====================
2018-03-16 15:56:04.925979359 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jlJ_info:
	.quad	f_s1jlJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.92670949 UTC

.section .text
.align 8
f1_s1jlK_entry:
_c1pUx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pUy
_c1pUz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pUy:
	jmp *-16(%r13)
	.size f1_s1jlK_entry, .-f1_s1jlK_entry


==================== Asm code ====================
2018-03-16 15:56:04.927339312 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1jlK_info:
	.quad	f1_s1jlK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.92802892 UTC

.section .text
.align 8
sat_s1jlM_entry:
_c1pUE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pUF
_c1pUG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.maxBound_entry
_c1pUF:
	jmp *-16(%r13)
	.size sat_s1jlM_entry, .-sat_s1jlM_entry


==================== Asm code ====================
2018-03-16 15:56:04.928631261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlM_info:
	.quad	sat_s1jlM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.930500539 UTC

.section .text
.align 8
sat_s1jlS_entry:
_c1pV0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pV1
_c1pV2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pUY_info,-32(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1pV1:
	jmp *-16(%r13)
	.size sat_s1jlS_entry, .-sat_s1jlS_entry


==================== Asm code ====================
2018-03-16 15:56:04.931158643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlS_info:
	.quad	sat_s1jlS_entry
	.quad	2
	.quad	2203318222866
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.931787482 UTC

.section .text
.align 8
_c1pUY:
_c1pUY:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jlN_entry
	.size _c1pUY, .-_c1pUY


==================== Asm code ====================
2018-03-16 15:56:04.932333544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pUY_info:
	.quad	_c1pUY
	.quad	1
	.quad	2203318222878
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.93302657 UTC

.section .text
.align 8
sat_s1jlQ_entry:
_c1pVa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pVb
_c1pVc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pVb:
	jmp *-16(%r13)
	.size sat_s1jlQ_entry, .-sat_s1jlQ_entry


==================== Asm code ====================
2018-03-16 15:56:04.933730457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jlQ_info:
	.quad	sat_s1jlQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.934433373 UTC

.section .text
.align 8
go_s1jlN_entry:
_c1pVg:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pVh
_c1pVi:
	movq $block_c1pUQ_info,-32(%rbp)
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c1pVh:
	jmp *-8(%r13)
	.size go_s1jlN_entry, .-go_s1jlN_entry


==================== Asm code ====================
2018-03-16 15:56:04.935098327 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jlN_info:
	.quad	go_s1jlN_entry
	.quad	2
	.quad	2203318222859
	.quad	4294967301
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.935934982 UTC

.section .text
.align 8
_c1pUQ:
_c1pUQ:
	cmpq $1,%rbx
	je _c1pVf
_c1pVe:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1pVm
_c1pVl:
	movq $sat_s1jlS_info,-80(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jlQ_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pVm:
	movq $88,904(%r13)
	jmp stg_gc_unbx_r1
_c1pVf:
	movl $[]_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pUQ, .-_c1pUQ


==================== Asm code ====================
2018-03-16 15:56:04.936711386 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pUQ_info:
	.quad	_c1pUQ
	.quad	3
	.quad	2203318222878
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.937232809 UTC

.section .data.rel.ro
.align 8
.align 1
u1pVD_srtd:
	.quad	S1jKw_srt+480
	.quad	34
	.quad	8589935105


==================== Asm code ====================
2018-03-16 15:56:04.938199736 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFrom_entry
.type GHC.Real.integralEnumFrom_entry, @object
GHC.Real.integralEnumFrom_entry:
_c1pVq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pVs
_c1pVt:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1pVv
_c1pVu:
	movq $f_s1jlJ_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $f1_s1jlK_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq $sat_s1jlM_info,-16(%r12)
	movq %rsi,(%r12)
	movq $block_c1pUH_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-48(%rbp)
	leaq -16(%r12),%rbx
	movq %rbx,-40(%rbp)
	leaq -40(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1pVv:
	movq $72,904(%r13)
_c1pVs:
	movl $GHC.Real.integralEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFrom_entry, .-GHC.Real.integralEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:04.939570399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFrom_info
.type GHC.Real.integralEnumFrom_info, @object
GHC.Real.integralEnumFrom_info:
	.quad	GHC.Real.integralEnumFrom_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1pVD_srtd


==================== Asm code ====================
2018-03-16 15:56:04.940408172 UTC

.section .text
.align 8
_c1pUH:
_c1pUH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1pVy
_c1pVx:
	movq $go_s1jlN_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%rax
	movq $block_c1pVr_info,16(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Real.toInteger_entry
_c1pVy:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pUH, .-_c1pUH


==================== Asm code ====================
2018-03-16 15:56:04.941045021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pUH_info:
	.quad	_c1pUH
	.quad	3
	.quad	2203318222878
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.941740629 UTC

.section .text
.align 8
_c1pVr:
_c1pVr:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jlN_entry
	.size _c1pVr, .-_c1pVr


==================== Asm code ====================
2018-03-16 15:56:04.942323403 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pVr_info:
	.quad	_c1pVr
	.quad	1
	.quad	2203318222878
	.quad	S1jKw_srt+480


==================== Asm code ====================
2018-03-16 15:56:04.970915296 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromThen_closure
.type GHC.Real.integralEnumFromThen_closure, @object
GHC.Real.integralEnumFromThen_closure:
	.quad	GHC.Real.integralEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:04.971623945 UTC

.section .text
.align 8
f_s1jm2_entry:
_c1pWW:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1jm2_entry, .-f_s1jm2_entry


==================== Asm code ====================
2018-03-16 15:56:04.972162376 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jm2_info:
	.quad	f_s1jm2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.972857746 UTC

.section .text
.align 8
f1_s1jm3_entry:
_c1pX3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pX4
_c1pX5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pX4:
	jmp *-16(%r13)
	.size f1_s1jm3_entry, .-f1_s1jm3_entry


==================== Asm code ====================
2018-03-16 15:56:04.973551292 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1jm3_info:
	.quad	f1_s1jm3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.974199184 UTC

.section .text
.align 8
sat_s1jm6_entry:
_c1pXe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pXf
_c1pXg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.minBound_entry
_c1pXf:
	jmp *-16(%r13)
	.size sat_s1jm6_entry, .-sat_s1jm6_entry


==================== Asm code ====================
2018-03-16 15:56:04.974761254 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jm6_info:
	.quad	sat_s1jm6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.975425342 UTC

.section .text
.align 8
sat_s1jmc_entry:
_c1pXA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pXB
_c1pXC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pXy_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1pXB:
	jmp *-16(%r13)
	.size sat_s1jmc_entry, .-sat_s1jmc_entry


==================== Asm code ====================
2018-03-16 15:56:04.976027717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmc_info:
	.quad	sat_s1jmc_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.976627802 UTC

.section .text
.align 8
_c1pXy:
_c1pXy:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jm7_entry
	.size _c1pXy, .-_c1pXy


==================== Asm code ====================
2018-03-16 15:56:04.977205505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pXy_info:
	.quad	_c1pXy
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.977946221 UTC

.section .text
.align 8
sat_s1jma_entry:
_c1pXK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pXL
_c1pXM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pXL:
	jmp *-16(%r13)
	.size sat_s1jma_entry, .-sat_s1jma_entry


==================== Asm code ====================
2018-03-16 15:56:04.978572884 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jma_info:
	.quad	sat_s1jma_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.979303509 UTC

.section .text
.align 8
go_s1jm7_entry:
_c1pXQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pXR
_c1pXS:
	movq $block_c1pXq_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c1pXR:
	jmp *-8(%r13)
	.size go_s1jm7_entry, .-go_s1jm7_entry


==================== Asm code ====================
2018-03-16 15:56:04.979930917 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jm7_info:
	.quad	go_s1jm7_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.980782556 UTC

.section .text
.align 8
_c1pXq:
_c1pXq:
	cmpq $1,%rbx
	je _c1pXP
_c1pXO:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1pXW
_c1pXV:
	movq $sat_s1jmc_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jma_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pXW:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1pXP:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pXq, .-_c1pXq


==================== Asm code ====================
2018-03-16 15:56:04.981568955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pXq_info:
	.quad	_c1pXq
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.982247371 UTC

.section .text
.align 8
sat_s1jme_entry:
_c1pY6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pY7
_c1pY8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.minBound_entry
_c1pY7:
	jmp *-16(%r13)
	.size sat_s1jme_entry, .-sat_s1jme_entry


==================== Asm code ====================
2018-03-16 15:56:04.98283033 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jme_info:
	.quad	sat_s1jme_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.983494395 UTC

.section .text
.align 8
sat_s1jmk_entry:
_c1pYs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pYt
_c1pYu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pYq_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1pYt:
	jmp *-16(%r13)
	.size sat_s1jmk_entry, .-sat_s1jmk_entry


==================== Asm code ====================
2018-03-16 15:56:04.984118235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmk_info:
	.quad	sat_s1jmk_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.984698644 UTC

.section .text
.align 8
_c1pYq:
_c1pYq:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jmf_entry
	.size _c1pYq, .-_c1pYq


==================== Asm code ====================
2018-03-16 15:56:04.985310985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pYq_info:
	.quad	_c1pYq
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.986034328 UTC

.section .text
.align 8
sat_s1jmi_entry:
_c1pYC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pYD
_c1pYE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pYD:
	jmp *-16(%r13)
	.size sat_s1jmi_entry, .-sat_s1jmi_entry


==================== Asm code ====================
2018-03-16 15:56:04.986626923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmi_info:
	.quad	sat_s1jmi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.987347883 UTC

.section .text
.align 8
go_s1jmf_entry:
_c1pYI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pYJ
_c1pYK:
	movq $block_c1pYi_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c1pYJ:
	jmp *-8(%r13)
	.size go_s1jmf_entry, .-go_s1jmf_entry


==================== Asm code ====================
2018-03-16 15:56:04.988008467 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jmf_info:
	.quad	go_s1jmf_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.98883935 UTC

.section .text
.align 8
_c1pYi:
_c1pYi:
	cmpq $1,%rbx
	je _c1pYH
_c1pYG:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1pYO
_c1pYN:
	movq $sat_s1jmk_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jmi_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1pYO:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1pYH:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pYi, .-_c1pYi


==================== Asm code ====================
2018-03-16 15:56:04.989589865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pYi_info:
	.quad	_c1pYi
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.990183949 UTC

.section .text
.align 8
f_s1jmm_entry:
_c1pZ2:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1jmm_entry, .-f_s1jmm_entry


==================== Asm code ====================
2018-03-16 15:56:04.990745738 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jmm_info:
	.quad	f_s1jmm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.991425625 UTC

.section .text
.align 8
f1_s1jmn_entry:
_c1pZ9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pZa
_c1pZb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1pZa:
	jmp *-16(%r13)
	.size f1_s1jmn_entry, .-f1_s1jmn_entry


==================== Asm code ====================
2018-03-16 15:56:04.991980313 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1jmn_info:
	.quad	f1_s1jmn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.992657338 UTC

.section .text
.align 8
sat_s1jmq_entry:
_c1pZk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pZl
_c1pZm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.maxBound_entry
_c1pZl:
	jmp *-16(%r13)
	.size sat_s1jmq_entry, .-sat_s1jmq_entry


==================== Asm code ====================
2018-03-16 15:56:04.993310657 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmq_info:
	.quad	sat_s1jmq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:04.994055552 UTC

.section .text
.align 8
sat_s1jmw_entry:
_c1pZG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pZH
_c1pZI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1pZE_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1pZH:
	jmp *-16(%r13)
	.size sat_s1jmw_entry, .-sat_s1jmw_entry


==================== Asm code ====================
2018-03-16 15:56:04.99528959 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmw_info:
	.quad	sat_s1jmw_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.995973397 UTC

.section .text
.align 8
_c1pZE:
_c1pZE:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jmr_entry
	.size _c1pZE, .-_c1pZE


==================== Asm code ====================
2018-03-16 15:56:04.996535382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pZE_info:
	.quad	_c1pZE
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:04.997367509 UTC

.section .text
.align 8
sat_s1jmu_entry:
_c1pZQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pZR
_c1pZS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1pZR:
	jmp *-16(%r13)
	.size sat_s1jmu_entry, .-sat_s1jmu_entry


==================== Asm code ====================
2018-03-16 15:56:04.997963954 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmu_info:
	.quad	sat_s1jmu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:04.998662271 UTC

.section .text
.align 8
go_s1jmr_entry:
_c1pZW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1pZX
_c1pZY:
	movq $block_c1pZw_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c1pZX:
	jmp *-8(%r13)
	.size go_s1jmr_entry, .-go_s1jmr_entry


==================== Asm code ====================
2018-03-16 15:56:04.999275393 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jmr_info:
	.quad	go_s1jmr_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.000051335 UTC

.section .text
.align 8
_c1pZw:
_c1pZw:
	cmpq $1,%rbx
	je _c1pZV
_c1pZU:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1q02
_c1q01:
	movq $sat_s1jmw_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jmu_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1q02:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1pZV:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1pZw, .-_c1pZw


==================== Asm code ====================
2018-03-16 15:56:05.000748802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pZw_info:
	.quad	_c1pZw
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.001640108 UTC

.section .text
.align 8
sat_s1jmy_entry:
_c1q0c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q0d
_c1q0e:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Enum.maxBound_entry
_c1q0d:
	jmp *-16(%r13)
	.size sat_s1jmy_entry, .-sat_s1jmy_entry


==================== Asm code ====================
2018-03-16 15:56:05.00224024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmy_info:
	.quad	sat_s1jmy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.002930023 UTC

.section .text
.align 8
sat_s1jmE_entry:
_c1q0y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q0z
_c1q0A:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1q0w_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1q0z:
	jmp *-16(%r13)
	.size sat_s1jmE_entry, .-sat_s1jmE_entry


==================== Asm code ====================
2018-03-16 15:56:05.003554922 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmE_info:
	.quad	sat_s1jmE_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.004157015 UTC

.section .text
.align 8
_c1q0w:
_c1q0w:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jmz_entry
	.size _c1q0w, .-_c1q0w


==================== Asm code ====================
2018-03-16 15:56:05.004704073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q0w_info:
	.quad	_c1q0w
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.005454921 UTC

.section .text
.align 8
sat_s1jmC_entry:
_c1q0I:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q0J
_c1q0K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1q0J:
	jmp *-16(%r13)
	.size sat_s1jmC_entry, .-sat_s1jmC_entry


==================== Asm code ====================
2018-03-16 15:56:05.006061892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmC_info:
	.quad	sat_s1jmC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.006745609 UTC

.section .text
.align 8
go_s1jmz_entry:
_c1q0O:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q0P
_c1q0Q:
	movq $block_c1q0o_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c1q0P:
	jmp *-8(%r13)
	.size go_s1jmz_entry, .-go_s1jmz_entry


==================== Asm code ====================
2018-03-16 15:56:05.007338016 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jmz_info:
	.quad	go_s1jmz_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.008120883 UTC

.section .text
.align 8
_c1q0o:
_c1q0o:
	cmpq $1,%rbx
	je _c1q0N
_c1q0M:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1q0U
_c1q0T:
	movq $sat_s1jmE_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jmC_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1q0U:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1q0N:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1q0o, .-_c1q0o


==================== Asm code ====================
2018-03-16 15:56:05.008829627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q0o_info:
	.quad	_c1q0o
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.009414319 UTC

.section .data.rel.ro
.align 8
.align 1
u1q1I_srtd:
	.quad	S1jKw_srt+456
	.quad	39
	.quad	412585295873


==================== Asm code ====================
2018-03-16 15:56:05.010117902 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromThen_entry
.type GHC.Real.integralEnumFromThen_entry, @object
GHC.Real.integralEnumFromThen_entry:
_c1q0Y:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q0Z
_c1q10:
	movq $block_c1pWC_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1q0Z:
	movl $GHC.Real.integralEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromThen_entry, .-GHC.Real.integralEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:05.010765201 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromThen_info
.type GHC.Real.integralEnumFromThen_info, @object
GHC.Real.integralEnumFromThen_info:
	.quad	GHC.Real.integralEnumFromThen_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1q1I_srtd


==================== Asm code ====================
2018-03-16 15:56:05.011326176 UTC

.section .data.rel.ro
.align 8
.align 1
u1q1J_srtd:
	.quad	S1jKw_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:05.011959708 UTC

.section .text
.align 8
_c1pWC:
_c1pWC:
	movq $block_c1pWG_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1pWC, .-_c1pWC


==================== Asm code ====================
2018-03-16 15:56:05.012525718 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pWC_info:
	.quad	_c1pWC
	.quad	3
	.quad	-4294967266
	.quad	u1q1J_srtd


==================== Asm code ====================
2018-03-16 15:56:05.013077373 UTC

.section .data.rel.ro
.align 8
.align 1
u1q1K_srtd:
	.quad	S1jKw_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:05.013740995 UTC

.section .text
.align 8
_c1pWG:
_c1pWG:
	movq $block_c1pWK_info,-8(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
	.size _c1pWG, .-_c1pWG


==================== Asm code ====================
2018-03-16 15:56:05.014338152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pWG_info:
	.quad	_c1pWG
	.quad	3
	.quad	-4294967266
	.quad	u1q1K_srtd


==================== Asm code ====================
2018-03-16 15:56:05.014858395 UTC

.section .data.rel.ro
.align 8
.align 1
u1q1L_srtd:
	.quad	S1jKw_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:05.015546021 UTC

.section .text
.align 8
_c1pWK:
_c1pWK:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq $1,%rbx
	je _c1q1p
_c1q15:
	movq $block_c1pWO_info,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.minusInteger_entry
_c1q1p:
	movq $block_c1pYU_info,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.minusInteger_entry
	.size _c1pWK, .-_c1pWK


==================== Asm code ====================
2018-03-16 15:56:05.016139026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pWK_info:
	.quad	_c1pWK
	.quad	4
	.quad	-4294967266
	.quad	u1q1L_srtd


==================== Asm code ====================
2018-03-16 15:56:05.016904814 UTC

.section .text
.align 8
_c1pYU:
_c1pYU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1q1s
_c1q1r:
	movq $f_s1jmm_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $f1_s1jmn_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1pZc_info,-8(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_c1q1s:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pYU, .-_c1pYU


==================== Asm code ====================
2018-03-16 15:56:05.017656957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pYU_info:
	.quad	_c1pYU
	.quad	516
	.quad	2203318222878
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.018503866 UTC

.section .text
.align 8
_c1pZc:
_c1pZc:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c1q1B
_c1q1u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1q1E
_c1q1w:
	movq $sat_s1jmq_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c1pZn_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1q1E:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c1q1B:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1q1E
_c1q1D:
	movq $sat_s1jmy_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c1q0f_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1pZc, .-_c1pZc


==================== Asm code ====================
2018-03-16 15:56:05.019247018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pZc_info:
	.quad	_c1pZc
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.020005401 UTC

.section .text
.align 8
_c1q0f:
_c1q0f:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q1H
_c1q1G:
	movq $go_s1jmz_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jmz_entry
_c1q1H:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1q0f, .-_c1q0f


==================== Asm code ====================
2018-03-16 15:56:05.020615583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q0f_info:
	.quad	_c1q0f
	.quad	773
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.021504113 UTC

.section .text
.align 8
_c1pZn:
_c1pZn:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q1A
_c1q1z:
	movq $go_s1jmr_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jmr_entry
_c1q1A:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pZn, .-_c1pZn


==================== Asm code ====================
2018-03-16 15:56:05.022679365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pZn_info:
	.quad	_c1pZn
	.quad	773
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.023463442 UTC

.section .text
.align 8
_c1pWO:
_c1pWO:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1q18
_c1q17:
	movq $f_s1jm2_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $f1_s1jm3_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1pX6_info,-8(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_c1q18:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pWO, .-_c1pWO


==================== Asm code ====================
2018-03-16 15:56:05.024181251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pWO_info:
	.quad	_c1pWO
	.quad	516
	.quad	2203318222878
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.025019728 UTC

.section .text
.align 8
_c1pX6:
_c1pX6:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c1q1h
_c1q1a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1q1k
_c1q1c:
	movq $sat_s1jm6_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c1pXh_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1q1k:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c1q1h:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1q1k
_c1q1j:
	movq $sat_s1jme_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c1pY9_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1pX6, .-_c1pX6


==================== Asm code ====================
2018-03-16 15:56:05.025756227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pX6_info:
	.quad	_c1pX6
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.026467258 UTC

.section .text
.align 8
_c1pY9:
_c1pY9:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q1n
_c1q1m:
	movq $go_s1jmf_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jmf_entry
_c1q1n:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pY9, .-_c1pY9


==================== Asm code ====================
2018-03-16 15:56:05.027097264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pY9_info:
	.quad	_c1pY9
	.quad	773
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.027772473 UTC

.section .text
.align 8
_c1pXh:
_c1pXh:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q1g
_c1q1f:
	movq $go_s1jm7_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jm7_entry
_c1q1g:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1pXh, .-_c1pXh


==================== Asm code ====================
2018-03-16 15:56:05.028410858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1pXh_info:
	.quad	_c1pXh
	.quad	773
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.036522034 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromTo_closure
.type GHC.Real.integralEnumFromTo_closure, @object
GHC.Real.integralEnumFromTo_closure:
	.quad	GHC.Real.integralEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.037236543 UTC

.section .text
.align 8
f_s1jmI_entry:
_c1q5f:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1jmI_entry, .-f_s1jmI_entry


==================== Asm code ====================
2018-03-16 15:56:05.037873849 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jmI_info:
	.quad	f_s1jmI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.038594427 UTC

.section .text
.align 8
f1_s1jmJ_entry:
_c1q5m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q5n
_c1q5o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1q5n:
	jmp *-16(%r13)
	.size f1_s1jmJ_entry, .-f1_s1jmJ_entry


==================== Asm code ====================
2018-03-16 15:56:05.039203147 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1jmJ_info:
	.quad	f1_s1jmJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.039915116 UTC

.section .text
.align 8
sat_s1jmQ_entry:
_c1q5I:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q5J
_c1q5K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1q5G_info,-32(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1q5J:
	jmp *-16(%r13)
	.size sat_s1jmQ_entry, .-sat_s1jmQ_entry


==================== Asm code ====================
2018-03-16 15:56:05.040549866 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmQ_info:
	.quad	sat_s1jmQ_entry
	.quad	2
	.quad	144115192370823186
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.041187293 UTC

.section .text
.align 8
_c1q5G:
_c1q5G:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jmL_entry
	.size _c1q5G, .-_c1q5G


==================== Asm code ====================
2018-03-16 15:56:05.041820115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q5G_info:
	.quad	_c1q5G
	.quad	1
	.quad	144115192370823198
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.042529662 UTC

.section .text
.align 8
sat_s1jmO_entry:
_c1q5S:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q5T
_c1q5U:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1q5T:
	jmp *-16(%r13)
	.size sat_s1jmO_entry, .-sat_s1jmO_entry


==================== Asm code ====================
2018-03-16 15:56:05.043167596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jmO_info:
	.quad	sat_s1jmO_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.043882613 UTC

.section .text
.align 8
go_s1jmL_entry:
_c1q5Y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q5Z
_c1q60:
	movq $block_c1q5y_info,-32(%rbp)
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c1q5Z:
	jmp *-8(%r13)
	.size go_s1jmL_entry, .-go_s1jmL_entry


==================== Asm code ====================
2018-03-16 15:56:05.044563911 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jmL_info:
	.quad	go_s1jmL_entry
	.quad	2
	.quad	144115192370823179
	.quad	4294967301
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.045464297 UTC

.section .text
.align 8
_c1q5y:
_c1q5y:
	cmpq $1,%rbx
	je _c1q5X
_c1q5W:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1q64
_c1q63:
	movq $sat_s1jmQ_info,-80(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jmO_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1q64:
	movq $88,904(%r13)
	jmp stg_gc_unbx_r1
_c1q5X:
	movl $[]_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1q5y, .-_c1q5y


==================== Asm code ====================
2018-03-16 15:56:05.046170236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q5y_info:
	.quad	_c1q5y
	.quad	3
	.quad	144115192370823198
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.047061235 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromTo_entry
.type GHC.Real.integralEnumFromTo_entry, @object
GHC.Real.integralEnumFromTo_entry:
_c1q68:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q6a
_c1q6b:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1q6d
_c1q6c:
	movq $f_s1jmI_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $f1_s1jmJ_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1q5p_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-48(%rbp)
	movq %rdi,-40(%rbp)
	leaq -16(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1q6d:
	movq $48,904(%r13)
_c1q6a:
	movl $GHC.Real.integralEnumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromTo_entry, .-GHC.Real.integralEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:05.04778325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromTo_info
.type GHC.Real.integralEnumFromTo_info, @object
GHC.Real.integralEnumFromTo_info:
	.quad	GHC.Real.integralEnumFromTo_entry
	.quad	0
	.quad	720575944674246670
	.quad	12884901911
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.048485355 UTC

.section .text
.align 8
_c1q5p:
_c1q5p:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1q6g
_c1q6f:
	movq $go_s1jmL_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%rax
	movq $block_c1q69_info,16(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Real.toInteger_entry
_c1q6g:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1q5p, .-_c1q5p


==================== Asm code ====================
2018-03-16 15:56:05.049179584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q5p_info:
	.quad	_c1q5p
	.quad	3
	.quad	144115192370823198
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.051190226 UTC

.section .text
.align 8
_c1q69:
_c1q69:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jmL_entry
	.size _c1q69, .-_c1q69


==================== Asm code ====================
2018-03-16 15:56:05.051800705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q69_info:
	.quad	_c1q69
	.quad	1
	.quad	144115192370823198
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.065554712 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromThenTo_closure
.type GHC.Real.integralEnumFromThenTo_closure, @object
GHC.Real.integralEnumFromThenTo_closure:
	.quad	GHC.Real.integralEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.066289943 UTC

.section .text
.align 8
f_s1jmZ_entry:
_c1q7t:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1jmZ_entry, .-f_s1jmZ_entry


==================== Asm code ====================
2018-03-16 15:56:05.066833411 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jmZ_info:
	.quad	f_s1jmZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.067570169 UTC

.section .text
.align 8
f1_s1jn0_entry:
_c1q7A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q7B
_c1q7C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1q7B:
	jmp *-16(%r13)
	.size f1_s1jn0_entry, .-f1_s1jn0_entry


==================== Asm code ====================
2018-03-16 15:56:05.068139726 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1jn0_info:
	.quad	f1_s1jn0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.068858814 UTC

.section .text
.align 8
sat_s1jn8_entry:
_c1q80:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q81
_c1q82:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1q7Y_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1q81:
	jmp *-16(%r13)
	.size sat_s1jn8_entry, .-sat_s1jn8_entry


==================== Asm code ====================
2018-03-16 15:56:05.069621977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jn8_info:
	.quad	sat_s1jn8_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.070276147 UTC

.section .text
.align 8
_c1q7Y:
_c1q7Y:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jn3_entry
	.size _c1q7Y, .-_c1q7Y


==================== Asm code ====================
2018-03-16 15:56:05.070825935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7Y_info:
	.quad	_c1q7Y
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.071558033 UTC

.section .text
.align 8
sat_s1jn6_entry:
_c1q8a:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q8b
_c1q8c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1q8b:
	jmp *-16(%r13)
	.size sat_s1jn6_entry, .-sat_s1jn6_entry


==================== Asm code ====================
2018-03-16 15:56:05.072208803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jn6_info:
	.quad	sat_s1jn6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.073007898 UTC

.section .text
.align 8
go_s1jn3_entry:
_c1q8g:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q8h
_c1q8i:
	movq $block_c1q7Q_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c1q8h:
	jmp *-8(%r13)
	.size go_s1jn3_entry, .-go_s1jn3_entry


==================== Asm code ====================
2018-03-16 15:56:05.073739873 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jn3_info:
	.quad	go_s1jn3_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.074631173 UTC

.section .text
.align 8
_c1q7Q:
_c1q7Q:
	cmpq $1,%rbx
	je _c1q8f
_c1q8e:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1q8m
_c1q8l:
	movq $sat_s1jn8_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jn6_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1q8m:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1q8f:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1q7Q, .-_c1q7Q


==================== Asm code ====================
2018-03-16 15:56:05.075385312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7Q_info:
	.quad	_c1q7Q
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.076145841 UTC

.section .text
.align 8
sat_s1jnf_entry:
_c1q8L:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q8M
_c1q8N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1q8J_info,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c1q8M:
	jmp *-16(%r13)
	.size sat_s1jnf_entry, .-sat_s1jnf_entry


==================== Asm code ====================
2018-03-16 15:56:05.076835326 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jnf_info:
	.quad	sat_s1jnf_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.077553748 UTC

.section .text
.align 8
_c1q8J:
_c1q8J:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1jna_entry
	.size _c1q8J, .-_c1q8J


==================== Asm code ====================
2018-03-16 15:56:05.078743663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q8J_info:
	.quad	_c1q8J
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.079500923 UTC

.section .text
.align 8
sat_s1jnd_entry:
_c1q8V:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q8W
_c1q8X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1q8W:
	jmp *-16(%r13)
	.size sat_s1jnd_entry, .-sat_s1jnd_entry


==================== Asm code ====================
2018-03-16 15:56:05.08014995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jnd_info:
	.quad	sat_s1jnd_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.080831683 UTC

.section .text
.align 8
go_s1jna_entry:
_c1q91:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q92
_c1q93:
	movq $block_c1q8B_info,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c1q92:
	jmp *-8(%r13)
	.size go_s1jna_entry, .-go_s1jna_entry


==================== Asm code ====================
2018-03-16 15:56:05.081498524 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1jna_info:
	.quad	go_s1jna_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.0822966 UTC

.section .text
.align 8
_c1q8B:
_c1q8B:
	cmpq $1,%rbx
	je _c1q90
_c1q8Z:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1q97
_c1q96:
	movq $sat_s1jnf_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jnd_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1q97:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c1q90:
	movl $[]_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1q8B, .-_c1q8B


==================== Asm code ====================
2018-03-16 15:56:05.082980633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q8B_info:
	.quad	_c1q8B
	.quad	4
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.083523514 UTC

.section .data.rel.ro
.align 8
.align 1
u1q9u_srtd:
	.quad	S1jKw_srt+456
	.quad	41
	.quad	1237219016705


==================== Asm code ====================
2018-03-16 15:56:05.08425039 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromThenTo_entry
.type GHC.Real.integralEnumFromThenTo_entry, @object
GHC.Real.integralEnumFromThenTo_entry:
_c1q9b:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1q9c
_c1q9d:
	movq $block_c1q7d_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1q9c:
	movl $GHC.Real.integralEnumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromThenTo_entry, .-GHC.Real.integralEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:05.084915495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromThenTo_info
.type GHC.Real.integralEnumFromThenTo_info, @object
GHC.Real.integralEnumFromThenTo_info:
	.quad	GHC.Real.integralEnumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1q9u_srtd


==================== Asm code ====================
2018-03-16 15:56:05.085517736 UTC

.section .data.rel.ro
.align 8
.align 1
u1q9v_srtd:
	.quad	S1jKw_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:05.086184084 UTC

.section .text
.align 8
_c1q7d:
_c1q7d:
	movq $block_c1q7h_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1q7d, .-_c1q7d


==================== Asm code ====================
2018-03-16 15:56:05.086779134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7d_info:
	.quad	_c1q7d
	.quad	3
	.quad	-4294967266
	.quad	u1q9v_srtd


==================== Asm code ====================
2018-03-16 15:56:05.087345073 UTC

.section .data.rel.ro
.align 8
.align 1
u1q9w_srtd:
	.quad	S1jKw_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:05.088015494 UTC

.section .text
.align 8
_c1q7h:
_c1q7h:
	movq $block_c1q7l_info,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.minusInteger_entry
	.size _c1q7h, .-_c1q7h


==================== Asm code ====================
2018-03-16 15:56:05.088588013 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7h_info:
	.quad	_c1q7h
	.quad	3
	.quad	-4294967266
	.quad	u1q9w_srtd


==================== Asm code ====================
2018-03-16 15:56:05.08939586 UTC

.section .text
.align 8
_c1q7l:
_c1q7l:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1q9i
_c1q9h:
	movq $f_s1jmZ_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $f1_s1jn0_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1q7D_info,-16(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_c1q9i:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1q7l, .-_c1q7l


==================== Asm code ====================
2018-03-16 15:56:05.090068987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7l_info:
	.quad	_c1q7l
	.quad	3
	.quad	2203318222878
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.090802516 UTC

.section .text
.align 8
_c1q7D:
_c1q7D:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rcx
	cmpq $1,%rbx
	je _c1q9q
_c1q9l:
	movq $block_c1q7H_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1q9q:
	movq $block_c1q8s_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1q7D, .-_c1q7D


==================== Asm code ====================
2018-03-16 15:56:05.091409777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7D_info:
	.quad	_c1q7D
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.092124499 UTC

.section .text
.align 8
_c1q8s:
_c1q8s:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q9t
_c1q9s:
	movq $go_s1jna_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 32(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jna_entry
_c1q9t:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1q8s, .-_c1q8s


==================== Asm code ====================
2018-03-16 15:56:05.092770632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q8s_info:
	.quad	_c1q8s
	.quad	1285
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.093543962 UTC

.section .text
.align 8
_c1q7H:
_c1q7H:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1q9o
_c1q9n:
	movq $go_s1jn3_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 32(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1jn3_entry
_c1q9o:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1q7H, .-_c1q7H


==================== Asm code ====================
2018-03-16 15:56:05.094192354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1q7H_info:
	.quad	_c1q7H
	.quad	1285
	.quad	4294967326
	.quad	S1jKw_srt+752


==================== Asm code ====================
2018-03-16 15:56:05.095906664 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$trModule4_bytes
.type GHC.Real.$trModule4_bytes, @object
GHC.Real.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:56:05.097586552 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule3_closure
.type GHC.Real.$trModule3_closure, @object
GHC.Real.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:56:05.099126188 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$trModule2_bytes
.type GHC.Real.$trModule2_bytes, @object
GHC.Real.$trModule2_bytes:
	.asciz "GHC.Real"


==================== Asm code ====================
2018-03-16 15:56:05.100780791 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule1_closure
.type GHC.Real.$trModule1_closure, @object
GHC.Real.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:56:05.103151747 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule_closure
.type GHC.Real.$trModule_closure, @object
GHC.Real.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Real.$trModule3_closure+1
	.quad	GHC.Real.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.10559083 UTC

.section .data
.align 8
.align 1
$krep_r1j3d_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.107211594 UTC

.section .data
.align 8
.align 1
$krep1_r1j3e_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.108913385 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional1_closure
.type GHC.Real.$tcFractional1_closure, @object
GHC.Real.$tcFractional1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep1_r1j3e_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.110651644 UTC

.section .data
.align 8
.align 1
$krep2_r1j3f_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.112364624 UTC

.section .data
.align 8
.align 1
$krep3_r1j3g_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep2_r1j3f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.114090897 UTC

.section .data
.align 8
.align 1
$krep4_r1j3h_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep3_r1j3g_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.115820642 UTC

.section .data
.align 8
.align 1
$krep5_r1j3i_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep_r1j3d_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.117620849 UTC

.section .data
.align 8
.align 1
$krep6_r1j3j_closure:
	.quad	:_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.119419505 UTC

.section .data
.align 8
.align 1
$krep7_r1j3k_closure:
	.quad	:_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.121147051 UTC

.section .data
.align 8
.align 1
$krep8_r1j3l_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep7_r1j3k_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.124556179 UTC

.section .data
.align 8
.align 1
$krep9_r1j3m_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep8_r1j3l_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.126258293 UTC

.section .data
.align 8
.align 1
$krep10_r1j3n_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep9_r1j3m_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.128127138 UTC

.section .data
.align 8
.align 1
$krep11_r1j3o_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Num.$tcNum_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.130446797 UTC

.section .data
.align 8
.align 1
$krep12_r1j3p_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Enum.$tcEnum_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.13214424 UTC

.section .data
.align 8
.align 1
$krep13_r1j3q_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Classes.$tcOrd_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.134035677 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcRatio2_bytes
.type GHC.Real.$tcRatio2_bytes, @object
GHC.Real.$tcRatio2_bytes:
	.asciz "Ratio"


==================== Asm code ====================
2018-03-16 15:56:05.135657237 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRatio1_closure
.type GHC.Real.$tcRatio1_closure, @object
GHC.Real.$tcRatio1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcRatio2_bytes


==================== Asm code ====================
2018-03-16 15:56:05.137546139 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRatio_closure
.type GHC.Real.$tcRatio_closure, @object
GHC.Real.$tcRatio_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcRatio1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-788220262863756648
	.quad	1271393732863050253
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.139262533 UTC

.section .data
.align 8
.align 1
$krep14_r1j3r_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRatio_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.140931919 UTC

.section .data
.align 8
.align 1
$krep15_r1j3s_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep14_r1j3r_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.142665809 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%1_closure
.type GHC.Real.$tc':%1_closure, @object
GHC.Real.$tc':%1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep15_r1j3s_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.144258576 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc':%3_bytes
.type GHC.Real.$tc':%3_bytes, @object
GHC.Real.$tc':%3_bytes:
	.asciz "':%"


==================== Asm code ====================
2018-03-16 15:56:05.145970693 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%2_closure
.type GHC.Real.$tc':%2_closure, @object
GHC.Real.$tc':%2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc':%3_bytes


==================== Asm code ====================
2018-03-16 15:56:05.147814195 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%_closure
.type GHC.Real.$tc':%_closure, @object
GHC.Real.$tc':%_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc':%2_closure+1
	.quad	GHC.Real.$tc':%1_closure+4
	.quad	-6493754205071423244
	.quad	6861245286732044789
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.150339685 UTC

.section .data
.align 8
.align 1
$krep16_r1j3t_closure:
	.quad	:_con_info
	.quad	$krep_r1j3d_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.152116644 UTC

.section .data
.align 8
.align 1
$krep17_r1j3u_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRatio_closure+1
	.quad	$krep16_r1j3t_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.154414559 UTC

.section .data
.align 8
.align 1
$krep18_r1j3v_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep17_r1j3u_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.15621683 UTC

.section .data
.align 8
.align 1
$krep19_r1j3w_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r1j3u_closure+1
	.quad	$krep2_r1j3f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.157831021 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcReal2_bytes
.type GHC.Real.$tcReal2_bytes, @object
GHC.Real.$tcReal2_bytes:
	.asciz "Real"


==================== Asm code ====================
2018-03-16 15:56:05.159478875 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcReal1_closure
.type GHC.Real.$tcReal1_closure, @object
GHC.Real.$tcReal1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcReal2_bytes


==================== Asm code ====================
2018-03-16 15:56:05.161122105 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcReal_closure
.type GHC.Real.$tcReal_closure, @object
GHC.Real.$tcReal_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcReal1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	1826502536394630182
	.quad	-3958958293817300203
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.162873222 UTC

.section .data
.align 8
.align 1
$krep20_r1j3x_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcReal_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.164611064 UTC

.section .data
.align 8
.align 1
$krep21_r1j3y_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep18_r1j3v_closure+4
	.quad	$krep20_r1j3x_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.166356729 UTC

.section .data
.align 8
.align 1
$krep22_r1j3z_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep13_r1j3q_closure+1
	.quad	$krep21_r1j3y_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.16803665 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real1_closure
.type GHC.Real.$tc'C:Real1_closure, @object
GHC.Real.$tc'C:Real1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r1j3o_closure+1
	.quad	$krep22_r1j3z_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.169721191 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Real3_bytes
.type GHC.Real.$tc'C:Real3_bytes, @object
GHC.Real.$tc'C:Real3_bytes:
	.asciz "'C:Real"


==================== Asm code ====================
2018-03-16 15:56:05.171403662 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real2_closure
.type GHC.Real.$tc'C:Real2_closure, @object
GHC.Real.$tc'C:Real2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Real3_bytes


==================== Asm code ====================
2018-03-16 15:56:05.173149721 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real_closure
.type GHC.Real.$tc'C:Real_closure, @object
GHC.Real.$tc'C:Real_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Real2_closure+1
	.quad	GHC.Real.$tc'C:Real1_closure+4
	.quad	5938283050841830427
	.quad	8926187074226767634
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.174899875 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcIntegral2_bytes
.type GHC.Real.$tcIntegral2_bytes, @object
GHC.Real.$tcIntegral2_bytes:
	.asciz "Integral"


==================== Asm code ====================
2018-03-16 15:56:05.176545835 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcIntegral1_closure
.type GHC.Real.$tcIntegral1_closure, @object
GHC.Real.$tcIntegral1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcIntegral2_bytes


==================== Asm code ====================
2018-03-16 15:56:05.178933895 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcIntegral_closure
.type GHC.Real.$tcIntegral_closure, @object
GHC.Real.$tcIntegral_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcIntegral1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	-1845586262162837643
	.quad	3304955164956033666
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.180549848 UTC

.section .data
.align 8
.align 1
$krep23_r1j3A_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcIntegral_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.182275887 UTC

.section .data
.align 8
.align 1
$krep24_r1j3B_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r1j3i_closure+4
	.quad	$krep23_r1j3A_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.183965367 UTC

.section .data
.align 8
.align 1
$krep25_r1j3C_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r1j3n_closure+4
	.quad	$krep24_r1j3B_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.185757139 UTC

.section .data
.align 8
.align 1
$krep26_r1j3D_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r1j3n_closure+4
	.quad	$krep25_r1j3C_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.187418872 UTC

.section .data
.align 8
.align 1
$krep27_r1j3E_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep26_r1j3D_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.189064624 UTC

.section .data
.align 8
.align 1
$krep28_r1j3F_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep27_r1j3E_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.190779327 UTC

.section .data
.align 8
.align 1
$krep29_r1j3G_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep28_r1j3F_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.192398643 UTC

.section .data
.align 8
.align 1
$krep30_r1j3H_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep29_r1j3G_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.194443746 UTC

.section .data
.align 8
.align 1
$krep31_r1j3I_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r1j3p_closure+1
	.quad	$krep30_r1j3H_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.196130885 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral1_closure
.type GHC.Real.$tc'C:Integral1_closure, @object
GHC.Real.$tc'C:Integral1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep20_r1j3x_closure+1
	.quad	$krep31_r1j3I_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.197809416 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Integral3_bytes
.type GHC.Real.$tc'C:Integral3_bytes, @object
GHC.Real.$tc'C:Integral3_bytes:
	.asciz "'C:Integral"


==================== Asm code ====================
2018-03-16 15:56:05.199447081 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral2_closure
.type GHC.Real.$tc'C:Integral2_closure, @object
GHC.Real.$tc'C:Integral2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Integral3_bytes


==================== Asm code ====================
2018-03-16 15:56:05.202242021 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral_closure
.type GHC.Real.$tc'C:Integral_closure, @object
GHC.Real.$tc'C:Integral_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Integral2_closure+1
	.quad	GHC.Real.$tc'C:Integral1_closure+4
	.quad	-6305726333452722333
	.quad	-882710533898305838
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.20396328 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcFractional3_bytes
.type GHC.Real.$tcFractional3_bytes, @object
GHC.Real.$tcFractional3_bytes:
	.asciz "Fractional"


==================== Asm code ====================
2018-03-16 15:56:05.205590957 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional2_closure
.type GHC.Real.$tcFractional2_closure, @object
GHC.Real.$tcFractional2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcFractional3_bytes


==================== Asm code ====================
2018-03-16 15:56:05.207345888 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional_closure
.type GHC.Real.$tcFractional_closure, @object
GHC.Real.$tcFractional_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcFractional2_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	-3477873102646800759
	.quad	-4671908134057652397
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.209057719 UTC

.section .data
.align 8
.align 1
$krep32_r1j3J_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcFractional_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.210769595 UTC

.section .data
.align 8
.align 1
$krep33_r1j3K_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep19_r1j3w_closure+4
	.quad	$krep32_r1j3J_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.21248523 UTC

.section .data
.align 8
.align 1
$krep34_r1j3L_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_r1j3g_closure+4
	.quad	$krep33_r1j3K_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.214216073 UTC

.section .data
.align 8
.align 1
$krep35_r1j3M_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep34_r1j3L_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.215869476 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional1_closure
.type GHC.Real.$tc'C:Fractional1_closure, @object
GHC.Real.$tc'C:Fractional1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r1j3o_closure+1
	.quad	$krep35_r1j3M_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.217593906 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Fractional3_bytes
.type GHC.Real.$tc'C:Fractional3_bytes, @object
GHC.Real.$tc'C:Fractional3_bytes:
	.asciz "'C:Fractional"


==================== Asm code ====================
2018-03-16 15:56:05.219269894 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional2_closure
.type GHC.Real.$tc'C:Fractional2_closure, @object
GHC.Real.$tc'C:Fractional2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Fractional3_bytes


==================== Asm code ====================
2018-03-16 15:56:05.221068081 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional_closure
.type GHC.Real.$tc'C:Fractional_closure, @object
GHC.Real.$tc'C:Fractional_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Fractional2_closure+1
	.quad	GHC.Real.$tc'C:Fractional1_closure+4
	.quad	-2740308543143832686
	.quad	-7424859509354046163
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.222756494 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcRealFrac2_bytes
.type GHC.Real.$tcRealFrac2_bytes, @object
GHC.Real.$tcRealFrac2_bytes:
	.asciz "RealFrac"


==================== Asm code ====================
2018-03-16 15:56:05.224449586 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRealFrac1_closure
.type GHC.Real.$tcRealFrac1_closure, @object
GHC.Real.$tcRealFrac1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcRealFrac2_bytes


==================== Asm code ====================
2018-03-16 15:56:05.227986915 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRealFrac_closure
.type GHC.Real.$tcRealFrac_closure, @object
GHC.Real.$tcRealFrac_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcRealFrac1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	2318913099678420819
	.quad	6373121509494083706
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:05.233596703 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c<_closure
.type GHC.Real.$w$c<_closure, @object
GHC.Real.$w$c<_closure:
	.quad	GHC.Real.$w$c<_info


==================== Asm code ====================
2018-03-16 15:56:05.234385902 UTC

.section .text
.align 8
$dNum_s1jnm_entry:
_c1qcv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qcw
_c1qcx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qcw:
	jmp *-16(%r13)
	.size $dNum_s1jnm_entry, .-$dNum_s1jnm_entry


==================== Asm code ====================
2018-03-16 15:56:05.234986202 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jnm_info:
	.quad	$dNum_s1jnm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.235681516 UTC

.section .text
.align 8
sat_s1jnp_entry:
_c1qcC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qcD
_c1qcE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qcD:
	jmp *-16(%r13)
	.size sat_s1jnp_entry, .-sat_s1jnp_entry


==================== Asm code ====================
2018-03-16 15:56:05.236342332 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jnp_info:
	.quad	sat_s1jnp_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.237031938 UTC

.section .text
.align 8
sat_s1jno_entry:
_c1qcJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qcK
_c1qcL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qcK:
	jmp *-16(%r13)
	.size sat_s1jno_entry, .-sat_s1jno_entry


==================== Asm code ====================
2018-03-16 15:56:05.237728702 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jno_info:
	.quad	sat_s1jno_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.2384677 UTC

.section .text
.align 8
.globl GHC.Real.$w$c<_entry
.type GHC.Real.$w$c<_entry, @object
GHC.Real.$w$c<_entry:
_c1qcM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qcO
_c1qcP:
	movq $block_c1qcn_info,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qcO:
	movl $GHC.Real.$w$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c<_entry, .-GHC.Real.$w$c<_entry


==================== Asm code ====================
2018-03-16 15:56:05.239075711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c<_info
.type GHC.Real.$w$c<_info, @object
GHC.Real.$w$c<_info:
	.quad	GHC.Real.$w$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:05.239863831 UTC

.section .text
.align 8
_c1qcn:
_c1qcn:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c1qcS
_c1qcR:
	movq $$dNum_s1jnm_info,-96(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s1jnp_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jno_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq $block_c1qcN_info,16(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1qcS:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qcn, .-_c1qcn


==================== Asm code ====================
2018-03-16 15:56:05.240561839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qcn_info:
	.quad	_c1qcn
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.241182172 UTC

.section .text
.align 8
_c1qcN:
_c1qcN:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Classes.<_entry
	.size _c1qcN, .-_c1qcN


==================== Asm code ====================
2018-03-16 15:56:05.241790318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qcN_info:
	.quad	_c1qcN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.245430005 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<_closure
.type GHC.Real.$fOrdRatio_$c<_closure, @object
GHC.Real.$fOrdRatio_$c<_closure:
	.quad	GHC.Real.$fOrdRatio_$c<_info


==================== Asm code ====================
2018-03-16 15:56:05.246236001 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c<_entry
.type GHC.Real.$fOrdRatio_$c<_entry, @object
GHC.Real.$fOrdRatio_$c<_entry:
_c1qdB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qdF
_c1qdG:
	movq $block_c1qdy_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qdy
_c1qdz:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qdF:
	movl $GHC.Real.$fOrdRatio_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c<_entry, .-GHC.Real.$fOrdRatio_$c<_entry


==================== Asm code ====================
2018-03-16 15:56:05.246922475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<_info
.type GHC.Real.$fOrdRatio_$c<_info, @object
GHC.Real.$fOrdRatio_$c<_info:
	.quad	GHC.Real.$fOrdRatio_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.247628447 UTC

.section .text
.align 8
_c1qdy:
_c1qdy:
	movq $block_c1qdE_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qdE
_c1qdI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qdy, .-_c1qdy


==================== Asm code ====================
2018-03-16 15:56:05.248271036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qdy_info:
	.quad	_c1qdy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.248907258 UTC

.section .text
.align 8
_c1qdE:
_c1qdE:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1qdE, .-_c1qdE


==================== Asm code ====================
2018-03-16 15:56:05.249555096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qdE_info:
	.quad	_c1qdE
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.255675616 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c<=_closure
.type GHC.Real.$w$c<=_closure, @object
GHC.Real.$w$c<=_closure:
	.quad	GHC.Real.$w$c<=_info


==================== Asm code ====================
2018-03-16 15:56:05.256437354 UTC

.section .text
.align 8
$dNum_s1jnF_entry:
_c1qee:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qef
_c1qeg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qef:
	jmp *-16(%r13)
	.size $dNum_s1jnF_entry, .-$dNum_s1jnF_entry


==================== Asm code ====================
2018-03-16 15:56:05.257056489 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jnF_info:
	.quad	$dNum_s1jnF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.258551654 UTC

.section .text
.align 8
sat_s1jnI_entry:
_c1qel:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qem
_c1qen:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qem:
	jmp *-16(%r13)
	.size sat_s1jnI_entry, .-sat_s1jnI_entry


==================== Asm code ====================
2018-03-16 15:56:05.259220671 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jnI_info:
	.quad	sat_s1jnI_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.259879854 UTC

.section .text
.align 8
sat_s1jnH_entry:
_c1qes:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qet
_c1qeu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qet:
	jmp *-16(%r13)
	.size sat_s1jnH_entry, .-sat_s1jnH_entry


==================== Asm code ====================
2018-03-16 15:56:05.260535109 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jnH_info:
	.quad	sat_s1jnH_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.261294229 UTC

.section .text
.align 8
.globl GHC.Real.$w$c<=_entry
.type GHC.Real.$w$c<=_entry, @object
GHC.Real.$w$c<=_entry:
_c1qev:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qex
_c1qey:
	movq $block_c1qe6_info,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qex:
	movl $GHC.Real.$w$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c<=_entry, .-GHC.Real.$w$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:05.261928989 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c<=_info
.type GHC.Real.$w$c<=_info, @object
GHC.Real.$w$c<=_info:
	.quad	GHC.Real.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:05.262695571 UTC

.section .text
.align 8
_c1qe6:
_c1qe6:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c1qeB
_c1qeA:
	movq $$dNum_s1jnF_info,-96(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s1jnI_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jnH_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq $block_c1qew_info,16(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1qeB:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qe6, .-_c1qe6


==================== Asm code ====================
2018-03-16 15:56:05.263420345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qe6_info:
	.quad	_c1qe6
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.26402191 UTC

.section .text
.align 8
_c1qew:
_c1qew:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Classes.<=_entry
	.size _c1qew, .-_c1qew


==================== Asm code ====================
2018-03-16 15:56:05.264555147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qew_info:
	.quad	_c1qew
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.268244823 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<=_closure
.type GHC.Real.$fOrdRatio_$c<=_closure, @object
GHC.Real.$fOrdRatio_$c<=_closure:
	.quad	GHC.Real.$fOrdRatio_$c<=_info


==================== Asm code ====================
2018-03-16 15:56:05.269052053 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c<=_entry
.type GHC.Real.$fOrdRatio_$c<=_entry, @object
GHC.Real.$fOrdRatio_$c<=_entry:
_c1qfk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qfo
_c1qfp:
	movq $block_c1qfh_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qfh
_c1qfi:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qfo:
	movl $GHC.Real.$fOrdRatio_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c<=_entry, .-GHC.Real.$fOrdRatio_$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:05.269766802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<=_info
.type GHC.Real.$fOrdRatio_$c<=_info, @object
GHC.Real.$fOrdRatio_$c<=_info:
	.quad	GHC.Real.$fOrdRatio_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.270468012 UTC

.section .text
.align 8
_c1qfh:
_c1qfh:
	movq $block_c1qfn_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qfn
_c1qfr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qfh, .-_c1qfh


==================== Asm code ====================
2018-03-16 15:56:05.271096452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qfh_info:
	.quad	_c1qfh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.271753372 UTC

.section .text
.align 8
_c1qfn:
_c1qfn:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1qfn, .-_c1qfn


==================== Asm code ====================
2018-03-16 15:56:05.272353178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qfn_info:
	.quad	_c1qfn
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.276745117 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmax_closure
.type GHC.Real.$fOrdRatio_$cmax_closure, @object
GHC.Real.$fOrdRatio_$cmax_closure:
	.quad	GHC.Real.$fOrdRatio_$cmax_info


==================== Asm code ====================
2018-03-16 15:56:05.277671945 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cmax_entry
.type GHC.Real.$fOrdRatio_$cmax_entry, @object
GHC.Real.$fOrdRatio_$cmax_entry:
_c1qfS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qfW
_c1qfX:
	movq $block_c1qfP_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qfP
_c1qfQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qfW:
	movl $GHC.Real.$fOrdRatio_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cmax_entry, .-GHC.Real.$fOrdRatio_$cmax_entry


==================== Asm code ====================
2018-03-16 15:56:05.278371716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmax_info
.type GHC.Real.$fOrdRatio_$cmax_info, @object
GHC.Real.$fOrdRatio_$cmax_info:
	.quad	GHC.Real.$fOrdRatio_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.279132844 UTC

.section .text
.align 8
_c1qfP:
_c1qfP:
	movq $block_c1qfV_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qfV
_c1qfZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qfP, .-_c1qfP


==================== Asm code ====================
2018-03-16 15:56:05.279790483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qfP_info:
	.quad	_c1qfP
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.280904497 UTC

.section .text
.align 8
_c1qfV:
_c1qfV:
	movq 16(%rbp),%rax
	movq $block_c1qg3_info,16(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1qfV, .-_c1qfV


==================== Asm code ====================
2018-03-16 15:56:05.281616321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qfV_info:
	.quad	_c1qfV
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.282340507 UTC

.section .text
.align 8
_c1qg3:
_c1qg3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qga
_c1qge:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1qga:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qg3, .-_c1qg3


==================== Asm code ====================
2018-03-16 15:56:05.282968837 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qg3_info:
	.quad	_c1qg3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.287228039 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmin_closure
.type GHC.Real.$fOrdRatio_$cmin_closure, @object
GHC.Real.$fOrdRatio_$cmin_closure:
	.quad	GHC.Real.$fOrdRatio_$cmin_info


==================== Asm code ====================
2018-03-16 15:56:05.288022639 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cmin_entry
.type GHC.Real.$fOrdRatio_$cmin_entry, @object
GHC.Real.$fOrdRatio_$cmin_entry:
_c1qgL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qgP
_c1qgQ:
	movq $block_c1qgI_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qgI
_c1qgJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qgP:
	movl $GHC.Real.$fOrdRatio_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cmin_entry, .-GHC.Real.$fOrdRatio_$cmin_entry


==================== Asm code ====================
2018-03-16 15:56:05.288715142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmin_info
.type GHC.Real.$fOrdRatio_$cmin_info, @object
GHC.Real.$fOrdRatio_$cmin_info:
	.quad	GHC.Real.$fOrdRatio_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.289778195 UTC

.section .text
.align 8
_c1qgI:
_c1qgI:
	movq $block_c1qgO_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qgO
_c1qgS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qgI, .-_c1qgI


==================== Asm code ====================
2018-03-16 15:56:05.290436791 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qgI_info:
	.quad	_c1qgI
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.291103307 UTC

.section .text
.align 8
_c1qgO:
_c1qgO:
	movq 16(%rbp),%rax
	movq $block_c1qgW_info,16(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1qgO, .-_c1qgO


==================== Asm code ====================
2018-03-16 15:56:05.291722964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qgO_info:
	.quad	_c1qgO
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.292402128 UTC

.section .text
.align 8
_c1qgW:
_c1qgW:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qh3
_c1qh7:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1qh3:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qgW, .-_c1qgW


==================== Asm code ====================
2018-03-16 15:56:05.293032919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qgW_info:
	.quad	_c1qgW
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.299309976 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$ccompare_closure
.type GHC.Real.$w$ccompare_closure, @object
GHC.Real.$w$ccompare_closure:
	.quad	GHC.Real.$w$ccompare_info


==================== Asm code ====================
2018-03-16 15:56:05.300176532 UTC

.section .text
.align 8
.globl GHC.Real.$w$ccompare_entry
.type GHC.Real.$w$ccompare_entry, @object
GHC.Real.$w$ccompare_entry:
_c1qhD:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qhL
_c1qhM:
	movq $block_c1qhB_info,-48(%rbp)
	movq %r14,%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qhL:
	movl $GHC.Real.$w$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$ccompare_entry, .-GHC.Real.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:05.30083583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$ccompare_info
.type GHC.Real.$w$ccompare_info, @object
GHC.Real.$w$ccompare_info:
	.quad	GHC.Real.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:05.301501301 UTC

.section .text
.align 8
_c1qhB:
_c1qhB:
	movq $block_c1qhG_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1qhB, .-_c1qhB


==================== Asm code ====================
2018-03-16 15:56:05.302066951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qhB_info:
	.quad	_c1qhB
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.302666548 UTC

.section .text
.align 8
_c1qhG:
_c1qhG:
	movq $block_c1qhK_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1qhG, .-_c1qhG


==================== Asm code ====================
2018-03-16 15:56:05.303226252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qhG_info:
	.quad	_c1qhG
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.303877951 UTC

.section .text
.align 8
_c1qhK:
_c1qhK:
	movq $block_c1qhS_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
	.size _c1qhK, .-_c1qhK


==================== Asm code ====================
2018-03-16 15:56:05.304498428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qhK_info:
	.quad	_c1qhK
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.305622542 UTC

.section .text
.align 8
_c1qhS:
_c1qhS:
	movq 32(%rbp),%rax
	movq 48(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qi0
_c1qif:
	movq 8(%rbp),%rbx
	movq $block_c1qid_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
_c1qi0:
	movq $block_c1qhX_info,48(%rbp)
	movq %rcx,%r9
	movq 40(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $48,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1qhS, .-_c1qhS


==================== Asm code ====================
2018-03-16 15:56:05.306297414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qhS_info:
	.quad	_c1qhS
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.307009054 UTC

.section .text
.align 8
_c1qhX:
_c1qhX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1qiH
_u1qiI:
	addq $8,%rbp
	jmp _c1qiw
_u1qiH:
	addq $8,%rbp
	jmp _c1qis
	.size _c1qhX, .-_c1qhX


==================== Asm code ====================
2018-03-16 15:56:05.308107951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qhX_info:
	.quad	_c1qhX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.308871275 UTC

.section .text
.align 8
_c1qid:
_c1qid:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qim
_c1qiA:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qim:
	movq 40(%rbp),%rax
	movq $block_c1qij_info,40(%rbp)
	movq %rax,%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1qid, .-_c1qid


==================== Asm code ====================
2018-03-16 15:56:05.309540323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qid_info:
	.quad	_c1qid
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.310180109 UTC

.section .text
.align 8
_c1qij:
_c1qij:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1qiF
_u1qiG:
	addq $8,%rbp
	jmp _c1qiw
_u1qiF:
	addq $8,%rbp
	jmp _c1qis
	.size _c1qij, .-_c1qij


==================== Asm code ====================
2018-03-16 15:56:05.3107213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qij_info:
	.quad	_c1qij
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.311353148 UTC

.section .text
.align 8
_c1qis:
_c1qis:
	movl $GHC.Types.GT_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qis, .-_c1qis


==================== Asm code ====================
2018-03-16 15:56:05.31198499 UTC

.section .text
.align 8
_c1qiw:
_c1qiw:
	movl $GHC.Types.LT_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qiw, .-_c1qiw


==================== Asm code ====================
2018-03-16 15:56:05.315686016 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$ccompare_closure
.type GHC.Real.$fOrdRatio_$ccompare_closure, @object
GHC.Real.$fOrdRatio_$ccompare_closure:
	.quad	GHC.Real.$fOrdRatio_$ccompare_info


==================== Asm code ====================
2018-03-16 15:56:05.316461047 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$ccompare_entry
.type GHC.Real.$fOrdRatio_$ccompare_entry, @object
GHC.Real.$fOrdRatio_$ccompare_entry:
_c1qjB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qjF
_c1qjG:
	movq $block_c1qjy_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qjy
_c1qjz:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qjF:
	movl $GHC.Real.$fOrdRatio_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$ccompare_entry, .-GHC.Real.$fOrdRatio_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:05.317066012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$ccompare_info
.type GHC.Real.$fOrdRatio_$ccompare_info, @object
GHC.Real.$fOrdRatio_$ccompare_info:
	.quad	GHC.Real.$fOrdRatio_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.317825767 UTC

.section .text
.align 8
_c1qjy:
_c1qjy:
	movq $block_c1qjE_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qjE
_c1qjI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qjy, .-_c1qjy


==================== Asm code ====================
2018-03-16 15:56:05.318434866 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qjy_info:
	.quad	_c1qjy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.319023744 UTC

.section .text
.align 8
_c1qjE:
_c1qjE:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1qjE, .-_c1qjE


==================== Asm code ====================
2018-03-16 15:56:05.31956656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qjE_info:
	.quad	_c1qjE
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.323654321 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>_closure
.type GHC.Real.$fOrdRatio_$c>_closure, @object
GHC.Real.$fOrdRatio_$c>_closure:
	.quad	GHC.Real.$fOrdRatio_$c>_info


==================== Asm code ====================
2018-03-16 15:56:05.324479211 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c>_entry
.type GHC.Real.$fOrdRatio_$c>_entry, @object
GHC.Real.$fOrdRatio_$c>_entry:
_c1qk9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qkd
_c1qke:
	movq $block_c1qk6_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qk6
_c1qk7:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qkd:
	movl $GHC.Real.$fOrdRatio_$c>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c>_entry, .-GHC.Real.$fOrdRatio_$c>_entry


==================== Asm code ====================
2018-03-16 15:56:05.325153513 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>_info
.type GHC.Real.$fOrdRatio_$c>_info, @object
GHC.Real.$fOrdRatio_$c>_info:
	.quad	GHC.Real.$fOrdRatio_$c>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.325876225 UTC

.section .text
.align 8
_c1qk6:
_c1qk6:
	movq $block_c1qkc_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qkc
_c1qkg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qk6, .-_c1qk6


==================== Asm code ====================
2018-03-16 15:56:05.326494303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qk6_info:
	.quad	_c1qk6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.327154264 UTC

.section .text
.align 8
_c1qkc:
_c1qkc:
	movq 24(%rbp),%rax
	movq $block_c1qkk_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1qkc, .-_c1qkc


==================== Asm code ====================
2018-03-16 15:56:05.327709917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qkc_info:
	.quad	_c1qkc
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.328439767 UTC

.section .text
.align 8
_c1qkk:
_c1qkk:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1qkv
_c1qkr:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qkv:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qkk, .-_c1qkk


==================== Asm code ====================
2018-03-16 15:56:05.329056958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qkk_info:
	.quad	_c1qkk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.333347138 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>=_closure
.type GHC.Real.$fOrdRatio_$c>=_closure, @object
GHC.Real.$fOrdRatio_$c>=_closure:
	.quad	GHC.Real.$fOrdRatio_$c>=_info


==================== Asm code ====================
2018-03-16 15:56:05.334126153 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c>=_entry
.type GHC.Real.$fOrdRatio_$c>=_entry, @object
GHC.Real.$fOrdRatio_$c>=_entry:
_c1ql0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ql4
_c1ql5:
	movq $block_c1qkX_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qkX
_c1qkY:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ql4:
	movl $GHC.Real.$fOrdRatio_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c>=_entry, .-GHC.Real.$fOrdRatio_$c>=_entry


==================== Asm code ====================
2018-03-16 15:56:05.335287218 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>=_info
.type GHC.Real.$fOrdRatio_$c>=_info, @object
GHC.Real.$fOrdRatio_$c>=_info:
	.quad	GHC.Real.$fOrdRatio_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.336032226 UTC

.section .text
.align 8
_c1qkX:
_c1qkX:
	movq $block_c1ql3_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ql3
_c1ql7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qkX, .-_c1qkX


==================== Asm code ====================
2018-03-16 15:56:05.336640931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qkX_info:
	.quad	_c1qkX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.337369992 UTC

.section .text
.align 8
_c1ql3:
_c1ql3:
	movq 24(%rbp),%rax
	movq $block_c1qlb_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1ql3, .-_c1ql3


==================== Asm code ====================
2018-03-16 15:56:05.337934903 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ql3_info:
	.quad	_c1ql3
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.33861771 UTC

.section .text
.align 8
_c1qlb:
_c1qlb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qlm
_c1qli:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qlm:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qlb, .-_c1qlb


==================== Asm code ====================
2018-03-16 15:56:05.339260438 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qlb_info:
	.quad	_c1qlb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.345729667 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_closure
.type GHC.Real.$fOrdRatio_closure, @object
GHC.Real.$fOrdRatio_closure:
	.quad	GHC.Real.$fOrdRatio_info


==================== Asm code ====================
2018-03-16 15:56:05.346424026 UTC

.section .text
.align 8
sat_s1joZ_entry:
_c1qlT:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$cmin_entry
	.size sat_s1joZ_entry, .-sat_s1joZ_entry


==================== Asm code ====================
2018-03-16 15:56:05.347000247 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joZ_info:
	.quad	sat_s1joZ_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.347653199 UTC

.section .text
.align 8
sat_s1joY_entry:
_c1qm1:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$cmax_entry
	.size sat_s1joY_entry, .-sat_s1joY_entry


==================== Asm code ====================
2018-03-16 15:56:05.34825768 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joY_info:
	.quad	sat_s1joY_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.348859932 UTC

.section .text
.align 8
sat_s1joX_entry:
_c1qm9:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c>=_entry
	.size sat_s1joX_entry, .-sat_s1joX_entry


==================== Asm code ====================
2018-03-16 15:56:05.349467344 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joX_info:
	.quad	sat_s1joX_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.35006948 UTC

.section .text
.align 8
sat_s1joW_entry:
_c1qmh:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c>_entry
	.size sat_s1joW_entry, .-sat_s1joW_entry


==================== Asm code ====================
2018-03-16 15:56:05.350612737 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joW_info:
	.quad	sat_s1joW_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.35126664 UTC

.section .text
.align 8
sat_s1joV_entry:
_c1qmp:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c<=_entry
	.size sat_s1joV_entry, .-sat_s1joV_entry


==================== Asm code ====================
2018-03-16 15:56:05.351789114 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joV_info:
	.quad	sat_s1joV_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.352441615 UTC

.section .text
.align 8
sat_s1joU_entry:
_c1qmx:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c<_entry
	.size sat_s1joU_entry, .-sat_s1joU_entry


==================== Asm code ====================
2018-03-16 15:56:05.352959206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joU_info:
	.quad	sat_s1joU_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.353601091 UTC

.section .text
.align 8
sat_s1joT_entry:
_c1qmF:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$ccompare_entry
	.size sat_s1joT_entry, .-sat_s1joT_entry


==================== Asm code ====================
2018-03-16 15:56:05.354190713 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joT_info:
	.quad	sat_s1joT_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.354911978 UTC

.section .text
.align 8
sat_s1joS_entry:
_c1qmM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qmN
_c1qmO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_$cp1Ord_entry
_c1qmN:
	jmp *-16(%r13)
	.size sat_s1joS_entry, .-sat_s1joS_entry


==================== Asm code ====================
2018-03-16 15:56:05.355536389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1joS_info:
	.quad	sat_s1joS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.356399428 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_entry
.type GHC.Real.$fOrdRatio_entry, @object
GHC.Real.$fOrdRatio_entry:
_c1qmQ:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _c1qmU
_c1qmT:
	movq $sat_s1joZ_info,-200(%r12)
	movq %r14,-192(%r12)
	movq $sat_s1joY_info,-184(%r12)
	movq %r14,-176(%r12)
	movq $sat_s1joX_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s1joW_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s1joV_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s1joU_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s1joT_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s1joS_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Classes.C:Ord_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qmU:
	movq $208,904(%r13)
	movl $GHC.Real.$fOrdRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_entry, .-GHC.Real.$fOrdRatio_entry


==================== Asm code ====================
2018-03-16 15:56:05.357210375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_info
.type GHC.Real.$fOrdRatio_info, @object
GHC.Real.$fOrdRatio_info:
	.quad	GHC.Real.$fOrdRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:05.368587937 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cnegate_closure
.type GHC.Real.$fNumRatio_$cnegate_closure, @object
GHC.Real.$fNumRatio_$cnegate_closure:
	.quad	GHC.Real.$fNumRatio_$cnegate_info


==================== Asm code ====================
2018-03-16 15:56:05.369962032 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cnegate_entry
.type GHC.Real.$fNumRatio_$cnegate_entry, @object
GHC.Real.$fNumRatio_$cnegate_entry:
_c1qnE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qnS
_c1qnT:
	movq $block_c1qnB_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qnB
_c1qnC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qnS:
	movl $GHC.Real.$fNumRatio_$cnegate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cnegate_entry, .-GHC.Real.$fNumRatio_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:56:05.370964538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cnegate_info
.type GHC.Real.$fNumRatio_$cnegate_info, @object
GHC.Real.$fNumRatio_$cnegate_info:
	.quad	GHC.Real.$fNumRatio_$cnegate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.37179321 UTC

.section .text
.align 8
_c1qnB:
_c1qnB:
	movq $block_c1qnH_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1qnB, .-_c1qnB


==================== Asm code ====================
2018-03-16 15:56:05.372681741 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qnB_info:
	.quad	_c1qnB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.373865482 UTC

.section .text
.align 8
_c1qnH:
_c1qnH:
	movq $block_c1qnL_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qnH, .-_c1qnH


==================== Asm code ====================
2018-03-16 15:56:05.374580276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qnH_info:
	.quad	_c1qnH
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.375466296 UTC

.section .text
.align 8
_c1qnL:
_c1qnL:
	movq $block_c1qnP_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.negate_entry
	.size _c1qnL, .-_c1qnL


==================== Asm code ====================
2018-03-16 15:56:05.376275589 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qnL_info:
	.quad	_c1qnL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.377225921 UTC

.section .text
.align 8
_c1qnP:
_c1qnP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qnZ
_c1qnY:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qnZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qnP, .-_c1qnP


==================== Asm code ====================
2018-03-16 15:56:05.378155029 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qnP_info:
	.quad	_c1qnP
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.384078705 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cabs_closure
.type GHC.Real.$fNumRatio_$cabs_closure, @object
GHC.Real.$fNumRatio_$cabs_closure:
	.quad	GHC.Real.$fNumRatio_$cabs_info


==================== Asm code ====================
2018-03-16 15:56:05.385200626 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cabs_entry
.type GHC.Real.$fNumRatio_$cabs_entry, @object
GHC.Real.$fNumRatio_$cabs_entry:
_c1qov:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qoJ
_c1qoK:
	movq $block_c1qos_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qos
_c1qot:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qoJ:
	movl $GHC.Real.$fNumRatio_$cabs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cabs_entry, .-GHC.Real.$fNumRatio_$cabs_entry


==================== Asm code ====================
2018-03-16 15:56:05.386229644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cabs_info
.type GHC.Real.$fNumRatio_$cabs_info, @object
GHC.Real.$fNumRatio_$cabs_info:
	.quad	GHC.Real.$fNumRatio_$cabs_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.387205576 UTC

.section .text
.align 8
_c1qos:
_c1qos:
	movq $block_c1qoy_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1qos, .-_c1qos


==================== Asm code ====================
2018-03-16 15:56:05.388057884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qos_info:
	.quad	_c1qos
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.388909519 UTC

.section .text
.align 8
_c1qoy:
_c1qoy:
	movq $block_c1qoC_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qoy, .-_c1qoy


==================== Asm code ====================
2018-03-16 15:56:05.389764134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qoy_info:
	.quad	_c1qoy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.390679185 UTC

.section .text
.align 8
_c1qoC:
_c1qoC:
	movq $block_c1qoG_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.abs_entry
	.size _c1qoC, .-_c1qoC


==================== Asm code ====================
2018-03-16 15:56:05.391557851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qoC_info:
	.quad	_c1qoC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.39260253 UTC

.section .text
.align 8
_c1qoG:
_c1qoG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qoQ
_c1qoP:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qoQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qoG, .-_c1qoG


==================== Asm code ====================
2018-03-16 15:56:05.393600422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qoG_info:
	.quad	_c1qoG
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.400108526 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$csignum_closure
.type GHC.Real.$w$csignum_closure, @object
GHC.Real.$w$csignum_closure:
	.quad	GHC.Real.$w$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.401189811 UTC

.section .text
.align 8
.globl GHC.Real.$w$csignum_entry
.type GHC.Real.$w$csignum_entry, @object
GHC.Real.$w$csignum_entry:
_c1qpl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qpv
_c1qpw:
	movq $block_c1qpj_info,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qpv:
	movl $GHC.Real.$w$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$csignum_entry, .-GHC.Real.$w$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:05.401904654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$csignum_info
.type GHC.Real.$w$csignum_info, @object
GHC.Real.$w$csignum_info:
	.quad	GHC.Real.$w$csignum_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.402511696 UTC

.section .text
.align 8
_c1qpj:
_c1qpj:
	movq $block_c1qpo_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qpj, .-_c1qpj


==================== Asm code ====================
2018-03-16 15:56:05.403089665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qpj_info:
	.quad	_c1qpj
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.403737853 UTC

.section .text
.align 8
_c1qpo:
_c1qpo:
	movq $block_c1qps_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.signum_entry
	.size _c1qpo, .-_c1qpo


==================== Asm code ====================
2018-03-16 15:56:05.404396028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qpo_info:
	.quad	_c1qpo
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.405637661 UTC

.section .text
.align 8
_c1qps:
_c1qps:
	movq $block_c1qpu_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1qps, .-_c1qps


==================== Asm code ====================
2018-03-16 15:56:05.406296433 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qps_info:
	.quad	_c1qps
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.406914666 UTC

.section .text
.align 8
_c1qpu:
_c1qpu:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qpu, .-_c1qpu


==================== Asm code ====================
2018-03-16 15:56:05.407494099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qpu_info:
	.quad	_c1qpu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.411335183 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$csignum_closure
.type GHC.Real.$fNumRatio_$csignum_closure, @object
GHC.Real.$fNumRatio_$csignum_closure:
	.quad	GHC.Real.$fNumRatio_$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.41217389 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$csignum_entry
.type GHC.Real.$fNumRatio_$csignum_entry, @object
GHC.Real.$fNumRatio_$csignum_entry:
_c1qq2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qq8
_c1qq9:
	movq $block_c1qpZ_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qpZ
_c1qq0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qq8:
	movl $GHC.Real.$fNumRatio_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$csignum_entry, .-GHC.Real.$fNumRatio_$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:05.412824691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$csignum_info
.type GHC.Real.$fNumRatio_$csignum_info, @object
GHC.Real.$fNumRatio_$csignum_info:
	.quad	GHC.Real.$fNumRatio_$csignum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+784


==================== Asm code ====================
2018-03-16 15:56:05.413524418 UTC

.section .text
.align 8
_c1qpZ:
_c1qpZ:
	movq 8(%rbp),%rax
	movq $block_c1qq5_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$csignum_entry
	.size _c1qpZ, .-_c1qpZ


==================== Asm code ====================
2018-03-16 15:56:05.414078903 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qpZ_info:
	.quad	_c1qpZ
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+784


==================== Asm code ====================
2018-03-16 15:56:05.414810452 UTC

.section .text
.align 8
_c1qq5:
_c1qq5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qqd
_c1qqc:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qqd:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qq5, .-_c1qq5


==================== Asm code ====================
2018-03-16 15:56:05.415415489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qq5_info:
	.quad	_c1qq5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.41926548 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfromInteger_closure
.type GHC.Real.$w$cfromInteger_closure, @object
GHC.Real.$w$cfromInteger_closure:
	.quad	GHC.Real.$w$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.420015386 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfromInteger_entry
.type GHC.Real.$w$cfromInteger_entry, @object
GHC.Real.$w$cfromInteger_entry:
_c1qqy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qqI
_c1qqJ:
	movq $block_c1qqw_info,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qqI:
	movl $GHC.Real.$w$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfromInteger_entry, .-GHC.Real.$w$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:05.420661149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfromInteger_info
.type GHC.Real.$w$cfromInteger_info, @object
GHC.Real.$w$cfromInteger_info:
	.quad	GHC.Real.$w$cfromInteger_entry
	.quad	0
	.quad	-9223372032559808498
	.quad	8589934607
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.421364397 UTC

.section .text
.align 8
_c1qqw:
_c1qqw:
	movq $block_c1qqB_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qqw, .-_c1qqw


==================== Asm code ====================
2018-03-16 15:56:05.421943519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qqw_info:
	.quad	_c1qqw
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.422599639 UTC

.section .text
.align 8
_c1qqB:
_c1qqB:
	movq $block_c1qqF_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1qqB, .-_c1qqB


==================== Asm code ====================
2018-03-16 15:56:05.423208429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qqB_info:
	.quad	_c1qqB
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.423842631 UTC

.section .text
.align 8
_c1qqF:
_c1qqF:
	movq $block_c1qqH_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1qqF, .-_c1qqF


==================== Asm code ====================
2018-03-16 15:56:05.424461936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qqF_info:
	.quad	_c1qqF
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+552


==================== Asm code ====================
2018-03-16 15:56:05.425076411 UTC

.section .text
.align 8
_c1qqH:
_c1qqH:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qqH, .-_c1qqH


==================== Asm code ====================
2018-03-16 15:56:05.425690382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qqH_info:
	.quad	_c1qqH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.428830898 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cfromInteger_closure
.type GHC.Real.$fNumRatio_$cfromInteger_closure, @object
GHC.Real.$fNumRatio_$cfromInteger_closure:
	.quad	GHC.Real.$fNumRatio_$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.429655202 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cfromInteger_entry
.type GHC.Real.$fNumRatio_$cfromInteger_entry, @object
GHC.Real.$fNumRatio_$cfromInteger_entry:
_c1qrf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qrg
_c1qrh:
	movq $block_c1qrc_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
_c1qrg:
	movl $GHC.Real.$fNumRatio_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cfromInteger_entry, .-GHC.Real.$fNumRatio_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:05.430284379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cfromInteger_info
.type GHC.Real.$fNumRatio_$cfromInteger_info, @object
GHC.Real.$fNumRatio_$cfromInteger_info:
	.quad	GHC.Real.$fNumRatio_$cfromInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+800


==================== Asm code ====================
2018-03-16 15:56:05.431043345 UTC

.section .text
.align 8
_c1qrc:
_c1qrc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qrk
_c1qrj:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qrk:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qrc, .-_c1qrc


==================== Asm code ====================
2018-03-16 15:56:05.431685322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qrc_info:
	.quad	_c1qrc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.434472432 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$s$ctoRational_closure
.type GHC.Real.$fRealRatio_$s$ctoRational_closure, @object
GHC.Real.$fRealRatio_$s$ctoRational_closure:
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_info


==================== Asm code ====================
2018-03-16 15:56:05.435145661 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_$s$ctoRational_entry
.type GHC.Real.$fRealRatio_$s$ctoRational_entry, @object
GHC.Real.$fRealRatio_$s$ctoRational_entry:
_c1qry:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealRatio_$s$ctoRational_entry, .-GHC.Real.$fRealRatio_$s$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:05.435739781 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$s$ctoRational_info
.type GHC.Real.$fRealRatio_$s$ctoRational_info, @object
GHC.Real.$fRealRatio_$s$ctoRational_info:
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:05.439568164 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$ctoRational_closure
.type GHC.Real.$fRealRatio_$ctoRational_closure, @object
GHC.Real.$fRealRatio_$ctoRational_closure:
	.quad	GHC.Real.$fRealRatio_$ctoRational_info


==================== Asm code ====================
2018-03-16 15:56:05.440363307 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_$ctoRational_entry
.type GHC.Real.$fRealRatio_$ctoRational_entry, @object
GHC.Real.$fRealRatio_$ctoRational_entry:
_c1qrO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qs0
_c1qs1:
	movq $block_c1qrL_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qrL
_c1qrM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qs0:
	movl $GHC.Real.$fRealRatio_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealRatio_$ctoRational_entry, .-GHC.Real.$fRealRatio_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:05.441066509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$ctoRational_info
.type GHC.Real.$fRealRatio_$ctoRational_info, @object
GHC.Real.$fRealRatio_$ctoRational_info:
	.quad	GHC.Real.$fRealRatio_$ctoRational_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.441794955 UTC

.section .text
.align 8
_c1qrL:
_c1qrL:
	movq $block_c1qrR_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1qrL, .-_c1qrL


==================== Asm code ====================
2018-03-16 15:56:05.442407134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qrL_info:
	.quad	_c1qrL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.443063101 UTC

.section .text
.align 8
_c1qrR:
_c1qrR:
	movq 8(%rbp),%rax
	movq $block_c1qrV_info,8(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1qrR, .-_c1qrR


==================== Asm code ====================
2018-03-16 15:56:05.443641147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qrR_info:
	.quad	_c1qrR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.444359234 UTC

.section .text
.align 8
_c1qrV:
_c1qrV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qs6
_c1qs5:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qs6:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qrV, .-_c1qrV


==================== Asm code ====================
2018-03-16 15:56:05.444963258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qrV_info:
	.quad	_c1qrV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.453442828 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$crecip_closure
.type GHC.Real.$w$crecip_closure, @object
GHC.Real.$w$crecip_closure:
	.quad	GHC.Real.$w$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.454224762 UTC

.section .text
.align 8
$dNum_s1jpR_entry:
_c1qsD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qsE
_c1qsF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qsE:
	jmp *-16(%r13)
	.size $dNum_s1jpR_entry, .-$dNum_s1jpR_entry


==================== Asm code ====================
2018-03-16 15:56:05.454797769 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jpR_info:
	.quad	$dNum_s1jpR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.455506366 UTC

.section .text
.align 8
sat_s1jpU_entry:
_c1qsO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qsP
_c1qsQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qsP:
	jmp *-16(%r13)
	.size sat_s1jpU_entry, .-sat_s1jpU_entry


==================== Asm code ====================
2018-03-16 15:56:05.456141898 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jpU_info:
	.quad	sat_s1jpU_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.456829025 UTC

.section .text
.align 8
sat_s1jpW_entry:
_c1qt3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qt4
_c1qt5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qt4:
	jmp *-16(%r13)
	.size sat_s1jpW_entry, .-sat_s1jpW_entry


==================== Asm code ====================
2018-03-16 15:56:05.457491221 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jpW_info:
	.quad	sat_s1jpW_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.458079695 UTC

.section .data.rel.ro
.align 8
.align 1
u1qtI_srtd:
	.quad	S1jKw_srt+296
	.quad	66
	.quad	281474976710657
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:05.458799729 UTC

.section .text
.align 8
.globl GHC.Real.$w$crecip_entry
.type GHC.Real.$w$crecip_entry, @object
GHC.Real.$w$crecip_entry:
_c1qt6:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qt7
_c1qt8:
	movq $block_c1qsv_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qt7:
	movl $GHC.Real.$w$crecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$crecip_entry, .-GHC.Real.$w$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:05.460088131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$crecip_info
.type GHC.Real.$w$crecip_info, @object
GHC.Real.$w$crecip_info:
	.quad	GHC.Real.$w$crecip_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1qtI_srtd


==================== Asm code ====================
2018-03-16 15:56:05.460683349 UTC

.section .data.rel.ro
.align 8
.align 1
u1qtJ_srtd:
	.quad	S1jKw_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:05.461484145 UTC

.section .text
.align 8
_c1qsv:
_c1qsv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qtb
_c1qta:
	movq $$dNum_s1jpR_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1qsG_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1qtb:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qsv, .-_c1qsv


==================== Asm code ====================
2018-03-16 15:56:05.462057868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qsv_info:
	.quad	_c1qsv
	.quad	2
	.quad	-4294967266
	.quad	u1qtJ_srtd


==================== Asm code ====================
2018-03-16 15:56:05.46254134 UTC

.section .data.rel.ro
.align 8
.align 1
u1qtK_srtd:
	.quad	S1jKw_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:05.463227569 UTC

.section .text
.align 8
_c1qsG:
_c1qsG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qte
_c1qtd:
	movq $sat_s1jpU_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1qsR_info,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.$p1Ord_entry
_c1qte:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qsG, .-_c1qsG


==================== Asm code ====================
2018-03-16 15:56:05.463821719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qsG_info:
	.quad	_c1qsG
	.quad	3
	.quad	-4294967266
	.quad	u1qtK_srtd


==================== Asm code ====================
2018-03-16 15:56:05.464352092 UTC

.section .data.rel.ro
.align 8
.align 1
u1qtL_srtd:
	.quad	S1jKw_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:05.465006043 UTC

.section .text
.align 8
_c1qsR:
_c1qsR:
	movq $block_c1qsV_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1qsR, .-_c1qsR


==================== Asm code ====================
2018-03-16 15:56:05.466062723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qsR_info:
	.quad	_c1qsR
	.quad	5
	.quad	-4294967266
	.quad	u1qtL_srtd


==================== Asm code ====================
2018-03-16 15:56:05.466575121 UTC

.section .data.rel.ro
.align 8
.align 1
u1qtM_srtd:
	.quad	S1jKw_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:05.467373946 UTC

.section .text
.align 8
_c1qsV:
_c1qsV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1qti
_c1qtF:
	movl $GHC.Real.ratioZeroDenominatorError_closure,%ebx
	addq $48,%rbp
	jmp stg_ap_0_fast
_c1qtl:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1qti:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qtl
_c1qtk:
	movq $sat_s1jpW_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1qtg_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
	.size _c1qsV, .-_c1qsV


==================== Asm code ====================
2018-03-16 15:56:05.468058293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qsV_info:
	.quad	_c1qsV
	.quad	133
	.quad	-4294967266
	.quad	u1qtM_srtd


==================== Asm code ====================
2018-03-16 15:56:05.468793267 UTC

.section .text
.align 8
_c1qtg:
_c1qtg:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1qtr
_c1qty:
	movq $block_c1qtu_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.negate_entry
_c1qtr:
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qtg, .-_c1qtg


==================== Asm code ====================
2018-03-16 15:56:05.469479496 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qtg_info:
	.quad	_c1qtg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.470082555 UTC

.section .text
.align 8
_c1qtu:
_c1qtu:
	movq 16(%rbp),%rax
	movq $block_c1qtw_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,(%rbp)
	movq %rax,8(%rbp)
	movq %rbx,24(%rbp)
	jmp GHC.Num.negate_entry
	.size _c1qtu, .-_c1qtu


==================== Asm code ====================
2018-03-16 15:56:05.470638965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qtu_info:
	.quad	_c1qtu
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.471225058 UTC

.section .text
.align 8
_c1qtw:
_c1qtw:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qtw, .-_c1qtw


==================== Asm code ====================
2018-03-16 15:56:05.471747175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qtw_info:
	.quad	_c1qtw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.47547427 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$crecip_closure
.type GHC.Real.$fFractionalRatio_$crecip_closure, @object
GHC.Real.$fFractionalRatio_$crecip_closure:
	.quad	GHC.Real.$fFractionalRatio_$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.476323456 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$crecip_entry
.type GHC.Real.$fFractionalRatio_$crecip_entry, @object
GHC.Real.$fFractionalRatio_$crecip_entry:
_c1quP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1quV
_c1quW:
	movq $block_c1quM_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1quM
_c1quN:
	movq (%rbx),%rax
	jmp *(%rax)
_c1quV:
	movl $GHC.Real.$fFractionalRatio_$crecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$crecip_entry, .-GHC.Real.$fFractionalRatio_$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:05.476950384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$crecip_info
.type GHC.Real.$fFractionalRatio_$crecip_info, @object
GHC.Real.$fFractionalRatio_$crecip_info:
	.quad	GHC.Real.$fFractionalRatio_$crecip_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+816


==================== Asm code ====================
2018-03-16 15:56:05.477640477 UTC

.section .text
.align 8
_c1quM:
_c1quM:
	movq 8(%rbp),%rax
	movq $block_c1quS_info,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$crecip_entry
	.size _c1quM, .-_c1quM


==================== Asm code ====================
2018-03-16 15:56:05.478261713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1quM_info:
	.quad	_c1quM
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+816


==================== Asm code ====================
2018-03-16 15:56:05.478929481 UTC

.section .text
.align 8
_c1quS:
_c1quS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qv0
_c1quZ:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qv0:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1quS, .-_c1quS


==================== Asm code ====================
2018-03-16 15:56:05.479560781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1quS_info:
	.quad	_c1quS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.488445093 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cproperFraction_closure
.type GHC.Real.$w$s$cproperFraction_closure, @object
GHC.Real.$w$s$cproperFraction_closure:
	.quad	GHC.Real.$w$s$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.489055317 UTC

.section .data.rel.ro
.align 8
.align 1
u1qwu_srtd:
	.quad	S1jKw_srt+424
	.quad	33
	.quad	4294967297


==================== Asm code ====================
2018-03-16 15:56:05.490094737 UTC

.section .text
.align 8
ds_s1jqc_entry:
_c1qvs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qvt
_c1qvu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1qvn_info,-40(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1qvt:
	jmp *-16(%r13)
	.size ds_s1jqc_entry, .-ds_s1jqc_entry


==================== Asm code ====================
2018-03-16 15:56:05.490703288 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jqc_info:
	.quad	ds_s1jqc_entry
	.quad	2
	.quad	-4294967278
	.quad	u1qwu_srtd


==================== Asm code ====================
2018-03-16 15:56:05.491416667 UTC

.section .text
.align 8
_c1qvn:
_c1qvn:
	cmpq $1,%rbx
	je _c1qvr
_c1qvq:
	movq 16(%rbp),%rax
	movq $block_c1qvx_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c1qvr:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1qvn, .-_c1qvn


==================== Asm code ====================
2018-03-16 15:56:05.49204666 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qvn_info:
	.quad	_c1qvn
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+832


==================== Asm code ====================
2018-03-16 15:56:05.49269054 UTC

.section .text
.align 8
_c1qvx:
_c1qvx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qvD
_c1qvC:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qvD:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qvx, .-_c1qvx


==================== Asm code ====================
2018-03-16 15:56:05.493369137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qvx_info:
	.quad	_c1qvx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.494101654 UTC

.section .text
.align 8
sat_s1jqs_entry:
_c1qvO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qvX
_c1qvY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1qvL_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c1qvL
_c1qvM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qvX:
	jmp *-16(%r13)
	.size sat_s1jqs_entry, .-sat_s1jqs_entry


==================== Asm code ====================
2018-03-16 15:56:05.494747123 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jqs_info:
	.quad	sat_s1jqs_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.4954024 UTC

.section .text
.align 8
_c1qvL:
_c1qvL:
	movq $block_c1qvR_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c1qvR
_c1qvS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qvL, .-_c1qvL


==================== Asm code ====================
2018-03-16 15:56:05.495940775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qvL_info:
	.quad	_c1qvL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.496613175 UTC

.section .text
.align 8
_c1qvR:
_c1qvR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qw2
_c1qw1:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qw2:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qvR, .-_c1qvR


==================== Asm code ====================
2018-03-16 15:56:05.497236354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qvR_info:
	.quad	_c1qvR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.498051459 UTC

.section .text
.align 8
sat_s1jqn_entry:
_c1qwc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qwg
_c1qwh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qwj
_c1qwi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1qwa_info,-32(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qwj:
	movq $24,904(%r13)
_c1qwg:
	jmp *-16(%r13)
	.size sat_s1jqn_entry, .-sat_s1jqn_entry


==================== Asm code ====================
2018-03-16 15:56:05.498741776 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jqn_info:
	.quad	sat_s1jqn_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.499312141 UTC

.section .text
.align 8
_c1qwa:
_c1qwa:
	movq $block_c1qwf_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qwa, .-_c1qwa


==================== Asm code ====================
2018-03-16 15:56:05.499868369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qwa_info:
	.quad	_c1qwa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.500434389 UTC

.section .text
.align 8
_c1qwf:
_c1qwf:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Num.fromInteger_entry
	.size _c1qwf, .-_c1qwf


==================== Asm code ====================
2018-03-16 15:56:05.500974091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qwf_info:
	.quad	_c1qwf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.502953894 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cproperFraction_entry
.type GHC.Real.$w$s$cproperFraction_entry, @object
GHC.Real.$w$s$cproperFraction_entry:
_c1qwp:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1qwt
_c1qws:
	movq $ds_s1jqc_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq $sat_s1jqs_info,-56(%r12)
	movq %rdi,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	movq $sat_s1jqn_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%r14
	leaq -24(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qwt:
	movq $96,904(%r13)
	movl $GHC.Real.$w$s$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cproperFraction_entry, .-GHC.Real.$w$s$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:05.503619894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cproperFraction_info
.type GHC.Real.$w$s$cproperFraction_info, @object
GHC.Real.$w$s$cproperFraction_info:
	.quad	GHC.Real.$w$s$cproperFraction_entry
	.quad	0
	.quad	6755403736023054
	.quad	12884901911
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.507352751 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_closure
.type GHC.Real.$fEnumRatio_$s$cproperFraction_closure, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.508206522 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_entry
.type GHC.Real.$fEnumRatio_$s$cproperFraction_entry, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_entry:
_c1qxj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qxp
_c1qxq:
	movq $block_c1qxg_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qxg
_c1qxh:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qxp:
	movl $GHC.Real.$fEnumRatio_$s$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cproperFraction_entry, .-GHC.Real.$fEnumRatio_$s$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:05.508844821 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_info
.type GHC.Real.$fEnumRatio_$s$cproperFraction_info, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_info:
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+840


==================== Asm code ====================
2018-03-16 15:56:05.509579599 UTC

.section .text
.align 8
_c1qxg:
_c1qxg:
	movq 8(%rbp),%rax
	movq $block_c1qxm_info,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
	.size _c1qxg, .-_c1qxg


==================== Asm code ====================
2018-03-16 15:56:05.51016025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qxg_info:
	.quad	_c1qxg
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+840


==================== Asm code ====================
2018-03-16 15:56:05.510835618 UTC

.section .text
.align 8
_c1qxm:
_c1qxm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qxu
_c1qxt:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qxu:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qxm, .-_c1qxm


==================== Asm code ====================
2018-03-16 15:56:05.511465144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qxm_info:
	.quad	_c1qxm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.519514623 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cproperFraction_closure
.type GHC.Real.$w$cproperFraction_closure, @object
GHC.Real.$w$cproperFraction_closure:
	.quad	GHC.Real.$w$cproperFraction_info


==================== Asm code ====================
2018-03-16 15:56:05.520387326 UTC

.section .text
.align 8
ds_s1jqF_entry:
_c1qxR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qxS
_c1qxT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quotRem_entry
_c1qxS:
	jmp *-16(%r13)
	.size ds_s1jqF_entry, .-ds_s1jqF_entry


==================== Asm code ====================
2018-03-16 15:56:05.521093507 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1jqF_info:
	.quad	ds_s1jqF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.521894707 UTC

.section .text
.align 8
sat_s1jqS_entry:
_c1qy1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qy7
_c1qy8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1qxY_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c1qxY
_c1qxZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qy7:
	jmp *-16(%r13)
	.size sat_s1jqS_entry, .-sat_s1jqS_entry


==================== Asm code ====================
2018-03-16 15:56:05.522540202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jqS_info:
	.quad	sat_s1jqS_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.523194972 UTC

.section .text
.align 8
_c1qxY:
_c1qxY:
	movq $block_c1qy4_info,(%rbp)
	movq 15(%rbx),%rbx
	jmp stg_ap_0_fast
	.size _c1qxY, .-_c1qxY


==================== Asm code ====================
2018-03-16 15:56:05.523743217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qxY_info:
	.quad	_c1qxY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.524439679 UTC

.section .text
.align 8
_c1qy4:
_c1qy4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qyc
_c1qyb:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qyc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qy4, .-_c1qy4


==================== Asm code ====================
2018-03-16 15:56:05.525123537 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qy4_info:
	.quad	_c1qy4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.525998072 UTC

.section .text
.align 8
sat_s1jqM_entry:
_c1qyn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qyo
_c1qyp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qyr
_c1qyq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toInteger_entry
_c1qyr:
	movq $24,904(%r13)
_c1qyo:
	jmp *-16(%r13)
	.size sat_s1jqM_entry, .-sat_s1jqM_entry


==================== Asm code ====================
2018-03-16 15:56:05.526661586 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jqM_info:
	.quad	sat_s1jqM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.527465698 UTC

.section .text
.align 8
sat_s1jqN_entry:
_c1qyu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qyy
_c1qyz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1qyB
_c1qyA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jqM_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1qys_info,-32(%rbp)
	movq %rcx,%r14
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qyB:
	movq $32,904(%r13)
_c1qyy:
	jmp *-16(%r13)
	.size sat_s1jqN_entry, .-sat_s1jqN_entry


==================== Asm code ====================
2018-03-16 15:56:05.528206388 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jqN_info:
	.quad	sat_s1jqN_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.528834183 UTC

.section .text
.align 8
_c1qys:
_c1qys:
	movq $block_c1qyx_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qys, .-_c1qys


==================== Asm code ====================
2018-03-16 15:56:05.529792393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qys_info:
	.quad	_c1qys
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.53037316 UTC

.section .text
.align 8
_c1qyx:
_c1qyx:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Num.fromInteger_entry
	.size _c1qyx, .-_c1qyx


==================== Asm code ====================
2018-03-16 15:56:05.530954392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qyx_info:
	.quad	_c1qyx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.531743302 UTC

.section .text
.align 8
.globl GHC.Real.$w$cproperFraction_entry
.type GHC.Real.$w$cproperFraction_entry, @object
GHC.Real.$w$cproperFraction_entry:
_c1qyH:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1qyL
_c1qyK:
	movq $ds_s1jqF_info,-104(%r12)
	movq %r14,-88(%r12)
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq $sat_s1jqS_info,-64(%r12)
	movq %r8,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jqN_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rax,(%r12)
	leaq -64(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qyL:
	movq $112,904(%r13)
	movl $GHC.Real.$w$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cproperFraction_entry, .-GHC.Real.$w$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:05.532471127 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cproperFraction_info
.type GHC.Real.$w$cproperFraction_info, @object
GHC.Real.$w$cproperFraction_info:
	.quad	GHC.Real.$w$cproperFraction_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:56:05.536290851 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cproperFraction_closure
.type GHC.Real.$fEnumRatio_$cproperFraction_closure, @object
GHC.Real.$fEnumRatio_$cproperFraction_closure:
	.quad	GHC.Real.$fEnumRatio_$cproperFraction_info


==================== Asm code ====================
2018-03-16 15:56:05.537145454 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cproperFraction_entry
.type GHC.Real.$fEnumRatio_$cproperFraction_entry, @object
GHC.Real.$fEnumRatio_$cproperFraction_entry:
_c1qzx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qzD
_c1qzE:
	movq $block_c1qzu_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qzu
_c1qzv:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qzD:
	movl $GHC.Real.$fEnumRatio_$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cproperFraction_entry, .-GHC.Real.$fEnumRatio_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:05.537887288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cproperFraction_info
.type GHC.Real.$fEnumRatio_$cproperFraction_info, @object
GHC.Real.$fEnumRatio_$cproperFraction_info:
	.quad	GHC.Real.$fEnumRatio_$cproperFraction_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:05.538569141 UTC

.section .text
.align 8
_c1qzu:
_c1qzu:
	movq 16(%rbp),%rax
	movq $block_c1qzA_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
	.size _c1qzu, .-_c1qzu


==================== Asm code ====================
2018-03-16 15:56:05.53919107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qzu_info:
	.quad	_c1qzu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.539932984 UTC

.section .text
.align 8
_c1qzA:
_c1qzA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qzI
_c1qzH:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qzI:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qzA, .-_c1qzA


==================== Asm code ====================
2018-03-16 15:56:05.540561831 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qzA_info:
	.quad	_c1qzA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.549103506 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wreduce_closure
.type GHC.Real.$wreduce_closure, @object
GHC.Real.$wreduce_closure:
	.quad	GHC.Real.$wreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.549993909 UTC

.section .text
.align 8
sat_s1jr9_entry:
_c1qAb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qAc
_c1qAd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1qA9_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qAc:
	jmp *-16(%r13)
	.size sat_s1jr9_entry, .-sat_s1jr9_entry


==================== Asm code ====================
2018-03-16 15:56:05.550609309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jr9_info:
	.quad	sat_s1jr9_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.55122578 UTC

.section .text
.align 8
_c1qA9:
_c1qA9:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Real.even1_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1qA9, .-_c1qA9


==================== Asm code ====================
2018-03-16 15:56:05.55182242 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qA9_info:
	.quad	_c1qA9
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+680


==================== Asm code ====================
2018-03-16 15:56:05.552534991 UTC

.section .text
.align 8
d_s1jrb_entry:
_c1qAx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qAy
_c1qAz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.gcd_entry
_c1qAy:
	jmp *-16(%r13)
	.size d_s1jrb_entry, .-d_s1jrb_entry


==================== Asm code ====================
2018-03-16 15:56:05.553221242 UTC

.section .data.rel.ro
.align 8
.align 1
d_s1jrb_info:
	.quad	d_s1jrb_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+856


==================== Asm code ====================
2018-03-16 15:56:05.553798179 UTC

.section .data.rel.ro
.align 8
.align 1
u1qAY_srtd:
	.quad	S1jKw_srt+296
	.quad	72
	.quad	281474976710657
	.quad	192


==================== Asm code ====================
2018-03-16 15:56:05.554542858 UTC

.section .text
.align 8
.globl GHC.Real.$wreduce_entry
.type GHC.Real.$wreduce_entry, @object
GHC.Real.$wreduce_entry:
_c1qAA:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qAB
_c1qAC:
	movq $block_c1qA1_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1qAB:
	movl $GHC.Real.$wreduce_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$wreduce_entry, .-GHC.Real.$wreduce_entry


==================== Asm code ====================
2018-03-16 15:56:05.555190288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wreduce_info
.type GHC.Real.$wreduce_info, @object
GHC.Real.$wreduce_info:
	.quad	GHC.Real.$wreduce_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1qAY_srtd


==================== Asm code ====================
2018-03-16 15:56:05.555754725 UTC

.section .data.rel.ro
.align 8
.align 1
u1qAZ_srtd:
	.quad	S1jKw_srt+296
	.quad	71
	.quad	281474976710657
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:05.556439026 UTC

.section .text
.align 8
_c1qA1:
_c1qA1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qAF
_c1qAE:
	movq $sat_s1jr9_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1qAh_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1qAF:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qA1, .-_c1qA1


==================== Asm code ====================
2018-03-16 15:56:05.55708528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qA1_info:
	.quad	_c1qA1
	.quad	3
	.quad	-4294967266
	.quad	u1qAZ_srtd


==================== Asm code ====================
2018-03-16 15:56:05.558451227 UTC

.section .data.rel.ro
.align 8
.align 1
u1qB0_srtd:
	.quad	S1jKw_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:05.559040903 UTC

.section .text
.align 8
_c1qAh:
_c1qAh:
	movq $block_c1qAl_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1qAh, .-_c1qAh


==================== Asm code ====================
2018-03-16 15:56:05.559644736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qAh_info:
	.quad	_c1qAh
	.quad	4
	.quad	-4294967266
	.quad	u1qB0_srtd


==================== Asm code ====================
2018-03-16 15:56:05.560165515 UTC

.section .data.rel.ro
.align 8
.align 1
u1qB1_srtd:
	.quad	S1jKw_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:05.560873594 UTC

.section .text
.align 8
_c1qAl:
_c1qAl:
	movq 8(%rbp),%rax
	movq $block_c1qAp_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1qAl, .-_c1qAl


==================== Asm code ====================
2018-03-16 15:56:05.56156556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qAl_info:
	.quad	_c1qAl
	.quad	4
	.quad	-4294967266
	.quad	u1qB1_srtd


==================== Asm code ====================
2018-03-16 15:56:05.562146642 UTC

.section .data.rel.ro
.align 8
.align 1
u1qB2_srtd:
	.quad	S1jKw_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:05.563011985 UTC

.section .text
.align 8
_c1qAp:
_c1qAp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1qAM
_c1qAW:
	movl $GHC.Real.ratioZeroDenominatorError_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
_c1qAP:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_c1qAM:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1qAP
_c1qAO:
	movq $d_s1jrb_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_c1qAI_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.quot_entry
	.size _c1qAp, .-_c1qAp


==================== Asm code ====================
2018-03-16 15:56:05.563744026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qAp_info:
	.quad	_c1qAp
	.quad	3
	.quad	-4294967266
	.quad	u1qB2_srtd


==================== Asm code ====================
2018-03-16 15:56:05.564430929 UTC

.section .text
.align 8
_c1qAI:
_c1qAI:
	movq 16(%rbp),%rax
	movq $block_c1qAK_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq 24(%rbp),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	movq %rbx,24(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.quot_entry
	.size _c1qAI, .-_c1qAI


==================== Asm code ====================
2018-03-16 15:56:05.565098925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qAI_info:
	.quad	_c1qAI
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.565952625 UTC

.section .text
.align 8
_c1qAK:
_c1qAK:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1qAK, .-_c1qAK


==================== Asm code ====================
2018-03-16 15:56:05.566501748 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qAK_info:
	.quad	_c1qAK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.569777647 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.reduce_closure
.type GHC.Real.reduce_closure, @object
GHC.Real.reduce_closure:
	.quad	GHC.Real.reduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.570552264 UTC

.section .text
.align 8
.globl GHC.Real.reduce_entry
.type GHC.Real.reduce_entry, @object
GHC.Real.reduce_entry:
_c1qBU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qBV
_c1qBW:
	movq $block_c1qBR_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wreduce_entry
_c1qBV:
	movl $GHC.Real.reduce_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.reduce_entry, .-GHC.Real.reduce_entry


==================== Asm code ====================
2018-03-16 15:56:05.571651201 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.reduce_info
.type GHC.Real.reduce_info, @object
GHC.Real.reduce_info:
	.quad	GHC.Real.reduce_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+864


==================== Asm code ====================
2018-03-16 15:56:05.572410422 UTC

.section .text
.align 8
_c1qBR:
_c1qBR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qBZ
_c1qBY:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qBZ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qBR, .-_c1qBR


==================== Asm code ====================
2018-03-16 15:56:05.573023162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qBR_info:
	.quad	_c1qBR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.576208288 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.%_$s%_closure
.type GHC.Real.%_$s%_closure, @object
GHC.Real.%_$s%_closure:
	.quad	GHC.Real.%_$s%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.576929723 UTC

.section .text
.align 8
.globl GHC.Real.%_$s%_entry
.type GHC.Real.%_$s%_entry, @object
GHC.Real.%_$s%_entry:
_c1qCg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qCh
_c1qCi:
	movq $block_c1qCd_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$s$cfromRational_entry
_c1qCh:
	movl $GHC.Real.%_$s%_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.%_$s%_entry, .-GHC.Real.%_$s%_entry


==================== Asm code ====================
2018-03-16 15:56:05.577627546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.%_$s%_info
.type GHC.Real.%_$s%_info, @object
GHC.Real.%_$s%_info:
	.quad	GHC.Real.%_$s%_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+880


==================== Asm code ====================
2018-03-16 15:56:05.578366868 UTC

.section .text
.align 8
_c1qCd:
_c1qCd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qCl
_c1qCk:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qCl:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qCd, .-_c1qCd


==================== Asm code ====================
2018-03-16 15:56:05.578997037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qCd_info:
	.quad	_c1qCd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.584845747 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w%_closure
.type GHC.Real.$w%_closure, @object
GHC.Real.$w%_closure:
	.quad	GHC.Real.$w%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.586088011 UTC

.section .text
.align 8
$dReal_s1jrt_entry:
_c1qCD:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1jrt_entry, .-$dReal_s1jrt_entry


==================== Asm code ====================
2018-03-16 15:56:05.586649333 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1jrt_info:
	.quad	$dReal_s1jrt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.587428346 UTC

.section .text
.align 8
$dNum_s1jru_entry:
_c1qCK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qCL
_c1qCM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qCL:
	jmp *-16(%r13)
	.size $dNum_s1jru_entry, .-$dNum_s1jru_entry


==================== Asm code ====================
2018-03-16 15:56:05.588080683 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jru_info:
	.quad	$dNum_s1jru_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.588794302 UTC

.section .text
.align 8
sat_s1jrx_entry:
_c1qCR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qCS
_c1qCT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.abs_entry
_c1qCS:
	jmp *-16(%r13)
	.size sat_s1jrx_entry, .-sat_s1jrx_entry


==================== Asm code ====================
2018-03-16 15:56:05.589514823 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jrx_info:
	.quad	sat_s1jrx_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.590241279 UTC

.section .text
.align 8
sat_s1jrv_entry:
_c1qD2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qD3
_c1qD4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.signum_entry
_c1qD3:
	jmp *-16(%r13)
	.size sat_s1jrv_entry, .-sat_s1jrv_entry


==================== Asm code ====================
2018-03-16 15:56:05.590850224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jrv_info:
	.quad	sat_s1jrv_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.591656307 UTC

.section .text
.align 8
sat_s1jrw_entry:
_c1qD5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qD6
_c1qD7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1qD9
_c1qD8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jrv_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rax,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qD9:
	movq $32,904(%r13)
_c1qD6:
	jmp *-16(%r13)
	.size sat_s1jrw_entry, .-sat_s1jrw_entry


==================== Asm code ====================
2018-03-16 15:56:05.592411768 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jrw_info:
	.quad	sat_s1jrw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.593205903 UTC

.section .text
.align 8
.globl GHC.Real.$w%_entry
.type GHC.Real.$w%_entry, @object
GHC.Real.$w%_entry:
_c1qDa:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c1qDe
_c1qDd:
	movq $$dReal_s1jrt_info,-112(%r12)
	movq %r14,-96(%r12)
	movq $$dNum_s1jru_info,-88(%r12)
	leaq -112(%r12),%rax
	movq %rax,-72(%r12)
	movq $sat_s1jrx_info,-64(%r12)
	movq %rdi,-48(%r12)
	leaq -88(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jrw_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rax,(%r12)
	leaq -64(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1qDe:
	movq $120,904(%r13)
	movl $GHC.Real.$w%_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w%_entry, .-GHC.Real.$w%_entry


==================== Asm code ====================
2018-03-16 15:56:05.593979011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w%_info
.type GHC.Real.$w%_info, @object
GHC.Real.$w%_info:
	.quad	GHC.Real.$w%_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S1jKw_srt+864


==================== Asm code ====================
2018-03-16 15:56:05.597413305 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.%_closure
.type GHC.Real.%_closure, @object
GHC.Real.%_closure:
	.quad	GHC.Real.%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.598694043 UTC

.section .text
.align 8
.globl GHC.Real.%_entry
.type GHC.Real.%_entry, @object
GHC.Real.%_entry:
_c1qDN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qDO
_c1qDP:
	movq $block_c1qDK_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w%_entry
_c1qDO:
	movl $GHC.Real.%_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.%_entry, .-GHC.Real.%_entry


==================== Asm code ====================
2018-03-16 15:56:05.599441947 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.%_info
.type GHC.Real.%_info, @object
GHC.Real.%_info:
	.quad	GHC.Real.%_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+896


==================== Asm code ====================
2018-03-16 15:56:05.600184113 UTC

.section .text
.align 8
_c1qDK:
_c1qDK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qDS
_c1qDR:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qDS:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qDK, .-_c1qDK


==================== Asm code ====================
2018-03-16 15:56:05.600795591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qDK_info:
	.quad	_c1qDK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.605895593 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c/_closure
.type GHC.Real.$w$c/_closure, @object
GHC.Real.$w$c/_closure:
	.quad	GHC.Real.$w$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.606613693 UTC

.section .text
.align 8
$dReal_s1jrJ_entry:
_c1qEa:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1jrJ_entry, .-$dReal_s1jrJ_entry


==================== Asm code ====================
2018-03-16 15:56:05.607176161 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1jrJ_info:
	.quad	$dReal_s1jrJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.607919912 UTC

.section .text
.align 8
$dNum_s1jrK_entry:
_c1qEh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qEi
_c1qEj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qEi:
	jmp *-16(%r13)
	.size $dNum_s1jrK_entry, .-$dNum_s1jrK_entry


==================== Asm code ====================
2018-03-16 15:56:05.608543706 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jrK_info:
	.quad	$dNum_s1jrK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.609304437 UTC

.section .text
.align 8
sat_s1jrM_entry:
_c1qEo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qEp
_c1qEq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qEp:
	jmp *-16(%r13)
	.size sat_s1jrM_entry, .-sat_s1jrM_entry


==================== Asm code ====================
2018-03-16 15:56:05.610005462 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jrM_info:
	.quad	sat_s1jrM_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.610743953 UTC

.section .text
.align 8
sat_s1jrL_entry:
_c1qEv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qEw
_c1qEx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qEw:
	jmp *-16(%r13)
	.size sat_s1jrL_entry, .-sat_s1jrL_entry


==================== Asm code ====================
2018-03-16 15:56:05.61142092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jrL_info:
	.quad	sat_s1jrL_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.612218735 UTC

.section .text
.align 8
.globl GHC.Real.$w$c/_entry
.type GHC.Real.$w$c/_entry, @object
GHC.Real.$w$c/_entry:
_c1qEy:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _c1qEC
_c1qEB:
	movq $$dReal_s1jrJ_info,-120(%r12)
	movq %r14,-104(%r12)
	movq $$dNum_s1jrK_info,-96(%r12)
	leaq -120(%r12),%rax
	movq %rax,-80(%r12)
	movq $sat_s1jrM_info,-72(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jrL_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -72(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$w%_entry
_c1qEC:
	movq $128,904(%r13)
	movl $GHC.Real.$w$c/_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c/_entry, .-GHC.Real.$w$c/_entry


==================== Asm code ====================
2018-03-16 15:56:05.612938493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c/_info
.type GHC.Real.$w$c/_info, @object
GHC.Real.$w$c/_info:
	.quad	GHC.Real.$w$c/_entry
	.quad	0
	.quad	21474836494
	.quad	21474836505
	.quad	S1jKw_srt+896


==================== Asm code ====================
2018-03-16 15:56:05.617452369 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$c/_closure
.type GHC.Real.$fFractionalRatio_$c/_closure, @object
GHC.Real.$fFractionalRatio_$c/_closure:
	.quad	GHC.Real.$fFractionalRatio_$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.61836184 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$c/_entry
.type GHC.Real.$fFractionalRatio_$c/_entry, @object
GHC.Real.$fFractionalRatio_$c/_entry:
_c1qF8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qFj
_c1qFk:
	movq $block_c1qF5_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qF5
_c1qF6:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qFj:
	movl $GHC.Real.$fFractionalRatio_$c/_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$c/_entry, .-GHC.Real.$fFractionalRatio_$c/_entry


==================== Asm code ====================
2018-03-16 15:56:05.619018636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$c/_info
.type GHC.Real.$fFractionalRatio_$c/_info, @object
GHC.Real.$fFractionalRatio_$c/_info:
	.quad	GHC.Real.$fFractionalRatio_$c/_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+912


==================== Asm code ====================
2018-03-16 15:56:05.619730871 UTC

.section .text
.align 8
_c1qF5:
_c1qF5:
	movq $block_c1qFb_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qFb
_c1qFc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qF5, .-_c1qF5


==================== Asm code ====================
2018-03-16 15:56:05.620355856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qF5_info:
	.quad	_c1qF5
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+912


==================== Asm code ====================
2018-03-16 15:56:05.621078974 UTC

.section .text
.align 8
_c1qFb:
_c1qFb:
	movq 24(%rbp),%rax
	movq $block_c1qFg_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c/_entry
	.size _c1qFb, .-_c1qFb


==================== Asm code ====================
2018-03-16 15:56:05.621940872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qFb_info:
	.quad	_c1qFb
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+912


==================== Asm code ====================
2018-03-16 15:56:05.622702356 UTC

.section .text
.align 8
_c1qFg:
_c1qFg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qFp
_c1qFo:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qFp:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qFg, .-_c1qFg


==================== Asm code ====================
2018-03-16 15:56:05.623319703 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qFg_info:
	.quad	_c1qFg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.628910678 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfromRational_closure
.type GHC.Real.$w$cfromRational_closure, @object
GHC.Real.$w$cfromRational_closure:
	.quad	GHC.Real.$w$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.629708131 UTC

.section .text
.align 8
$dReal_s1js2_entry:
_c1qFR:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1js2_entry, .-$dReal_s1js2_entry


==================== Asm code ====================
2018-03-16 15:56:05.630292622 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1js2_info:
	.quad	$dReal_s1js2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.631020617 UTC

.section .text
.align 8
$dNum_s1js3_entry:
_c1qFY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qFZ
_c1qG0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qFZ:
	jmp *-16(%r13)
	.size $dNum_s1js3_entry, .-$dNum_s1js3_entry


==================== Asm code ====================
2018-03-16 15:56:05.63163577 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1js3_info:
	.quad	$dNum_s1js3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.632339109 UTC

.section .text
.align 8
sat_s1js5_entry:
_c1qG5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qG6
_c1qG7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qG6:
	jmp *-16(%r13)
	.size sat_s1js5_entry, .-sat_s1js5_entry


==================== Asm code ====================
2018-03-16 15:56:05.632989987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1js5_info:
	.quad	sat_s1js5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.633787843 UTC

.section .text
.align 8
sat_s1js4_entry:
_c1qGc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qGd
_c1qGe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qGd:
	jmp *-16(%r13)
	.size sat_s1js4_entry, .-sat_s1js4_entry


==================== Asm code ====================
2018-03-16 15:56:05.634409797 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1js4_info:
	.quad	sat_s1js4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:05.635200321 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfromRational_entry
.type GHC.Real.$w$cfromRational_entry, @object
GHC.Real.$w$cfromRational_entry:
_c1qGf:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1qGj
_c1qGi:
	movq $$dReal_s1js2_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $$dNum_s1js3_info,-80(%r12)
	leaq -104(%r12),%rax
	movq %rax,-64(%r12)
	movq $sat_s1js5_info,-56(%r12)
	movq %rdi,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	movq $sat_s1js4_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%rdi
	leaq -24(%r12),%rsi
	jmp GHC.Real.$w%_entry
_c1qGj:
	movq $112,904(%r13)
	movl $GHC.Real.$w$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfromRational_entry, .-GHC.Real.$w$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:05.635922353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfromRational_info
.type GHC.Real.$w$cfromRational_info, @object
GHC.Real.$w$cfromRational_info:
	.quad	GHC.Real.$w$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S1jKw_srt+896


==================== Asm code ====================
2018-03-16 15:56:05.639701632 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$cfromRational_closure
.type GHC.Real.$fFractionalRatio_$cfromRational_closure, @object
GHC.Real.$fFractionalRatio_$cfromRational_closure:
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.64049088 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$cfromRational_entry
.type GHC.Real.$fFractionalRatio_$cfromRational_entry, @object
GHC.Real.$fFractionalRatio_$cfromRational_entry:
_c1qGN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qGT
_c1qGU:
	movq $block_c1qGK_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qGK
_c1qGL:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qGT:
	movl $GHC.Real.$fFractionalRatio_$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$cfromRational_entry, .-GHC.Real.$fFractionalRatio_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:05.641127134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$cfromRational_info
.type GHC.Real.$fFractionalRatio_$cfromRational_info, @object
GHC.Real.$fFractionalRatio_$cfromRational_info:
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+928


==================== Asm code ====================
2018-03-16 15:56:05.641911544 UTC

.section .text
.align 8
_c1qGK:
_c1qGK:
	movq 8(%rbp),%rax
	movq $block_c1qGQ_info,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$cfromRational_entry
	.size _c1qGK, .-_c1qGK


==================== Asm code ====================
2018-03-16 15:56:05.642534755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qGK_info:
	.quad	_c1qGK
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+928


==================== Asm code ====================
2018-03-16 15:56:05.643245019 UTC

.section .text
.align 8
_c1qGQ:
_c1qGQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qGY
_c1qGX:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qGY:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qGQ, .-_c1qGQ


==================== Asm code ====================
2018-03-16 15:56:05.643906065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qGQ_info:
	.quad	_c1qGQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.651034567 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c+_closure
.type GHC.Real.$w$c+_closure, @object
GHC.Real.$w$c+_closure:
	.quad	GHC.Real.$w$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.651803524 UTC

.section .text
.align 8
$dReal_s1jsj_entry:
_c1qHl:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1jsj_entry, .-$dReal_s1jsj_entry


==================== Asm code ====================
2018-03-16 15:56:05.652968171 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1jsj_info:
	.quad	$dReal_s1jsj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.653862296 UTC

.section .text
.align 8
$dNum_s1jsk_entry:
_c1qHs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qHt
_c1qHu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qHt:
	jmp *-16(%r13)
	.size $dNum_s1jsk_entry, .-$dNum_s1jsk_entry


==================== Asm code ====================
2018-03-16 15:56:05.654470199 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jsk_info:
	.quad	$dNum_s1jsk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.655197958 UTC

.section .text
.align 8
sat_s1jso_entry:
_c1qHz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qHA
_c1qHB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qHA:
	jmp *-16(%r13)
	.size sat_s1jso_entry, .-sat_s1jso_entry


==================== Asm code ====================
2018-03-16 15:56:05.655840293 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jso_info:
	.quad	sat_s1jso_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.656570158 UTC

.section .text
.align 8
sat_s1jsm_entry:
_c1qHK:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qHL
_c1qHM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qHL:
	jmp *-16(%r13)
	.size sat_s1jsm_entry, .-sat_s1jsm_entry


==================== Asm code ====================
2018-03-16 15:56:05.65719385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsm_info:
	.quad	sat_s1jsm_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.658282776 UTC

.section .text
.align 8
sat_s1jsl_entry:
_c1qHR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qHS
_c1qHT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qHS:
	jmp *-16(%r13)
	.size sat_s1jsl_entry, .-sat_s1jsl_entry


==================== Asm code ====================
2018-03-16 15:56:05.658948027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsl_info:
	.quad	sat_s1jsl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.659823365 UTC

.section .text
.align 8
sat_s1jsn_entry:
_c1qHU:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qHV
_c1qHW:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1qHY
_c1qHX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_s1jsm_info,-72(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_s1jsl_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.+_entry
_c1qHY:
	movq $80,904(%r13)
_c1qHV:
	jmp *-16(%r13)
	.size sat_s1jsn_entry, .-sat_s1jsn_entry


==================== Asm code ====================
2018-03-16 15:56:05.660551295 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsn_info:
	.quad	sat_s1jsn_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.661380788 UTC

.section .text
.align 8
.globl GHC.Real.$w$c+_entry
.type GHC.Real.$w$c+_entry, @object
GHC.Real.$w$c+_entry:
_c1qHZ:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _c1qI3
_c1qI2:
	movq $$dReal_s1jsj_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $$dNum_s1jsk_info,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-96(%r12)
	movq $sat_s1jso_info,-88(%r12)
	movq %rdi,-72(%r12)
	movq %r9,-64(%r12)
	leaq -112(%r12),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jsn_info,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rdi
	leaq -48(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1qI3:
	movq $144,904(%r13)
	movl $GHC.Real.$w$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c+_entry, .-GHC.Real.$w$c+_entry


==================== Asm code ====================
2018-03-16 15:56:05.662130005 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c+_info
.type GHC.Real.$w$c+_info, @object
GHC.Real.$w$c+_info:
	.quad	GHC.Real.$w$c+_entry
	.quad	0
	.quad	4402341478414
	.quad	21474836505
	.quad	S1jKw_srt+864


==================== Asm code ====================
2018-03-16 15:56:05.666608835 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c+_closure
.type GHC.Real.$fNumRatio_$c+_closure, @object
GHC.Real.$fNumRatio_$c+_closure:
	.quad	GHC.Real.$fNumRatio_$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.667500577 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c+_entry
.type GHC.Real.$fNumRatio_$c+_entry, @object
GHC.Real.$fNumRatio_$c+_entry:
_c1qIL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qIW
_c1qIX:
	movq $block_c1qII_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qII
_c1qIJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qIW:
	movl $GHC.Real.$fNumRatio_$c+_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c+_entry, .-GHC.Real.$fNumRatio_$c+_entry


==================== Asm code ====================
2018-03-16 15:56:05.66818638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c+_info
.type GHC.Real.$fNumRatio_$c+_info, @object
GHC.Real.$fNumRatio_$c+_info:
	.quad	GHC.Real.$fNumRatio_$c+_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+944


==================== Asm code ====================
2018-03-16 15:56:05.66891305 UTC

.section .text
.align 8
_c1qII:
_c1qII:
	movq $block_c1qIO_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qIO
_c1qIP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qII, .-_c1qII


==================== Asm code ====================
2018-03-16 15:56:05.670259065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qII_info:
	.quad	_c1qII
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+944


==================== Asm code ====================
2018-03-16 15:56:05.670948346 UTC

.section .text
.align 8
_c1qIO:
_c1qIO:
	movq 24(%rbp),%rax
	movq $block_c1qIT_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c+_entry
	.size _c1qIO, .-_c1qIO


==================== Asm code ====================
2018-03-16 15:56:05.671537762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qIO_info:
	.quad	_c1qIO
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+944


==================== Asm code ====================
2018-03-16 15:56:05.672272935 UTC

.section .text
.align 8
_c1qIT:
_c1qIT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qJ2
_c1qJ1:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qJ2:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qIT, .-_c1qIT


==================== Asm code ====================
2018-03-16 15:56:05.672885582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qIT_info:
	.quad	_c1qIT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.679753132 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c-_closure
.type GHC.Real.$w$c-_closure, @object
GHC.Real.$w$c-_closure:
	.quad	GHC.Real.$w$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.680972042 UTC

.section .text
.align 8
$dReal_s1jsG_entry:
_c1qJu:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1jsG_entry, .-$dReal_s1jsG_entry


==================== Asm code ====================
2018-03-16 15:56:05.681630655 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1jsG_info:
	.quad	$dReal_s1jsG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.682361875 UTC

.section .text
.align 8
$dNum_s1jsH_entry:
_c1qJB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qJC
_c1qJD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qJC:
	jmp *-16(%r13)
	.size $dNum_s1jsH_entry, .-$dNum_s1jsH_entry


==================== Asm code ====================
2018-03-16 15:56:05.682923438 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jsH_info:
	.quad	$dNum_s1jsH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.683620917 UTC

.section .text
.align 8
sat_s1jsL_entry:
_c1qJI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qJJ
_c1qJK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qJJ:
	jmp *-16(%r13)
	.size sat_s1jsL_entry, .-sat_s1jsL_entry


==================== Asm code ====================
2018-03-16 15:56:05.68425176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsL_info:
	.quad	sat_s1jsL_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.684891461 UTC

.section .text
.align 8
sat_s1jsJ_entry:
_c1qJT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qJU
_c1qJV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qJU:
	jmp *-16(%r13)
	.size sat_s1jsJ_entry, .-sat_s1jsJ_entry


==================== Asm code ====================
2018-03-16 15:56:05.686333979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsJ_info:
	.quad	sat_s1jsJ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.68707063 UTC

.section .text
.align 8
sat_s1jsI_entry:
_c1qK0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qK1
_c1qK2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qK1:
	jmp *-16(%r13)
	.size sat_s1jsI_entry, .-sat_s1jsI_entry


==================== Asm code ====================
2018-03-16 15:56:05.68767217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsI_info:
	.quad	sat_s1jsI_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.68847895 UTC

.section .text
.align 8
sat_s1jsK_entry:
_c1qK3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qK4
_c1qK5:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1qK7
_c1qK6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_s1jsJ_info,-72(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	movq $sat_s1jsI_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.-_entry
_c1qK7:
	movq $80,904(%r13)
_c1qK4:
	jmp *-16(%r13)
	.size sat_s1jsK_entry, .-sat_s1jsK_entry


==================== Asm code ====================
2018-03-16 15:56:05.689201931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jsK_info:
	.quad	sat_s1jsK_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.690056977 UTC

.section .text
.align 8
.globl GHC.Real.$w$c-_entry
.type GHC.Real.$w$c-_entry, @object
GHC.Real.$w$c-_entry:
_c1qK8:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _c1qKc
_c1qKb:
	movq $$dReal_s1jsG_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $$dNum_s1jsH_info,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-96(%r12)
	movq $sat_s1jsL_info,-88(%r12)
	movq %rdi,-72(%r12)
	movq %r9,-64(%r12)
	leaq -112(%r12),%rax
	movq %rax,-56(%r12)
	movq $sat_s1jsK_info,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rdi
	leaq -48(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1qKc:
	movq $144,904(%r13)
	movl $GHC.Real.$w$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c-_entry, .-GHC.Real.$w$c-_entry


==================== Asm code ====================
2018-03-16 15:56:05.690783368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c-_info
.type GHC.Real.$w$c-_info, @object
GHC.Real.$w$c-_info:
	.quad	GHC.Real.$w$c-_entry
	.quad	0
	.quad	17596481011726
	.quad	21474836505
	.quad	S1jKw_srt+864


==================== Asm code ====================
2018-03-16 15:56:05.695192983 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c-_closure
.type GHC.Real.$fNumRatio_$c-_closure, @object
GHC.Real.$fNumRatio_$c-_closure:
	.quad	GHC.Real.$fNumRatio_$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.696090798 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c-_entry
.type GHC.Real.$fNumRatio_$c-_entry, @object
GHC.Real.$fNumRatio_$c-_entry:
_c1qKU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qL5
_c1qL6:
	movq $block_c1qKR_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qKR
_c1qKS:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qL5:
	movl $GHC.Real.$fNumRatio_$c-_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c-_entry, .-GHC.Real.$fNumRatio_$c-_entry


==================== Asm code ====================
2018-03-16 15:56:05.69676343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c-_info
.type GHC.Real.$fNumRatio_$c-_info, @object
GHC.Real.$fNumRatio_$c-_info:
	.quad	GHC.Real.$fNumRatio_$c-_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+960


==================== Asm code ====================
2018-03-16 15:56:05.697543438 UTC

.section .text
.align 8
_c1qKR:
_c1qKR:
	movq $block_c1qKX_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qKX
_c1qKY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qKR, .-_c1qKR


==================== Asm code ====================
2018-03-16 15:56:05.698173166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qKR_info:
	.quad	_c1qKR
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+960


==================== Asm code ====================
2018-03-16 15:56:05.698836445 UTC

.section .text
.align 8
_c1qKX:
_c1qKX:
	movq 24(%rbp),%rax
	movq $block_c1qL2_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1qKX, .-_c1qKX


==================== Asm code ====================
2018-03-16 15:56:05.699450113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qKX_info:
	.quad	_c1qKX
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+960


==================== Asm code ====================
2018-03-16 15:56:05.700198977 UTC

.section .text
.align 8
_c1qL2:
_c1qL2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qLb
_c1qLa:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qLb:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qL2, .-_c1qL2


==================== Asm code ====================
2018-03-16 15:56:05.700826012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qL2_info:
	.quad	_c1qL2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.706145173 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c*_closure
.type GHC.Real.$w$c*_closure, @object
GHC.Real.$w$c*_closure:
	.quad	GHC.Real.$w$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.706831794 UTC

.section .text
.align 8
$dReal_s1jt3_entry:
_c1qLD:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1jt3_entry, .-$dReal_s1jt3_entry


==================== Asm code ====================
2018-03-16 15:56:05.70790181 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1jt3_info:
	.quad	$dReal_s1jt3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.708706629 UTC

.section .text
.align 8
$dNum_s1jt4_entry:
_c1qLK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qLL
_c1qLM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1qLL:
	jmp *-16(%r13)
	.size $dNum_s1jt4_entry, .-$dNum_s1jt4_entry


==================== Asm code ====================
2018-03-16 15:56:05.709399328 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jt4_info:
	.quad	$dNum_s1jt4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.710106397 UTC

.section .text
.align 8
sat_s1jt6_entry:
_c1qLR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qLS
_c1qLT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qLS:
	jmp *-16(%r13)
	.size sat_s1jt6_entry, .-sat_s1jt6_entry


==================== Asm code ====================
2018-03-16 15:56:05.710703058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jt6_info:
	.quad	sat_s1jt6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.7113846 UTC

.section .text
.align 8
sat_s1jt5_entry:
_c1qLY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qLZ
_c1qM0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1qLZ:
	jmp *-16(%r13)
	.size sat_s1jt5_entry, .-sat_s1jt5_entry


==================== Asm code ====================
2018-03-16 15:56:05.711980149 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jt5_info:
	.quad	sat_s1jt5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:05.712721345 UTC

.section .text
.align 8
.globl GHC.Real.$w$c*_entry
.type GHC.Real.$w$c*_entry, @object
GHC.Real.$w$c*_entry:
_c1qM1:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _c1qM5
_c1qM4:
	movq $$dReal_s1jt3_info,-120(%r12)
	movq %r14,-104(%r12)
	movq $$dNum_s1jt4_info,-96(%r12)
	leaq -120(%r12),%rax
	movq %rax,-80(%r12)
	movq $sat_s1jt6_info,-72(%r12)
	movq %rdi,-56(%r12)
	movq %r9,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_s1jt5_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rax,(%r12)
	leaq -72(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1qM5:
	movq $128,904(%r13)
	movl $GHC.Real.$w$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$c*_entry, .-GHC.Real.$w$c*_entry


==================== Asm code ====================
2018-03-16 15:56:05.713732979 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c*_info
.type GHC.Real.$w$c*_info, @object
GHC.Real.$w$c*_info:
	.quad	GHC.Real.$w$c*_entry
	.quad	0
	.quad	70373039144974
	.quad	21474836505
	.quad	S1jKw_srt+864


==================== Asm code ====================
2018-03-16 15:56:05.718037165 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c*_closure
.type GHC.Real.$fNumRatio_$c*_closure, @object
GHC.Real.$fNumRatio_$c*_closure:
	.quad	GHC.Real.$fNumRatio_$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.718869084 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c*_entry
.type GHC.Real.$fNumRatio_$c*_entry, @object
GHC.Real.$fNumRatio_$c*_entry:
_c1qMB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qMM
_c1qMN:
	movq $block_c1qMy_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qMy
_c1qMz:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qMM:
	movl $GHC.Real.$fNumRatio_$c*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c*_entry, .-GHC.Real.$fNumRatio_$c*_entry


==================== Asm code ====================
2018-03-16 15:56:05.719518023 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c*_info
.type GHC.Real.$fNumRatio_$c*_info, @object
GHC.Real.$fNumRatio_$c*_info:
	.quad	GHC.Real.$fNumRatio_$c*_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+976


==================== Asm code ====================
2018-03-16 15:56:05.720238134 UTC

.section .text
.align 8
_c1qMy:
_c1qMy:
	movq $block_c1qME_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qME
_c1qMF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qMy, .-_c1qMy


==================== Asm code ====================
2018-03-16 15:56:05.720884545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qMy_info:
	.quad	_c1qMy
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+976


==================== Asm code ====================
2018-03-16 15:56:05.72157704 UTC

.section .text
.align 8
_c1qME:
_c1qME:
	movq 24(%rbp),%rax
	movq $block_c1qMJ_info,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c*_entry
	.size _c1qME, .-_c1qME


==================== Asm code ====================
2018-03-16 15:56:05.722141918 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qME_info:
	.quad	_c1qME
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+976


==================== Asm code ====================
2018-03-16 15:56:05.722844546 UTC

.section .text
.align 8
_c1qMJ:
_c1qMJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qMS
_c1qMR:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qMS:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qMJ, .-_c1qMJ


==================== Asm code ====================
2018-03-16 15:56:05.72350933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qMJ_info:
	.quad	_c1qMJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.730140948 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_closure
.type GHC.Real.$fNumRatio_closure, @object
GHC.Real.$fNumRatio_closure:
	.quad	GHC.Real.$fNumRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.73083099 UTC

.section .text
.align 8
sat_s1jtq_entry:
_c1qNl:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cfromInteger_entry
	.size sat_s1jtq_entry, .-sat_s1jtq_entry


==================== Asm code ====================
2018-03-16 15:56:05.731422948 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtq_info:
	.quad	sat_s1jtq_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+808


==================== Asm code ====================
2018-03-16 15:56:05.732022343 UTC

.section .text
.align 8
sat_s1jtp_entry:
_c1qNt:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$csignum_entry
	.size sat_s1jtp_entry, .-sat_s1jtp_entry


==================== Asm code ====================
2018-03-16 15:56:05.732659558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtp_info:
	.quad	sat_s1jtp_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+792


==================== Asm code ====================
2018-03-16 15:56:05.733349701 UTC

.section .text
.align 8
sat_s1jto_entry:
_c1qNB:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cabs_entry
	.size sat_s1jto_entry, .-sat_s1jto_entry


==================== Asm code ====================
2018-03-16 15:56:05.733943929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jto_info:
	.quad	sat_s1jto_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:05.73456731 UTC

.section .text
.align 8
sat_s1jtn_entry:
_c1qNJ:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cnegate_entry
	.size sat_s1jtn_entry, .-sat_s1jtn_entry


==================== Asm code ====================
2018-03-16 15:56:05.735685004 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtn_info:
	.quad	sat_s1jtn_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:05.736352751 UTC

.section .text
.align 8
sat_s1jtm_entry:
_c1qNR:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c*_entry
	.size sat_s1jtm_entry, .-sat_s1jtm_entry


==================== Asm code ====================
2018-03-16 15:56:05.737003926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtm_info:
	.quad	sat_s1jtm_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+984


==================== Asm code ====================
2018-03-16 15:56:05.737921621 UTC

.section .text
.align 8
sat_s1jtl_entry:
_c1qNZ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c-_entry
	.size sat_s1jtl_entry, .-sat_s1jtl_entry


==================== Asm code ====================
2018-03-16 15:56:05.73848998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtl_info:
	.quad	sat_s1jtl_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+968


==================== Asm code ====================
2018-03-16 15:56:05.739083273 UTC

.section .text
.align 8
sat_s1jtk_entry:
_c1qO7:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c+_entry
	.size sat_s1jtk_entry, .-sat_s1jtk_entry


==================== Asm code ====================
2018-03-16 15:56:05.739648848 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jtk_info:
	.quad	sat_s1jtk_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+952


==================== Asm code ====================
2018-03-16 15:56:05.740499137 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_entry
.type GHC.Real.$fNumRatio_entry, @object
GHC.Real.$fNumRatio_entry:
_c1qOb:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c1qOf
_c1qOe:
	movq $sat_s1jtq_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s1jtp_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s1jto_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s1jtn_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s1jtm_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s1jtl_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s1jtk_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $GHC.Num.C:Num_con_info,-56(%r12)
	leaq -70(%r12),%rax
	movq %rax,-48(%r12)
	leaq -86(%r12),%rax
	movq %rax,-40(%r12)
	leaq -102(%r12),%rax
	movq %rax,-32(%r12)
	leaq -119(%r12),%rax
	movq %rax,-24(%r12)
	leaq -135(%r12),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -167(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qOf:
	movq $176,904(%r13)
	movl $GHC.Real.$fNumRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_entry, .-GHC.Real.$fNumRatio_entry


==================== Asm code ====================
2018-03-16 15:56:05.741371879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_info
.type GHC.Real.$fNumRatio_info, @object
GHC.Real.$fNumRatio_info:
	.quad	GHC.Real.$fNumRatio_entry
	.quad	0
	.quad	238690801725472782
	.quad	4294967301
	.quad	S1jKw_srt+792


==================== Asm code ====================
2018-03-16 15:56:05.743128315 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio3_closure
.type GHC.Real.$fEnumRatio3_closure, @object
GHC.Real.$fEnumRatio3_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.746772448 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$csucc_closure
.type GHC.Real.$fEnumRatio_$s$csucc_closure, @object
GHC.Real.$fEnumRatio_$s$csucc_closure:
	.quad	GHC.Real.$fEnumRatio_$s$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.747602414 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$csucc_entry
.type GHC.Real.$fEnumRatio_$s$csucc_entry, @object
GHC.Real.$fEnumRatio_$s$csucc_entry:
_c1qOV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qP1
_c1qP2:
	movq $block_c1qOS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qOS
_c1qOT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qP1:
	movl $GHC.Real.$fEnumRatio_$s$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$csucc_entry, .-GHC.Real.$fEnumRatio_$s$csucc_entry


==================== Asm code ====================
2018-03-16 15:56:05.748272744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$csucc_info
.type GHC.Real.$fEnumRatio_$s$csucc_info, @object
GHC.Real.$fEnumRatio_$s$csucc_info:
	.quad	GHC.Real.$fEnumRatio_$s$csucc_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S1jKw_srt+1000


==================== Asm code ====================
2018-03-16 15:56:05.748943185 UTC

.section .text
.align 8
_c1qOS:
_c1qOS:
	movq $block_c1qOY_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.$fEnumRatio1_closure,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$c+_entry
	.size _c1qOS, .-_c1qOS


==================== Asm code ====================
2018-03-16 15:56:05.749622601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qOS_info:
	.quad	_c1qOS
	.quad	0
	.quad	12884901918
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.750301829 UTC

.section .text
.align 8
_c1qOY:
_c1qOY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qP6
_c1qP5:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qP6:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qOY, .-_c1qOY


==================== Asm code ====================
2018-03-16 15:56:05.750928392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qOY_info:
	.quad	_c1qOY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.755269994 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$csucc_closure
.type GHC.Real.$fEnumRatio_$csucc_closure, @object
GHC.Real.$fEnumRatio_$csucc_closure:
	.quad	GHC.Real.$fEnumRatio_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.756133561 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$csucc_entry
.type GHC.Real.$fEnumRatio_$csucc_entry, @object
GHC.Real.$fEnumRatio_$csucc_entry:
_c1qPs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qPA
_c1qPB:
	movq $block_c1qPp_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qPp
_c1qPq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qPA:
	movl $GHC.Real.$fEnumRatio_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$csucc_entry, .-GHC.Real.$fEnumRatio_$csucc_entry


==================== Asm code ====================
2018-03-16 15:56:05.75679322 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$csucc_info
.type GHC.Real.$fEnumRatio_$csucc_info, @object
GHC.Real.$fEnumRatio_$csucc_info:
	.quad	GHC.Real.$fEnumRatio_$csucc_entry
	.quad	0
	.quad	1442277784960368654
	.quad	8589934607
	.quad	S1jKw_srt+800


==================== Asm code ====================
2018-03-16 15:56:05.757532302 UTC

.section .text
.align 8
_c1qPp:
_c1qPp:
	movq $block_c1qPv_info,-16(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1qPp, .-_c1qPp


==================== Asm code ====================
2018-03-16 15:56:05.758129969 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qPp_info:
	.quad	_c1qPp
	.quad	1
	.quad	289356280353521694
	.quad	S1jKw_srt+800


==================== Asm code ====================
2018-03-16 15:56:05.75881981 UTC

.section .text
.align 8
_c1qPv:
_c1qPv:
	movq 24(%rbp),%rax
	movq $block_c1qPx_info,24(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c+_entry
	.size _c1qPv, .-_c1qPv


==================== Asm code ====================
2018-03-16 15:56:05.759440442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qPv_info:
	.quad	_c1qPv
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+944


==================== Asm code ====================
2018-03-16 15:56:05.760197315 UTC

.section .text
.align 8
_c1qPx:
_c1qPx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qPG
_c1qPF:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qPG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qPx, .-_c1qPx


==================== Asm code ====================
2018-03-16 15:56:05.760790103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qPx_info:
	.quad	_c1qPx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.765622976 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cpred_closure
.type GHC.Real.$fEnumRatio_$s$cpred_closure, @object
GHC.Real.$fEnumRatio_$s$cpred_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.766171872 UTC

.section .data.rel.ro
.align 8
.align 1
u1qQk_srtd:
	.quad	S1jKw_srt+464
	.quad	72
	.quad	1
	.quad	144


==================== Asm code ====================
2018-03-16 15:56:05.76699419 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cpred_entry
.type GHC.Real.$fEnumRatio_$s$cpred_entry, @object
GHC.Real.$fEnumRatio_$s$cpred_entry:
_c1qQ7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qQd
_c1qQe:
	movq $block_c1qQ4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qQ4
_c1qQ5:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qQd:
	movl $GHC.Real.$fEnumRatio_$s$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cpred_entry, .-GHC.Real.$fEnumRatio_$s$cpred_entry


==================== Asm code ====================
2018-03-16 15:56:05.767645198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cpred_info
.type GHC.Real.$fEnumRatio_$s$cpred_info, @object
GHC.Real.$fEnumRatio_$s$cpred_info:
	.quad	GHC.Real.$fEnumRatio_$s$cpred_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1qQk_srtd


==================== Asm code ====================
2018-03-16 15:56:05.768224601 UTC

.section .data.rel.ro
.align 8
.align 1
u1qQl_srtd:
	.quad	S1jKw_srt+464
	.quad	69
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.768880585 UTC

.section .text
.align 8
_c1qQ4:
_c1qQ4:
	movq $block_c1qQa_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.$fEnumRatio1_closure,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$c-_entry
	.size _c1qQ4, .-_c1qQ4


==================== Asm code ====================
2018-03-16 15:56:05.769504229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qQ4_info:
	.quad	_c1qQ4
	.quad	0
	.quad	-4294967266
	.quad	u1qQl_srtd


==================== Asm code ====================
2018-03-16 15:56:05.770216499 UTC

.section .text
.align 8
_c1qQa:
_c1qQa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qQi
_c1qQh:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qQi:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qQa, .-_c1qQa


==================== Asm code ====================
2018-03-16 15:56:05.770855328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qQa_info:
	.quad	_c1qQa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.774950077 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cpred_closure
.type GHC.Real.$fEnumRatio_$cpred_closure, @object
GHC.Real.$fEnumRatio_$cpred_closure:
	.quad	GHC.Real.$fEnumRatio_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.775804546 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cpred_entry
.type GHC.Real.$fEnumRatio_$cpred_entry, @object
GHC.Real.$fEnumRatio_$cpred_entry:
_c1qQI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qQQ
_c1qQR:
	movq $block_c1qQF_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qQF
_c1qQG:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qQQ:
	movl $GHC.Real.$fEnumRatio_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cpred_entry, .-GHC.Real.$fEnumRatio_$cpred_entry


==================== Asm code ====================
2018-03-16 15:56:05.776506773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cpred_info
.type GHC.Real.$fEnumRatio_$cpred_info, @object
GHC.Real.$fEnumRatio_$cpred_info:
	.quad	GHC.Real.$fEnumRatio_$cpred_entry
	.quad	0
	.quad	4904419998501437454
	.quad	8589934607
	.quad	S1jKw_srt+800


==================== Asm code ====================
2018-03-16 15:56:05.777227214 UTC

.section .text
.align 8
_c1qQF:
_c1qQF:
	movq $block_c1qQL_info,-16(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1qQF, .-_c1qQF


==================== Asm code ====================
2018-03-16 15:56:05.778204621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qQF_info:
	.quad	_c1qQF
	.quad	1
	.quad	292733980074049566
	.quad	S1jKw_srt+800


==================== Asm code ====================
2018-03-16 15:56:05.77884681 UTC

.section .text
.align 8
_c1qQL:
_c1qQL:
	movq 24(%rbp),%rax
	movq $block_c1qQN_info,24(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1qQL, .-_c1qQL


==================== Asm code ====================
2018-03-16 15:56:05.779459713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qQL_info:
	.quad	_c1qQL
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+960


==================== Asm code ====================
2018-03-16 15:56:05.780206157 UTC

.section .text
.align 8
_c1qQN:
_c1qQN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qQW
_c1qQV:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qQW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qQN, .-_c1qQN


==================== Asm code ====================
2018-03-16 15:56:05.780878958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qQN_info:
	.quad	_c1qQN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.785578448 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_closure
.type GHC.Real.$fFractionalRatio_closure, @object
GHC.Real.$fFractionalRatio_closure:
	.quad	GHC.Real.$fFractionalRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.786250954 UTC

.section .text
.align 8
sat_s1ju5_entry:
_c1qRp:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$cfromRational_entry
	.size sat_s1ju5_entry, .-sat_s1ju5_entry


==================== Asm code ====================
2018-03-16 15:56:05.786845699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ju5_info:
	.quad	sat_s1ju5_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+936


==================== Asm code ====================
2018-03-16 15:56:05.787497702 UTC

.section .text
.align 8
sat_s1ju4_entry:
_c1qRx:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$crecip_entry
	.size sat_s1ju4_entry, .-sat_s1ju4_entry


==================== Asm code ====================
2018-03-16 15:56:05.788107374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ju4_info:
	.quad	sat_s1ju4_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+824


==================== Asm code ====================
2018-03-16 15:56:05.78879447 UTC

.section .text
.align 8
sat_s1ju3_entry:
_c1qRF:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$c/_entry
	.size sat_s1ju3_entry, .-sat_s1ju3_entry


==================== Asm code ====================
2018-03-16 15:56:05.789956287 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ju3_info:
	.quad	sat_s1ju3_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+920


==================== Asm code ====================
2018-03-16 15:56:05.790758399 UTC

.section .text
.align 8
sat_s1ju2_entry:
_c1qRM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qRN
_c1qRO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fNumRatio_entry
_c1qRN:
	jmp *-16(%r13)
	.size sat_s1ju2_entry, .-sat_s1ju2_entry


==================== Asm code ====================
2018-03-16 15:56:05.791415162 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ju2_info:
	.quad	sat_s1ju2_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+992


==================== Asm code ====================
2018-03-16 15:56:05.792174443 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_entry
.type GHC.Real.$fFractionalRatio_entry, @object
GHC.Real.$fFractionalRatio_entry:
_c1qRQ:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1qRU
_c1qRT:
	movq $sat_s1ju5_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s1ju4_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s1ju3_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s1ju2_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Real.C:Fractional_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -70(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -103(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qRU:
	movq $112,904(%r13)
	movl $GHC.Real.$fFractionalRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_entry, .-GHC.Real.$fFractionalRatio_entry


==================== Asm code ====================
2018-03-16 15:56:05.792905119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_info
.type GHC.Real.$fFractionalRatio_info, @object
GHC.Real.$fFractionalRatio_info:
	.quad	GHC.Real.$fFractionalRatio_entry
	.quad	0
	.quad	1162016669086777358
	.quad	4294967301
	.quad	S1jKw_srt+824


==================== Asm code ====================
2018-03-16 15:56:05.79723162 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFrom_closure
.type GHC.Real.$fEnumRatio_$cenumFrom_closure, @object
GHC.Real.$fEnumRatio_$cenumFrom_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.798043203 UTC

.section .text
.align 8
w_s1ju7_entry:
_c1qSp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qSq
_c1qSr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1qSq:
	jmp *-16(%r13)
	.size w_s1ju7_entry, .-w_s1ju7_entry


==================== Asm code ====================
2018-03-16 15:56:05.798667911 UTC

.section .data.rel.ro
.align 8
.align 1
w_s1ju7_info:
	.quad	w_s1ju7_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.799379139 UTC

.section .text
.align 8
sat_s1juc_entry:
_c1qSA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qSB
_c1qSC:
	movq $block_c1qSx_info,-8(%rbp)
	movq %r14,%rsi
	movq 7(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1qSB:
	jmp *-8(%r13)
	.size sat_s1juc_entry, .-sat_s1juc_entry


==================== Asm code ====================
2018-03-16 15:56:05.800001508 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1juc_info:
	.quad	sat_s1juc_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+1056


==================== Asm code ====================
2018-03-16 15:56:05.800629054 UTC

.section .text
.align 8
_c1qSx:
_c1qSx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qSF
_c1qSE:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qSF:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qSx, .-_c1qSx


==================== Asm code ====================
2018-03-16 15:56:05.801289387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qSx_info:
	.quad	_c1qSx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.802028834 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFrom_entry
.type GHC.Real.$fEnumRatio_$cenumFrom_entry, @object
GHC.Real.$fEnumRatio_$cenumFrom_entry:
_c1qSG:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1qSK
_c1qSJ:
	movq $w_s1ju7_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s1juc_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qSK:
	movq $40,904(%r13)
	movl $GHC.Real.$fEnumRatio_$cenumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFrom_entry, .-GHC.Real.$fEnumRatio_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:05.80273606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFrom_info
.type GHC.Real.$fEnumRatio_$cenumFrom_info, @object
GHC.Real.$fEnumRatio_$cenumFrom_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.807087298 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThen_closure
.type GHC.Real.$fEnumRatio_$cenumFromThen_closure, @object
GHC.Real.$fEnumRatio_$cenumFromThen_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.807828346 UTC

.section .text
.align 8
w_s1jue_entry:
_c1qTb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qTc
_c1qTd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1qTc:
	jmp *-16(%r13)
	.size w_s1jue_entry, .-w_s1jue_entry


==================== Asm code ====================
2018-03-16 15:56:05.80840598 UTC

.section .data.rel.ro
.align 8
.align 1
w_s1jue_info:
	.quad	w_s1jue_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.809124706 UTC

.section .text
.align 8
sat_s1juk_entry:
_c1qTm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qTn
_c1qTo:
	movq $block_c1qTj_info,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1qTn:
	jmp *-8(%r13)
	.size sat_s1juk_entry, .-sat_s1juk_entry


==================== Asm code ====================
2018-03-16 15:56:05.810031763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1juk_info:
	.quad	sat_s1juk_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:05.810774842 UTC

.section .text
.align 8
_c1qTj:
_c1qTj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qTr
_c1qTq:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1qTr:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1qTj, .-_c1qTj


==================== Asm code ====================
2018-03-16 15:56:05.811413292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qTj_info:
	.quad	_c1qTj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:05.812138131 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromThen_entry
.type GHC.Real.$fEnumRatio_$cenumFromThen_entry, @object
GHC.Real.$fEnumRatio_$cenumFromThen_entry:
_c1qTs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1qTw
_c1qTv:
	movq $w_s1jue_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s1juk_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qTw:
	movq $40,904(%r13)
	movl $GHC.Real.$fEnumRatio_$cenumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromThen_entry, .-GHC.Real.$fEnumRatio_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:05.812800772 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThen_info
.type GHC.Real.$fEnumRatio_$cenumFromThen_info, @object
GHC.Real.$fEnumRatio_$cenumFromThen_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.817297508 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromTo_closure
.type GHC.Real.$fEnumRatio_$cenumFromTo_closure, @object
GHC.Real.$fEnumRatio_$cenumFromTo_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.818115781 UTC

.section .text
.align 8
sat_s1jun_entry:
_c1qTX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qTY
_c1qTZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1qTY:
	jmp *-16(%r13)
	.size sat_s1jun_entry, .-sat_s1jun_entry


==================== Asm code ====================
2018-03-16 15:56:05.818759977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jun_info:
	.quad	sat_s1jun_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.81942086 UTC

.section .text
.align 8
sat_s1jum_entry:
_c1qU4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qU5
_c1qU6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1qU5:
	jmp *-16(%r13)
	.size sat_s1jum_entry, .-sat_s1jum_entry


==================== Asm code ====================
2018-03-16 15:56:05.820010924 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jum_info:
	.quad	sat_s1jum_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.820553254 UTC

.section .data.rel.ro
.align 8
.align 1
u1qUc_srtd:
	.quad	S1jKw_srt+624
	.quad	58
	.quad	153122387330596865


==================== Asm code ====================
2018-03-16 15:56:05.82134974 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromTo_entry
.type GHC.Real.$fEnumRatio_$cenumFromTo_entry, @object
GHC.Real.$fEnumRatio_$cenumFromTo_entry:
_c1qU7:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1qUb
_c1qUa:
	movq $sat_s1jun_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s1jum_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movl $GHC.Real.numericEnumFromTo_closure+4,%ebx
	jmp stg_ap_pp_fast
_c1qUb:
	movq $48,904(%r13)
	movl $GHC.Real.$fEnumRatio_$cenumFromTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromTo_entry, .-GHC.Real.$fEnumRatio_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:05.822013824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromTo_info
.type GHC.Real.$fEnumRatio_$cenumFromTo_info, @object
GHC.Real.$fEnumRatio_$cenumFromTo_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1qUc_srtd


==================== Asm code ====================
2018-03-16 15:56:05.825849814 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_closure, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.826662518 UTC

.section .text
.align 8
sat_s1juq_entry:
_c1qUy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qUz
_c1qUA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1qUz:
	jmp *-16(%r13)
	.size sat_s1juq_entry, .-sat_s1juq_entry


==================== Asm code ====================
2018-03-16 15:56:05.827249403 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1juq_info:
	.quad	sat_s1juq_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:05.827981755 UTC

.section .text
.align 8
sat_s1jup_entry:
_c1qUF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qUG
_c1qUH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1qUG:
	jmp *-16(%r13)
	.size sat_s1jup_entry, .-sat_s1jup_entry


==================== Asm code ====================
2018-03-16 15:56:05.828603037 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jup_info:
	.quad	sat_s1jup_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.829118983 UTC

.section .data.rel.ro
.align 8
.align 1
u1qUN_srtd:
	.quad	S1jKw_srt+672
	.quad	53
	.quad	4644337115725825


==================== Asm code ====================
2018-03-16 15:56:05.829883117 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_entry, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_entry:
_c1qUI:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1qUM
_c1qUL:
	movq $sat_s1juq_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s1jup_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movl $GHC.Real.numericEnumFromThenTo_closure+5,%ebx
	jmp stg_ap_pp_fast
_c1qUM:
	movq $48,904(%r13)
	movl $GHC.Real.$fEnumRatio_$cenumFromThenTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromThenTo_entry, .-GHC.Real.$fEnumRatio_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:05.830563156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_info
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_info, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1qUN_srtd


==================== Asm code ====================
2018-03-16 15:56:05.8322804 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$fRealRatio_closure
.type GHC.Real.$fRealFracRatio_$s$fRealRatio_closure, @object
GHC.Real.$fRealFracRatio_$s$fRealRatio_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Real.$fFractionalRatio_$s$fNumRatio_closure+1
	.quad	GHC.Real.$fOrdRatio_$s$fOrdRatio_closure+1
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.83636375 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_closure
.type GHC.Real.$fRealRatio_closure, @object
GHC.Real.$fRealRatio_closure:
	.quad	GHC.Real.$fRealRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.836963368 UTC

.section .text
.align 8
sat_s1juu_entry:
_c1qVb:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fRealRatio_$ctoRational_entry
	.size sat_s1juu_entry, .-sat_s1juu_entry


==================== Asm code ====================
2018-03-16 15:56:05.837607544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1juu_info:
	.quad	sat_s1juu_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:05.838268026 UTC

.section .text
.align 8
sat_s1jut_entry:
_c1qVi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qVj
_c1qVk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1qVj:
	jmp *-16(%r13)
	.size sat_s1jut_entry, .-sat_s1jut_entry


==================== Asm code ====================
2018-03-16 15:56:05.83893103 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jut_info:
	.quad	sat_s1jut_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:05.839613352 UTC

.section .text
.align 8
sat_s1jus_entry:
_c1qVp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qVq
_c1qVr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fNumRatio_entry
_c1qVq:
	jmp *-16(%r13)
	.size sat_s1jus_entry, .-sat_s1jus_entry


==================== Asm code ====================
2018-03-16 15:56:05.840222596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jus_info:
	.quad	sat_s1jus_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+992


==================== Asm code ====================
2018-03-16 15:56:05.840986872 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_entry
.type GHC.Real.$fRealRatio_entry, @object
GHC.Real.$fRealRatio_entry:
_c1qVt:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1qVx
_c1qVw:
	movq $sat_s1juu_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s1jut_info,-72(%r12)
	movq %r14,-56(%r12)
	movq $sat_s1jus_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Real.C:Real_con_info,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1qVx:
	movq $96,904(%r13)
	movl $GHC.Real.$fRealRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealRatio_entry, .-GHC.Real.$fRealRatio_entry


==================== Asm code ====================
2018-03-16 15:56:05.841757857 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_info
.type GHC.Real.$fRealRatio_info, @object
GHC.Real.$fRealRatio_info:
	.quad	GHC.Real.$fRealRatio_entry
	.quad	0
	.quad	35188667056142
	.quad	4294967301
	.quad	S1jKw_srt+992


==================== Asm code ====================
2018-03-16 15:56:05.848145351 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cceiling_closure
.type GHC.Real.$w$s$cceiling_closure, @object
GHC.Real.$w$s$cceiling_closure:
	.quad	GHC.Real.$w$s$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.849017785 UTC

.section .text
.align 8
sat_s1juH_entry:
_c1qWj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qWk
_c1qWl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qWk:
	jmp *-16(%r13)
	.size sat_s1juH_entry, .-sat_s1juH_entry


==================== Asm code ====================
2018-03-16 15:56:05.849943952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1juH_info:
	.quad	sat_s1juH_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.850457553 UTC

.section .data.rel.ro
.align 8
.align 1
u1qWD_srtd:
	.quad	S1jKw_srt+24
	.quad	136
	.quad	1
	.quad	576461027181592576
	.quad	128


==================== Asm code ====================
2018-03-16 15:56:05.851254269 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cceiling_entry
.type GHC.Real.$w$s$cceiling_entry, @object
GHC.Real.$w$s$cceiling_entry:
_c1qWm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qWn
_c1qWo:
	movq $block_c1qVV_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1qWn:
	movl $GHC.Real.$w$s$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cceiling_entry, .-GHC.Real.$w$s$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:05.851899436 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cceiling_info
.type GHC.Real.$w$s$cceiling_info, @object
GHC.Real.$w$s$cceiling_info:
	.quad	GHC.Real.$w$s$cceiling_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1qWD_srtd


==================== Asm code ====================
2018-03-16 15:56:05.852472177 UTC

.section .data.rel.ro
.align 8
.align 1
u1qWE_srtd:
	.quad	S1jKw_srt+24
	.quad	124
	.quad	1
	.quad	576460752303685632


==================== Asm code ====================
2018-03-16 15:56:05.853145361 UTC

.section .text
.align 8
_c1qVV:
_c1qVV:
	movq $block_c1qVX_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qVX
_c1qVY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qVV, .-_c1qVV


==================== Asm code ====================
2018-03-16 15:56:05.853802343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qVV_info:
	.quad	_c1qVV
	.quad	1
	.quad	-4294967266
	.quad	u1qWE_srtd


==================== Asm code ====================
2018-03-16 15:56:05.854302102 UTC

.section .data.rel.ro
.align 8
.align 1
u1qWF_srtd:
	.quad	S1jKw_srt+24
	.quad	124
	.quad	1
	.quad	576460752303685632


==================== Asm code ====================
2018-03-16 15:56:05.854901718 UTC

.section .text
.align 8
_c1qVX:
_c1qVX:
	movq $block_c1qW2_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movl $GHC.Real.even1_closure,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1qVX, .-_c1qVX


==================== Asm code ====================
2018-03-16 15:56:05.855443235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qVX_info:
	.quad	_c1qVX
	.quad	2
	.quad	-4294967266
	.quad	u1qWF_srtd


==================== Asm code ====================
2018-03-16 15:56:05.856134948 UTC

.section .text
.align 8
_c1qW2:
_c1qW2:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1qWw
_c1qWu:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c1qWw:
	movq $block_c1qW7_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1qW2, .-_c1qW2


==================== Asm code ====================
2018-03-16 15:56:05.856747661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qW2_info:
	.quad	_c1qW2
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.857440683 UTC

.section .text
.align 8
_c1qW7:
_c1qW7:
	movq $block_c1qWb_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qW7, .-_c1qW7


==================== Asm code ====================
2018-03-16 15:56:05.857985554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qW7_info:
	.quad	_c1qW7
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.858657827 UTC

.section .text
.align 8
_c1qWb:
_c1qWb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qWA
_c1qWz:
	movq $sat_s1juH_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.+_entry
_c1qWA:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qWb, .-_c1qWb


==================== Asm code ====================
2018-03-16 15:56:05.859276425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qWb_info:
	.quad	_c1qWb
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.86234973 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cceiling_closure
.type GHC.Real.$fRealFracRatio_$s$cceiling_closure, @object
GHC.Real.$fRealFracRatio_$s$cceiling_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.863129626 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cceiling_entry
.type GHC.Real.$fRealFracRatio_$s$cceiling_entry, @object
GHC.Real.$fRealFracRatio_$s$cceiling_entry:
_c1qXi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qXj
_c1qXk:
	movq $block_c1qXf_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1qXf
_c1qXg:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qXj:
	movl $GHC.Real.$fRealFracRatio_$s$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cceiling_entry, .-GHC.Real.$fRealFracRatio_$s$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:05.86382309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cceiling_info
.type GHC.Real.$fRealFracRatio_$s$cceiling_info, @object
GHC.Real.$fRealFracRatio_$s$cceiling_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1104


==================== Asm code ====================
2018-03-16 15:56:05.864480073 UTC

.section .text
.align 8
_c1qXf:
_c1qXf:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cceiling_entry
	.size _c1qXf, .-_c1qXf


==================== Asm code ====================
2018-03-16 15:56:05.865094172 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXf_info:
	.quad	_c1qXf
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1104


==================== Asm code ====================
2018-03-16 15:56:05.872151264 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cceiling_closure
.type GHC.Real.$w$cceiling_closure, @object
GHC.Real.$w$cceiling_closure:
	.quad	GHC.Real.$w$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.87300521 UTC

.section .text
.align 8
sat_s1jv3_entry:
_c1qY2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qY3
_c1qY4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qY3:
	jmp *-16(%r13)
	.size sat_s1jv3_entry, .-sat_s1jv3_entry


==================== Asm code ====================
2018-03-16 15:56:05.87370256 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jv3_info:
	.quad	sat_s1jv3_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.874229998 UTC

.section .data.rel.ro
.align 8
.align 1
u1qYn_srtd:
	.quad	S1jKw_srt+680
	.quad	56
	.quad	36030996042252289


==================== Asm code ====================
2018-03-16 15:56:05.87496489 UTC

.section .text
.align 8
.globl GHC.Real.$w$cceiling_entry
.type GHC.Real.$w$cceiling_entry, @object
GHC.Real.$w$cceiling_entry:
_c1qY5:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qY6
_c1qY7:
	movq $block_c1qXC_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1qY6:
	movl $GHC.Real.$w$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cceiling_entry, .-GHC.Real.$w$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:05.875594376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cceiling_info
.type GHC.Real.$w$cceiling_info, @object
GHC.Real.$w$cceiling_info:
	.quad	GHC.Real.$w$cceiling_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1qYn_srtd


==================== Asm code ====================
2018-03-16 15:56:05.876146908 UTC

.section .data.rel.ro
.align 8
.align 1
u1qYo_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:05.876772001 UTC

.section .text
.align 8
_c1qXC:
_c1qXC:
	movq $block_c1qXE_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qXE
_c1qXF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qXC, .-_c1qXC


==================== Asm code ====================
2018-03-16 15:56:05.878018922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXC_info:
	.quad	_c1qXC
	.quad	2
	.quad	-4294967266
	.quad	u1qYo_srtd


==================== Asm code ====================
2018-03-16 15:56:05.878526428 UTC

.section .data.rel.ro
.align 8
.align 1
u1qYp_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:05.879163072 UTC

.section .text
.align 8
_c1qXE:
_c1qXE:
	movq $block_c1qXJ_info,-16(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1qXE, .-_c1qXE


==================== Asm code ====================
2018-03-16 15:56:05.879755899 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXE_info:
	.quad	_c1qXE
	.quad	3
	.quad	-4294967266
	.quad	u1qYp_srtd


==================== Asm code ====================
2018-03-16 15:56:05.880441398 UTC

.section .text
.align 8
_c1qXJ:
_c1qXJ:
	movq 16(%rbp),%rax
	movq $block_c1qXL_info,16(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1qXJ, .-_c1qXJ


==================== Asm code ====================
2018-03-16 15:56:05.881042465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXJ_info:
	.quad	_c1qXJ
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.88178148 UTC

.section .text
.align 8
_c1qXL:
_c1qXL:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1qYg
_c1qYe:
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
_c1qYg:
	movq $block_c1qXQ_info,(%rbp)
	movq 24(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1qXL, .-_c1qXL


==================== Asm code ====================
2018-03-16 15:56:05.882373362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXL_info:
	.quad	_c1qXL
	.quad	131
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.882955345 UTC

.section .text
.align 8
_c1qXQ:
_c1qXQ:
	movq $block_c1qXU_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qXQ, .-_c1qXQ


==================== Asm code ====================
2018-03-16 15:56:05.883503239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXQ_info:
	.quad	_c1qXQ
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.884243224 UTC

.section .text
.align 8
_c1qXU:
_c1qXU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1qYk
_c1qYj:
	movq $sat_s1jv3_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq 8(%rbp),%rax
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.+_entry
_c1qYk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qXU, .-_c1qXU


==================== Asm code ====================
2018-03-16 15:56:05.884875277 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qXU_info:
	.quad	_c1qXU
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.888099877 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cceiling_closure
.type GHC.Real.$fRealFracRatio_$cceiling_closure, @object
GHC.Real.$fRealFracRatio_$cceiling_closure:
	.quad	GHC.Real.$fRealFracRatio_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.888968359 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cceiling_entry
.type GHC.Real.$fRealFracRatio_$cceiling_entry, @object
GHC.Real.$fRealFracRatio_$cceiling_entry:
_c1qZ7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qZ8
_c1qZ9:
	movq $block_c1qZ4_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1qZ4
_c1qZ5:
	movq (%rbx),%rax
	jmp *(%rax)
_c1qZ8:
	movl $GHC.Real.$fRealFracRatio_$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cceiling_entry, .-GHC.Real.$fRealFracRatio_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:05.889654002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cceiling_info
.type GHC.Real.$fRealFracRatio_$cceiling_info, @object
GHC.Real.$fRealFracRatio_$cceiling_info:
	.quad	GHC.Real.$fRealFracRatio_$cceiling_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1120


==================== Asm code ====================
2018-03-16 15:56:05.89030854 UTC

.section .text
.align 8
_c1qZ4:
_c1qZ4:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cceiling_entry
	.size _c1qZ4, .-_c1qZ4


==================== Asm code ====================
2018-03-16 15:56:05.890855884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZ4_info:
	.quad	_c1qZ4
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1120


==================== Asm code ====================
2018-03-16 15:56:05.897481552 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfloor_closure
.type GHC.Real.$w$s$cfloor_closure, @object
GHC.Real.$w$s$cfloor_closure:
	.quad	GHC.Real.$w$s$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.898310813 UTC

.section .text
.align 8
sat_s1jvo_entry:
_c1qZX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1qZY
_c1qZZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1qZY:
	jmp *-16(%r13)
	.size sat_s1jvo_entry, .-sat_s1jvo_entry


==================== Asm code ====================
2018-03-16 15:56:05.899488862 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jvo_info:
	.quad	sat_s1jvo_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.900077309 UTC

.section .data.rel.ro
.align 8
.align 1
u1r0i_srtd:
	.quad	S1jKw_srt
	.quad	143
	.quad	1
	.quad	4611688217452740608
	.quad	16384


==================== Asm code ====================
2018-03-16 15:56:05.900773788 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfloor_entry
.type GHC.Real.$w$s$cfloor_entry, @object
GHC.Real.$w$s$cfloor_entry:
_c1r00:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r01
_c1r02:
	movq $block_c1qZr_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1r01:
	movl $GHC.Real.$w$s$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfloor_entry, .-GHC.Real.$w$s$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:05.901425339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfloor_info
.type GHC.Real.$w$s$cfloor_info, @object
GHC.Real.$w$s$cfloor_info:
	.quad	GHC.Real.$w$s$cfloor_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1r0i_srtd


==================== Asm code ====================
2018-03-16 15:56:05.902005458 UTC

.section .data.rel.ro
.align 8
.align 1
u1r0j_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:05.902672226 UTC

.section .text
.align 8
_c1qZr:
_c1qZr:
	movq $block_c1qZt_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1qZt
_c1qZu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1qZr, .-_c1qZr


==================== Asm code ====================
2018-03-16 15:56:05.903246403 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZr_info:
	.quad	_c1qZr
	.quad	1
	.quad	-4294967266
	.quad	u1r0j_srtd


==================== Asm code ====================
2018-03-16 15:56:05.903811983 UTC

.section .data.rel.ro
.align 8
.align 1
u1r0k_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:05.904480263 UTC

.section .text
.align 8
_c1qZt:
_c1qZt:
	movq $block_c1qZy_info,-8(%rbp)
	movq 15(%rbx),%rsi
	movl $GHC.Real.even1_closure,%r14d
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1qZt, .-_c1qZt


==================== Asm code ====================
2018-03-16 15:56:05.905062217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZt_info:
	.quad	_c1qZt
	.quad	2
	.quad	-4294967266
	.quad	u1r0k_srtd


==================== Asm code ====================
2018-03-16 15:56:05.905673903 UTC

.section .data.rel.ro
.align 8
.align 1
u1r0l_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018427387904


==================== Asm code ====================
2018-03-16 15:56:05.906312158 UTC

.section .text
.align 8
_c1qZy:
_c1qZy:
	movq $block_c1qZC_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1qZy, .-_c1qZy


==================== Asm code ====================
2018-03-16 15:56:05.906881212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZy_info:
	.quad	_c1qZy
	.quad	3
	.quad	-4294967266
	.quad	u1r0l_srtd


==================== Asm code ====================
2018-03-16 15:56:05.907517962 UTC

.section .text
.align 8
_c1qZC:
_c1qZC:
	movq 8(%rbp),%rax
	movq $block_c1qZG_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c1qZC, .-_c1qZC


==================== Asm code ====================
2018-03-16 15:56:05.908122701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZC_info:
	.quad	_c1qZC
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.908821342 UTC

.section .text
.align 8
_c1qZG:
_c1qZG:
	cmpq $1,%rbx
	je _c1r0c
_c1r0a:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c1r0c:
	movq $block_c1qZL_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1qZG, .-_c1qZG


==================== Asm code ====================
2018-03-16 15:56:05.909457764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZG_info:
	.quad	_c1qZG
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.910061496 UTC

.section .text
.align 8
_c1qZL:
_c1qZL:
	movq $block_c1qZP_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1qZL, .-_c1qZL


==================== Asm code ====================
2018-03-16 15:56:05.910620869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZL_info:
	.quad	_c1qZL
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.911315375 UTC

.section .text
.align 8
_c1qZP:
_c1qZP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r0g
_c1r0f:
	movq $sat_s1jvo_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
_c1r0g:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1qZP, .-_c1qZP


==================== Asm code ====================
2018-03-16 15:56:05.911908229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1qZP_info:
	.quad	_c1qZP
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.915759696 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cfloor_closure
.type GHC.Real.$fRealFracRatio_$s$cfloor_closure, @object
GHC.Real.$fRealFracRatio_$s$cfloor_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.916564596 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cfloor_entry
.type GHC.Real.$fRealFracRatio_$s$cfloor_entry, @object
GHC.Real.$fRealFracRatio_$s$cfloor_entry:
_c1r14:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r15
_c1r16:
	movq $block_c1r11_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1r11
_c1r12:
	movq (%rbx),%rax
	jmp *(%rax)
_c1r15:
	movl $GHC.Real.$fRealFracRatio_$s$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cfloor_entry, .-GHC.Real.$fRealFracRatio_$s$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:05.917190374 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cfloor_info
.type GHC.Real.$fRealFracRatio_$s$cfloor_info, @object
GHC.Real.$fRealFracRatio_$s$cfloor_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1136


==================== Asm code ====================
2018-03-16 15:56:05.917878553 UTC

.section .text
.align 8
_c1r11:
_c1r11:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cfloor_entry
	.size _c1r11, .-_c1r11


==================== Asm code ====================
2018-03-16 15:56:05.918479989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r11_info:
	.quad	_c1r11
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1136


==================== Asm code ====================
2018-03-16 15:56:05.925039986 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfloor_closure
.type GHC.Real.$w$cfloor_closure, @object
GHC.Real.$w$cfloor_closure:
	.quad	GHC.Real.$w$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.925934943 UTC

.section .text
.align 8
sat_s1jvK_entry:
_c1r1O:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r1P
_c1r1Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1r1P:
	jmp *-16(%r13)
	.size sat_s1jvK_entry, .-sat_s1jvK_entry


==================== Asm code ====================
2018-03-16 15:56:05.927098341 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jvK_info:
	.quad	sat_s1jvK_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.92772152 UTC

.section .data.rel.ro
.align 8
.align 1
u1r29_srtd:
	.quad	S1jKw_srt+680
	.quad	60
	.quad	576462951326711809


==================== Asm code ====================
2018-03-16 15:56:05.928429837 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfloor_entry
.type GHC.Real.$w$cfloor_entry, @object
GHC.Real.$w$cfloor_entry:
_c1r1R:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r1S
_c1r1T:
	movq $block_c1r1o_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1r1S:
	movl $GHC.Real.$w$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfloor_entry, .-GHC.Real.$w$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:05.929099952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfloor_info
.type GHC.Real.$w$cfloor_info, @object
GHC.Real.$w$cfloor_info:
	.quad	GHC.Real.$w$cfloor_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1r29_srtd


==================== Asm code ====================
2018-03-16 15:56:05.929708466 UTC

.section .data.rel.ro
.align 8
.align 1
u1r2a_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:05.930390511 UTC

.section .text
.align 8
_c1r1o:
_c1r1o:
	movq $block_c1r1q_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1r1q
_c1r1r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1r1o, .-_c1r1o


==================== Asm code ====================
2018-03-16 15:56:05.930984941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1o_info:
	.quad	_c1r1o
	.quad	2
	.quad	-4294967266
	.quad	u1r2a_srtd


==================== Asm code ====================
2018-03-16 15:56:05.931499264 UTC

.section .data.rel.ro
.align 8
.align 1
u1r2b_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:05.932122415 UTC

.section .text
.align 8
_c1r1q:
_c1r1q:
	movq $block_c1r1v_info,-16(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1r1q, .-_c1r1q


==================== Asm code ====================
2018-03-16 15:56:05.932715271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1q_info:
	.quad	_c1r1q
	.quad	3
	.quad	-4294967266
	.quad	u1r2b_srtd


==================== Asm code ====================
2018-03-16 15:56:05.933470551 UTC

.section .text
.align 8
_c1r1v:
_c1r1v:
	movq 16(%rbp),%rax
	movq $block_c1r1x_info,16(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1r1v, .-_c1r1v


==================== Asm code ====================
2018-03-16 15:56:05.934043524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1v_info:
	.quad	_c1r1v
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.934746639 UTC

.section .text
.align 8
_c1r1x:
_c1r1x:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1r20
_c1r22:
	movq $block_c1r1C_info,(%rbp)
	movq 24(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1r20:
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _c1r1x, .-_c1r1x


==================== Asm code ====================
2018-03-16 15:56:05.935356455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1x_info:
	.quad	_c1r1x
	.quad	131
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.935933619 UTC

.section .text
.align 8
_c1r1C:
_c1r1C:
	movq $block_c1r1G_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1r1C, .-_c1r1C


==================== Asm code ====================
2018-03-16 15:56:05.936527952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1C_info:
	.quad	_c1r1C
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.937202752 UTC

.section .text
.align 8
_c1r1G:
_c1r1G:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r26
_c1r25:
	movq $sat_s1jvK_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq 8(%rbp),%rax
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.-_entry
_c1r26:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1r1G, .-_c1r1G


==================== Asm code ====================
2018-03-16 15:56:05.937815508 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r1G_info:
	.quad	_c1r1G
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.940892722 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cfloor_closure
.type GHC.Real.$fRealFracRatio_$cfloor_closure, @object
GHC.Real.$fRealFracRatio_$cfloor_closure:
	.quad	GHC.Real.$fRealFracRatio_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.941758304 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cfloor_entry
.type GHC.Real.$fRealFracRatio_$cfloor_entry, @object
GHC.Real.$fRealFracRatio_$cfloor_entry:
_c1r2T:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r2U
_c1r2V:
	movq $block_c1r2Q_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1r2Q
_c1r2R:
	movq (%rbx),%rax
	jmp *(%rax)
_c1r2U:
	movl $GHC.Real.$fRealFracRatio_$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cfloor_entry, .-GHC.Real.$fRealFracRatio_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:05.942398601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cfloor_info
.type GHC.Real.$fRealFracRatio_$cfloor_info, @object
GHC.Real.$fRealFracRatio_$cfloor_info:
	.quad	GHC.Real.$fRealFracRatio_$cfloor_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1152


==================== Asm code ====================
2018-03-16 15:56:05.943066079 UTC

.section .text
.align 8
_c1r2Q:
_c1r2Q:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cfloor_entry
	.size _c1r2Q, .-_c1r2Q


==================== Asm code ====================
2018-03-16 15:56:05.943650087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r2Q_info:
	.quad	_c1r2Q
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1152


==================== Asm code ====================
2018-03-16 15:56:05.945350778 UTC

.section .data
.align 8
.align 1
sat_s1jvR_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:05.946932305 UTC

.section .data
.align 8
.align 1
sat_s1jvS_closure:
	.quad	:_con_info
	.quad	sat_s1jvR_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.94976111 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio2_closure
.type GHC.Real.$fRealFracRatio2_closure, @object
GHC.Real.$fRealFracRatio2_closure:
	.quad	GHC.Real.$fRealFracRatio2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.950704196 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio2_entry
.type GHC.Real.$fRealFracRatio2_entry, @object
GHC.Real.$fRealFracRatio2_entry:
_c1r3h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r3i
_c1r3j:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1r3g
_c1r3f:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s1jvS_closure+2,%esi
	movl $GHC.Types.False_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c1r3i:
	jmp *-16(%r13)
_c1r3g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealFracRatio2_entry, .-GHC.Real.$fRealFracRatio2_entry


==================== Asm code ====================
2018-03-16 15:56:05.95136887 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio2_info
.type GHC.Real.$fRealFracRatio2_info, @object
GHC.Real.$fRealFracRatio2_info:
	.quad	GHC.Real.$fRealFracRatio2_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+1168


==================== Asm code ====================
2018-03-16 15:56:05.963759765 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cround_closure
.type GHC.Real.$w$s$cround_closure, @object
GHC.Real.$w$s$cround_closure:
	.quad	GHC.Real.$w$s$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.964578939 UTC

.section .text
.align 8
sat_s1jwe_entry:
_c1r4j:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r4k
_c1r4l:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1r4k:
	jmp *-16(%r13)
	.size sat_s1jwe_entry, .-sat_s1jwe_entry


==================== Asm code ====================
2018-03-16 15:56:05.965207633 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jwe_info:
	.quad	sat_s1jwe_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.966483601 UTC

.section .text
.align 8
sat_s1jwf_entry:
_c1r4s:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r4t
_c1r4u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1r4t:
	jmp *-16(%r13)
	.size sat_s1jwf_entry, .-sat_s1jwf_entry


==================== Asm code ====================
2018-03-16 15:56:05.967103423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jwf_info:
	.quad	sat_s1jwf_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.967634449 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5F_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611688217729565184
	.quad	1572864


==================== Asm code ====================
2018-03-16 15:56:05.968354297 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cround_entry
.type GHC.Real.$w$s$cround_entry, @object
GHC.Real.$w$s$cround_entry:
_c1r4v:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r4w
_c1r4x:
	movq $block_c1r3v_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1r4w:
	movl $GHC.Real.$w$s$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cround_entry, .-GHC.Real.$w$s$cround_entry


==================== Asm code ====================
2018-03-16 15:56:05.968969878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cround_info
.type GHC.Real.$w$s$cround_info, @object
GHC.Real.$w$s$cround_info:
	.quad	GHC.Real.$w$s$cround_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1r5F_srtd


==================== Asm code ====================
2018-03-16 15:56:05.969576926 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5G_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:05.970289516 UTC

.section .text
.align 8
_c1r3v:
_c1r3v:
	movq $block_c1r3x_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1r3x
_c1r3y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1r3v, .-_c1r3v


==================== Asm code ====================
2018-03-16 15:56:05.970900707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3v_info:
	.quad	_c1r3v
	.quad	1
	.quad	-4294967266
	.quad	u1r5G_srtd


==================== Asm code ====================
2018-03-16 15:56:05.971474835 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5H_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:05.97215245 UTC

.section .text
.align 8
_c1r3x:
_c1r3x:
	movq $block_c1r3C_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.absInteger_entry
	.size _c1r3x, .-_c1r3x


==================== Asm code ====================
2018-03-16 15:56:05.97271636 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3x_info:
	.quad	_c1r3x
	.quad	2
	.quad	-4294967266
	.quad	u1r5H_srtd


==================== Asm code ====================
2018-03-16 15:56:05.973274735 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5I_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:05.97393379 UTC

.section .text
.align 8
_c1r3C:
_c1r3C:
	movq $block_c1r3G_info,(%rbp)
	movl $GHC.Real.even2_closure,%r8d
	movl $GHC.Real.$fEnumRatio1_closure,%edi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c-_entry
	.size _c1r3C, .-_c1r3C


==================== Asm code ====================
2018-03-16 15:56:05.974512988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3C_info:
	.quad	_c1r3C
	.quad	4
	.quad	-4294967266
	.quad	u1r5I_srtd


==================== Asm code ====================
2018-03-16 15:56:05.975040761 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5J_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	1
	.quad	4611686018706309120
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:05.975651083 UTC

.section .text
.align 8
_c1r3G:
_c1r3G:
	movq $block_c1r3I_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.signumInteger_entry
	.size _c1r3G, .-_c1r3G


==================== Asm code ====================
2018-03-16 15:56:05.976205238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3G_info:
	.quad	_c1r3G
	.quad	4
	.quad	-4294967266
	.quad	u1r5J_srtd


==================== Asm code ====================
2018-03-16 15:56:05.976743792 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5K_srtd:
	.quad	S1jKw_srt
	.quad	149
	.quad	1
	.quad	4611686018706309120
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:05.977398834 UTC

.section .text
.align 8
_c1r3I:
_c1r3I:
	movq $block_c1r3M_info,-8(%rbp)
	movl $GHC.Real.$fRealFracRatio2_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1r3I, .-_c1r3I


==================== Asm code ====================
2018-03-16 15:56:05.977942055 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3I_info:
	.quad	_c1r3I
	.quad	4
	.quad	-4294967266
	.quad	u1r5K_srtd


==================== Asm code ====================
2018-03-16 15:56:05.978468873 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5L_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018706309120


==================== Asm code ====================
2018-03-16 15:56:05.979186076 UTC

.section .text
.align 8
_c1r3M:
_c1r3M:
	cmpq $1,%rbx
	je _u1r5w
_c1r4U:
	movq $block_c1r4D_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_u1r5w:
	addq $32,%rbp
	jmp _c1r5u
	.size _c1r3M, .-_c1r3M


==================== Asm code ====================
2018-03-16 15:56:05.980351325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3M_info:
	.quad	_c1r3M
	.quad	5
	.quad	-4294967266
	.quad	u1r5L_srtd


==================== Asm code ====================
2018-03-16 15:56:05.980917351 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5M_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018706309120


==================== Asm code ====================
2018-03-16 15:56:05.982489288 UTC

.section .text
.align 8
_c1r4D:
_c1r4D:
	cmpq $1,%rbx
	je _c1r5g
_c1r51:
	movq 8(%rbp),%rax
	movq $block_c1r4Y_info,8(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1r5g:
	movq $block_c1r5e_info,8(%rbp)
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.even_entry
	.size _c1r4D, .-_c1r4D


==================== Asm code ====================
2018-03-16 15:56:05.98308276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r4D_info:
	.quad	_c1r4D
	.quad	5
	.quad	-4294967266
	.quad	u1r5M_srtd


==================== Asm code ====================
2018-03-16 15:56:05.983582541 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5N_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:05.98426725 UTC

.section .text
.align 8
_c1r5e:
_c1r5e:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1r5y
_u1r5z:
	addq $24,%rbp
	jmp _c1r5u
_u1r5y:
	addq $8,%rbp
	jmp _s1jw8
	.size _c1r5e, .-_c1r5e


==================== Asm code ====================
2018-03-16 15:56:05.98478489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r5e_info:
	.quad	_c1r5e
	.quad	4
	.quad	-4294967266
	.quad	u1r5N_srtd


==================== Asm code ====================
2018-03-16 15:56:05.985409413 UTC

.section .text
.align 8
_c1r5u:
_c1r5u:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
	.size _c1r5u, .-_c1r5u


==================== Asm code ====================
2018-03-16 15:56:05.985920241 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5O_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018697920512


==================== Asm code ====================
2018-03-16 15:56:05.986536878 UTC

.section .text
.align 8
_c1r4Y:
_c1r4Y:
	cmpq $1,%rbx
	je _u1r5x
_c1r57:
	movl $GHC.Real.$fRealFracRatio1_closure,%ebx
	addq $40,%rbp
	jmp stg_ap_0_fast
_u1r5x:
	addq $8,%rbp
	jmp _s1jw8
	.size _c1r4Y, .-_c1r4Y


==================== Asm code ====================
2018-03-16 15:56:05.987110012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r4Y_info:
	.quad	_c1r4Y
	.quad	4
	.quad	-4294967266
	.quad	u1r5O_srtd


==================== Asm code ====================
2018-03-16 15:56:05.987696594 UTC

.section .text
.align 8
_s1jw8:
_s1jw8:
	movq $block_c1r3V_info,-8(%rbp)
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1jw8, .-_s1jw8


==================== Asm code ====================
2018-03-16 15:56:05.98825414 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5P_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:05.988785639 UTC

.section .text
.align 8
_c1r3V:
_c1r3V:
	movq $block_c1r3Z_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1r3V, .-_c1r3V


==================== Asm code ====================
2018-03-16 15:56:05.989358377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3V_info:
	.quad	_c1r3V
	.quad	516
	.quad	-4294967266
	.quad	u1r5P_srtd


==================== Asm code ====================
2018-03-16 15:56:05.989904939 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5Q_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:05.990515262 UTC

.section .text
.align 8
_c1r3Z:
_c1r3Z:
	movq 8(%rbp),%rax
	movq $block_c1r43_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Real.even1_closure,%r14d
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1r3Z, .-_c1r3Z


==================== Asm code ====================
2018-03-16 15:56:05.991081549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r3Z_info:
	.quad	_c1r3Z
	.quad	516
	.quad	-4294967266
	.quad	u1r5Q_srtd


==================== Asm code ====================
2018-03-16 15:56:05.991590132 UTC

.section .data.rel.ro
.align 8
.align 1
u1r5R_srtd:
	.quad	S1jKw_srt
	.quad	127
	.quad	1
	.quad	4611686018427387904


==================== Asm code ====================
2018-03-16 15:56:05.992183828 UTC

.section .text
.align 8
_c1r43:
_c1r43:
	movq $block_c1r47_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1r43, .-_c1r43


==================== Asm code ====================
2018-03-16 15:56:05.992747151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r43_info:
	.quad	_c1r43
	.quad	3
	.quad	-4294967266
	.quad	u1r5R_srtd


==================== Asm code ====================
2018-03-16 15:56:05.993407879 UTC

.section .text
.align 8
_c1r47:
_c1r47:
	movq 8(%rbp),%rax
	movq $block_c1r4b_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c1r47, .-_c1r47


==================== Asm code ====================
2018-03-16 15:56:05.993993288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r47_info:
	.quad	_c1r47
	.quad	3
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.994802199 UTC

.section .text
.align 8
_c1r4b:
_c1r4b:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1r4P
_c1r4L:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r4S
_c1r4N:
	movq $sat_s1jwe_info,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.+_entry
_c1r4S:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c1r4P:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r4S
_c1r4R:
	movq $sat_s1jwf_info,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
	.size _c1r4b, .-_c1r4b


==================== Asm code ====================
2018-03-16 15:56:05.995479594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r4b_info:
	.quad	_c1r4b
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:05.998518271 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cround_closure
.type GHC.Real.$fRealFracRatio_$s$cround_closure, @object
GHC.Real.$fRealFracRatio_$s$cround_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:05.999327591 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cround_entry
.type GHC.Real.$fRealFracRatio_$s$cround_entry, @object
GHC.Real.$fRealFracRatio_$s$cround_entry:
_c1r7f:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r7g
_c1r7h:
	movq $block_c1r7c_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1r7c
_c1r7d:
	movq (%rbx),%rax
	jmp *(%rax)
_c1r7g:
	movl $GHC.Real.$fRealFracRatio_$s$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cround_entry, .-GHC.Real.$fRealFracRatio_$s$cround_entry


==================== Asm code ====================
2018-03-16 15:56:05.999956179 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cround_info
.type GHC.Real.$fRealFracRatio_$s$cround_info, @object
GHC.Real.$fRealFracRatio_$s$cround_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cround_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+1176


==================== Asm code ====================
2018-03-16 15:56:06.000540902 UTC

.section .text
.align 8
_c1r7c:
_c1r7c:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cround_entry
	.size _c1r7c, .-_c1r7c


==================== Asm code ====================
2018-03-16 15:56:06.001095748 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7c_info:
	.quad	_c1r7c
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1176


==================== Asm code ====================
2018-03-16 15:56:06.021358918 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cround_closure
.type GHC.Real.$w$cround_closure, @object
GHC.Real.$w$cround_closure:
	.quad	GHC.Real.$w$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.022219822 UTC

.section .text
.align 8
sat_s1jx1_entry:
_c1r8M:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r8N
_c1r8O:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1r8N:
	jmp *-16(%r13)
	.size sat_s1jx1_entry, .-sat_s1jx1_entry


==================== Asm code ====================
2018-03-16 15:56:06.022855781 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jx1_info:
	.quad	sat_s1jx1_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.023534337 UTC

.section .text
.align 8
sat_s1jx2_entry:
_c1r8V:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r8W
_c1r8X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1r8W:
	jmp *-16(%r13)
	.size sat_s1jx2_entry, .-sat_s1jx2_entry


==================== Asm code ====================
2018-03-16 15:56:06.024155102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jx2_info:
	.quad	sat_s1jx2_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.024674548 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbi_srtd:
	.quad	S1jKw_srt+584
	.quad	78
	.quad	9156733004435457
	.quad	8192


==================== Asm code ====================
2018-03-16 15:56:06.02543822 UTC

.section .text
.align 8
.globl GHC.Real.$w$cround_entry
.type GHC.Real.$w$cround_entry, @object
GHC.Real.$w$cround_entry:
_c1r8Y:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c1r8Z
_c1r90:
	movq $block_c1r7z_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1r8Z:
	movl $GHC.Real.$w$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cround_entry, .-GHC.Real.$w$cround_entry


==================== Asm code ====================
2018-03-16 15:56:06.026056945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cround_info
.type GHC.Real.$w$cround_info, @object
GHC.Real.$w$cround_info:
	.quad	GHC.Real.$w$cround_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1rbi_srtd


==================== Asm code ====================
2018-03-16 15:56:06.026601196 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbj_srtd:
	.quad	S1jKw_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:06.027283011 UTC

.section .text
.align 8
_c1r7z:
_c1r7z:
	movq $block_c1r7B_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1r7B
_c1r7C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1r7z, .-_c1r7z


==================== Asm code ====================
2018-03-16 15:56:06.027879914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7z_info:
	.quad	_c1r7z
	.quad	2
	.quad	-4294967266
	.quad	u1rbj_srtd


==================== Asm code ====================
2018-03-16 15:56:06.028434419 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbk_srtd:
	.quad	S1jKw_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:06.029058059 UTC

.section .text
.align 8
_c1r7B:
_c1r7B:
	movq $block_c1r7G_info,-16(%rbp)
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1r7B, .-_c1r7B


==================== Asm code ====================
2018-03-16 15:56:06.029698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7B_info:
	.quad	_c1r7B
	.quad	3
	.quad	-4294967266
	.quad	u1rbk_srtd


==================== Asm code ====================
2018-03-16 15:56:06.030201217 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbl_srtd:
	.quad	S1jKw_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:06.030794259 UTC

.section .text
.align 8
_c1r7G:
_c1r7G:
	movq $block_c1r7K_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1r7G, .-_c1r7G


==================== Asm code ====================
2018-03-16 15:56:06.031339776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7G_info:
	.quad	_c1r7G
	.quad	5
	.quad	-4294967266
	.quad	u1rbl_srtd


==================== Asm code ====================
2018-03-16 15:56:06.03182027 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbm_srtd:
	.quad	S1jKw_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:06.032464387 UTC

.section .text
.align 8
_c1r7K:
_c1r7K:
	movq $block_c1r7O_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.abs_entry
	.size _c1r7K, .-_c1r7K


==================== Asm code ====================
2018-03-16 15:56:06.033074639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7K_info:
	.quad	_c1r7K
	.quad	5
	.quad	-4294967266
	.quad	u1rbm_srtd


==================== Asm code ====================
2018-03-16 15:56:06.033673678 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbn_srtd:
	.quad	S1jKw_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:06.03437092 UTC

.section .text
.align 8
_c1r7O:
_c1r7O:
	movq $block_c1r7Q_info,-8(%rbp)
	movl $GHC.Real.even2_closure,%edi
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromRational_entry
	.size _c1r7O, .-_c1r7O


==================== Asm code ====================
2018-03-16 15:56:06.035571062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7O_info:
	.quad	_c1r7O
	.quad	5
	.quad	-4294967266
	.quad	u1rbn_srtd


==================== Asm code ====================
2018-03-16 15:56:06.036128751 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbo_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2233383035013


==================== Asm code ====================
2018-03-16 15:56:06.036806279 UTC

.section .text
.align 8
_c1r7Q:
_c1r7Q:
	movq 8(%rbp),%rax
	movq $block_c1r7S_info,8(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1r7Q, .-_c1r7Q


==================== Asm code ====================
2018-03-16 15:56:06.037434487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7Q_info:
	.quad	_c1r7Q
	.quad	6
	.quad	-4294967266
	.quad	u1rbo_srtd


==================== Asm code ====================
2018-03-16 15:56:06.03797147 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbp_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023296645


==================== Asm code ====================
2018-03-16 15:56:06.038577037 UTC

.section .text
.align 8
_c1r7S:
_c1r7S:
	movq $block_c1r7U_info,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp GHC.Real.$w$csignum_entry
	.size _c1r7S, .-_c1r7S


==================== Asm code ====================
2018-03-16 15:56:06.039144121 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7S_info:
	.quad	_c1r7S
	.quad	5
	.quad	-4294967266
	.quad	u1rbp_srtd


==================== Asm code ====================
2018-03-16 15:56:06.039700423 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbq_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.040344206 UTC

.section .text
.align 8
_c1r7U:
_c1r7U:
	movq $block_c1r7W_info,-16(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %r14,%rax
	movq 32(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1r7U, .-_c1r7U


==================== Asm code ====================
2018-03-16 15:56:06.04092998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7U_info:
	.quad	_c1r7U
	.quad	5
	.quad	-4294967266
	.quad	u1rbq_srtd


==================== Asm code ====================
2018-03-16 15:56:06.041522725 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbr_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.042104545 UTC

.section .text
.align 8
_c1r7W:
_c1r7W:
	movq $block_c1r7Y_info,-16(%rbp)
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1r7W, .-_c1r7W


==================== Asm code ====================
2018-03-16 15:56:06.042662011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7W_info:
	.quad	_c1r7W
	.quad	7
	.quad	-4294967266
	.quad	u1rbr_srtd


==================== Asm code ====================
2018-03-16 15:56:06.043236024 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbs_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.043827428 UTC

.section .text
.align 8
_c1r7Y:
_c1r7Y:
	movq $block_c1r82_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1r7Y, .-_c1r7Y


==================== Asm code ====================
2018-03-16 15:56:06.044383971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r7Y_info:
	.quad	_c1r7Y
	.quad	9
	.quad	-4294967266
	.quad	u1rbs_srtd


==================== Asm code ====================
2018-03-16 15:56:06.044982037 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbt_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.045693776 UTC

.section .text
.align 8
_c1r82:
_c1r82:
	movq $block_c1r86_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.negate_entry
	.size _c1r82, .-_c1r82


==================== Asm code ====================
2018-03-16 15:56:06.046257767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r82_info:
	.quad	_c1r82
	.quad	9
	.quad	-4294967266
	.quad	u1rbt_srtd


==================== Asm code ====================
2018-03-16 15:56:06.046815048 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbu_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.047425868 UTC

.section .text
.align 8
_c1r86:
_c1r86:
	movq $block_c1r88_info,-8(%rbp)
	movq 64(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1r86, .-_c1r86


==================== Asm code ====================
2018-03-16 15:56:06.047969819 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r86_info:
	.quad	_c1r86
	.quad	9
	.quad	-4294967266
	.quad	u1rbu_srtd


==================== Asm code ====================
2018-03-16 15:56:06.048513841 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbv_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.049157179 UTC

.section .text
.align 8
_c1r88:
_c1r88:
	movq $block_c1r8c_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1r88, .-_c1r88


==================== Asm code ====================
2018-03-16 15:56:06.049790869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r88_info:
	.quad	_c1r88
	.quad	10
	.quad	-4294967266
	.quad	u1rbv_srtd


==================== Asm code ====================
2018-03-16 15:56:06.050319842 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbw_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.050892734 UTC

.section .text
.align 8
_c1r8c:
_c1r8c:
	movq $block_c1r8g_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1r8c, .-_c1r8c


==================== Asm code ====================
2018-03-16 15:56:06.051437824 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8c_info:
	.quad	_c1r8c
	.quad	10
	.quad	-4294967266
	.quad	u1rbw_srtd


==================== Asm code ====================
2018-03-16 15:56:06.051907566 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbx_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.052579404 UTC

.section .text
.align 8
_c1r8g:
_c1r8g:
	movq $block_c1r9f_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1r8g, .-_c1r8g


==================== Asm code ====================
2018-03-16 15:56:06.053147977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8g_info:
	.quad	_c1r8g
	.quad	10
	.quad	-4294967266
	.quad	u1rbx_srtd


==================== Asm code ====================
2018-03-16 15:56:06.054084806 UTC

.section .data.rel.ro
.align 8
.align 1
u1rby_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.054786284 UTC

.section .text
.align 8
_c1r9f:
_c1r9f:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1raX
_c1raE:
	movq $block_c1raC_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
_u1raX:
	addq $8,%rbp
	jmp _s1jwT
	.size _c1r9f, .-_c1r9f


==================== Asm code ====================
2018-03-16 15:56:06.05536937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r9f_info:
	.quad	_c1r9f
	.quad	10
	.quad	-4294967266
	.quad	u1rby_srtd


==================== Asm code ====================
2018-03-16 15:56:06.055888079 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbz_srtd:
	.quad	S1jKw_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:06.05654954 UTC

.section .text
.align 8
_c1raC:
_c1raC:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1raY
_u1raZ:
	addq $64,%rbp
	jmp _c1raO
_u1raY:
	addq $8,%rbp
	jmp _s1jwT
	.size _c1raC, .-_c1raC


==================== Asm code ====================
2018-03-16 15:56:06.057135982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1raC_info:
	.quad	_c1raC
	.quad	10
	.quad	-4294967266
	.quad	u1rbz_srtd


==================== Asm code ====================
2018-03-16 15:56:06.057825387 UTC

.section .text
.align 8
_s1jwT:
_s1jwT:
	movq $block_c1r8p_info,-8(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 64(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _s1jwT, .-_s1jwT


==================== Asm code ====================
2018-03-16 15:56:06.058414111 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbA_srtd:
	.quad	S1jKw_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:06.059094548 UTC

.section .text
.align 8
_c1r8p:
_c1r8p:
	movq $block_c1r9j_info,-16(%rbp)
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 40(%rbp),%rcx
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp GHC.Classes.==_entry
	.size _c1r8p, .-_c1r8p


==================== Asm code ====================
2018-03-16 15:56:06.060192924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8p_info:
	.quad	_c1r8p
	.quad	10
	.quad	-4294967266
	.quad	u1rbA_srtd


==================== Asm code ====================
2018-03-16 15:56:06.060803415 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbB_srtd:
	.quad	S1jKw_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:06.061560697 UTC

.section .text
.align 8
_c1r9j:
_c1r9j:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1rb0
_c1ra8:
	movq $block_c1ra6_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
_u1rb0:
	addq $8,%rbp
	jmp _s1jx3
	.size _c1r9j, .-_c1r9j


==================== Asm code ====================
2018-03-16 15:56:06.062212503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r9j_info:
	.quad	_c1r9j
	.quad	12
	.quad	-4294967266
	.quad	u1rbB_srtd


==================== Asm code ====================
2018-03-16 15:56:06.062721998 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbC_srtd:
	.quad	S1jKw_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:06.063397312 UTC

.section .text
.align 8
_c1ra6:
_c1ra6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1rb1
_c1raj:
	movq $block_c1rah_info,(%rbp)
	movq 80(%rbp),%rsi
	movq 96(%rbp),%r14
	jmp GHC.Real.even_entry
_u1rb1:
	addq $8,%rbp
	jmp _s1jx3
	.size _c1ra6, .-_c1ra6


==================== Asm code ====================
2018-03-16 15:56:06.063979431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ra6_info:
	.quad	_c1ra6
	.quad	12
	.quad	-4294967266
	.quad	u1rbC_srtd


==================== Asm code ====================
2018-03-16 15:56:06.06466993 UTC

.section .text
.align 8
_s1jx3:
_s1jx3:
	movq $block_c1r9B_info,-8(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
	.size _s1jx3, .-_s1jx3


==================== Asm code ====================
2018-03-16 15:56:06.065325026 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbD_srtd:
	.quad	S1jKw_srt+736
	.quad	35
	.quad	17179869185


==================== Asm code ====================
2018-03-16 15:56:06.06597767 UTC

.section .text
.align 8
_c1r9B:
_c1r9B:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1rb4
_c1r9N:
	movq $block_c1r9L_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
_u1rb4:
	addq $104,%rbp
	jmp _c1r9T
	.size _c1r9B, .-_c1r9B


==================== Asm code ====================
2018-03-16 15:56:06.066585057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r9B_info:
	.quad	_c1r9B
	.quad	5132
	.quad	-4294967266
	.quad	u1rbD_srtd


==================== Asm code ====================
2018-03-16 15:56:06.067151949 UTC

.section .data.rel.ro
.align 8
.align 1
u1rbE_srtd:
	.quad	S1jKw_srt+736
	.quad	35
	.quad	17179869185


==================== Asm code ====================
2018-03-16 15:56:06.067801815 UTC

.section .text
.align 8
_c1r9L:
_c1r9L:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1rb5
_u1rb6:
	addq $8,%rbp
	jmp _s1jwX
_u1rb5:
	addq $104,%rbp
	jmp _c1r9T
	.size _c1r9L, .-_c1r9L


==================== Asm code ====================
2018-03-16 15:56:06.068380066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r9L_info:
	.quad	_c1r9L
	.quad	7948
	.quad	-4294967266
	.quad	u1rbE_srtd


==================== Asm code ====================
2018-03-16 15:56:06.069011825 UTC

.section .text
.align 8
_c1r9T:
_c1r9T:
	movl $GHC.Real.$fRealFracRatio1_closure,%ebx
	jmp stg_ap_0_fast
	.size _c1r9T, .-_c1r9T


==================== Asm code ====================
2018-03-16 15:56:06.069673335 UTC

.section .text
.align 8
_c1rah:
_c1rah:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1rb2
_u1rb3:
	addq $80,%rbp
	jmp _c1raO
_u1rb2:
	addq $8,%rbp
	jmp _s1jwX
	.size _c1rah, .-_c1rah


==================== Asm code ====================
2018-03-16 15:56:06.07024736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rah_info:
	.quad	_c1rah
	.quad	7948
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.070849605 UTC

.section .text
.align 8
_s1jwX:
_s1jwX:
	movq $block_c1r8w_info,-8(%rbp)
	movq 88(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1jwX, .-_s1jwX


==================== Asm code ====================
2018-03-16 15:56:06.07147448 UTC

.section .text
.align 8
_c1r8w:
_c1r8w:
	movq $block_c1r8A_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1r8w, .-_c1r8w


==================== Asm code ====================
2018-03-16 15:56:06.071991996 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8w_info:
	.quad	_c1r8w
	.quad	139020
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.07266243 UTC

.section .text
.align 8
_c1r8A:
_c1r8A:
	movq 72(%rbp),%rax
	movq $block_c1r8E_info,72(%rbp)
	movq 8(%rbp),%r9
	movq 16(%rbp),%r8
	movq 64(%rbp),%rdi
	movq %rax,%rsi
	movq 88(%rbp),%r14
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1r8A, .-_c1r8A


==================== Asm code ====================
2018-03-16 15:56:06.073315291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8A_info:
	.quad	_c1r8A
	.quad	139020
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.074173273 UTC

.section .text
.align 8
_c1r8E:
_c1r8E:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1r9q
_c1r9u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r9x
_c1r9w:
	movq $sat_s1jx2_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.-_entry
_c1r9x:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1r9q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1r9x
_c1r9s:
	movq $sat_s1jx1_info,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.+_entry
	.size _c1r8E, .-_c1r8E


==================== Asm code ====================
2018-03-16 15:56:06.074939159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1r8E_info:
	.quad	_c1r8E
	.quad	131
	.quad	4294967326
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.07556194 UTC

.section .text
.align 8
_c1raO:
_c1raO:
	movq (%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1raO, .-_c1raO


==================== Asm code ====================
2018-03-16 15:56:06.078805884 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cround_closure
.type GHC.Real.$fRealFracRatio_$cround_closure, @object
GHC.Real.$fRealFracRatio_$cround_closure:
	.quad	GHC.Real.$fRealFracRatio_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.079600477 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cround_entry
.type GHC.Real.$fRealFracRatio_$cround_entry, @object
GHC.Real.$fRealFracRatio_$cround_entry:
_c1rek:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rel
_c1rem:
	movq $block_c1reh_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1reh
_c1rei:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rel:
	movl $GHC.Real.$fRealFracRatio_$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cround_entry, .-GHC.Real.$fRealFracRatio_$cround_entry


==================== Asm code ====================
2018-03-16 15:56:06.08027866 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cround_info
.type GHC.Real.$fRealFracRatio_$cround_info, @object
GHC.Real.$fRealFracRatio_$cround_info:
	.quad	GHC.Real.$fRealFracRatio_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1200


==================== Asm code ====================
2018-03-16 15:56:06.080913997 UTC

.section .text
.align 8
_c1reh:
_c1reh:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cround_entry
	.size _c1reh, .-_c1reh


==================== Asm code ====================
2018-03-16 15:56:06.081565103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1reh_info:
	.quad	_c1reh
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1200


==================== Asm code ====================
2018-03-16 15:56:06.087586632 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_closure
.type GHC.Real.$fRealFracRatio_$s$ctruncate_closure, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.088375784 UTC

.section .text
.align 8
sat_s1jxt_entry:
_c1reS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1reT
_c1reU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1reN_info,-40(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1reT:
	jmp *-16(%r13)
	.size sat_s1jxt_entry, .-sat_s1jxt_entry


==================== Asm code ====================
2018-03-16 15:56:06.08900757 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxt_info:
	.quad	sat_s1jxt_entry
	.quad	2
	.quad	12884901906
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.08973601 UTC

.section .text
.align 8
_c1reN:
_c1reN:
	cmpq $1,%rbx
	je _c1reR
_c1reQ:
	movq 16(%rbp),%rax
	movq $block_c1reX_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c1reR:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1reN, .-_c1reN


==================== Asm code ====================
2018-03-16 15:56:06.090344314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1reN_info:
	.quad	_c1reN
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.090956731 UTC

.section .text
.align 8
_c1reX:
_c1reX:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1reX, .-_c1reX


==================== Asm code ====================
2018-03-16 15:56:06.09151545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1reX_info:
	.quad	_c1reX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.092234886 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_entry
.type GHC.Real.$fRealFracRatio_$s$ctruncate_entry, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_entry:
_c1rf4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rfa
_c1rfb:
	movq $block_c1reE_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1reE
_c1reF:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rfa:
	movl $GHC.Real.$fRealFracRatio_$s$ctruncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$ctruncate_entry, .-GHC.Real.$fRealFracRatio_$s$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:56:06.092875016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_info
.type GHC.Real.$fRealFracRatio_$s$ctruncate_info, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_info:
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.093679787 UTC

.section .text
.align 8
_c1reE:
_c1reE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rfe
_c1rfd:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s1jxt_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1rf5_info,(%rbp)
	movq 8(%rbp),%r14
	leaq -24(%r12),%rax
	movq %rax,8(%rbp)
	jmp GHC.Real.$p1Integral_entry
_c1rfe:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1reE, .-_c1reE


==================== Asm code ====================
2018-03-16 15:56:06.094357864 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1reE_info:
	.quad	_c1reE
	.quad	1
	.quad	12884901918
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.094958755 UTC

.section .text
.align 8
_c1rf5:
_c1rf5:
	movq $block_c1rf9_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1rf5, .-_c1rf5


==================== Asm code ====================
2018-03-16 15:56:06.095511568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rf5_info:
	.quad	_c1rf5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.096133262 UTC

.section .text
.align 8
_c1rf9:
_c1rf9:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Num.fromInteger_entry
	.size _c1rf9, .-_c1rf9


==================== Asm code ====================
2018-03-16 15:56:06.096657597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rf9_info:
	.quad	_c1rf9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.100675457 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$ctruncate_closure
.type GHC.Real.$fRealFracRatio_$ctruncate_closure, @object
GHC.Real.$fRealFracRatio_$ctruncate_closure:
	.quad	GHC.Real.$fRealFracRatio_$ctruncate_info


==================== Asm code ====================
2018-03-16 15:56:06.101590153 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$ctruncate_entry
.type GHC.Real.$fRealFracRatio_$ctruncate_entry, @object
GHC.Real.$fRealFracRatio_$ctruncate_entry:
_c1rfV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rfZ
_c1rg0:
	movq $block_c1rfS_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1rfS
_c1rfT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rfZ:
	movl $GHC.Real.$fRealFracRatio_$ctruncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$ctruncate_entry, .-GHC.Real.$fRealFracRatio_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:56:06.102273546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$ctruncate_info
.type GHC.Real.$fRealFracRatio_$ctruncate_info, @object
GHC.Real.$fRealFracRatio_$ctruncate_info:
	.quad	GHC.Real.$fRealFracRatio_$ctruncate_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:06.102919894 UTC

.section .text
.align 8
_c1rfS:
_c1rfS:
	movq 16(%rbp),%rax
	movq $block_c1rfY_info,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
	.size _c1rfS, .-_c1rfS


==================== Asm code ====================
2018-03-16 15:56:06.103516008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rfS_info:
	.quad	_c1rfS
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.104107807 UTC

.section .text
.align 8
_c1rfY:
_c1rfY:
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1rfY, .-_c1rfY


==================== Asm code ====================
2018-03-16 15:56:06.104670521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rfY_info:
	.quad	_c1rfY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.106576518 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure
.type GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure, @object
GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Real.$fRealFracRatio_$s$fRealRatio_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cround_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.112960356 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_closure
.type GHC.Real.$fRealFracRatio_closure, @object
GHC.Real.$fRealFracRatio_closure:
	.quad	GHC.Real.$fRealFracRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.114304 UTC

.section .text
.align 8
sat_s1jxK_entry:
_c1rgr:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cfloor_entry
	.size sat_s1jxK_entry, .-sat_s1jxK_entry


==================== Asm code ====================
2018-03-16 15:56:06.114858404 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxK_info:
	.quad	sat_s1jxK_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+1160


==================== Asm code ====================
2018-03-16 15:56:06.115507122 UTC

.section .text
.align 8
sat_s1jxJ_entry:
_c1rgz:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cceiling_entry
	.size sat_s1jxJ_entry, .-sat_s1jxJ_entry


==================== Asm code ====================
2018-03-16 15:56:06.116087516 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxJ_info:
	.quad	sat_s1jxJ_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+1128


==================== Asm code ====================
2018-03-16 15:56:06.116726846 UTC

.section .text
.align 8
sat_s1jxI_entry:
_c1rgH:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cround_entry
	.size sat_s1jxI_entry, .-sat_s1jxI_entry


==================== Asm code ====================
2018-03-16 15:56:06.11840788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxI_info:
	.quad	sat_s1jxI_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1jKw_srt+1208


==================== Asm code ====================
2018-03-16 15:56:06.119016808 UTC

.section .text
.align 8
sat_s1jxH_entry:
_c1rgP:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$ctruncate_entry
	.size sat_s1jxH_entry, .-sat_s1jxH_entry


==================== Asm code ====================
2018-03-16 15:56:06.119513616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxH_info:
	.quad	sat_s1jxH_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.120134313 UTC

.section .text
.align 8
sat_s1jxG_entry:
_c1rgX:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cproperFraction_entry
	.size sat_s1jxG_entry, .-sat_s1jxG_entry


==================== Asm code ====================
2018-03-16 15:56:06.120689355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxG_info:
	.quad	sat_s1jxG_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.121434555 UTC

.section .text
.align 8
sat_s1jxF_entry:
_c1rh4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rh5
_c1rh6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1rh5:
	jmp *-16(%r13)
	.size sat_s1jxF_entry, .-sat_s1jxF_entry


==================== Asm code ====================
2018-03-16 15:56:06.122018423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxF_info:
	.quad	sat_s1jxF_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:06.122708221 UTC

.section .text
.align 8
sat_s1jxE_entry:
_c1rhb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rhc
_c1rhd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fRealRatio_entry
_c1rhc:
	jmp *-16(%r13)
	.size sat_s1jxE_entry, .-sat_s1jxE_entry


==================== Asm code ====================
2018-03-16 15:56:06.123318894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jxE_info:
	.quad	sat_s1jxE_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1096


==================== Asm code ====================
2018-03-16 15:56:06.12409105 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_entry
.type GHC.Real.$fRealFracRatio_entry, @object
GHC.Real.$fRealFracRatio_entry:
_c1rhf:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c1rhj
_c1rhi:
	movq $sat_s1jxK_info,-184(%r12)
	movq %r14,-176(%r12)
	movq $sat_s1jxJ_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s1jxI_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s1jxH_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s1jxG_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s1jxF_info,-104(%r12)
	movq %r14,-88(%r12)
	movq $sat_s1jxE_info,-80(%r12)
	movq %r14,-64(%r12)
	movq $GHC.Real.C:RealFrac_con_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -118(%r12),%rax
	movq %rax,-32(%r12)
	leaq -134(%r12),%rax
	movq %rax,-24(%r12)
	leaq -150(%r12),%rax
	movq %rax,-16(%r12)
	leaq -166(%r12),%rax
	movq %rax,-8(%r12)
	leaq -182(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rhj:
	movq $192,904(%r13)
	movl $GHC.Real.$fRealFracRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_entry, .-GHC.Real.$fRealFracRatio_entry


==================== Asm code ====================
2018-03-16 15:56:06.124872961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_info
.type GHC.Real.$fRealFracRatio_info, @object
GHC.Real.$fRealFracRatio_info:
	.quad	GHC.Real.$fRealFracRatio_entry
	.quad	0
	.quad	76636239628861454
	.quad	4294967301
	.quad	S1jKw_srt+1048


==================== Asm code ====================
2018-03-16 15:56:06.13197321 UTC

.section .data
.align 8
.align 1
g_r1j3N_closure:
	.quad	g_r1j3N_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.132553642 UTC

.section .data.rel.ro
.align 8
.align 1
u1riW_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:06.13344771 UTC

.section .text
.align 8
g_r1j3N_entry:
_c1rhZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ri0
_u1riQ:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c1rhU
_c1ri0:
	movl $g_r1j3N_closure,%ebx
	jmp *-8(%r13)
	.size g_r1j3N_entry, .-g_r1j3N_entry


==================== Asm code ====================
2018-03-16 15:56:06.134022138 UTC

.section .data.rel.ro
.align 8
.align 1
g_r1j3N_info:
	.quad	g_r1j3N_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1riW_srtd


==================== Asm code ====================
2018-03-16 15:56:06.134665287 UTC

.section .text
.align 8
_c1rhU:
_c1rhU:
	movq $block_c1rhX_info,-8(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.remInteger_entry
	.size _c1rhU, .-_c1rhU


==================== Asm code ====================
2018-03-16 15:56:06.135288603 UTC

.section .data.rel.ro
.align 8
.align 1
u1riX_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.135929674 UTC

.section .text
.align 8
_c1rhX:
_c1rhX:
	movq $block_c1ri4_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1rhX, .-_c1rhX


==================== Asm code ====================
2018-03-16 15:56:06.136572436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rhX_info:
	.quad	_c1rhX
	.quad	3
	.quad	-4294967266
	.quad	u1riX_srtd


==================== Asm code ====================
2018-03-16 15:56:06.13715618 UTC

.section .data.rel.ro
.align 8
.align 1
u1riY_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.137942988 UTC

.section .text
.align 8
_c1ri4:
_c1ri4:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1riK
_c1ric:
	movq $block_c1ri9_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c1riK:
	movq $block_c1riE_info,(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.quotInteger_entry
	.size _c1ri4, .-_c1ri4


==================== Asm code ====================
2018-03-16 15:56:06.138527439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ri4_info:
	.quad	_c1ri4
	.quad	3
	.quad	-4294967266
	.quad	u1riY_srtd


==================== Asm code ====================
2018-03-16 15:56:06.139102072 UTC

.section .data.rel.ro
.align 8
.align 1
u1riZ_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.139773096 UTC

.section .text
.align 8
_c1riE:
_c1riE:
	movq 8(%rbp),%rax
	movq $block_c1riI_info,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1riE, .-_c1riE


==================== Asm code ====================
2018-03-16 15:56:06.140397521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1riE_info:
	.quad	_c1riE
	.quad	131
	.quad	-4294967266
	.quad	u1riZ_srtd


==================== Asm code ====================
2018-03-16 15:56:06.141583039 UTC

.section .data.rel.ro
.align 8
.align 1
u1rj0_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.142277949 UTC

.section .text
.align 8
_c1riI:
_c1riI:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1rhU
	.size _c1riI, .-_c1riI


==================== Asm code ====================
2018-03-16 15:56:06.142833362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1riI_info:
	.quad	_c1riI
	.quad	2
	.quad	-4294967266
	.quad	u1rj0_srtd


==================== Asm code ====================
2018-03-16 15:56:06.143316461 UTC

.section .data.rel.ro
.align 8
.align 1
u1rj1_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.144028242 UTC

.section .text
.align 8
_c1ri9:
_c1ri9:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _c1riB
_c1rir:
	movq $block_c1rig_info,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp GHC.Integer.Type.timesInteger_entry
_c1riB:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1ri9, .-_c1ri9


==================== Asm code ====================
2018-03-16 15:56:06.14465783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ri9_info:
	.quad	_c1ri9
	.quad	3
	.quad	-4294967266
	.quad	u1rj1_srtd


==================== Asm code ====================
2018-03-16 15:56:06.145198192 UTC

.section .data.rel.ro
.align 8
.align 1
u1rj2_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.145868913 UTC

.section .text
.align 8
_c1rig:
_c1rig:
	movq $block_c1rik_info,(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq 16(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp GHC.Integer.Type.quotInteger_entry
	.size _c1rig, .-_c1rig


==================== Asm code ====================
2018-03-16 15:56:06.14645758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rig_info:
	.quad	_c1rig
	.quad	259
	.quad	-4294967266
	.quad	u1rj2_srtd


==================== Asm code ====================
2018-03-16 15:56:06.146969491 UTC

.section .data.rel.ro
.align 8
.align 1
u1rj3_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.147594394 UTC

.section .text
.align 8
_c1rik:
_c1rik:
	movq 8(%rbp),%rax
	movq $block_c1rio_info,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rik, .-_c1rik


==================== Asm code ====================
2018-03-16 15:56:06.148182423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rik_info:
	.quad	_c1rik
	.quad	131
	.quad	-4294967266
	.quad	u1rj3_srtd


==================== Asm code ====================
2018-03-16 15:56:06.14871935 UTC

.section .data.rel.ro
.align 8
.align 1
u1rj4_srtd:
	.quad	S1jKw_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:06.149372859 UTC

.section .text
.align 8
_c1rio:
_c1rio:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1rhU
	.size _c1rio, .-_c1rio


==================== Asm code ====================
2018-03-16 15:56:06.149941471 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rio_info:
	.quad	_c1rio
	.quad	2
	.quad	-4294967266
	.quad	u1rj4_srtd


==================== Asm code ====================
2018-03-16 15:56:06.156222115 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f_closure
.type GHC.Real.^_f_closure, @object
GHC.Real.^_f_closure:
	.quad	GHC.Real.^_f_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.156797734 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkJ_srtd:
	.quad	S1jKw_srt
	.quad	158
	.quad	1
	.quad	4611686018427388416
	.quad	838860800


==================== Asm code ====================
2018-03-16 15:56:06.157648382 UTC

.section .text
.align 8
.globl GHC.Real.^_f_entry
.type GHC.Real.^_f_entry, @object
GHC.Real.^_f_entry:
_c1rjT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rjU
_u1rkF:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1rjO
_c1rjU:
	movl $GHC.Real.^_f_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_f_entry, .-GHC.Real.^_f_entry


==================== Asm code ====================
2018-03-16 15:56:06.158270417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f_info
.type GHC.Real.^_f_info, @object
GHC.Real.^_f_info:
	.quad	GHC.Real.^_f_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1rkJ_srtd


==================== Asm code ====================
2018-03-16 15:56:06.158921768 UTC

.section .text
.align 8
_c1rjO:
_c1rjO:
	movq $block_c1rjR_info,-8(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.remInteger_entry
	.size _c1rjO, .-_c1rjO


==================== Asm code ====================
2018-03-16 15:56:06.159517582 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkK_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:06.16014761 UTC

.section .text
.align 8
_c1rjR:
_c1rjR:
	movq $block_c1rjY_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c1rjR, .-_c1rjR


==================== Asm code ====================
2018-03-16 15:56:06.160695397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rjR_info:
	.quad	_c1rjR
	.quad	2
	.quad	-4294967266
	.quad	u1rkK_srtd


==================== Asm code ====================
2018-03-16 15:56:06.161228041 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkL_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:06.161991791 UTC

.section .text
.align 8
_c1rjY:
_c1rjY:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1rkz
_c1rk6:
	movq $block_c1rk3_info,(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c1rkz:
	movq $block_c1rkt_info,(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.quotInteger_entry
	.size _c1rjY, .-_c1rjY


==================== Asm code ====================
2018-03-16 15:56:06.162628847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rjY_info:
	.quad	_c1rjY
	.quad	2
	.quad	-4294967266
	.quad	u1rkL_srtd


==================== Asm code ====================
2018-03-16 15:56:06.163214714 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkM_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:06.163883314 UTC

.section .text
.align 8
_c1rkt:
_c1rkt:
	movq 8(%rbp),%rax
	movq $block_c1rkx_info,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rkt, .-_c1rkt


==================== Asm code ====================
2018-03-16 15:56:06.164474209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rkt_info:
	.quad	_c1rkt
	.quad	130
	.quad	-4294967266
	.quad	u1rkM_srtd


==================== Asm code ====================
2018-03-16 15:56:06.16505173 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkN_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:06.165756937 UTC

.section .text
.align 8
_c1rkx:
_c1rkx:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	jmp _c1rjO
	.size _c1rkx, .-_c1rkx


==================== Asm code ====================
2018-03-16 15:56:06.166843488 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rkx_info:
	.quad	_c1rkx
	.quad	1
	.quad	-4294967266
	.quad	u1rkN_srtd


==================== Asm code ====================
2018-03-16 15:56:06.167384112 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkO_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	512
	.quad	268435456


==================== Asm code ====================
2018-03-16 15:56:06.168107071 UTC

.section .text
.align 8
_c1rk3:
_c1rk3:
	cmpq $1,%rbx
	je _c1rkq
_c1rkh:
	movq $block_c1rka_info,(%rbp)
	movl $GHC.Real.even2_closure,%esi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.quotInteger_entry
_c1rkq:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rk3, .-_c1rk3


==================== Asm code ====================
2018-03-16 15:56:06.168743545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rk3_info:
	.quad	_c1rk3
	.quad	2
	.quad	-4294967266
	.quad	u1rkO_srtd


==================== Asm code ====================
2018-03-16 15:56:06.16933124 UTC

.section .data.rel.ro
.align 8
.align 1
u1rkP_srtd:
	.quad	S1jKw_srt
	.quad	157
	.quad	1
	.quad	0
	.quad	268435456


==================== Asm code ====================
2018-03-16 15:56:06.16996647 UTC

.section .text
.align 8
_c1rka:
_c1rka:
	movq $block_c1rke_info,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rka, .-_c1rka


==================== Asm code ====================
2018-03-16 15:56:06.170539176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rka_info:
	.quad	_c1rka
	.quad	130
	.quad	-4294967266
	.quad	u1rkP_srtd


==================== Asm code ====================
2018-03-16 15:56:06.17113215 UTC

.section .text
.align 8
_c1rke:
_c1rke:
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp g_r1j3N_entry
	.size _c1rke, .-_c1rke


==================== Asm code ====================
2018-03-16 15:56:06.171675765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rke_info:
	.quad	_c1rke
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1248


==================== Asm code ====================
2018-03-16 15:56:06.174329662 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_r1j3O_bytes:
	.asciz "Negative exponent"


==================== Asm code ====================
2018-03-16 15:56:06.17739689 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^1_closure
.type GHC.Real.^1_closure, @object
GHC.Real.^1_closure:
	.quad	GHC.Real.^1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.178316548 UTC

.section .text
.align 8
.globl GHC.Real.^1_entry
.type GHC.Real.^1_entry, @object
GHC.Real.^1_entry:
_c1rlB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rlC
_c1rlD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1rly
_c1rlx:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1rlz_info,-24(%rbp)
	movl $lvl5_r1j3O_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c1rlC:
	jmp *-16(%r13)
_c1rly:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.^1_entry, .-GHC.Real.^1_entry


==================== Asm code ====================
2018-03-16 15:56:06.179070142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^1_info
.type GHC.Real.^1_info, @object
GHC.Real.^1_info:
	.quad	GHC.Real.^1_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+1264


==================== Asm code ====================
2018-03-16 15:56:06.179711427 UTC

.section .text
.align 8
_c1rlz:
_c1rlz:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c1rlz, .-_c1rlz


==================== Asm code ====================
2018-03-16 15:56:06.180311738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rlz_info:
	.quad	_c1rlz
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1264


==================== Asm code ====================
2018-03-16 15:56:06.184148164 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^_closure
.type GHC.Real.^_$s^_closure, @object
GHC.Real.^_$s^_closure:
	.quad	GHC.Real.^_$s^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.184744671 UTC

.section .data.rel.ro
.align 8
.align 1
u1rmk_srtd:
	.quad	S1jKw_srt+1008
	.quad	35
	.quad	28051505153


==================== Asm code ====================
2018-03-16 15:56:06.185641645 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^_entry
.type GHC.Real.^_$s^_entry, @object
GHC.Real.^_$s^_entry:
_c1rm0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rm1
_c1rm2:
	movq $block_c1rlV_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c1rm1:
	movl $GHC.Real.^_$s^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^_entry, .-GHC.Real.^_$s^_entry


==================== Asm code ====================
2018-03-16 15:56:06.186299336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^_info
.type GHC.Real.^_$s^_info, @object
GHC.Real.^_$s^_info:
	.quad	GHC.Real.^_$s^_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1rmk_srtd


==================== Asm code ====================
2018-03-16 15:56:06.186862461 UTC

.section .data.rel.ro
.align 8
.align 1
u1rml_srtd:
	.quad	S1jKw_srt+1008
	.quad	35
	.quad	19461570561


==================== Asm code ====================
2018-03-16 15:56:06.187585316 UTC

.section .text
.align 8
_c1rlV:
_c1rlV:
	cmpq $1,%rbx
	je _c1rlZ
_c1rlY:
	movq $block_c1rm5_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c1rlZ:
	movl $GHC.Real.^1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rlV, .-_c1rlV


==================== Asm code ====================
2018-03-16 15:56:06.18820298 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rlV_info:
	.quad	_c1rlV
	.quad	2
	.quad	-4294967266
	.quad	u1rml_srtd


==================== Asm code ====================
2018-03-16 15:56:06.188872229 UTC

.section .text
.align 8
_c1rm5:
_c1rm5:
	cmpq $1,%rbx
	je _c1rmg
_c1rmc:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.^_f_entry
_c1rmg:
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rm5, .-_c1rm5


==================== Asm code ====================
2018-03-16 15:56:06.189567415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rm5_info:
	.quad	_c1rm5
	.quad	2
	.quad	-9223372032559808482
	.quad	S1jKw_srt+1008


==================== Asm code ====================
2018-03-16 15:56:06.193580217 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfromEnum_closure
.type GHC.Real.$w$s$cfromEnum_closure, @object
GHC.Real.$w$s$cfromEnum_closure:
	.quad	GHC.Real.$w$s$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.194517685 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfromEnum_entry
.type GHC.Real.$w$s$cfromEnum_entry, @object
GHC.Real.$w$s$cfromEnum_entry:
_c1rmK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rmL
_c1rmM:
	movq $block_c1rmF_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Real.even1_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c1rmL:
	movl $GHC.Real.$w$s$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfromEnum_entry, .-GHC.Real.$w$s$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:06.195241193 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfromEnum_info
.type GHC.Real.$w$s$cfromEnum_info, @object
GHC.Real.$w$s$cfromEnum_info:
	.quad	GHC.Real.$w$s$cfromEnum_entry
	.quad	0
	.quad	2211908157454
	.quad	8589934607
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.195972546 UTC

.section .text
.align 8
_c1rmF:
_c1rmF:
	cmpq $1,%rbx
	je _c1rmJ
_c1rmI:
	movq 16(%rbp),%rax
	movq $block_c1rmP_info,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c1rmJ:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c1rmF, .-_c1rmF


==================== Asm code ====================
2018-03-16 15:56:06.196594767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rmF_info:
	.quad	_c1rmF
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.197207316 UTC

.section .text
.align 8
_c1rmP:
_c1rmP:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c1rmP, .-_c1rmP


==================== Asm code ====================
2018-03-16 15:56:06.198167877 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rmP_info:
	.quad	_c1rmP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.201587958 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_closure
.type GHC.Real.$fEnumRatio_$s$cfromEnum_closure, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.202400892 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_entry
.type GHC.Real.$fEnumRatio_$s$cfromEnum_entry, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_entry:
_c1rne:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rnm
_c1rnn:
	movq $block_c1rnb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1rnb
_c1rnc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rnm:
	movl $GHC.Real.$fEnumRatio_$s$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cfromEnum_entry, .-GHC.Real.$fEnumRatio_$s$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:06.203061824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_info
.type GHC.Real.$fEnumRatio_$s$cfromEnum_info, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_info:
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1jKw_srt+1288


==================== Asm code ====================
2018-03-16 15:56:06.203694071 UTC

.section .text
.align 8
_c1rnb:
_c1rnb:
	movq $block_c1rnh_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cfromEnum_entry
	.size _c1rnb, .-_c1rnb


==================== Asm code ====================
2018-03-16 15:56:06.204270196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rnb_info:
	.quad	_c1rnb
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1288


==================== Asm code ====================
2018-03-16 15:56:06.204945817 UTC

.section .text
.align 8
_c1rnh:
_c1rnh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rnr
_c1rnq:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rnr:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1rnh, .-_c1rnh


==================== Asm code ====================
2018-03-16 15:56:06.205630882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rnh_info:
	.quad	_c1rnh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.210629764 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cfromEnum_closure
.type GHC.Real.$fEnumRatio_$cfromEnum_closure, @object
GHC.Real.$fEnumRatio_$cfromEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:56:06.211414764 UTC

.section .text
.align 8
sat_s1jyu_entry:
_c1rnV:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rnW
_c1rnX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1rnT_info,-24(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.quotRem_entry
_c1rnW:
	jmp *-16(%r13)
	.size sat_s1jyu_entry, .-sat_s1jyu_entry


==================== Asm code ====================
2018-03-16 15:56:06.212062067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyu_info:
	.quad	sat_s1jyu_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.212645144 UTC

.section .text
.align 8
_c1rnT:
_c1rnT:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c1rnT, .-_c1rnT


==================== Asm code ====================
2018-03-16 15:56:06.213202556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rnT_info:
	.quad	_c1rnT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.214005042 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cfromEnum_entry
.type GHC.Real.$fEnumRatio_$cfromEnum_entry, @object
GHC.Real.$fEnumRatio_$cfromEnum_entry:
_c1ro1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rob
_c1roc:
	movq $block_c1rnK_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rnK
_c1rnL:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rob:
	movl $GHC.Real.$fEnumRatio_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cfromEnum_entry, .-GHC.Real.$fEnumRatio_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:06.214707445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cfromEnum_info
.type GHC.Real.$fEnumRatio_$cfromEnum_info, @object
GHC.Real.$fEnumRatio_$cfromEnum_info:
	.quad	GHC.Real.$fEnumRatio_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.215456926 UTC

.section .text
.align 8
_c1rnK:
_c1rnK:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1rof
_c1roe:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s1jyu_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1ro2_info,8(%rbp)
	movq %rcx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	leaq -32(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.toInteger_entry
_c1rof:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rnK, .-_c1rnK


==================== Asm code ====================
2018-03-16 15:56:06.216164264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rnK_info:
	.quad	_c1rnK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.21675633 UTC

.section .text
.align 8
_c1ro2:
_c1ro2:
	movq $block_c1ro6_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c1ro2, .-_c1ro2


==================== Asm code ====================
2018-03-16 15:56:06.218571313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ro2_info:
	.quad	_c1ro2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.219311364 UTC

.section .text
.align 8
_c1ro6:
_c1ro6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1roj
_c1roi:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1roj:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1ro6, .-_c1ro6


==================== Asm code ====================
2018-03-16 15:56:06.219949126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ro6_info:
	.quad	_c1ro6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.222308933 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioPrec1_closure
.type GHC.Real.ratioPrec1_closure, @object
GHC.Real.ratioPrec1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:56:06.223954702 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$fShowRatio2_bytes
.type GHC.Real.$fShowRatio2_bytes, @object
GHC.Real.$fShowRatio2_bytes:
	.asciz " % "


==================== Asm code ====================
2018-03-16 15:56:06.233384779 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cshowsPrec_closure
.type GHC.Real.$w$s$cshowsPrec_closure, @object
GHC.Real.$w$s$cshowsPrec_closure:
	.quad	GHC.Real.$w$s$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.234122011 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshowsPrec_slow
.type GHC.Real.$w$s$cshowsPrec_slow, @object
GHC.Real.$w$s$cshowsPrec_slow:
_c1roO:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size GHC.Real.$w$s$cshowsPrec_slow, .-GHC.Real.$w$s$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:06.234938728 UTC

.section .text
.align 8
sat_s1jyF_entry:
_c1rp6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rp7
_c1rp8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1rp3_info,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_c1rp7:
	jmp *-16(%r13)
	.size sat_s1jyF_entry, .-sat_s1jyF_entry


==================== Asm code ====================
2018-03-16 15:56:06.235556349 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyF_info:
	.quad	sat_s1jyF_entry
	.quad	2
	.quad	4294967314
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.236277829 UTC

.section .text
.align 8
_c1rp3:
_c1rp3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rpb
_c1rpa:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rpb:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rp3, .-_c1rp3


==================== Asm code ====================
2018-03-16 15:56:06.236900135 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rp3_info:
	.quad	_c1rp3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.237770585 UTC

.section .text
.align 8
sat_s1jyG_entry:
_c1rpc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rpd
_c1rpe:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rpg
_c1rpf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jyF_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rpg:
	movq $32,904(%r13)
_c1rpd:
	jmp *-16(%r13)
	.size sat_s1jyG_entry, .-sat_s1jyG_entry


==================== Asm code ====================
2018-03-16 15:56:06.238450987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyG_info:
	.quad	sat_s1jyG_entry
	.quad	2
	.quad	4294967314
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.239246312 UTC

.section .text
.align 8
sat_s1jyL_entry:
_c1rpy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rpz
_c1rpA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rpC
_c1rpB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1rpv_info,-24(%rbp)
	leaq -14(%r12),%rdi
	movq %rax,%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_c1rpC:
	movq $24,904(%r13)
_c1rpz:
	jmp *-16(%r13)
	.size sat_s1jyL_entry, .-sat_s1jyL_entry


==================== Asm code ====================
2018-03-16 15:56:06.239964229 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyL_info:
	.quad	sat_s1jyL_entry
	.quad	2
	.quad	4294967314
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.240662222 UTC

.section .text
.align 8
_c1rpv:
_c1rpv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rpF
_c1rpE:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rpF:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rpv, .-_c1rpv


==================== Asm code ====================
2018-03-16 15:56:06.241810601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rpv_info:
	.quad	_c1rpv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.242577068 UTC

.section .text
.align 8
sat_s1jyM_entry:
_c1rpG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rpH
_c1rpI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rpK
_c1rpJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jyL_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rpK:
	movq $32,904(%r13)
_c1rpH:
	jmp *-16(%r13)
	.size sat_s1jyM_entry, .-sat_s1jyM_entry


==================== Asm code ====================
2018-03-16 15:56:06.243265452 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyM_info:
	.quad	sat_s1jyM_entry
	.quad	2
	.quad	4294967314
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.244050791 UTC

.section .text
.align 8
sat_s1jyQ_entry:
_c1rpO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rpP
_c1rpQ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rpS
_c1rpR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jyM_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c1rpL_info,-24(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_c1rpS:
	movq $32,904(%r13)
_c1rpP:
	jmp *-16(%r13)
	.size sat_s1jyQ_entry, .-sat_s1jyQ_entry


==================== Asm code ====================
2018-03-16 15:56:06.244802019 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jyQ_info:
	.quad	sat_s1jyQ_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.245592691 UTC

.section .text
.align 8
_c1rpL:
_c1rpL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rpV
_c1rpU:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rpV:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rpL, .-_c1rpL


==================== Asm code ====================
2018-03-16 15:56:06.246257954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rpL_info:
	.quad	_c1rpL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.247129594 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshowsPrec_entry
.type GHC.Real.$w$s$cshowsPrec_entry, @object
GHC.Real.$w$s$cshowsPrec_entry:
_c1rpZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1rq3
_c1rq2:
	cmpq $7,%r14
	jle _c1rpX
_c1rpY:
	movq $sat_s1jyQ_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -32(%r12),%r14
	movl $GHC.Show.$fShow(,)4_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rq3:
	movq $40,904(%r13)
	movl $GHC.Real.$w$s$cshowsPrec_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c1rpX:
	movq $sat_s1jyG_info,-32(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	leaq -32(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movl $8,%r14d
	jmp GHC.Show.$w$cshowsPrec4_entry
	.size GHC.Real.$w$s$cshowsPrec_entry, .-GHC.Real.$w$s$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:06.248386707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cshowsPrec_info
.type GHC.Real.$w$s$cshowsPrec_info, @object
GHC.Real.$w$s$cshowsPrec_info:
	.quad	GHC.Real.$w$s$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	17179869184
	.quad	S1jKw_srt+1304
	.quad	68
	.quad	GHC.Real.$w$s$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:06.252675156 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_closure
.type GHC.Real.$fShowRatio_$s$cshowsPrec_closure, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.253588056 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_entry
.type GHC.Real.$fShowRatio_$s$cshowsPrec_entry, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_entry:
_c1rqO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rqZ
_c1rr0:
	movq $block_c1rqL_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1rqL
_c1rqM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rqZ:
	movl $GHC.Real.$fShowRatio_$s$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$s$cshowsPrec_entry, .-GHC.Real.$fShowRatio_$s$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:06.254203129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_info
.type GHC.Real.$fShowRatio_$s$cshowsPrec_info, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_info:
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1312


==================== Asm code ====================
2018-03-16 15:56:06.254891829 UTC

.section .text
.align 8
_c1rqL:
_c1rqL:
	movq $block_c1rqR_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1rqR
_c1rqS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rqL, .-_c1rqL


==================== Asm code ====================
2018-03-16 15:56:06.255511286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rqL_info:
	.quad	_c1rqL
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1312


==================== Asm code ====================
2018-03-16 15:56:06.256176325 UTC

.section .text
.align 8
_c1rqR:
_c1rqR:
	movq 16(%rbp),%rax
	movq $block_c1rqW_info,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size _c1rqR, .-_c1rqR


==================== Asm code ====================
2018-03-16 15:56:06.256770868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rqR_info:
	.quad	_c1rqR
	.quad	66
	.quad	4294967326
	.quad	S1jKw_srt+1312


==================== Asm code ====================
2018-03-16 15:56:06.257520189 UTC

.section .text
.align 8
_c1rqW:
_c1rqW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rr5
_c1rr4:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rr5:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rqW, .-_c1rqW


==================== Asm code ====================
2018-03-16 15:56:06.258125356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rqW_info:
	.quad	_c1rqW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.267682374 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cshowsPrec_closure
.type GHC.Real.$w$cshowsPrec_closure, @object
GHC.Real.$w$cshowsPrec_closure:
	.quad	GHC.Real.$w$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:56:06.26842564 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshowsPrec_slow
.type GHC.Real.$w$cshowsPrec_slow, @object
GHC.Real.$w$cshowsPrec_slow:
_c1rrq:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size GHC.Real.$w$cshowsPrec_slow, .-GHC.Real.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:06.269272624 UTC

.section .text
.align 8
f_s1jz6_entry:
_c1rry:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rrz
_c1rrA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Real.ratioPrec1_closure+1,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Show.showsPrec_entry
_c1rrz:
	jmp *-16(%r13)
	.size f_s1jz6_entry, .-f_s1jz6_entry


==================== Asm code ====================
2018-03-16 15:56:06.269903382 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1jz6_info:
	.quad	f_s1jz6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.270642054 UTC

.section .text
.align 8
g1_s1jz7_entry:
_c1rrF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rrG
_c1rrH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq $GHC.Real.ratioPrec1_closure+1,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Show.showsPrec_entry
_c1rrG:
	jmp *-16(%r13)
	.size g1_s1jz7_entry, .-g1_s1jz7_entry


==================== Asm code ====================
2018-03-16 15:56:06.27132378 UTC

.section .data.rel.ro
.align 8
.align 1
g1_s1jz7_info:
	.quad	g1_s1jz7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.272108199 UTC

.section .text
.align 8
sat_s1jzb_entry:
_c1rrV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rrW
_c1rrX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rrZ
_c1rrY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rrZ:
	movq $32,904(%r13)
_c1rrW:
	jmp *-16(%r13)
	.size sat_s1jzb_entry, .-sat_s1jzb_entry


==================== Asm code ====================
2018-03-16 15:56:06.272808566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzb_info:
	.quad	sat_s1jzb_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.273598474 UTC

.section .text
.align 8
sat_s1jzc_entry:
_c1rs0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rs4
_c1rs3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s1jzb_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c1rs4:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s1jzc_entry, .-sat_s1jzc_entry


==================== Asm code ====================
2018-03-16 15:56:06.274292318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzc_info:
	.quad	sat_s1jzc_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.275635639 UTC

.section .text
.align 8
sat_s1jzf_entry:
_c1rso:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rsp
_c1rsq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rss
_c1rsr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c1rss:
	movq $24,904(%r13)
_c1rsp:
	jmp *-16(%r13)
	.size sat_s1jzf_entry, .-sat_s1jzf_entry


==================== Asm code ====================
2018-03-16 15:56:06.276390888 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzf_info:
	.quad	sat_s1jzf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.277166928 UTC

.section .text
.align 8
sat_s1jzg_entry:
_c1rst:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rsu
_c1rsv:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rsx
_c1rsw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jzf_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rsx:
	movq $32,904(%r13)
_c1rsu:
	jmp *-16(%r13)
	.size sat_s1jzg_entry, .-sat_s1jzg_entry


==================== Asm code ====================
2018-03-16 15:56:06.277874327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzg_info:
	.quad	sat_s1jzg_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.278621513 UTC

.section .text
.align 8
sat_s1jzh_entry:
_c1rsy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rsz
_c1rsA:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rsC
_c1rsB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jzg_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c1rsC:
	movq $32,904(%r13)
_c1rsz:
	jmp *-16(%r13)
	.size sat_s1jzh_entry, .-sat_s1jzh_entry


==================== Asm code ====================
2018-03-16 15:56:06.279343362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzh_info:
	.quad	sat_s1jzh_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.280093732 UTC

.section .text
.align 8
sat_s1jzi_entry:
_c1rsE:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1rsI
_c1rsH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s1jzh_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rsI:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s1jzi_entry, .-sat_s1jzi_entry


==================== Asm code ====================
2018-03-16 15:56:06.280763552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzi_info:
	.quad	sat_s1jzi_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.281600895 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshowsPrec_entry
.type GHC.Real.$w$cshowsPrec_entry, @object
GHC.Real.$w$cshowsPrec_entry:
_c1rsM:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1rsQ
_c1rsP:
	movq $f_s1jz6_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rdi,-56(%r12)
	movq $g1_s1jz7_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %r8,-24(%r12)
	leaq -80(%r12),%rax
	leaq -48(%r12),%rbx
	cmpq $7,%rsi
	jle _c1rsK
_c1rsL:
	movq $sat_s1jzi_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rsQ:
	movq $88,904(%r13)
	movl $GHC.Real.$w$cshowsPrec_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c1rsK:
	movq $sat_s1jzc_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.$w$cshowsPrec_entry, .-GHC.Real.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:06.282395139 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cshowsPrec_info
.type GHC.Real.$w$cshowsPrec_info, @object
GHC.Real.$w$cshowsPrec_info:
	.quad	GHC.Real.$w$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	17179869184
	.quad	0
	.quad	132
	.quad	GHC.Real.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:06.286038916 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowsPrec_closure
.type GHC.Real.$fShowRatio_$cshowsPrec_closure, @object
GHC.Real.$fShowRatio_$cshowsPrec_closure:
	.quad	GHC.Real.$fShowRatio_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:56:06.286863394 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshowsPrec_entry
.type GHC.Real.$fShowRatio_$cshowsPrec_entry, @object
GHC.Real.$fShowRatio_$cshowsPrec_entry:
_c1rtE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rtI
_c1rtJ:
	movq $block_c1rtB_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1rtB
_c1rtC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rtI:
	movl $GHC.Real.$fShowRatio_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshowsPrec_entry, .-GHC.Real.$fShowRatio_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:06.287489792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowsPrec_info
.type GHC.Real.$fShowRatio_$cshowsPrec_info, @object
GHC.Real.$fShowRatio_$cshowsPrec_info:
	.quad	GHC.Real.$fShowRatio_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:06.288143189 UTC

.section .text
.align 8
_c1rtB:
_c1rtB:
	movq $block_c1rtH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c1rtH
_c1rtL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rtB, .-_c1rtB


==================== Asm code ====================
2018-03-16 15:56:06.288727961 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rtB_info:
	.quad	_c1rtB
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.289440643 UTC

.section .text
.align 8
_c1rtH:
_c1rtH:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size _c1rtH, .-_c1rtH


==================== Asm code ====================
2018-03-16 15:56:06.290025655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rtH_info:
	.quad	_c1rtH
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.293718514 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio1_closure
.type GHC.Real.$fShowRatio1_closure, @object
GHC.Real.$fShowRatio1_closure:
	.quad	GHC.Real.$fShowRatio1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.294524545 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio1_entry
.type GHC.Real.$fShowRatio1_entry, @object
GHC.Real.$fShowRatio1_entry:
_c1ruc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rui
_c1ruj:
	movq $block_c1ru9_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1ru9
_c1rua:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rui:
	movl $GHC.Real.$fShowRatio1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio1_entry, .-GHC.Real.$fShowRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:06.295186861 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio1_info
.type GHC.Real.$fShowRatio1_info, @object
GHC.Real.$fShowRatio1_info:
	.quad	GHC.Real.$fShowRatio1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+1312


==================== Asm code ====================
2018-03-16 15:56:06.295938577 UTC

.section .text
.align 8
_c1ru9:
_c1ru9:
	movq 8(%rbp),%rax
	movq $block_c1ruf_info,8(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size _c1ru9, .-_c1ru9


==================== Asm code ====================
2018-03-16 15:56:06.296578567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ru9_info:
	.quad	_c1ru9
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1312


==================== Asm code ====================
2018-03-16 15:56:06.297698267 UTC

.section .text
.align 8
_c1ruf:
_c1ruf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1run
_c1rum:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1run:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1ruf, .-_c1ruf


==================== Asm code ====================
2018-03-16 15:56:06.298334253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ruf_info:
	.quad	_c1ruf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.300623901 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowList_closure
.type GHC.Real.$fShowRatio_$s$cshowList_closure, @object
GHC.Real.$fShowRatio_$s$cshowList_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.301805832 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshowList_entry
.type GHC.Real.$fShowRatio_$s$cshowList_entry, @object
GHC.Real.$fShowRatio_$s$cshowList_entry:
_c1ruG:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Real.$fShowRatio1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Real.$fShowRatio_$s$cshowList_entry, .-GHC.Real.$fShowRatio_$s$cshowList_entry


==================== Asm code ====================
2018-03-16 15:56:06.30241667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowList_info
.type GHC.Real.$fShowRatio_$s$cshowList_info, @object
GHC.Real.$fShowRatio_$s$cshowList_info:
	.quad	GHC.Real.$fShowRatio_$s$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S1jKw_srt+1328


==================== Asm code ====================
2018-03-16 15:56:06.306103322 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowList_closure
.type GHC.Real.$fShowRatio_$cshowList_closure, @object
GHC.Real.$fShowRatio_$cshowList_closure:
	.quad	GHC.Real.$fShowRatio_$cshowList_info


==================== Asm code ====================
2018-03-16 15:56:06.306902487 UTC

.section .text
.align 8
sat_s1jzI_entry:
_c1ruZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rv0
_c1rv1:
	movq $block_c1ruW_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1ruW
_c1ruX:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rv0:
	jmp *-8(%r13)
	.size sat_s1jzI_entry, .-sat_s1jzI_entry


==================== Asm code ====================
2018-03-16 15:56:06.307537055 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzI_info:
	.quad	sat_s1jzI_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.308151542 UTC

.section .text
.align 8
_c1ruW:
_c1ruW:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size _c1ruW, .-_c1ruW


==================== Asm code ====================
2018-03-16 15:56:06.308725798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ruW_info:
	.quad	_c1ruW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.309427531 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshowList_entry
.type GHC.Real.$fShowRatio_$cshowList_entry, @object
GHC.Real.$fShowRatio_$cshowList_entry:
_c1rv6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rva
_c1rv9:
	movq $sat_s1jzI_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.Show.showList___entry
_c1rva:
	movq $16,904(%r13)
	movl $GHC.Real.$fShowRatio_$cshowList_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshowList_entry, .-GHC.Real.$fShowRatio_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:56:06.310086561 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowList_info
.type GHC.Real.$fShowRatio_$cshowList_info, @object
GHC.Real.$fShowRatio_$cshowList_info:
	.quad	GHC.Real.$fShowRatio_$cshowList_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:06.314705195 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cshow_closure
.type GHC.Real.$w$s$cshow_closure, @object
GHC.Real.$w$s$cshow_closure:
	.quad	GHC.Real.$w$s$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.315482152 UTC

.section .text
.align 8
sat_s1jzO_entry:
_c1rvC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rvD
_c1rvE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1rvz_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_c1rvD:
	jmp *-16(%r13)
	.size sat_s1jzO_entry, .-sat_s1jzO_entry


==================== Asm code ====================
2018-03-16 15:56:06.31609122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzO_info:
	.quad	sat_s1jzO_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.316740253 UTC

.section .text
.align 8
_c1rvz:
_c1rvz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rvH
_c1rvG:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rvH:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rvz, .-_c1rvz


==================== Asm code ====================
2018-03-16 15:56:06.317369194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rvz_info:
	.quad	_c1rvz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.318115845 UTC

.section .text
.align 8
sat_s1jzP_entry:
_c1rvI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rvJ
_c1rvK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rvM
_c1rvL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s1jzO_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rvM:
	movq $24,904(%r13)
_c1rvJ:
	jmp *-16(%r13)
	.size sat_s1jzP_entry, .-sat_s1jzP_entry


==================== Asm code ====================
2018-03-16 15:56:06.31876339 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jzP_info:
	.quad	sat_s1jzP_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.319476832 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshow_entry
.type GHC.Real.$w$s$cshow_entry, @object
GHC.Real.$w$s$cshow_entry:
_c1rvN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rvR
_c1rvQ:
	movq $sat_s1jzP_info,-16(%r12)
	movq %rsi,(%r12)
	leaq -16(%r12),%rdi
	movq %r14,%rsi
	movl $8,%r14d
	jmp GHC.Show.$w$cshowsPrec4_entry
_c1rvR:
	movq $24,904(%r13)
	movl $GHC.Real.$w$s$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cshow_entry, .-GHC.Real.$w$s$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:06.320103187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cshow_info
.type GHC.Real.$w$s$cshow_info, @object
GHC.Real.$w$s$cshow_info:
	.quad	GHC.Real.$w$s$cshow_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S1jKw_srt+1304


==================== Asm code ====================
2018-03-16 15:56:06.323684382 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshow_closure
.type GHC.Real.$fShowRatio_$s$cshow_closure, @object
GHC.Real.$fShowRatio_$s$cshow_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.324466504 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshow_entry
.type GHC.Real.$fShowRatio_$s$cshow_entry, @object
GHC.Real.$fShowRatio_$s$cshow_entry:
_c1rwf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rwl
_c1rwm:
	movq $block_c1rwc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1rwc
_c1rwd:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rwl:
	movl $GHC.Real.$fShowRatio_$s$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$s$cshow_entry, .-GHC.Real.$fShowRatio_$s$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:06.32507156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshow_info
.type GHC.Real.$fShowRatio_$s$cshow_info, @object
GHC.Real.$fShowRatio_$s$cshow_info:
	.quad	GHC.Real.$fShowRatio_$s$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1jKw_srt+1336


==================== Asm code ====================
2018-03-16 15:56:06.325802298 UTC

.section .text
.align 8
_c1rwc:
_c1rwc:
	movq $block_c1rwi_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cshow_entry
	.size _c1rwc, .-_c1rwc


==================== Asm code ====================
2018-03-16 15:56:06.326459117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rwc_info:
	.quad	_c1rwc
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1336


==================== Asm code ====================
2018-03-16 15:56:06.327221491 UTC

.section .text
.align 8
_c1rwi:
_c1rwi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rwq
_c1rwp:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rwq:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rwi, .-_c1rwi


==================== Asm code ====================
2018-03-16 15:56:06.32786607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rwi_info:
	.quad	_c1rwi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.332596264 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cshow_closure
.type GHC.Real.$w$cshow_closure, @object
GHC.Real.$w$cshow_closure:
	.quad	GHC.Real.$w$cshow_info


==================== Asm code ====================
2018-03-16 15:56:06.33338916 UTC

.section .text
.align 8
sat_s1jA0_entry:
_c1rwR:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rwS
_c1rwT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Real.ratioPrec1_closure+1,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Show.showsPrec_entry
_c1rwS:
	jmp *-16(%r13)
	.size sat_s1jA0_entry, .-sat_s1jA0_entry


==================== Asm code ====================
2018-03-16 15:56:06.334025604 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jA0_info:
	.quad	sat_s1jA0_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.33480861 UTC

.section .text
.align 8
sat_s1jA1_entry:
_c1rwU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rwV
_c1rwW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rwY
_c1rwX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s1jA0_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Real.$fShowRatio2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c1rwY:
	movq $32,904(%r13)
_c1rwV:
	jmp *-16(%r13)
	.size sat_s1jA1_entry, .-sat_s1jA1_entry


==================== Asm code ====================
2018-03-16 15:56:06.335489451 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jA1_info:
	.quad	sat_s1jA1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.336250166 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshow_entry
.type GHC.Real.$w$cshow_entry, @object
GHC.Real.$w$cshow_entry:
_c1rwZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rx0
_c1rx1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1rx3
_c1rx2:
	movq $sat_s1jA1_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq $stg_ap_ppp_info,-32(%rbp)
	movq $GHC.Real.ratioPrec1_closure+1,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Show.showsPrec_entry
_c1rx3:
	movq $32,904(%r13)
_c1rx0:
	movl $GHC.Real.$w$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$cshow_entry, .-GHC.Real.$w$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:06.336979204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cshow_info
.type GHC.Real.$w$cshow_info, @object
GHC.Real.$w$cshow_info:
	.quad	GHC.Real.$w$cshow_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:06.339964505 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshow_closure
.type GHC.Real.$fShowRatio_$cshow_closure, @object
GHC.Real.$fShowRatio_$cshow_closure:
	.quad	GHC.Real.$fShowRatio_$cshow_info


==================== Asm code ====================
2018-03-16 15:56:06.340744808 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshow_entry
.type GHC.Real.$fShowRatio_$cshow_entry, @object
GHC.Real.$fShowRatio_$cshow_entry:
_c1rxq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rxr
_c1rxs:
	movq $block_c1rxn_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rxn
_c1rxo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rxr:
	movl $GHC.Real.$fShowRatio_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshow_entry, .-GHC.Real.$fShowRatio_$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:06.34142663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshow_info
.type GHC.Real.$fShowRatio_$cshow_info, @object
GHC.Real.$fShowRatio_$cshow_info:
	.quad	GHC.Real.$fShowRatio_$cshow_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.342023219 UTC

.section .text
.align 8
_c1rxn:
_c1rxn:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cshow_entry
	.size _c1rxn, .-_c1rxn


==================== Asm code ====================
2018-03-16 15:56:06.342635535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rxn_info:
	.quad	_c1rxn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.344298662 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$fShowRatio_closure
.type GHC.Real.$fShowRatio_$s$fShowRatio_closure, @object
GHC.Real.$fShowRatio_$s$fShowRatio_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_closure+3
	.quad	GHC.Real.$fShowRatio_$s$cshow_closure+1
	.quad	GHC.Real.$fShowRatio_$s$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.348641529 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_closure
.type GHC.Real.$fShowRatio_closure, @object
GHC.Real.$fShowRatio_closure:
	.quad	GHC.Real.$fShowRatio_info


==================== Asm code ====================
2018-03-16 15:56:06.349430817 UTC

.section .text
.align 8
sat_s1jAa_entry:
_c1rxQ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshowList_entry
	.size sat_s1jAa_entry, .-sat_s1jAa_entry


==================== Asm code ====================
2018-03-16 15:56:06.349978286 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jAa_info:
	.quad	sat_s1jAa_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.350599318 UTC

.section .text
.align 8
sat_s1jA9_entry:
_c1rxY:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshow_entry
	.size sat_s1jA9_entry, .-sat_s1jA9_entry


==================== Asm code ====================
2018-03-16 15:56:06.351172643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jA9_info:
	.quad	sat_s1jA9_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.351842455 UTC

.section .text
.align 8
sat_s1jA8_entry:
_c1ry6:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshowsPrec_entry
	.size sat_s1jA8_entry, .-sat_s1jA8_entry


==================== Asm code ====================
2018-03-16 15:56:06.352425296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jA8_info:
	.quad	sat_s1jA8_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.353289501 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_entry
.type GHC.Real.$fShowRatio_entry, @object
GHC.Real.$fShowRatio_entry:
_c1rya:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1rye
_c1ryd:
	movq $sat_s1jAa_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s1jA9_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s1jA8_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Show.C:Show_con_info,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rye:
	movq $80,904(%r13)
	movl $GHC.Real.$fShowRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_entry, .-GHC.Real.$fShowRatio_entry


==================== Asm code ====================
2018-03-16 15:56:06.354005618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_info
.type GHC.Real.$fShowRatio_info, @object
GHC.Real.$fShowRatio_info:
	.quad	GHC.Real.$fShowRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.359121221 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$slcm_closure
.type GHC.Real.$w$slcm_closure, @object
GHC.Real.$w$slcm_closure:
	.quad	GHC.Real.$w$slcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.359719782 UTC

.section .data.rel.ro
.align 8
.align 1
u1rzb_srtd:
	.quad	S1jKw_srt+856
	.quad	64
	.quad	-4611650834055299071


==================== Asm code ====================
2018-03-16 15:56:06.360609837 UTC

.section .text
.align 8
.globl GHC.Real.$w$slcm_entry
.type GHC.Real.$w$slcm_entry, @object
GHC.Real.$w$slcm_entry:
_c1ryE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ryF
_c1ryG:
	testq %rsi,%rsi
	je _c1ryD
_c1ryC:
	movq $block_c1ryI_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1ryI
_c1ryJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ryF:
	movl $GHC.Real.$w$slcm_closure,%ebx
	jmp *-8(%r13)
_c1ryD:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.$w$slcm_entry, .-GHC.Real.$w$slcm_entry


==================== Asm code ====================
2018-03-16 15:56:06.361347657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$slcm_info
.type GHC.Real.$w$slcm_info, @object
GHC.Real.$w$slcm_info:
	.quad	GHC.Real.$w$slcm_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u1rzb_srtd


==================== Asm code ====================
2018-03-16 15:56:06.361941048 UTC

.section .data.rel.ro
.align 8
.align 1
u1rzc_srtd:
	.quad	S1jKw_srt+856
	.quad	63
	.quad	4611721202799476737


==================== Asm code ====================
2018-03-16 15:56:06.362710453 UTC

.section .text
.align 8
_c1ryI:
_c1ryI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1ryP
_c1ryO:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _c1rz9
_c1ryV:
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_c1ryT_info,-8(%rbp)
	leaq -7(%r12),%rdi
	movq %rbx,%rsi
	movl $GHC.Real.$fIntegralWord_closure+1,%r14d
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.gcd_entry
_c1rz9:
	addq $-16,%r12
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ryP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1ryI, .-_c1ryI


==================== Asm code ====================
2018-03-16 15:56:06.363463624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ryI_info:
	.quad	_c1ryI
	.quad	65
	.quad	-4294967266
	.quad	u1rzc_srtd


==================== Asm code ====================
2018-03-16 15:56:06.364177418 UTC

.section .text
.align 8
_c1ryT:
_c1ryT:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1rz7
_c1rz8:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c1rz7:
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rax,%rbx
	imulq 16(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1ryT, .-_c1ryT


==================== Asm code ====================
2018-03-16 15:56:06.364805173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ryT_info:
	.quad	_c1ryT
	.quad	194
	.quad	4294967326
	.quad	S1jKw_srt+1216


==================== Asm code ====================
2018-03-16 15:56:06.368369637 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_$slcm_closure
.type GHC.Real.lcm_$slcm_closure, @object
GHC.Real.lcm_$slcm_closure:
	.quad	GHC.Real.lcm_$slcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.369137436 UTC

.section .text
.align 8
.globl GHC.Real.lcm_$slcm_entry
.type GHC.Real.lcm_$slcm_entry, @object
GHC.Real.lcm_$slcm_entry:
_c1rzD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rzL
_c1rzM:
	movq $block_c1rzA_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rzA
_c1rzB:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rzL:
	movl $GHC.Real.lcm_$slcm_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.lcm_$slcm_entry, .-GHC.Real.lcm_$slcm_entry


==================== Asm code ====================
2018-03-16 15:56:06.369861382 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_$slcm_info
.type GHC.Real.lcm_$slcm_info, @object
GHC.Real.lcm_$slcm_info:
	.quad	GHC.Real.lcm_$slcm_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1360


==================== Asm code ====================
2018-03-16 15:56:06.370519387 UTC

.section .text
.align 8
_c1rzA:
_c1rzA:
	movq 8(%rbp),%rax
	movq $block_c1rzG_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$slcm_entry
	.size _c1rzA, .-_c1rzA


==================== Asm code ====================
2018-03-16 15:56:06.371112442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rzA_info:
	.quad	_c1rzA
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1360


==================== Asm code ====================
2018-03-16 15:56:06.371810275 UTC

.section .text
.align 8
_c1rzG:
_c1rzG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rzQ
_c1rzP:
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rzQ:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1rzG, .-_c1rzG


==================== Asm code ====================
2018-03-16 15:56:06.372392989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rzG_info:
	.quad	_c1rzG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.380776635 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$slcm1_closure
.type GHC.Real.$w$slcm1_closure, @object
GHC.Real.$w$slcm1_closure:
	.quad	GHC.Real.$w$slcm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.381708678 UTC

.section .text
.align 8
sat_s1jAC_entry:
_c1rAw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rAA
_c1rAz:
	movq 24(%rbx),%rax
	testq %rax,%rax
	jl _c1rAu
_c1rAv:
	movq 16(%rbx),%rax
	addq $-16,%r12
	movq %rax,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c1rAA:
	movq $16,904(%r13)
	jmp *-16(%r13)
_c1rAu:
	movq $GHC.Types.I#_con_info,-8(%r12)
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s1jAC_entry, .-sat_s1jAC_entry


==================== Asm code ====================
2018-03-16 15:56:06.382428644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jAC_info:
	.quad	sat_s1jAC_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:56:06.383473159 UTC

.section .data.rel.ro
.align 8
.align 1
u1rBS_srtd:
	.quad	S1jKw_srt+344
	.quad	130
	.quad	17
	.quad	35184372088832
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:06.384354586 UTC

.section .text
.align 8
.globl GHC.Real.$w$slcm1_entry
.type GHC.Real.$w$slcm1_entry, @object
GHC.Real.$w$slcm1_entry:
_c1rAJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rAK
_c1rAL:
	testq %rsi,%rsi
	je _c1rAI
_c1rAH:
	movq $block_c1rAb_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rAb
_c1rAc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rAK:
	movl $GHC.Real.$w$slcm1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$slcm1_entry, .-GHC.Real.$w$slcm1_entry


==================== Asm code ====================
2018-03-16 15:56:06.385066179 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$slcm1_info
.type GHC.Real.$w$slcm1_info, @object
GHC.Real.$w$slcm1_info:
	.quad	GHC.Real.$w$slcm1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u1rBS_srtd


==================== Asm code ====================
2018-03-16 15:56:06.385719383 UTC

.section .data.rel.ro
.align 8
.align 1
u1rBT_srtd:
	.quad	S1jKw_srt+344
	.quad	110
	.quad	17
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:06.3864616 UTC

.section .text
.align 8
_c1rAb:
_c1rAb:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _u1rBI
_c1rBD:
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	jl _c1rBA
_c1rBB:
	movq %rbx,(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp _c1rAl
_u1rBI:
	addq $16,%rbp
	jmp _c1rAI
_c1rBA:
	movq %rax,-16(%rbp)
	negq %rcx
	movq %rcx,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c1rAl
	.size _c1rAb, .-_c1rAb


==================== Asm code ====================
2018-03-16 15:56:06.387079219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rAb_info:
	.quad	_c1rAb
	.quad	65
	.quad	-4294967266
	.quad	u1rBT_srtd


==================== Asm code ====================
2018-03-16 15:56:06.387687766 UTC

.section .text
.align 8
_c1rAI:
_c1rAI:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1rAI, .-_c1rAI


==================== Asm code ====================
2018-03-16 15:56:06.388447495 UTC

.section .text
.align 8
_c1rAl:
_c1rAl:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c1rAQ
_c1rAP:
	movq $sat_s1jAC_info,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_c1rAN_info,-8(%rbp)
	movq %rax,%rsi
	leaq -24(%r12),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wgcd'_entry
_c1rAQ:
	movq $32,904(%r13)
	movq $block_c1rAk_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c1rAl, .-_c1rAl


==================== Asm code ====================
2018-03-16 15:56:06.389124769 UTC

.section .data.rel.ro
.align 8
.align 1
u1rBU_srtd:
	.quad	S1jKw_srt+344
	.quad	110
	.quad	17
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:06.389812955 UTC

.section .text
.align 8
_c1rAk:
_c1rAk:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c1rAl
	.size _c1rAk, .-_c1rAk


==================== Asm code ====================
2018-03-16 15:56:06.390376095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rAk_info:
	.quad	_c1rAk
	.quad	708
	.quad	-4294967266
	.quad	u1rBU_srtd


==================== Asm code ====================
2018-03-16 15:56:06.390942233 UTC

.section .data.rel.ro
.align 8
.align 1
u1rBV_srtd:
	.quad	S1jKw_srt+344
	.quad	110
	.quad	1
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:06.391893741 UTC

.section .text
.align 8
_c1rAN:
_c1rAN:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1rBH
_c1rBv:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rcx
	je _c1rBu
_c1rBt:
	movq $-1,%rbx
	movq %rax,%rdx
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rbx
	imulq %rcx,%rax
	testq %rax,%rax
	jl _c1rBq
_c1rBr:
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1rBH:
	testq %rbx,%rbx
	jne _c1rBb
_c1rBw:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $40,%rbp
	jmp stg_ap_0_fast
_c1rBu:
	movl $GHC.Real.overflowError_closure,%ebx
	addq $40,%rbp
	jmp stg_ap_0_fast
_c1rBq:
	movq %rax,%rbx
	negq %rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rBb:
	movq %rax,%rdx
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rbx
	imulq %rcx,%rax
	testq %rax,%rax
	jl _c1rB8
_c1rB9:
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rB8:
	movq %rax,%rbx
	negq %rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1rAN, .-_c1rAN


==================== Asm code ====================
2018-03-16 15:56:06.392708412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rAN_info:
	.quad	_c1rAN
	.quad	964
	.quad	-4294967266
	.quad	u1rBV_srtd


==================== Asm code ====================
2018-03-16 15:56:06.396346172 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_$slcm1_closure
.type GHC.Real.lcm_$slcm1_closure, @object
GHC.Real.lcm_$slcm1_closure:
	.quad	GHC.Real.lcm_$slcm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.39718057 UTC

.section .text
.align 8
.globl GHC.Real.lcm_$slcm1_entry
.type GHC.Real.lcm_$slcm1_entry, @object
GHC.Real.lcm_$slcm1_entry:
_c1rCJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rCR
_c1rCS:
	movq $block_c1rCG_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rCG
_c1rCH:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rCR:
	movl $GHC.Real.lcm_$slcm1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.lcm_$slcm1_entry, .-GHC.Real.lcm_$slcm1_entry


==================== Asm code ====================
2018-03-16 15:56:06.397906457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_$slcm1_info
.type GHC.Real.lcm_$slcm1_info, @object
GHC.Real.lcm_$slcm1_info:
	.quad	GHC.Real.lcm_$slcm1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1376


==================== Asm code ====================
2018-03-16 15:56:06.398609567 UTC

.section .text
.align 8
_c1rCG:
_c1rCG:
	movq 8(%rbp),%rax
	movq $block_c1rCM_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$slcm1_entry
	.size _c1rCG, .-_c1rCG


==================== Asm code ====================
2018-03-16 15:56:06.399205211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rCG_info:
	.quad	_c1rCG
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1376


==================== Asm code ====================
2018-03-16 15:56:06.399942739 UTC

.section .text
.align 8
_c1rCM:
_c1rCM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rCW
_c1rCV:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rCW:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1rCM, .-_c1rCM


==================== Asm code ====================
2018-03-16 15:56:06.400559385 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rCM_info:
	.quad	_c1rCM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.41116106 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_closure
.type GHC.Real.lcm_closure, @object
GHC.Real.lcm_closure:
	.quad	GHC.Real.lcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.412008512 UTC

.section .text
.align 8
sat_s1jB3_entry:
_c1rDz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rDA
_c1rDB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rDA:
	jmp *-16(%r13)
	.size sat_s1jB3_entry, .-sat_s1jB3_entry


==================== Asm code ====================
2018-03-16 15:56:06.41258181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jB3_info:
	.quad	sat_s1jB3_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.413314506 UTC

.section .text
.align 8
sat_s1jB5_entry:
_c1rDK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rDL
_c1rDM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rDL:
	jmp *-16(%r13)
	.size sat_s1jB5_entry, .-sat_s1jB5_entry


==================== Asm code ====================
2018-03-16 15:56:06.41393876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jB5_info:
	.quad	sat_s1jB5_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.414613728 UTC

.section .text
.align 8
sat_s1jB7_entry:
_c1rE3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rE4
_c1rE5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.gcd_entry
_c1rE4:
	jmp *-16(%r13)
	.size sat_s1jB7_entry, .-sat_s1jB7_entry


==================== Asm code ====================
2018-03-16 15:56:06.415207403 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jB7_info:
	.quad	sat_s1jB7_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+1392


==================== Asm code ====================
2018-03-16 15:56:06.415993941 UTC

.section .text
.align 8
sat_s1jB8_entry:
_c1rE6:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rE7
_c1rE8:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1rEa
_c1rE9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s1jB7_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1rEa:
	movq $40,904(%r13)
_c1rE7:
	jmp *-16(%r13)
	.size sat_s1jB8_entry, .-sat_s1jB8_entry


==================== Asm code ====================
2018-03-16 15:56:06.416678516 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jB8_info:
	.quad	sat_s1jB8_entry
	.quad	3
	.quad	4294967311
	.quad	S1jKw_srt+1392


==================== Asm code ====================
2018-03-16 15:56:06.417463426 UTC

.section .text
.align 8
sat_s1jB9_entry:
_c1rEb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rEc
_c1rEd:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1rEf
_c1rEe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s1jB8_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rEf:
	movq $40,904(%r13)
_c1rEc:
	jmp *-16(%r13)
	.size sat_s1jB9_entry, .-sat_s1jB9_entry


==================== Asm code ====================
2018-03-16 15:56:06.418139223 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jB9_info:
	.quad	sat_s1jB9_entry
	.quad	4
	.quad	4294967311
	.quad	S1jKw_srt+1392


==================== Asm code ====================
2018-03-16 15:56:06.418847292 UTC

.section .text
.align 8
.globl GHC.Real.lcm_entry
.type GHC.Real.lcm_entry, @object
GHC.Real.lcm_entry:
_c1rEg:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rEh
_c1rEi:
	movq $block_c1rDf_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1rEh:
	movl $GHC.Real.lcm_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.lcm_entry, .-GHC.Real.lcm_entry


==================== Asm code ====================
2018-03-16 15:56:06.419519239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_info
.type GHC.Real.lcm_info, @object
GHC.Real.lcm_info:
	.quad	GHC.Real.lcm_entry
	.quad	0
	.quad	27021602059190286
	.quad	12884901911
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.420197714 UTC

.section .text
.align 8
_c1rDf:
_c1rDf:
	movq $block_c1rDj_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Real_entry
	.size _c1rDf, .-_c1rDf


==================== Asm code ====================
2018-03-16 15:56:06.420778533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDf_info:
	.quad	_c1rDf
	.quad	3
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.421453972 UTC

.section .text
.align 8
_c1rDj:
_c1rDj:
	movq $block_c1rDn_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Real.$p2Real_entry
	.size _c1rDj, .-_c1rDj


==================== Asm code ====================
2018-03-16 15:56:06.422028998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDj_info:
	.quad	_c1rDj
	.quad	4
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.422646553 UTC

.section .text
.align 8
_c1rDn:
_c1rDn:
	movq $block_c1rDr_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c1rDn, .-_c1rDn


==================== Asm code ====================
2018-03-16 15:56:06.423210842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDn_info:
	.quad	_c1rDn
	.quad	4
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.423943021 UTC

.section .text
.align 8
_c1rDr:
_c1rDr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rEo
_c1rEn:
	movq $sat_s1jB3_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rDC_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
_c1rEo:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rDr, .-_c1rDr


==================== Asm code ====================
2018-03-16 15:56:06.424651185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDr_info:
	.quad	_c1rDr
	.quad	4
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.426403927 UTC

.section .text
.align 8
_c1rDC:
_c1rDC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1rEq
_u1rEJ:
	addq $16,%rbp
	jmp _c1rEG
_c1rEt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1rEq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rEt
_c1rEs:
	movq $sat_s1jB5_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	movq $block_c1rDN_info,8(%rbp)
	movq %rax,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1rDC, .-_c1rDC


==================== Asm code ====================
2018-03-16 15:56:06.427129315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDC_info:
	.quad	_c1rDC
	.quad	5
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.427928035 UTC

.section .text
.align 8
_c1rDN:
_c1rDN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1rEv
_u1rEK:
	addq $8,%rbp
	jmp _c1rEG
_c1rEy:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c1rEv:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1rEy
_c1rEx:
	movq $sat_s1jB9_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,24(%rbp)
	leaq -40(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp GHC.Num.abs_entry
	.size _c1rDN, .-_c1rDN


==================== Asm code ====================
2018-03-16 15:56:06.428596636 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rDN_info:
	.quad	_c1rDN
	.quad	4
	.quad	9007203549708318
	.quad	S1jKw_srt+1224


==================== Asm code ====================
2018-03-16 15:56:06.429172606 UTC

.section .text
.align 8
_c1rEG:
_c1rEG:
	movq (%rbp),%r14
	movq $stg_ap_p_info,16(%rbp)
	movq $GHC.Real.even1_closure,24(%rbp)
	addq $16,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1rEG, .-_c1rEG


==================== Asm code ====================
2018-03-16 15:56:06.434271482 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$ctoEnum_closure
.type GHC.Real.$w$ctoEnum_closure, @object
GHC.Real.$w$ctoEnum_closure:
	.quad	GHC.Real.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.435073076 UTC

.section .text
.align 8
sat_s1jBg_entry:
_c1rG5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rG6
_c1rG7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c1rG2_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c1rG2
_c1rG3:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rG6:
	jmp *-16(%r13)
	.size sat_s1jBg_entry, .-sat_s1jBg_entry


==================== Asm code ====================
2018-03-16 15:56:06.435752512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBg_info:
	.quad	sat_s1jBg_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.436364407 UTC

.section .text
.align 8
_c1rG2:
_c1rG2:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c1rG2, .-_c1rG2


==================== Asm code ====================
2018-03-16 15:56:06.437490936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rG2_info:
	.quad	_c1rG2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.438240399 UTC

.section .text
.align 8
.globl GHC.Real.$w$ctoEnum_entry
.type GHC.Real.$w$ctoEnum_entry, @object
GHC.Real.$w$ctoEnum_entry:
_c1rGc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rGg
_c1rGh:
	movq $block_c1rFQ_info,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1rGg:
	movl $GHC.Real.$w$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w$ctoEnum_entry, .-GHC.Real.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:56:06.43890396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$ctoEnum_info
.type GHC.Real.$w$ctoEnum_info, @object
GHC.Real.$w$ctoEnum_info:
	.quad	GHC.Real.$w$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1408


==================== Asm code ====================
2018-03-16 15:56:06.439521221 UTC

.section .text
.align 8
_c1rFQ:
_c1rFQ:
	movq $block_c1rFU_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1rFQ, .-_c1rFQ


==================== Asm code ====================
2018-03-16 15:56:06.440092588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rFQ_info:
	.quad	_c1rFQ
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.440810141 UTC

.section .text
.align 8
_c1rFU:
_c1rFU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rGl
_c1rGk:
	movq $sat_s1jBg_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rGd_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rGl:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rFU, .-_c1rFU


==================== Asm code ====================
2018-03-16 15:56:06.441551101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rFU_info:
	.quad	_c1rFU
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.44221652 UTC

.section .text
.align 8
_c1rGd:
_c1rGd:
	movq $block_c1rGf_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c1rGd, .-_c1rGd


==================== Asm code ====================
2018-03-16 15:56:06.442805233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rGd_info:
	.quad	_c1rGd
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.443420907 UTC

.section .text
.align 8
_c1rGf:
_c1rGf:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1rGf, .-_c1rGf


==================== Asm code ====================
2018-03-16 15:56:06.444007517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rGf_info:
	.quad	_c1rGf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.447122049 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoEnum_closure
.type GHC.Real.$fEnumRatio_$ctoEnum_closure, @object
GHC.Real.$fEnumRatio_$ctoEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.447901162 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$ctoEnum_entry
.type GHC.Real.$fEnumRatio_$ctoEnum_entry, @object
GHC.Real.$fEnumRatio_$ctoEnum_entry:
_c1rGY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rGZ
_c1rH0:
	movq $block_c1rGV_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$ctoEnum_entry
_c1rGZ:
	movl $GHC.Real.$fEnumRatio_$ctoEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$ctoEnum_entry, .-GHC.Real.$fEnumRatio_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:56:06.448539876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoEnum_info
.type GHC.Real.$fEnumRatio_$ctoEnum_info, @object
GHC.Real.$fEnumRatio_$ctoEnum_info:
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1jKw_srt+1408


==================== Asm code ====================
2018-03-16 15:56:06.449333258 UTC

.section .text
.align 8
_c1rGV:
_c1rGV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rH3
_c1rH2:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rH3:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rGV, .-_c1rGV


==================== Asm code ====================
2018-03-16 15:56:06.449952311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rGV_info:
	.quad	_c1rGV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.45193128 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$fEnumRatio_closure
.type GHC.Real.$fEnumRatio_$s$fEnumRatio_closure, @object
GHC.Real.$fEnumRatio_$s$fEnumRatio_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Real.$fEnumRatio_$s$csucc_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cpred_closure+1
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_closure+1
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_closure+1
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure+2
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure+2
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.458924783 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_closure
.type GHC.Real.$fEnumRatio_closure, @object
GHC.Real.$fEnumRatio_closure:
	.quad	GHC.Real.$fEnumRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.459802596 UTC

.section .text
.align 8
sat_s1jBw_entry:
_c1rHm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rHn
_c1rHo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
_c1rHn:
	jmp *-16(%r13)
	.size sat_s1jBw_entry, .-sat_s1jBw_entry


==================== Asm code ====================
2018-03-16 15:56:06.460410213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBw_info:
	.quad	sat_s1jBw_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1432


==================== Asm code ====================
2018-03-16 15:56:06.461112002 UTC

.section .text
.align 8
sat_s1jBv_entry:
_c1rHt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rHu
_c1rHv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromTo_entry
_c1rHu:
	jmp *-16(%r13)
	.size sat_s1jBv_entry, .-sat_s1jBv_entry


==================== Asm code ====================
2018-03-16 15:56:06.463154346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBv_info:
	.quad	sat_s1jBv_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1440


==================== Asm code ====================
2018-03-16 15:56:06.463904245 UTC

.section .text
.align 8
sat_s1jBu_entry:
_c1rHA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rHB
_c1rHC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromThen_entry
_c1rHB:
	jmp *-16(%r13)
	.size sat_s1jBu_entry, .-sat_s1jBu_entry


==================== Asm code ====================
2018-03-16 15:56:06.464574764 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBu_info:
	.quad	sat_s1jBu_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1448


==================== Asm code ====================
2018-03-16 15:56:06.465875655 UTC

.section .text
.align 8
sat_s1jBt_entry:
_c1rHH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rHI
_c1rHJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFrom_entry
_c1rHI:
	jmp *-16(%r13)
	.size sat_s1jBt_entry, .-sat_s1jBt_entry


==================== Asm code ====================
2018-03-16 15:56:06.4666149 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBt_info:
	.quad	sat_s1jBt_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1456


==================== Asm code ====================
2018-03-16 15:56:06.467212627 UTC

.section .text
.align 8
sat_s1jBs_entry:
_c1rHP:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cfromEnum_entry
	.size sat_s1jBs_entry, .-sat_s1jBs_entry


==================== Asm code ====================
2018-03-16 15:56:06.467787064 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBs_info:
	.quad	sat_s1jBs_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:06.468379374 UTC

.section .text
.align 8
sat_s1jBr_entry:
_c1rHX:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$ctoEnum_entry
	.size sat_s1jBr_entry, .-sat_s1jBr_entry


==================== Asm code ====================
2018-03-16 15:56:06.468941127 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBr_info:
	.quad	sat_s1jBr_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+1424


==================== Asm code ====================
2018-03-16 15:56:06.469664492 UTC

.section .text
.align 8
sat_s1jBq_entry:
_c1rI5:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cpred_entry
	.size sat_s1jBq_entry, .-sat_s1jBq_entry


==================== Asm code ====================
2018-03-16 15:56:06.470244601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBq_info:
	.quad	sat_s1jBq_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+1464


==================== Asm code ====================
2018-03-16 15:56:06.470855023 UTC

.section .text
.align 8
sat_s1jBp_entry:
_c1rId:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$csucc_entry
	.size sat_s1jBp_entry, .-sat_s1jBp_entry


==================== Asm code ====================
2018-03-16 15:56:06.471408362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jBp_info:
	.quad	sat_s1jBp_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1jKw_srt+1472


==================== Asm code ====================
2018-03-16 15:56:06.472296149 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_entry
.type GHC.Real.$fEnumRatio_entry, @object
GHC.Real.$fEnumRatio_entry:
_c1rIh:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c1rIl
_c1rIk:
	movq $sat_s1jBw_info,-224(%r12)
	movq %r14,-208(%r12)
	movq $sat_s1jBv_info,-200(%r12)
	movq %r14,-184(%r12)
	movq $sat_s1jBu_info,-176(%r12)
	movq %r14,-160(%r12)
	movq $sat_s1jBt_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $sat_s1jBs_info,-128(%r12)
	movq %r14,-120(%r12)
	movq $sat_s1jBr_info,-112(%r12)
	movq %r14,-104(%r12)
	movq $sat_s1jBq_info,-96(%r12)
	movq %r14,-88(%r12)
	movq $sat_s1jBp_info,-80(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Enum.C:Enum_con_info,-64(%r12)
	leaq -79(%r12),%rax
	movq %rax,-56(%r12)
	leaq -95(%r12),%rax
	movq %rax,-48(%r12)
	leaq -111(%r12),%rax
	movq %rax,-40(%r12)
	leaq -127(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rIl:
	movq $232,904(%r13)
	movl $GHC.Real.$fEnumRatio_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_entry, .-GHC.Real.$fEnumRatio_entry


==================== Asm code ====================
2018-03-16 15:56:06.473155528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_info
.type GHC.Real.$fEnumRatio_info, @object
GHC.Real.$fEnumRatio_info:
	.quad	GHC.Real.$fEnumRatio_entry
	.quad	0
	.quad	1095216660494
	.quad	4294967301
	.quad	S1jKw_srt+1424


==================== Asm code ====================
2018-03-16 15:56:06.476238378 UTC

.section .data
.align 8
.align 1
$wg_r1j3P_closure:
	.quad	$wg_r1j3P_info


==================== Asm code ====================
2018-03-16 15:56:06.477152833 UTC

.section .text
.align 8
$wg_r1j3P_entry:
_c1rJa:
_c1rJ2:
	movq %rsi,%rax
	shrq $63,%rax
	movq %rsi,%rbx
	addq %rax,%rbx
	andq $-2,%rbx
	movq %rsi,%rax
	subq %rbx,%rax
	testq %rax,%rax
	je _c1rJ9
_c1rJ8:
	cmpq $1,%rsi
	je _c1rJo
_c1rJk:
	movq %r14,%rax
	imulq %rdi,%rax
	movq %rsi,%rbx
	shrq $63,%rbx
	addq %rbx,%rsi
	sarq $1,%rsi
	movq %r14,%rbx
	imulq %rbx,%r14
_n1rJX:
	movq %rax,%rdi
	jmp _c1rJ2
_c1rJo:
	movq %r14,%rbx
	imulq %rdi,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rJ9:
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp _c1rJ2
	.size $wg_r1j3P_entry, .-$wg_r1j3P_entry


==================== Asm code ====================
2018-03-16 15:56:06.477965823 UTC

.section .data.rel.ro
.align 8
.align 1
$wg_r1j3P_info:
	.quad	$wg_r1j3P_entry
	.quad	0
	.quad	14
	.quad	12884901904


==================== Asm code ====================
2018-03-16 15:56:06.480759497 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wf1_closure
.type GHC.Real.$wf1_closure, @object
GHC.Real.$wf1_closure:
	.quad	GHC.Real.$wf1_info


==================== Asm code ====================
2018-03-16 15:56:06.481753685 UTC

.section .text
.align 8
.globl GHC.Real.$wf1_entry
.type GHC.Real.$wf1_entry, @object
GHC.Real.$wf1_entry:
_c1rK8:
_c1rK0:
	movq %rsi,%rax
	shrq $63,%rax
	movq %rsi,%rbx
	addq %rax,%rbx
	andq $-2,%rbx
	movq %rsi,%rax
	subq %rbx,%rax
	testq %rax,%rax
	je _c1rK7
_c1rK6:
	cmpq $1,%rsi
	je _c1rKj
_c1rKi:
	movq %r14,%rdi
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp $wg_r1j3P_entry
_c1rKj:
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1rK7:
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp _c1rK0
	.size GHC.Real.$wf1_entry, .-GHC.Real.$wf1_entry


==================== Asm code ====================
2018-03-16 15:56:06.482420824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wf1_info
.type GHC.Real.$wf1_info, @object
GHC.Real.$wf1_info:
	.quad	GHC.Real.$wf1_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:56:06.486203511 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f2_closure
.type GHC.Real.^_f2_closure, @object
GHC.Real.^_f2_closure:
	.quad	GHC.Real.^_f2_info


==================== Asm code ====================
2018-03-16 15:56:06.487040647 UTC

.section .text
.align 8
.globl GHC.Real.^_f2_entry
.type GHC.Real.^_f2_entry, @object
GHC.Real.^_f2_entry:
_c1rKW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rL9
_c1rLa:
	movq $block_c1rKT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rKT
_c1rKU:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rL9:
	movl $GHC.Real.^_f2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_f2_entry, .-GHC.Real.^_f2_entry


==================== Asm code ====================
2018-03-16 15:56:06.487683874 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f2_info
.type GHC.Real.^_f2_info, @object
GHC.Real.^_f2_info:
	.quad	GHC.Real.^_f2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.488402514 UTC

.section .text
.align 8
_c1rKT:
_c1rKT:
	movq $block_c1rKZ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1rKZ
_c1rL0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rKT, .-_c1rKT


==================== Asm code ====================
2018-03-16 15:56:06.48900427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rKT_info:
	.quad	_c1rKT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.489701946 UTC

.section .text
.align 8
_c1rKZ:
_c1rKZ:
	movq 8(%rbp),%rax
	movq $block_c1rL4_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$wf1_entry
	.size _c1rKZ, .-_c1rKZ


==================== Asm code ====================
2018-03-16 15:56:06.490315435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rKZ_info:
	.quad	_c1rKZ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.491020114 UTC

.section .text
.align 8
_c1rL4:
_c1rL4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rLf
_c1rLe:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rLf:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1rL4, .-_c1rL4


==================== Asm code ====================
2018-03-16 15:56:06.492168508 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rL4_info:
	.quad	_c1rL4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.493953711 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^3_closure
.type GHC.Real.^3_closure, @object
GHC.Real.^3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:06.496835439 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^2_closure
.type GHC.Real.^2_closure, @object
GHC.Real.^2_closure:
	.quad	GHC.Real.^2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.497729254 UTC

.section .text
.align 8
.globl GHC.Real.^2_entry
.type GHC.Real.^2_entry, @object
GHC.Real.^2_entry:
_c1rLI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rLJ
_c1rLK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1rLF
_c1rLE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1rLG_info,-24(%rbp)
	movl $lvl5_r1j3O_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c1rLJ:
	jmp *-16(%r13)
_c1rLF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.^2_entry, .-GHC.Real.^2_entry


==================== Asm code ====================
2018-03-16 15:56:06.498401532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^2_info
.type GHC.Real.^2_info, @object
GHC.Real.^2_info:
	.quad	GHC.Real.^2_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+1264


==================== Asm code ====================
2018-03-16 15:56:06.499011585 UTC

.section .text
.align 8
_c1rLG:
_c1rLG:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c1rLG, .-_c1rLG


==================== Asm code ====================
2018-03-16 15:56:06.49954427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rLG_info:
	.quad	_c1rLG
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1264


==================== Asm code ====================
2018-03-16 15:56:06.5037802 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^2_closure
.type GHC.Real.^_$s^2_closure, @object
GHC.Real.^_$s^2_closure:
	.quad	GHC.Real.^_$s^2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.504558259 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^2_entry
.type GHC.Real.^_$s^2_entry, @object
GHC.Real.^_$s^2_entry:
_c1rM5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rM6
_c1rM7:
	movq $block_c1rM2_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rM2
_c1rM3:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rM6:
	movl $GHC.Real.^_$s^2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^2_entry, .-GHC.Real.^_$s^2_entry


==================== Asm code ====================
2018-03-16 15:56:06.505221406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^2_info
.type GHC.Real.^_$s^2_info, @object
GHC.Real.^_$s^2_info:
	.quad	GHC.Real.^_$s^2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1488


==================== Asm code ====================
2018-03-16 15:56:06.506096567 UTC

.section .text
.align 8
_c1rM2:
_c1rM2:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jge _c1rMy
_c1rMz:
	movl $GHC.Real.^2_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1rMw:
	movl $GHC.Real.^3_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rMy:
	testq %rax,%rax
	je _c1rMw
_c1rMr:
	movq $block_c1rMg_info,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1rMg
_c1rMh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1rM2, .-_c1rM2


==================== Asm code ====================
2018-03-16 15:56:06.506745342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rM2_info:
	.quad	_c1rM2
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1496


==================== Asm code ====================
2018-03-16 15:56:06.507380252 UTC

.section .text
.align 8
_c1rMg:
_c1rMg:
	movq 8(%rbp),%rax
	movq $block_c1rMl_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Real.$wf1_entry
	.size _c1rMg, .-_c1rMg


==================== Asm code ====================
2018-03-16 15:56:06.507988245 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rMg_info:
	.quad	_c1rMg
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.508652612 UTC

.section .text
.align 8
_c1rMl:
_c1rMl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1rMv
_c1rMu:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rMv:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1rMl, .-_c1rMl


==================== Asm code ====================
2018-03-16 15:56:06.509298181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rMl_info:
	.quad	_c1rMl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.514304272 UTC

.section .data
.align 8
.align 1
$wg1_r1j3Q_closure:
	.quad	$wg1_r1j3Q_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.515015662 UTC

.section .text
.align 8
$wg1_r1j3Q_entry:
_c1rN4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rN5
_u1rNH:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c1rMW
_c1rN5:
	movl $$wg1_r1j3Q_closure,%ebx
	jmp *-8(%r13)
	.size $wg1_r1j3Q_entry, .-$wg1_r1j3Q_entry


==================== Asm code ====================
2018-03-16 15:56:06.515649127 UTC

.section .data.rel.ro
.align 8
.align 1
$wg1_r1j3Q_info:
	.quad	$wg1_r1j3Q_entry
	.quad	0
	.quad	12884901902
	.quad	12884901909
	.quad	S1jKw_srt+1504


==================== Asm code ====================
2018-03-16 15:56:06.51652241 UTC

.section .text
.align 8
_c1rMW:
_c1rMW:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,%rcx
	shrq $63,%rcx
	movq %rbx,%rdx
	addq %rcx,%rdx
	andq $-2,%rdx
	movq %rbx,%rcx
	subq %rdx,%rcx
	testq %rcx,%rcx
	je _c1rN3
_c1rN2:
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c1rNt
_c1rNn:
	movq $block_c1rNe_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1rNt:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1rN3:
	movq $block_c1rNB_info,(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rMW, .-_c1rMW


==================== Asm code ====================
2018-03-16 15:56:06.517424758 UTC

.section .text
.align 8
_c1rNB:
_c1rNB:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1rMW
	.size _c1rNB, .-_c1rNB


==================== Asm code ====================
2018-03-16 15:56:06.518519638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rNB_info:
	.quad	_c1rNB
	.quad	66
	.quad	4294967326
	.quad	S1jKw_srt+1512


==================== Asm code ====================
2018-03-16 15:56:06.519174566 UTC

.section .text
.align 8
_c1rNe:
_c1rNe:
	movq 8(%rbp),%rax
	movq $block_c1rNl_info,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,%rbx
	shrq $63,%rbx
	addq %rbx,%rax
	sarq $1,%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rNe, .-_c1rNe


==================== Asm code ====================
2018-03-16 15:56:06.51984078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rNe_info:
	.quad	_c1rNe
	.quad	387
	.quad	4294967326
	.quad	S1jKw_srt+1512


==================== Asm code ====================
2018-03-16 15:56:06.520450795 UTC

.section .text
.align 8
_c1rNl:
_c1rNl:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp _c1rMW
	.size _c1rNl, .-_c1rNl


==================== Asm code ====================
2018-03-16 15:56:06.52102459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rNl_info:
	.quad	_c1rNl
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1512


==================== Asm code ====================
2018-03-16 15:56:06.525203995 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wf_closure
.type GHC.Real.$wf_closure, @object
GHC.Real.$wf_closure:
	.quad	GHC.Real.$wf_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.526047753 UTC

.section .text
.align 8
.globl GHC.Real.$wf_entry
.type GHC.Real.$wf_entry, @object
GHC.Real.$wf_entry:
_c1rOr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rOs
_u1rOZ:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1rOj
_c1rOs:
	movl $GHC.Real.$wf_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$wf_entry, .-GHC.Real.$wf_entry


==================== Asm code ====================
2018-03-16 15:56:06.526671924 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wf_info
.type GHC.Real.$wf_info, @object
GHC.Real.$wf_info:
	.quad	GHC.Real.$wf_entry
	.quad	0
	.quad	30064771086
	.quad	8589934606
	.quad	S1jKw_srt+1504


==================== Asm code ====================
2018-03-16 15:56:06.52756102 UTC

.section .text
.align 8
_c1rOj:
_c1rOj:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,%rcx
	shrq $63,%rcx
	movq %rbx,%rdx
	addq %rcx,%rdx
	andq $-2,%rdx
	movq %rbx,%rcx
	subq %rdx,%rcx
	testq %rcx,%rcx
	je _c1rOq
_c1rOp:
	cmpq $1,%rbx
	je _c1rOL
_c1rOG:
	movq $block_c1rOE_info,-8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c1rOL:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1rOq:
	movq $block_c1rOT_info,(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c1rOj, .-_c1rOj


==================== Asm code ====================
2018-03-16 15:56:06.52839178 UTC

.section .text
.align 8
_c1rOT:
_c1rOT:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	jmp _c1rOj
	.size _c1rOT, .-_c1rOT


==================== Asm code ====================
2018-03-16 15:56:06.528941562 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rOT_info:
	.quad	_c1rOT
	.quad	65
	.quad	12884901918
	.quad	S1jKw_srt+1504


==================== Asm code ====================
2018-03-16 15:56:06.529620454 UTC

.section .text
.align 8
_c1rOE:
_c1rOE:
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wg1_r1j3Q_entry
	.size _c1rOE, .-_c1rOE


==================== Asm code ====================
2018-03-16 15:56:06.53017833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rOE_info:
	.quad	_c1rOE
	.quad	130
	.quad	4294967326
	.quad	S1jKw_srt+1504


==================== Asm code ====================
2018-03-16 15:56:06.533086272 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f1_closure
.type GHC.Real.^_f1_closure, @object
GHC.Real.^_f1_closure:
	.quad	GHC.Real.^_f1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.533886249 UTC

.section .text
.align 8
.globl GHC.Real.^_f1_entry
.type GHC.Real.^_f1_entry, @object
GHC.Real.^_f1_entry:
_c1rPC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rPD
_c1rPE:
	movq $block_c1rPz_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rPz
_c1rPA:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rPD:
	movl $GHC.Real.^_f1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_f1_entry, .-GHC.Real.^_f1_entry


==================== Asm code ====================
2018-03-16 15:56:06.53458462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f1_info
.type GHC.Real.^_f1_info, @object
GHC.Real.^_f1_info:
	.quad	GHC.Real.^_f1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1jKw_srt+1520


==================== Asm code ====================
2018-03-16 15:56:06.535206556 UTC

.section .text
.align 8
_c1rPz:
_c1rPz:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wf_entry
	.size _c1rPz, .-_c1rPz


==================== Asm code ====================
2018-03-16 15:56:06.535768546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rPz_info:
	.quad	_c1rPz
	.quad	1
	.quad	4294967326
	.quad	S1jKw_srt+1520


==================== Asm code ====================
2018-03-16 15:56:06.539429545 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^1_closure
.type GHC.Real.^_$s^1_closure, @object
GHC.Real.^_$s^1_closure:
	.quad	GHC.Real.^_$s^1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.539986524 UTC

.section .data.rel.ro
.align 8
.align 1
u1rQg_srtd:
	.quad	S1jKw_srt+1280
	.quad	33
	.quad	5368840193


==================== Asm code ====================
2018-03-16 15:56:06.540837099 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^1_entry
.type GHC.Real.^_$s^1_entry, @object
GHC.Real.^_$s^1_entry:
_c1rPZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rQ0
_c1rQ1:
	movq $block_c1rPW_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1rPW
_c1rPX:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rQ0:
	movl $GHC.Real.^_$s^1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^1_entry, .-GHC.Real.^_$s^1_entry


==================== Asm code ====================
2018-03-16 15:56:06.541595269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^1_info
.type GHC.Real.^_$s^1_info, @object
GHC.Real.^_$s^1_info:
	.quad	GHC.Real.^_$s^1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1rQg_srtd


==================== Asm code ====================
2018-03-16 15:56:06.542380467 UTC

.section .text
.align 8
_c1rPW:
_c1rPW:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jge _c1rQd
_c1rQe:
	movl $GHC.Real.^1_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1rQb:
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1rQd:
	testq %rax,%rax
	je _c1rQb
_c1rQa:
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wf_entry
	.size _c1rPW, .-_c1rPW


==================== Asm code ====================
2018-03-16 15:56:06.543082956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rPW_info:
	.quad	_c1rPW
	.quad	1
	.quad	4612248972675776542
	.quad	S1jKw_srt+1280


==================== Asm code ====================
2018-03-16 15:56:06.546718988 UTC

.section .data
.align 8
.align 1
lvl6_r1j3R_closure:
	.quad	lvl6_r1j3R_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.547567502 UTC

.section .text
.align 8
lvl6_r1j3R_entry:
_c1rQB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rQC
_c1rQD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1rQy
_c1rQx:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1rQz_info,-24(%rbp)
	movl $lvl5_r1j3O_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c1rQC:
	jmp *-16(%r13)
_c1rQy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_r1j3R_entry, .-lvl6_r1j3R_entry


==================== Asm code ====================
2018-03-16 15:56:06.548228449 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_r1j3R_info:
	.quad	lvl6_r1j3R_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+1544


==================== Asm code ====================
2018-03-16 15:56:06.548843641 UTC

.section .text
.align 8
_c1rQz:
_c1rQz:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c1rQz, .-_c1rQz


==================== Asm code ====================
2018-03-16 15:56:06.549532872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rQz_info:
	.quad	_c1rQz
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1544


==================== Asm code ====================
2018-03-16 15:56:06.55236018 UTC

.section .data
.align 8
.align 1
lvl7_r1j3S_closure:
	.quad	lvl7_r1j3S_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.553217179 UTC

.section .text
.align 8
lvl7_r1j3S_entry:
_c1rQZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rR0
_c1rR1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c1rQW
_c1rQV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c1rQX_info,-24(%rbp)
	movl $lvl5_r1j3O_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c1rR0:
	jmp *-16(%r13)
_c1rQW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_r1j3S_entry, .-lvl7_r1j3S_entry


==================== Asm code ====================
2018-03-16 15:56:06.553971434 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_r1j3S_info:
	.quad	lvl7_r1j3S_entry
	.quad	0
	.quad	4294967317
	.quad	S1jKw_srt+1544


==================== Asm code ====================
2018-03-16 15:56:06.554566627 UTC

.section .text
.align 8
_c1rQX:
_c1rQX:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c1rQX, .-_c1rQX


==================== Asm code ====================
2018-03-16 15:56:06.555133953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rQX_info:
	.quad	_c1rQX
	.quad	0
	.quad	4294967326
	.quad	S1jKw_srt+1544


==================== Asm code ====================
2018-03-16 15:56:06.586643997 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_closure
.type GHC.Real.^_closure, @object
GHC.Real.^_closure:
	.quad	GHC.Real.^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.587488947 UTC

.section .text
.align 8
$dNum1_s1jCF_entry:
_c1rSI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rSJ
_c1rSK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1rSJ:
	jmp *-16(%r13)
	.size $dNum1_s1jCF_entry, .-$dNum1_s1jCF_entry


==================== Asm code ====================
2018-03-16 15:56:06.5881135 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum1_s1jCF_info:
	.quad	$dNum1_s1jCF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.588766138 UTC

.section .text
.align 8
sat_s1jCH_entry:
_c1rSN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rSO
_c1rSP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rSO:
	jmp *-16(%r13)
	.size sat_s1jCH_entry, .-sat_s1jCH_entry


==================== Asm code ====================
2018-03-16 15:56:06.589428933 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jCH_info:
	.quad	sat_s1jCH_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.59012104 UTC

.section .text
.align 8
sat_s1jCK_entry:
_c1rSS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rST
_c1rSU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rST:
	jmp *-16(%r13)
	.size sat_s1jCK_entry, .-sat_s1jCK_entry


==================== Asm code ====================
2018-03-16 15:56:06.590752263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jCK_info:
	.quad	sat_s1jCK_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.591458497 UTC

.section .text
.align 8
lvl8_s1jCM_entry:
_c1rSX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rSY
_c1rSZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even2_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rSY:
	jmp *-16(%r13)
	.size lvl8_s1jCM_entry, .-lvl8_s1jCM_entry


==================== Asm code ====================
2018-03-16 15:56:06.592085774 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_s1jCM_info:
	.quad	lvl8_s1jCM_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1560


==================== Asm code ====================
2018-03-16 15:56:06.592807358 UTC

.section .text
.align 8
lvl9_s1jCR_entry:
_c1rT2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rT3
_c1rT4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rT3:
	jmp *-16(%r13)
	.size lvl9_s1jCR_entry, .-lvl9_s1jCR_entry


==================== Asm code ====================
2018-03-16 15:56:06.593489313 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_s1jCR_info:
	.quad	lvl9_s1jCR_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.594175625 UTC

.section .text
.align 8
sat_s1jD8_entry:
_c1rT7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rT8
_c1rT9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1rT8:
	jmp *-16(%r13)
	.size sat_s1jD8_entry, .-sat_s1jD8_entry


==================== Asm code ====================
2018-03-16 15:56:06.594783166 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD8_info:
	.quad	sat_s1jD8_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.595505838 UTC

.section .text
.align 8
sat_s1jD7_entry:
_c1rTc:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTd
_c1rTe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rTd:
	jmp *-16(%r13)
	.size sat_s1jD7_entry, .-sat_s1jD7_entry


==================== Asm code ====================
2018-03-16 15:56:06.596154151 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD7_info:
	.quad	sat_s1jD7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.596853437 UTC

.section .text
.align 8
sat_s1jD4_entry:
_c1rTh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTi
_c1rTj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rTi:
	jmp *-16(%r13)
	.size sat_s1jD4_entry, .-sat_s1jD4_entry


==================== Asm code ====================
2018-03-16 15:56:06.597571555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD4_info:
	.quad	sat_s1jD4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.598344476 UTC

.section .text
.align 8
sat_s1jD3_entry:
_c1rTm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTn
_c1rTo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1rTn:
	jmp *-16(%r13)
	.size sat_s1jD3_entry, .-sat_s1jD3_entry


==================== Asm code ====================
2018-03-16 15:56:06.598991342 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD3_info:
	.quad	sat_s1jD3_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.599728843 UTC

.section .text
.align 8
sat_s1jD2_entry:
_c1rTs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTt
_c1rTu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rTt:
	jmp *-16(%r13)
	.size sat_s1jD2_entry, .-sat_s1jD2_entry


==================== Asm code ====================
2018-03-16 15:56:06.601018678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD2_info:
	.quad	sat_s1jD2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.601801319 UTC

.section .text
.align 8
sat_s1jD6_entry:
_c1rTx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTy
_c1rTz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1rTy:
	jmp *-16(%r13)
	.size sat_s1jD6_entry, .-sat_s1jD6_entry


==================== Asm code ====================
2018-03-16 15:56:06.602500027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD6_info:
	.quad	sat_s1jD6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.60319911 UTC

.section .text
.align 8
sat_s1jD5_entry:
_c1rTD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTE
_c1rTF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rTE:
	jmp *-16(%r13)
	.size sat_s1jD5_entry, .-sat_s1jD5_entry


==================== Asm code ====================
2018-03-16 15:56:06.603829616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jD5_info:
	.quad	sat_s1jD5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.604517811 UTC

.section .text
.align 8
sat_s1jDe_entry:
_c1rTI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTJ
_c1rTK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1rTJ:
	jmp *-16(%r13)
	.size sat_s1jDe_entry, .-sat_s1jDe_entry


==================== Asm code ====================
2018-03-16 15:56:06.605161164 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDe_info:
	.quad	sat_s1jDe_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:06.605905563 UTC

.section .text
.align 8
sat_s1jDd_entry:
_c1rTO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTP
_c1rTQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c1rTP:
	jmp *-16(%r13)
	.size sat_s1jDd_entry, .-sat_s1jDd_entry


==================== Asm code ====================
2018-03-16 15:56:06.606505899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDd_info:
	.quad	sat_s1jDd_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.607066614 UTC

.section .data.rel.ro
.align 8
.align 1
u1rWV_srtd:
	.quad	S1jKw_srt+696
	.quad	111
	.quad	1
	.quad	131941462441984


==================== Asm code ====================
2018-03-16 15:56:06.607836726 UTC

.section .text
.align 8
.globl GHC.Real.^_entry
.type GHC.Real.^_entry, @object
GHC.Real.^_entry:
_c1rTR:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rTS
_c1rTT:
	movq $block_c1rRj_info,-40(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1rTS:
	movl $GHC.Real.^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^_entry, .-GHC.Real.^_entry


==================== Asm code ====================
2018-03-16 15:56:06.608489471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_info
.type GHC.Real.^_info, @object
GHC.Real.^_info:
	.quad	GHC.Real.^_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1rWV_srtd


==================== Asm code ====================
2018-03-16 15:56:06.609075528 UTC

.section .data.rel.ro
.align 8
.align 1
u1rWW_srtd:
	.quad	S1jKw_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:06.60980448 UTC

.section .text
.align 8
_c1rRj:
_c1rRj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rTW
_c1rTV:
	movq $$dNum1_s1jCF_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1rRp_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1rTW:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rRj, .-_c1rRj


==================== Asm code ====================
2018-03-16 15:56:06.610417848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRj_info:
	.quad	_c1rRj
	.quad	4
	.quad	-4294967266
	.quad	u1rWW_srtd


==================== Asm code ====================
2018-03-16 15:56:06.610954108 UTC

.section .data.rel.ro
.align 8
.align 1
u1rWX_srtd:
	.quad	S1jKw_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:06.611678328 UTC

.section .text
.align 8
_c1rRp:
_c1rRp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rTZ
_c1rTY:
	movq $sat_s1jCH_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rRv_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.<_entry
_c1rTZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rRp, .-_c1rRp


==================== Asm code ====================
2018-03-16 15:56:06.612343875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRp_info:
	.quad	_c1rRp
	.quad	5
	.quad	-4294967266
	.quad	u1rWX_srtd


==================== Asm code ====================
2018-03-16 15:56:06.612879678 UTC

.section .data.rel.ro
.align 8
.align 1
u1rWY_srtd:
	.quad	S1jKw_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:06.61372815 UTC

.section .text
.align 8
_c1rRv:
_c1rRv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1rU1
_c1rUZ:
	movl $lvl7_r1j3S_closure,%ebx
	addq $56,%rbp
	jmp stg_ap_0_fast
_c1rU4:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1rU1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rU4
_c1rU3:
	movq $sat_s1jCK_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rRB_info,-8(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.$p1Ord_entry
	.size _c1rRv, .-_c1rRv


==================== Asm code ====================
2018-03-16 15:56:06.614356274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRv_info:
	.quad	_c1rRv
	.quad	6
	.quad	-4294967266
	.quad	u1rWY_srtd


==================== Asm code ====================
2018-03-16 15:56:06.614898434 UTC

.section .data.rel.ro
.align 8
.align 1
u1rWZ_srtd:
	.quad	S1jKw_srt+696
	.quad	109
	.quad	1
	.quad	17592253153280


==================== Asm code ====================
2018-03-16 15:56:06.615557092 UTC

.section .text
.align 8
_c1rRB:
_c1rRB:
	movq 8(%rbp),%rax
	movq $block_c1rRF_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 56(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1rRB, .-_c1rRB


==================== Asm code ====================
2018-03-16 15:56:06.616199254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRB_info:
	.quad	_c1rRB
	.quad	7
	.quad	-4294967266
	.quad	u1rWZ_srtd


==================== Asm code ====================
2018-03-16 15:56:06.616772872 UTC

.section .data.rel.ro
.align 8
.align 1
u1rX0_srtd:
	.quad	S1jKw_srt+696
	.quad	109
	.quad	1
	.quad	17592253153280


==================== Asm code ====================
2018-03-16 15:56:06.617641548 UTC

.section .text
.align 8
_c1rRF:
_c1rRF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1rU7
_c1rUV:
	movq 24(%rbp),%r14
	movq $stg_ap_p_info,40(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,48(%rbp)
	addq $40,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rUa:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1rU7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rUa
_c1rU9:
	movq $lvl8_s1jCM_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	jmp _c1rSw
	.size _c1rRF, .-_c1rRF


==================== Asm code ====================
2018-03-16 15:56:06.618330357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRF_info:
	.quad	_c1rRF
	.quad	6
	.quad	-4294967266
	.quad	u1rX0_srtd


==================== Asm code ====================
2018-03-16 15:56:06.618998833 UTC

.section .text
.align 8
_c1rSw:
_c1rSw:
	movq $block_c1rSy_info,-8(%rbp)
	movq (%rbp),%rsi
	movq 32(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c1rSw, .-_c1rSw


==================== Asm code ====================
2018-03-16 15:56:06.619593682 UTC

.section .data.rel.ro
.align 8
.align 1
u1rX1_srtd:
	.quad	S1jKw_srt+696
	.quad	91
	.quad	1
	.quad	67108864


==================== Asm code ====================
2018-03-16 15:56:06.620475987 UTC

.section .text
.align 8
_c1rSy:
_c1rSy:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1rUN
_c1rUO:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1rUR
_c1rUQ:
	movq $sat_s1jDe_info,-64(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq $sat_s1jDd_info,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,48(%rbp)
	leaq -64(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1rSw
_c1rUR:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c1rUN:
	movq $block_c1rRQ_info,8(%rbp)
	movq 16(%rbp),%r14
	movq %rcx,16(%rbp)
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp GHC.Classes.$p1Ord_entry
	.size _c1rSy, .-_c1rSy


==================== Asm code ====================
2018-03-16 15:56:06.621330567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rSy_info:
	.quad	_c1rSy
	.quad	7
	.quad	-4294967266
	.quad	u1rX1_srtd


==================== Asm code ====================
2018-03-16 15:56:06.621927392 UTC

.section .data.rel.ro
.align 8
.align 1
u1rX2_srtd:
	.quad	S1jKw_srt+696
	.quad	91
	.quad	1
	.quad	67108864


==================== Asm code ====================
2018-03-16 15:56:06.622640204 UTC

.section .text
.align 8
_c1rRQ:
_c1rRQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rUe
_c1rUd:
	movq $lvl9_s1jCR_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rRW_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
_c1rUe:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rRQ, .-_c1rRQ


==================== Asm code ====================
2018-03-16 15:56:06.623315873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRQ_info:
	.quad	_c1rRQ
	.quad	6
	.quad	-4294967266
	.quad	u1rX2_srtd


==================== Asm code ====================
2018-03-16 15:56:06.624259187 UTC

.section .text
.align 8
_c1rRW:
_c1rRW:
	movq 48(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1rUg
_c1rUI:
	movq %rax,%rbx
	addq $64,%rbp
	jmp stg_ap_0_fast
_c1rUj:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c1rUg:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1rUj
_c1rUi:
	movq $sat_s1jD8_info,-64(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq $sat_s1jD7_info,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rax,(%rbp)
	leaq -64(%r12),%rax
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,48(%rbp)
	jmp _c1rS9
	.size _c1rRW, .-_c1rRW


==================== Asm code ====================
2018-03-16 15:56:06.625024199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rRW_info:
	.quad	_c1rRW
	.quad	7
	.quad	4294967326
	.quad	S1jKw_srt+1584


==================== Asm code ====================
2018-03-16 15:56:06.626215367 UTC

.section .text
.align 8
_c1rS9:
_c1rS9:
	movq $block_c1rSb_info,-8(%rbp)
	movq 16(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c1rS9, .-_c1rS9


==================== Asm code ====================
2018-03-16 15:56:06.627149858 UTC

.section .text
.align 8
_c1rSb:
_c1rSb:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1rUr
_c1rUB:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1rUE
_c1rUD:
	movq $sat_s1jD6_info,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq $sat_s1jD5_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1rS9
_c1rUE:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c1rUr:
	movq $block_c1rSf_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _c1rSb, .-_c1rSb


==================== Asm code ====================
2018-03-16 15:56:06.627978051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rSb_info:
	.quad	_c1rSb
	.quad	8
	.quad	4294967326
	.quad	S1jKw_srt+1584


==================== Asm code ====================
2018-03-16 15:56:06.628874713 UTC

.section .text
.align 8
_c1rSf:
_c1rSf:
	movq 40(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _c1rUt
_c1rUA:
	movq %rax,%r14
	movq $stg_ap_pp_info,48(%rbp)
	movq %rcx,56(%rbp)
	movq %rdx,64(%rbp)
	addq $48,%rbp
	jmp GHC.Num.*_entry
_c1rUw:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
_c1rUt:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1rUw
_c1rUv:
	movq $sat_s1jD4_info,-104(%r12)
	movq %rax,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq $sat_s1jD3_info,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq $sat_s1jD2_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	leaq -104(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1rS9
	.size _c1rSf, .-_c1rSf


==================== Asm code ====================
2018-03-16 15:56:06.629708433 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rSf_info:
	.quad	_c1rSf
	.quad	8
	.quad	4294967326
	.quad	S1jKw_srt+1584


==================== Asm code ====================
2018-03-16 15:56:06.63027254 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^%^_closure
.type GHC.Real.^%^_closure, @object
GHC.Real.^%^_closure:
	.quad	GHC.Real.^%^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.631000669 UTC

.section .text
.align 8
.globl GHC.Real.^%^_entry
.type GHC.Real.^%^_entry, @object
GHC.Real.^%^_entry:
_c1rVn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rVt
_c1rVu:
	movq $block_c1rVk_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1rVk
_c1rVl:
	movq (%rbx),%rax
	jmp *(%rax)
_c1rVt:
	movl $GHC.Real.^%^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^%^_entry, .-GHC.Real.^%^_entry


==================== Asm code ====================
2018-03-16 15:56:06.631663418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^%^_info
.type GHC.Real.^%^_info, @object
GHC.Real.^%^_info:
	.quad	GHC.Real.^%^_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1592


==================== Asm code ====================
2018-03-16 15:56:06.63234706 UTC

.section .text
.align 8
_c1rVk:
_c1rVk:
	movq 16(%rbp),%rax
	movq $block_c1rVq_info,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w^%^_entry
	.size _c1rVk, .-_c1rVk


==================== Asm code ====================
2018-03-16 15:56:06.632915778 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rVk_info:
	.quad	_c1rVk
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1600


==================== Asm code ====================
2018-03-16 15:56:06.633707545 UTC

.section .text
.align 8
_c1rVq:
_c1rVq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rVy
_c1rVx:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rVy:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1rVq, .-_c1rVq


==================== Asm code ====================
2018-03-16 15:56:06.634322747 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rVq_info:
	.quad	_c1rVq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.634873824 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w^%^_closure
.type GHC.Real.$w^%^_closure, @object
GHC.Real.$w^%^_closure:
	.quad	GHC.Real.$w^%^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.635531969 UTC

.section .text
.align 8
$dNum_s1jDt_entry:
_c1rVM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rVN
_c1rVO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1rVN:
	jmp *-16(%r13)
	.size $dNum_s1jDt_entry, .-$dNum_s1jDt_entry


==================== Asm code ====================
2018-03-16 15:56:06.636168649 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jDt_info:
	.quad	$dNum_s1jDt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.636854198 UTC

.section .text
.align 8
sat_s1jDv_entry:
_c1rVX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rVY
_c1rVZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rVY:
	jmp *-16(%r13)
	.size sat_s1jDv_entry, .-sat_s1jDv_entry


==================== Asm code ====================
2018-03-16 15:56:06.637599408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDv_info:
	.quad	sat_s1jDv_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.63826886 UTC

.section .text
.align 8
sat_s1jDy_entry:
_c1rW8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rW9
_c1rWa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1rW9:
	jmp *-16(%r13)
	.size sat_s1jDy_entry, .-sat_s1jDy_entry


==================== Asm code ====================
2018-03-16 15:56:06.638857289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDy_info:
	.quad	sat_s1jDy_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.639570851 UTC

.section .text
.align 8
.globl GHC.Real.$w^%^_entry
.type GHC.Real.$w^%^_entry, @object
GHC.Real.$w^%^_entry:
_c1rWb:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1rWc
_c1rWd:
	movq $block_c1rVE_info,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1rWc:
	movl $GHC.Real.$w^%^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w^%^_entry, .-GHC.Real.$w^%^_entry


==================== Asm code ====================
2018-03-16 15:56:06.640213713 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w^%^_info
.type GHC.Real.$w^%^_info, @object
GHC.Real.$w^%^_info:
	.quad	GHC.Real.$w^%^_entry
	.quad	0
	.quad	255016333194821646
	.quad	17179869208
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.640925596 UTC

.section .text
.align 8
_c1rVE:
_c1rVE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rWg
_c1rWf:
	movq $$dNum_s1jDt_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1rVP_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1rWg:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rVE, .-_c1rVE


==================== Asm code ====================
2018-03-16 15:56:06.642461692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rVE_info:
	.quad	_c1rVE
	.quad	4
	.quad	218987536175857694
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.643191925 UTC

.section .text
.align 8
_c1rVP:
_c1rVP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rWj
_c1rWi:
	movq $sat_s1jDv_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1rW0_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.<_entry
_c1rWj:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1rVP, .-_c1rVP


==================== Asm code ====================
2018-03-16 15:56:06.64379821 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rVP_info:
	.quad	_c1rVP
	.quad	5
	.quad	218987536175857694
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.644609147 UTC

.section .text
.align 8
_c1rW0:
_c1rW0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1rWm
_c1rWS:
	movl $lvl6_r1j3R_closure,%ebx
	addq $56,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1rWp:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1rWm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1rWp
_c1rWo:
	movq $sat_s1jDy_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	movq $block_c1rWk_info,8(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Classes.$p1Ord_entry
	.size _c1rW0, .-_c1rW0


==================== Asm code ====================
2018-03-16 15:56:06.645451665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rW0_info:
	.quad	_c1rW0
	.quad	6
	.quad	218987536175857694
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.646162905 UTC

.section .text
.align 8
_c1rWk:
_c1rWk:
	movq 8(%rbp),%rax
	movq $block_c1rWt_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1rWk, .-_c1rWk


==================== Asm code ====================
2018-03-16 15:56:06.646763331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rWk_info:
	.quad	_c1rWk
	.quad	5
	.quad	74309398146580510
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.647484362 UTC

.section .text
.align 8
_c1rWt:
_c1rWt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1rWF
_c1rWO:
	movl $GHC.Real.$fEnumRatio1_closure,%r14d
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1rWF:
	movq $block_c1rWy_info,(%rbp)
	movq 32(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	jmp GHC.Real.^_entry
	.size _c1rWt, .-_c1rWt


==================== Asm code ====================
2018-03-16 15:56:06.648113471 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rWt_info:
	.quad	_c1rWt
	.quad	4
	.quad	74309398146580510
	.quad	S1jKw_srt+1416


==================== Asm code ====================
2018-03-16 15:56:06.648863101 UTC

.section .text
.align 8
_c1rWy:
_c1rWy:
	movq 24(%rbp),%rax
	movq $block_c1rWC_info,24(%rbp)
	movq 32(%rbp),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Real.^_entry
	.size _c1rWy, .-_c1rWy


==================== Asm code ====================
2018-03-16 15:56:06.649555794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rWy_info:
	.quad	_c1rWy
	.quad	132
	.quad	141733920798
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.650219792 UTC

.section .text
.align 8
_c1rWC:
_c1rWC:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1rWC, .-_c1rWC


==================== Asm code ====================
2018-03-16 15:56:06.650748473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1rWC_info:
	.quad	_c1rWC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.669324068 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w^^%^^_closure
.type GHC.Real.$w^^%^^_closure, @object
GHC.Real.$w^^%^^_closure:
	.quad	GHC.Real.$w^^%^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.670165575 UTC

.section .text
.align 8
$dNum_s1jDI_entry:
_c1s0V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s0W
_c1s0X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1s0W:
	jmp *-16(%r13)
	.size $dNum_s1jDI_entry, .-$dNum_s1jDI_entry


==================== Asm code ====================
2018-03-16 15:56:06.670763165 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jDI_info:
	.quad	$dNum_s1jDI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.671440736 UTC

.section .text
.align 8
sat_s1jDK_entry:
_c1s16:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s17
_c1s18:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1s17:
	jmp *-16(%r13)
	.size sat_s1jDK_entry, .-sat_s1jDK_entry


==================== Asm code ====================
2018-03-16 15:56:06.672055461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDK_info:
	.quad	sat_s1jDK_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.672749261 UTC

.section .text
.align 8
sat_s1jDN_entry:
_c1s1h:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s1i
_c1s1j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1s1i:
	jmp *-16(%r13)
	.size sat_s1jDN_entry, .-sat_s1jDN_entry


==================== Asm code ====================
2018-03-16 15:56:06.673450736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDN_info:
	.quad	sat_s1jDN_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.674141281 UTC

.section .text
.align 8
sat_s1jDT_entry:
_c1s1E:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s1F
_c1s1G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1s1F:
	jmp *-16(%r13)
	.size sat_s1jDT_entry, .-sat_s1jDT_entry


==================== Asm code ====================
2018-03-16 15:56:06.674782539 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDT_info:
	.quad	sat_s1jDT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.675496166 UTC

.section .text
.align 8
sat_s1jDS_entry:
_c1s1L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s1M
_c1s1N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c1s1M:
	jmp *-16(%r13)
	.size sat_s1jDS_entry, .-sat_s1jDS_entry


==================== Asm code ====================
2018-03-16 15:56:06.676072265 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDS_info:
	.quad	sat_s1jDS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.676757959 UTC

.section .text
.align 8
sat_s1jDV_entry:
_c1s1W:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s1X
_c1s1Y:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1s1X:
	jmp *-16(%r13)
	.size sat_s1jDV_entry, .-sat_s1jDV_entry


==================== Asm code ====================
2018-03-16 15:56:06.677434001 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jDV_info:
	.quad	sat_s1jDV_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.678108726 UTC

.section .text
.align 8
sat_s1jE2_entry:
_c1s25:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s26
_c1s27:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1s26:
	jmp *-16(%r13)
	.size sat_s1jE2_entry, .-sat_s1jE2_entry


==================== Asm code ====================
2018-03-16 15:56:06.678809511 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jE2_info:
	.quad	sat_s1jE2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.680137769 UTC

.section .text
.align 8
sat_s1jE4_entry:
_c1s2g:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s2h
_c1s2i:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1s2h:
	jmp *-16(%r13)
	.size sat_s1jE4_entry, .-sat_s1jE4_entry


==================== Asm code ====================
2018-03-16 15:56:06.680783546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jE4_info:
	.quad	sat_s1jE4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.681431151 UTC

.section .data.rel.ro
.align 8
.align 1
u1s43_srtd:
	.quad	S1jKw_srt+296
	.quad	167
	.quad	1
	.quad	0
	.quad	354871676928


==================== Asm code ====================
2018-03-16 15:56:06.682159711 UTC

.section .text
.align 8
.globl GHC.Real.$w^^%^^_entry
.type GHC.Real.$w^^%^^_entry, @object
GHC.Real.$w^^%^^_entry:
_c1s2j:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s2k
_c1s2l:
	movq $block_c1s0N_info,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1s2k:
	movl $GHC.Real.$w^^%^^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.$w^^%^^_entry, .-GHC.Real.$w^^%^^_entry


==================== Asm code ====================
2018-03-16 15:56:06.682838396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w^^%^^_info
.type GHC.Real.$w^^%^^_info, @object
GHC.Real.$w^^%^^_info:
	.quad	GHC.Real.$w^^%^^_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1s43_srtd


==================== Asm code ====================
2018-03-16 15:56:06.68336859 UTC

.section .data.rel.ro
.align 8
.align 1
u1s44_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:06.684068088 UTC

.section .text
.align 8
_c1s0N:
_c1s0N:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1s2o
_c1s2n:
	movq $$dNum_s1jDI_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c1s0Y_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1s2o:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1s0N, .-_c1s0N


==================== Asm code ====================
2018-03-16 15:56:06.684711663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s0N_info:
	.quad	_c1s0N
	.quad	4
	.quad	-4294967266
	.quad	u1s44_srtd


==================== Asm code ====================
2018-03-16 15:56:06.685355716 UTC

.section .data.rel.ro
.align 8
.align 1
u1s45_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:06.686090043 UTC

.section .text
.align 8
_c1s0Y:
_c1s0Y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1s2r
_c1s2q:
	movq $sat_s1jDK_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s19_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.>_entry
_c1s2r:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1s0Y, .-_c1s0Y


==================== Asm code ====================
2018-03-16 15:56:06.686768153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s0Y_info:
	.quad	_c1s0Y
	.quad	5
	.quad	-4294967266
	.quad	u1s45_srtd


==================== Asm code ====================
2018-03-16 15:56:06.687315286 UTC

.section .data.rel.ro
.align 8
.align 1
u1s46_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:06.688103302 UTC

.section .text
.align 8
_c1s19:
_c1s19:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1s2t
_c1s3R:
	movq $block_c1s3L_info,16(%rbp)
	movq 48(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	addq $16,%rbp
	jmp GHC.Real.^_entry
_c1s2w:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1s2t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1s2w
_c1s2v:
	movq $sat_s1jDN_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s1k_info,(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	jmp GHC.Classes.$p1Ord_entry
	.size _c1s19, .-_c1s19


==================== Asm code ====================
2018-03-16 15:56:06.688822317 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s19_info:
	.quad	_c1s19
	.quad	6
	.quad	-4294967266
	.quad	u1s46_srtd


==================== Asm code ====================
2018-03-16 15:56:06.689591925 UTC

.section .data.rel.ro
.align 8
.align 1
u1s47_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:06.690222796 UTC

.section .text
.align 8
_c1s1k:
_c1s1k:
	movq 8(%rbp),%rax
	movq $block_c1s1o_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c1s1k, .-_c1s1k


==================== Asm code ====================
2018-03-16 15:56:06.690819071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s1k_info:
	.quad	_c1s1k
	.quad	6
	.quad	-4294967266
	.quad	u1s47_srtd


==================== Asm code ====================
2018-03-16 15:56:06.691402257 UTC

.section .data.rel.ro
.align 8
.align 1
u1s48_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:06.69211812 UTC

.section .text
.align 8
_c1s1o:
_c1s1o:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1s2A
_c1s3I:
	movl $GHC.Real.$fEnumRatio1_closure,%r14d
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1s2A:
	movq $block_c1s1s_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 24(%rbp),%r14
	jmp GHC.Integer.Type.gtInteger#_entry
	.size _c1s1o, .-_c1s1o


==================== Asm code ====================
2018-03-16 15:56:06.69271158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s1o_info:
	.quad	_c1s1o
	.quad	5
	.quad	-4294967266
	.quad	u1s48_srtd


==================== Asm code ====================
2018-03-16 15:56:06.693337867 UTC

.section .data.rel.ro
.align 8
.align 1
u1s49_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993765888


==================== Asm code ====================
2018-03-16 15:56:06.694134282 UTC

.section .text
.align 8
_c1s1s:
_c1s1s:
	cmpq $1,%rbx
	je _c1s3u
_c1s2D:
	movq $block_c1s1w_info,(%rbp)
	movl $GHC.Real.even1_closure,%esi
	movq 24(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c1s3x:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
_c1s3u:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1s3x
_c1s3w:
	movq $sat_s1jE2_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s28_info,(%rbp)
	leaq -24(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	jmp GHC.Real.^_entry
	.size _c1s1s, .-_c1s1s


==================== Asm code ====================
2018-03-16 15:56:06.694826639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s1s_info:
	.quad	_c1s1s
	.quad	5
	.quad	-4294967266
	.quad	u1s49_srtd


==================== Asm code ====================
2018-03-16 15:56:06.695583792 UTC

.section .text
.align 8
_c1s28:
_c1s28:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1s3A
_c1s3z:
	movq $sat_s1jE4_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s3t_info,32(%rbp)
	leaq -24(%r12),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	movq %rbx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Real.^_entry
_c1s3A:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1s28, .-_c1s28


==================== Asm code ====================
2018-03-16 15:56:06.696230884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s28_info:
	.quad	_c1s28
	.quad	517
	.quad	141733920798
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.696882173 UTC

.section .text
.align 8
_c1s3t:
_c1s3t:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1s3t, .-_c1s3t


==================== Asm code ====================
2018-03-16 15:56:06.697471313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s3t_info:
	.quad	_c1s3t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.69803308 UTC

.section .data.rel.ro
.align 8
.align 1
u1s4a_srtd:
	.quad	S1jKw_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79456894976


==================== Asm code ====================
2018-03-16 15:56:06.698782983 UTC

.section .text
.align 8
_c1s1w:
_c1s1w:
	cmpq $1,%rbx
	je _c1s3s
_c1s2G:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1s2J
_c1s2I:
	movq $sat_s1jDT_info,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s1jDS_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s1O_info,(%rbp)
	leaq -48(%r12),%r8
	leaq -16(%r12),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	jmp GHC.Real.^_entry
_c1s3s:
	movl $GHC.Real.ratioZeroDenominatorError_closure,%ebx
	addq $48,%rbp
	jmp stg_ap_0_fast
_c1s2J:
	movq $56,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c1s1w, .-_c1s1w


==================== Asm code ====================
2018-03-16 15:56:06.699467437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s1w_info:
	.quad	_c1s1w
	.quad	5
	.quad	-4294967266
	.quad	u1s4a_srtd


==================== Asm code ====================
2018-03-16 15:56:06.700221829 UTC

.section .text
.align 8
_c1s1O:
_c1s1O:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1s2M
_c1s2L:
	movq $sat_s1jDV_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c1s2E_info,8(%rbp)
	leaq -24(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Real.^_entry
_c1s2M:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1s1O, .-_c1s1O


==================== Asm code ====================
2018-03-16 15:56:06.700918511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s1O_info:
	.quad	_c1s1O
	.quad	261
	.quad	158913789982
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.701637839 UTC

.section .text
.align 8
_c1s2E:
_c1s2E:
	movq $block_c1s2Q_info,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.even_entry
	.size _c1s2E, .-_c1s2E


==================== Asm code ====================
2018-03-16 15:56:06.702259639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s2E_info:
	.quad	_c1s2E
	.quad	132
	.quad	4294967326
	.quad	S1jKw_srt+1584


==================== Asm code ====================
2018-03-16 15:56:06.703020558 UTC

.section .text
.align 8
_c1s2Q:
_c1s2Q:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1s32
_c1s3i:
	movq $block_c1s3b_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c1s3b
_c1s3c:
	movq (%rbx),%rax
	jmp *(%rax)
_c1s32:
	movq $block_c1s2V_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c1s2Q, .-_c1s2Q


==================== Asm code ====================
2018-03-16 15:56:06.70377976 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s2Q_info:
	.quad	_c1s2Q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.704928962 UTC

.section .text
.align 8
_c1s2V:
_c1s2V:
	movq 8(%rbp),%rax
	movq $block_c1s2Z_info,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c1s2Z
_c1s34:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1s2V, .-_c1s2V


==================== Asm code ====================
2018-03-16 15:56:06.705647105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s2V_info:
	.quad	_c1s2V
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.706308805 UTC

.section .text
.align 8
_c1s2Z:
_c1s2Z:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1s2Z, .-_c1s2Z


==================== Asm code ====================
2018-03-16 15:56:06.706898241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s2Z_info:
	.quad	_c1s2Z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.707569388 UTC

.section .text
.align 8
_c1s3b:
_c1s3b:
	movq 8(%rbp),%rax
	movq $block_c1s3g_info,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c1s3g
_c1s3k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1s3b, .-_c1s3b


==================== Asm code ====================
2018-03-16 15:56:06.708177684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s3b_info:
	.quad	_c1s3b
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.708789545 UTC

.section .text
.align 8
_c1s3g:
_c1s3g:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1s3g, .-_c1s3g


==================== Asm code ====================
2018-03-16 15:56:06.70940395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s3g_info:
	.quad	_c1s3g
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.710045656 UTC

.section .text
.align 8
_c1s3L:
_c1s3L:
	movq 24(%rbp),%rax
	movq $block_c1s3P_info,24(%rbp)
	movq 32(%rbp),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movl $GHC.Num.$fNumInteger_closure,%r14d
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Real.^_entry
	.size _c1s3L, .-_c1s3L


==================== Asm code ====================
2018-03-16 15:56:06.710621401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s3L_info:
	.quad	_c1s3L
	.quad	132
	.quad	141733920798
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.711238221 UTC

.section .text
.align 8
_c1s3P:
_c1s3P:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1s3P, .-_c1s3P


==================== Asm code ====================
2018-03-16 15:56:06.711828716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s3P_info:
	.quad	_c1s3P
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.715695032 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^^%^^_closure
.type GHC.Real.^^%^^_closure, @object
GHC.Real.^^%^^_closure:
	.quad	GHC.Real.^^%^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.716454658 UTC

.section .text
.align 8
.globl GHC.Real.^^%^^_entry
.type GHC.Real.^^%^^_entry, @object
GHC.Real.^^%^^_entry:
_c1s6r:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s6x
_c1s6y:
	movq $block_c1s6o_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1s6o
_c1s6p:
	movq (%rbx),%rax
	jmp *(%rax)
_c1s6x:
	movl $GHC.Real.^^%^^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^^%^^_entry, .-GHC.Real.^^%^^_entry


==================== Asm code ====================
2018-03-16 15:56:06.717066617 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^^%^^_info
.type GHC.Real.^^%^^_info, @object
GHC.Real.^^%^^_info:
	.quad	GHC.Real.^^%^^_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1jKw_srt+1624


==================== Asm code ====================
2018-03-16 15:56:06.717806909 UTC

.section .text
.align 8
_c1s6o:
_c1s6o:
	movq 16(%rbp),%rax
	movq $block_c1s6u_info,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w^^%^^_entry
	.size _c1s6o, .-_c1s6o


==================== Asm code ====================
2018-03-16 15:56:06.718408645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s6o_info:
	.quad	_c1s6o
	.quad	2
	.quad	4294967326
	.quad	S1jKw_srt+1624


==================== Asm code ====================
2018-03-16 15:56:06.719112812 UTC

.section .text
.align 8
_c1s6u:
_c1s6u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1s6C
_c1s6B:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1s6C:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c1s6u, .-_c1s6u


==================== Asm code ====================
2018-03-16 15:56:06.719729259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s6u_info:
	.quad	_c1s6u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:06.729762066 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^^_closure
.type GHC.Real.^^_closure, @object
GHC.Real.^^_closure:
	.quad	GHC.Real.^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:06.730582814 UTC

.section .text
.align 8
$dNum_s1jEm_entry:
_c1s73:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s74
_c1s75:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1s74:
	jmp *-16(%r13)
	.size $dNum_s1jEm_entry, .-$dNum_s1jEm_entry


==================== Asm code ====================
2018-03-16 15:56:06.731217245 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1jEm_info:
	.quad	$dNum_s1jEm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.732500547 UTC

.section .text
.align 8
sat_s1jEo_entry:
_c1s7a:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7b
_c1s7c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Real.even1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c1s7b:
	jmp *-16(%r13)
	.size sat_s1jEo_entry, .-sat_s1jEo_entry


==================== Asm code ====================
2018-03-16 15:56:06.733329917 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jEo_info:
	.quad	sat_s1jEo_entry
	.quad	1
	.quad	4294967312
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.73410248 UTC

.section .text
.align 8
sat_s1jEr_entry:
_c1s7t:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7u
_c1s7v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c1s7u:
	jmp *-16(%r13)
	.size sat_s1jEr_entry, .-sat_s1jEr_entry


==================== Asm code ====================
2018-03-16 15:56:06.734721045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jEr_info:
	.quad	sat_s1jEr_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:06.735378126 UTC

.section .text
.align 8
sat_s1jEq_entry:
_c1s7A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7B
_c1s7C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1s7B:
	jmp *-16(%r13)
	.size sat_s1jEq_entry, .-sat_s1jEq_entry


==================== Asm code ====================
2018-03-16 15:56:06.736007822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jEq_info:
	.quad	sat_s1jEq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.736826363 UTC

.section .text
.align 8
sat_s1jEs_entry:
_c1s7D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7E
_c1s7F:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1s7H
_c1s7G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_s1jEr_info,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s1jEq_info,-16(%r12)
	movq %rax,(%r12)
	leaq -48(%r12),%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Real.^_entry
_c1s7H:
	movq $56,904(%r13)
_c1s7E:
	jmp *-16(%r13)
	.size sat_s1jEs_entry, .-sat_s1jEs_entry


==================== Asm code ====================
2018-03-16 15:56:06.737611295 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jEs_info:
	.quad	sat_s1jEs_entry
	.quad	5
	.quad	4294967311
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.738334441 UTC

.section .text
.align 8
sat_s1jEt_entry:
_c1s7O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7P
_c1s7Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1s7P:
	jmp *-16(%r13)
	.size sat_s1jEt_entry, .-sat_s1jEt_entry


==================== Asm code ====================
2018-03-16 15:56:06.738992365 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1jEt_info:
	.quad	sat_s1jEt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:06.739710462 UTC

.section .text
.align 8
.globl GHC.Real.^^_entry
.type GHC.Real.^^_entry, @object
GHC.Real.^^_entry:
_c1s7R:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1s7S
_c1s7T:
	movq $block_c1s6V_info,-40(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1s7S:
	movl $GHC.Real.^^_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.^^_entry, .-GHC.Real.^^_entry


==================== Asm code ====================
2018-03-16 15:56:06.740383593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^^_info
.type GHC.Real.^^_info, @object
GHC.Real.^^_info:
	.quad	GHC.Real.^^_entry
	.quad	0
	.quad	8817567858702
	.quad	17179869208
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.741200622 UTC

.section .text
.align 8
_c1s6V:
_c1s6V:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1s7W
_c1s7V:
	movq $$dNum_s1jEm_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s1jEo_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c1s7d_info,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1s7W:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c1s6V, .-_c1s6V


==================== Asm code ====================
2018-03-16 15:56:06.741934892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s6V_info:
	.quad	_c1s6V
	.quad	4
	.quad	21474836510
	.quad	S1jKw_srt+1552


==================== Asm code ====================
2018-03-16 15:56:06.742543449 UTC

.section .text
.align 8
_c1s7d:
_c1s7d:
	movq 8(%rbp),%rax
	movq $block_c1s7h_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.>=_entry
	.size _c1s7d, .-_c1s7d


==================== Asm code ====================
2018-03-16 15:56:06.743170841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s7d_info:
	.quad	_c1s7d
	.quad	6
	.quad	4294967326
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.744066133 UTC

.section .text
.align 8
_c1s7h:
_c1s7h:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c1s7Z
_c1s83:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1s86
_c1s85:
	movq $sat_s1jEt_info,-16(%r12)
	movq %rax,(%r12)
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	addq $48,%rbp
	jmp GHC.Real.^_entry
_c1s86:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c1s82:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c1s7Z:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1s82
_c1s81:
	movq $sat_s1jEs_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,32(%rbp)
	leaq -48(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Real.recip_entry
	.size _c1s7h, .-_c1s7h


==================== Asm code ====================
2018-03-16 15:56:06.744886807 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1s7h_info:
	.quad	_c1s7h
	.quad	5
	.quad	4294967326
	.quad	S1jKw_srt+1568


==================== Asm code ====================
2018-03-16 15:56:06.747663818 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Fractional_closure
.type GHC.Real.C:Fractional_closure, @object
GHC.Real.C:Fractional_closure:
	.quad	GHC.Real.C:Fractional_info


==================== Asm code ====================
2018-03-16 15:56:06.748388173 UTC

.section .text
.align 8
GHC.Real.C:Fractional_entry:
_c1s8W:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1s90
_c1s8Z:
	movq $GHC.Real.C:Fractional_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1s90:
	movq $40,904(%r13)
	movl $GHC.Real.C:Fractional_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.C:Fractional_entry, .-GHC.Real.C:Fractional_entry


==================== Asm code ====================
2018-03-16 15:56:06.749036885 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Fractional_info:
	.quad	GHC.Real.C:Fractional_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:56:06.752279983 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Integral_closure
.type GHC.Real.C:Integral_closure, @object
GHC.Real.C:Integral_closure:
	.quad	GHC.Real.C:Integral_info


==================== Asm code ====================
2018-03-16 15:56:06.752928435 UTC

.section .text
.align 8
.globl GHC.Real.C:Integral_slow
.type GHC.Real.C:Integral_slow, @object
GHC.Real.C:Integral_slow:
_c1s97:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.C:Integral_entry
	.size GHC.Real.C:Integral_slow, .-GHC.Real.C:Integral_slow


==================== Asm code ====================
2018-03-16 15:56:06.753811608 UTC

.section .text
.align 8
GHC.Real.C:Integral_entry:
_c1s9c:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1s9g
_c1s9f:
	movq $GHC.Real.C:Integral_con_info,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq (%rbp),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -71(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1s9g:
	movq $80,904(%r13)
	movl $GHC.Real.C:Integral_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Real.C:Integral_entry, .-GHC.Real.C:Integral_entry


==================== Asm code ====================
2018-03-16 15:56:06.754518433 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Integral_info:
	.quad	GHC.Real.C:Integral_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	GHC.Real.C:Integral_slow


==================== Asm code ====================
2018-03-16 15:56:06.757158914 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Real_closure
.type GHC.Real.C:Real_closure, @object
GHC.Real.C:Real_closure:
	.quad	GHC.Real.C:Real_info


==================== Asm code ====================
2018-03-16 15:56:06.758471099 UTC

.section .text
.align 8
GHC.Real.C:Real_entry:
_c1s9x:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1s9B
_c1s9A:
	movq $GHC.Real.C:Real_con_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1s9B:
	movq $32,904(%r13)
	movl $GHC.Real.C:Real_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.C:Real_entry, .-GHC.Real.C:Real_entry


==================== Asm code ====================
2018-03-16 15:56:06.759199326 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Real_info:
	.quad	GHC.Real.C:Real_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:06.762480985 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:RealFrac_closure
.type GHC.Real.C:RealFrac_closure, @object
GHC.Real.C:RealFrac_closure:
	.quad	GHC.Real.C:RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:06.7631991 UTC

.section .text
.align 8
.globl GHC.Real.C:RealFrac_slow
.type GHC.Real.C:RealFrac_slow, @object
GHC.Real.C:RealFrac_slow:
_c1s9I:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.C:RealFrac_entry
	.size GHC.Real.C:RealFrac_slow, .-GHC.Real.C:RealFrac_slow


==================== Asm code ====================
2018-03-16 15:56:06.764046259 UTC

.section .text
.align 8
GHC.Real.C:RealFrac_entry:
_c1s9N:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1s9R
_c1s9Q:
	movq $GHC.Real.C:RealFrac_con_info,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1s9R:
	movq $64,904(%r13)
	movl $GHC.Real.C:RealFrac_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Real.C:RealFrac_entry, .-GHC.Real.C:RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:06.764747204 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:RealFrac_info:
	.quad	GHC.Real.C:RealFrac_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Real.C:RealFrac_slow


==================== Asm code ====================
2018-03-16 15:56:06.767210405 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.:%_closure
.type GHC.Real.:%_closure, @object
GHC.Real.:%_closure:
	.quad	GHC.Real.:%_info


==================== Asm code ====================
2018-03-16 15:56:06.767947226 UTC

.section .text
.align 8
GHC.Real.:%_entry:
_c1sa6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1saa
_c1sa9:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1saa:
	movq $24,904(%r13)
	movl $GHC.Real.:%_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Real.:%_entry, .-GHC.Real.:%_entry


==================== Asm code ====================
2018-03-16 15:56:06.768578376 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.:%_info:
	.quad	GHC.Real.:%_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:06.770563235 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1olZ_str:
	.asciz "base:GHC.Real.C:Fractional"


==================== Asm code ====================
2018-03-16 15:56:06.771244238 UTC

.section .text
.align 8
.globl GHC.Real.C:Fractional_con_entry
.type GHC.Real.C:Fractional_con_entry, @object
GHC.Real.C:Fractional_con_entry:
_c1sag:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Fractional_con_entry, .-GHC.Real.C:Fractional_con_entry


==================== Asm code ====================
2018-03-16 15:56:06.77182443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Fractional_con_info
.type GHC.Real.C:Fractional_con_info, @object
GHC.Real.C:Fractional_con_info:
	.quad	GHC.Real.C:Fractional_con_entry
	.quad	4
	.quad	1
	.quad	i1olZ_str


==================== Asm code ====================
2018-03-16 15:56:06.773833423 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1om1_str:
	.asciz "base:GHC.Real.C:Integral"


==================== Asm code ====================
2018-03-16 15:56:06.774443467 UTC

.section .text
.align 8
.globl GHC.Real.C:Integral_con_entry
.type GHC.Real.C:Integral_con_entry, @object
GHC.Real.C:Integral_con_entry:
_c1sam:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Integral_con_entry, .-GHC.Real.C:Integral_con_entry


==================== Asm code ====================
2018-03-16 15:56:06.775025501 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Integral_con_info
.type GHC.Real.C:Integral_con_info, @object
GHC.Real.C:Integral_con_info:
	.quad	GHC.Real.C:Integral_con_entry
	.quad	9
	.quad	1
	.quad	i1om1_str


==================== Asm code ====================
2018-03-16 15:56:06.776957583 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1om3_str:
	.asciz "base:GHC.Real.C:Real"


==================== Asm code ====================
2018-03-16 15:56:06.778567772 UTC

.section .text
.align 8
.globl GHC.Real.C:Real_con_entry
.type GHC.Real.C:Real_con_entry, @object
GHC.Real.C:Real_con_entry:
_c1sas:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Real_con_entry, .-GHC.Real.C:Real_con_entry


==================== Asm code ====================
2018-03-16 15:56:06.779147931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Real_con_info
.type GHC.Real.C:Real_con_info, @object
GHC.Real.C:Real_con_info:
	.quad	GHC.Real.C:Real_con_entry
	.quad	3
	.quad	1
	.quad	i1om3_str


==================== Asm code ====================
2018-03-16 15:56:06.781133239 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1om5_str:
	.asciz "base:GHC.Real.C:RealFrac"


==================== Asm code ====================
2018-03-16 15:56:06.781827898 UTC

.section .text
.align 8
.globl GHC.Real.C:RealFrac_con_entry
.type GHC.Real.C:RealFrac_con_entry, @object
GHC.Real.C:RealFrac_con_entry:
_c1say:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:RealFrac_con_entry, .-GHC.Real.C:RealFrac_con_entry


==================== Asm code ====================
2018-03-16 15:56:06.782518563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:RealFrac_con_info
.type GHC.Real.C:RealFrac_con_info, @object
GHC.Real.C:RealFrac_con_info:
	.quad	GHC.Real.C:RealFrac_con_entry
	.quad	7
	.quad	1
	.quad	i1om5_str


==================== Asm code ====================
2018-03-16 15:56:06.785152438 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1om7_str:
	.asciz "base:GHC.Real.:%"


==================== Asm code ====================
2018-03-16 15:56:06.785920649 UTC

.section .text
.align 8
.globl GHC.Real.:%_con_entry
.type GHC.Real.:%_con_entry, @object
GHC.Real.:%_con_entry:
_c1saE:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.:%_con_entry, .-GHC.Real.:%_con_entry


==================== Asm code ====================
2018-03-16 15:56:06.786572667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.:%_con_info
.type GHC.Real.:%_con_info, @object
GHC.Real.:%_con_info:
	.quad	GHC.Real.:%_con_entry
	.quad	2
	.quad	4
	.quad	i1om7_str


==================== Asm code ====================
2018-03-16 15:56:06.791263132 UTC

.section .data.rel.ro
.align 8
.align 1
S1jKw_srt:
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$fOrdRatio_$s$c<_closure
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure
	.quad	GHC.Real.$fOrdRatio_$s$c>_closure
	.quad	GHC.Real.$fOrdRatio_$s$cmin_closure
	.quad	GHC.Real.$fOrdRatio_$s$cmax_closure
	.quad	sat_s1j8H_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.$dmfloor_closure
	.quad	GHC.Real.$dmceiling_closure
	.quad	GHC.Real.$dmrecip_closure
	.quad	GHC.Real.$dmdivMod_closure
	.quad	GHC.Exception.divZeroException_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.$fIntegralInt_$cmod_closure
	.quad	GHC.Real.$fIntegralInt_$crem_closure
	.quad	GHC.Real.$fIntegralInteger_$cquot_closure
	.quad	GHC.Real.$fIntegralInteger_$crem_closure
	.quad	GHC.Integer.Type.divInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cdiv_closure
	.quad	GHC.Integer.Type.modInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cmod_closure
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_closure
	.quad	GHC.Integer.Type.divModInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_closure
	.quad	GHC.Real.$fIntegralWord_$cquot_closure
	.quad	GHC.Real.$fIntegralWord_$crem_closure
	.quad	GHC.Real.$fIntegralWord_$cquotRem_closure
	.quad	GHC.Real.$fIntegralWord_$cdivMod_closure
	.quad	GHC.Exception.ratioZeroDenomException_closure
	.quad	GHC.Real.ratioZeroDenominatorError_closure
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_closure
	.quad	GHC.Exception.overflowException_closure
	.quad	GHC.Real.$fIntegralInt_$cdivMod_closure
	.quad	lvl_r1j38_closure
	.quad	GHC.Real.$fIntegralInt_$cquotRem_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.$fIntegralInt_$cdiv_closure
	.quad	GHC.Real.$w$cdiv_closure
	.quad	GHC.Real.$fIntegralInt_$cquot_closure
	.quad	GHC.Real.$wgcd'_closure
	.quad	lvl2_r1j3a_closure
	.quad	GHC.Real.$fEnumRatio_gcd'_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.reduce_$sreduce_closure
	.quad	GHC.Real.$fRealWord_$ctoRational_closure
	.quad	GHC.Real.$fFractionalRatio_$s$c*_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.Real.$w$s$c-_closure
	.quad	GHC.Real.$fEnumRatio_$s$c-_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$fEnumRatio_$s$c+_closure
	.quad	GHC.Real.$w$s$cfromRational_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_closure
	.quad	GHC.Real.$w$s$c/_closure
	.quad	GHC.Real.$fFractionalRatio_$s$c/_closure
	.quad	GHC.Real.$w$snumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Real.numericEnumFrom_closure
	.quad	sat_s1jhS_closure
	.quad	GHC.Real.even2_closure
	.quad	GHC.Real.$fEnumRatio2_closure
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure
	.quad	GHC.Real.$w$snumericEnumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure
	.quad	GHC.Real.numericEnumFromTo_closure
	.quad	GHC.Real.$w$snumericEnumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure
	.quad	GHC.Real.$w$snumericEnumFromThenTo_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure
	.quad	GHC.Real.numericEnumFromThenTo_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.showSigned_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Real.odd_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	lvl3_r1j3b_closure
	.quad	GHC.Real.$dmround_closure
	.quad	GHC.Real.$fRealFracRatio1_closure
	.quad	GHC.Real.integralEnumFrom_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.integralEnumFromThen_closure
	.quad	GHC.Real.integralEnumFromTo_closure
	.quad	GHC.Real.integralEnumFromThenTo_closure
	.quad	GHC.Real.$w$csignum_closure
	.quad	GHC.Real.$fNumRatio_$csignum_closure
	.quad	GHC.Real.$w$cfromInteger_closure
	.quad	GHC.Real.$fNumRatio_$cfromInteger_closure
	.quad	GHC.Real.$w$crecip_closure
	.quad	GHC.Real.$fFractionalRatio_$crecip_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.$w$s$cproperFraction_closure
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.$wreduce_closure
	.quad	GHC.Real.reduce_closure
	.quad	GHC.Real.%_$s%_closure
	.quad	GHC.Real.$w$s$cfromRational_closure
	.quad	GHC.Real.$w%_closure
	.quad	GHC.Real.%_closure
	.quad	GHC.Real.$w$c/_closure
	.quad	GHC.Real.$fFractionalRatio_$c/_closure
	.quad	GHC.Real.$w$cfromRational_closure
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_closure
	.quad	GHC.Real.$w$c+_closure
	.quad	GHC.Real.$fNumRatio_$c+_closure
	.quad	GHC.Real.$w$c-_closure
	.quad	GHC.Real.$fNumRatio_$c-_closure
	.quad	GHC.Real.$w$c*_closure
	.quad	GHC.Real.$fNumRatio_$c*_closure
	.quad	GHC.Real.$fNumRatio_closure
	.quad	GHC.Real.$fEnumRatio_$s$csucc_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$fEnumRatio_$csucc_closure
	.quad	GHC.Real.$fEnumRatio_$s$cpred_closure
	.quad	GHC.Real.$fEnumRatio_$cpred_closure
	.quad	GHC.Real.$fFractionalRatio_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
	.quad	GHC.Real.$fRealRatio_closure
	.quad	GHC.Real.$w$s$cceiling_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_closure
	.quad	GHC.Real.$w$cceiling_closure
	.quad	GHC.Real.$fRealFracRatio_$cceiling_closure
	.quad	GHC.Real.$w$s$cfloor_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_closure
	.quad	GHC.Real.$w$cfloor_closure
	.quad	GHC.Real.$fRealFracRatio_$cfloor_closure
	.quad	sat_s1jvS_closure
	.quad	GHC.Real.$w$s$cround_closure
	.quad	GHC.Real.$fRealFracRatio2_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cround_closure
	.quad	GHC.Real.$w$cround_closure
	.quad	GHC.Real.$fRealFracRatio_$cround_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_closure
	.quad	GHC.Real.$fRealFracRatio_closure
	.quad	g_r1j3N_closure
	.quad	GHC.Real.^_f_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Real.^_$s^_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$w$s$cfromEnum_closure
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_closure
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.Real.$w$s$cshowsPrec_closure
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_closure
	.quad	GHC.Real.$fShowRatio1_closure
	.quad	GHC.Real.$w$s$cshow_closure
	.quad	GHC.Real.$fShowRatio_$s$cshow_closure
	.quad	GHC.Real.$fIntegralWord_closure
	.quad	GHC.Real.$w$slcm_closure
	.quad	GHC.Real.lcm_$slcm_closure
	.quad	GHC.Real.$w$slcm1_closure
	.quad	GHC.Real.lcm_$slcm1_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.lcm_closure
	.quad	GHC.Real.$w$ctoEnum_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cpred_closure
	.quad	GHC.Real.$fEnumRatio_$csucc_closure
	.quad	GHC.Real.$fEnumRatio_closure
	.quad	GHC.Real.^_$s^2_closure
	.quad	GHC.Real.^2_closure
	.quad	$wg1_r1j3Q_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Real.^_f1_closure
	.quad	GHC.Real.^_$s^1_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.even2_closure
	.quad	GHC.Real.^_closure
	.quad	lvl7_r1j3S_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Real.^%^_closure
	.quad	GHC.Real.$w^%^_closure
	.quad	GHC.Num.$fNumInteger_closure
	.quad	lvl6_r1j3R_closure
	.quad	GHC.Real.$w^^%^^_closure
	.quad	GHC.Real.^^%^^_closure
	.quad	GHC.Real.^^_closure


==================== Asm code ====================
2018-03-16 15:56:16.030957484 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Fractional_closure
.type GHC.Real.$p1Fractional_closure, @object
GHC.Real.$p1Fractional_closure:
	.quad	GHC.Real.$p1Fractional_info


==================== Asm code ====================
2018-03-16 15:56:16.031839735 UTC

.section .text
.align 8
.globl GHC.Real.$p1Fractional_entry
.type GHC.Real.$p1Fractional_entry, @object
GHC.Real.$p1Fractional_entry:
_c1sLs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sLt
_c1sLu:
	leaq block_c1sLp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sLp
_c1sLq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sLt:
	leaq GHC.Real.$p1Fractional_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p1Fractional_entry, .-GHC.Real.$p1Fractional_entry


==================== Asm code ====================
2018-03-16 15:56:16.032450366 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Fractional_info
.type GHC.Real.$p1Fractional_info, @object
GHC.Real.$p1Fractional_info:
	.quad	GHC.Real.$p1Fractional_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.03308509 UTC

.section .text
.align 8
_c1sLp:
_c1sLp:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sLp, .-_c1sLp


==================== Asm code ====================
2018-03-16 15:56:16.03370437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sLp_info:
	.quad	_c1sLp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.036412829 UTC

.section .data
.align 8
.align 1
.globl GHC.Real./_closure
.type GHC.Real./_closure, @object
GHC.Real./_closure:
	.quad	GHC.Real./_info


==================== Asm code ====================
2018-03-16 15:56:16.0371645 UTC

.section .text
.align 8
.globl GHC.Real./_entry
.type GHC.Real./_entry, @object
GHC.Real./_entry:
_c1sLS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sLT
_c1sLU:
	leaq block_c1sLP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sLP
_c1sLQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sLT:
	leaq GHC.Real./_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real./_entry, .-GHC.Real./_entry


==================== Asm code ====================
2018-03-16 15:56:16.037844796 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real./_info
.type GHC.Real./_info, @object
GHC.Real./_info:
	.quad	GHC.Real./_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.03849596 UTC

.section .text
.align 8
_c1sLP:
_c1sLP:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sLP, .-_c1sLP


==================== Asm code ====================
2018-03-16 15:56:16.039021887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sLP_info:
	.quad	_c1sLP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.041758072 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.recip_closure
.type GHC.Real.recip_closure, @object
GHC.Real.recip_closure:
	.quad	GHC.Real.recip_info


==================== Asm code ====================
2018-03-16 15:56:16.042496379 UTC

.section .text
.align 8
.globl GHC.Real.recip_entry
.type GHC.Real.recip_entry, @object
GHC.Real.recip_entry:
_c1sMg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sMh
_c1sMi:
	leaq block_c1sMd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sMd
_c1sMe:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sMh:
	leaq GHC.Real.recip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.recip_entry, .-GHC.Real.recip_entry


==================== Asm code ====================
2018-03-16 15:56:16.043170708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.recip_info
.type GHC.Real.recip_info, @object
GHC.Real.recip_info:
	.quad	GHC.Real.recip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.043789895 UTC

.section .text
.align 8
_c1sMd:
_c1sMd:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sMd, .-_c1sMd


==================== Asm code ====================
2018-03-16 15:56:16.044351234 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sMd_info:
	.quad	_c1sMd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.047044 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.fromRational_closure
.type GHC.Real.fromRational_closure, @object
GHC.Real.fromRational_closure:
	.quad	GHC.Real.fromRational_info


==================== Asm code ====================
2018-03-16 15:56:16.047782634 UTC

.section .text
.align 8
.globl GHC.Real.fromRational_entry
.type GHC.Real.fromRational_entry, @object
GHC.Real.fromRational_entry:
_c1sME:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sMF
_c1sMG:
	leaq block_c1sMB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sMB
_c1sMC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sMF:
	leaq GHC.Real.fromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.fromRational_entry, .-GHC.Real.fromRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.048424501 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.fromRational_info
.type GHC.Real.fromRational_info, @object
GHC.Real.fromRational_info:
	.quad	GHC.Real.fromRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.049084836 UTC

.section .text
.align 8
_c1sMB:
_c1sMB:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sMB, .-_c1sMB


==================== Asm code ====================
2018-03-16 15:56:16.049719479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sMB_info:
	.quad	_c1sMB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.052528493 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Integral_closure
.type GHC.Real.$p1Integral_closure, @object
GHC.Real.$p1Integral_closure:
	.quad	GHC.Real.$p1Integral_info


==================== Asm code ====================
2018-03-16 15:56:16.053697745 UTC

.section .text
.align 8
.globl GHC.Real.$p1Integral_entry
.type GHC.Real.$p1Integral_entry, @object
GHC.Real.$p1Integral_entry:
_c1sN2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sN3
_c1sN4:
	leaq block_c1sMZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sMZ
_c1sN0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sN3:
	leaq GHC.Real.$p1Integral_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p1Integral_entry, .-GHC.Real.$p1Integral_entry


==================== Asm code ====================
2018-03-16 15:56:16.054358364 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Integral_info
.type GHC.Real.$p1Integral_info, @object
GHC.Real.$p1Integral_info:
	.quad	GHC.Real.$p1Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.055020714 UTC

.section .text
.align 8
_c1sMZ:
_c1sMZ:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sMZ, .-_c1sMZ


==================== Asm code ====================
2018-03-16 15:56:16.055610916 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sMZ_info:
	.quad	_c1sMZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.058917654 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2Integral_closure
.type GHC.Real.$p2Integral_closure, @object
GHC.Real.$p2Integral_closure:
	.quad	GHC.Real.$p2Integral_info


==================== Asm code ====================
2018-03-16 15:56:16.059719721 UTC

.section .text
.align 8
.globl GHC.Real.$p2Integral_entry
.type GHC.Real.$p2Integral_entry, @object
GHC.Real.$p2Integral_entry:
_c1sNs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sNt
_c1sNu:
	leaq block_c1sNp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sNp
_c1sNq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sNt:
	leaq GHC.Real.$p2Integral_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p2Integral_entry, .-GHC.Real.$p2Integral_entry


==================== Asm code ====================
2018-03-16 15:56:16.060353401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2Integral_info
.type GHC.Real.$p2Integral_info, @object
GHC.Real.$p2Integral_info:
	.quad	GHC.Real.$p2Integral_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.061001918 UTC

.section .text
.align 8
_c1sNp:
_c1sNp:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sNp, .-_c1sNp


==================== Asm code ====================
2018-03-16 15:56:16.061626076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sNp_info:
	.quad	_c1sNp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.064241999 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.quot_closure
.type GHC.Real.quot_closure, @object
GHC.Real.quot_closure:
	.quad	GHC.Real.quot_info


==================== Asm code ====================
2018-03-16 15:56:16.065016741 UTC

.section .text
.align 8
.globl GHC.Real.quot_entry
.type GHC.Real.quot_entry, @object
GHC.Real.quot_entry:
_c1sNS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sNT
_c1sNU:
	leaq block_c1sNP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sNP
_c1sNQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sNT:
	leaq GHC.Real.quot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.quot_entry, .-GHC.Real.quot_entry


==================== Asm code ====================
2018-03-16 15:56:16.065758284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.quot_info
.type GHC.Real.quot_info, @object
GHC.Real.quot_info:
	.quad	GHC.Real.quot_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.066419248 UTC

.section .text
.align 8
_c1sNP:
_c1sNP:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sNP, .-_c1sNP


==================== Asm code ====================
2018-03-16 15:56:16.066969162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sNP_info:
	.quad	_c1sNP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.07006219 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.rem_closure
.type GHC.Real.rem_closure, @object
GHC.Real.rem_closure:
	.quad	GHC.Real.rem_info


==================== Asm code ====================
2018-03-16 15:56:16.070859294 UTC

.section .text
.align 8
.globl GHC.Real.rem_entry
.type GHC.Real.rem_entry, @object
GHC.Real.rem_entry:
_c1sOg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sOh
_c1sOi:
	leaq block_c1sOd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sOd
_c1sOe:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sOh:
	leaq GHC.Real.rem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.rem_entry, .-GHC.Real.rem_entry


==================== Asm code ====================
2018-03-16 15:56:16.071493815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.rem_info
.type GHC.Real.rem_info, @object
GHC.Real.rem_info:
	.quad	GHC.Real.rem_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.072125441 UTC

.section .text
.align 8
_c1sOd:
_c1sOd:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sOd, .-_c1sOd


==================== Asm code ====================
2018-03-16 15:56:16.072723978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sOd_info:
	.quad	_c1sOd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.07548441 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.div_closure
.type GHC.Real.div_closure, @object
GHC.Real.div_closure:
	.quad	GHC.Real.div_info


==================== Asm code ====================
2018-03-16 15:56:16.076218948 UTC

.section .text
.align 8
.globl GHC.Real.div_entry
.type GHC.Real.div_entry, @object
GHC.Real.div_entry:
_c1sOE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sOF
_c1sOG:
	leaq block_c1sOB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sOB
_c1sOC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sOF:
	leaq GHC.Real.div_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.div_entry, .-GHC.Real.div_entry


==================== Asm code ====================
2018-03-16 15:56:16.076873813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.div_info
.type GHC.Real.div_info, @object
GHC.Real.div_info:
	.quad	GHC.Real.div_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.077564306 UTC

.section .text
.align 8
_c1sOB:
_c1sOB:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sOB, .-_c1sOB


==================== Asm code ====================
2018-03-16 15:56:16.078147876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sOB_info:
	.quad	_c1sOB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.080884288 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.mod_closure
.type GHC.Real.mod_closure, @object
GHC.Real.mod_closure:
	.quad	GHC.Real.mod_info


==================== Asm code ====================
2018-03-16 15:56:16.08169361 UTC

.section .text
.align 8
.globl GHC.Real.mod_entry
.type GHC.Real.mod_entry, @object
GHC.Real.mod_entry:
_c1sP2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sP3
_c1sP4:
	leaq block_c1sOZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sOZ
_c1sP0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sP3:
	leaq GHC.Real.mod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.mod_entry, .-GHC.Real.mod_entry


==================== Asm code ====================
2018-03-16 15:56:16.082382382 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.mod_info
.type GHC.Real.mod_info, @object
GHC.Real.mod_info:
	.quad	GHC.Real.mod_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.083022039 UTC

.section .text
.align 8
_c1sOZ:
_c1sOZ:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sOZ, .-_c1sOZ


==================== Asm code ====================
2018-03-16 15:56:16.08360657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sOZ_info:
	.quad	_c1sOZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.086444425 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.quotRem_closure
.type GHC.Real.quotRem_closure, @object
GHC.Real.quotRem_closure:
	.quad	GHC.Real.quotRem_info


==================== Asm code ====================
2018-03-16 15:56:16.087209967 UTC

.section .text
.align 8
.globl GHC.Real.quotRem_entry
.type GHC.Real.quotRem_entry, @object
GHC.Real.quotRem_entry:
_c1sPq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sPr
_c1sPs:
	leaq block_c1sPn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sPn
_c1sPo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sPr:
	leaq GHC.Real.quotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.quotRem_entry, .-GHC.Real.quotRem_entry


==================== Asm code ====================
2018-03-16 15:56:16.087864037 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.quotRem_info
.type GHC.Real.quotRem_info, @object
GHC.Real.quotRem_info:
	.quad	GHC.Real.quotRem_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.088543567 UTC

.section .text
.align 8
_c1sPn:
_c1sPn:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sPn, .-_c1sPn


==================== Asm code ====================
2018-03-16 15:56:16.08978435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sPn_info:
	.quad	_c1sPn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.092424928 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.divMod_closure
.type GHC.Real.divMod_closure, @object
GHC.Real.divMod_closure:
	.quad	GHC.Real.divMod_info


==================== Asm code ====================
2018-03-16 15:56:16.0931801 UTC

.section .text
.align 8
.globl GHC.Real.divMod_entry
.type GHC.Real.divMod_entry, @object
GHC.Real.divMod_entry:
_c1sPO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sPP
_c1sPQ:
	leaq block_c1sPL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sPL
_c1sPM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sPP:
	leaq GHC.Real.divMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.divMod_entry, .-GHC.Real.divMod_entry


==================== Asm code ====================
2018-03-16 15:56:16.093934907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.divMod_info
.type GHC.Real.divMod_info, @object
GHC.Real.divMod_info:
	.quad	GHC.Real.divMod_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.094572875 UTC

.section .text
.align 8
_c1sPL:
_c1sPL:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sPL, .-_c1sPL


==================== Asm code ====================
2018-03-16 15:56:16.095102624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sPL_info:
	.quad	_c1sPL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.097774176 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.toInteger_closure
.type GHC.Real.toInteger_closure, @object
GHC.Real.toInteger_closure:
	.quad	GHC.Real.toInteger_info


==================== Asm code ====================
2018-03-16 15:56:16.098527039 UTC

.section .text
.align 8
.globl GHC.Real.toInteger_entry
.type GHC.Real.toInteger_entry, @object
GHC.Real.toInteger_entry:
_c1sQc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sQd
_c1sQe:
	leaq block_c1sQ9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sQ9
_c1sQa:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sQd:
	leaq GHC.Real.toInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.toInteger_entry, .-GHC.Real.toInteger_entry


==================== Asm code ====================
2018-03-16 15:56:16.099177882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.toInteger_info
.type GHC.Real.toInteger_info, @object
GHC.Real.toInteger_info:
	.quad	GHC.Real.toInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.099813051 UTC

.section .text
.align 8
_c1sQ9:
_c1sQ9:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sQ9, .-_c1sQ9


==================== Asm code ====================
2018-03-16 15:56:16.100409133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sQ9_info:
	.quad	_c1sQ9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.10356527 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1Real_closure
.type GHC.Real.$p1Real_closure, @object
GHC.Real.$p1Real_closure:
	.quad	GHC.Real.$p1Real_info


==================== Asm code ====================
2018-03-16 15:56:16.104314566 UTC

.section .text
.align 8
.globl GHC.Real.$p1Real_entry
.type GHC.Real.$p1Real_entry, @object
GHC.Real.$p1Real_entry:
_c1sQA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sQB
_c1sQC:
	leaq block_c1sQx_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sQx
_c1sQy:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sQB:
	leaq GHC.Real.$p1Real_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p1Real_entry, .-GHC.Real.$p1Real_entry


==================== Asm code ====================
2018-03-16 15:56:16.104977415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1Real_info
.type GHC.Real.$p1Real_info, @object
GHC.Real.$p1Real_info:
	.quad	GHC.Real.$p1Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.105691401 UTC

.section .text
.align 8
_c1sQx:
_c1sQx:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sQx, .-_c1sQx


==================== Asm code ====================
2018-03-16 15:56:16.106232786 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sQx_info:
	.quad	_c1sQx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.108939308 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2Real_closure
.type GHC.Real.$p2Real_closure, @object
GHC.Real.$p2Real_closure:
	.quad	GHC.Real.$p2Real_info


==================== Asm code ====================
2018-03-16 15:56:16.109749692 UTC

.section .text
.align 8
.globl GHC.Real.$p2Real_entry
.type GHC.Real.$p2Real_entry, @object
GHC.Real.$p2Real_entry:
_c1sR0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sR1
_c1sR2:
	leaq block_c1sQX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sQX
_c1sQY:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sR1:
	leaq GHC.Real.$p2Real_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p2Real_entry, .-GHC.Real.$p2Real_entry


==================== Asm code ====================
2018-03-16 15:56:16.110451808 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2Real_info
.type GHC.Real.$p2Real_info, @object
GHC.Real.$p2Real_info:
	.quad	GHC.Real.$p2Real_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.111101967 UTC

.section .text
.align 8
_c1sQX:
_c1sQX:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sQX, .-_c1sQX


==================== Asm code ====================
2018-03-16 15:56:16.111634813 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sQX_info:
	.quad	_c1sQX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.114882456 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.toRational_closure
.type GHC.Real.toRational_closure, @object
GHC.Real.toRational_closure:
	.quad	GHC.Real.toRational_info


==================== Asm code ====================
2018-03-16 15:56:16.1156518 UTC

.section .text
.align 8
.globl GHC.Real.toRational_entry
.type GHC.Real.toRational_entry, @object
GHC.Real.toRational_entry:
_c1sRq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sRr
_c1sRs:
	leaq block_c1sRn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sRn
_c1sRo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sRr:
	leaq GHC.Real.toRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.toRational_entry, .-GHC.Real.toRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.116298128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.toRational_info
.type GHC.Real.toRational_info, @object
GHC.Real.toRational_info:
	.quad	GHC.Real.toRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.116923885 UTC

.section .text
.align 8
_c1sRn:
_c1sRn:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sRn, .-_c1sRn


==================== Asm code ====================
2018-03-16 15:56:16.117553194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sRn_info:
	.quad	_c1sRn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.12037762 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p1RealFrac_closure
.type GHC.Real.$p1RealFrac_closure, @object
GHC.Real.$p1RealFrac_closure:
	.quad	GHC.Real.$p1RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:16.121152412 UTC

.section .text
.align 8
.globl GHC.Real.$p1RealFrac_entry
.type GHC.Real.$p1RealFrac_entry, @object
GHC.Real.$p1RealFrac_entry:
_c1sRO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sRP
_c1sRQ:
	leaq block_c1sRL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sRL
_c1sRM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sRP:
	leaq GHC.Real.$p1RealFrac_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p1RealFrac_entry, .-GHC.Real.$p1RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:16.122326883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p1RealFrac_info
.type GHC.Real.$p1RealFrac_info, @object
GHC.Real.$p1RealFrac_info:
	.quad	GHC.Real.$p1RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.123001061 UTC

.section .text
.align 8
_c1sRL:
_c1sRL:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sRL, .-_c1sRL


==================== Asm code ====================
2018-03-16 15:56:16.123571116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sRL_info:
	.quad	_c1sRL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.12634304 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$p2RealFrac_closure
.type GHC.Real.$p2RealFrac_closure, @object
GHC.Real.$p2RealFrac_closure:
	.quad	GHC.Real.$p2RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:16.127087028 UTC

.section .text
.align 8
.globl GHC.Real.$p2RealFrac_entry
.type GHC.Real.$p2RealFrac_entry, @object
GHC.Real.$p2RealFrac_entry:
_c1sSe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sSf
_c1sSg:
	leaq block_c1sSb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sSb
_c1sSc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sSf:
	leaq GHC.Real.$p2RealFrac_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$p2RealFrac_entry, .-GHC.Real.$p2RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:16.127739377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$p2RealFrac_info
.type GHC.Real.$p2RealFrac_info, @object
GHC.Real.$p2RealFrac_info:
	.quad	GHC.Real.$p2RealFrac_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.128407166 UTC

.section .text
.align 8
_c1sSb:
_c1sSb:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sSb, .-_c1sSb


==================== Asm code ====================
2018-03-16 15:56:16.129006794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sSb_info:
	.quad	_c1sSb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.131673937 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.properFraction_closure
.type GHC.Real.properFraction_closure, @object
GHC.Real.properFraction_closure:
	.quad	GHC.Real.properFraction_info


==================== Asm code ====================
2018-03-16 15:56:16.132455519 UTC

.section .text
.align 8
.globl GHC.Real.properFraction_entry
.type GHC.Real.properFraction_entry, @object
GHC.Real.properFraction_entry:
_c1sSE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sSF
_c1sSG:
	leaq block_c1sSB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sSB
_c1sSC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sSF:
	leaq GHC.Real.properFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.properFraction_entry, .-GHC.Real.properFraction_entry


==================== Asm code ====================
2018-03-16 15:56:16.133128945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.properFraction_info
.type GHC.Real.properFraction_info, @object
GHC.Real.properFraction_info:
	.quad	GHC.Real.properFraction_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.134131518 UTC

.section .text
.align 8
_c1sSB:
_c1sSB:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sSB, .-_c1sSB


==================== Asm code ====================
2018-03-16 15:56:16.134729579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sSB_info:
	.quad	_c1sSB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.137425778 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.truncate_closure
.type GHC.Real.truncate_closure, @object
GHC.Real.truncate_closure:
	.quad	GHC.Real.truncate_info


==================== Asm code ====================
2018-03-16 15:56:16.138185318 UTC

.section .text
.align 8
.globl GHC.Real.truncate_entry
.type GHC.Real.truncate_entry, @object
GHC.Real.truncate_entry:
_c1sT2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sT3
_c1sT4:
	leaq block_c1sSZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sSZ
_c1sT0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sT3:
	leaq GHC.Real.truncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.truncate_entry, .-GHC.Real.truncate_entry


==================== Asm code ====================
2018-03-16 15:56:16.13882103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.truncate_info
.type GHC.Real.truncate_info, @object
GHC.Real.truncate_info:
	.quad	GHC.Real.truncate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.139453912 UTC

.section .text
.align 8
_c1sSZ:
_c1sSZ:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sSZ, .-_c1sSZ


==================== Asm code ====================
2018-03-16 15:56:16.140029557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sSZ_info:
	.quad	_c1sSZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.142918159 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.round_closure
.type GHC.Real.round_closure, @object
GHC.Real.round_closure:
	.quad	GHC.Real.round_info


==================== Asm code ====================
2018-03-16 15:56:16.143701094 UTC

.section .text
.align 8
.globl GHC.Real.round_entry
.type GHC.Real.round_entry, @object
GHC.Real.round_entry:
_c1sTq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sTr
_c1sTs:
	leaq block_c1sTn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sTn
_c1sTo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sTr:
	leaq GHC.Real.round_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.round_entry, .-GHC.Real.round_entry


==================== Asm code ====================
2018-03-16 15:56:16.144349673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.round_info
.type GHC.Real.round_info, @object
GHC.Real.round_info:
	.quad	GHC.Real.round_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.144990747 UTC

.section .text
.align 8
_c1sTn:
_c1sTn:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sTn, .-_c1sTn


==================== Asm code ====================
2018-03-16 15:56:16.145651377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sTn_info:
	.quad	_c1sTn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.148357965 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ceiling_closure
.type GHC.Real.ceiling_closure, @object
GHC.Real.ceiling_closure:
	.quad	GHC.Real.ceiling_info


==================== Asm code ====================
2018-03-16 15:56:16.14914063 UTC

.section .text
.align 8
.globl GHC.Real.ceiling_entry
.type GHC.Real.ceiling_entry, @object
GHC.Real.ceiling_entry:
_c1sTO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sTP
_c1sTQ:
	leaq block_c1sTL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sTL
_c1sTM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sTP:
	leaq GHC.Real.ceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.ceiling_entry, .-GHC.Real.ceiling_entry


==================== Asm code ====================
2018-03-16 15:56:16.149896236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.ceiling_info
.type GHC.Real.ceiling_info, @object
GHC.Real.ceiling_info:
	.quad	GHC.Real.ceiling_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.150551545 UTC

.section .text
.align 8
_c1sTL:
_c1sTL:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sTL, .-_c1sTL


==================== Asm code ====================
2018-03-16 15:56:16.151152283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sTL_info:
	.quad	_c1sTL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.154848272 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.floor_closure
.type GHC.Real.floor_closure, @object
GHC.Real.floor_closure:
	.quad	GHC.Real.floor_info


==================== Asm code ====================
2018-03-16 15:56:16.155587995 UTC

.section .text
.align 8
.globl GHC.Real.floor_entry
.type GHC.Real.floor_entry, @object
GHC.Real.floor_entry:
_c1sUc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sUd
_c1sUe:
	leaq block_c1sU9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sU9
_c1sUa:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sUd:
	leaq GHC.Real.floor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.floor_entry, .-GHC.Real.floor_entry


==================== Asm code ====================
2018-03-16 15:56:16.15622549 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.floor_info
.type GHC.Real.floor_info, @object
GHC.Real.floor_info:
	.quad	GHC.Real.floor_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.15685829 UTC

.section .text
.align 8
_c1sU9:
_c1sU9:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sU9, .-_c1sU9


==================== Asm code ====================
2018-03-16 15:56:16.157457425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sU9_info:
	.quad	_c1sU9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.16055486 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$W:%_closure
.type GHC.Real.$W:%_closure, @object
GHC.Real.$W:%_closure:
	.quad	GHC.Real.$W:%_info


==================== Asm code ====================
2018-03-16 15:56:16.161361232 UTC

.section .text
.align 8
.globl GHC.Real.$W:%_entry
.type GHC.Real.$W:%_entry, @object
GHC.Real.$W:%_entry:
_c1sUC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sUD
_c1sUE:
	leaq block_c1sUx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1sUD:
	leaq GHC.Real.$W:%_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$W:%_entry, .-GHC.Real.$W:%_entry


==================== Asm code ====================
2018-03-16 15:56:16.161992233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$W:%_info
.type GHC.Real.$W:%_info, @object
GHC.Real.$W:%_info:
	.quad	GHC.Real.$W:%_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:16.16268429 UTC

.section .text
.align 8
_c1sUx:
_c1sUx:
	leaq block_c1sUz_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1sUx, .-_c1sUx


==================== Asm code ====================
2018-03-16 15:56:16.163261905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sUx_info:
	.quad	_c1sUx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.163943411 UTC

.section .text
.align 8
_c1sUz:
_c1sUz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1sUI
_c1sUH:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1sUI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1sUz, .-_c1sUz


==================== Asm code ====================
2018-03-16 15:56:16.164568077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sUz_info:
	.quad	_c1sUz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.169114842 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c<_closure
.type GHC.Real.$fOrdRatio_$s$c<_closure, @object
GHC.Real.$fOrdRatio_$s$c<_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c<_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.169974529 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c<_entry
.type GHC.Real.$fOrdRatio_$s$c<_entry, @object
GHC.Real.$fOrdRatio_$s$c<_entry:
_c1sV6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sVn
_c1sVo:
	leaq block_c1sV3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1sV3
_c1sV4:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sVn:
	leaq GHC.Real.$fOrdRatio_$s$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c<_entry, .-GHC.Real.$fOrdRatio_$s$c<_entry


==================== Asm code ====================
2018-03-16 15:56:16.17067905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c<_info
.type GHC.Real.$fOrdRatio_$s$c<_info, @object
GHC.Real.$fOrdRatio_$s$c<_info:
	.quad	GHC.Real.$fOrdRatio_$s$c<_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.171393763 UTC

.section .text
.align 8
_c1sV3:
_c1sV3:
	leaq block_c1sV9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sV9
_c1sVa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sV3, .-_c1sV3


==================== Asm code ====================
2018-03-16 15:56:16.172068717 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sV3_info:
	.quad	_c1sV3
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.172764139 UTC

.section .text
.align 8
_c1sV9:
_c1sV9:
	leaq block_c1sVe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1sV9, .-_c1sV9


==================== Asm code ====================
2018-03-16 15:56:16.173411613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sV9_info:
	.quad	_c1sV9
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.174106774 UTC

.section .text
.align 8
_c1sVe:
_c1sVe:
	movq 8(%rbp),%rax
	leaq block_c1sVi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1sVe, .-_c1sVe


==================== Asm code ====================
2018-03-16 15:56:16.174720033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sVe_info:
	.quad	_c1sVe
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.17539951 UTC

.section .text
.align 8
_c1sVi:
_c1sVi:
	movq 8(%rbp),%rax
	leaq block_c1sVm_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c1sVi, .-_c1sVi


==================== Asm code ====================
2018-03-16 15:56:16.176012233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sVi_info:
	.quad	_c1sVi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.176726525 UTC

.section .text
.align 8
_c1sVm:
_c1sVm:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1sVm, .-_c1sVm


==================== Asm code ====================
2018-03-16 15:56:16.177602964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sVm_info:
	.quad	_c1sVm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.182236831 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c<=_closure
.type GHC.Real.$fEnumRatio_$s$c<=_closure, @object
GHC.Real.$fEnumRatio_$s$c<=_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c<=_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.18305203 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c<=_entry
.type GHC.Real.$fEnumRatio_$s$c<=_entry, @object
GHC.Real.$fEnumRatio_$s$c<=_entry:
_c1sWc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sWt
_c1sWu:
	leaq block_c1sW9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1sW9
_c1sWa:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sWt:
	leaq GHC.Real.$fEnumRatio_$s$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c<=_entry, .-GHC.Real.$fEnumRatio_$s$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:16.183743784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c<=_info
.type GHC.Real.$fEnumRatio_$s$c<=_info, @object
GHC.Real.$fEnumRatio_$s$c<=_info:
	.quad	GHC.Real.$fEnumRatio_$s$c<=_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.184507709 UTC

.section .text
.align 8
_c1sW9:
_c1sW9:
	leaq block_c1sWf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sWf
_c1sWg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sW9, .-_c1sW9


==================== Asm code ====================
2018-03-16 15:56:16.185730318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sW9_info:
	.quad	_c1sW9
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.186392305 UTC

.section .text
.align 8
_c1sWf:
_c1sWf:
	leaq block_c1sWk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1sWf, .-_c1sWf


==================== Asm code ====================
2018-03-16 15:56:16.186999892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sWf_info:
	.quad	_c1sWf
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.187639555 UTC

.section .text
.align 8
_c1sWk:
_c1sWk:
	movq 8(%rbp),%rax
	leaq block_c1sWo_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1sWk, .-_c1sWk


==================== Asm code ====================
2018-03-16 15:56:16.188203016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sWk_info:
	.quad	_c1sWk
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.188819864 UTC

.section .text
.align 8
_c1sWo:
_c1sWo:
	movq 8(%rbp),%rax
	leaq block_c1sWs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c1sWo, .-_c1sWo


==================== Asm code ====================
2018-03-16 15:56:16.189642561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sWo_info:
	.quad	_c1sWo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.190289815 UTC

.section .text
.align 8
_c1sWs:
_c1sWs:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1sWs, .-_c1sWs


==================== Asm code ====================
2018-03-16 15:56:16.190855169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sWs_info:
	.quad	_c1sWs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.195913546 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$ccompare_closure
.type GHC.Real.$w$s$ccompare_closure, @object
GHC.Real.$w$s$ccompare_closure:
	.quad	GHC.Real.$w$s$ccompare_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.196719155 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$ccompare_entry
.type GHC.Real.$w$s$ccompare_entry, @object
GHC.Real.$w$s$ccompare_entry:
_c1sXg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sXh
_c1sXi:
	leaq block_c1sXe_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1sXh:
	leaq GHC.Real.$w$s$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$ccompare_entry, .-GHC.Real.$w$s$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:16.197699129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$ccompare_info
.type GHC.Real.$w$s$ccompare_info, @object
GHC.Real.$w$s$ccompare_info:
	.quad	GHC.Real.$w$s$ccompare_entry
	.quad	0
	.quad	38654705678
	.quad	17179869208
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.198416375 UTC

.section .text
.align 8
_c1sXe:
_c1sXe:
	cmpq $1,%rbx
	je _c1sXT
_u1sY4:
	addq $8,%rbp
	jmp _s1sev
_c1sXT:
	leaq block_c1sXS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1sXe, .-_c1sXe


==================== Asm code ====================
2018-03-16 15:56:16.198984629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sXe_info:
	.quad	_c1sXe
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.199683665 UTC

.section .text
.align 8
_c1sXS:
_c1sXS:
	cmpq $1,%rbx
	je _c1sY3
_u1sY5:
	addq $8,%rbp
	jmp _s1sev
_c1sY3:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1sXS, .-_c1sXS


==================== Asm code ====================
2018-03-16 15:56:16.200247743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sXS_info:
	.quad	_c1sXS
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.200907717 UTC

.section .text
.align 8
_s1sev:
_s1sev:
	leaq block_c1sXr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _s1sev, .-_s1sev


==================== Asm code ====================
2018-03-16 15:56:16.201633031 UTC

.section .text
.align 8
_c1sXr:
_c1sXr:
	leaq block_c1sXv_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1sXr, .-_c1sXr


==================== Asm code ====================
2018-03-16 15:56:16.202250807 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sXr_info:
	.quad	_c1sXr
	.quad	388
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.202915638 UTC

.section .text
.align 8
_c1sXv:
_c1sXv:
	movq 8(%rbp),%rax
	leaq block_c1sXB_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c1sXv, .-_c1sXv


==================== Asm code ====================
2018-03-16 15:56:16.203529363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sXv_info:
	.quad	_c1sXv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.204244458 UTC

.section .text
.align 8
_c1sXB:
_c1sXB:
	cmpq $1,%rbx
	je _c1sXM
_c1sXI:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1sXM:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1sXB, .-_c1sXB


==================== Asm code ====================
2018-03-16 15:56:16.204911753 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sXB_info:
	.quad	_c1sXB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.208539141 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$ccompare_closure
.type GHC.Real.$fEnumRatio_$s$ccompare_closure, @object
GHC.Real.$fEnumRatio_$s$ccompare_closure:
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.209630613 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$ccompare_entry
.type GHC.Real.$fEnumRatio_$s$ccompare_entry, @object
GHC.Real.$fEnumRatio_$s$ccompare_entry:
_c1sYM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sYQ
_c1sYR:
	leaq block_c1sYJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1sYJ
_c1sYK:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sYQ:
	leaq GHC.Real.$fEnumRatio_$s$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$ccompare_entry, .-GHC.Real.$fEnumRatio_$s$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:16.210297902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$ccompare_info
.type GHC.Real.$fEnumRatio_$s$ccompare_info, @object
GHC.Real.$fEnumRatio_$s$ccompare_info:
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.211046547 UTC

.section .text
.align 8
_c1sYJ:
_c1sYJ:
	leaq block_c1sYP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sYP
_c1sYT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sYJ, .-_c1sYJ


==================== Asm code ====================
2018-03-16 15:56:16.211730436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sYJ_info:
	.quad	_c1sYJ
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.212378384 UTC

.section .text
.align 8
_c1sYP:
_c1sYP:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1sYP, .-_c1sYP


==================== Asm code ====================
2018-03-16 15:56:16.212959601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sYP_info:
	.quad	_c1sYP
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.217606971 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c>=_closure
.type GHC.Real.$fEnumRatio_$s$c>=_closure, @object
GHC.Real.$fEnumRatio_$s$c>=_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c>=_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.218428561 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c>=_entry
.type GHC.Real.$fEnumRatio_$s$c>=_entry, @object
GHC.Real.$fEnumRatio_$s$c>=_entry:
_c1sZm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1sZq
_c1sZr:
	leaq block_c1sZj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1sZj
_c1sZk:
	movq (%rbx),%rax
	jmp *(%rax)
_c1sZq:
	leaq GHC.Real.$fEnumRatio_$s$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c>=_entry, .-GHC.Real.$fEnumRatio_$s$c>=_entry


==================== Asm code ====================
2018-03-16 15:56:16.219101505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c>=_info
.type GHC.Real.$fEnumRatio_$s$c>=_info, @object
GHC.Real.$fEnumRatio_$s$c>=_info:
	.quad	GHC.Real.$fEnumRatio_$s$c>=_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.219816613 UTC

.section .text
.align 8
_c1sZj:
_c1sZj:
	leaq block_c1sZp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1sZp
_c1sZt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1sZj, .-_c1sZj


==================== Asm code ====================
2018-03-16 15:56:16.220450333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sZj_info:
	.quad	_c1sZj
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.221119822 UTC

.section .text
.align 8
_c1sZp:
_c1sZp:
	movq 16(%rbp),%rax
	leaq block_c1sZx_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1sZp, .-_c1sZp


==================== Asm code ====================
2018-03-16 15:56:16.221803764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sZp_info:
	.quad	_c1sZp
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.222556763 UTC

.section .text
.align 8
_c1sZx:
_c1sZx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1sZI
_c1sZE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1sZI:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1sZx, .-_c1sZx


==================== Asm code ====================
2018-03-16 15:56:16.223199124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1sZx_info:
	.quad	_c1sZx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.227546473 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c>_closure
.type GHC.Real.$fOrdRatio_$s$c>_closure, @object
GHC.Real.$fOrdRatio_$s$c>_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c>_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.2283035 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c>_entry
.type GHC.Real.$fOrdRatio_$s$c>_entry, @object
GHC.Real.$fOrdRatio_$s$c>_entry:
_c1t0i:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t0m
_c1t0n:
	leaq block_c1t0f_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t0f
_c1t0g:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t0m:
	leaq GHC.Real.$fOrdRatio_$s$c>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c>_entry, .-GHC.Real.$fOrdRatio_$s$c>_entry


==================== Asm code ====================
2018-03-16 15:56:16.228945434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c>_info
.type GHC.Real.$fOrdRatio_$s$c>_info, @object
GHC.Real.$fOrdRatio_$s$c>_info:
	.quad	GHC.Real.$fOrdRatio_$s$c>_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.229735387 UTC

.section .text
.align 8
_c1t0f:
_c1t0f:
	leaq block_c1t0l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t0l
_c1t0p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t0f, .-_c1t0f


==================== Asm code ====================
2018-03-16 15:56:16.230356527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t0f_info:
	.quad	_c1t0f
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.231015925 UTC

.section .text
.align 8
_c1t0l:
_c1t0l:
	movq 16(%rbp),%rax
	leaq block_c1t0t_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1t0l, .-_c1t0l


==================== Asm code ====================
2018-03-16 15:56:16.231589849 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t0l_info:
	.quad	_c1t0l
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+24


==================== Asm code ====================
2018-03-16 15:56:16.232341207 UTC

.section .text
.align 8
_c1t0t:
_c1t0t:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1t0E
_c1t0A:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t0E:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1t0t, .-_c1t0t


==================== Asm code ====================
2018-03-16 15:56:16.233022023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t0t_info:
	.quad	_c1t0t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.238021963 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmin_closure
.type GHC.Real.$fOrdRatio_$s$cmin_closure, @object
GHC.Real.$fOrdRatio_$s$cmin_closure:
	.quad	GHC.Real.$fOrdRatio_$s$cmin_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.238821003 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$cmin_entry
.type GHC.Real.$fOrdRatio_$s$cmin_entry, @object
GHC.Real.$fOrdRatio_$s$cmin_entry:
_c1t1e:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t1r
_c1t1s:
	leaq block_c1t1b_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t1b
_c1t1c:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t1r:
	leaq GHC.Real.$fOrdRatio_$s$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$cmin_entry, .-GHC.Real.$fOrdRatio_$s$cmin_entry


==================== Asm code ====================
2018-03-16 15:56:16.239505587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmin_info
.type GHC.Real.$fOrdRatio_$s$cmin_info, @object
GHC.Real.$fOrdRatio_$s$cmin_info:
	.quad	GHC.Real.$fOrdRatio_$s$cmin_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.240269635 UTC

.section .text
.align 8
_c1t1b:
_c1t1b:
	leaq block_c1t1h_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t1h
_c1t1i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t1b, .-_c1t1b


==================== Asm code ====================
2018-03-16 15:56:16.240922673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t1b_info:
	.quad	_c1t1b
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.241640079 UTC

.section .text
.align 8
_c1t1h:
_c1t1h:
	leaq block_c1t1m_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1t1h, .-_c1t1h


==================== Asm code ====================
2018-03-16 15:56:16.242311875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t1h_info:
	.quad	_c1t1h
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.242939317 UTC

.section .text
.align 8
_c1t1m:
_c1t1m:
	movq 8(%rbp),%rax
	leaq block_c1t1q_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1t1m, .-_c1t1m


==================== Asm code ====================
2018-03-16 15:56:16.243523491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t1m_info:
	.quad	_c1t1m
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.244143462 UTC

.section .text
.align 8
_c1t1q:
_c1t1q:
	leaq block_c1t1z_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c1t1q, .-_c1t1q


==================== Asm code ====================
2018-03-16 15:56:16.244754172 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t1q_info:
	.quad	_c1t1q
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.245510688 UTC

.section .text
.align 8
_c1t1z:
_c1t1z:
	cmpq $1,%rbx
	je _c1t1K
_c1t1G:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1t1K:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t1z, .-_c1t1z


==================== Asm code ====================
2018-03-16 15:56:16.246082722 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t1z_info:
	.quad	_c1t1z
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.25166148 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmax_closure
.type GHC.Real.$fOrdRatio_$s$cmax_closure, @object
GHC.Real.$fOrdRatio_$s$cmax_closure:
	.quad	GHC.Real.$fOrdRatio_$s$cmax_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.252442309 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$cmax_entry
.type GHC.Real.$fOrdRatio_$s$cmax_entry, @object
GHC.Real.$fOrdRatio_$s$cmax_entry:
_c1t2q:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t2D
_c1t2E:
	leaq block_c1t2n_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t2n
_c1t2o:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t2D:
	leaq GHC.Real.$fOrdRatio_$s$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$cmax_entry, .-GHC.Real.$fOrdRatio_$s$cmax_entry


==================== Asm code ====================
2018-03-16 15:56:16.25310512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$cmax_info
.type GHC.Real.$fOrdRatio_$s$cmax_info, @object
GHC.Real.$fOrdRatio_$s$cmax_info:
	.quad	GHC.Real.$fOrdRatio_$s$cmax_entry
	.quad	0
	.quad	1103806595086
	.quad	8589934607
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.253865702 UTC

.section .text
.align 8
_c1t2n:
_c1t2n:
	leaq block_c1t2t_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t2t
_c1t2u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t2n, .-_c1t2n


==================== Asm code ====================
2018-03-16 15:56:16.254492264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t2n_info:
	.quad	_c1t2n
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.255120396 UTC

.section .text
.align 8
_c1t2t:
_c1t2t:
	leaq block_c1t2y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1t2t, .-_c1t2t


==================== Asm code ====================
2018-03-16 15:56:16.255733418 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t2t_info:
	.quad	_c1t2t
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.256392562 UTC

.section .text
.align 8
_c1t2y:
_c1t2y:
	movq 8(%rbp),%rax
	leaq block_c1t2C_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1t2y, .-_c1t2y


==================== Asm code ====================
2018-03-16 15:56:16.25699299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t2y_info:
	.quad	_c1t2y
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt


==================== Asm code ====================
2018-03-16 15:56:16.257667735 UTC

.section .text
.align 8
_c1t2C:
_c1t2C:
	leaq block_c1t2L_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c1t2C, .-_c1t2C


==================== Asm code ====================
2018-03-16 15:56:16.258244163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t2C_info:
	.quad	_c1t2C
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.258976773 UTC

.section .text
.align 8
_c1t2L:
_c1t2L:
	cmpq $1,%rbx
	je _c1t2W
_c1t2S:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1t2W:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t2L, .-_c1t2L


==================== Asm code ====================
2018-03-16 15:56:16.259596862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t2L_info:
	.quad	_c1t2L
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.263091487 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cnegate_closure
.type GHC.Real.$fFractionalRatio_$s$cnegate_closure, @object
GHC.Real.$fFractionalRatio_$s$cnegate_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_info


==================== Asm code ====================
2018-03-16 15:56:16.263847345 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cnegate_entry
.type GHC.Real.$fFractionalRatio_$s$cnegate_entry, @object
GHC.Real.$fFractionalRatio_$s$cnegate_entry:
_c1t3C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t3K
_c1t3L:
	leaq block_c1t3z_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t3z
_c1t3A:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t3K:
	leaq GHC.Real.$fFractionalRatio_$s$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cnegate_entry, .-GHC.Real.$fFractionalRatio_$s$cnegate_entry


==================== Asm code ====================
2018-03-16 15:56:16.264521111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cnegate_info
.type GHC.Real.$fFractionalRatio_$s$cnegate_info, @object
GHC.Real.$fFractionalRatio_$s$cnegate_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.265213487 UTC

.section .text
.align 8
_c1t3z:
_c1t3z:
	leaq block_c1t3F_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c1t3z, .-_c1t3z


==================== Asm code ====================
2018-03-16 15:56:16.265875719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t3z_info:
	.quad	_c1t3z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.266608346 UTC

.section .text
.align 8
_c1t3F:
_c1t3F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1t3P
_c1t3O:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t3P:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1t3F, .-_c1t3F


==================== Asm code ====================
2018-03-16 15:56:16.267263991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t3F_info:
	.quad	_c1t3F
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.270748677 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cabs_closure
.type GHC.Real.$fFractionalRatio_$s$cabs_closure, @object
GHC.Real.$fFractionalRatio_$s$cabs_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_info


==================== Asm code ====================
2018-03-16 15:56:16.271545824 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cabs_entry
.type GHC.Real.$fFractionalRatio_$s$cabs_entry, @object
GHC.Real.$fFractionalRatio_$s$cabs_entry:
_c1t4g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t4o
_c1t4p:
	leaq block_c1t4d_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t4d
_c1t4e:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t4o:
	leaq GHC.Real.$fFractionalRatio_$s$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cabs_entry, .-GHC.Real.$fFractionalRatio_$s$cabs_entry


==================== Asm code ====================
2018-03-16 15:56:16.272178575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cabs_info
.type GHC.Real.$fFractionalRatio_$s$cabs_info, @object
GHC.Real.$fFractionalRatio_$s$cabs_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.272809821 UTC

.section .text
.align 8
_c1t4d:
_c1t4d:
	leaq block_c1t4j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
	.size _c1t4d, .-_c1t4d


==================== Asm code ====================
2018-03-16 15:56:16.273656749 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t4d_info:
	.quad	_c1t4d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.274360757 UTC

.section .text
.align 8
_c1t4j:
_c1t4j:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1t4t
_c1t4s:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t4t:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1t4j, .-_c1t4j


==================== Asm code ====================
2018-03-16 15:56:16.274982961 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t4j_info:
	.quad	_c1t4j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.276654523 UTC

.section .data
.align 8
.align 1
sat_s1sfx_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:16.278451517 UTC

.section .data
.align 8
.align 1
sat_s1sfy_closure:
	.quad	:_con_info
	.quad	sat_s1sfx_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.281890265 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio1_closure
.type GHC.Real.$fEnumRatio1_closure, @object
GHC.Real.$fEnumRatio1_closure:
	.quad	GHC.Real.$fEnumRatio1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.28282489 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio1_entry
.type GHC.Real.$fEnumRatio1_entry, @object
GHC.Real.$fEnumRatio1_entry:
_c1t4V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t4W
_c1t4X:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1t4U
_c1t4T:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s1sfy_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c1t4W:
	jmp *-16(%r13)
_c1t4U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fEnumRatio1_entry, .-GHC.Real.$fEnumRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:16.283548465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio1_info
.type GHC.Real.$fEnumRatio1_info, @object
GHC.Real.$fEnumRatio1_info:
	.quad	GHC.Real.$fEnumRatio1_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+72


==================== Asm code ====================
2018-03-16 15:56:16.286825203 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$csignum_closure
.type GHC.Real.$fFractionalRatio_$s$csignum_closure, @object
GHC.Real.$fFractionalRatio_$s$csignum_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.287587512 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$csignum_entry
.type GHC.Real.$fFractionalRatio_$s$csignum_entry, @object
GHC.Real.$fFractionalRatio_$s$csignum_entry:
_c1t5e:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t5m
_c1t5n:
	leaq block_c1t5b_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t5b
_c1t5c:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t5m:
	leaq GHC.Real.$fFractionalRatio_$s$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$csignum_entry, .-GHC.Real.$fFractionalRatio_$s$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:16.288251474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$csignum_info
.type GHC.Real.$fFractionalRatio_$s$csignum_info, @object
GHC.Real.$fFractionalRatio_$s$csignum_info:
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.288892267 UTC

.section .text
.align 8
_c1t5b:
_c1t5b:
	leaq block_c1t5h_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.signumInteger_entry@gotpcrel(%rip)
	.size _c1t5b, .-_c1t5b


==================== Asm code ====================
2018-03-16 15:56:16.289517382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t5b_info:
	.quad	_c1t5b
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.290239101 UTC

.section .text
.align 8
_c1t5h:
_c1t5h:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1t5r
_c1t5q:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t5r:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1t5h, .-_c1t5h


==================== Asm code ====================
2018-03-16 15:56:16.290867536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t5h_info:
	.quad	_c1t5h
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.294487933 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_closure
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_closure, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.295289898 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_entry
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_entry, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_entry:
_c1t5R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t5V
_c1t5W:
	leaq block_c1t5O_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t5O
_c1t5P:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t5V:
	leaq GHC.Real.$fFractionalRatio_$s$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cfromInteger_entry, .-GHC.Real.$fFractionalRatio_$s$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:16.295939422 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromInteger_info
.type GHC.Real.$fFractionalRatio_$s$cfromInteger_info, @object
GHC.Real.$fFractionalRatio_$s$cfromInteger_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.296642731 UTC

.section .text
.align 8
_c1t5O:
_c1t5O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1t5Z
_c1t5Y:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t5Z:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1t5O, .-_c1t5O


==================== Asm code ====================
2018-03-16 15:56:16.297346113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t5O_info:
	.quad	_c1t5O
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.299092717 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealInteger_closure
.type GHC.Real.$fRealInteger_closure, @object
GHC.Real.$fRealInteger_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumInteger_closure
	.quad	GHC.Integer.Type.$fOrdInteger_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.301921283 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$ctoInteger_closure
.type GHC.Real.$fIntegralInt_$ctoInteger_closure, @object
GHC.Real.$fIntegralInt_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:16.302728366 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$ctoInteger_entry
.type GHC.Real.$fIntegralInt_$ctoInteger_entry, @object
GHC.Real.$fIntegralInt_$ctoInteger_entry:
_c1t6m:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t6n
_c1t6o:
	leaq block_c1t6j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t6j
_c1t6k:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t6n:
	leaq GHC.Real.$fIntegralInt_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$ctoInteger_entry, .-GHC.Real.$fIntegralInt_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:16.303357881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$ctoInteger_info
.type GHC.Real.$fIntegralInt_$ctoInteger_info, @object
GHC.Real.$fIntegralInt_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.303993829 UTC

.section .text
.align 8
_c1t6j:
_c1t6j:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c1t6j, .-_c1t6j


==================== Asm code ====================
2018-03-16 15:56:16.304538162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t6j_info:
	.quad	_c1t6j
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.307989892 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoRational_closure
.type GHC.Real.$fEnumRatio_$ctoRational_closure, @object
GHC.Real.$fEnumRatio_$ctoRational_closure:
	.quad	GHC.Real.$fEnumRatio_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.308751743 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$ctoRational_entry
.type GHC.Real.$fEnumRatio_$ctoRational_entry, @object
GHC.Real.$fEnumRatio_$ctoRational_entry:
_c1t6K:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t6S
_c1t6T:
	leaq block_c1t6H_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t6H
_c1t6I:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t6S:
	leaq GHC.Real.$fEnumRatio_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$ctoRational_entry, .-GHC.Real.$fEnumRatio_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.309459545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoRational_info
.type GHC.Real.$fEnumRatio_$ctoRational_info, @object
GHC.Real.$fEnumRatio_$ctoRational_info:
	.quad	GHC.Real.$fEnumRatio_$ctoRational_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.310105789 UTC

.section .text
.align 8
_c1t6H:
_c1t6H:
	leaq block_c1t6N_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c1t6H, .-_c1t6H


==================== Asm code ====================
2018-03-16 15:56:16.310730011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t6H_info:
	.quad	_c1t6H
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.311487887 UTC

.section .text
.align 8
_c1t6N:
_c1t6N:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1t6X
_c1t6W:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t6X:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1t6N, .-_c1t6N


==================== Asm code ====================
2018-03-16 15:56:16.312170291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t6N_info:
	.quad	_c1t6N
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.314564626 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealInt_closure
.type GHC.Real.$fRealInt_closure, @object
GHC.Real.$fRealInt_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumInt_closure
	.quad	GHC.Classes.$fOrdInt_closure
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.317838447 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$ctoInteger_closure
.type GHC.Real.$fIntegralWord_$ctoInteger_closure, @object
GHC.Real.$fIntegralWord_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:16.318648656 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$ctoInteger_entry
.type GHC.Real.$fIntegralWord_$ctoInteger_entry, @object
GHC.Real.$fIntegralWord_$ctoInteger_entry:
_c1t7o:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t7p
_c1t7q:
	leaq block_c1t7l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t7l
_c1t7m:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t7p:
	leaq GHC.Real.$fIntegralWord_$ctoInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$ctoInteger_entry, .-GHC.Real.$fIntegralWord_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:16.319289782 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$ctoInteger_info
.type GHC.Real.$fIntegralWord_$ctoInteger_info, @object
GHC.Real.$fIntegralWord_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.31991913 UTC

.section .text
.align 8
_c1t7l:
_c1t7l:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _c1t7l, .-_c1t7l


==================== Asm code ====================
2018-03-16 15:56:16.320464015 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t7l_info:
	.quad	_c1t7l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.322582771 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$ctoInteger_closure
.type GHC.Real.$fIntegralInteger_$ctoInteger_closure, @object
GHC.Real.$fIntegralInteger_$ctoInteger_closure:
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_info


==================== Asm code ====================
2018-03-16 15:56:16.323214874 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$ctoInteger_entry
.type GHC.Real.$fIntegralInteger_$ctoInteger_entry, @object
GHC.Real.$fIntegralInteger_$ctoInteger_entry:
_c1t7J:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fIntegralInteger_$ctoInteger_entry, .-GHC.Real.$fIntegralInteger_$ctoInteger_entry


==================== Asm code ====================
2018-03-16 15:56:16.323854484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$ctoInteger_info
.type GHC.Real.$fIntegralInteger_$ctoInteger_info, @object
GHC.Real.$fIntegralInteger_$ctoInteger_info:
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.328064351 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$s$c==_closure
.type GHC.Real.$fEqRatio_$s$c==_closure, @object
GHC.Real.$fEqRatio_$s$c==_closure:
	.quad	GHC.Real.$fEqRatio_$s$c==_info


==================== Asm code ====================
2018-03-16 15:56:16.328904239 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$s$c==_entry
.type GHC.Real.$fEqRatio_$s$c==_entry, @object
GHC.Real.$fEqRatio_$s$c==_entry:
_c1t7Z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t83
_c1t84:
	leaq block_c1t7W_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t7W
_c1t7X:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t83:
	leaq GHC.Real.$fEqRatio_$s$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$s$c==_entry, .-GHC.Real.$fEqRatio_$s$c==_entry


==================== Asm code ====================
2018-03-16 15:56:16.329613997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$s$c==_info
.type GHC.Real.$fEqRatio_$s$c==_info, @object
GHC.Real.$fEqRatio_$s$c==_info:
	.quad	GHC.Real.$fEqRatio_$s$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:16.330339798 UTC

.section .text
.align 8
_c1t7W:
_c1t7W:
	leaq block_c1t82_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t82
_c1t86:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t7W, .-_c1t7W


==================== Asm code ====================
2018-03-16 15:56:16.330957767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t7W_info:
	.quad	_c1t7W
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.331638482 UTC

.section .text
.align 8
_c1t82:
_c1t82:
	leaq block_c1t8a_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1t82, .-_c1t82


==================== Asm code ====================
2018-03-16 15:56:16.332238109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t82_info:
	.quad	_c1t82
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.332959664 UTC

.section .text
.align 8
_c1t8a:
_c1t8a:
	cmpq $1,%rbx
	je _c1t8m
_c1t8h:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1t8m:
	movq 16(%rbp),%rax
	leaq block_c1t8k_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1t8a, .-_c1t8a


==================== Asm code ====================
2018-03-16 15:56:16.333589805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t8a_info:
	.quad	_c1t8a
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.334233644 UTC

.section .text
.align 8
_c1t8k:
_c1t8k:
	shlq $3,%rbx
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rax
	movq (%rbx,%rax,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1t8k, .-_c1t8k


==================== Asm code ====================
2018-03-16 15:56:16.334786856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t8k_info:
	.quad	_c1t8k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.339225867 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c==_closure
.type GHC.Real.$fEqRatio_$c==_closure, @object
GHC.Real.$fEqRatio_$c==_closure:
	.quad	GHC.Real.$fEqRatio_$c==_info


==================== Asm code ====================
2018-03-16 15:56:16.340018554 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$c==_entry
.type GHC.Real.$fEqRatio_$c==_entry, @object
GHC.Real.$fEqRatio_$c==_entry:
_c1t93:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1t97
_c1t98:
	leaq block_c1t90_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1t90
_c1t91:
	movq (%rbx),%rax
	jmp *(%rax)
_c1t97:
	leaq GHC.Real.$fEqRatio_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$c==_entry, .-GHC.Real.$fEqRatio_$c==_entry


==================== Asm code ====================
2018-03-16 15:56:16.340708748 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c==_info
.type GHC.Real.$fEqRatio_$c==_info, @object
GHC.Real.$fEqRatio_$c==_info:
	.quad	GHC.Real.$fEqRatio_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.341468624 UTC

.section .text
.align 8
_c1t90:
_c1t90:
	leaq block_c1t96_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1t96
_c1t9a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t90, .-_c1t90


==================== Asm code ====================
2018-03-16 15:56:16.342080351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t90_info:
	.quad	_c1t90
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.342783662 UTC

.section .text
.align 8
_c1t96:
_c1t96:
	leaq block_c1t9e_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1t96, .-_c1t96


==================== Asm code ====================
2018-03-16 15:56:16.343399528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t96_info:
	.quad	_c1t96
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.344171034 UTC

.section .text
.align 8
_c1t9e:
_c1t9e:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1t9l
_c1t9p:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c1t9l:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1t9e, .-_c1t9e


==================== Asm code ====================
2018-03-16 15:56:16.344874872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t9e_info:
	.quad	_c1t9e
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.34991835 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c/=_closure
.type GHC.Real.$fOrdRatio_$s$c/=_closure, @object
GHC.Real.$fOrdRatio_$s$c/=_closure:
	.quad	GHC.Real.$fOrdRatio_$s$c/=_info


==================== Asm code ====================
2018-03-16 15:56:16.35070486 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$s$c/=_entry
.type GHC.Real.$fOrdRatio_$s$c/=_entry, @object
GHC.Real.$fOrdRatio_$s$c/=_entry:
_c1ta2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ta6
_c1ta7:
	leaq block_c1t9Z_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1t9Z
_c1ta0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ta6:
	leaq GHC.Real.$fOrdRatio_$s$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$s$c/=_entry, .-GHC.Real.$fOrdRatio_$s$c/=_entry


==================== Asm code ====================
2018-03-16 15:56:16.351363368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$c/=_info
.type GHC.Real.$fOrdRatio_$s$c/=_info, @object
GHC.Real.$fOrdRatio_$s$c/=_info:
	.quad	GHC.Real.$fOrdRatio_$s$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:16.352034728 UTC

.section .text
.align 8
_c1t9Z:
_c1t9Z:
	leaq block_c1ta5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ta5
_c1ta9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1t9Z, .-_c1t9Z


==================== Asm code ====================
2018-03-16 15:56:16.352661202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1t9Z_info:
	.quad	_c1t9Z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.353534499 UTC

.section .text
.align 8
_c1ta5:
_c1ta5:
	leaq block_c1tad_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1ta5, .-_c1ta5


==================== Asm code ====================
2018-03-16 15:56:16.354129255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ta5_info:
	.quad	_c1ta5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.354825215 UTC

.section .text
.align 8
_c1tad:
_c1tad:
	cmpq $1,%rbx
	je _c1tap
_u1taA:
	addq $24,%rbp
	jmp _c1tav
_c1tap:
	movq 16(%rbp),%rax
	leaq block_c1tan_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1tad, .-_c1tad


==================== Asm code ====================
2018-03-16 15:56:16.355425664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tad_info:
	.quad	_c1tad
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.356048076 UTC

.section .text
.align 8
_c1tan:
_c1tan:
	cmpq $1,%rbx
	je _c1taz
_u1taB:
	addq $8,%rbp
	jmp _c1tav
_c1taz:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1tan, .-_c1tan


==================== Asm code ====================
2018-03-16 15:56:16.356628946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tan_info:
	.quad	_c1tan
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.357231495 UTC

.section .text
.align 8
_c1tav:
_c1tav:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1tav, .-_c1tav


==================== Asm code ====================
2018-03-16 15:56:16.362400263 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c/=_closure
.type GHC.Real.$fEqRatio_$c/=_closure, @object
GHC.Real.$fEqRatio_$c/=_closure:
	.quad	GHC.Real.$fEqRatio_$c/=_info


==================== Asm code ====================
2018-03-16 15:56:16.363269313 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_$c/=_entry
.type GHC.Real.$fEqRatio_$c/=_entry, @object
GHC.Real.$fEqRatio_$c/=_entry:
_c1tbh:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tbl
_c1tbm:
	leaq block_c1tbe_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1tbe
_c1tbf:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tbl:
	leaq GHC.Real.$fEqRatio_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_$c/=_entry, .-GHC.Real.$fEqRatio_$c/=_entry


==================== Asm code ====================
2018-03-16 15:56:16.363909532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_$c/=_info
.type GHC.Real.$fEqRatio_$c/=_info, @object
GHC.Real.$fEqRatio_$c/=_info:
	.quad	GHC.Real.$fEqRatio_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.364656122 UTC

.section .text
.align 8
_c1tbe:
_c1tbe:
	leaq block_c1tbk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tbk
_c1tbo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tbe, .-_c1tbe


==================== Asm code ====================
2018-03-16 15:56:16.365355775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tbe_info:
	.quad	_c1tbe
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.366016118 UTC

.section .text
.align 8
_c1tbk:
_c1tbk:
	leaq block_c1tbs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1tbk, .-_c1tbk


==================== Asm code ====================
2018-03-16 15:56:16.366673729 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tbk_info:
	.quad	_c1tbk
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.367420789 UTC

.section .text
.align 8
_c1tbs:
_c1tbs:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1tbR
_c1tbE:
	movq 24(%rbp),%rax
	leaq block_c1tbC_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_u1tbR:
	addq $32,%rbp
	jmp _c1tbK
	.size _c1tbs, .-_c1tbs


==================== Asm code ====================
2018-03-16 15:56:16.368082352 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tbs_info:
	.quad	_c1tbs
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.368763914 UTC

.section .text
.align 8
_c1tbC:
_c1tbC:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1tbS
_c1tbO:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1tbS:
	addq $8,%rbp
	jmp _c1tbK
	.size _c1tbC, .-_c1tbC


==================== Asm code ====================
2018-03-16 15:56:16.369425334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tbC_info:
	.quad	_c1tbC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.370057171 UTC

.section .text
.align 8
_c1tbK:
_c1tbK:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1tbK, .-_c1tbK


==================== Asm code ====================
2018-03-16 15:56:16.371873533 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$fEqRatio_closure
.type GHC.Real.$fOrdRatio_$s$fEqRatio_closure, @object
GHC.Real.$fOrdRatio_$s$fEqRatio_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Real.$fEqRatio_$s$c==_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:16.375823115 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEqRatio_closure
.type GHC.Real.$fEqRatio_closure, @object
GHC.Real.$fEqRatio_closure:
	.quad	GHC.Real.$fEqRatio_info


==================== Asm code ====================
2018-03-16 15:56:16.376516271 UTC

.section .text
.align 8
sat_s1sgy_entry:
_c1tcJ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEqRatio_$c/=_entry
	.size sat_s1sgy_entry, .-sat_s1sgy_entry


==================== Asm code ====================
2018-03-16 15:56:16.377137126 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sgy_info:
	.quad	sat_s1sgy_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:16.377849031 UTC

.section .text
.align 8
sat_s1sgx_entry:
_c1tcR:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEqRatio_$c==_entry
	.size sat_s1sgx_entry, .-sat_s1sgx_entry


==================== Asm code ====================
2018-03-16 15:56:16.378943497 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sgx_info:
	.quad	sat_s1sgx_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:16.379757801 UTC

.section .text
.align 8
.globl GHC.Real.$fEqRatio_entry
.type GHC.Real.$fEqRatio_entry, @object
GHC.Real.$fEqRatio_entry:
_c1tcV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1tcZ
_c1tcY:
	leaq sat_s1sgy_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_s1sgx_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq GHC.Classes.C:Eq_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1tcZ:
	movq $56,904(%r13)
	leaq GHC.Real.$fEqRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEqRatio_entry, .-GHC.Real.$fEqRatio_entry


==================== Asm code ====================
2018-03-16 15:56:16.380469676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEqRatio_info
.type GHC.Real.$fEqRatio_info, @object
GHC.Real.$fEqRatio_info:
	.quad	GHC.Real.$fEqRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.382403513 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$s$fOrdRatio_closure
.type GHC.Real.$fOrdRatio_$s$fOrdRatio_closure, @object
GHC.Real.$fOrdRatio_$s$fOrdRatio_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Real.$fOrdRatio_$s$fEqRatio_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c<_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$c>_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$cmax_closure+2
	.quad	GHC.Real.$fOrdRatio_$s$cmin_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.386032425 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cp1Ord_closure
.type GHC.Real.$fOrdRatio_$cp1Ord_closure, @object
GHC.Real.$fOrdRatio_$cp1Ord_closure:
	.quad	GHC.Real.$fOrdRatio_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:56:16.386832838 UTC

.section .text
.align 8
sat_s1sgC_entry:
_c1tdr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tdv
_c1tdw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tdp_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1tdv:
	jmp *-16(%r13)
	.size sat_s1sgC_entry, .-sat_s1sgC_entry


==================== Asm code ====================
2018-03-16 15:56:16.38748486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sgC_info:
	.quad	sat_s1sgC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:16.38812163 UTC

.section .text
.align 8
_c1tdp:
_c1tdp:
	leaq block_c1tdu_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1tdp, .-_c1tdp


==================== Asm code ====================
2018-03-16 15:56:16.388693893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tdp_info:
	.quad	_c1tdp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.389454156 UTC

.section .text
.align 8
_c1tdu:
_c1tdu:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1tdu, .-_c1tdu


==================== Asm code ====================
2018-03-16 15:56:16.390029879 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tdu_info:
	.quad	_c1tdu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.390798938 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cp1Ord_entry
.type GHC.Real.$fOrdRatio_$cp1Ord_entry, @object
GHC.Real.$fOrdRatio_$cp1Ord_entry:
_c1tdC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tdG
_c1tdF:
	leaq sat_s1sgC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Real.$fEqRatio_entry
_c1tdG:
	movq $24,904(%r13)
	leaq GHC.Real.$fOrdRatio_$cp1Ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cp1Ord_entry, .-GHC.Real.$fOrdRatio_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:56:16.391468039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cp1Ord_info
.type GHC.Real.$fOrdRatio_$cp1Ord_info, @object
GHC.Real.$fOrdRatio_$cp1Ord_info:
	.quad	GHC.Real.$fOrdRatio_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.394168602 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even1_closure
.type GHC.Real.even1_closure, @object
GHC.Real.even1_closure:
	.quad	GHC.Real.even1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.395058649 UTC

.section .text
.align 8
.globl GHC.Real.even1_entry
.type GHC.Real.even1_entry, @object
GHC.Real.even1_entry:
_c1te5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1te6
_c1te7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1te4
_c1te3:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c1te6:
	jmp *-16(%r13)
_c1te4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.even1_entry, .-GHC.Real.even1_entry


==================== Asm code ====================
2018-03-16 15:56:16.395752776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even1_info
.type GHC.Real.even1_info, @object
GHC.Real.even1_info:
	.quad	GHC.Real.even1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:56:16.403431633 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmfloor_closure
.type GHC.Real.$dmfloor_closure, @object
GHC.Real.$dmfloor_closure:
	.quad	GHC.Real.$dmfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.404306294 UTC

.section .text
.align 8
ds_s1sgG_entry:
_c1teq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ter
_c1tes:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1ter:
	jmp *-16(%r13)
	.size ds_s1sgG_entry, .-ds_s1sgG_entry


==================== Asm code ====================
2018-03-16 15:56:16.404963141 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sgG_info:
	.quad	ds_s1sgG_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:16.405755404 UTC

.section .text
.align 8
sat_s1sgO_entry:
_c1teD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1teE
_c1teF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1teB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1teE:
	jmp *-16(%r13)
	.size sat_s1sgO_entry, .-sat_s1sgO_entry


==================== Asm code ====================
2018-03-16 15:56:16.406404243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sgO_info:
	.quad	sat_s1sgO_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.40710387 UTC

.section .text
.align 8
_c1teB:
_c1teB:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1teB, .-_c1teB


==================== Asm code ====================
2018-03-16 15:56:16.407705945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1teB_info:
	.quad	_c1teB
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.408458759 UTC

.section .text
.align 8
sat_s1sgZ_entry:
_c1tf5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tf6
_c1tf7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1tf6:
	jmp *-16(%r13)
	.size sat_s1sgZ_entry, .-sat_s1sgZ_entry


==================== Asm code ====================
2018-03-16 15:56:16.409140439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sgZ_info:
	.quad	sat_s1sgZ_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.410876493 UTC

.section .text
.align 8
.globl GHC.Real.$dmfloor_entry
.type GHC.Real.$dmfloor_entry, @object
GHC.Real.$dmfloor_entry:
_c1tf8:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tf9
_c1tfa:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1tfc
_c1tfb:
	leaq ds_s1sgG_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq block_c1tet_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1tfc:
	movq $40,904(%r13)
_c1tf9:
	leaq GHC.Real.$dmfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmfloor_entry, .-GHC.Real.$dmfloor_entry


==================== Asm code ====================
2018-03-16 15:56:16.411639198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmfloor_info
.type GHC.Real.$dmfloor_info, @object
GHC.Real.$dmfloor_info:
	.quad	GHC.Real.$dmfloor_entry
	.quad	0
	.quad	210453397518
	.quad	12884901911
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.412425383 UTC

.section .text
.align 8
_c1tet:
_c1tet:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1tff
_c1tfe:
	leaq sat_s1sgO_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1teK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1tff:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tet, .-_c1tet


==================== Asm code ====================
2018-03-16 15:56:16.413166109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tet_info:
	.quad	_c1tet
	.quad	2
	.quad	73014444062
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.413927052 UTC

.section .text
.align 8
_c1teK:
_c1teK:
	movq 16(%rbp),%rax
	leaq block_c1teO_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c1teK, .-_c1teK


==================== Asm code ====================
2018-03-16 15:56:16.414571024 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1teK_info:
	.quad	_c1teK
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.415311824 UTC

.section .text
.align 8
_c1teO:
_c1teO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1tfl
_c1tfs:
	leaq block_c1teT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1tfl:
	leaq block_c1tfi_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c1tfi
_c1tfm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1teO, .-_c1teO


==================== Asm code ====================
2018-03-16 15:56:16.415943569 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1teO_info:
	.quad	_c1teO
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.416612165 UTC

.section .text
.align 8
_c1tfi:
_c1tfi:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tfi, .-_c1tfi


==================== Asm code ====================
2018-03-16 15:56:16.417151964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tfi_info:
	.quad	_c1tfi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.417846749 UTC

.section .text
.align 8
_c1teT:
_c1teT:
	leaq block_c1teX_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1teT, .-_c1teT


==================== Asm code ====================
2018-03-16 15:56:16.418442081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1teT_info:
	.quad	_c1teT
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.419197862 UTC

.section .text
.align 8
_c1teX:
_c1teX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1tfw
_c1tfv:
	leaq sat_s1sgZ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1tfw:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1teX, .-_c1teX


==================== Asm code ====================
2018-03-16 15:56:16.419878896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1teX_info:
	.quad	_c1teX
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.428090609 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmceiling_closure
.type GHC.Real.$dmceiling_closure, @object
GHC.Real.$dmceiling_closure:
	.quad	GHC.Real.$dmceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.42897749 UTC

.section .text
.align 8
ds_s1sh3_entry:
_c1tgT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tgU
_c1tgV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1tgU:
	jmp *-16(%r13)
	.size ds_s1sh3_entry, .-ds_s1sh3_entry


==================== Asm code ====================
2018-03-16 15:56:16.429671992 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sh3_info:
	.quad	ds_s1sh3_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:16.430352034 UTC

.section .text
.align 8
sat_s1shb_entry:
_c1th6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1th7
_c1th8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1th4_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1th7:
	jmp *-16(%r13)
	.size sat_s1shb_entry, .-sat_s1shb_entry


==================== Asm code ====================
2018-03-16 15:56:16.430999239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shb_info:
	.quad	sat_s1shb_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.431697611 UTC

.section .text
.align 8
_c1th4:
_c1th4:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1th4, .-_c1th4


==================== Asm code ====================
2018-03-16 15:56:16.432298388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1th4_info:
	.quad	_c1th4
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.43306938 UTC

.section .text
.align 8
sat_s1shm_entry:
_c1thy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1thz
_c1thA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1thz:
	jmp *-16(%r13)
	.size sat_s1shm_entry, .-sat_s1shm_entry


==================== Asm code ====================
2018-03-16 15:56:16.43377092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shm_info:
	.quad	sat_s1shm_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.43457496 UTC

.section .text
.align 8
.globl GHC.Real.$dmceiling_entry
.type GHC.Real.$dmceiling_entry, @object
GHC.Real.$dmceiling_entry:
_c1thB:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1thC
_c1thD:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1thF
_c1thE:
	leaq ds_s1sh3_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq block_c1tgW_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1thF:
	movq $40,904(%r13)
_c1thC:
	leaq GHC.Real.$dmceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmceiling_entry, .-GHC.Real.$dmceiling_entry


==================== Asm code ====================
2018-03-16 15:56:16.435294942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmceiling_info
.type GHC.Real.$dmceiling_info, @object
GHC.Real.$dmceiling_info:
	.quad	GHC.Real.$dmceiling_entry
	.quad	0
	.quad	347892350990
	.quad	12884901911
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.436091709 UTC

.section .text
.align 8
_c1tgW:
_c1tgW:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1thI
_c1thH:
	leaq sat_s1shb_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1thd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1thI:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tgW, .-_c1tgW


==================== Asm code ====================
2018-03-16 15:56:16.436778791 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tgW_info:
	.quad	_c1tgW
	.quad	2
	.quad	73014444062
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.437526637 UTC

.section .text
.align 8
_c1thd:
_c1thd:
	movq 16(%rbp),%rax
	leaq block_c1thh_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
	.size _c1thd, .-_c1thd


==================== Asm code ====================
2018-03-16 15:56:16.438170524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1thd_info:
	.quad	_c1thd
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.438909137 UTC

.section .text
.align 8
_c1thh:
_c1thh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1thO
_c1thV:
	leaq block_c1thm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1thO:
	leaq block_c1thL_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c1thL
_c1thP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1thh, .-_c1thh


==================== Asm code ====================
2018-03-16 15:56:16.439599007 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1thh_info:
	.quad	_c1thh
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.440268265 UTC

.section .text
.align 8
_c1thL:
_c1thL:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1thL, .-_c1thL


==================== Asm code ====================
2018-03-16 15:56:16.440894664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1thL_info:
	.quad	_c1thL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.441637601 UTC

.section .text
.align 8
_c1thm:
_c1thm:
	leaq block_c1thq_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1thm, .-_c1thm


==================== Asm code ====================
2018-03-16 15:56:16.442727995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1thm_info:
	.quad	_c1thm
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.443500053 UTC

.section .text
.align 8
_c1thq:
_c1thq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1thZ
_c1thY:
	leaq sat_s1shm_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1thZ:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1thq, .-_c1thq


==================== Asm code ====================
2018-03-16 15:56:16.444221527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1thq_info:
	.quad	_c1thq
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.44716145 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmtruncate_closure
.type GHC.Real.$dmtruncate_closure, @object
GHC.Real.$dmtruncate_closure:
	.quad	GHC.Real.$dmtruncate_info


==================== Asm code ====================
2018-03-16 15:56:16.44785181 UTC

.section .text
.align 8
.globl GHC.Real.$dmtruncate_entry
.type GHC.Real.$dmtruncate_entry, @object
GHC.Real.$dmtruncate_entry:
_c1tjk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tjl
_c1tjm:
	leaq block_c1tji_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.properFraction_entry
_c1tjl:
	leaq GHC.Real.$dmtruncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmtruncate_entry, .-GHC.Real.$dmtruncate_entry


==================== Asm code ====================
2018-03-16 15:56:16.448498803 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmtruncate_info
.type GHC.Real.$dmtruncate_info, @object
GHC.Real.$dmtruncate_info:
	.quad	GHC.Real.$dmtruncate_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.449114931 UTC

.section .text
.align 8
_c1tji:
_c1tji:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tji, .-_c1tji


==================== Asm code ====================
2018-03-16 15:56:16.449740114 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tji_info:
	.quad	_c1tji
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.453223473 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmrecip_closure
.type GHC.Real.$dmrecip_closure, @object
GHC.Real.$dmrecip_closure:
	.quad	GHC.Real.$dmrecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.454058174 UTC

.section .text
.align 8
sat_s1shw_entry:
_c1tjK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tjL
_c1tjM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tjI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1tjL:
	jmp *-16(%r13)
	.size sat_s1shw_entry, .-sat_s1shw_entry


==================== Asm code ====================
2018-03-16 15:56:16.454736814 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shw_info:
	.quad	sat_s1shw_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.455357563 UTC

.section .text
.align 8
_c1tjI:
_c1tjI:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1tjI, .-_c1tjI


==================== Asm code ====================
2018-03-16 15:56:16.455967731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tjI_info:
	.quad	_c1tjI
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.456818484 UTC

.section .text
.align 8
.globl GHC.Real.$dmrecip_entry
.type GHC.Real.$dmrecip_entry, @object
GHC.Real.$dmrecip_entry:
_c1tjQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tjR
_c1tjS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tjU
_c1tjT:
	leaq sat_s1shw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real./_entry
_c1tjU:
	movq $24,904(%r13)
_c1tjR:
	leaq GHC.Real.$dmrecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmrecip_entry, .-GHC.Real.$dmrecip_entry


==================== Asm code ====================
2018-03-16 15:56:16.457592121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmrecip_info
.type GHC.Real.$dmrecip_info, @object
GHC.Real.$dmrecip_info:
	.quad	GHC.Real.$dmrecip_entry
	.quad	0
	.quad	554050781198
	.quad	8589934607
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.461394967 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dm/_closure
.type GHC.Real.$dm/_closure, @object
GHC.Real.$dm/_closure:
	.quad	GHC.Real.$dm/_info


==================== Asm code ====================
2018-03-16 15:56:16.462173821 UTC

.section .text
.align 8
sat_s1shB_entry:
_c1tkm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tkn
_c1tko:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.recip_entry
_c1tkn:
	jmp *-16(%r13)
	.size sat_s1shB_entry, .-sat_s1shB_entry


==================== Asm code ====================
2018-03-16 15:56:16.462821218 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shB_info:
	.quad	sat_s1shB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.463630292 UTC

.section .text
.align 8
.globl GHC.Real.$dm/_entry
.type GHC.Real.$dm/_entry, @object
GHC.Real.$dm/_entry:
_c1tkr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tks
_c1tkt:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1tkv
_c1tku:
	leaq sat_s1shB_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq block_c1tkp_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1tkv:
	movq $32,904(%r13)
_c1tks:
	leaq GHC.Real.$dm/_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dm/_entry, .-GHC.Real.$dm/_entry


==================== Asm code ====================
2018-03-16 15:56:16.464301735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dm/_info
.type GHC.Real.$dm/_info, @object
GHC.Real.$dm/_info:
	.quad	GHC.Real.$dm/_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.464967287 UTC

.section .text
.align 8
_c1tkp:
_c1tkp:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
	.size _c1tkp, .-_c1tkp


==================== Asm code ====================
2018-03-16 15:56:16.465663421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tkp_info:
	.quad	_c1tkp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.477977178 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmdivMod_closure
.type GHC.Real.$dmdivMod_closure, @object
GHC.Real.$dmdivMod_closure:
	.quad	GHC.Real.$dmdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.478780867 UTC

.section .text
.align 8
$dNum_s1shG_entry:
_c1tl5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tl6
_c1tl7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1tl6:
	jmp *-16(%r13)
	.size $dNum_s1shG_entry, .-$dNum_s1shG_entry


==================== Asm code ====================
2018-03-16 15:56:16.479406057 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1shG_info:
	.quad	$dNum_s1shG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:16.480178271 UTC

.section .text
.align 8
ds_s1shH_entry:
_c1tle:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tli
_c1tlj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tlc_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.quotRem_entry
_c1tli:
	jmp *-16(%r13)
	.size ds_s1shH_entry, .-ds_s1shH_entry


==================== Asm code ====================
2018-03-16 15:56:16.480870764 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1shH_info:
	.quad	ds_s1shH_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:16.482130379 UTC

.section .text
.align 8
_c1tlc:
_c1tlc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1tlm
_c1tll:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq (,,)_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tlm:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tlc, .-_c1tlc


==================== Asm code ====================
2018-03-16 15:56:16.482774656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tlc_info:
	.quad	_c1tlc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.483452939 UTC

.section .text
.align 8
sat_s1shT_entry:
_c1tlw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tlx
_c1tly:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
_c1tlx:
	jmp *-16(%r13)
	.size sat_s1shT_entry, .-sat_s1shT_entry


==================== Asm code ====================
2018-03-16 15:56:16.484111699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shT_info:
	.quad	sat_s1shT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.484904335 UTC

.section .text
.align 8
sat_s1shU_entry:
_c1tlz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tlA
_c1tlB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1tlD
_c1tlC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1shT_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1tlD:
	movq $32,904(%r13)
_c1tlA:
	jmp *-16(%r13)
	.size sat_s1shU_entry, .-sat_s1shU_entry


==================== Asm code ====================
2018-03-16 15:56:16.485773942 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shU_info:
	.quad	sat_s1shU_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.486522364 UTC

.section .text
.align 8
sat_s1shS_entry:
_c1tlI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tlJ
_c1tlK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
_c1tlJ:
	jmp *-16(%r13)
	.size sat_s1shS_entry, .-sat_s1shS_entry


==================== Asm code ====================
2018-03-16 15:56:16.48716345 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1shS_info:
	.quad	sat_s1shS_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.487848866 UTC

.section .text
.align 8
sat_s1si7_entry:
_c1tm2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tm3
_c1tm4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1tm3:
	jmp *-16(%r13)
	.size sat_s1si7_entry, .-sat_s1si7_entry


==================== Asm code ====================
2018-03-16 15:56:16.488517129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1si7_info:
	.quad	sat_s1si7_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:16.489283843 UTC

.section .text
.align 8
sat_s1si5_entry:
_c1tmd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tme
_c1tmf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1tme:
	jmp *-16(%r13)
	.size sat_s1si5_entry, .-sat_s1si5_entry


==================== Asm code ====================
2018-03-16 15:56:16.489951396 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1si5_info:
	.quad	sat_s1si5_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.490769047 UTC

.section .text
.align 8
sat_s1si6_entry:
_c1tmh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tmi
_c1tmj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1tml
_c1tmk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1si5_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1tml:
	movq $48,904(%r13)
_c1tmi:
	jmp *-16(%r13)
	.size sat_s1si6_entry, .-sat_s1si6_entry


==================== Asm code ====================
2018-03-16 15:56:16.491541502 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1si6_info:
	.quad	sat_s1si6_entry
	.quad	2
	.quad	4294967314
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.492260178 UTC

.section .text
.align 8
.globl GHC.Real.$dmdivMod_entry
.type GHC.Real.$dmdivMod_entry, @object
GHC.Real.$dmdivMod_entry:
_c1tmm:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tmn
_c1tmo:
	leaq block_c1tkX_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1tmn:
	leaq GHC.Real.$dmdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmdivMod_entry, .-GHC.Real.$dmdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:16.492928333 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmdivMod_info
.type GHC.Real.$dmdivMod_info, @object
GHC.Real.$dmdivMod_info:
	.quad	GHC.Real.$dmdivMod_entry
	.quad	0
	.quad	1103806595086
	.quad	12884901911
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.4938775 UTC

.section .text
.align 8
_c1tkX:
_c1tkX:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _c1tmr
_c1tmq:
	leaq $dNum_s1shG_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %rbx,-128(%r12)
	leaq ds_s1shH_info(%rip),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-96(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	movq stg_sel_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	leaq -120(%r12),%rcx
	movq %rcx,-64(%r12)
	leaq sat_s1shU_info(%rip),%rdx
	movq %rdx,-56(%r12)
	movq %rax,-40(%r12)
	leaq -144(%r12),%rax
	movq %rax,-32(%r12)
	leaq sat_s1shS_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	leaq -80(%r12),%rdx
	movq %rdx,(%r12)
	leaq block_c1tlL_info(%rip),%rsi
	movq %rsi,-24(%rbp)
	movq %rbx,%r14
	leaq -56(%r12),%rbx
	movq %rbx,-16(%rbp)
	leaq -24(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p2Real_entry
_c1tmr:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tkX, .-_c1tkX


==================== Asm code ====================
2018-03-16 15:56:16.494624625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tkX_info:
	.quad	_c1tkX
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.495216947 UTC

.section .text
.align 8
_c1tlL:
_c1tlL:
	leaq block_c1tlP_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1tlL, .-_c1tlL


==================== Asm code ====================
2018-03-16 15:56:16.495793315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tlL_info:
	.quad	_c1tlL
	.quad	6
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.496481816 UTC

.section .text
.align 8
_c1tlP:
_c1tlP:
	movq 16(%rbp),%rax
	leaq block_c1tlT_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1tlP, .-_c1tlP


==================== Asm code ====================
2018-03-16 15:56:16.497106821 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tlP_info:
	.quad	_c1tlP
	.quad	6
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.498084407 UTC

.section .text
.align 8
_c1tlT:
_c1tlT:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1tmy
_c1tmF:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1tmI
_c1tmH:
	leaq sat_s1si7_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-56(%r12)
	leaq sat_s1si6_info(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tmI:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1tmy:
	leaq block_c1tmv_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c1tmv
_c1tmz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tlT, .-_c1tlT


==================== Asm code ====================
2018-03-16 15:56:16.498858869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tlT_info:
	.quad	_c1tlT
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+80


==================== Asm code ====================
2018-03-16 15:56:16.499501924 UTC

.section .text
.align 8
_c1tmv:
_c1tmv:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tmv, .-_c1tmv


==================== Asm code ====================
2018-03-16 15:56:16.500040662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tmv_info:
	.quad	_c1tmv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.502998682 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmmod_closure
.type GHC.Real.$dmmod_closure, @object
GHC.Real.$dmmod_closure:
	.quad	GHC.Real.$dmmod_info


==================== Asm code ====================
2018-03-16 15:56:16.50377061 UTC

.section .text
.align 8
.globl GHC.Real.$dmmod_entry
.type GHC.Real.$dmmod_entry, @object
GHC.Real.$dmmod_entry:
_c1toH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1toI
_c1toJ:
	leaq block_c1toF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.divMod_entry
_c1toI:
	leaq GHC.Real.$dmmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmmod_entry, .-GHC.Real.$dmmod_entry


==================== Asm code ====================
2018-03-16 15:56:16.50444195 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmmod_info
.type GHC.Real.$dmmod_info, @object
GHC.Real.$dmmod_info:
	.quad	GHC.Real.$dmmod_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.505112827 UTC

.section .text
.align 8
_c1toF:
_c1toF:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1toF, .-_c1toF


==================== Asm code ====================
2018-03-16 15:56:16.506268866 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1toF_info:
	.quad	_c1toF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.509073055 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmdiv_closure
.type GHC.Real.$dmdiv_closure, @object
GHC.Real.$dmdiv_closure:
	.quad	GHC.Real.$dmdiv_info


==================== Asm code ====================
2018-03-16 15:56:16.509902211 UTC

.section .text
.align 8
.globl GHC.Real.$dmdiv_entry
.type GHC.Real.$dmdiv_entry, @object
GHC.Real.$dmdiv_entry:
_c1tp3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tp4
_c1tp5:
	leaq block_c1tp1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.divMod_entry
_c1tp4:
	leaq GHC.Real.$dmdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmdiv_entry, .-GHC.Real.$dmdiv_entry


==================== Asm code ====================
2018-03-16 15:56:16.510545311 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmdiv_info
.type GHC.Real.$dmdiv_info, @object
GHC.Real.$dmdiv_info:
	.quad	GHC.Real.$dmdiv_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.51119119 UTC

.section .text
.align 8
_c1tp1:
_c1tp1:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tp1, .-_c1tp1


==================== Asm code ====================
2018-03-16 15:56:16.511781389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tp1_info:
	.quad	_c1tp1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.514655674 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmrem_closure
.type GHC.Real.$dmrem_closure, @object
GHC.Real.$dmrem_closure:
	.quad	GHC.Real.$dmrem_info


==================== Asm code ====================
2018-03-16 15:56:16.515447525 UTC

.section .text
.align 8
.globl GHC.Real.$dmrem_entry
.type GHC.Real.$dmrem_entry, @object
GHC.Real.$dmrem_entry:
_c1tpp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tpq
_c1tpr:
	leaq block_c1tpn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.quotRem_entry
_c1tpq:
	leaq GHC.Real.$dmrem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmrem_entry, .-GHC.Real.$dmrem_entry


==================== Asm code ====================
2018-03-16 15:56:16.516098893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmrem_info
.type GHC.Real.$dmrem_info, @object
GHC.Real.$dmrem_info:
	.quad	GHC.Real.$dmrem_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.516750201 UTC

.section .text
.align 8
_c1tpn:
_c1tpn:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tpn, .-_c1tpn


==================== Asm code ====================
2018-03-16 15:56:16.517390696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tpn_info:
	.quad	_c1tpn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.520128581 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmquot_closure
.type GHC.Real.$dmquot_closure, @object
GHC.Real.$dmquot_closure:
	.quad	GHC.Real.$dmquot_info


==================== Asm code ====================
2018-03-16 15:56:16.520898566 UTC

.section .text
.align 8
.globl GHC.Real.$dmquot_entry
.type GHC.Real.$dmquot_entry, @object
GHC.Real.$dmquot_entry:
_c1tpL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tpM
_c1tpN:
	leaq block_c1tpJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.quotRem_entry
_c1tpM:
	leaq GHC.Real.$dmquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmquot_entry, .-GHC.Real.$dmquot_entry


==================== Asm code ====================
2018-03-16 15:56:16.521660266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmquot_info
.type GHC.Real.$dmquot_info, @object
GHC.Real.$dmquot_info:
	.quad	GHC.Real.$dmquot_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:16.522314142 UTC

.section .text
.align 8
_c1tpJ:
_c1tpJ:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tpJ, .-_c1tpJ


==================== Asm code ====================
2018-03-16 15:56:16.522892295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tpJ_info:
	.quad	_c1tpJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.526529325 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.divZeroError_closure
.type GHC.Real.divZeroError_closure, @object
GHC.Real.divZeroError_closure:
	.quad	GHC.Real.divZeroError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.52738956 UTC

.section .text
.align 8
.globl GHC.Real.divZeroError_entry
.type GHC.Real.divZeroError_entry, @object
GHC.Real.divZeroError_entry:
_c1tq7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tq8
_c1tq9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1tq6
_c1tq5:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Exception.divZeroException_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_raise#@gotpcrel(%rip)
_c1tq8:
	jmp *-16(%r13)
_c1tq6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.divZeroError_entry, .-GHC.Real.divZeroError_entry


==================== Asm code ====================
2018-03-16 15:56:16.528121831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.divZeroError_info
.type GHC.Real.divZeroError_info, @object
GHC.Real.divZeroError_info:
	.quad	GHC.Real.divZeroError_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+152


==================== Asm code ====================
2018-03-16 15:56:16.529851597 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt1_closure
.type GHC.Real.$fIntegralInt1_closure, @object
GHC.Real.$fIntegralInt1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.534244298 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cmod_closure
.type GHC.Real.$fIntegralInt_$cmod_closure, @object
GHC.Real.$fIntegralInt_$cmod_closure:
	.quad	GHC.Real.$fIntegralInt_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.535118878 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cmod_entry
.type GHC.Real.$fIntegralInt_$cmod_entry, @object
GHC.Real.$fIntegralInt_$cmod_entry:
_c1tqq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tqr
_c1tqs:
	leaq block_c1tqn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tqn
_c1tqo:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tqr:
	leaq GHC.Real.$fIntegralInt_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cmod_entry, .-GHC.Real.$fIntegralInt_$cmod_entry


==================== Asm code ====================
2018-03-16 15:56:16.5358773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cmod_info
.type GHC.Real.$fIntegralInt_$cmod_info, @object
GHC.Real.$fIntegralInt_$cmod_info:
	.quad	GHC.Real.$fIntegralInt_$cmod_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.536704982 UTC

.section .text
.align 8
_c1tqn:
_c1tqn:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u1tqQ
_c1tqO:
	leaq GHC.Real.$fIntegralInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1tqQ:
	testq %rax,%rax
	jne _c1tqJ
_c1tqP:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tqJ:
	leaq block_c1tqy_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tqy
_c1tqz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tqn, .-_c1tqn


==================== Asm code ====================
2018-03-16 15:56:16.537482025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tqn_info:
	.quad	_c1tqn
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.538202602 UTC

.section .text
.align 8
_c1tqy:
_c1tqy:
	movq 8(%rbp),%rax
	leaq block_c1tqD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _c1tqy, .-_c1tqy


==================== Asm code ====================
2018-03-16 15:56:16.539339178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tqy_info:
	.quad	_c1tqy
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.540064126 UTC

.section .text
.align 8
_c1tqD:
_c1tqD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tqN
_c1tqM:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tqN:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1tqD, .-_c1tqD


==================== Asm code ====================
2018-03-16 15:56:16.540670261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tqD_info:
	.quad	_c1tqD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.545791748 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$crem_closure
.type GHC.Real.$fIntegralInt_$crem_closure, @object
GHC.Real.$fIntegralInt_$crem_closure:
	.quad	GHC.Real.$fIntegralInt_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.546622418 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$crem_entry
.type GHC.Real.$fIntegralInt_$crem_entry, @object
GHC.Real.$fIntegralInt_$crem_entry:
_c1trm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1trn
_c1tro:
	leaq block_c1trj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1trj
_c1trk:
	movq (%rbx),%rax
	jmp *(%rax)
_c1trn:
	leaq GHC.Real.$fIntegralInt_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$crem_entry, .-GHC.Real.$fIntegralInt_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:16.547286164 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$crem_info
.type GHC.Real.$fIntegralInt_$crem_info, @object
GHC.Real.$fIntegralInt_$crem_info:
	.quad	GHC.Real.$fIntegralInt_$crem_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.548122372 UTC

.section .text
.align 8
_c1trj:
_c1trj:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _u1trK
_c1trI:
	leaq GHC.Real.$fIntegralInt1_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1trK:
	testq %rax,%rax
	jne _c1trE
_c1trJ:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1trE:
	leaq block_c1tru_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tru
_c1trv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1trj, .-_c1trj


==================== Asm code ====================
2018-03-16 15:56:16.548827282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1trj_info:
	.quad	_c1trj
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.549609736 UTC

.section .text
.align 8
_c1tru:
_c1tru:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1trH
_c1trG:
	movq 7(%rbx),%rax
	cqto
	idivq 8(%rbp)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1trH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tru, .-_c1tru


==================== Asm code ====================
2018-03-16 15:56:16.550247676 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tru_info:
	.quad	_c1tru
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.553384681 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquot_closure
.type GHC.Real.$fIntegralInteger_$cquot_closure, @object
GHC.Real.$fIntegralInteger_$cquot_closure:
	.quad	GHC.Real.$fIntegralInteger_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.554218176 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cquot_entry
.type GHC.Real.$fIntegralInteger_$cquot_entry, @object
GHC.Real.$fIntegralInteger_$cquot_entry:
_c1tse:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tsf
_c1tsg:
	leaq block_c1ts9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tsf:
	leaq GHC.Real.$fIntegralInteger_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cquot_entry, .-GHC.Real.$fIntegralInteger_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:16.554876322 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquot_info
.type GHC.Real.$fIntegralInteger_$cquot_info, @object
GHC.Real.$fIntegralInteger_$cquot_info:
	.quad	GHC.Real.$fIntegralInteger_$cquot_entry
	.quad	0
	.quad	2478196129806
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.55558783 UTC

.section .text
.align 8
_c1ts9:
_c1ts9:
	cmpq $1,%rbx
	je _c1tsd
_c1tsc:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c1tsd:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1ts9, .-_c1ts9


==================== Asm code ====================
2018-03-16 15:56:16.556245326 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ts9_info:
	.quad	_c1ts9
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.559393045 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$crem_closure
.type GHC.Real.$fIntegralInteger_$crem_closure, @object
GHC.Real.$fIntegralInteger_$crem_closure:
	.quad	GHC.Real.$fIntegralInteger_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.56022555 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$crem_entry
.type GHC.Real.$fIntegralInteger_$crem_entry, @object
GHC.Real.$fIntegralInteger_$crem_entry:
_c1tsF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tsG
_c1tsH:
	leaq block_c1tsA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tsG:
	leaq GHC.Real.$fIntegralInteger_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$crem_entry, .-GHC.Real.$fIntegralInteger_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:16.560916129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$crem_info
.type GHC.Real.$fIntegralInteger_$crem_info, @object
GHC.Real.$fIntegralInteger_$crem_info:
	.quad	GHC.Real.$fIntegralInteger_$crem_entry
	.quad	0
	.quad	4677219385358
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.561821573 UTC

.section .text
.align 8
_c1tsA:
_c1tsA:
	cmpq $1,%rbx
	je _c1tsE
_c1tsD:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.remInteger_entry@gotpcrel(%rip)
_c1tsE:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tsA, .-_c1tsA


==================== Asm code ====================
2018-03-16 15:56:16.562461317 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tsA_info:
	.quad	_c1tsA
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.565587984 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdiv_closure
.type GHC.Real.$fIntegralInteger_$cdiv_closure, @object
GHC.Real.$fIntegralInteger_$cdiv_closure:
	.quad	GHC.Real.$fIntegralInteger_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.566396358 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cdiv_entry
.type GHC.Real.$fIntegralInteger_$cdiv_entry, @object
GHC.Real.$fIntegralInteger_$cdiv_entry:
_c1tt6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tt7
_c1tt8:
	leaq block_c1tt1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tt7:
	leaq GHC.Real.$fIntegralInteger_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cdiv_entry, .-GHC.Real.$fIntegralInteger_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:16.567086254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdiv_info
.type GHC.Real.$fIntegralInteger_$cdiv_info, @object
GHC.Real.$fIntegralInteger_$cdiv_info:
	.quad	GHC.Real.$fIntegralInteger_$cdiv_entry
	.quad	0
	.quad	26667451940878
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.567834052 UTC

.section .text
.align 8
_c1tt1:
_c1tt1:
	cmpq $1,%rbx
	je _c1tt5
_c1tt4:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.divInteger_entry@gotpcrel(%rip)
_c1tt5:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tt1, .-_c1tt1


==================== Asm code ====================
2018-03-16 15:56:16.568501608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tt1_info:
	.quad	_c1tt1
	.quad	2
	.quad	141733920798
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.572251702 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cmod_closure
.type GHC.Real.$fIntegralInteger_$cmod_closure, @object
GHC.Real.$fIntegralInteger_$cmod_closure:
	.quad	GHC.Real.$fIntegralInteger_$cmod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.573046357 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cmod_entry
.type GHC.Real.$fIntegralInteger_$cmod_entry, @object
GHC.Real.$fIntegralInteger_$cmod_entry:
_c1ttx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tty
_c1ttz:
	leaq block_c1tts_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tty:
	leaq GHC.Real.$fIntegralInteger_$cmod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cmod_entry, .-GHC.Real.$fIntegralInteger_$cmod_entry


==================== Asm code ====================
2018-03-16 15:56:16.575564229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cmod_info
.type GHC.Real.$fIntegralInteger_$cmod_info, @object
GHC.Real.$fIntegralInteger_$cmod_info:
	.quad	GHC.Real.$fIntegralInteger_$cmod_entry
	.quad	0
	.quad	105832289140750
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.576360389 UTC

.section .text
.align 8
_c1tts:
_c1tts:
	cmpq $1,%rbx
	je _c1ttw
_c1ttv:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.modInteger_entry@gotpcrel(%rip)
_c1ttw:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tts, .-_c1tts


==================== Asm code ====================
2018-03-16 15:56:16.577144056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tts_info:
	.quad	_c1tts
	.quad	2
	.quad	554050781214
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.581359176 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquotRem_closure
.type GHC.Real.$fIntegralInteger_$cquotRem_closure, @object
GHC.Real.$fIntegralInteger_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.582242243 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cquotRem_entry
.type GHC.Real.$fIntegralInteger_$cquotRem_entry, @object
GHC.Real.$fIntegralInteger_$cquotRem_entry:
_c1ttY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ttZ
_c1tu0:
	leaq block_c1ttT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1ttZ:
	leaq GHC.Real.$fIntegralInteger_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cquotRem_entry, .-GHC.Real.$fIntegralInteger_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:16.583011425 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cquotRem_info
.type GHC.Real.$fIntegralInteger_$cquotRem_info, @object
GHC.Real.$fIntegralInteger_$cquotRem_info:
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_entry
	.quad	0
	.quad	141016661229582
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.583825068 UTC

.section .text
.align 8
_c1ttT:
_c1ttT:
	cmpq $1,%rbx
	je _c1ttX
_c1ttW:
	movq 16(%rbp),%rax
	leaq block_c1tu3_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c1ttX:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1ttT, .-_c1ttT


==================== Asm code ====================
2018-03-16 15:56:16.584527114 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ttT_info:
	.quad	_c1ttT
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.585324835 UTC

.section .text
.align 8
_c1tu3:
_c1tu3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tu9
_c1tu8:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tu9:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tu3, .-_c1tu3


==================== Asm code ====================
2018-03-16 15:56:16.585963638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tu3_info:
	.quad	_c1tu3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.590212445 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdivMod_closure
.type GHC.Real.$fIntegralInteger_$cdivMod_closure, @object
GHC.Real.$fIntegralInteger_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.59108433 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInteger_$cdivMod_entry
.type GHC.Real.$fIntegralInteger_$cdivMod_entry, @object
GHC.Real.$fIntegralInteger_$cdivMod_entry:
_c1tuB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tuC
_c1tuD:
	leaq block_c1tuw_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tuC:
	leaq GHC.Real.$fIntegralInteger_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInteger_$cdivMod_entry, .-GHC.Real.$fIntegralInteger_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:16.591865131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_$cdivMod_info
.type GHC.Real.$fIntegralInteger_$cdivMod_info, @object
GHC.Real.$fIntegralInteger_$cdivMod_info:
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_entry
	.quad	0
	.quad	844704103006222
	.quad	8589934607
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.592669549 UTC

.section .text
.align 8
_c1tuw:
_c1tuw:
	cmpq $1,%rbx
	je _c1tuA
_c1tuz:
	movq 16(%rbp),%rax
	leaq block_c1tuG_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.divModInteger_entry@gotpcrel(%rip)
_c1tuA:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tuw, .-_c1tuw


==================== Asm code ====================
2018-03-16 15:56:16.593432702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tuw_info:
	.quad	_c1tuw
	.quad	2
	.quad	4402341478430
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.594176091 UTC

.section .text
.align 8
_c1tuG:
_c1tuG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tuM
_c1tuL:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tuM:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tuG, .-_c1tuG


==================== Asm code ====================
2018-03-16 15:56:16.594878064 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tuG_info:
	.quad	_c1tuG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.596856681 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInteger_closure
.type GHC.Real.$fIntegralInteger_closure, @object
GHC.Real.$fIntegralInteger_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealInteger_closure+1
	.quad	GHC.Enum.$fEnumInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cquot_closure+2
	.quad	GHC.Real.$fIntegralInteger_$crem_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cdiv_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cmod_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralInteger_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.601146201 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquot_closure
.type GHC.Real.$fIntegralWord_$cquot_closure, @object
GHC.Real.$fIntegralWord_$cquot_closure:
	.quad	GHC.Real.$fIntegralWord_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.602119939 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cquot_entry
.type GHC.Real.$fIntegralWord_$cquot_entry, @object
GHC.Real.$fIntegralWord_$cquot_entry:
_c1tvd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tvh
_c1tvi:
	leaq block_c1tva_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tva
_c1tvb:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tvh:
	leaq GHC.Real.$fIntegralWord_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cquot_entry, .-GHC.Real.$fIntegralWord_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:16.602871771 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquot_info
.type GHC.Real.$fIntegralWord_$cquot_info, @object
GHC.Real.$fIntegralWord_$cquot_info:
	.quad	GHC.Real.$fIntegralWord_$cquot_entry
	.quad	0
	.quad	17596481011726
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.603664723 UTC

.section .text
.align 8
_c1tva:
_c1tva:
	leaq block_c1tvg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tvg
_c1tvk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tva, .-_c1tva


==================== Asm code ====================
2018-03-16 15:56:16.60430037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tva_info:
	.quad	_c1tva
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.605188959 UTC

.section .text
.align 8
_c1tvg:
_c1tvg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tvq
_c1tvp:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1tvy
_c1tvz:
	addq $-16,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tvy:
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tvq:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tvg, .-_c1tvg


==================== Asm code ====================
2018-03-16 15:56:16.607125572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tvg_info:
	.quad	_c1tvg
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.611120065 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$crem_closure
.type GHC.Real.$fIntegralWord_$crem_closure, @object
GHC.Real.$fIntegralWord_$crem_closure:
	.quad	GHC.Real.$fIntegralWord_$crem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.61193247 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$crem_entry
.type GHC.Real.$fIntegralWord_$crem_entry, @object
GHC.Real.$fIntegralWord_$crem_entry:
_c1tw1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tw5
_c1tw6:
	leaq block_c1tvY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tvY
_c1tvZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tw5:
	leaq GHC.Real.$fIntegralWord_$crem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$crem_entry, .-GHC.Real.$fIntegralWord_$crem_entry


==================== Asm code ====================
2018-03-16 15:56:16.612609024 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$crem_info
.type GHC.Real.$fIntegralWord_$crem_info, @object
GHC.Real.$fIntegralWord_$crem_info:
	.quad	GHC.Real.$fIntegralWord_$crem_entry
	.quad	0
	.quad	35188667056142
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.613378236 UTC

.section .text
.align 8
_c1tvY:
_c1tvY:
	leaq block_c1tw4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tw4
_c1tw8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tvY, .-_c1tvY


==================== Asm code ====================
2018-03-16 15:56:16.613999597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tvY_info:
	.quad	_c1tvY
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.614813091 UTC

.section .text
.align 8
_c1tw4:
_c1tw4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1twe
_c1twd:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1twm
_c1twn:
	addq $-16,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1twm:
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1twe:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tw4, .-_c1tw4


==================== Asm code ====================
2018-03-16 15:56:16.615538735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tw4_info:
	.quad	_c1tw4
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.619793361 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquotRem_closure
.type GHC.Real.$fIntegralWord_$cquotRem_closure, @object
GHC.Real.$fIntegralWord_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralWord_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.620680855 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cquotRem_entry
.type GHC.Real.$fIntegralWord_$cquotRem_entry, @object
GHC.Real.$fIntegralWord_$cquotRem_entry:
_c1twP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1twT
_c1twU:
	leaq block_c1twM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1twM
_c1twN:
	movq (%rbx),%rax
	jmp *(%rax)
_c1twT:
	leaq GHC.Real.$fIntegralWord_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cquotRem_entry, .-GHC.Real.$fIntegralWord_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:16.622168827 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cquotRem_info
.type GHC.Real.$fIntegralWord_$cquotRem_info, @object
GHC.Real.$fIntegralWord_$cquotRem_info:
	.quad	GHC.Real.$fIntegralWord_$cquotRem_entry
	.quad	0
	.quad	70373039144974
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.622900731 UTC

.section .text
.align 8
_c1twM:
_c1twM:
	leaq block_c1twS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1twS
_c1twW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1twM, .-_c1twM


==================== Asm code ====================
2018-03-16 15:56:16.623558414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1twM_info:
	.quad	_c1twM
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.624457022 UTC

.section .text
.align 8
_c1twS:
_c1twS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1tx2
_c1tx1:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1tx9
_c1txa:
	addq $-56,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tx9:
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tx2:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1twS, .-_c1twS


==================== Asm code ====================
2018-03-16 15:56:16.625218992 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1twS_info:
	.quad	_c1twS
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.630991141 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cdivMod_closure
.type GHC.Real.$fIntegralWord_$cdivMod_closure, @object
GHC.Real.$fIntegralWord_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralWord_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.631933234 UTC

.section .text
.align 8
sat_s1sjN_entry:
_c1txU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1txX
_c1txY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1ty0
_c1txZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	xorq %rdx,%rdx
	divq 24(%rbx)
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ty0:
	movq $16,904(%r13)
_c1txX:
	jmp *-16(%r13)
	.size sat_s1sjN_entry, .-sat_s1sjN_entry


==================== Asm code ====================
2018-03-16 15:56:16.632652861 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sjN_info:
	.quad	sat_s1sjN_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:56:16.633697662 UTC

.section .text
.align 8
sat_s1sjL_entry:
_c1ty7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tya
_c1tyb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tyd
_c1tyc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	xorq %rdx,%rdx
	divq 24(%rbx)
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tyd:
	movq $16,904(%r13)
_c1tya:
	jmp *-16(%r13)
	.size sat_s1sjL_entry, .-sat_s1sjL_entry


==================== Asm code ====================
2018-03-16 15:56:16.634427643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sjL_info:
	.quad	sat_s1sjL_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:56:16.635219485 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralWord_$cdivMod_entry
.type GHC.Real.$fIntegralWord_$cdivMod_entry, @object
GHC.Real.$fIntegralWord_$cdivMod_entry:
_c1tye:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tyf
_c1tyg:
	leaq block_c1txC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1txC
_c1txD:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tyf:
	leaq GHC.Real.$fIntegralWord_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralWord_$cdivMod_entry, .-GHC.Real.$fIntegralWord_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:16.635892132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_$cdivMod_info
.type GHC.Real.$fIntegralWord_$cdivMod_info, @object
GHC.Real.$fIntegralWord_$cdivMod_info:
	.quad	GHC.Real.$fIntegralWord_$cdivMod_entry
	.quad	0
	.quad	140741783322638
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.63662197 UTC

.section .text
.align 8
_c1txC:
_c1txC:
	leaq block_c1txH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1txH
_c1txI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1txC, .-_c1txC


==================== Asm code ====================
2018-03-16 15:56:16.637224742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1txC_info:
	.quad	_c1txC
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.638128187 UTC

.section .text
.align 8
_c1txH:
_c1txH:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1tyk
_c1tyj:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1tyn
_c1tyo:
	addq $-88,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tyn:
	leaq sat_s1sjN_info(%rip),%rbx
	movq %rbx,-80(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	leaq sat_s1sjL_info(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tyk:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1txH, .-_c1txH


==================== Asm code ====================
2018-03-16 15:56:16.638970337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1txH_info:
	.quad	_c1txH
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.642256424 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioZeroDenominatorError_closure
.type GHC.Real.ratioZeroDenominatorError_closure, @object
GHC.Real.ratioZeroDenominatorError_closure:
	.quad	GHC.Real.ratioZeroDenominatorError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.643114621 UTC

.section .text
.align 8
.globl GHC.Real.ratioZeroDenominatorError_entry
.type GHC.Real.ratioZeroDenominatorError_entry, @object
GHC.Real.ratioZeroDenominatorError_entry:
_c1tz6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tz7
_c1tz8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1tz5
_c1tz4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Exception.ratioZeroDenomException_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_raise#@gotpcrel(%rip)
_c1tz7:
	jmp *-16(%r13)
_c1tz5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.ratioZeroDenominatorError_entry, .-GHC.Real.ratioZeroDenominatorError_entry


==================== Asm code ====================
2018-03-16 15:56:16.643836736 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.ratioZeroDenominatorError_info
.type GHC.Real.ratioZeroDenominatorError_info, @object
GHC.Real.ratioZeroDenominatorError_info:
	.quad	GHC.Real.ratioZeroDenominatorError_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+288


==================== Asm code ====================
2018-03-16 15:56:16.648857433 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$crecip_closure
.type GHC.Real.$fFractionalRatio_$s$crecip_closure, @object
GHC.Real.$fFractionalRatio_$s$crecip_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.649951451 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$crecip_entry
.type GHC.Real.$fFractionalRatio_$s$crecip_entry, @object
GHC.Real.$fFractionalRatio_$s$crecip_entry:
_c1tzo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tzp
_c1tzq:
	leaq block_c1tzl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tzl
_c1tzm:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tzp:
	leaq GHC.Real.$fFractionalRatio_$s$crecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$crecip_entry, .-GHC.Real.$fFractionalRatio_$s$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:16.650600697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$crecip_info
.type GHC.Real.$fFractionalRatio_$s$crecip_info, @object
GHC.Real.$fFractionalRatio_$s$crecip_info:
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_entry
	.quad	0
	.quad	108086395351859214
	.quad	4294967301
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.65135937 UTC

.section .text
.align 8
_c1tzl:
_c1tzl:
	leaq block_c1tzt_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1tzl, .-_c1tzl


==================== Asm code ====================
2018-03-16 15:56:16.651995054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tzl_info:
	.quad	_c1tzl
	.quad	0
	.quad	36028801313931294
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.652700043 UTC

.section .text
.align 8
_c1tzt:
_c1tzt:
	cmpq $1,%rbx
	je _c1tA5
_c1tzB:
	leaq block_c1tzy_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c1tA5:
	leaq GHC.Real.ratioZeroDenominatorError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tzt, .-_c1tzt


==================== Asm code ====================
2018-03-16 15:56:16.653447115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tzt_info:
	.quad	_c1tzt
	.quad	2
	.quad	36028801313931294
	.quad	S1sVz_srt+112


==================== Asm code ====================
2018-03-16 15:56:16.654285774 UTC

.section .text
.align 8
_c1tzy:
_c1tzy:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c1tzX
_c1tzH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tzK
_c1tzJ:
	leaq GHC.Real.:%_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tzX:
	leaq block_c1tzN_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
_c1tzK:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1tzy, .-_c1tzy


==================== Asm code ====================
2018-03-16 15:56:16.654988129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tzy_info:
	.quad	_c1tzy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.655643315 UTC

.section .text
.align 8
_c1tzN:
_c1tzN:
	leaq block_c1tzR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c1tzN, .-_c1tzN


==================== Asm code ====================
2018-03-16 15:56:16.656231291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tzN_info:
	.quad	_c1tzN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.656958524 UTC

.section .text
.align 8
_c1tzR:
_c1tzR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tA1
_c1tA0:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tA1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tzR, .-_c1tzR


==================== Asm code ====================
2018-03-16 15:56:16.657664844 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tzR_info:
	.quad	_c1tzR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.660331404 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.overflowError_closure
.type GHC.Real.overflowError_closure, @object
GHC.Real.overflowError_closure:
	.quad	GHC.Real.overflowError_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.661184816 UTC

.section .text
.align 8
.globl GHC.Real.overflowError_entry
.type GHC.Real.overflowError_entry, @object
GHC.Real.overflowError_entry:
_c1tAK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tAL
_c1tAM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1tAJ
_c1tAI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Exception.overflowException_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_raise#@gotpcrel(%rip)
_c1tAL:
	jmp *-16(%r13)
_c1tAJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.overflowError_entry, .-GHC.Real.overflowError_entry


==================== Asm code ====================
2018-03-16 15:56:16.662140855 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.overflowError_info
.type GHC.Real.overflowError_info, @object
GHC.Real.overflowError_info:
	.quad	GHC.Real.overflowError_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+312


==================== Asm code ====================
2018-03-16 15:56:16.663861385 UTC

.section .data
.align 8
.align 1
lvl_r1j38_closure:
	.quad	(,)_con_info
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.$fIntegralInt1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.672808397 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdivMod_closure
.type GHC.Real.$fIntegralInt_$cdivMod_closure, @object
GHC.Real.$fIntegralInt_$cdivMod_closure:
	.quad	GHC.Real.$fIntegralInt_$cdivMod_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.673753612 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cdivMod_entry
.type GHC.Real.$fIntegralInt_$cdivMod_entry, @object
GHC.Real.$fIntegralInt_$cdivMod_entry:
_c1tB3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tB7
_c1tB8:
	leaq block_c1tB0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tB0
_c1tB1:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tB7:
	leaq GHC.Real.$fIntegralInt_$cdivMod_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cdivMod_entry, .-GHC.Real.$fIntegralInt_$cdivMod_entry


==================== Asm code ====================
2018-03-16 15:56:16.674423274 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdivMod_info
.type GHC.Real.$fIntegralInt_$cdivMod_info, @object
GHC.Real.$fIntegralInt_$cdivMod_info:
	.quad	GHC.Real.$fIntegralInt_$cdivMod_entry
	.quad	0
	.quad	13510803177078798
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.675121842 UTC

.section .text
.align 8
_c1tB0:
_c1tB0:
	leaq block_c1tB6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tB6
_c1tBa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tB0, .-_c1tB0


==================== Asm code ====================
2018-03-16 15:56:16.675747907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tB0_info:
	.quad	_c1tB0
	.quad	1
	.quad	9007203549708318
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.677618293 UTC

.section .text
.align 8
_c1tB6:
_c1tB6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1tBg
_c1tBf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1tDt
_c1tDr:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1tDq
_c1tDp:
	testq %rax,%rax
	jle _c1tD6
_c1tDn:
	movq $-1,%rbx
	decq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1tDt:
	testq %rbx,%rbx
	jne _c1tCV
_c1tDs:
	addq $-56,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tDq:
	addq $-56,%r12
	leaq lvl_r1j38_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tD6:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tCV:
	testq %rax,%rax
	jle _c1tBW
_c1tCT:
	testq %rbx,%rbx
	jge _c1tCB
_c1tCS:
	decq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tCB:
	testq %rax,%rax
	jge _c1tC8
_c1tCz:
	testq %rbx,%rbx
	jle _c1tCh
_c1tCy:
	incq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tCh:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tC8:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tBW:
	testq %rax,%rax
	jge _c1tBt
_c1tBU:
	testq %rbx,%rbx
	jle _c1tBC
_c1tBT:
	incq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tBC:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tBt:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tBg:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tB6, .-_c1tB6


==================== Asm code ====================
2018-03-16 15:56:16.679457845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tB6_info:
	.quad	_c1tB6
	.quad	65
	.quad	9007203549708318
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.684232275 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquotRem_closure
.type GHC.Real.$fIntegralInt_$cquotRem_closure, @object
GHC.Real.$fIntegralInt_$cquotRem_closure:
	.quad	GHC.Real.$fIntegralInt_$cquotRem_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.685008903 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cquotRem_entry
.type GHC.Real.$fIntegralInt_$cquotRem_entry, @object
GHC.Real.$fIntegralInt_$cquotRem_entry:
_c1tF1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tF5
_c1tF6:
	leaq block_c1tEY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tEY
_c1tEZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tF5:
	leaq GHC.Real.$fIntegralInt_$cquotRem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cquotRem_entry, .-GHC.Real.$fIntegralInt_$cquotRem_entry


==================== Asm code ====================
2018-03-16 15:56:16.685803488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquotRem_info
.type GHC.Real.$fIntegralInt_$cquotRem_info, @object
GHC.Real.$fIntegralInt_$cquotRem_info:
	.quad	GHC.Real.$fIntegralInt_$cquotRem_entry
	.quad	0
	.quad	27021602059190286
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.68650391 UTC

.section .text
.align 8
_c1tEY:
_c1tEY:
	leaq block_c1tF4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tF4
_c1tF8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tEY, .-_c1tEY


==================== Asm code ====================
2018-03-16 15:56:16.687116375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tEY_info:
	.quad	_c1tEY
	.quad	1
	.quad	9007203549708318
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.688089526 UTC

.section .text
.align 8
_c1tF4:
_c1tF4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1tFe
_c1tFd:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1tFx
_c1tFv:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1tFu
_c1tFt:
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1tFx:
	testq %rbx,%rbx
	jne _c1tFl
_c1tFw:
	addq $-56,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tFu:
	addq $-56,%r12
	leaq lvl_r1j38_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tFl:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tFe:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tF4, .-_c1tF4


==================== Asm code ====================
2018-03-16 15:56:16.689026268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tF4_info:
	.quad	_c1tF4
	.quad	65
	.quad	9007203549708318
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.691941266 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cdiv_closure
.type GHC.Real.$w$cdiv_closure, @object
GHC.Real.$w$cdiv_closure:
	.quad	GHC.Real.$w$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.692728078 UTC

.section .text
.align 8
.globl GHC.Real.$w$cdiv_entry
.type GHC.Real.$w$cdiv_entry, @object
GHC.Real.$w$cdiv_entry:
_c1tGd:
	cmpq $-1,%rsi
	je _c1tGb
_u1tGm:
	testq %rsi,%rsi
	je _c1tGc
_c1tGa:
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c1tGl:
	leaq GHC.Real.overflowError_closure(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tGb:
	movq $-9223372036854775808,%rax
	cmpq %rax,%r14
	je _c1tGl
_c1tGk:
	movq $-1,%rsi
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
_c1tGc:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Real.$w$cdiv_entry, .-GHC.Real.$w$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:16.693766938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cdiv_info
.type GHC.Real.$w$cdiv_info, @object
GHC.Real.$w$cdiv_info:
	.quad	GHC.Real.$w$cdiv_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934604
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.697660143 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdiv_closure
.type GHC.Real.$fIntegralInt_$cdiv_closure, @object
GHC.Real.$fIntegralInt_$cdiv_closure:
	.quad	GHC.Real.$fIntegralInt_$cdiv_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.698508595 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cdiv_entry
.type GHC.Real.$fIntegralInt_$cdiv_entry, @object
GHC.Real.$fIntegralInt_$cdiv_entry:
_c1tGz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tGM
_c1tGN:
	leaq block_c1tGw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tGw
_c1tGx:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tGM:
	leaq GHC.Real.$fIntegralInt_$cdiv_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cdiv_entry, .-GHC.Real.$fIntegralInt_$cdiv_entry


==================== Asm code ====================
2018-03-16 15:56:16.699191535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cdiv_info
.type GHC.Real.$fIntegralInt_$cdiv_info, @object
GHC.Real.$fIntegralInt_$cdiv_info:
	.quad	GHC.Real.$fIntegralInt_$cdiv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+352


==================== Asm code ====================
2018-03-16 15:56:16.699909293 UTC

.section .text
.align 8
_c1tGw:
_c1tGw:
	leaq block_c1tGC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tGC
_c1tGD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tGw, .-_c1tGw


==================== Asm code ====================
2018-03-16 15:56:16.700514722 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tGw_info:
	.quad	_c1tGw
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+360


==================== Asm code ====================
2018-03-16 15:56:16.701179434 UTC

.section .text
.align 8
_c1tGC:
_c1tGC:
	movq 8(%rbp),%rax
	leaq block_c1tGH_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$cdiv_entry
	.size _c1tGC, .-_c1tGC


==================== Asm code ====================
2018-03-16 15:56:16.701839323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tGC_info:
	.quad	_c1tGC
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+360


==================== Asm code ====================
2018-03-16 15:56:16.702579669 UTC

.section .text
.align 8
_c1tGH:
_c1tGH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tGS
_c1tGR:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tGS:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1tGH, .-_c1tGH


==================== Asm code ====================
2018-03-16 15:56:16.703247952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tGH_info:
	.quad	_c1tGH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.708209679 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquot_closure
.type GHC.Real.$fIntegralInt_$cquot_closure, @object
GHC.Real.$fIntegralInt_$cquot_closure:
	.quad	GHC.Real.$fIntegralInt_$cquot_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.709019546 UTC

.section .text
.align 8
.globl GHC.Real.$fIntegralInt_$cquot_entry
.type GHC.Real.$fIntegralInt_$cquot_entry, @object
GHC.Real.$fIntegralInt_$cquot_entry:
_c1tHn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tHr
_c1tHs:
	leaq block_c1tHk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tHk
_c1tHl:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tHr:
	leaq GHC.Real.$fIntegralInt_$cquot_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fIntegralInt_$cquot_entry, .-GHC.Real.$fIntegralInt_$cquot_entry


==================== Asm code ====================
2018-03-16 15:56:16.709728601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_$cquot_info
.type GHC.Real.$fIntegralInt_$cquot_info, @object
GHC.Real.$fIntegralInt_$cquot_info:
	.quad	GHC.Real.$fIntegralInt_$cquot_entry
	.quad	0
	.quad	324259177465643022
	.quad	8589934607
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.71044402 UTC

.section .text
.align 8
_c1tHk:
_c1tHk:
	leaq block_c1tHq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tHq
_c1tHu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tHk, .-_c1tHk


==================== Asm code ====================
2018-03-16 15:56:16.711051135 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tHk_info:
	.quad	_c1tHk
	.quad	1
	.quad	36028801313931294
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.711999589 UTC

.section .text
.align 8
_c1tHq:
_c1tHq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tHA
_c1tHz:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1tHV
_c1tHT:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rax
	je _c1tHS
_c1tHR:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq $-1,%rbx
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1tHV:
	testq %rbx,%rbx
	jne _c1tHI
_c1tHU:
	addq $-16,%r12
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tHS:
	addq $-16,%r12
	leaq GHC.Real.overflowError_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tHI:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	cqto
	idivq %rbx
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tHA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tHq, .-_c1tHq


==================== Asm code ====================
2018-03-16 15:56:16.712830176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tHq_info:
	.quad	_c1tHq
	.quad	65
	.quad	36028801313931294
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.714833708 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralInt_closure
.type GHC.Real.$fIntegralInt_closure, @object
GHC.Real.$fIntegralInt_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealInt_closure+1
	.quad	GHC.Enum.$fEnumInt_closure
	.quad	GHC.Real.$fIntegralInt_$cquot_closure+2
	.quad	GHC.Real.$fIntegralInt_$crem_closure+2
	.quad	GHC.Real.$fIntegralInt_$cdiv_closure+2
	.quad	GHC.Real.$fIntegralInt_$cmod_closure+2
	.quad	GHC.Real.$fIntegralInt_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralInt_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralInt_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.716557487 UTC

.section .data
.align 8
.align 1
lvl1_r1j39_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:56:16.721422667 UTC

.section .data
.align 8
.align 1
lvl2_r1j3a_closure:
	.quad	lvl2_r1j3a_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.722354149 UTC

.section .text
.align 8
lvl2_r1j3a_entry:
_c1tII:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tIJ
_c1tIK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1tIH
_c1tIG:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	xorl %esi,%esi
	leaq lvl1_r1j39_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Real.$wgcd'_entry
_c1tIJ:
	jmp *-16(%r13)
_c1tIH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r1j3a_entry, .-lvl2_r1j3a_entry


==================== Asm code ====================
2018-03-16 15:56:16.723059599 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r1j3a_info:
	.quad	lvl2_r1j3a_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+376


==================== Asm code ====================
2018-03-16 15:56:16.723656393 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wgcd'_closure
.type GHC.Real.$wgcd'_closure, @object
GHC.Real.$wgcd'_closure:
	.quad	GHC.Real.$wgcd'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.724420407 UTC

.section .text
.align 8
.globl GHC.Real.$wgcd'_entry
.type GHC.Real.$wgcd'_entry, @object
GHC.Real.$wgcd'_entry:
_c1tIP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tIQ
_u1tIW:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1tIp
_c1tIQ:
	leaq GHC.Real.$wgcd'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$wgcd'_entry, .-GHC.Real.$wgcd'_entry


==================== Asm code ====================
2018-03-16 15:56:16.725077033 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wgcd'_info
.type GHC.Real.$wgcd'_info, @object
GHC.Real.$wgcd'_info:
	.quad	GHC.Real.$wgcd'_entry
	.quad	0
	.quad	12884901902
	.quad	8589934606
	.quad	S1sVz_srt+376


==================== Asm code ====================
2018-03-16 15:56:16.725992237 UTC

.section .text
.align 8
_c1tIp:
_c1tIp:
	movq 8(%rbp),%rax
	cmpq $-1,%rax
	jne _u1tIV
_c1tIN:
	leaq lvl2_r1j3a_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u1tIV:
	movq (%rbp),%rbx
	testq %rax,%rax
	jne _c1tIM
_c1tIO:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1tIM:
	leaq block_c1tIu_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1tIu
_c1tIv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tIp, .-_c1tIp


==================== Asm code ====================
2018-03-16 15:56:16.726889781 UTC

.section .text
.align 8
_c1tIu:
_c1tIu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1tIU
_c1tIT:
	movq 8(%rbp),%rax
	movq %rax,%rcx
	movq 7(%rbx),%rax
	cqto
	idivq %rcx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	jmp _c1tIp
_c1tIU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tIu, .-_c1tIu


==================== Asm code ====================
2018-03-16 15:56:16.727571601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tIu_info:
	.quad	_c1tIu
	.quad	65
	.quad	4294967326
	.quad	S1sVz_srt+384


==================== Asm code ====================
2018-03-16 15:56:16.7313782 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_gcd'_closure
.type GHC.Real.$fEnumRatio_gcd'_closure, @object
GHC.Real.$fEnumRatio_gcd'_closure:
	.quad	GHC.Real.$fEnumRatio_gcd'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.732114692 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_gcd'_entry
.type GHC.Real.$fEnumRatio_gcd'_entry, @object
GHC.Real.$fEnumRatio_gcd'_entry:
_c1tJz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tJA
_u1tJN:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1tJr
_c1tJA:
	leaq GHC.Real.$fEnumRatio_gcd'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_gcd'_entry, .-GHC.Real.$fEnumRatio_gcd'_entry


==================== Asm code ====================
2018-03-16 15:56:16.732786691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_gcd'_info
.type GHC.Real.$fEnumRatio_gcd'_info, @object
GHC.Real.$fEnumRatio_gcd'_info:
	.quad	GHC.Real.$fEnumRatio_gcd'_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+392


==================== Asm code ====================
2018-03-16 15:56:16.733579516 UTC

.section .text
.align 8
_c1tJr:
_c1tJr:
	leaq block_c1tJu_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1tJr, .-_c1tJr


==================== Asm code ====================
2018-03-16 15:56:16.734390246 UTC

.section .text
.align 8
_c1tJu:
_c1tJu:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c1tJy
_c1tJx:
	leaq block_c1tJE_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.remInteger_entry@gotpcrel(%rip)
_c1tJy:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tJu, .-_c1tJu


==================== Asm code ====================
2018-03-16 15:56:16.735062112 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tJu_info:
	.quad	_c1tJu
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.736160675 UTC

.section .text
.align 8
_c1tJE:
_c1tJE:
	movq 8(%rbp),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	jmp _c1tJr
	.size _c1tJE, .-_c1tJE


==================== Asm code ====================
2018-03-16 15:56:16.736778198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tJE_info:
	.quad	_c1tJE
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.745692738 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.gcd_closure
.type GHC.Real.gcd_closure, @object
GHC.Real.gcd_closure:
	.quad	GHC.Real.gcd_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.74654759 UTC

.section .text
.align 8
lvl8_s1sm9_entry:
_c1tKL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tKM
_c1tKN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tKJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1tKM:
	jmp *-16(%r13)
	.size lvl8_s1sm9_entry, .-lvl8_s1sm9_entry


==================== Asm code ====================
2018-03-16 15:56:16.747178546 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_s1sm9_info:
	.quad	lvl8_s1sm9_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.747813419 UTC

.section .text
.align 8
_c1tKJ:
_c1tKJ:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1tKJ, .-_c1tKJ


==================== Asm code ====================
2018-03-16 15:56:16.748420729 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tKJ_info:
	.quad	_c1tKJ
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.749156271 UTC

.section .text
.align 8
$dNum_s1smd_entry:
_c1tKT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tKU
_c1tKV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1tKU:
	jmp *-16(%r13)
	.size $dNum_s1smd_entry, .-$dNum_s1smd_entry


==================== Asm code ====================
2018-03-16 15:56:16.749871868 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1smd_info:
	.quad	$dNum_s1smd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:16.750581861 UTC

.section .text
.align 8
sat_s1smk_entry:
_c1tKY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tKZ
_c1tL0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
_c1tKZ:
	jmp *-16(%r13)
	.size sat_s1smk_entry, .-sat_s1smk_entry


==================== Asm code ====================
2018-03-16 15:56:16.751201089 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1smk_info:
	.quad	sat_s1smk_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.751913213 UTC

.section .text
.align 8
sat_s1smj_entry:
_c1tL3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tL4
_c1tL5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
_c1tL4:
	jmp *-16(%r13)
	.size sat_s1smj_entry, .-sat_s1smj_entry


==================== Asm code ====================
2018-03-16 15:56:16.752605069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1smj_info:
	.quad	sat_s1smj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:16.753832068 UTC

.section .text
.align 8
sat_s1smi_entry:
_c1tL9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tLa
_c1tLb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.rem_entry
_c1tLa:
	jmp *-16(%r13)
	.size sat_s1smi_entry, .-sat_s1smi_entry


==================== Asm code ====================
2018-03-16 15:56:16.754493762 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1smi_info:
	.quad	sat_s1smi_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:16.75526569 UTC

.section .text
.align 8
.globl GHC.Real.gcd_entry
.type GHC.Real.gcd_entry, @object
GHC.Real.gcd_entry:
_c1tLc:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tLd
_c1tLe:
	leaq block_c1tKd_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1tLd:
	leaq GHC.Real.gcd_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.gcd_entry, .-GHC.Real.gcd_entry


==================== Asm code ====================
2018-03-16 15:56:16.755939054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.gcd_info
.type GHC.Real.gcd_info, @object
GHC.Real.gcd_info:
	.quad	GHC.Real.gcd_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.756700832 UTC

.section .text
.align 8
_c1tKd:
_c1tKd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tLh
_c1tLg:
	leaq lvl8_s1sm9_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1tKj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1tLh:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tKd, .-_c1tKd


==================== Asm code ====================
2018-03-16 15:56:16.757403862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tKd_info:
	.quad	_c1tKd
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+400


==================== Asm code ====================
2018-03-16 15:56:16.758054307 UTC

.section .text
.align 8
_c1tKj:
_c1tKj:
	leaq block_c1tKn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1tKj, .-_c1tKj


==================== Asm code ====================
2018-03-16 15:56:16.758641212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tKj_info:
	.quad	_c1tKj
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.759425776 UTC

.section .text
.align 8
_c1tKn:
_c1tKn:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1tLl
_c1tLk:
	leaq $dNum_s1smd_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s1smk_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq sat_s1smj_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%rax
	movq %rax,8(%rbp)
	leaq -24(%r12),%rax
	movq %rax,32(%rbp)
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _c1tKA
_c1tLl:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tKn, .-_c1tKn


==================== Asm code ====================
2018-03-16 15:56:16.760141146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tKn_info:
	.quad	_c1tKn
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.760813236 UTC

.section .text
.align 8
_c1tKA:
_c1tKA:
	leaq block_c1tKC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq (%rbp),%rax
	movq %rax,-24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1tKA, .-_c1tKA


==================== Asm code ====================
2018-03-16 15:56:16.761791857 UTC

.section .text
.align 8
_c1tKC:
_c1tKC:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1tLo
_c1tLv:
	movq %rax,%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1tLr:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1tLo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1tLr
_c1tLq:
	leaq sat_s1smi_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1tKA
	.size _c1tKC, .-_c1tKC


==================== Asm code ====================
2018-03-16 15:56:16.762526545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tKC_info:
	.quad	_c1tKC
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.769443531 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$sreduce_closure
.type GHC.Real.$w$sreduce_closure, @object
GHC.Real.$w$sreduce_closure:
	.quad	GHC.Real.$w$sreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.770075627 UTC

.section .data.rel.ro
.align 8
.align 1
u1tNK_srtd:
	.quad	S1sVz_srt+160
	.quad	33
	.quad	5905711105


==================== Asm code ====================
2018-03-16 15:56:16.770959373 UTC

.section .text
.align 8
.globl GHC.Real.$w$sreduce_entry
.type GHC.Real.$w$sreduce_entry, @object
GHC.Real.$w$sreduce_entry:
_c1tN1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tN2
_c1tN3:
	leaq block_c1tMW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1tN2:
	leaq GHC.Real.$w$sreduce_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$sreduce_entry, .-GHC.Real.$w$sreduce_entry


==================== Asm code ====================
2018-03-16 15:56:16.771659111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$sreduce_info
.type GHC.Real.$w$sreduce_info, @object
GHC.Real.$w$sreduce_info:
	.quad	GHC.Real.$w$sreduce_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1tNK_srtd


==================== Asm code ====================
2018-03-16 15:56:16.772359138 UTC

.section .text
.align 8
_c1tMW:
_c1tMW:
	cmpq $1,%rbx
	je _c1tN0
_c1tMZ:
	leaq block_c1tN6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
_c1tN0:
	leaq GHC.Real.ratioZeroDenominatorError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tMW, .-_c1tMW


==================== Asm code ====================
2018-03-16 15:56:16.772990426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tMW_info:
	.quad	_c1tMW
	.quad	2
	.quad	6918091981889470494
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.773722907 UTC

.section .text
.align 8
_c1tN6:
_c1tN6:
	leaq block_c1tNa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
	.size _c1tN6, .-_c1tN6


==================== Asm code ====================
2018-03-16 15:56:16.774305363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tN6_info:
	.quad	_c1tN6
	.quad	2
	.quad	6917529031936049182
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.77496274 UTC

.section .text
.align 8
_c1tNa:
_c1tNa:
	movq 8(%rbp),%rax
	leaq block_c1tNe_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Real.$fEnumRatio_gcd'_entry
	.size _c1tNa, .-_c1tNa


==================== Asm code ====================
2018-03-16 15:56:16.775534262 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tNa_info:
	.quad	_c1tNa
	.quad	3
	.quad	6917529031936049182
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.776207113 UTC

.section .text
.align 8
_c1tNe:
_c1tNe:
	leaq block_c1tNl_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1tNe, .-_c1tNe


==================== Asm code ====================
2018-03-16 15:56:16.776829854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tNe_info:
	.quad	_c1tNe
	.quad	2
	.quad	4611686022722355230
	.quad	S1sVz_srt+160


==================== Asm code ====================
2018-03-16 15:56:16.777653048 UTC

.section .text
.align 8
_c1tNl:
_c1tNl:
	cmpq $1,%rbx
	je _c1tNG
_c1tNx:
	leaq block_c1tNq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c1tNG:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tNl, .-_c1tNl


==================== Asm code ====================
2018-03-16 15:56:16.778294325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tNl_info:
	.quad	_c1tNl
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+424


==================== Asm code ====================
2018-03-16 15:56:16.778931091 UTC

.section .text
.align 8
_c1tNq:
_c1tNq:
	leaq block_c1tNu_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
	.size _c1tNq, .-_c1tNq


==================== Asm code ====================
2018-03-16 15:56:16.779544428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tNq_info:
	.quad	_c1tNq
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.780162615 UTC

.section .text
.align 8
_c1tNu:
_c1tNu:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1tNu, .-_c1tNu


==================== Asm code ====================
2018-03-16 15:56:16.780757444 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tNu_info:
	.quad	_c1tNu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.78429204 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.reduce_$sreduce_closure
.type GHC.Real.reduce_$sreduce_closure, @object
GHC.Real.reduce_$sreduce_closure:
	.quad	GHC.Real.reduce_$sreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.785025002 UTC

.section .text
.align 8
.globl GHC.Real.reduce_$sreduce_entry
.type GHC.Real.reduce_$sreduce_entry, @object
GHC.Real.reduce_$sreduce_entry:
_c1tOr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tOs
_c1tOt:
	leaq block_c1tOo_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$sreduce_entry
_c1tOs:
	leaq GHC.Real.reduce_$sreduce_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.reduce_$sreduce_entry, .-GHC.Real.reduce_$sreduce_entry


==================== Asm code ====================
2018-03-16 15:56:16.785764716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.reduce_$sreduce_info
.type GHC.Real.reduce_$sreduce_info, @object
GHC.Real.reduce_$sreduce_info:
	.quad	GHC.Real.reduce_$sreduce_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.786463419 UTC

.section .text
.align 8
_c1tOo:
_c1tOo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tOw
_c1tOv:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tOw:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tOo, .-_c1tOo


==================== Asm code ====================
2018-03-16 15:56:16.787164688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tOo_info:
	.quad	_c1tOo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.791402301 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealWord_$ctoRational_closure
.type GHC.Real.$fRealWord_$ctoRational_closure, @object
GHC.Real.$fRealWord_$ctoRational_closure:
	.quad	GHC.Real.$fRealWord_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.791996997 UTC

.section .data.rel.ro
.align 8
.align 1
u1tPc_srtd:
	.quad	S1sVz_srt
	.quad	56
	.quad	40532396646335489


==================== Asm code ====================
2018-03-16 15:56:16.792800578 UTC

.section .text
.align 8
.globl GHC.Real.$fRealWord_$ctoRational_entry
.type GHC.Real.$fRealWord_$ctoRational_entry, @object
GHC.Real.$fRealWord_$ctoRational_entry:
_c1tOP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tP3
_c1tP4:
	leaq block_c1tOM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tOM
_c1tON:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tP3:
	leaq GHC.Real.$fRealWord_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealWord_$ctoRational_entry, .-GHC.Real.$fRealWord_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.793567431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealWord_$ctoRational_info
.type GHC.Real.$fRealWord_$ctoRational_info, @object
GHC.Real.$fRealWord_$ctoRational_info:
	.quad	GHC.Real.$fRealWord_$ctoRational_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1tPc_srtd


==================== Asm code ====================
2018-03-16 15:56:16.794170725 UTC

.section .data.rel.ro
.align 8
.align 1
u1tPd_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627371521


==================== Asm code ====================
2018-03-16 15:56:16.794784761 UTC

.section .text
.align 8
_c1tOM:
_c1tOM:
	leaq block_c1tOS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _c1tOM, .-_c1tOM


==================== Asm code ====================
2018-03-16 15:56:16.795391907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tOM_info:
	.quad	_c1tOM
	.quad	0
	.quad	-4294967266
	.quad	u1tPd_srtd


==================== Asm code ====================
2018-03-16 15:56:16.795934247 UTC

.section .data.rel.ro
.align 8
.align 1
u1tPe_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627371521


==================== Asm code ====================
2018-03-16 15:56:16.796573506 UTC

.section .text
.align 8
_c1tOS:
_c1tOS:
	leaq block_c1tOW_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tOS, .-_c1tOS


==================== Asm code ====================
2018-03-16 15:56:16.797208194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tOS_info:
	.quad	_c1tOS
	.quad	0
	.quad	-4294967266
	.quad	u1tPe_srtd


==================== Asm code ====================
2018-03-16 15:56:16.798004141 UTC

.section .data.rel.ro
.align 8
.align 1
u1tPf_srtd:
	.quad	S1sVz_srt+80
	.quad	43
	.quad	4398046511105


==================== Asm code ====================
2018-03-16 15:56:16.798641446 UTC

.section .text
.align 8
_c1tOW:
_c1tOW:
	leaq block_c1tP0_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tOW, .-_c1tOW


==================== Asm code ====================
2018-03-16 15:56:16.79927083 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tOW_info:
	.quad	_c1tOW
	.quad	0
	.quad	-4294967266
	.quad	u1tPf_srtd


==================== Asm code ====================
2018-03-16 15:56:16.800545014 UTC

.section .text
.align 8
_c1tP0:
_c1tP0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tPa
_c1tP9:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tPa:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tP0, .-_c1tP0


==================== Asm code ====================
2018-03-16 15:56:16.801178421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tP0_info:
	.quad	_c1tP0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.80291743 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealWord_closure
.type GHC.Real.$fRealWord_closure, @object
GHC.Real.$fRealWord_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Num.$fNumWord_closure
	.quad	GHC.Classes.$fOrdWord_closure
	.quad	GHC.Real.$fRealWord_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.804745762 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fIntegralWord_closure
.type GHC.Real.$fIntegralWord_closure, @object
GHC.Real.$fIntegralWord_closure:
	.quad	GHC.Real.C:Integral_con_info
	.quad	GHC.Real.$fRealWord_closure+1
	.quad	GHC.Enum.$fEnumWord_closure
	.quad	GHC.Real.$fIntegralWord_$cquot_closure+2
	.quad	GHC.Real.$fIntegralWord_$crem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cquot_closure+2
	.quad	GHC.Real.$fIntegralWord_$crem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cquotRem_closure+2
	.quad	GHC.Real.$fIntegralWord_$cdivMod_closure+2
	.quad	GHC.Real.$fIntegralWord_$ctoInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.810359719 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c*_closure
.type GHC.Real.$fFractionalRatio_$s$c*_closure, @object
GHC.Real.$fFractionalRatio_$s$c*_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.81090421 UTC

.section .data.rel.ro
.align 8
.align 1
u1tQl_srtd:
	.quad	S1sVz_srt
	.quad	57
	.quad	76561193665298433


==================== Asm code ====================
2018-03-16 15:56:16.811784167 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$c*_entry
.type GHC.Real.$fFractionalRatio_$s$c*_entry, @object
GHC.Real.$fFractionalRatio_$s$c*_entry:
_c1tPR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tQa
_c1tQb:
	leaq block_c1tPO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tPO
_c1tPP:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tQa:
	leaq GHC.Real.$fFractionalRatio_$s$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$c*_entry, .-GHC.Real.$fFractionalRatio_$s$c*_entry


==================== Asm code ====================
2018-03-16 15:56:16.812444054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c*_info
.type GHC.Real.$fFractionalRatio_$s$c*_info, @object
GHC.Real.$fFractionalRatio_$s$c*_info:
	.quad	GHC.Real.$fFractionalRatio_$s$c*_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1tQl_srtd


==================== Asm code ====================
2018-03-16 15:56:16.813000187 UTC

.section .data.rel.ro
.align 8
.align 1
u1tQm_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.813763267 UTC

.section .text
.align 8
_c1tPO:
_c1tPO:
	leaq block_c1tPU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tPU
_c1tPV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tPO, .-_c1tPO


==================== Asm code ====================
2018-03-16 15:56:16.814422185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tPO_info:
	.quad	_c1tPO
	.quad	1
	.quad	-4294967266
	.quad	u1tQm_srtd


==================== Asm code ====================
2018-03-16 15:56:16.814993121 UTC

.section .data.rel.ro
.align 8
.align 1
u1tQn_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.815607148 UTC

.section .text
.align 8
_c1tPU:
_c1tPU:
	leaq block_c1tPZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tPU, .-_c1tPU


==================== Asm code ====================
2018-03-16 15:56:16.816196768 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tPU_info:
	.quad	_c1tPU
	.quad	2
	.quad	-4294967266
	.quad	u1tQn_srtd


==================== Asm code ====================
2018-03-16 15:56:16.816743454 UTC

.section .data.rel.ro
.align 8
.align 1
u1tQo_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.817778932 UTC

.section .text
.align 8
_c1tPZ:
_c1tPZ:
	movq 8(%rbp),%rax
	leaq block_c1tQ3_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tPZ, .-_c1tPZ


==================== Asm code ====================
2018-03-16 15:56:16.818379113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tPZ_info:
	.quad	_c1tPZ
	.quad	2
	.quad	-4294967266
	.quad	u1tQo_srtd


==================== Asm code ====================
2018-03-16 15:56:16.819060096 UTC

.section .text
.align 8
_c1tQ3:
_c1tQ3:
	movq 8(%rbp),%rax
	leaq block_c1tQ7_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tQ3, .-_c1tQ3


==================== Asm code ====================
2018-03-16 15:56:16.819631466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tQ3_info:
	.quad	_c1tQ3
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.82037318 UTC

.section .text
.align 8
_c1tQ7:
_c1tQ7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tQi
_c1tQh:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tQi:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tQ7, .-_c1tQ7


==================== Asm code ====================
2018-03-16 15:56:16.821030562 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tQ7_info:
	.quad	_c1tQ7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.825473393 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c-_closure
.type GHC.Real.$w$s$c-_closure, @object
GHC.Real.$w$s$c-_closure:
	.quad	GHC.Real.$w$s$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.826032893 UTC

.section .data.rel.ro
.align 8
.align 1
u1tRo_srtd:
	.quad	S1sVz_srt
	.quad	59
	.quad	436849163854938113


==================== Asm code ====================
2018-03-16 15:56:16.826861111 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c-_entry
.type GHC.Real.$w$s$c-_entry, @object
GHC.Real.$w$s$c-_entry:
_c1tR3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tRf
_c1tRg:
	leaq block_c1tR1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1tRf:
	leaq GHC.Real.$w$s$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c-_entry, .-GHC.Real.$w$s$c-_entry


==================== Asm code ====================
2018-03-16 15:56:16.827561244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c-_info
.type GHC.Real.$w$s$c-_info, @object
GHC.Real.$w$s$c-_info:
	.quad	GHC.Real.$w$s$c-_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1tRo_srtd


==================== Asm code ====================
2018-03-16 15:56:16.828117332 UTC

.section .data.rel.ro
.align 8
.align 1
u1tRp_srtd:
	.quad	S1sVz_srt
	.quad	58
	.quad	148618787703226369


==================== Asm code ====================
2018-03-16 15:56:16.828755804 UTC

.section .text
.align 8
_c1tR1:
_c1tR1:
	leaq block_c1tR6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tR1, .-_c1tR1


==================== Asm code ====================
2018-03-16 15:56:16.829654965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tR1_info:
	.quad	_c1tR1
	.quad	4
	.quad	-4294967266
	.quad	u1tRp_srtd


==================== Asm code ====================
2018-03-16 15:56:16.830245902 UTC

.section .data.rel.ro
.align 8
.align 1
u1tRq_srtd:
	.quad	S1sVz_srt
	.quad	58
	.quad	148618787703226369


==================== Asm code ====================
2018-03-16 15:56:16.830922703 UTC

.section .text
.align 8
_c1tR6:
_c1tR6:
	leaq block_c1tRa_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tR6, .-_c1tR6


==================== Asm code ====================
2018-03-16 15:56:16.832071696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tR6_info:
	.quad	_c1tR6
	.quad	132
	.quad	-4294967266
	.quad	u1tRq_srtd


==================== Asm code ====================
2018-03-16 15:56:16.832742708 UTC

.section .text
.align 8
_c1tRa:
_c1tRa:
	leaq block_c1tRe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.minusInteger_entry@gotpcrel(%rip)
	.size _c1tRa, .-_c1tRa


==================== Asm code ====================
2018-03-16 15:56:16.833362091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tRa_info:
	.quad	_c1tRa
	.quad	2
	.quad	141733920798
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.833980136 UTC

.section .text
.align 8
_c1tRe:
_c1tRe:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tRe, .-_c1tRe


==================== Asm code ====================
2018-03-16 15:56:16.834515038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tRe_info:
	.quad	_c1tRe
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.838743716 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c-_closure
.type GHC.Real.$fEnumRatio_$s$c-_closure, @object
GHC.Real.$fEnumRatio_$s$c-_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.83954291 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c-_entry
.type GHC.Real.$fEnumRatio_$s$c-_entry, @object
GHC.Real.$fEnumRatio_$s$c-_entry:
_c1tRW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tS7
_c1tS8:
	leaq block_c1tRT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tRT
_c1tRU:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tS7:
	leaq GHC.Real.$fEnumRatio_$s$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c-_entry, .-GHC.Real.$fEnumRatio_$s$c-_entry


==================== Asm code ====================
2018-03-16 15:56:16.840179321 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c-_info
.type GHC.Real.$fEnumRatio_$s$c-_info, @object
GHC.Real.$fEnumRatio_$s$c-_info:
	.quad	GHC.Real.$fEnumRatio_$s$c-_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:16.840935588 UTC

.section .text
.align 8
_c1tRT:
_c1tRT:
	leaq block_c1tRZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tRZ
_c1tS0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tRT, .-_c1tRT


==================== Asm code ====================
2018-03-16 15:56:16.84158954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tRT_info:
	.quad	_c1tRT
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:16.842215912 UTC

.section .text
.align 8
_c1tRZ:
_c1tRZ:
	movq 16(%rbp),%rax
	leaq block_c1tS4_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1tRZ, .-_c1tRZ


==================== Asm code ====================
2018-03-16 15:56:16.84281786 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tRZ_info:
	.quad	_c1tRZ
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:16.843514557 UTC

.section .text
.align 8
_c1tS4:
_c1tS4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tSd
_c1tSc:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tSd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tS4, .-_c1tS4


==================== Asm code ====================
2018-03-16 15:56:16.84418851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tS4_info:
	.quad	_c1tS4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.848751583 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c+_closure
.type GHC.Real.$w$s$c+_closure, @object
GHC.Real.$w$s$c+_closure:
	.quad	GHC.Real.$w$s$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.849431742 UTC

.section .data.rel.ro
.align 8
.align 1
u1tT2_srtd:
	.quad	S1sVz_srt
	.quad	62
	.quad	3463268113447911425


==================== Asm code ====================
2018-03-16 15:56:16.850281963 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c+_entry
.type GHC.Real.$w$s$c+_entry, @object
GHC.Real.$w$s$c+_entry:
_c1tSH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tST
_c1tSU:
	leaq block_c1tSF_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1tST:
	leaq GHC.Real.$w$s$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c+_entry, .-GHC.Real.$w$s$c+_entry


==================== Asm code ====================
2018-03-16 15:56:16.850995377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c+_info
.type GHC.Real.$w$s$c+_info, @object
GHC.Real.$w$s$c+_info:
	.quad	GHC.Real.$w$s$c+_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1tT2_srtd


==================== Asm code ====================
2018-03-16 15:56:16.851564832 UTC

.section .data.rel.ro
.align 8
.align 1
u1tT3_srtd:
	.quad	S1sVz_srt
	.quad	61
	.quad	1157425104234217473


==================== Asm code ====================
2018-03-16 15:56:16.852212742 UTC

.section .text
.align 8
_c1tSF:
_c1tSF:
	leaq block_c1tSK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tSF, .-_c1tSF


==================== Asm code ====================
2018-03-16 15:56:16.852859501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tSF_info:
	.quad	_c1tSF
	.quad	4
	.quad	-4294967266
	.quad	u1tT3_srtd


==================== Asm code ====================
2018-03-16 15:56:16.853909734 UTC

.section .data.rel.ro
.align 8
.align 1
u1tT4_srtd:
	.quad	S1sVz_srt
	.quad	61
	.quad	1157425104234217473


==================== Asm code ====================
2018-03-16 15:56:16.854565011 UTC

.section .text
.align 8
_c1tSK:
_c1tSK:
	leaq block_c1tSO_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tSK, .-_c1tSK


==================== Asm code ====================
2018-03-16 15:56:16.855196838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tSK_info:
	.quad	_c1tSK
	.quad	132
	.quad	-4294967266
	.quad	u1tT4_srtd


==================== Asm code ====================
2018-03-16 15:56:16.855868805 UTC

.section .text
.align 8
_c1tSO:
_c1tSO:
	leaq block_c1tSS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c1tSO, .-_c1tSO


==================== Asm code ====================
2018-03-16 15:56:16.856459709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tSO_info:
	.quad	_c1tSO
	.quad	2
	.quad	1103806595102
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.857107116 UTC

.section .text
.align 8
_c1tSS:
_c1tSS:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tSS, .-_c1tSS


==================== Asm code ====================
2018-03-16 15:56:16.857714637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tSS_info:
	.quad	_c1tSS
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.862057809 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c+_closure
.type GHC.Real.$fEnumRatio_$s$c+_closure, @object
GHC.Real.$fEnumRatio_$s$c+_closure:
	.quad	GHC.Real.$fEnumRatio_$s$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.862912292 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$c+_entry
.type GHC.Real.$fEnumRatio_$s$c+_entry, @object
GHC.Real.$fEnumRatio_$s$c+_entry:
_c1tTA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tTL
_c1tTM:
	leaq block_c1tTx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tTx
_c1tTy:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tTL:
	leaq GHC.Real.$fEnumRatio_$s$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$c+_entry, .-GHC.Real.$fEnumRatio_$s$c+_entry


==================== Asm code ====================
2018-03-16 15:56:16.864107251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$c+_info
.type GHC.Real.$fEnumRatio_$s$c+_info, @object
GHC.Real.$fEnumRatio_$s$c+_info:
	.quad	GHC.Real.$fEnumRatio_$s$c+_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:16.864862662 UTC

.section .text
.align 8
_c1tTx:
_c1tTx:
	leaq block_c1tTD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tTD
_c1tTE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tTx, .-_c1tTx


==================== Asm code ====================
2018-03-16 15:56:16.865484205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tTx_info:
	.quad	_c1tTx
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:16.866126418 UTC

.section .text
.align 8
_c1tTD:
_c1tTD:
	movq 16(%rbp),%rax
	leaq block_c1tTI_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1tTD, .-_c1tTD


==================== Asm code ====================
2018-03-16 15:56:16.866705673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tTD_info:
	.quad	_c1tTD
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:16.867413007 UTC

.section .text
.align 8
_c1tTI:
_c1tTI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tTR
_c1tTQ:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tTR:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tTI, .-_c1tTI


==================== Asm code ====================
2018-03-16 15:56:16.868037225 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tTI_info:
	.quad	_c1tTI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.869896456 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$fNumRatio_closure
.type GHC.Real.$fFractionalRatio_$s$fNumRatio_closure, @object
GHC.Real.$fFractionalRatio_$s$fNumRatio_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Real.$fEnumRatio_$s$c+_closure+2
	.quad	GHC.Real.$fEnumRatio_$s$c-_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$c*_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$cnegate_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cabs_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.873936067 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfromRational_closure
.type GHC.Real.$w$s$cfromRational_closure, @object
GHC.Real.$w$s$cfromRational_closure:
	.quad	GHC.Real.$w$s$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.874500125 UTC

.section .data.rel.ro
.align 8
.align 1
u1tUC_srtd:
	.quad	S1sVz_srt
	.quad	64
	.quad	-9218868437227405311


==================== Asm code ====================
2018-03-16 15:56:16.875274559 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfromRational_entry
.type GHC.Real.$w$s$cfromRational_entry, @object
GHC.Real.$w$s$cfromRational_entry:
_c1tUm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tUu
_c1tUv:
	leaq block_c1tUk_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
_c1tUu:
	leaq GHC.Real.$w$s$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfromRational_entry, .-GHC.Real.$w$s$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.875951874 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfromRational_info
.type GHC.Real.$w$s$cfromRational_info, @object
GHC.Real.$w$s$cfromRational_info:
	.quad	GHC.Real.$w$s$cfromRational_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1tUC_srtd


==================== Asm code ====================
2018-03-16 15:56:16.876525889 UTC

.section .data.rel.ro
.align 8
.align 1
u1tUD_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.877155728 UTC

.section .text
.align 8
_c1tUk:
_c1tUk:
	leaq block_c1tUp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.signumInteger_entry@gotpcrel(%rip)
	.size _c1tUk, .-_c1tUk


==================== Asm code ====================
2018-03-16 15:56:16.877771935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tUk_info:
	.quad	_c1tUk
	.quad	2
	.quad	-4294967266
	.quad	u1tUD_srtd


==================== Asm code ====================
2018-03-16 15:56:16.878287683 UTC

.section .data.rel.ro
.align 8
.align 1
u1tUE_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.8789286 UTC

.section .text
.align 8
_c1tUp:
_c1tUp:
	movq 8(%rbp),%rax
	leaq block_c1tUt_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tUp, .-_c1tUp


==================== Asm code ====================
2018-03-16 15:56:16.87950484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tUp_info:
	.quad	_c1tUp
	.quad	2
	.quad	-4294967266
	.quad	u1tUE_srtd


==================== Asm code ====================
2018-03-16 15:56:16.880125932 UTC

.section .text
.align 8
_c1tUt:
_c1tUt:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tUt, .-_c1tUt


==================== Asm code ====================
2018-03-16 15:56:16.880701105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tUt_info:
	.quad	_c1tUt
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.884269907 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_closure
.type GHC.Real.$fFractionalRatio_$s$cfromRational_closure, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.885107365 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_entry
.type GHC.Real.$fFractionalRatio_$s$cfromRational_entry, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_entry:
_c1tV6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tVc
_c1tVd:
	leaq block_c1tV3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tV3
_c1tV4:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tVc:
	leaq GHC.Real.$fFractionalRatio_$s$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$cfromRational_entry, .-GHC.Real.$fFractionalRatio_$s$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:16.885820118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$cfromRational_info
.type GHC.Real.$fFractionalRatio_$s$cfromRational_info, @object
GHC.Real.$fFractionalRatio_$s$cfromRational_info:
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1sVz_srt+504


==================== Asm code ====================
2018-03-16 15:56:16.886474438 UTC

.section .text
.align 8
_c1tV3:
_c1tV3:
	leaq block_c1tV9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cfromRational_entry
	.size _c1tV3, .-_c1tV3


==================== Asm code ====================
2018-03-16 15:56:16.887087204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tV3_info:
	.quad	_c1tV3
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+504


==================== Asm code ====================
2018-03-16 15:56:16.887818423 UTC

.section .text
.align 8
_c1tV9:
_c1tV9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tVh
_c1tVg:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tVh:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tV9, .-_c1tV9


==================== Asm code ====================
2018-03-16 15:56:16.888453527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tV9_info:
	.quad	_c1tV9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.893340904 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$c/_closure
.type GHC.Real.$w$s$c/_closure, @object
GHC.Real.$w$s$c/_closure:
	.quad	GHC.Real.$w$s$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.893919087 UTC

.section .data.rel.ro
.align 8
.align 1
u1tW5_srtd:
	.quad	S1sVz_srt
	.quad	66
	.quad	4503599627370497
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:16.894788576 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$c/_entry
.type GHC.Real.$w$s$c/_entry, @object
GHC.Real.$w$s$c/_entry:
_c1tVF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tVV
_c1tVW:
	leaq block_c1tVD_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1tVV:
	leaq GHC.Real.$w$s$c/_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$c/_entry, .-GHC.Real.$w$s$c/_entry


==================== Asm code ====================
2018-03-16 15:56:16.895989978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$c/_info
.type GHC.Real.$w$s$c/_info, @object
GHC.Real.$w$s$c/_info:
	.quad	GHC.Real.$w$s$c/_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1tW5_srtd


==================== Asm code ====================
2018-03-16 15:56:16.896600261 UTC

.section .data.rel.ro
.align 8
.align 1
u1tW6_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.897214011 UTC

.section .text
.align 8
_c1tVD:
_c1tVD:
	leaq block_c1tVI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
	.size _c1tVD, .-_c1tVD


==================== Asm code ====================
2018-03-16 15:56:16.897856669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tVD_info:
	.quad	_c1tVD
	.quad	2
	.quad	-4294967266
	.quad	u1tW6_srtd


==================== Asm code ====================
2018-03-16 15:56:16.898437079 UTC

.section .data.rel.ro
.align 8
.align 1
u1tW7_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.899065216 UTC

.section .text
.align 8
_c1tVI:
_c1tVI:
	leaq block_c1tVM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.signumInteger_entry@gotpcrel(%rip)
	.size _c1tVI, .-_c1tVI


==================== Asm code ====================
2018-03-16 15:56:16.899617754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tVI_info:
	.quad	_c1tVI
	.quad	3
	.quad	-4294967266
	.quad	u1tW7_srtd


==================== Asm code ====================
2018-03-16 15:56:16.900146 UTC

.section .data.rel.ro
.align 8
.align 1
u1tW8_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.900714881 UTC

.section .text
.align 8
_c1tVM:
_c1tVM:
	leaq block_c1tVQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tVM, .-_c1tVM


==================== Asm code ====================
2018-03-16 15:56:16.901660709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tVM_info:
	.quad	_c1tVM
	.quad	3
	.quad	-4294967266
	.quad	u1tW8_srtd


==================== Asm code ====================
2018-03-16 15:56:16.902211988 UTC

.section .data.rel.ro
.align 8
.align 1
u1tW9_srtd:
	.quad	S1sVz_srt
	.quad	53
	.quad	4503599627370497


==================== Asm code ====================
2018-03-16 15:56:16.902834014 UTC

.section .text
.align 8
_c1tVQ:
_c1tVQ:
	leaq block_c1tVU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1tVQ, .-_c1tVQ


==================== Asm code ====================
2018-03-16 15:56:16.903402502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tVQ_info:
	.quad	_c1tVQ
	.quad	131
	.quad	-4294967266
	.quad	u1tW9_srtd


==================== Asm code ====================
2018-03-16 15:56:16.904073115 UTC

.section .text
.align 8
_c1tVU:
_c1tVU:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Real.$w$sreduce_entry
	.size _c1tVU, .-_c1tVU


==================== Asm code ====================
2018-03-16 15:56:16.904635444 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tVU_info:
	.quad	_c1tVU
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+416


==================== Asm code ====================
2018-03-16 15:56:16.908844964 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c/_closure
.type GHC.Real.$fFractionalRatio_$s$c/_closure, @object
GHC.Real.$fFractionalRatio_$s$c/_closure:
	.quad	GHC.Real.$fFractionalRatio_$s$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.909698169 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$s$c/_entry
.type GHC.Real.$fFractionalRatio_$s$c/_entry, @object
GHC.Real.$fFractionalRatio_$s$c/_entry:
_c1tWL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tWW
_c1tWX:
	leaq block_c1tWI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1tWI
_c1tWJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tWW:
	leaq GHC.Real.$fFractionalRatio_$s$c/_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$s$c/_entry, .-GHC.Real.$fFractionalRatio_$s$c/_entry


==================== Asm code ====================
2018-03-16 15:56:16.910364017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$c/_info
.type GHC.Real.$fFractionalRatio_$s$c/_info, @object
GHC.Real.$fFractionalRatio_$s$c/_info:
	.quad	GHC.Real.$fFractionalRatio_$s$c/_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+520


==================== Asm code ====================
2018-03-16 15:56:16.911152805 UTC

.section .text
.align 8
_c1tWI:
_c1tWI:
	leaq block_c1tWO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tWO
_c1tWP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1tWI, .-_c1tWI


==================== Asm code ====================
2018-03-16 15:56:16.911755985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tWI_info:
	.quad	_c1tWI
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+520


==================== Asm code ====================
2018-03-16 15:56:16.912395404 UTC

.section .text
.align 8
_c1tWO:
_c1tWO:
	movq 16(%rbp),%rax
	leaq block_c1tWT_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c/_entry
	.size _c1tWO, .-_c1tWO


==================== Asm code ====================
2018-03-16 15:56:16.913036297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tWO_info:
	.quad	_c1tWO
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+520


==================== Asm code ====================
2018-03-16 15:56:16.913746146 UTC

.section .text
.align 8
_c1tWT:
_c1tWT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tX2
_c1tX1:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tX2:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tWT, .-_c1tWT


==================== Asm code ====================
2018-03-16 15:56:16.914404772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tWT_info:
	.quad	_c1tWT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.916201825 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure
.type GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure, @object
GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Real.$fFractionalRatio_$s$fNumRatio_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$c/_closure+2
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.917908167 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioPrec_closure
.type GHC.Real.ratioPrec_closure, @object
GHC.Real.ratioPrec_closure:
	.quad	GHC.Types.I#_con_info
	.quad	7


==================== Asm code ====================
2018-03-16 15:56:16.919622198 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.infinity_closure
.type GHC.Real.infinity_closure, @object
GHC.Real.infinity_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.even1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.921805402 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.notANumber_closure
.type GHC.Real.notANumber_closure, @object
GHC.Real.notANumber_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.even1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.924655262 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numerator_closure
.type GHC.Real.numerator_closure, @object
GHC.Real.numerator_closure:
	.quad	GHC.Real.numerator_info


==================== Asm code ====================
2018-03-16 15:56:16.925654618 UTC

.section .text
.align 8
.globl GHC.Real.numerator_entry
.type GHC.Real.numerator_entry, @object
GHC.Real.numerator_entry:
_c1tXB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tXC
_c1tXD:
	leaq block_c1tXy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tXy
_c1tXz:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tXC:
	leaq GHC.Real.numerator_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.numerator_entry, .-GHC.Real.numerator_entry


==================== Asm code ====================
2018-03-16 15:56:16.926831056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numerator_info
.type GHC.Real.numerator_info, @object
GHC.Real.numerator_info:
	.quad	GHC.Real.numerator_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.927484677 UTC

.section .text
.align 8
_c1tXy:
_c1tXy:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tXy, .-_c1tXy


==================== Asm code ====================
2018-03-16 15:56:16.928080412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tXy_info:
	.quad	_c1tXy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.931025908 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.denominator_closure
.type GHC.Real.denominator_closure, @object
GHC.Real.denominator_closure:
	.quad	GHC.Real.denominator_info


==================== Asm code ====================
2018-03-16 15:56:16.931808637 UTC

.section .text
.align 8
.globl GHC.Real.denominator_entry
.type GHC.Real.denominator_entry, @object
GHC.Real.denominator_entry:
_c1tXZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tY0
_c1tY1:
	leaq block_c1tXW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tXW
_c1tXX:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tY0:
	leaq GHC.Real.denominator_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.denominator_entry, .-GHC.Real.denominator_entry


==================== Asm code ====================
2018-03-16 15:56:16.932445691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.denominator_info
.type GHC.Real.denominator_info, @object
GHC.Real.denominator_info:
	.quad	GHC.Real.denominator_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:16.933065816 UTC

.section .text
.align 8
_c1tXW:
_c1tXW:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1tXW, .-_c1tXW


==================== Asm code ====================
2018-03-16 15:56:16.933683316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tXW_info:
	.quad	_c1tXW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.938513172 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFrom_closure
.type GHC.Real.$w$snumericEnumFrom_closure, @object
GHC.Real.$w$snumericEnumFrom_closure:
	.quad	GHC.Real.$w$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.939100086 UTC

.section .data.rel.ro
.align 8
.align 1
u1tYG_srtd:
	.quad	S1sVz_srt+80
	.quad	58
	.quad	146366987889541121


==================== Asm code ====================
2018-03-16 15:56:16.939932756 UTC

.section .text
.align 8
sat_s1sol_entry:
_c1tYt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tYu
_c1tYv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tYo_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$w$s$c+_entry
_c1tYu:
	jmp *-16(%r13)
	.size sat_s1sol_entry, .-sat_s1sol_entry


==================== Asm code ====================
2018-03-16 15:56:16.940618529 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sol_info:
	.quad	sat_s1sol_entry
	.quad	2
	.quad	-4294967278
	.quad	u1tYG_srtd


==================== Asm code ====================
2018-03-16 15:56:16.941340255 UTC

.section .text
.align 8
_c1tYo:
_c1tYo:
	leaq block_c1tYq_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$snumericEnumFrom_entry
	.size _c1tYo, .-_c1tYo


==================== Asm code ====================
2018-03-16 15:56:16.941882035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tYo_info:
	.quad	_c1tYo
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+536


==================== Asm code ====================
2018-03-16 15:56:16.942614034 UTC

.section .text
.align 8
_c1tYq:
_c1tYq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tYz
_c1tYy:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tYz:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tYq, .-_c1tYq


==================== Asm code ====================
2018-03-16 15:56:16.943270995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tYq_info:
	.quad	_c1tYq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.943819871 UTC

.section .data.rel.ro
.align 8
.align 1
u1tYH_srtd:
	.quad	S1sVz_srt+80
	.quad	58
	.quad	146366987889541121


==================== Asm code ====================
2018-03-16 15:56:16.944600453 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFrom_entry
.type GHC.Real.$w$snumericEnumFrom_entry, @object
GHC.Real.$w$snumericEnumFrom_entry:
_c1tYB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1tYF
_c1tYE:
	leaq sat_s1sol_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -48(%r12),%r14
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1tYF:
	movq $56,904(%r13)
	leaq GHC.Real.$w$snumericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFrom_entry, .-GHC.Real.$w$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:16.94539398 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFrom_info
.type GHC.Real.$w$snumericEnumFrom_info, @object
GHC.Real.$w$snumericEnumFrom_info:
	.quad	GHC.Real.$w$snumericEnumFrom_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1tYH_srtd


==================== Asm code ====================
2018-03-16 15:56:16.948951418 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.950052942 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_entry:
_c1tZd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tZj
_c1tZk:
	leaq block_c1tZa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1tZa
_c1tZb:
	movq (%rbx),%rax
	jmp *(%rax)
_c1tZj:
	leaq GHC.Real.$fEnumRatio_$snumericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFrom_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:16.950720186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFrom_info
.type GHC.Real.$fEnumRatio_$snumericEnumFrom_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFrom_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1sVz_srt+536


==================== Asm code ====================
2018-03-16 15:56:16.951388223 UTC

.section .text
.align 8
_c1tZa:
_c1tZa:
	leaq block_c1tZg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$snumericEnumFrom_entry
	.size _c1tZa, .-_c1tZa


==================== Asm code ====================
2018-03-16 15:56:16.951987073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tZa_info:
	.quad	_c1tZa
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+536


==================== Asm code ====================
2018-03-16 15:56:16.952696 UTC

.section .text
.align 8
_c1tZg:
_c1tZg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1tZo
_c1tZn:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1tZo:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1tZg, .-_c1tZg


==================== Asm code ====================
2018-03-16 15:56:16.953318236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tZg_info:
	.quad	_c1tZg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.959822763 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFrom_closure
.type GHC.Real.$wnumericEnumFrom_closure, @object
GHC.Real.$wnumericEnumFrom_closure:
	.quad	GHC.Real.$wnumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.960659529 UTC

.section .text
.align 8
sat_s1sox_entry:
_c1tZY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1tZZ
_c1u00:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1tZZ:
	jmp *-16(%r13)
	.size sat_s1sox_entry, .-sat_s1sox_entry


==================== Asm code ====================
2018-03-16 15:56:16.961357965 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sox_info:
	.quad	sat_s1sox_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:16.962122873 UTC

.section .text
.align 8
sat_s1soC_entry:
_c1u01:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u07
_c1u08:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1tZQ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1u07:
	jmp *-16(%r13)
	.size sat_s1soC_entry, .-sat_s1soC_entry


==================== Asm code ====================
2018-03-16 15:56:16.962781146 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1soC_info:
	.quad	sat_s1soC_entry
	.quad	2
	.quad	12884901906
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:16.963535512 UTC

.section .text
.align 8
_c1tZQ:
_c1tZQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u0b
_c1u0a:
	leaq sat_s1sox_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1u02_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1u0b:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tZQ, .-_c1tZQ


==================== Asm code ====================
2018-03-16 15:56:16.964232538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tZQ_info:
	.quad	_c1tZQ
	.quad	2
	.quad	12884901918
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:16.964877587 UTC

.section .text
.align 8
_c1u02:
_c1u02:
	leaq block_c1u04_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
	.size _c1u02, .-_c1u02


==================== Asm code ====================
2018-03-16 15:56:16.965654697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u02_info:
	.quad	_c1u02
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+560


==================== Asm code ====================
2018-03-16 15:56:16.96639163 UTC

.section .text
.align 8
_c1u04:
_c1u04:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u0f
_c1u0e:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u0f:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u04, .-_c1u04


==================== Asm code ====================
2018-03-16 15:56:16.967024 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u04_info:
	.quad	_c1u04
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.967698425 UTC

.section .text
.align 8
.globl GHC.Real.$wnumericEnumFrom_entry
.type GHC.Real.$wnumericEnumFrom_entry, @object
GHC.Real.$wnumericEnumFrom_entry:
_c1u0g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u0h
_c1u0i:
	leaq block_c1tZK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1u0h:
	leaq GHC.Real.$wnumericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$wnumericEnumFrom_entry, .-GHC.Real.$wnumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:16.968327713 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFrom_info
.type GHC.Real.$wnumericEnumFrom_info, @object
GHC.Real.$wnumericEnumFrom_info:
	.quad	GHC.Real.$wnumericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:16.969055704 UTC

.section .text
.align 8
_c1tZK:
_c1tZK:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1u0l
_c1u0k:
	leaq sat_s1soC_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u0l:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1tZK, .-_c1tZK


==================== Asm code ====================
2018-03-16 15:56:16.969745742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1tZK_info:
	.quad	_c1tZK
	.quad	1
	.quad	12884901918
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:16.972834081 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFrom_closure
.type GHC.Real.numericEnumFrom_closure, @object
GHC.Real.numericEnumFrom_closure:
	.quad	GHC.Real.numericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.973675636 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFrom_entry
.type GHC.Real.numericEnumFrom_entry, @object
GHC.Real.numericEnumFrom_entry:
_c1u1a:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u1b
_c1u1c:
	leaq block_c1u17_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1u1b:
	leaq GHC.Real.numericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFrom_entry, .-GHC.Real.numericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:16.974293694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFrom_info
.type GHC.Real.numericEnumFrom_info, @object
GHC.Real.numericEnumFrom_info:
	.quad	GHC.Real.numericEnumFrom_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+560


==================== Asm code ====================
2018-03-16 15:56:16.975033772 UTC

.section .text
.align 8
_c1u17:
_c1u17:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u1f
_c1u1e:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u1f:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u17, .-_c1u17


==================== Asm code ====================
2018-03-16 15:56:16.975623439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u17_info:
	.quad	_c1u17
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.977659025 UTC

.section .data
.align 8
.align 1
sat_s1soI_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:16.97929327 UTC

.section .data
.align 8
.align 1
sat_s1soJ_closure:
	.quad	:_con_info
	.quad	sat_s1soI_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.982018733 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even2_closure
.type GHC.Real.even2_closure, @object
GHC.Real.even2_closure:
	.quad	GHC.Real.even2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.98300778 UTC

.section .text
.align 8
.globl GHC.Real.even2_entry
.type GHC.Real.even2_entry, @object
GHC.Real.even2_entry:
_c1u1z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u1A
_c1u1B:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1u1y
_c1u1x:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s1soJ_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c1u1A:
	jmp *-16(%r13)
_c1u1y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.even2_entry, .-GHC.Real.even2_entry


==================== Asm code ====================
2018-03-16 15:56:16.983699982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even2_info
.type GHC.Real.even2_info, @object
GHC.Real.even2_info:
	.quad	GHC.Real.even2_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+576


==================== Asm code ====================
2018-03-16 15:56:16.987065573 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio2_closure
.type GHC.Real.$fEnumRatio2_closure, @object
GHC.Real.$fEnumRatio2_closure:
	.quad	GHC.Real.$fEnumRatio2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.987972476 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio2_entry
.type GHC.Real.$fEnumRatio2_entry, @object
GHC.Real.$fEnumRatio2_entry:
_c1u1U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u1V
_c1u1W:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1u1Q
_c1u1P:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1u1R_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.even2_closure(%rip),%rdi
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Real.$w$s$c/_entry
_c1u1V:
	jmp *-16(%r13)
_c1u1Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fEnumRatio2_entry, .-GHC.Real.$fEnumRatio2_entry


==================== Asm code ====================
2018-03-16 15:56:16.988701833 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio2_info
.type GHC.Real.$fEnumRatio2_info, @object
GHC.Real.$fEnumRatio2_info:
	.quad	GHC.Real.$fEnumRatio2_entry
	.quad	0
	.quad	1172526071829
	.quad	S1sVz_srt+520


==================== Asm code ====================
2018-03-16 15:56:16.989526483 UTC

.section .text
.align 8
_c1u1R:
_c1u1R:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u1Z
_c1u1Y:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u1Z:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u1R, .-_c1u1R


==================== Asm code ====================
2018-03-16 15:56:16.990192109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u1R_info:
	.quad	_c1u1R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:16.996781138 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromTo_closure
.type GHC.Real.$w$snumericEnumFromTo_closure, @object
GHC.Real.$w$snumericEnumFromTo_closure:
	.quad	GHC.Real.$w$snumericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:16.99798996 UTC

.section .text
.align 8
ds_s1soT_entry:
_c1u2s:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u2D
_c1u2E:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1u2p_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c1u2p
_c1u2q:
	movq (%rbx),%rax
	jmp *(%rax)
_c1u2D:
	jmp *-16(%r13)
	.size ds_s1soT_entry, .-ds_s1soT_entry


==================== Asm code ====================
2018-03-16 15:56:16.998605316 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1soT_info:
	.quad	ds_s1soT_entry
	.quad	1
	.quad	35188667056144
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:16.999274365 UTC

.section .text
.align 8
_c1u2p:
_c1u2p:
	leaq block_c1u2v_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	leaq GHC.Real.$fEnumRatio2_closure(%rip),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1u2v
_c1u2w:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1u2p, .-_c1u2p


==================== Asm code ====================
2018-03-16 15:56:16.999869923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u2p_info:
	.quad	_c1u2p
	.quad	0
	.quad	35188667056158
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.000502722 UTC

.section .text
.align 8
_c1u2v:
_c1u2v:
	movq 16(%rbp),%rax
	leaq block_c1u2A_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1u2v, .-_c1u2v


==================== Asm code ====================
2018-03-16 15:56:17.001082765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u2v_info:
	.quad	_c1u2v
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.001846319 UTC

.section .text
.align 8
_c1u2A:
_c1u2A:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u2J
_c1u2I:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u2J:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u2A, .-_c1u2A


==================== Asm code ====================
2018-03-16 15:56:17.002500746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u2A_info:
	.quad	_c1u2A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.003107071 UTC

.section .text
.align 8
sat_s1sp4_entry:
_c1u2R:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c<=_entry
	.size sat_s1sp4_entry, .-sat_s1sp4_entry


==================== Asm code ====================
2018-03-16 15:56:17.003651313 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sp4_info:
	.quad	sat_s1sp4_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+600


==================== Asm code ====================
2018-03-16 15:56:17.004348756 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromTo_entry
.type GHC.Real.$w$snumericEnumFromTo_entry, @object
GHC.Real.$w$snumericEnumFromTo_entry:
_c1u2U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u2V
_c1u2W:
	leaq block_c1u2i_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$snumericEnumFrom_entry
_c1u2V:
	leaq GHC.Real.$w$snumericEnumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromTo_entry, .-GHC.Real.$w$snumericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.004935756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromTo_info
.type GHC.Real.$w$snumericEnumFromTo_info, @object
GHC.Real.$w$snumericEnumFromTo_info:
	.quad	GHC.Real.$w$snumericEnumFromTo_entry
	.quad	0
	.quad	246569777496078
	.quad	12884901911
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.005746156 UTC

.section .text
.align 8
_c1u2i:
_c1u2i:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1u2Z
_c1u2Y:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq %r14,-40(%r12)
	leaq ds_s1soT_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	leaq sat_s1sp4_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -54(%r12),%rsi
	leaq -7(%r12),%r14
	addq $16,%rbp
	jmp *GHC.List.takeWhile_entry@gotpcrel(%rip)
_c1u2Z:
	movq $64,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u2i, .-_c1u2i


==================== Asm code ====================
2018-03-16 15:56:17.006424452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u2i_info:
	.quad	_c1u2i
	.quad	1
	.quad	105557411233822
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.009565193 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.01039236 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry:
_c1u3J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u3K
_c1u3L:
	leaq block_c1u3G_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1u3G
_c1u3H:
	movq (%rbx),%rax
	jmp *(%rax)
_c1u3K:
	leaq GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.011030828 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromTo_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromTo_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromTo_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+608


==================== Asm code ====================
2018-03-16 15:56:17.011703715 UTC

.section .text
.align 8
_c1u3G:
_c1u3G:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromTo_entry
	.size _c1u3G, .-_c1u3G


==================== Asm code ====================
2018-03-16 15:56:17.012284567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u3G_info:
	.quad	_c1u3G
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+608


==================== Asm code ====================
2018-03-16 15:56:17.020633809 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromTo_closure
.type GHC.Real.numericEnumFromTo_closure, @object
GHC.Real.numericEnumFromTo_closure:
	.quad	GHC.Real.numericEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.021549359 UTC

.section .text
.align 8
$dNum_s1spi_entry:
_c1u4a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4b
_c1u4c:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1u4b:
	jmp *-16(%r13)
	.size $dNum_s1spi_entry, .-$dNum_s1spi_entry


==================== Asm code ====================
2018-03-16 15:56:17.022190207 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1spi_info:
	.quad	$dNum_s1spi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.022911935 UTC

.section .text
.align 8
sat_s1spl_entry:
_c1u4q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4r
_c1u4s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1u4r:
	jmp *-16(%r13)
	.size sat_s1spl_entry, .-sat_s1spl_entry


==================== Asm code ====================
2018-03-16 15:56:17.023588374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spl_info:
	.quad	sat_s1spl_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.024322644 UTC

.section .text
.align 8
sat_s1spk_entry:
_c1u4x:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4y
_c1u4z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1u4y:
	jmp *-16(%r13)
	.size sat_s1spk_entry, .-sat_s1spk_entry


==================== Asm code ====================
2018-03-16 15:56:17.025807684 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spk_info:
	.quad	sat_s1spk_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.026651493 UTC

.section .text
.align 8
sat_s1spm_entry:
_c1u4A:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4B
_c1u4C:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1u4E
_c1u4D:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1spl_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s1spk_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real./_entry
_c1u4E:
	movq $48,904(%r13)
_c1u4B:
	jmp *-16(%r13)
	.size sat_s1spm_entry, .-sat_s1spm_entry


==================== Asm code ====================
2018-03-16 15:56:17.027361583 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spm_info:
	.quad	sat_s1spm_entry
	.quad	2
	.quad	73014444050
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.028185341 UTC

.section .text
.align 8
ds_s1spj_entry:
_c1u4F:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4G
_c1u4H:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1u4J
_c1u4I:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1spm_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1u4J:
	movq $32,904(%r13)
_c1u4G:
	jmp *-16(%r13)
	.size ds_s1spj_entry, .-ds_s1spj_entry


==================== Asm code ====================
2018-03-16 15:56:17.028931061 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1spj_info:
	.quad	ds_s1spj_entry
	.quad	3
	.quad	73014444047
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.029701614 UTC

.section .text
.align 8
sat_s1spo_entry:
_c1u4P:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4Q
_c1u4R:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_c1u4Q:
	jmp *-8(%r13)
	.size sat_s1spo_entry, .-sat_s1spo_entry


==================== Asm code ====================
2018-03-16 15:56:17.030322617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spo_info:
	.quad	sat_s1spo_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.031056173 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromTo_entry
.type GHC.Real.numericEnumFromTo_entry, @object
GHC.Real.numericEnumFromTo_entry:
_c1u4S:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u4T
_c1u4U:
	leaq block_c1u44_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1u4T:
	leaq GHC.Real.numericEnumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromTo_entry, .-GHC.Real.numericEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.03170147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromTo_info
.type GHC.Real.numericEnumFromTo_info, @object
GHC.Real.numericEnumFromTo_info:
	.quad	GHC.Real.numericEnumFromTo_entry
	.quad	0
	.quad	2280627634190
	.quad	17179869208
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.032497427 UTC

.section .text
.align 8
_c1u44:
_c1u44:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1u4X
_c1u4W:
	leaq $dNum_s1spi_info(%rip),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-88(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq %r14,-64(%r12)
	leaq ds_s1spj_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -104(%r12),%rax
	movq %rax,-24(%r12)
	leaq sat_s1spo_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -78(%r12),%rsi
	leaq -15(%r12),%r14
	addq $32,%rbp
	jmp *GHC.List.takeWhile_entry@gotpcrel(%rip)
_c1u4X:
	movq $112,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u44, .-_c1u44


==================== Asm code ====================
2018-03-16 15:56:17.033504104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u44_info:
	.quad	_c1u44
	.quad	3
	.quad	73014444062
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.038609736 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThen_closure
.type GHC.Real.$w$snumericEnumFromThen_closure, @object
GHC.Real.$w$snumericEnumFromThen_closure:
	.quad	GHC.Real.$w$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.039416149 UTC

.section .text
.align 8
sat_s1spE_entry:
_c1u6b:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u6c
_c1u6d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1u64_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 40(%rbx),%rax
	movq %rax,%r8
	movq 32(%rbx),%rcx
	movq %rcx,%rdi
	movq %rax,%rsi
	movq %rcx,%r14
	movq 16(%rbx),%rdx
	movq %rdx,-48(%rbp)
	movq 24(%rbx),%rbx
	movq %rbx,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-56,%rbp
	jmp GHC.Real.$w$s$c+_entry
_c1u6c:
	jmp *-16(%r13)
	.size sat_s1spE_entry, .-sat_s1spE_entry


==================== Asm code ====================
2018-03-16 15:56:17.040108896 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spE_info:
	.quad	sat_s1spE_entry
	.quad	4
	.quad	9007237909446671
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.040734027 UTC

.section .text
.align 8
_c1u64:
_c1u64:
	movq 16(%rbp),%rax
	leaq block_c1u66_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq %r14,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1u64, .-_c1u64


==================== Asm code ====================
2018-03-16 15:56:17.041410699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u64_info:
	.quad	_c1u64
	.quad	4
	.quad	9007203549708318
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.04206576 UTC

.section .text
.align 8
_c1u66:
_c1u66:
	movq 16(%rbp),%rax
	leaq block_c1u68_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
	.size _c1u66, .-_c1u66


==================== Asm code ====================
2018-03-16 15:56:17.042661382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u66_info:
	.quad	_c1u66
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+632


==================== Asm code ====================
2018-03-16 15:56:17.043369455 UTC

.section .text
.align 8
_c1u68:
_c1u68:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u6i
_c1u6h:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u6i:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u68, .-_c1u68


==================== Asm code ====================
2018-03-16 15:56:17.043975623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u68_info:
	.quad	_c1u68
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.044766788 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromThen_entry
.type GHC.Real.$w$snumericEnumFromThen_entry, @object
GHC.Real.$w$snumericEnumFromThen_entry:
_c1u6k:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1u6o
_c1u6n:
	leaq sat_s1spE_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -64(%r12),%r14
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1u6o:
	movq $72,904(%r13)
	leaq GHC.Real.$w$snumericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromThen_entry, .-GHC.Real.$w$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:17.045837134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThen_info
.type GHC.Real.$w$snumericEnumFromThen_info, @object
GHC.Real.$w$snumericEnumFromThen_info:
	.quad	GHC.Real.$w$snumericEnumFromThen_entry
	.quad	0
	.quad	9007237909446670
	.quad	17179869208
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.050108432 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.05094838 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry:
_c1u6Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u79
_c1u7a:
	leaq block_c1u6V_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1u6V
_c1u6W:
	movq (%rbx),%rax
	jmp *(%rax)
_c1u79:
	leaq GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:17.051613917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThen_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromThen_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThen_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+632


==================== Asm code ====================
2018-03-16 15:56:17.052375105 UTC

.section .text
.align 8
_c1u6V:
_c1u6V:
	leaq block_c1u71_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1u71
_c1u72:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1u6V, .-_c1u6V


==================== Asm code ====================
2018-03-16 15:56:17.052976675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u6V_info:
	.quad	_c1u6V
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+632


==================== Asm code ====================
2018-03-16 15:56:17.053766491 UTC

.section .text
.align 8
_c1u71:
_c1u71:
	movq 16(%rbp),%rax
	leaq block_c1u76_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
	.size _c1u71, .-_c1u71


==================== Asm code ====================
2018-03-16 15:56:17.054403493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u71_info:
	.quad	_c1u71
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+632


==================== Asm code ====================
2018-03-16 15:56:17.055146854 UTC

.section .text
.align 8
_c1u76:
_c1u76:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u7f
_c1u7e:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u7f:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u76, .-_c1u76


==================== Asm code ====================
2018-03-16 15:56:17.055748489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u76_info:
	.quad	_c1u76
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.062820887 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFromThen_closure
.type GHC.Real.$wnumericEnumFromThen_closure, @object
GHC.Real.$wnumericEnumFromThen_closure:
	.quad	GHC.Real.$wnumericEnumFromThen_info


==================== Asm code ====================
2018-03-16 15:56:17.063633404 UTC

.section .text
.align 8
sat_s1spW_entry:
_c1u7X:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u7Y
_c1u7Z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1u7Y:
	jmp *-16(%r13)
	.size sat_s1spW_entry, .-sat_s1spW_entry


==================== Asm code ====================
2018-03-16 15:56:17.06429989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1spW_info:
	.quad	sat_s1spW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.065011714 UTC

.section .text
.align 8
sat_s1sq1_entry:
_c1u80:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u86
_c1u87:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1u7P_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1u86:
	jmp *-16(%r13)
	.size sat_s1sq1_entry, .-sat_s1sq1_entry


==================== Asm code ====================
2018-03-16 15:56:17.065724 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sq1_info:
	.quad	sat_s1sq1_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.066436939 UTC

.section .text
.align 8
_c1u7P:
_c1u7P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1u8a
_c1u89:
	leaq sat_s1spW_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1u81_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1u8a:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1u7P, .-_c1u7P


==================== Asm code ====================
2018-03-16 15:56:17.067115169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u7P_info:
	.quad	_c1u7P
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.067717695 UTC

.section .text
.align 8
_c1u81:
_c1u81:
	movq 24(%rbp),%rax
	leaq block_c1u83_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rbx,%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
	.size _c1u81, .-_c1u81


==================== Asm code ====================
2018-03-16 15:56:17.068324134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u81_info:
	.quad	_c1u81
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.069011771 UTC

.section .text
.align 8
_c1u83:
_c1u83:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u8e
_c1u8d:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u8e:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u83, .-_c1u83


==================== Asm code ====================
2018-03-16 15:56:17.069839887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u83_info:
	.quad	_c1u83
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.070532383 UTC

.section .text
.align 8
.globl GHC.Real.$wnumericEnumFromThen_entry
.type GHC.Real.$wnumericEnumFromThen_entry, @object
GHC.Real.$wnumericEnumFromThen_entry:
_c1u8f:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u8g
_c1u8h:
	leaq block_c1u7H_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1u8g:
	leaq GHC.Real.$wnumericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$wnumericEnumFromThen_entry, .-GHC.Real.$wnumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:17.071205941 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wnumericEnumFromThen_info
.type GHC.Real.$wnumericEnumFromThen_info, @object
GHC.Real.$wnumericEnumFromThen_info:
	.quad	GHC.Real.$wnumericEnumFromThen_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.071877263 UTC

.section .text
.align 8
_c1u7H:
_c1u7H:
	leaq block_c1u7J_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1u7H, .-_c1u7H


==================== Asm code ====================
2018-03-16 15:56:17.07244974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u7H_info:
	.quad	_c1u7H
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.073170393 UTC

.section .text
.align 8
_c1u7J:
_c1u7J:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1u8l
_c1u8k:
	leaq sat_s1sq1_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u8l:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1u7J, .-_c1u7J


==================== Asm code ====================
2018-03-16 15:56:17.073832262 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u7J_info:
	.quad	_c1u7J
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.076916652 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromThen_closure
.type GHC.Real.numericEnumFromThen_closure, @object
GHC.Real.numericEnumFromThen_closure:
	.quad	GHC.Real.numericEnumFromThen_info


==================== Asm code ====================
2018-03-16 15:56:17.077671355 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromThen_entry
.type GHC.Real.numericEnumFromThen_entry, @object
GHC.Real.numericEnumFromThen_entry:
_c1u9f:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1u9g
_c1u9h:
	leaq block_c1u9c_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1u9g:
	leaq GHC.Real.numericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromThen_entry, .-GHC.Real.numericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:17.078293309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromThen_info
.type GHC.Real.numericEnumFromThen_info, @object
GHC.Real.numericEnumFromThen_info:
	.quad	GHC.Real.numericEnumFromThen_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.079057723 UTC

.section .text
.align 8
_c1u9c:
_c1u9c:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1u9k
_c1u9j:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1u9k:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u9c, .-_c1u9c


==================== Asm code ====================
2018-03-16 15:56:17.07973387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9c_info:
	.quad	_c1u9c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.093142533 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThenTo_closure
.type GHC.Real.$w$snumericEnumFromThenTo_closure, @object
GHC.Real.$w$snumericEnumFromThenTo_closure:
	.quad	GHC.Real.$w$snumericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.094134049 UTC

.section .text
.align 8
ds_s1sqh_entry:
_c1u9S:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ua2
_c1ua3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1u9P_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c1u9P
_c1u9Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ua2:
	jmp *-16(%r13)
	.size ds_s1sqh_entry, .-ds_s1sqh_entry


==================== Asm code ====================
2018-03-16 15:56:17.094843821 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sqh_info:
	.quad	ds_s1sqh_entry
	.quad	5
	.quad	150121991897103
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.09554312 UTC

.section .text
.align 8
_c1u9P:
_c1u9P:
	movq 16(%rbp),%rax
	leaq block_c1u9V_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1u9P, .-_c1u9P


==================== Asm code ====================
2018-03-16 15:56:17.096135207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9P_info:
	.quad	_c1u9P
	.quad	4
	.quad	150121991897118
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.096785416 UTC

.section .text
.align 8
_c1u9V:
_c1u9V:
	leaq block_c1u9X_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.even2_closure(%rip),%rdi
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c/_entry
	.size _c1u9V, .-_c1u9V


==================== Asm code ====================
2018-03-16 15:56:17.097633431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9V_info:
	.quad	_c1u9V
	.quad	2
	.quad	18764712116254
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.098234225 UTC

.section .text
.align 8
_c1u9X:
_c1u9X:
	movq 16(%rbp),%rax
	leaq block_c1u9Z_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1u9X, .-_c1u9X


==================== Asm code ====================
2018-03-16 15:56:17.098797109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9X_info:
	.quad	_c1u9X
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.099527851 UTC

.section .text
.align 8
_c1u9Z:
_c1u9Z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1ua9
_c1ua8:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ua9:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u9Z, .-_c1u9Z


==================== Asm code ====================
2018-03-16 15:56:17.100143314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9Z_info:
	.quad	_c1u9Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.100752785 UTC

.section .text
.align 8
sat_s1sqv_entry:
_c1uag:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c<=_entry
	.size sat_s1sqv_entry, .-sat_s1sqv_entry


==================== Asm code ====================
2018-03-16 15:56:17.101346282 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sqv_info:
	.quad	sat_s1sqv_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+600


==================== Asm code ====================
2018-03-16 15:56:17.1021392 UTC

.section .text
.align 8
ds_s1sqw_entry:
_c1uas:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uaC
_c1uaD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uap_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c1uap
_c1uaq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uaC:
	jmp *-16(%r13)
	.size ds_s1sqw_entry, .-ds_s1sqw_entry


==================== Asm code ====================
2018-03-16 15:56:17.102775189 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sqw_info:
	.quad	ds_s1sqw_entry
	.quad	5
	.quad	150121991897103
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.103441474 UTC

.section .text
.align 8
_c1uap:
_c1uap:
	movq 16(%rbp),%rax
	leaq block_c1uav_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 8(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$s$c-_entry
	.size _c1uap, .-_c1uap


==================== Asm code ====================
2018-03-16 15:56:17.104024193 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uap_info:
	.quad	_c1uap
	.quad	4
	.quad	150121991897118
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.104694993 UTC

.section .text
.align 8
_c1uav:
_c1uav:
	leaq block_c1uax_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.even2_closure(%rip),%rdi
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c/_entry
	.size _c1uav, .-_c1uav


==================== Asm code ====================
2018-03-16 15:56:17.105558843 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uav_info:
	.quad	_c1uav
	.quad	2
	.quad	18764712116254
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.106222227 UTC

.section .text
.align 8
_c1uax:
_c1uax:
	movq 16(%rbp),%rax
	leaq block_c1uaz_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$c+_entry
	.size _c1uax, .-_c1uax


==================== Asm code ====================
2018-03-16 15:56:17.106838285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uax_info:
	.quad	_c1uax
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+488


==================== Asm code ====================
2018-03-16 15:56:17.107550209 UTC

.section .text
.align 8
_c1uaz:
_c1uaz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uaJ
_c1uaI:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uaJ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1uaz, .-_c1uaz


==================== Asm code ====================
2018-03-16 15:56:17.108219223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uaz_info:
	.quad	_c1uaz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.108836738 UTC

.section .text
.align 8
sat_s1sqK_entry:
_c1uaQ:
	movq 7(%rbx),%rsi
	jmp GHC.Real.$fEnumRatio_$s$c>=_entry
	.size sat_s1sqK_entry, .-sat_s1sqK_entry


==================== Asm code ====================
2018-03-16 15:56:17.109409539 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sqK_info:
	.quad	sat_s1sqK_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+648


==================== Asm code ====================
2018-03-16 15:56:17.109980608 UTC

.section .data.rel.ro
.align 8
.align 1
u1ubc_srtd:
	.quad	S1sVz_srt+24
	.quad	79
	.quad	4935945191598063617
	.quad	16708


==================== Asm code ====================
2018-03-16 15:56:17.110737219 UTC

.section .text
.align 8
sat_s1sqL_entry:
_c1uaX:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uaY
_c1uaZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1u9H_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 24(%rbx),%rax
	movq %rax,%r8
	movq 16(%rbx),%rcx
	movq %rcx,%rdi
	movq 40(%rbx),%rdx
	movq %rdx,%rsi
	movq 32(%rbx),%r9
	movq %r9,%r14
	movq %rcx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
_c1uaY:
	jmp *-16(%r13)
	.size sat_s1sqL_entry, .-sat_s1sqL_entry


==================== Asm code ====================
2018-03-16 15:56:17.11144457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sqL_info:
	.quad	sat_s1sqL_entry
	.quad	5
	.quad	-4294967281
	.quad	u1ubc_srtd


==================== Asm code ====================
2018-03-16 15:56:17.112404944 UTC

.section .text
.align 8
_c1u9H:
_c1u9H:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _c1uaV
_c1uaU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1ub5
_c1ub1:
	leaq ds_s1sqh_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	leaq sat_s1sqv_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ub5:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1uaV:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1ub5
_c1ub4:
	leaq ds_s1sqw_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	leaq sat_s1sqK_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1u9H, .-_c1u9H


==================== Asm code ====================
2018-03-16 15:56:17.113212314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9H_info:
	.quad	_c1u9H
	.quad	5
	.quad	36741868964282398
	.quad	S1sVz_srt+464


==================== Asm code ====================
2018-03-16 15:56:17.114044871 UTC

.section .data.rel.ro
.align 8
.align 1
u1ubd_srtd:
	.quad	S1sVz_srt+24
	.quad	80
	.quad	4935945191598063617
	.quad	53572


==================== Asm code ====================
2018-03-16 15:56:17.114806854 UTC

.section .text
.align 8
.globl GHC.Real.$w$snumericEnumFromThenTo_entry
.type GHC.Real.$w$snumericEnumFromThenTo_entry, @object
GHC.Real.$w$snumericEnumFromThenTo_entry:
_c1ub6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ub7
_c1ub8:
	leaq block_c1u9A_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r8,%rax
	movq %rdi,%rbx
	movq %rsi,%rcx
	movq %r14,%rdx
	movq %rdx,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$w$snumericEnumFromThen_entry
_c1ub7:
	leaq GHC.Real.$w$snumericEnumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$snumericEnumFromThenTo_entry, .-GHC.Real.$w$snumericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.115455072 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$snumericEnumFromThenTo_info
.type GHC.Real.$w$snumericEnumFromThenTo_info, @object
GHC.Real.$w$snumericEnumFromThenTo_info:
	.quad	GHC.Real.$w$snumericEnumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836505
	.quad	u1ubd_srtd


==================== Asm code ====================
2018-03-16 15:56:17.116000663 UTC

.section .data.rel.ro
.align 8
.align 1
u1ube_srtd:
	.quad	S1sVz_srt+24
	.quad	79
	.quad	4935945191598063617
	.quad	16708


==================== Asm code ====================
2018-03-16 15:56:17.116790085 UTC

.section .text
.align 8
_c1u9A:
_c1u9A:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1ubb
_c1uba:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	leaq sat_s1sqL_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -70(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp *GHC.List.takeWhile_entry@gotpcrel(%rip)
_c1ubb:
	movq $80,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1u9A, .-_c1u9A


==================== Asm code ====================
2018-03-16 15:56:17.117563074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1u9A_info:
	.quad	_c1u9A
	.quad	5
	.quad	-4294967266
	.quad	u1ube_srtd


==================== Asm code ====================
2018-03-16 15:56:17.121345497 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.122205535 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry:
_c1ucV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ucZ
_c1ud0:
	leaq block_c1ucS_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1ucS
_c1ucT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ucZ:
	leaq GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry, .-GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.123410636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info
.type GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info, @object
GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_info:
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+656


==================== Asm code ====================
2018-03-16 15:56:17.124131171 UTC

.section .text
.align 8
_c1ucS:
_c1ucS:
	leaq block_c1ucY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1ucY
_c1ud2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1ucS, .-_c1ucS


==================== Asm code ====================
2018-03-16 15:56:17.124758431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ucS_info:
	.quad	_c1ucS
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+656


==================== Asm code ====================
2018-03-16 15:56:17.125650866 UTC

.section .text
.align 8
_c1ucY:
_c1ucY:
	movq 24(%rbp),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$snumericEnumFromThenTo_entry
	.size _c1ucY, .-_c1ucY


==================== Asm code ====================
2018-03-16 15:56:17.126210431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ucY_info:
	.quad	_c1ucY
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+656


==================== Asm code ====================
2018-03-16 15:56:17.137680422 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.numericEnumFromThenTo_closure
.type GHC.Real.numericEnumFromThenTo_closure, @object
GHC.Real.numericEnumFromThenTo_closure:
	.quad	GHC.Real.numericEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.138500016 UTC

.section .text
.align 8
$dNum_s1sr4_entry:
_c1udD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1udE
_c1udF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1udE:
	jmp *-16(%r13)
	.size $dNum_s1sr4_entry, .-$dNum_s1sr4_entry


==================== Asm code ====================
2018-03-16 15:56:17.139093285 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1sr4_info:
	.quad	$dNum_s1sr4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.139809068 UTC

.section .text
.align 8
sat_s1sr7_entry:
_c1udO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1udP
_c1udQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1udP:
	jmp *-16(%r13)
	.size sat_s1sr7_entry, .-sat_s1sr7_entry


==================== Asm code ====================
2018-03-16 15:56:17.140431316 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sr7_info:
	.quad	sat_s1sr7_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.141103064 UTC

.section .text
.align 8
sat_s1sr6_entry:
_c1udV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1udW
_c1udX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1udW:
	jmp *-16(%r13)
	.size sat_s1sr6_entry, .-sat_s1sr6_entry


==================== Asm code ====================
2018-03-16 15:56:17.141793704 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sr6_info:
	.quad	sat_s1sr6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.142608515 UTC

.section .text
.align 8
mid_s1sr5_entry:
_c1udY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1udZ
_c1ue0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1ue2
_c1ue1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s1sr7_info(%rip),%rsi
	movq %rsi,-56(%r12)
	movq %rbx,-40(%r12)
	leaq sat_s1sr6_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real./_entry
_c1ue2:
	movq $64,904(%r13)
_c1udZ:
	jmp *-16(%r13)
	.size mid_s1sr5_entry, .-mid_s1sr5_entry


==================== Asm code ====================
2018-03-16 15:56:17.143333568 UTC

.section .data.rel.ro
.align 8
.align 1
mid_s1sr5_info:
	.quad	mid_s1sr5_entry
	.quad	4
	.quad	4294967311
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.144008714 UTC

.section .text
.align 8
ds_s1sr9_entry:
_c1ueb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uec
_c1ued:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1uec:
	jmp *-16(%r13)
	.size ds_s1sr9_entry, .-ds_s1sr9_entry


==================== Asm code ====================
2018-03-16 15:56:17.144644642 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sr9_info:
	.quad	ds_s1sr9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.145581794 UTC

.section .text
.align 8
sat_s1srb_entry:
_c1uej:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uek
_c1uel:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.>=_entry@gotpcrel(%rip)
_c1uek:
	jmp *-8(%r13)
	.size sat_s1srb_entry, .-sat_s1srb_entry


==================== Asm code ====================
2018-03-16 15:56:17.146270862 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srb_info:
	.quad	sat_s1srb_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.147001472 UTC

.section .text
.align 8
ds_s1src_entry:
_c1ues:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uet
_c1ueu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1uet:
	jmp *-16(%r13)
	.size ds_s1src_entry, .-ds_s1src_entry


==================== Asm code ====================
2018-03-16 15:56:17.147618607 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1src_info:
	.quad	ds_s1src_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.148326035 UTC

.section .text
.align 8
sat_s1sre_entry:
_c1ueA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ueB
_c1ueC:
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_c1ueB:
	jmp *-8(%r13)
	.size sat_s1sre_entry, .-sat_s1sre_entry


==================== Asm code ====================
2018-03-16 15:56:17.148931328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sre_info:
	.quad	sat_s1sre_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.149803921 UTC

.section .text
.align 8
sat_s1srf_entry:
_c1ueH:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ueI
_c1ueJ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1ueL
_c1ueK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq $dNum_s1sr4_info(%rip),%rdi
	movq %rdi,-64(%r12)
	movq %rcx,-48(%r12)
	leaq mid_s1sr5_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -64(%r12),%rcx
	movq %rcx,(%r12)
	leaq block_c1ue3_info(%rip),%rdi
	movq %rdi,-56(%rbp)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rdi
	movq %rdi,-80(%rbp)
	movq %rsi,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %rcx,-48(%rbp)
	leaq -40(%r12),%rcx
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-80,%rbp
	jmp *GHC.Classes.>=_entry@gotpcrel(%rip)
_c1ueL:
	movq $72,904(%r13)
_c1ueI:
	jmp *-16(%r13)
	.size sat_s1srf_entry, .-sat_s1srf_entry


==================== Asm code ====================
2018-03-16 15:56:17.15059433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srf_info:
	.quad	sat_s1srf_entry
	.quad	5
	.quad	4294967311
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.151532526 UTC

.section .text
.align 8
_c1ue3:
_c1ue3:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c1ueE
_c1ueF:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1ueR
_c1ueQ:
	leaq ds_s1src_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	leaq sat_s1sre_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ueR:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1ueE:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1ueR
_c1ueN:
	leaq ds_s1sr9_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	leaq sat_s1srb_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1ue3, .-_c1ue3


==================== Asm code ====================
2018-03-16 15:56:17.152362424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ue3_info:
	.quad	_c1ue3
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.153136208 UTC

.section .text
.align 8
.globl GHC.Real.numericEnumFromThenTo_entry
.type GHC.Real.numericEnumFromThenTo_entry, @object
GHC.Real.numericEnumFromThenTo_entry:
_c1ueS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ueT
_c1ueU:
	leaq block_c1uds_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rdi,%rax
	movq %r8,%rdi
	movq %rsi,%rbx
	movq %rax,%rsi
	movq %r14,%rcx
	movq %rbx,%r14
	movq %rcx,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1ueT:
	leaq GHC.Real.numericEnumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.numericEnumFromThenTo_entry, .-GHC.Real.numericEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.153902985 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.numericEnumFromThenTo_info
.type GHC.Real.numericEnumFromThenTo_info, @object
GHC.Real.numericEnumFromThenTo_info:
	.quad	GHC.Real.numericEnumFromThenTo_entry
	.quad	0
	.quad	8800387989518
	.quad	21474836505
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.15471601 UTC

.section .text
.align 8
_c1uds:
_c1uds:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1ueX
_c1ueW:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %r14,-56(%r12)
	leaq sat_s1srf_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -70(%r12),%rsi
	leaq -48(%r12),%r14
	addq $48,%rbp
	jmp *GHC.List.takeWhile_entry@gotpcrel(%rip)
_c1ueX:
	movq $80,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1uds, .-_c1uds


==================== Asm code ====================
2018-03-16 15:56:17.155926933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uds_info:
	.quad	_c1uds
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.159473519 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.fromIntegral_closure
.type GHC.Real.fromIntegral_closure, @object
GHC.Real.fromIntegral_closure:
	.quad	GHC.Real.fromIntegral_info


==================== Asm code ====================
2018-03-16 15:56:17.160244874 UTC

.section .text
.align 8
sat_s1srk_entry:
_c1ugF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ugG
_c1ugH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toInteger_entry
_c1ugG:
	jmp *-16(%r13)
	.size sat_s1srk_entry, .-sat_s1srk_entry


==================== Asm code ====================
2018-03-16 15:56:17.160861644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srk_info:
	.quad	sat_s1srk_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.161681462 UTC

.section .text
.align 8
.globl GHC.Real.fromIntegral_entry
.type GHC.Real.fromIntegral_entry, @object
GHC.Real.fromIntegral_entry:
_c1ugI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ugJ
_c1ugK:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1ugM
_c1ugL:
	leaq sat_s1srk_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1ugM:
	movq $32,904(%r13)
_c1ugJ:
	leaq GHC.Real.fromIntegral_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.fromIntegral_entry, .-GHC.Real.fromIntegral_entry


==================== Asm code ====================
2018-03-16 15:56:17.162352918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.fromIntegral_info
.type GHC.Real.fromIntegral_info, @object
GHC.Real.fromIntegral_info:
	.quad	GHC.Real.fromIntegral_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.16551617 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.realToFrac_closure
.type GHC.Real.realToFrac_closure, @object
GHC.Real.realToFrac_closure:
	.quad	GHC.Real.realToFrac_info


==================== Asm code ====================
2018-03-16 15:56:17.166259623 UTC

.section .text
.align 8
sat_s1sro_entry:
_c1uha:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uhb
_c1uhc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toRational_entry
_c1uhb:
	jmp *-16(%r13)
	.size sat_s1sro_entry, .-sat_s1sro_entry


==================== Asm code ====================
2018-03-16 15:56:17.16688812 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sro_info:
	.quad	sat_s1sro_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.167630002 UTC

.section .text
.align 8
.globl GHC.Real.realToFrac_entry
.type GHC.Real.realToFrac_entry, @object
GHC.Real.realToFrac_entry:
_c1uhd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uhe
_c1uhf:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uhh
_c1uhg:
	leaq sat_s1sro_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.fromRational_entry
_c1uhh:
	movq $32,904(%r13)
_c1uhe:
	leaq GHC.Real.realToFrac_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.realToFrac_entry, .-GHC.Real.realToFrac_entry


==================== Asm code ====================
2018-03-16 15:56:17.168268747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.realToFrac_info
.type GHC.Real.realToFrac_info, @object
GHC.Real.realToFrac_info:
	.quad	GHC.Real.realToFrac_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.170009648 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.showSigned1_closure
.type GHC.Real.showSigned1_closure, @object
GHC.Real.showSigned1_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:56:17.180219903 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.showSigned_closure
.type GHC.Real.showSigned_closure, @object
GHC.Real.showSigned_closure:
	.quad	GHC.Real.showSigned_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.181047781 UTC

.section .text
.align 8
$dNum_s1srt_entry:
_c1uhG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uhH
_c1uhI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uhH:
	jmp *-16(%r13)
	.size $dNum_s1srt_entry, .-$dNum_s1srt_entry


==================== Asm code ====================
2018-03-16 15:56:17.181784153 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1srt_info:
	.quad	$dNum_s1srt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.182471102 UTC

.section .text
.align 8
sat_s1srv_entry:
_c1uhN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uhO
_c1uhP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uhO:
	jmp *-16(%r13)
	.size sat_s1srv_entry, .-sat_s1srv_entry


==================== Asm code ====================
2018-03-16 15:56:17.183114495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srv_info:
	.quad	sat_s1srv_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.183803567 UTC

.section .text
.align 8
sat_s1srA_entry:
_c1uic:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uid
_c1uie:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1uid:
	jmp *-16(%r13)
	.size sat_s1srA_entry, .-sat_s1srA_entry


==================== Asm code ====================
2018-03-16 15:56:17.184459824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srA_info:
	.quad	sat_s1srA_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.185233007 UTC

.section .text
.align 8
g1_s1srz_entry:
_c1uif:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uig
_c1uih:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uij
_c1uii:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1srA_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c1uij:
	movq $32,904(%r13)
_c1uig:
	jmp *-16(%r13)
	.size g1_s1srz_entry, .-g1_s1srz_entry


==================== Asm code ====================
2018-03-16 15:56:17.186012785 UTC

.section .data.rel.ro
.align 8
.align 1
g1_s1srz_info:
	.quad	g1_s1srz_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.186772851 UTC

.section .text
.align 8
sat_s1srE_entry:
_c1uiu:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1uiy
_c1uix:
	movq 7(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Real.showSigned1_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1uiy:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s1srE_entry, .-sat_s1srE_entry


==================== Asm code ====================
2018-03-16 15:56:17.187490137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srE_info:
	.quad	sat_s1srE_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.188825257 UTC

.section .text
.align 8
sat_s1srH_entry:
_c1uiK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uiL
_c1uiM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uiO
_c1uiN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c1uiO:
	movq $24,904(%r13)
_c1uiL:
	jmp *-16(%r13)
	.size sat_s1srH_entry, .-sat_s1srH_entry


==================== Asm code ====================
2018-03-16 15:56:17.189663964 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srH_info:
	.quad	sat_s1srH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.19043346 UTC

.section .text
.align 8
sat_s1srJ_entry:
_c1uiR:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1uiV
_c1uiU:
	movq 7(%rbx),%rax
	leaq sat_s1srH_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.Real.showSigned1_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1uiV:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s1srJ_entry, .-sat_s1srJ_entry


==================== Asm code ====================
2018-03-16 15:56:17.191124937 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srJ_info:
	.quad	sat_s1srJ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.191949102 UTC

.section .text
.align 8
.globl GHC.Real.showSigned_entry
.type GHC.Real.showSigned_entry, @object
GHC.Real.showSigned_entry:
_c1uiW:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uiX
_c1uiY:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1uj0
_c1uiZ:
	leaq $dNum_s1srt_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s1srv_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1uhQ_info(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p2Real_entry
_c1uj0:
	movq $48,904(%r13)
_c1uiX:
	leaq GHC.Real.showSigned_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.showSigned_entry, .-GHC.Real.showSigned_entry


==================== Asm code ====================
2018-03-16 15:56:17.192679054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.showSigned_info
.type GHC.Real.showSigned_info, @object
GHC.Real.showSigned_info:
	.quad	GHC.Real.showSigned_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.193711698 UTC

.section .text
.align 8
_c1uhQ:
_c1uhQ:
	leaq block_c1uhU_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c1uhQ, .-_c1uhQ


==================== Asm code ====================
2018-03-16 15:56:17.194300713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uhQ_info:
	.quad	_c1uhQ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.195007435 UTC

.section .text
.align 8
_c1uhU:
_c1uhU:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uj5
_c1uj7:
	leaq block_c1uhZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _c1uhZ
_c1ui0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uj5:
	movq 40(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _c1uhU, .-_c1uhU


==================== Asm code ====================
2018-03-16 15:56:17.19561429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uhU_info:
	.quad	_c1uhU
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.196399914 UTC

.section .text
.align 8
_c1uhZ:
_c1uhZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1uja
_c1uj9:
	movq 7(%rbx),%rax
	leaq g1_s1srz_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	cmpq $6,%rax
	jle _c1ujc
_c1ujd:
	leaq sat_s1srJ_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ujc:
	leaq sat_s1srE_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uja:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uhZ, .-_c1uhZ


==================== Asm code ====================
2018-03-16 15:56:17.197151761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uhZ_info:
	.quad	_c1uhZ
	.quad	645
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.203599892 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.even_closure
.type GHC.Real.even_closure, @object
GHC.Real.even_closure:
	.quad	GHC.Real.even_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.204459057 UTC

.section .text
.align 8
$dNum_s1srN_entry:
_c1ukP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ukQ
_c1ukR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1ukQ:
	jmp *-16(%r13)
	.size $dNum_s1srN_entry, .-$dNum_s1srN_entry


==================== Asm code ====================
2018-03-16 15:56:17.205082747 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1srN_info:
	.quad	$dNum_s1srN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.205821663 UTC

.section .text
.align 8
sat_s1srS_entry:
_c1ukW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ukX
_c1ukY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1ukX:
	jmp *-16(%r13)
	.size sat_s1srS_entry, .-sat_s1srS_entry


==================== Asm code ====================
2018-03-16 15:56:17.206481089 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srS_info:
	.quad	sat_s1srS_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.207227153 UTC

.section .text
.align 8
sat_s1srQ_entry:
_c1ul7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ul8
_c1ul9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1ul8:
	jmp *-16(%r13)
	.size sat_s1srQ_entry, .-sat_s1srQ_entry


==================== Asm code ====================
2018-03-16 15:56:17.207917608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srQ_info:
	.quad	sat_s1srQ_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.208702319 UTC

.section .text
.align 8
sat_s1srR_entry:
_c1ula:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ulb
_c1ulc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1ule
_c1uld:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1srQ_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.rem_entry
_c1ule:
	movq $24,904(%r13)
_c1ulb:
	jmp *-16(%r13)
	.size sat_s1srR_entry, .-sat_s1srR_entry


==================== Asm code ====================
2018-03-16 15:56:17.209818881 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1srR_info:
	.quad	sat_s1srR_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.210543334 UTC

.section .text
.align 8
.globl GHC.Real.even_entry
.type GHC.Real.even_entry, @object
GHC.Real.even_entry:
_c1ulf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ull
_c1ulm:
	leaq block_c1ukH_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1ull:
	leaq GHC.Real.even_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.even_entry, .-GHC.Real.even_entry


==================== Asm code ====================
2018-03-16 15:56:17.211187723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.even_info
.type GHC.Real.even_info, @object
GHC.Real.even_info:
	.quad	GHC.Real.even_entry
	.quad	0
	.quad	87965225189390
	.quad	8589934607
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.211994828 UTC

.section .text
.align 8
_c1ukH:
_c1ukH:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1ulp
_c1ulo:
	leaq $dNum_s1srN_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rbx,-64(%r12)
	leaq sat_s1srS_info(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1srR_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c1ulg_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,8(%rbp)
	leaq -56(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Real.$p2Real_entry
_c1ulp:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1ukH, .-_c1ukH


==================== Asm code ====================
2018-03-16 15:56:17.212740922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ukH_info:
	.quad	_c1ukH
	.quad	2
	.quad	17596481011742
	.quad	S1sVz_srt+584


==================== Asm code ====================
2018-03-16 15:56:17.213496379 UTC

.section .text
.align 8
_c1ulg:
_c1ulg:
	leaq block_c1ulk_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1ulg, .-_c1ulg


==================== Asm code ====================
2018-03-16 15:56:17.214121884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ulg_info:
	.quad	_c1ulg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.214745689 UTC

.section .text
.align 8
_c1ulk:
_c1ulk:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1ulk, .-_c1ulk


==================== Asm code ====================
2018-03-16 15:56:17.215302632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ulk_info:
	.quad	_c1ulk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.218361503 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.odd_closure
.type GHC.Real.odd_closure, @object
GHC.Real.odd_closure:
	.quad	GHC.Real.odd_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.219094398 UTC

.section .text
.align 8
.globl GHC.Real.odd_entry
.type GHC.Real.odd_entry, @object
GHC.Real.odd_entry:
_c1umv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1umw
_c1umx:
	leaq block_c1ump_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.even_entry
_c1umw:
	leaq GHC.Real.odd_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.odd_entry, .-GHC.Real.odd_entry


==================== Asm code ====================
2018-03-16 15:56:17.219820402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.odd_info
.type GHC.Real.odd_info, @object
GHC.Real.odd_info:
	.quad	GHC.Real.odd_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+696


==================== Asm code ====================
2018-03-16 15:56:17.220546024 UTC

.section .text
.align 8
_c1ump:
_c1ump:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1ums
_c1umt:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1ums:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1ump, .-_c1ump


==================== Asm code ====================
2018-03-16 15:56:17.221756134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ump_info:
	.quad	_c1ump
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.223408107 UTC

.section .data
.align 8
.align 1
lvl3_r1j3b_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.even2_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.224945641 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_r1j3c_bytes:
	.asciz "round default defn: Bad value"


==================== Asm code ====================
2018-03-16 15:56:17.228126846 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio1_closure
.type GHC.Real.$fRealFracRatio1_closure, @object
GHC.Real.$fRealFracRatio1_closure:
	.quad	GHC.Real.$fRealFracRatio1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.229098189 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio1_entry
.type GHC.Real.$fRealFracRatio1_entry, @object
GHC.Real.$fRealFracRatio1_entry:
_c1un3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1un4
_c1un5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1un0
_c1umZ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1un1_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl4_r1j3c_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c1un4:
	jmp *-16(%r13)
_c1un0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealFracRatio1_entry, .-GHC.Real.$fRealFracRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:17.229861408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio1_info
.type GHC.Real.$fRealFracRatio1_info, @object
GHC.Real.$fRealFracRatio1_info:
	.quad	GHC.Real.$fRealFracRatio1_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+712


==================== Asm code ====================
2018-03-16 15:56:17.230474376 UTC

.section .text
.align 8
_c1un1:
_c1un1:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c1un1, .-_c1un1


==================== Asm code ====================
2018-03-16 15:56:17.231024459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1un1_info:
	.quad	_c1un1
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+712


==================== Asm code ====================
2018-03-16 15:56:17.24990672 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$dmround_closure
.type GHC.Real.$dmround_closure, @object
GHC.Real.$dmround_closure:
	.quad	GHC.Real.$dmround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.250766361 UTC

.section .text
.align 8
ds_s1ss0_entry:
_c1unt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1unu
_c1unv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.properFraction_entry
_c1unu:
	jmp *-16(%r13)
	.size ds_s1ss0_entry, .-ds_s1ss0_entry


==================== Asm code ====================
2018-03-16 15:56:17.251477538 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1ss0_info:
	.quad	ds_s1ss0_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.252200969 UTC

.section .text
.align 8
$dNum_s1ss4_entry:
_c1unM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1unN
_c1unO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1unN:
	jmp *-16(%r13)
	.size $dNum_s1ss4_entry, .-$dNum_s1ss4_entry


==================== Asm code ====================
2018-03-16 15:56:17.252846546 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1ss4_info:
	.quad	$dNum_s1ss4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.253691722 UTC

.section .text
.align 8
sat_s1ssc_entry:
_c1uo4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uo5
_c1uo6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uo2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c1uo5:
	jmp *-16(%r13)
	.size sat_s1ssc_entry, .-sat_s1ssc_entry


==================== Asm code ====================
2018-03-16 15:56:17.255037897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssc_info:
	.quad	sat_s1ssc_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+720


==================== Asm code ====================
2018-03-16 15:56:17.25575652 UTC

.section .text
.align 8
_c1uo2:
_c1uo2:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl3_r1j3b_closure+1(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.fromRational_entry
	.size _c1uo2, .-_c1uo2


==================== Asm code ====================
2018-03-16 15:56:17.25633243 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uo2_info:
	.quad	_c1uo2
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+720


==================== Asm code ====================
2018-03-16 15:56:17.257039728 UTC

.section .text
.align 8
sat_s1ssa_entry:
_c1uoe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uof
_c1uog:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
_c1uof:
	jmp *-16(%r13)
	.size sat_s1ssa_entry, .-sat_s1ssa_entry


==================== Asm code ====================
2018-03-16 15:56:17.257707238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssa_info:
	.quad	sat_s1ssa_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.258556149 UTC

.section .text
.align 8
sat_s1ssd_entry:
_c1uoh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uoi
_c1uoj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1uol
_c1uok:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1ssc_info(%rip),%rdx
	movq %rdx,-48(%r12)
	movq %rax,-32(%r12)
	leaq sat_s1ssa_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -48(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1uol:
	movq $56,904(%r13)
_c1uoi:
	jmp *-16(%r13)
	.size sat_s1ssd_entry, .-sat_s1ssd_entry


==================== Asm code ====================
2018-03-16 15:56:17.259292524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssd_info:
	.quad	sat_s1ssd_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+720


==================== Asm code ====================
2018-03-16 15:56:17.26006686 UTC

.section .text
.align 8
ds1_s1ss9_entry:
_c1uom:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uon
_c1uoo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1uoq
_c1uop:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1ssd_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rcx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
_c1uoq:
	movq $40,904(%r13)
_c1uon:
	jmp *-16(%r13)
	.size ds1_s1ss9_entry, .-ds1_s1ss9_entry


==================== Asm code ====================
2018-03-16 15:56:17.260780497 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s1ss9_info:
	.quad	ds1_s1ss9_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+720


==================== Asm code ====================
2018-03-16 15:56:17.261525093 UTC

.section .text
.align 8
sat_s1ssi_entry:
_c1uoA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uoB
_c1uoC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uoB:
	jmp *-16(%r13)
	.size sat_s1ssi_entry, .-sat_s1ssi_entry


==================== Asm code ====================
2018-03-16 15:56:17.262172362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssi_info:
	.quad	sat_s1ssi_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.262938829 UTC

.section .text
.align 8
sat_s1ssj_entry:
_c1uoD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uoE
_c1uoF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uoH
_c1uoG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s1ssi_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1uoH:
	movq $24,904(%r13)
_c1uoE:
	jmp *-16(%r13)
	.size sat_s1ssj_entry, .-sat_s1ssj_entry


==================== Asm code ====================
2018-03-16 15:56:17.263654682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssj_info:
	.quad	sat_s1ssj_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.26438032 UTC

.section .text
.align 8
sat_s1sss_entry:
_c1uoQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uoR
_c1uoS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uoR:
	jmp *-16(%r13)
	.size sat_s1sss_entry, .-sat_s1sss_entry


==================== Asm code ====================
2018-03-16 15:56:17.26501189 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sss_info:
	.quad	sat_s1sss_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.265790222 UTC

.section .text
.align 8
sat_s1sso_entry:
_c1upa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1upb
_c1upc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1upb:
	jmp *-16(%r13)
	.size sat_s1sso_entry, .-sat_s1sso_entry


==================== Asm code ====================
2018-03-16 15:56:17.266416644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sso_info:
	.quad	sat_s1sso_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.26711346 UTC

.section .text
.align 8
sat_s1ssq_entry:
_c1upl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1upm
_c1upn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1upm:
	jmp *-16(%r13)
	.size sat_s1ssq_entry, .-sat_s1ssq_entry


==================== Asm code ====================
2018-03-16 15:56:17.267779965 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssq_info:
	.quad	sat_s1ssq_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.268527775 UTC

.section .text
.align 8
sat_s1ssr_entry:
_c1upu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1upv
_c1upw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1upv:
	jmp *-16(%r13)
	.size sat_s1ssr_entry, .-sat_s1ssr_entry


==================== Asm code ====================
2018-03-16 15:56:17.269160618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssr_info:
	.quad	sat_s1ssr_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.269940817 UTC

.section .text
.align 8
sat_s1ssu_entry:
_c1upF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1upG
_c1upH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1upG:
	jmp *-16(%r13)
	.size sat_s1ssu_entry, .-sat_s1ssu_entry


==================== Asm code ====================
2018-03-16 15:56:17.270622049 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssu_info:
	.quad	sat_s1ssu_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.271489628 UTC

.section .text
.align 8
.globl GHC.Real.$dmround_entry
.type GHC.Real.$dmround_entry, @object
GHC.Real.$dmround_entry:
_c1upI:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c1upJ
_c1upK:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1upM
_c1upL:
	leaq ds_s1ss0_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq block_c1unw_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	leaq -32(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1RealFrac_entry
_c1upM:
	movq $40,904(%r13)
_c1upJ:
	leaq GHC.Real.$dmround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$dmround_entry, .-GHC.Real.$dmround_entry


==================== Asm code ====================
2018-03-16 15:56:17.272177707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$dmround_info
.type GHC.Real.$dmround_info, @object
GHC.Real.$dmround_info:
	.quad	GHC.Real.$dmround_entry
	.quad	0
	.quad	64457773961707534
	.quad	12884901911
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.272848123 UTC

.section .text
.align 8
_c1unw:
_c1unw:
	leaq block_c1unA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
	.size _c1unw, .-_c1unw


==================== Asm code ====================
2018-03-16 15:56:17.27345196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1unw_info:
	.quad	_c1unw
	.quad	3
	.quad	46443375452225566
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.274080753 UTC

.section .text
.align 8
_c1unA:
_c1unA:
	leaq block_c1unE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1unA, .-_c1unA


==================== Asm code ====================
2018-03-16 15:56:17.274690051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1unA_info:
	.quad	_c1unA
	.quad	4
	.quad	46443375452225566
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.275583768 UTC

.section .text
.align 8
_c1unE:
_c1unE:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c1upR
_c1upQ:
	leaq $dNum_s1ss4_info(%rip),%rax
	movq %rax,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-112(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	leaq ds1_s1ss9_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-64(%r12)
	leaq -128(%r12),%rcx
	movq %rcx,-56(%r12)
	leaq -104(%r12),%rdx
	movq %rdx,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	leaq sat_s1ssj_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c1uoI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -80(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rsi
	movq %rsi,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -40(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,16(%rbp)
	movq %rdx,24(%rbp)
	movq %rcx,32(%rbp)
	addq $-40,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c1upR:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1unE, .-_c1unE


==================== Asm code ====================
2018-03-16 15:56:17.276405654 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1unE_info:
	.quad	_c1unE
	.quad	5
	.quad	46443375452225566
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.277220096 UTC

.section .text
.align 8
_c1uoI:
_c1uoI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1upT
_u1uqP:
	addq $16,%rbp
	jmp _c1uqJ
_c1upW:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1upT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1upW
_c1upV:
	leaq sat_s1sss_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1upx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1uoI, .-_c1uoI


==================== Asm code ====================
2018-03-16 15:56:17.277958117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uoI_info:
	.quad	_c1uoI
	.quad	7
	.quad	37436176197484574
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.278795516 UTC

.section .text
.align 8
_c1upx:
_c1upx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1uqd
_c1uqv:
	leaq block_c1uqt_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.even_entry
_c1uqg:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1uqd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uqg
_c1uqf:
	leaq sat_s1ssu_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	leaq block_c1uqb_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1upx, .-_c1upx


==================== Asm code ====================
2018-03-16 15:56:17.2795872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1upx_info:
	.quad	_c1upx
	.quad	7
	.quad	37436176197484574
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.280227453 UTC

.section .text
.align 8
_c1uqb:
_c1uqb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uqm
_u1uqS:
	addq $8,%rbp
	jmp _s1ssl
_c1uqm:
	leaq GHC.Real.$fRealFracRatio1_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1uqb, .-_c1uqb


==================== Asm code ====================
2018-03-16 15:56:17.280850303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uqb_info:
	.quad	_c1uqb
	.quad	262
	.quad	36310276290641950
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.281777465 UTC

.section .text
.align 8
_c1uqt:
_c1uqt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1uqQ
_u1uqR:
	addq $8,%rbp
	jmp _c1uqJ
_u1uqQ:
	addq $8,%rbp
	jmp _s1ssl
	.size _c1uqt, .-_c1uqt


==================== Asm code ====================
2018-03-16 15:56:17.282417977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uqt_info:
	.quad	_c1uqt
	.quad	262
	.quad	281479271677982
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.283117176 UTC

.section .text
.align 8
_s1ssl:
_s1ssl:
	leaq block_c1uoY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1ssl, .-_s1ssl


==================== Asm code ====================
2018-03-16 15:56:17.283757669 UTC

.section .text
.align 8
_c1uoY:
_c1uoY:
	leaq block_c1up2_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1uoY, .-_c1uoY


==================== Asm code ====================
2018-03-16 15:56:17.284343809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uoY_info:
	.quad	_c1uoY
	.quad	2310
	.quad	281479271677982
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.285651596 UTC

.section .text
.align 8
_c1up2:
_c1up2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uq1
_c1uq0:
	leaq sat_s1sso_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1upd_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,48(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c1uq1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1up2, .-_c1up2


==================== Asm code ====================
2018-03-16 15:56:17.286415898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1up2_info:
	.quad	_c1up2
	.quad	2310
	.quad	281479271677982
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.287298458 UTC

.section .text
.align 8
_c1upd:
_c1upd:
	movq 8(%rbp),%rax
	movq 48(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1uq3
_c1uq7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uqa
_c1uq9:
	leaq sat_s1ssr_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1uqa:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1uq3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uqa
_c1uq5:
	leaq sat_s1ssq_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
	.size _c1upd, .-_c1upd


==================== Asm code ====================
2018-03-16 15:56:17.288063238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1upd_info:
	.quad	_c1upd
	.quad	1926
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.288639216 UTC

.section .text
.align 8
_c1uqJ:
_c1uqJ:
	movq (%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1uqJ, .-_c1uqJ


==================== Asm code ====================
2018-03-16 15:56:17.297618476 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFrom_closure
.type GHC.Real.integralEnumFrom_closure, @object
GHC.Real.integralEnumFrom_closure:
	.quad	GHC.Real.integralEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.29830251 UTC

.section .text
.align 8
f_s1ssA_entry:
_c1uua:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1ssA_entry, .-f_s1ssA_entry


==================== Asm code ====================
2018-03-16 15:56:17.298876968 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1ssA_info:
	.quad	f_s1ssA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.299591342 UTC

.section .text
.align 8
f1_s1ssB_entry:
_c1uuh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uui
_c1uuj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uui:
	jmp *-16(%r13)
	.size f1_s1ssB_entry, .-f1_s1ssB_entry


==================== Asm code ====================
2018-03-16 15:56:17.300239979 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1ssB_info:
	.quad	f1_s1ssB_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.300950339 UTC

.section .text
.align 8
sat_s1ssD_entry:
_c1uuo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uup
_c1uuq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.maxBound_entry@gotpcrel(%rip)
_c1uup:
	jmp *-16(%r13)
	.size sat_s1ssD_entry, .-sat_s1ssD_entry


==================== Asm code ====================
2018-03-16 15:56:17.301609686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssD_info:
	.quad	sat_s1ssD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.302334175 UTC

.section .text
.align 8
sat_s1ssJ_entry:
_c1uuK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uuL
_c1uuM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uuI_info(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uuL:
	jmp *-16(%r13)
	.size sat_s1ssJ_entry, .-sat_s1ssJ_entry


==================== Asm code ====================
2018-03-16 15:56:17.30292873 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssJ_info:
	.quad	sat_s1ssJ_entry
	.quad	2
	.quad	2203318222866
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.303537884 UTC

.section .text
.align 8
_c1uuI:
_c1uuI:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1ssE_entry
	.size _c1uuI, .-_c1uuI


==================== Asm code ====================
2018-03-16 15:56:17.304085411 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uuI_info:
	.quad	_c1uuI
	.quad	1
	.quad	2203318222878
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.304793247 UTC

.section .text
.align 8
sat_s1ssH_entry:
_c1uuU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uuV
_c1uuW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uuV:
	jmp *-16(%r13)
	.size sat_s1ssH_entry, .-sat_s1ssH_entry


==================== Asm code ====================
2018-03-16 15:56:17.305890427 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssH_info:
	.quad	sat_s1ssH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.30660402 UTC

.section .text
.align 8
go_s1ssE_entry:
_c1uv0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uv1
_c1uv2:
	leaq block_c1uuA_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c1uv1:
	jmp *-8(%r13)
	.size go_s1ssE_entry, .-go_s1ssE_entry


==================== Asm code ====================
2018-03-16 15:56:17.307247223 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1ssE_info:
	.quad	go_s1ssE_entry
	.quad	2
	.quad	2203318222859
	.quad	4294967301
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.308124111 UTC

.section .text
.align 8
_c1uuA:
_c1uuA:
	cmpq $1,%rbx
	je _c1uuZ
_c1uuY:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1uv6
_c1uv5:
	leaq sat_s1ssJ_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1ssH_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uv6:
	movq $88,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uuZ:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uuA, .-_c1uuA


==================== Asm code ====================
2018-03-16 15:56:17.308870384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uuA_info:
	.quad	_c1uuA
	.quad	3
	.quad	2203318222878
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.309478544 UTC

.section .data.rel.ro
.align 8
.align 1
u1uvn_srtd:
	.quad	S1sVz_srt+480
	.quad	34
	.quad	8589935105


==================== Asm code ====================
2018-03-16 15:56:17.310340535 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFrom_entry
.type GHC.Real.integralEnumFrom_entry, @object
GHC.Real.integralEnumFrom_entry:
_c1uva:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uvc
_c1uvd:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1uvf
_c1uve:
	leaq f_s1ssA_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq f1_s1ssB_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq sat_s1ssD_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,(%r12)
	leaq block_c1uur_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	leaq -16(%r12),%rbx
	movq %rbx,-40(%rbp)
	leaq -40(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1uvf:
	movq $72,904(%r13)
_c1uvc:
	leaq GHC.Real.integralEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFrom_entry, .-GHC.Real.integralEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:17.311078993 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFrom_info
.type GHC.Real.integralEnumFrom_info, @object
GHC.Real.integralEnumFrom_info:
	.quad	GHC.Real.integralEnumFrom_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1uvn_srtd


==================== Asm code ====================
2018-03-16 15:56:17.31188165 UTC

.section .text
.align 8
_c1uur:
_c1uur:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uvi
_c1uvh:
	leaq go_s1ssE_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%rax
	leaq block_c1uvb_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Real.toInteger_entry
_c1uvi:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uur, .-_c1uur


==================== Asm code ====================
2018-03-16 15:56:17.312567601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uur_info:
	.quad	_c1uur
	.quad	3
	.quad	2203318222878
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.313218821 UTC

.section .text
.align 8
_c1uvb:
_c1uvb:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1ssE_entry
	.size _c1uvb, .-_c1uvb


==================== Asm code ====================
2018-03-16 15:56:17.313856596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uvb_info:
	.quad	_c1uvb
	.quad	1
	.quad	2203318222878
	.quad	S1sVz_srt+480


==================== Asm code ====================
2018-03-16 15:56:17.341997854 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromThen_closure
.type GHC.Real.integralEnumFromThen_closure, @object
GHC.Real.integralEnumFromThen_closure:
	.quad	GHC.Real.integralEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.342734833 UTC

.section .text
.align 8
f_s1ssT_entry:
_c1uwZ:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1ssT_entry, .-f_s1ssT_entry


==================== Asm code ====================
2018-03-16 15:56:17.343325288 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1ssT_info:
	.quad	f_s1ssT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.344014772 UTC

.section .text
.align 8
f1_s1ssU_entry:
_c1ux6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ux7
_c1ux8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1ux7:
	jmp *-16(%r13)
	.size f1_s1ssU_entry, .-f1_s1ssU_entry


==================== Asm code ====================
2018-03-16 15:56:17.344626684 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1ssU_info:
	.quad	f1_s1ssU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.345396081 UTC

.section .text
.align 8
sat_s1ssX_entry:
_c1uxh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uxi
_c1uxj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.minBound_entry@gotpcrel(%rip)
_c1uxi:
	jmp *-16(%r13)
	.size sat_s1ssX_entry, .-sat_s1ssX_entry


==================== Asm code ====================
2018-03-16 15:56:17.346099827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1ssX_info:
	.quad	sat_s1ssX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.346854183 UTC

.section .text
.align 8
sat_s1st3_entry:
_c1uxD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uxE
_c1uxF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uxB_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uxE:
	jmp *-16(%r13)
	.size sat_s1st3_entry, .-sat_s1st3_entry


==================== Asm code ====================
2018-03-16 15:56:17.347533247 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1st3_info:
	.quad	sat_s1st3_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.34820104 UTC

.section .text
.align 8
_c1uxB:
_c1uxB:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1ssY_entry
	.size _c1uxB, .-_c1uxB


==================== Asm code ====================
2018-03-16 15:56:17.348778783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uxB_info:
	.quad	_c1uxB
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.349548003 UTC

.section .text
.align 8
sat_s1st1_entry:
_c1uxN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uxO
_c1uxP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uxO:
	jmp *-16(%r13)
	.size sat_s1st1_entry, .-sat_s1st1_entry


==================== Asm code ====================
2018-03-16 15:56:17.350253487 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1st1_info:
	.quad	sat_s1st1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.351686032 UTC

.section .text
.align 8
go_s1ssY_entry:
_c1uxT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uxU
_c1uxV:
	leaq block_c1uxt_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c1uxU:
	jmp *-8(%r13)
	.size go_s1ssY_entry, .-go_s1ssY_entry


==================== Asm code ====================
2018-03-16 15:56:17.352421816 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1ssY_info:
	.quad	go_s1ssY_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.353330456 UTC

.section .text
.align 8
_c1uxt:
_c1uxt:
	cmpq $1,%rbx
	je _c1uxS
_c1uxR:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uxZ
_c1uxY:
	leaq sat_s1st3_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1st1_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uxZ:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uxS:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uxt, .-_c1uxt


==================== Asm code ====================
2018-03-16 15:56:17.354065557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uxt_info:
	.quad	_c1uxt
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.354782887 UTC

.section .text
.align 8
sat_s1st5_entry:
_c1uy9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uya
_c1uyb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.minBound_entry@gotpcrel(%rip)
_c1uya:
	jmp *-16(%r13)
	.size sat_s1st5_entry, .-sat_s1st5_entry


==================== Asm code ====================
2018-03-16 15:56:17.355393076 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1st5_info:
	.quad	sat_s1st5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.35612026 UTC

.section .text
.align 8
sat_s1stb_entry:
_c1uyv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uyw
_c1uyx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uyt_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uyw:
	jmp *-16(%r13)
	.size sat_s1stb_entry, .-sat_s1stb_entry


==================== Asm code ====================
2018-03-16 15:56:17.356755515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stb_info:
	.quad	sat_s1stb_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.357444051 UTC

.section .text
.align 8
_c1uyt:
_c1uyt:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1st6_entry
	.size _c1uyt, .-_c1uyt


==================== Asm code ====================
2018-03-16 15:56:17.358025026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uyt_info:
	.quad	_c1uyt
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.358745758 UTC

.section .text
.align 8
sat_s1st9_entry:
_c1uyF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uyG
_c1uyH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uyG:
	jmp *-16(%r13)
	.size sat_s1st9_entry, .-sat_s1st9_entry


==================== Asm code ====================
2018-03-16 15:56:17.359393729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1st9_info:
	.quad	sat_s1st9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.360132285 UTC

.section .text
.align 8
go_s1st6_entry:
_c1uyL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uyM
_c1uyN:
	leaq block_c1uyl_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c1uyM:
	jmp *-8(%r13)
	.size go_s1st6_entry, .-go_s1st6_entry


==================== Asm code ====================
2018-03-16 15:56:17.360784626 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1st6_info:
	.quad	go_s1st6_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.361691117 UTC

.section .text
.align 8
_c1uyl:
_c1uyl:
	cmpq $1,%rbx
	je _c1uyK
_c1uyJ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uyR
_c1uyQ:
	leaq sat_s1stb_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1st9_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uyR:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uyK:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uyl, .-_c1uyl


==================== Asm code ====================
2018-03-16 15:56:17.362464754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uyl_info:
	.quad	_c1uyl
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.363077066 UTC

.section .text
.align 8
f_s1std_entry:
_c1uz5:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1std_entry, .-f_s1std_entry


==================== Asm code ====================
2018-03-16 15:56:17.363656759 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1std_info:
	.quad	f_s1std_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.364358917 UTC

.section .text
.align 8
f1_s1ste_entry:
_c1uzc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uzd
_c1uze:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uzd:
	jmp *-16(%r13)
	.size f1_s1ste_entry, .-f1_s1ste_entry


==================== Asm code ====================
2018-03-16 15:56:17.364979836 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1ste_info:
	.quad	f1_s1ste_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.365827121 UTC

.section .text
.align 8
sat_s1sth_entry:
_c1uzn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uzo
_c1uzp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.maxBound_entry@gotpcrel(%rip)
_c1uzo:
	jmp *-16(%r13)
	.size sat_s1sth_entry, .-sat_s1sth_entry


==================== Asm code ====================
2018-03-16 15:56:17.366455564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sth_info:
	.quad	sat_s1sth_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.367174913 UTC

.section .text
.align 8
sat_s1stn_entry:
_c1uzJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uzK
_c1uzL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uzH_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uzK:
	jmp *-16(%r13)
	.size sat_s1stn_entry, .-sat_s1stn_entry


==================== Asm code ====================
2018-03-16 15:56:17.367825955 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stn_info:
	.quad	sat_s1stn_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.368447358 UTC

.section .text
.align 8
_c1uzH:
_c1uzH:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1sti_entry
	.size _c1uzH, .-_c1uzH


==================== Asm code ====================
2018-03-16 15:56:17.368988494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uzH_info:
	.quad	_c1uzH
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.369745662 UTC

.section .text
.align 8
sat_s1stl_entry:
_c1uzT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uzU
_c1uzV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uzU:
	jmp *-16(%r13)
	.size sat_s1stl_entry, .-sat_s1stl_entry


==================== Asm code ====================
2018-03-16 15:56:17.370397717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stl_info:
	.quad	sat_s1stl_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.371134699 UTC

.section .text
.align 8
go_s1sti_entry:
_c1uzZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uA0
_c1uA1:
	leaq block_c1uzz_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c1uA0:
	jmp *-8(%r13)
	.size go_s1sti_entry, .-go_s1sti_entry


==================== Asm code ====================
2018-03-16 15:56:17.371753746 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1sti_info:
	.quad	go_s1sti_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.372660018 UTC

.section .text
.align 8
_c1uzz:
_c1uzz:
	cmpq $1,%rbx
	je _c1uzY
_c1uzX:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uA5
_c1uA4:
	leaq sat_s1stn_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1stl_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uA5:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uzY:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uzz, .-_c1uzz


==================== Asm code ====================
2018-03-16 15:56:17.373490006 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uzz_info:
	.quad	_c1uzz
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.374191245 UTC

.section .text
.align 8
sat_s1stp_entry:
_c1uAf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uAg
_c1uAh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Enum.maxBound_entry@gotpcrel(%rip)
_c1uAg:
	jmp *-16(%r13)
	.size sat_s1stp_entry, .-sat_s1stp_entry


==================== Asm code ====================
2018-03-16 15:56:17.374805177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stp_info:
	.quad	sat_s1stp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.375523168 UTC

.section .text
.align 8
sat_s1stv_entry:
_c1uAB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uAC
_c1uAD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uAz_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uAC:
	jmp *-16(%r13)
	.size sat_s1stv_entry, .-sat_s1stv_entry


==================== Asm code ====================
2018-03-16 15:56:17.376186772 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stv_info:
	.quad	sat_s1stv_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.376842965 UTC

.section .text
.align 8
_c1uAz:
_c1uAz:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1stq_entry
	.size _c1uAz, .-_c1uAz


==================== Asm code ====================
2018-03-16 15:56:17.377482728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uAz_info:
	.quad	_c1uAz
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.378216606 UTC

.section .text
.align 8
sat_s1stt_entry:
_c1uAL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uAM
_c1uAN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uAM:
	jmp *-16(%r13)
	.size sat_s1stt_entry, .-sat_s1stt_entry


==================== Asm code ====================
2018-03-16 15:56:17.378903927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stt_info:
	.quad	sat_s1stt_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.379680131 UTC

.section .text
.align 8
go_s1stq_entry:
_c1uAR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uAS
_c1uAT:
	leaq block_c1uAr_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c1uAS:
	jmp *-8(%r13)
	.size go_s1stq_entry, .-go_s1stq_entry


==================== Asm code ====================
2018-03-16 15:56:17.380394993 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1stq_info:
	.quad	go_s1stq_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.382379092 UTC

.section .text
.align 8
_c1uAr:
_c1uAr:
	cmpq $1,%rbx
	je _c1uAQ
_c1uAP:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uAX
_c1uAW:
	leaq sat_s1stv_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1stt_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uAX:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uAQ:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uAr, .-_c1uAr


==================== Asm code ====================
2018-03-16 15:56:17.383255336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uAr_info:
	.quad	_c1uAr
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.383829799 UTC

.section .data.rel.ro
.align 8
.align 1
u1uBL_srtd:
	.quad	S1sVz_srt+456
	.quad	39
	.quad	412585295873


==================== Asm code ====================
2018-03-16 15:56:17.384611579 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromThen_entry
.type GHC.Real.integralEnumFromThen_entry, @object
GHC.Real.integralEnumFromThen_entry:
_c1uB1:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uB2
_c1uB3:
	leaq block_c1uwF_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1uB2:
	leaq GHC.Real.integralEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromThen_entry, .-GHC.Real.integralEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:17.385371347 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromThen_info
.type GHC.Real.integralEnumFromThen_info, @object
GHC.Real.integralEnumFromThen_info:
	.quad	GHC.Real.integralEnumFromThen_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1uBL_srtd


==================== Asm code ====================
2018-03-16 15:56:17.385946954 UTC

.section .data.rel.ro
.align 8
.align 1
u1uBM_srtd:
	.quad	S1sVz_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:17.386611056 UTC

.section .text
.align 8
_c1uwF:
_c1uwF:
	leaq block_c1uwJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1uwF, .-_c1uwF


==================== Asm code ====================
2018-03-16 15:56:17.387225382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uwF_info:
	.quad	_c1uwF
	.quad	3
	.quad	-4294967266
	.quad	u1uBM_srtd


==================== Asm code ====================
2018-03-16 15:56:17.387757429 UTC

.section .data.rel.ro
.align 8
.align 1
u1uBN_srtd:
	.quad	S1sVz_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:17.38840454 UTC

.section .text
.align 8
_c1uwJ:
_c1uwJ:
	leaq block_c1uwN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.geInteger#_entry@gotpcrel(%rip)
	.size _c1uwJ, .-_c1uwJ


==================== Asm code ====================
2018-03-16 15:56:17.38901878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uwJ_info:
	.quad	_c1uwJ
	.quad	3
	.quad	-4294967266
	.quad	u1uBN_srtd


==================== Asm code ====================
2018-03-16 15:56:17.389587532 UTC

.section .data.rel.ro
.align 8
.align 1
u1uBO_srtd:
	.quad	S1sVz_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:17.390315134 UTC

.section .text
.align 8
_c1uwN:
_c1uwN:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq $1,%rbx
	je _c1uBs
_c1uB8:
	leaq block_c1uwR_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.minusInteger_entry@gotpcrel(%rip)
_c1uBs:
	leaq block_c1uyX_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.minusInteger_entry@gotpcrel(%rip)
	.size _c1uwN, .-_c1uwN


==================== Asm code ====================
2018-03-16 15:56:17.390965519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uwN_info:
	.quad	_c1uwN
	.quad	4
	.quad	-4294967266
	.quad	u1uBO_srtd


==================== Asm code ====================
2018-03-16 15:56:17.391753003 UTC

.section .text
.align 8
_c1uyX:
_c1uyX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1uBv
_c1uBu:
	leaq f_s1std_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	leaq f1_s1ste_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1uzf_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.geInteger#_entry@gotpcrel(%rip)
_c1uBv:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uyX, .-_c1uyX


==================== Asm code ====================
2018-03-16 15:56:17.392423564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uyX_info:
	.quad	_c1uyX
	.quad	516
	.quad	2203318222878
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.393531242 UTC

.section .text
.align 8
_c1uzf:
_c1uzf:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c1uBE
_c1uBx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uBH
_c1uBz:
	leaq sat_s1sth_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c1uzq_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1uBH:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uBE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uBH
_c1uBG:
	leaq sat_s1stp_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c1uAi_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1uzf, .-_c1uzf


==================== Asm code ====================
2018-03-16 15:56:17.394333484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uzf_info:
	.quad	_c1uzf
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.395042346 UTC

.section .text
.align 8
_c1uAi:
_c1uAi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uBK
_c1uBJ:
	leaq go_s1stq_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1stq_entry
_c1uBK:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uAi, .-_c1uAi


==================== Asm code ====================
2018-03-16 15:56:17.395706901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uAi_info:
	.quad	_c1uAi
	.quad	773
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.396460522 UTC

.section .text
.align 8
_c1uzq:
_c1uzq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uBD
_c1uBC:
	leaq go_s1sti_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1sti_entry
_c1uBD:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uzq, .-_c1uzq


==================== Asm code ====================
2018-03-16 15:56:17.397130333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uzq_info:
	.quad	_c1uzq
	.quad	773
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.397962128 UTC

.section .text
.align 8
_c1uwR:
_c1uwR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1uBb
_c1uBa:
	leaq f_s1ssT_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	leaq f1_s1ssU_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1ux9_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.geInteger#_entry@gotpcrel(%rip)
_c1uBb:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uwR, .-_c1uwR


==================== Asm code ====================
2018-03-16 15:56:17.398620608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uwR_info:
	.quad	_c1uwR
	.quad	516
	.quad	2203318222878
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.399485397 UTC

.section .text
.align 8
_c1ux9:
_c1ux9:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c1uBk
_c1uBd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uBn
_c1uBf:
	leaq sat_s1ssX_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c1uxk_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1uBn:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uBk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uBn
_c1uBm:
	leaq sat_s1st5_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c1uyc_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1ux9, .-_c1ux9


==================== Asm code ====================
2018-03-16 15:56:17.400288341 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ux9_info:
	.quad	_c1ux9
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.400993045 UTC

.section .text
.align 8
_c1uyc:
_c1uyc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uBq
_c1uBp:
	leaq go_s1st6_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1st6_entry
_c1uBq:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uyc, .-_c1uyc


==================== Asm code ====================
2018-03-16 15:56:17.401700637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uyc_info:
	.quad	_c1uyc
	.quad	773
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.402420661 UTC

.section .text
.align 8
_c1uxk:
_c1uxk:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uBj
_c1uBi:
	leaq go_s1ssY_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1ssY_entry
_c1uBj:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uxk, .-_c1uxk


==================== Asm code ====================
2018-03-16 15:56:17.403062548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uxk_info:
	.quad	_c1uxk
	.quad	773
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.411500443 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromTo_closure
.type GHC.Real.integralEnumFromTo_closure, @object
GHC.Real.integralEnumFromTo_closure:
	.quad	GHC.Real.integralEnumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.412251363 UTC

.section .text
.align 8
f_s1stz_entry:
_c1uGr:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1stz_entry, .-f_s1stz_entry


==================== Asm code ====================
2018-03-16 15:56:17.412851122 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1stz_info:
	.quad	f_s1stz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.413694847 UTC

.section .text
.align 8
f1_s1stA_entry:
_c1uGy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uGz
_c1uGA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uGz:
	jmp *-16(%r13)
	.size f1_s1stA_entry, .-f1_s1stA_entry


==================== Asm code ====================
2018-03-16 15:56:17.414997422 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1stA_info:
	.quad	f1_s1stA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.415780459 UTC

.section .text
.align 8
sat_s1stH_entry:
_c1uGU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uGV
_c1uGW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uGS_info(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uGV:
	jmp *-16(%r13)
	.size sat_s1stH_entry, .-sat_s1stH_entry


==================== Asm code ====================
2018-03-16 15:56:17.416460801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stH_info:
	.quad	sat_s1stH_entry
	.quad	2
	.quad	144115192370823186
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.417060295 UTC

.section .text
.align 8
_c1uGS:
_c1uGS:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1stC_entry
	.size _c1uGS, .-_c1uGS


==================== Asm code ====================
2018-03-16 15:56:17.417669229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uGS_info:
	.quad	_c1uGS
	.quad	1
	.quad	144115192370823198
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.418395956 UTC

.section .text
.align 8
sat_s1stF_entry:
_c1uH4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uH5
_c1uH6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uH5:
	jmp *-16(%r13)
	.size sat_s1stF_entry, .-sat_s1stF_entry


==================== Asm code ====================
2018-03-16 15:56:17.419051553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stF_info:
	.quad	sat_s1stF_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.419775284 UTC

.section .text
.align 8
go_s1stC_entry:
_c1uHa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uHb
_c1uHc:
	leaq block_c1uGK_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c1uHb:
	jmp *-8(%r13)
	.size go_s1stC_entry, .-go_s1stC_entry


==================== Asm code ====================
2018-03-16 15:56:17.420441732 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1stC_info:
	.quad	go_s1stC_entry
	.quad	2
	.quad	144115192370823179
	.quad	4294967301
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.421806158 UTC

.section .text
.align 8
_c1uGK:
_c1uGK:
	cmpq $1,%rbx
	je _c1uH9
_c1uH8:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1uHg
_c1uHf:
	leaq sat_s1stH_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1stF_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uHg:
	movq $88,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uH9:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uGK, .-_c1uGK


==================== Asm code ====================
2018-03-16 15:56:17.422558168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uGK_info:
	.quad	_c1uGK
	.quad	3
	.quad	144115192370823198
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.423441264 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromTo_entry
.type GHC.Real.integralEnumFromTo_entry, @object
GHC.Real.integralEnumFromTo_entry:
_c1uHk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uHm
_c1uHn:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1uHp
_c1uHo:
	leaq f_s1stz_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq f1_s1stA_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1uGB_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq %rdi,-40(%rbp)
	leaq -16(%r12),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1uHp:
	movq $48,904(%r13)
_c1uHm:
	leaq GHC.Real.integralEnumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromTo_entry, .-GHC.Real.integralEnumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.42421416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromTo_info
.type GHC.Real.integralEnumFromTo_info, @object
GHC.Real.integralEnumFromTo_info:
	.quad	GHC.Real.integralEnumFromTo_entry
	.quad	0
	.quad	720575944674246670
	.quad	12884901911
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.424971389 UTC

.section .text
.align 8
_c1uGB:
_c1uGB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1uHs
_c1uHr:
	leaq go_s1stC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%rax
	leaq block_c1uHl_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -15(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Real.toInteger_entry
_c1uHs:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uGB, .-_c1uGB


==================== Asm code ====================
2018-03-16 15:56:17.425732255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uGB_info:
	.quad	_c1uGB
	.quad	3
	.quad	144115192370823198
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.426357805 UTC

.section .text
.align 8
_c1uHl:
_c1uHl:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1stC_entry
	.size _c1uHl, .-_c1uHl


==================== Asm code ====================
2018-03-16 15:56:17.426881983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uHl_info:
	.quad	_c1uHl
	.quad	1
	.quad	144115192370823198
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.449607814 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.integralEnumFromThenTo_closure
.type GHC.Real.integralEnumFromThenTo_closure, @object
GHC.Real.integralEnumFromThenTo_closure:
	.quad	GHC.Real.integralEnumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.450605721 UTC

.section .text
.align 8
f_s1stQ_entry:
_c1uIW:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size f_s1stQ_entry, .-f_s1stQ_entry


==================== Asm code ====================
2018-03-16 15:56:17.45150056 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1stQ_info:
	.quad	f_s1stQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.45248726 UTC

.section .text
.align 8
f1_s1stR_entry:
_c1uJ3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uJ4
_c1uJ5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uJ4:
	jmp *-16(%r13)
	.size f1_s1stR_entry, .-f1_s1stR_entry


==================== Asm code ====================
2018-03-16 15:56:17.453522878 UTC

.section .data.rel.ro
.align 8
.align 1
f1_s1stR_info:
	.quad	f1_s1stR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.454571663 UTC

.section .text
.align 8
sat_s1stZ_entry:
_c1uJt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uJu
_c1uJv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uJr_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uJu:
	jmp *-16(%r13)
	.size sat_s1stZ_entry, .-sat_s1stZ_entry


==================== Asm code ====================
2018-03-16 15:56:17.455529647 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stZ_info:
	.quad	sat_s1stZ_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.456456564 UTC

.section .text
.align 8
_c1uJr:
_c1uJr:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1stU_entry
	.size _c1uJr, .-_c1uJr


==================== Asm code ====================
2018-03-16 15:56:17.457396036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uJr_info:
	.quad	_c1uJr
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.459218209 UTC

.section .text
.align 8
sat_s1stX_entry:
_c1uJD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uJE
_c1uJF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uJE:
	jmp *-16(%r13)
	.size sat_s1stX_entry, .-sat_s1stX_entry


==================== Asm code ====================
2018-03-16 15:56:17.460310614 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1stX_info:
	.quad	sat_s1stX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.461382583 UTC

.section .text
.align 8
go_s1stU_entry:
_c1uJJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uJK
_c1uJL:
	leaq block_c1uJj_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c1uJK:
	jmp *-8(%r13)
	.size go_s1stU_entry, .-go_s1stU_entry


==================== Asm code ====================
2018-03-16 15:56:17.462398116 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1stU_info:
	.quad	go_s1stU_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.463519223 UTC

.section .text
.align 8
_c1uJj:
_c1uJj:
	cmpq $1,%rbx
	je _c1uJI
_c1uJH:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uJP
_c1uJO:
	leaq sat_s1stZ_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1stX_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uJP:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uJI:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uJj, .-_c1uJj


==================== Asm code ====================
2018-03-16 15:56:17.464628329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uJj_info:
	.quad	_c1uJj
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.465780499 UTC

.section .text
.align 8
sat_s1su6_entry:
_c1uKe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uKf
_c1uKg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1uKc_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rsi
	movq 32(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c1uKf:
	jmp *-16(%r13)
	.size sat_s1su6_entry, .-sat_s1su6_entry


==================== Asm code ====================
2018-03-16 15:56:17.46681346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1su6_info:
	.quad	sat_s1su6_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.467635804 UTC

.section .text
.align 8
_c1uKc:
_c1uKc:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp go_s1su1_entry
	.size _c1uKc, .-_c1uKc


==================== Asm code ====================
2018-03-16 15:56:17.468420417 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uKc_info:
	.quad	_c1uKc
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.469446185 UTC

.section .text
.align 8
sat_s1su4_entry:
_c1uKo:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uKp
_c1uKq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1uKp:
	jmp *-16(%r13)
	.size sat_s1su4_entry, .-sat_s1su4_entry


==================== Asm code ====================
2018-03-16 15:56:17.470261825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1su4_info:
	.quad	sat_s1su4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.471240028 UTC

.section .text
.align 8
go_s1su1_entry:
_c1uKu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uKv
_c1uKw:
	leaq block_c1uK4_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 15(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c1uKv:
	jmp *-8(%r13)
	.size go_s1su1_entry, .-go_s1su1_entry


==================== Asm code ====================
2018-03-16 15:56:17.47215338 UTC

.section .data.rel.ro
.align 8
.align 1
go_s1su1_info:
	.quad	go_s1su1_entry
	.quad	3
	.quad	4294967304
	.quad	4294967301
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.473395893 UTC

.section .text
.align 8
_c1uK4:
_c1uK4:
	cmpq $1,%rbx
	je _c1uKt
_c1uKs:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1uKA
_c1uKz:
	leaq sat_s1su6_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	leaq sat_s1su4_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uKA:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1uKt:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uK4, .-_c1uK4


==================== Asm code ====================
2018-03-16 15:56:17.474516049 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uK4_info:
	.quad	_c1uK4
	.quad	4
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.47534695 UTC

.section .data.rel.ro
.align 8
.align 1
u1uKX_srtd:
	.quad	S1sVz_srt+456
	.quad	41
	.quad	1237219016705


==================== Asm code ====================
2018-03-16 15:56:17.476369625 UTC

.section .text
.align 8
.globl GHC.Real.integralEnumFromThenTo_entry
.type GHC.Real.integralEnumFromThenTo_entry, @object
GHC.Real.integralEnumFromThenTo_entry:
_c1uKE:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uKF
_c1uKG:
	leaq block_c1uIG_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.toInteger_entry
_c1uKF:
	leaq GHC.Real.integralEnumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.integralEnumFromThenTo_entry, .-GHC.Real.integralEnumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:17.477166381 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.integralEnumFromThenTo_info
.type GHC.Real.integralEnumFromThenTo_info, @object
GHC.Real.integralEnumFromThenTo_info:
	.quad	GHC.Real.integralEnumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1uKX_srtd


==================== Asm code ====================
2018-03-16 15:56:17.477805138 UTC

.section .data.rel.ro
.align 8
.align 1
u1uKY_srtd:
	.quad	S1sVz_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:17.478444246 UTC

.section .text
.align 8
_c1uIG:
_c1uIG:
	leaq block_c1uIK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1uIG, .-_c1uIG


==================== Asm code ====================
2018-03-16 15:56:17.47906591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uIG_info:
	.quad	_c1uIG
	.quad	3
	.quad	-4294967266
	.quad	u1uKY_srtd


==================== Asm code ====================
2018-03-16 15:56:17.47960247 UTC

.section .data.rel.ro
.align 8
.align 1
u1uKZ_srtd:
	.quad	S1sVz_srt+456
	.quad	38
	.quad	137707388929


==================== Asm code ====================
2018-03-16 15:56:17.480252809 UTC

.section .text
.align 8
_c1uIK:
_c1uIK:
	leaq block_c1uIO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.minusInteger_entry@gotpcrel(%rip)
	.size _c1uIK, .-_c1uIK


==================== Asm code ====================
2018-03-16 15:56:17.480788984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uIK_info:
	.quad	_c1uIK
	.quad	3
	.quad	-4294967266
	.quad	u1uKZ_srtd


==================== Asm code ====================
2018-03-16 15:56:17.481586577 UTC

.section .text
.align 8
_c1uIO:
_c1uIO:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1uKL
_c1uKK:
	leaq f_s1stQ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	leaq f1_s1stR_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1uJ6_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.geInteger#_entry@gotpcrel(%rip)
_c1uKL:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uIO, .-_c1uIO


==================== Asm code ====================
2018-03-16 15:56:17.482262966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uIO_info:
	.quad	_c1uIO
	.quad	3
	.quad	2203318222878
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.483054744 UTC

.section .text
.align 8
_c1uJ6:
_c1uJ6:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rcx
	cmpq $1,%rbx
	je _c1uKT
_c1uKO:
	leaq block_c1uJa_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
_c1uKT:
	leaq block_c1uJV_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1uJ6, .-_c1uJ6


==================== Asm code ====================
2018-03-16 15:56:17.483716407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uJ6_info:
	.quad	_c1uJ6
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.484451384 UTC

.section .text
.align 8
_c1uJV:
_c1uJV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uKW
_c1uKV:
	leaq go_s1su1_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 32(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1su1_entry
_c1uKW:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uJV, .-_c1uJV


==================== Asm code ====================
2018-03-16 15:56:17.485103286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uJV_info:
	.quad	_c1uJV
	.quad	1285
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.486130625 UTC

.section .text
.align 8
_c1uJa:
_c1uJa:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1uKR
_c1uKQ:
	leaq go_s1stU_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 32(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $48,%rbp
	jmp go_s1stU_entry
_c1uKR:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uJa, .-_c1uJa


==================== Asm code ====================
2018-03-16 15:56:17.486748071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uJa_info:
	.quad	_c1uJa
	.quad	1285
	.quad	4294967326
	.quad	S1sVz_srt+752


==================== Asm code ====================
2018-03-16 15:56:17.488465938 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$trModule4_bytes
.type GHC.Real.$trModule4_bytes, @object
GHC.Real.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:56:17.490287041 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule3_closure
.type GHC.Real.$trModule3_closure, @object
GHC.Real.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:56:17.49190501 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$trModule2_bytes
.type GHC.Real.$trModule2_bytes, @object
GHC.Real.$trModule2_bytes:
	.asciz "GHC.Real"


==================== Asm code ====================
2018-03-16 15:56:17.494534589 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule1_closure
.type GHC.Real.$trModule1_closure, @object
GHC.Real.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:56:17.496188165 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$trModule_closure
.type GHC.Real.$trModule_closure, @object
GHC.Real.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Real.$trModule3_closure+1
	.quad	GHC.Real.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.497896592 UTC

.section .data
.align 8
.align 1
$krep_r1j3d_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.499490674 UTC

.section .data
.align 8
.align 1
$krep1_r1j3e_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.501001211 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional1_closure
.type GHC.Real.$tcFractional1_closure, @object
GHC.Real.$tcFractional1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep1_r1j3e_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.502760282 UTC

.section .data
.align 8
.align 1
$krep2_r1j3f_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.504382334 UTC

.section .data
.align 8
.align 1
$krep3_r1j3g_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep2_r1j3f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.506080228 UTC

.section .data
.align 8
.align 1
$krep4_r1j3h_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep3_r1j3g_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.507764058 UTC

.section .data
.align 8
.align 1
$krep5_r1j3i_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep_r1j3d_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.509749404 UTC

.section .data
.align 8
.align 1
$krep6_r1j3j_closure:
	.quad	:_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.51139424 UTC

.section .data
.align 8
.align 1
$krep7_r1j3k_closure:
	.quad	:_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.5131367 UTC

.section .data
.align 8
.align 1
$krep8_r1j3l_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep7_r1j3k_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.514870227 UTC

.section .data
.align 8
.align 1
$krep9_r1j3m_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep8_r1j3l_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.516623343 UTC

.section .data
.align 8
.align 1
$krep10_r1j3n_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep9_r1j3m_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.518913344 UTC

.section .data
.align 8
.align 1
$krep11_r1j3o_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Num.$tcNum_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.520633737 UTC

.section .data
.align 8
.align 1
$krep12_r1j3p_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Enum.$tcEnum_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.522729961 UTC

.section .data
.align 8
.align 1
$krep13_r1j3q_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Classes.$tcOrd_closure
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.52434633 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcRatio2_bytes
.type GHC.Real.$tcRatio2_bytes, @object
GHC.Real.$tcRatio2_bytes:
	.asciz "Ratio"


==================== Asm code ====================
2018-03-16 15:56:17.526088214 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRatio1_closure
.type GHC.Real.$tcRatio1_closure, @object
GHC.Real.$tcRatio1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcRatio2_bytes


==================== Asm code ====================
2018-03-16 15:56:17.527899706 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRatio_closure
.type GHC.Real.$tcRatio_closure, @object
GHC.Real.$tcRatio_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcRatio1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-788220262863756648
	.quad	1271393732863050253
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.529679753 UTC

.section .data
.align 8
.align 1
$krep14_r1j3r_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRatio_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.531366291 UTC

.section .data
.align 8
.align 1
$krep15_r1j3s_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep14_r1j3r_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.533049208 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%1_closure
.type GHC.Real.$tc':%1_closure, @object
GHC.Real.$tc':%1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep15_r1j3s_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.534814327 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc':%3_bytes
.type GHC.Real.$tc':%3_bytes, @object
GHC.Real.$tc':%3_bytes:
	.asciz "':%"


==================== Asm code ====================
2018-03-16 15:56:17.536431237 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%2_closure
.type GHC.Real.$tc':%2_closure, @object
GHC.Real.$tc':%2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc':%3_bytes


==================== Asm code ====================
2018-03-16 15:56:17.538688693 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc':%_closure
.type GHC.Real.$tc':%_closure, @object
GHC.Real.$tc':%_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc':%2_closure+1
	.quad	GHC.Real.$tc':%1_closure+4
	.quad	-6493754205071423244
	.quad	6861245286732044789
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.540411683 UTC

.section .data
.align 8
.align 1
$krep16_r1j3t_closure:
	.quad	:_con_info
	.quad	$krep_r1j3d_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.542200835 UTC

.section .data
.align 8
.align 1
$krep17_r1j3u_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRatio_closure+1
	.quad	$krep16_r1j3t_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.544497591 UTC

.section .data
.align 8
.align 1
$krep18_r1j3v_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r1j3f_closure+2
	.quad	$krep17_r1j3u_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.546403364 UTC

.section .data
.align 8
.align 1
$krep19_r1j3w_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r1j3u_closure+1
	.quad	$krep2_r1j3f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.548026996 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcReal2_bytes
.type GHC.Real.$tcReal2_bytes, @object
GHC.Real.$tcReal2_bytes:
	.asciz "Real"


==================== Asm code ====================
2018-03-16 15:56:17.550159842 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcReal1_closure
.type GHC.Real.$tcReal1_closure, @object
GHC.Real.$tcReal1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcReal2_bytes


==================== Asm code ====================
2018-03-16 15:56:17.551957693 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcReal_closure
.type GHC.Real.$tcReal_closure, @object
GHC.Real.$tcReal_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcReal1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	1826502536394630182
	.quad	-3958958293817300203
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.553793687 UTC

.section .data
.align 8
.align 1
$krep20_r1j3x_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcReal_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.55553348 UTC

.section .data
.align 8
.align 1
$krep21_r1j3y_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep18_r1j3v_closure+4
	.quad	$krep20_r1j3x_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.55720158 UTC

.section .data
.align 8
.align 1
$krep22_r1j3z_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep13_r1j3q_closure+1
	.quad	$krep21_r1j3y_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.559036146 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real1_closure
.type GHC.Real.$tc'C:Real1_closure, @object
GHC.Real.$tc'C:Real1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r1j3o_closure+1
	.quad	$krep22_r1j3z_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.560724897 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Real3_bytes
.type GHC.Real.$tc'C:Real3_bytes, @object
GHC.Real.$tc'C:Real3_bytes:
	.asciz "'C:Real"


==================== Asm code ====================
2018-03-16 15:56:17.563000305 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real2_closure
.type GHC.Real.$tc'C:Real2_closure, @object
GHC.Real.$tc'C:Real2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Real3_bytes


==================== Asm code ====================
2018-03-16 15:56:17.5647863 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Real_closure
.type GHC.Real.$tc'C:Real_closure, @object
GHC.Real.$tc'C:Real_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Real2_closure+1
	.quad	GHC.Real.$tc'C:Real1_closure+4
	.quad	5938283050841830427
	.quad	8926187074226767634
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.566575971 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcIntegral2_bytes
.type GHC.Real.$tcIntegral2_bytes, @object
GHC.Real.$tcIntegral2_bytes:
	.asciz "Integral"


==================== Asm code ====================
2018-03-16 15:56:17.56828585 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcIntegral1_closure
.type GHC.Real.$tcIntegral1_closure, @object
GHC.Real.$tcIntegral1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcIntegral2_bytes


==================== Asm code ====================
2018-03-16 15:56:17.570615814 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcIntegral_closure
.type GHC.Real.$tcIntegral_closure, @object
GHC.Real.$tcIntegral_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcIntegral1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	-1845586262162837643
	.quad	3304955164956033666
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.572458317 UTC

.section .data
.align 8
.align 1
$krep23_r1j3A_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcIntegral_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.574174457 UTC

.section .data
.align 8
.align 1
$krep24_r1j3B_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r1j3i_closure+4
	.quad	$krep23_r1j3A_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.575898155 UTC

.section .data
.align 8
.align 1
$krep25_r1j3C_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r1j3n_closure+4
	.quad	$krep24_r1j3B_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.577651702 UTC

.section .data
.align 8
.align 1
$krep26_r1j3D_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r1j3n_closure+4
	.quad	$krep25_r1j3C_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.579394816 UTC

.section .data
.align 8
.align 1
$krep27_r1j3E_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep26_r1j3D_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.581125225 UTC

.section .data
.align 8
.align 1
$krep28_r1j3F_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep27_r1j3E_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.582992158 UTC

.section .data
.align 8
.align 1
$krep29_r1j3G_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep28_r1j3F_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.5846706 UTC

.section .data
.align 8
.align 1
$krep30_r1j3H_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep29_r1j3G_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.586766129 UTC

.section .data
.align 8
.align 1
$krep31_r1j3I_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r1j3p_closure+1
	.quad	$krep30_r1j3H_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.588510386 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral1_closure
.type GHC.Real.$tc'C:Integral1_closure, @object
GHC.Real.$tc'C:Integral1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep20_r1j3x_closure+1
	.quad	$krep31_r1j3I_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.590231453 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Integral3_bytes
.type GHC.Real.$tc'C:Integral3_bytes, @object
GHC.Real.$tc'C:Integral3_bytes:
	.asciz "'C:Integral"


==================== Asm code ====================
2018-03-16 15:56:17.591916173 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral2_closure
.type GHC.Real.$tc'C:Integral2_closure, @object
GHC.Real.$tc'C:Integral2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Integral3_bytes


==================== Asm code ====================
2018-03-16 15:56:17.593801746 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Integral_closure
.type GHC.Real.$tc'C:Integral_closure, @object
GHC.Real.$tc'C:Integral_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Integral2_closure+1
	.quad	GHC.Real.$tc'C:Integral1_closure+4
	.quad	-6305726333452722333
	.quad	-882710533898305838
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.595516738 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcFractional3_bytes
.type GHC.Real.$tcFractional3_bytes, @object
GHC.Real.$tcFractional3_bytes:
	.asciz "Fractional"


==================== Asm code ====================
2018-03-16 15:56:17.597765782 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional2_closure
.type GHC.Real.$tcFractional2_closure, @object
GHC.Real.$tcFractional2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcFractional3_bytes


==================== Asm code ====================
2018-03-16 15:56:17.599481449 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcFractional_closure
.type GHC.Real.$tcFractional_closure, @object
GHC.Real.$tcFractional_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcFractional2_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	-3477873102646800759
	.quad	-4671908134057652397
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.601216231 UTC

.section .data
.align 8
.align 1
$krep32_r1j3J_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcFractional_closure+1
	.quad	$krep6_r1j3j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.603265738 UTC

.section .data
.align 8
.align 1
$krep33_r1j3K_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep19_r1j3w_closure+4
	.quad	$krep32_r1j3J_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.605010788 UTC

.section .data
.align 8
.align 1
$krep34_r1j3L_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_r1j3g_closure+4
	.quad	$krep33_r1j3K_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.606835015 UTC

.section .data
.align 8
.align 1
$krep35_r1j3M_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r1j3h_closure+4
	.quad	$krep34_r1j3L_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.608612866 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional1_closure
.type GHC.Real.$tc'C:Fractional1_closure, @object
GHC.Real.$tc'C:Fractional1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r1j3o_closure+1
	.quad	$krep35_r1j3M_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.611062442 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tc'C:Fractional3_bytes
.type GHC.Real.$tc'C:Fractional3_bytes, @object
GHC.Real.$tc'C:Fractional3_bytes:
	.asciz "'C:Fractional"


==================== Asm code ====================
2018-03-16 15:56:17.612716944 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional2_closure
.type GHC.Real.$tc'C:Fractional2_closure, @object
GHC.Real.$tc'C:Fractional2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tc'C:Fractional3_bytes


==================== Asm code ====================
2018-03-16 15:56:17.61463671 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tc'C:Fractional_closure
.type GHC.Real.$tc'C:Fractional_closure, @object
GHC.Real.$tc'C:Fractional_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tc'C:Fractional2_closure+1
	.quad	GHC.Real.$tc'C:Fractional1_closure+4
	.quad	-2740308543143832686
	.quad	-7424859509354046163
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.616301178 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$tcRealFrac2_bytes
.type GHC.Real.$tcRealFrac2_bytes, @object
GHC.Real.$tcRealFrac2_bytes:
	.asciz "RealFrac"


==================== Asm code ====================
2018-03-16 15:56:17.618071256 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRealFrac1_closure
.type GHC.Real.$tcRealFrac1_closure, @object
GHC.Real.$tcRealFrac1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Real.$tcRealFrac2_bytes


==================== Asm code ====================
2018-03-16 15:56:17.619873766 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$tcRealFrac_closure
.type GHC.Real.$tcRealFrac_closure, @object
GHC.Real.$tcRealFrac_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Real.$trModule_closure+1
	.quad	GHC.Real.$tcRealFrac1_closure+1
	.quad	GHC.Real.$tcFractional1_closure+4
	.quad	2318913099678420819
	.quad	6373121509494083706
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:56:17.62642007 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c<_closure
.type GHC.Real.$w$c<_closure, @object
GHC.Real.$w$c<_closure:
	.quad	GHC.Real.$w$c<_info


==================== Asm code ====================
2018-03-16 15:56:17.627329712 UTC

.section .text
.align 8
$dNum_s1sud_entry:
_c1uOv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uOw
_c1uOx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uOw:
	jmp *-16(%r13)
	.size $dNum_s1sud_entry, .-$dNum_s1sud_entry


==================== Asm code ====================
2018-03-16 15:56:17.627886672 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1sud_info:
	.quad	$dNum_s1sud_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.62861456 UTC

.section .text
.align 8
sat_s1sug_entry:
_c1uOC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uOD
_c1uOE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1uOD:
	jmp *-16(%r13)
	.size sat_s1sug_entry, .-sat_s1sug_entry


==================== Asm code ====================
2018-03-16 15:56:17.629342985 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sug_info:
	.quad	sat_s1sug_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.630062385 UTC

.section .text
.align 8
sat_s1suf_entry:
_c1uOJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uOK
_c1uOL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1uOK:
	jmp *-16(%r13)
	.size sat_s1suf_entry, .-sat_s1suf_entry


==================== Asm code ====================
2018-03-16 15:56:17.630735071 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1suf_info:
	.quad	sat_s1suf_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.631498697 UTC

.section .text
.align 8
.globl GHC.Real.$w$c<_entry
.type GHC.Real.$w$c<_entry, @object
GHC.Real.$w$c<_entry:
_c1uOM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uOO
_c1uOP:
	leaq block_c1uOn_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1uOO:
	leaq GHC.Real.$w$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c<_entry, .-GHC.Real.$w$c<_entry


==================== Asm code ====================
2018-03-16 15:56:17.632130731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c<_info
.type GHC.Real.$w$c<_info, @object
GHC.Real.$w$c<_info:
	.quad	GHC.Real.$w$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:17.632992935 UTC

.section .text
.align 8
_c1uOn:
_c1uOn:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c1uOS
_c1uOR:
	leaq $dNum_s1sud_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s1sug_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1suf_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c1uON_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1uOS:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uOn, .-_c1uOn


==================== Asm code ====================
2018-03-16 15:56:17.634286984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uOn_info:
	.quad	_c1uOn
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.634883911 UTC

.section .text
.align 8
_c1uON:
_c1uON:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c1uON, .-_c1uON


==================== Asm code ====================
2018-03-16 15:56:17.635469937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uON_info:
	.quad	_c1uON
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.63915417 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<_closure
.type GHC.Real.$fOrdRatio_$c<_closure, @object
GHC.Real.$fOrdRatio_$c<_closure:
	.quad	GHC.Real.$fOrdRatio_$c<_info


==================== Asm code ====================
2018-03-16 15:56:17.639950976 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c<_entry
.type GHC.Real.$fOrdRatio_$c<_entry, @object
GHC.Real.$fOrdRatio_$c<_entry:
_c1uPM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uPQ
_c1uPR:
	leaq block_c1uPJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uPJ
_c1uPK:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uPQ:
	leaq GHC.Real.$fOrdRatio_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c<_entry, .-GHC.Real.$fOrdRatio_$c<_entry


==================== Asm code ====================
2018-03-16 15:56:17.640566994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<_info
.type GHC.Real.$fOrdRatio_$c<_info, @object
GHC.Real.$fOrdRatio_$c<_info:
	.quad	GHC.Real.$fOrdRatio_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.641666143 UTC

.section .text
.align 8
_c1uPJ:
_c1uPJ:
	leaq block_c1uPP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1uPP
_c1uPT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uPJ, .-_c1uPJ


==================== Asm code ====================
2018-03-16 15:56:17.642274484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uPJ_info:
	.quad	_c1uPJ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.642893698 UTC

.section .text
.align 8
_c1uPP:
_c1uPP:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1uPP, .-_c1uPP


==================== Asm code ====================
2018-03-16 15:56:17.643474407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uPP_info:
	.quad	_c1uPP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.648910294 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c<=_closure
.type GHC.Real.$w$c<=_closure, @object
GHC.Real.$w$c<=_closure:
	.quad	GHC.Real.$w$c<=_info


==================== Asm code ====================
2018-03-16 15:56:17.650046514 UTC

.section .text
.align 8
$dNum_s1suw_entry:
_c1uQr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uQs
_c1uQt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1uQs:
	jmp *-16(%r13)
	.size $dNum_s1suw_entry, .-$dNum_s1suw_entry


==================== Asm code ====================
2018-03-16 15:56:17.650658129 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1suw_info:
	.quad	$dNum_s1suw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.651327553 UTC

.section .text
.align 8
sat_s1suz_entry:
_c1uQy:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uQz
_c1uQA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1uQz:
	jmp *-16(%r13)
	.size sat_s1suz_entry, .-sat_s1suz_entry


==================== Asm code ====================
2018-03-16 15:56:17.652014788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1suz_info:
	.quad	sat_s1suz_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.652746526 UTC

.section .text
.align 8
sat_s1suy_entry:
_c1uQF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uQG
_c1uQH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1uQG:
	jmp *-16(%r13)
	.size sat_s1suy_entry, .-sat_s1suy_entry


==================== Asm code ====================
2018-03-16 15:56:17.653506861 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1suy_info:
	.quad	sat_s1suy_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.65428325 UTC

.section .text
.align 8
.globl GHC.Real.$w$c<=_entry
.type GHC.Real.$w$c<=_entry, @object
GHC.Real.$w$c<=_entry:
_c1uQI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uQK
_c1uQL:
	leaq block_c1uQj_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1uQK:
	leaq GHC.Real.$w$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c<=_entry, .-GHC.Real.$w$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:17.654950905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c<=_info
.type GHC.Real.$w$c<=_info, @object
GHC.Real.$w$c<=_info:
	.quad	GHC.Real.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:17.655786979 UTC

.section .text
.align 8
_c1uQj:
_c1uQj:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c1uQO
_c1uQN:
	leaq $dNum_s1suw_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s1suz_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1suy_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c1uQJ_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%r14
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	leaq -72(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1uQO:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1uQj, .-_c1uQj


==================== Asm code ====================
2018-03-16 15:56:17.656547197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uQj_info:
	.quad	_c1uQj
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.657205122 UTC

.section .text
.align 8
_c1uQJ:
_c1uQJ:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
	.size _c1uQJ, .-_c1uQJ


==================== Asm code ====================
2018-03-16 15:56:17.657871991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uQJ_info:
	.quad	_c1uQJ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.662322248 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<=_closure
.type GHC.Real.$fOrdRatio_$c<=_closure, @object
GHC.Real.$fOrdRatio_$c<=_closure:
	.quad	GHC.Real.$fOrdRatio_$c<=_info


==================== Asm code ====================
2018-03-16 15:56:17.663098145 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c<=_entry
.type GHC.Real.$fOrdRatio_$c<=_entry, @object
GHC.Real.$fOrdRatio_$c<=_entry:
_c1uRI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uRM
_c1uRN:
	leaq block_c1uRF_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uRF
_c1uRG:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uRM:
	leaq GHC.Real.$fOrdRatio_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c<=_entry, .-GHC.Real.$fOrdRatio_$c<=_entry


==================== Asm code ====================
2018-03-16 15:56:17.663774832 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c<=_info
.type GHC.Real.$fOrdRatio_$c<=_info, @object
GHC.Real.$fOrdRatio_$c<=_info:
	.quad	GHC.Real.$fOrdRatio_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.664474901 UTC

.section .text
.align 8
_c1uRF:
_c1uRF:
	leaq block_c1uRL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1uRL
_c1uRP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uRF, .-_c1uRF


==================== Asm code ====================
2018-03-16 15:56:17.665094107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uRF_info:
	.quad	_c1uRF
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.66575735 UTC

.section .text
.align 8
_c1uRL:
_c1uRL:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1uRL, .-_c1uRL


==================== Asm code ====================
2018-03-16 15:56:17.666326314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uRL_info:
	.quad	_c1uRL
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.670420215 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmax_closure
.type GHC.Real.$fOrdRatio_$cmax_closure, @object
GHC.Real.$fOrdRatio_$cmax_closure:
	.quad	GHC.Real.$fOrdRatio_$cmax_info


==================== Asm code ====================
2018-03-16 15:56:17.671179069 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cmax_entry
.type GHC.Real.$fOrdRatio_$cmax_entry, @object
GHC.Real.$fOrdRatio_$cmax_entry:
_c1uSi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uSm
_c1uSn:
	leaq block_c1uSf_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uSf
_c1uSg:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uSm:
	leaq GHC.Real.$fOrdRatio_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cmax_entry, .-GHC.Real.$fOrdRatio_$cmax_entry


==================== Asm code ====================
2018-03-16 15:56:17.671851424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmax_info
.type GHC.Real.$fOrdRatio_$cmax_info, @object
GHC.Real.$fOrdRatio_$cmax_info:
	.quad	GHC.Real.$fOrdRatio_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.672545889 UTC

.section .text
.align 8
_c1uSf:
_c1uSf:
	leaq block_c1uSl_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1uSl
_c1uSp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uSf, .-_c1uSf


==================== Asm code ====================
2018-03-16 15:56:17.673229906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uSf_info:
	.quad	_c1uSf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.673981091 UTC

.section .text
.align 8
_c1uSl:
_c1uSl:
	movq 16(%rbp),%rax
	leaq block_c1uSt_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1uSl, .-_c1uSl


==================== Asm code ====================
2018-03-16 15:56:17.674582928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uSl_info:
	.quad	_c1uSl
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.675250125 UTC

.section .text
.align 8
_c1uSt:
_c1uSt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uSA
_c1uSE:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1uSA:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uSt, .-_c1uSt


==================== Asm code ====================
2018-03-16 15:56:17.675860266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uSt_info:
	.quad	_c1uSt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.680251131 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmin_closure
.type GHC.Real.$fOrdRatio_$cmin_closure, @object
GHC.Real.$fOrdRatio_$cmin_closure:
	.quad	GHC.Real.$fOrdRatio_$cmin_info


==================== Asm code ====================
2018-03-16 15:56:17.681045104 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$cmin_entry
.type GHC.Real.$fOrdRatio_$cmin_entry, @object
GHC.Real.$fOrdRatio_$cmin_entry:
_c1uTe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uTi
_c1uTj:
	leaq block_c1uTb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uTb
_c1uTc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uTi:
	leaq GHC.Real.$fOrdRatio_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$cmin_entry, .-GHC.Real.$fOrdRatio_$cmin_entry


==================== Asm code ====================
2018-03-16 15:56:17.681768265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$cmin_info
.type GHC.Real.$fOrdRatio_$cmin_info, @object
GHC.Real.$fOrdRatio_$cmin_info:
	.quad	GHC.Real.$fOrdRatio_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.682503761 UTC

.section .text
.align 8
_c1uTb:
_c1uTb:
	leaq block_c1uTh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1uTh
_c1uTl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uTb, .-_c1uTb


==================== Asm code ====================
2018-03-16 15:56:17.683193012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uTb_info:
	.quad	_c1uTb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.683871358 UTC

.section .text
.align 8
_c1uTh:
_c1uTh:
	movq 16(%rbp),%rax
	leaq block_c1uTp_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq %rbx,24(%rbp)
	addq $16,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1uTh, .-_c1uTh


==================== Asm code ====================
2018-03-16 15:56:17.68448128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uTh_info:
	.quad	_c1uTh
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.685131716 UTC

.section .text
.align 8
_c1uTp:
_c1uTp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uTw
_c1uTA:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1uTw:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uTp, .-_c1uTp


==================== Asm code ====================
2018-03-16 15:56:17.686045251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uTp_info:
	.quad	_c1uTp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.693158722 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$ccompare_closure
.type GHC.Real.$w$ccompare_closure, @object
GHC.Real.$w$ccompare_closure:
	.quad	GHC.Real.$w$ccompare_info


==================== Asm code ====================
2018-03-16 15:56:17.694179882 UTC

.section .text
.align 8
.globl GHC.Real.$w$ccompare_entry
.type GHC.Real.$w$ccompare_entry, @object
GHC.Real.$w$ccompare_entry:
_c1uU9:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uUh
_c1uUi:
	leaq block_c1uU7_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r14,%rax
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1uUh:
	leaq GHC.Real.$w$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$ccompare_entry, .-GHC.Real.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:17.694972142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$ccompare_info
.type GHC.Real.$w$ccompare_info, @object
GHC.Real.$w$ccompare_info:
	.quad	GHC.Real.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:56:17.695672724 UTC

.section .text
.align 8
_c1uU7:
_c1uU7:
	leaq block_c1uUc_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1uU7, .-_c1uU7


==================== Asm code ====================
2018-03-16 15:56:17.696296685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uU7_info:
	.quad	_c1uU7
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.696991346 UTC

.section .text
.align 8
_c1uUc:
_c1uUc:
	leaq block_c1uUg_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1uUc, .-_c1uUc


==================== Asm code ====================
2018-03-16 15:56:17.697694212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUc_info:
	.quad	_c1uUc
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.698395086 UTC

.section .text
.align 8
_c1uUg:
_c1uUg:
	leaq block_c1uUo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1uUg, .-_c1uUg


==================== Asm code ====================
2018-03-16 15:56:17.699027461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUg_info:
	.quad	_c1uUg
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.699851646 UTC

.section .text
.align 8
_c1uUo:
_c1uUo:
	movq 32(%rbp),%rax
	movq 48(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uUw
_c1uUL:
	movq 8(%rbp),%rbx
	leaq block_c1uUJ_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c1uUw:
	leaq block_c1uUt_info(%rip),%rbx
	movq %rbx,48(%rbp)
	movq %rcx,%r9
	movq 40(%rbp),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $48,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1uUo, .-_c1uUo


==================== Asm code ====================
2018-03-16 15:56:17.700578543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUo_info:
	.quad	_c1uUo
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.701325428 UTC

.section .text
.align 8
_c1uUt:
_c1uUt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1uVd
_u1uVe:
	addq $8,%rbp
	jmp _c1uV2
_u1uVd:
	addq $8,%rbp
	jmp _c1uUY
	.size _c1uUt, .-_c1uUt


==================== Asm code ====================
2018-03-16 15:56:17.70209269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUt_info:
	.quad	_c1uUt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.702857546 UTC

.section .text
.align 8
_c1uUJ:
_c1uUJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uUS
_c1uV6:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uUS:
	movq 40(%rbp),%rax
	leaq block_c1uUP_info(%rip),%rbx
	movq %rbx,40(%rbp)
	movq %rax,%r9
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.$w$c<=_entry
	.size _c1uUJ, .-_c1uUJ


==================== Asm code ====================
2018-03-16 15:56:17.703624396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUJ_info:
	.quad	_c1uUJ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.704301429 UTC

.section .text
.align 8
_c1uUP:
_c1uUP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1uVb
_u1uVc:
	addq $8,%rbp
	jmp _c1uV2
_u1uVb:
	addq $8,%rbp
	jmp _c1uUY
	.size _c1uUP, .-_c1uUP


==================== Asm code ====================
2018-03-16 15:56:17.704910813 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uUP_info:
	.quad	_c1uUP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.70563931 UTC

.section .text
.align 8
_c1uUY:
_c1uUY:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uUY, .-_c1uUY


==================== Asm code ====================
2018-03-16 15:56:17.706310788 UTC

.section .text
.align 8
_c1uV2:
_c1uV2:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uV2, .-_c1uV2


==================== Asm code ====================
2018-03-16 15:56:17.710315592 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$ccompare_closure
.type GHC.Real.$fOrdRatio_$ccompare_closure, @object
GHC.Real.$fOrdRatio_$ccompare_closure:
	.quad	GHC.Real.$fOrdRatio_$ccompare_info


==================== Asm code ====================
2018-03-16 15:56:17.711119096 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$ccompare_entry
.type GHC.Real.$fOrdRatio_$ccompare_entry, @object
GHC.Real.$fOrdRatio_$ccompare_entry:
_c1uWj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uWn
_c1uWo:
	leaq block_c1uWg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uWg
_c1uWh:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uWn:
	leaq GHC.Real.$fOrdRatio_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$ccompare_entry, .-GHC.Real.$fOrdRatio_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:56:17.711906694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$ccompare_info
.type GHC.Real.$fOrdRatio_$ccompare_info, @object
GHC.Real.$fOrdRatio_$ccompare_info:
	.quad	GHC.Real.$fOrdRatio_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.712675948 UTC

.section .text
.align 8
_c1uWg:
_c1uWg:
	leaq block_c1uWm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1uWm
_c1uWq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uWg, .-_c1uWg


==================== Asm code ====================
2018-03-16 15:56:17.713432239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uWg_info:
	.quad	_c1uWg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.714085531 UTC

.section .text
.align 8
_c1uWm:
_c1uWm:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1uWm, .-_c1uWm


==================== Asm code ====================
2018-03-16 15:56:17.714811348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uWm_info:
	.quad	_c1uWm
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.719198796 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>_closure
.type GHC.Real.$fOrdRatio_$c>_closure, @object
GHC.Real.$fOrdRatio_$c>_closure:
	.quad	GHC.Real.$fOrdRatio_$c>_info


==================== Asm code ====================
2018-03-16 15:56:17.720080978 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c>_entry
.type GHC.Real.$fOrdRatio_$c>_entry, @object
GHC.Real.$fOrdRatio_$c>_entry:
_c1uWT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uWX
_c1uWY:
	leaq block_c1uWQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uWQ
_c1uWR:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uWX:
	leaq GHC.Real.$fOrdRatio_$c>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c>_entry, .-GHC.Real.$fOrdRatio_$c>_entry


==================== Asm code ====================
2018-03-16 15:56:17.720803895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>_info
.type GHC.Real.$fOrdRatio_$c>_info, @object
GHC.Real.$fOrdRatio_$c>_info:
	.quad	GHC.Real.$fOrdRatio_$c>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.721649036 UTC

.section .text
.align 8
_c1uWQ:
_c1uWQ:
	leaq block_c1uWW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1uWW
_c1uX0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uWQ, .-_c1uWQ


==================== Asm code ====================
2018-03-16 15:56:17.722298325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uWQ_info:
	.quad	_c1uWQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.723012537 UTC

.section .text
.align 8
_c1uWW:
_c1uWW:
	movq 24(%rbp),%rax
	leaq block_c1uX4_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1uWW, .-_c1uWW


==================== Asm code ====================
2018-03-16 15:56:17.724190524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uWW_info:
	.quad	_c1uWW
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.724991109 UTC

.section .text
.align 8
_c1uX4:
_c1uX4:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1uXf
_c1uXb:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uXf:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uX4, .-_c1uX4


==================== Asm code ====================
2018-03-16 15:56:17.725652619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uX4_info:
	.quad	_c1uX4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.729835375 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>=_closure
.type GHC.Real.$fOrdRatio_$c>=_closure, @object
GHC.Real.$fOrdRatio_$c>=_closure:
	.quad	GHC.Real.$fOrdRatio_$c>=_info


==================== Asm code ====================
2018-03-16 15:56:17.730631355 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_$c>=_entry
.type GHC.Real.$fOrdRatio_$c>=_entry, @object
GHC.Real.$fOrdRatio_$c>=_entry:
_c1uXP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uXT
_c1uXU:
	leaq block_c1uXM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1uXM
_c1uXN:
	movq (%rbx),%rax
	jmp *(%rax)
_c1uXT:
	leaq GHC.Real.$fOrdRatio_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_$c>=_entry, .-GHC.Real.$fOrdRatio_$c>=_entry


==================== Asm code ====================
2018-03-16 15:56:17.731386447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_$c>=_info
.type GHC.Real.$fOrdRatio_$c>=_info, @object
GHC.Real.$fOrdRatio_$c>=_info:
	.quad	GHC.Real.$fOrdRatio_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.732322895 UTC

.section .text
.align 8
_c1uXM:
_c1uXM:
	leaq block_c1uXS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1uXS
_c1uXW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1uXM, .-_c1uXM


==================== Asm code ====================
2018-03-16 15:56:17.732974187 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uXM_info:
	.quad	_c1uXM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.73375594 UTC

.section .text
.align 8
_c1uXS:
_c1uXS:
	movq 24(%rbp),%rax
	leaq block_c1uY0_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1uXS, .-_c1uXS


==================== Asm code ====================
2018-03-16 15:56:17.734365825 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uXS_info:
	.quad	_c1uXS
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.735080642 UTC

.section .text
.align 8
_c1uY0:
_c1uY0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1uYb
_c1uY7:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1uYb:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1uY0, .-_c1uY0


==================== Asm code ====================
2018-03-16 15:56:17.735755429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1uY0_info:
	.quad	_c1uY0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.742527227 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_closure
.type GHC.Real.$fOrdRatio_closure, @object
GHC.Real.$fOrdRatio_closure:
	.quad	GHC.Real.$fOrdRatio_info


==================== Asm code ====================
2018-03-16 15:56:17.743324905 UTC

.section .text
.align 8
sat_s1svQ_entry:
_c1uYN:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$cmin_entry
	.size sat_s1svQ_entry, .-sat_s1svQ_entry


==================== Asm code ====================
2018-03-16 15:56:17.743934698 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svQ_info:
	.quad	sat_s1svQ_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.744589216 UTC

.section .text
.align 8
sat_s1svP_entry:
_c1uYV:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$cmax_entry
	.size sat_s1svP_entry, .-sat_s1svP_entry


==================== Asm code ====================
2018-03-16 15:56:17.745160662 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svP_info:
	.quad	sat_s1svP_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.745878631 UTC

.section .text
.align 8
sat_s1svO_entry:
_c1uZ3:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c>=_entry
	.size sat_s1svO_entry, .-sat_s1svO_entry


==================== Asm code ====================
2018-03-16 15:56:17.746465928 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svO_info:
	.quad	sat_s1svO_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.747110192 UTC

.section .text
.align 8
sat_s1svN_entry:
_c1uZb:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c>_entry
	.size sat_s1svN_entry, .-sat_s1svN_entry


==================== Asm code ====================
2018-03-16 15:56:17.747688506 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svN_info:
	.quad	sat_s1svN_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.748373397 UTC

.section .text
.align 8
sat_s1svM_entry:
_c1uZj:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c<=_entry
	.size sat_s1svM_entry, .-sat_s1svM_entry


==================== Asm code ====================
2018-03-16 15:56:17.748964393 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svM_info:
	.quad	sat_s1svM_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.750171417 UTC

.section .text
.align 8
sat_s1svL_entry:
_c1uZr:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$c<_entry
	.size sat_s1svL_entry, .-sat_s1svL_entry


==================== Asm code ====================
2018-03-16 15:56:17.750789817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svL_info:
	.quad	sat_s1svL_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.751451162 UTC

.section .text
.align 8
sat_s1svK_entry:
_c1uZz:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fOrdRatio_$ccompare_entry
	.size sat_s1svK_entry, .-sat_s1svK_entry


==================== Asm code ====================
2018-03-16 15:56:17.752066491 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svK_info:
	.quad	sat_s1svK_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.752777686 UTC

.section .text
.align 8
sat_s1svJ_entry:
_c1uZG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1uZH
_c1uZI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_$cp1Ord_entry
_c1uZH:
	jmp *-16(%r13)
	.size sat_s1svJ_entry, .-sat_s1svJ_entry


==================== Asm code ====================
2018-03-16 15:56:17.753486219 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1svJ_info:
	.quad	sat_s1svJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.754434717 UTC

.section .text
.align 8
.globl GHC.Real.$fOrdRatio_entry
.type GHC.Real.$fOrdRatio_entry, @object
GHC.Real.$fOrdRatio_entry:
_c1uZK:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _c1uZO
_c1uZN:
	leaq sat_s1svQ_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	leaq sat_s1svP_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	leaq sat_s1svO_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_s1svN_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_s1svM_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_s1svL_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_s1svK_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_s1svJ_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq GHC.Classes.C:Ord_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1uZO:
	movq $208,904(%r13)
	leaq GHC.Real.$fOrdRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fOrdRatio_entry, .-GHC.Real.$fOrdRatio_entry


==================== Asm code ====================
2018-03-16 15:56:17.756025579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fOrdRatio_info
.type GHC.Real.$fOrdRatio_info, @object
GHC.Real.$fOrdRatio_info:
	.quad	GHC.Real.$fOrdRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.760382085 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cnegate_closure
.type GHC.Real.$fNumRatio_$cnegate_closure, @object
GHC.Real.$fNumRatio_$cnegate_closure:
	.quad	GHC.Real.$fNumRatio_$cnegate_info


==================== Asm code ====================
2018-03-16 15:56:17.761209858 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cnegate_entry
.type GHC.Real.$fNumRatio_$cnegate_entry, @object
GHC.Real.$fNumRatio_$cnegate_entry:
_c1v0I:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v0W
_c1v0X:
	leaq block_c1v0F_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1v0F
_c1v0G:
	movq (%rbx),%rax
	jmp *(%rax)
_c1v0W:
	leaq GHC.Real.$fNumRatio_$cnegate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cnegate_entry, .-GHC.Real.$fNumRatio_$cnegate_entry


==================== Asm code ====================
2018-03-16 15:56:17.762115287 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cnegate_info
.type GHC.Real.$fNumRatio_$cnegate_info, @object
GHC.Real.$fNumRatio_$cnegate_info:
	.quad	GHC.Real.$fNumRatio_$cnegate_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.762781565 UTC

.section .text
.align 8
_c1v0F:
_c1v0F:
	leaq block_c1v0L_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1v0F, .-_c1v0F


==================== Asm code ====================
2018-03-16 15:56:17.763397012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v0F_info:
	.quad	_c1v0F
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.764028514 UTC

.section .text
.align 8
_c1v0L:
_c1v0L:
	leaq block_c1v0P_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1v0L, .-_c1v0L


==================== Asm code ====================
2018-03-16 15:56:17.76457143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v0L_info:
	.quad	_c1v0L
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.765209904 UTC

.section .text
.align 8
_c1v0P:
_c1v0P:
	leaq block_c1v0T_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
	.size _c1v0P, .-_c1v0P


==================== Asm code ====================
2018-03-16 15:56:17.765861572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v0P_info:
	.quad	_c1v0P
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.766598724 UTC

.section .text
.align 8
_c1v0T:
_c1v0T:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v13
_c1v12:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v13:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v0T, .-_c1v0T


==================== Asm code ====================
2018-03-16 15:56:17.767282882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v0T_info:
	.quad	_c1v0T
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.771569228 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cabs_closure
.type GHC.Real.$fNumRatio_$cabs_closure, @object
GHC.Real.$fNumRatio_$cabs_closure:
	.quad	GHC.Real.$fNumRatio_$cabs_info


==================== Asm code ====================
2018-03-16 15:56:17.77250917 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cabs_entry
.type GHC.Real.$fNumRatio_$cabs_entry, @object
GHC.Real.$fNumRatio_$cabs_entry:
_c1v1F:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v1T
_c1v1U:
	leaq block_c1v1C_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1v1C
_c1v1D:
	movq (%rbx),%rax
	jmp *(%rax)
_c1v1T:
	leaq GHC.Real.$fNumRatio_$cabs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cabs_entry, .-GHC.Real.$fNumRatio_$cabs_entry


==================== Asm code ====================
2018-03-16 15:56:17.77317399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cabs_info
.type GHC.Real.$fNumRatio_$cabs_info, @object
GHC.Real.$fNumRatio_$cabs_info:
	.quad	GHC.Real.$fNumRatio_$cabs_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.77416191 UTC

.section .text
.align 8
_c1v1C:
_c1v1C:
	leaq block_c1v1I_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1v1C, .-_c1v1C


==================== Asm code ====================
2018-03-16 15:56:17.774778669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v1C_info:
	.quad	_c1v1C
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.775412914 UTC

.section .text
.align 8
_c1v1I:
_c1v1I:
	leaq block_c1v1M_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1v1I, .-_c1v1I


==================== Asm code ====================
2018-03-16 15:56:17.776005062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v1I_info:
	.quad	_c1v1I
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.776668177 UTC

.section .text
.align 8
_c1v1M:
_c1v1M:
	leaq block_c1v1Q_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
	.size _c1v1M, .-_c1v1M


==================== Asm code ====================
2018-03-16 15:56:17.777323838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v1M_info:
	.quad	_c1v1M
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.778030096 UTC

.section .text
.align 8
_c1v1Q:
_c1v1Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v20
_c1v1Z:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v20:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v1Q, .-_c1v1Q


==================== Asm code ====================
2018-03-16 15:56:17.778657666 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v1Q_info:
	.quad	_c1v1Q
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.78255777 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$csignum_closure
.type GHC.Real.$w$csignum_closure, @object
GHC.Real.$w$csignum_closure:
	.quad	GHC.Real.$w$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.783384964 UTC

.section .text
.align 8
.globl GHC.Real.$w$csignum_entry
.type GHC.Real.$w$csignum_entry, @object
GHC.Real.$w$csignum_entry:
_c1v2B:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v2L
_c1v2M:
	leaq block_c1v2z_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1v2L:
	leaq GHC.Real.$w$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$csignum_entry, .-GHC.Real.$w$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:17.784082673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$csignum_info
.type GHC.Real.$w$csignum_info, @object
GHC.Real.$w$csignum_info:
	.quad	GHC.Real.$w$csignum_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.78475899 UTC

.section .text
.align 8
_c1v2z:
_c1v2z:
	leaq block_c1v2E_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1v2z, .-_c1v2z


==================== Asm code ====================
2018-03-16 15:56:17.785468157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v2z_info:
	.quad	_c1v2z
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.786150805 UTC

.section .text
.align 8
_c1v2E:
_c1v2E:
	leaq block_c1v2I_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
	.size _c1v2E, .-_c1v2E


==================== Asm code ====================
2018-03-16 15:56:17.786776686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v2E_info:
	.quad	_c1v2E
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.787518132 UTC

.section .text
.align 8
_c1v2I:
_c1v2I:
	leaq block_c1v2K_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1v2I, .-_c1v2I


==================== Asm code ====================
2018-03-16 15:56:17.788721251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v2I_info:
	.quad	_c1v2I
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.789745692 UTC

.section .text
.align 8
_c1v2K:
_c1v2K:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1v2K, .-_c1v2K


==================== Asm code ====================
2018-03-16 15:56:17.790320675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v2K_info:
	.quad	_c1v2K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.794052832 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$csignum_closure
.type GHC.Real.$fNumRatio_$csignum_closure, @object
GHC.Real.$fNumRatio_$csignum_closure:
	.quad	GHC.Real.$fNumRatio_$csignum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.794816544 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$csignum_entry
.type GHC.Real.$fNumRatio_$csignum_entry, @object
GHC.Real.$fNumRatio_$csignum_entry:
_c1v3p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v3v
_c1v3w:
	leaq block_c1v3m_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1v3m
_c1v3n:
	movq (%rbx),%rax
	jmp *(%rax)
_c1v3v:
	leaq GHC.Real.$fNumRatio_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$csignum_entry, .-GHC.Real.$fNumRatio_$csignum_entry


==================== Asm code ====================
2018-03-16 15:56:17.795455991 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$csignum_info
.type GHC.Real.$fNumRatio_$csignum_info, @object
GHC.Real.$fNumRatio_$csignum_info:
	.quad	GHC.Real.$fNumRatio_$csignum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+784


==================== Asm code ====================
2018-03-16 15:56:17.796103123 UTC

.section .text
.align 8
_c1v3m:
_c1v3m:
	movq 8(%rbp),%rax
	leaq block_c1v3s_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$csignum_entry
	.size _c1v3m, .-_c1v3m


==================== Asm code ====================
2018-03-16 15:56:17.796730099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v3m_info:
	.quad	_c1v3m
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+784


==================== Asm code ====================
2018-03-16 15:56:17.797809102 UTC

.section .text
.align 8
_c1v3s:
_c1v3s:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v3A
_c1v3z:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v3A:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1v3s, .-_c1v3s


==================== Asm code ====================
2018-03-16 15:56:17.798485383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v3s_info:
	.quad	_c1v3s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.8023635 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfromInteger_closure
.type GHC.Real.$w$cfromInteger_closure, @object
GHC.Real.$w$cfromInteger_closure:
	.quad	GHC.Real.$w$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.803097065 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfromInteger_entry
.type GHC.Real.$w$cfromInteger_entry, @object
GHC.Real.$w$cfromInteger_entry:
_c1v3Y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v48
_c1v49:
	leaq block_c1v3W_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1v48:
	leaq GHC.Real.$w$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfromInteger_entry, .-GHC.Real.$w$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:17.803753101 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfromInteger_info
.type GHC.Real.$w$cfromInteger_info, @object
GHC.Real.$w$cfromInteger_info:
	.quad	GHC.Real.$w$cfromInteger_entry
	.quad	0
	.quad	-9223372032559808498
	.quad	8589934607
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.804397263 UTC

.section .text
.align 8
_c1v3W:
_c1v3W:
	leaq block_c1v41_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1v3W, .-_c1v3W


==================== Asm code ====================
2018-03-16 15:56:17.804972618 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v3W_info:
	.quad	_c1v3W
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.805723916 UTC

.section .text
.align 8
_c1v41:
_c1v41:
	leaq block_c1v45_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1v41, .-_c1v41


==================== Asm code ====================
2018-03-16 15:56:17.806363489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v41_info:
	.quad	_c1v41
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.807064454 UTC

.section .text
.align 8
_c1v45:
_c1v45:
	leaq block_c1v47_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1v45, .-_c1v45


==================== Asm code ====================
2018-03-16 15:56:17.8076955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v45_info:
	.quad	_c1v45
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+552


==================== Asm code ====================
2018-03-16 15:56:17.808299575 UTC

.section .text
.align 8
_c1v47:
_c1v47:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1v47, .-_c1v47


==================== Asm code ====================
2018-03-16 15:56:17.808878747 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v47_info:
	.quad	_c1v47
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.81262085 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cfromInteger_closure
.type GHC.Real.$fNumRatio_$cfromInteger_closure, @object
GHC.Real.$fNumRatio_$cfromInteger_closure:
	.quad	GHC.Real.$fNumRatio_$cfromInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.813486085 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$cfromInteger_entry
.type GHC.Real.$fNumRatio_$cfromInteger_entry, @object
GHC.Real.$fNumRatio_$cfromInteger_entry:
_c1v4M:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v4N
_c1v4O:
	leaq block_c1v4J_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
_c1v4N:
	leaq GHC.Real.$fNumRatio_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$cfromInteger_entry, .-GHC.Real.$fNumRatio_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:56:17.814172528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$cfromInteger_info
.type GHC.Real.$fNumRatio_$cfromInteger_info, @object
GHC.Real.$fNumRatio_$cfromInteger_info:
	.quad	GHC.Real.$fNumRatio_$cfromInteger_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+800


==================== Asm code ====================
2018-03-16 15:56:17.814925313 UTC

.section .text
.align 8
_c1v4J:
_c1v4J:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v4R
_c1v4Q:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v4R:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1v4J, .-_c1v4J


==================== Asm code ====================
2018-03-16 15:56:17.815587662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v4J_info:
	.quad	_c1v4J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.817873992 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$s$ctoRational_closure
.type GHC.Real.$fRealRatio_$s$ctoRational_closure, @object
GHC.Real.$fRealRatio_$s$ctoRational_closure:
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_info


==================== Asm code ====================
2018-03-16 15:56:17.818560641 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_$s$ctoRational_entry
.type GHC.Real.$fRealRatio_$s$ctoRational_entry, @object
GHC.Real.$fRealRatio_$s$ctoRational_entry:
_c1v57:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealRatio_$s$ctoRational_entry, .-GHC.Real.$fRealRatio_$s$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:17.819207374 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$s$ctoRational_info
.type GHC.Real.$fRealRatio_$s$ctoRational_info, @object
GHC.Real.$fRealRatio_$s$ctoRational_info:
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:17.824074609 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$ctoRational_closure
.type GHC.Real.$fRealRatio_$ctoRational_closure, @object
GHC.Real.$fRealRatio_$ctoRational_closure:
	.quad	GHC.Real.$fRealRatio_$ctoRational_info


==================== Asm code ====================
2018-03-16 15:56:17.824894042 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_$ctoRational_entry
.type GHC.Real.$fRealRatio_$ctoRational_entry, @object
GHC.Real.$fRealRatio_$ctoRational_entry:
_c1v5n:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v5z
_c1v5A:
	leaq block_c1v5k_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1v5k
_c1v5l:
	movq (%rbx),%rax
	jmp *(%rax)
_c1v5z:
	leaq GHC.Real.$fRealRatio_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealRatio_$ctoRational_entry, .-GHC.Real.$fRealRatio_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:56:17.825607302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_$ctoRational_info
.type GHC.Real.$fRealRatio_$ctoRational_info, @object
GHC.Real.$fRealRatio_$ctoRational_info:
	.quad	GHC.Real.$fRealRatio_$ctoRational_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:17.826272911 UTC

.section .text
.align 8
_c1v5k:
_c1v5k:
	leaq block_c1v5q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1v5k, .-_c1v5k


==================== Asm code ====================
2018-03-16 15:56:17.826917115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v5k_info:
	.quad	_c1v5k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.827576469 UTC

.section .text
.align 8
_c1v5q:
_c1v5q:
	movq 8(%rbp),%rax
	leaq block_c1v5u_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.toInteger_entry
	.size _c1v5q, .-_c1v5q


==================== Asm code ====================
2018-03-16 15:56:17.828193785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v5q_info:
	.quad	_c1v5q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.828921698 UTC

.section .text
.align 8
_c1v5u:
_c1v5u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v5F
_c1v5E:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v5F:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v5u, .-_c1v5u


==================== Asm code ====================
2018-03-16 15:56:17.82964635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v5u_info:
	.quad	_c1v5u
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.838300598 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$crecip_closure
.type GHC.Real.$w$crecip_closure, @object
GHC.Real.$w$crecip_closure:
	.quad	GHC.Real.$w$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.839282968 UTC

.section .text
.align 8
$dNum_s1swI_entry:
_c1v6i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v6j
_c1v6k:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1v6j:
	jmp *-16(%r13)
	.size $dNum_s1swI_entry, .-$dNum_s1swI_entry


==================== Asm code ====================
2018-03-16 15:56:17.839910083 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1swI_info:
	.quad	$dNum_s1swI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.840632735 UTC

.section .text
.align 8
sat_s1swL_entry:
_c1v6t:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v6u
_c1v6v:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1v6u:
	jmp *-16(%r13)
	.size sat_s1swL_entry, .-sat_s1swL_entry


==================== Asm code ====================
2018-03-16 15:56:17.841335478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1swL_info:
	.quad	sat_s1swL_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.8420812 UTC

.section .text
.align 8
sat_s1swN_entry:
_c1v6I:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v6J
_c1v6K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1v6J:
	jmp *-16(%r13)
	.size sat_s1swN_entry, .-sat_s1swN_entry


==================== Asm code ====================
2018-03-16 15:56:17.842717011 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1swN_info:
	.quad	sat_s1swN_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.843279551 UTC

.section .data.rel.ro
.align 8
.align 1
u1v7n_srtd:
	.quad	S1sVz_srt+296
	.quad	66
	.quad	281474976710657
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:17.844036844 UTC

.section .text
.align 8
.globl GHC.Real.$w$crecip_entry
.type GHC.Real.$w$crecip_entry, @object
GHC.Real.$w$crecip_entry:
_c1v6L:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v6M
_c1v6N:
	leaq block_c1v6a_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1v6M:
	leaq GHC.Real.$w$crecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$crecip_entry, .-GHC.Real.$w$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:17.844651345 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$crecip_info
.type GHC.Real.$w$crecip_info, @object
GHC.Real.$w$crecip_info:
	.quad	GHC.Real.$w$crecip_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1v7n_srtd


==================== Asm code ====================
2018-03-16 15:56:17.845215127 UTC

.section .data.rel.ro
.align 8
.align 1
u1v7o_srtd:
	.quad	S1sVz_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:17.846312102 UTC

.section .text
.align 8
_c1v6a:
_c1v6a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v6Q
_c1v6P:
	leaq $dNum_s1swI_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1v6l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1v6Q:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v6a, .-_c1v6a


==================== Asm code ====================
2018-03-16 15:56:17.84697894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v6a_info:
	.quad	_c1v6a
	.quad	2
	.quad	-4294967266
	.quad	u1v7o_srtd


==================== Asm code ====================
2018-03-16 15:56:17.847532228 UTC

.section .data.rel.ro
.align 8
.align 1
u1v7p_srtd:
	.quad	S1sVz_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:17.84827097 UTC

.section .text
.align 8
_c1v6l:
_c1v6l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v6T
_c1v6S:
	leaq sat_s1swL_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1v6w_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_c1v6T:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v6l, .-_c1v6l


==================== Asm code ====================
2018-03-16 15:56:17.848929074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v6l_info:
	.quad	_c1v6l
	.quad	3
	.quad	-4294967266
	.quad	u1v7p_srtd


==================== Asm code ====================
2018-03-16 15:56:17.849615638 UTC

.section .data.rel.ro
.align 8
.align 1
u1v7q_srtd:
	.quad	S1sVz_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:17.850340343 UTC

.section .text
.align 8
_c1v6w:
_c1v6w:
	leaq block_c1v6A_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1v6w, .-_c1v6w


==================== Asm code ====================
2018-03-16 15:56:17.851033689 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v6w_info:
	.quad	_c1v6w
	.quad	5
	.quad	-4294967266
	.quad	u1v7q_srtd


==================== Asm code ====================
2018-03-16 15:56:17.851608385 UTC

.section .data.rel.ro
.align 8
.align 1
u1v7r_srtd:
	.quad	S1sVz_srt+296
	.quad	49
	.quad	281474976710657


==================== Asm code ====================
2018-03-16 15:56:17.852501346 UTC

.section .text
.align 8
_c1v6A:
_c1v6A:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1v6X
_c1v7k:
	leaq GHC.Real.ratioZeroDenominatorError_closure(%rip),%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1v70:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1v6X:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v70
_c1v6Z:
	leaq sat_s1swN_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1v6V_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c1v6A, .-_c1v6A


==================== Asm code ====================
2018-03-16 15:56:17.853958456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v6A_info:
	.quad	_c1v6A
	.quad	133
	.quad	-4294967266
	.quad	u1v7r_srtd


==================== Asm code ====================
2018-03-16 15:56:17.854751038 UTC

.section .text
.align 8
_c1v6V:
_c1v6V:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1v76
_c1v7d:
	leaq block_c1v79_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1v76:
	movq 16(%rbp),%r14
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1v6V, .-_c1v6V


==================== Asm code ====================
2018-03-16 15:56:17.855441274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v6V_info:
	.quad	_c1v6V
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.856126979 UTC

.section .text
.align 8
_c1v79:
_c1v79:
	movq 16(%rbp),%rax
	leaq block_c1v7b_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	movq %rbx,24(%rbp)
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
	.size _c1v79, .-_c1v79


==================== Asm code ====================
2018-03-16 15:56:17.856740067 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v79_info:
	.quad	_c1v79
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.857654789 UTC

.section .text
.align 8
_c1v7b:
_c1v7b:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1v7b, .-_c1v7b


==================== Asm code ====================
2018-03-16 15:56:17.858221882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v7b_info:
	.quad	_c1v7b
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.862007691 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$crecip_closure
.type GHC.Real.$fFractionalRatio_$crecip_closure, @object
GHC.Real.$fFractionalRatio_$crecip_closure:
	.quad	GHC.Real.$fFractionalRatio_$crecip_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.862802129 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$crecip_entry
.type GHC.Real.$fFractionalRatio_$crecip_entry, @object
GHC.Real.$fFractionalRatio_$crecip_entry:
_c1v8P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v8V
_c1v8W:
	leaq block_c1v8M_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1v8M
_c1v8N:
	movq (%rbx),%rax
	jmp *(%rax)
_c1v8V:
	leaq GHC.Real.$fFractionalRatio_$crecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$crecip_entry, .-GHC.Real.$fFractionalRatio_$crecip_entry


==================== Asm code ====================
2018-03-16 15:56:17.863480032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$crecip_info
.type GHC.Real.$fFractionalRatio_$crecip_info, @object
GHC.Real.$fFractionalRatio_$crecip_info:
	.quad	GHC.Real.$fFractionalRatio_$crecip_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+816


==================== Asm code ====================
2018-03-16 15:56:17.86415198 UTC

.section .text
.align 8
_c1v8M:
_c1v8M:
	movq 8(%rbp),%rax
	leaq block_c1v8S_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$crecip_entry
	.size _c1v8M, .-_c1v8M


==================== Asm code ====================
2018-03-16 15:56:17.864776643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v8M_info:
	.quad	_c1v8M
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+816


==================== Asm code ====================
2018-03-16 15:56:17.86556505 UTC

.section .text
.align 8
_c1v8S:
_c1v8S:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v90
_c1v8Z:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v90:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1v8S, .-_c1v8S


==================== Asm code ====================
2018-03-16 15:56:17.866213303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v8S_info:
	.quad	_c1v8S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.874266497 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cproperFraction_closure
.type GHC.Real.$w$s$cproperFraction_closure, @object
GHC.Real.$w$s$cproperFraction_closure:
	.quad	GHC.Real.$w$s$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.874856866 UTC

.section .data.rel.ro
.align 8
.align 1
u1vax_srtd:
	.quad	S1sVz_srt+424
	.quad	33
	.quad	4294967297


==================== Asm code ====================
2018-03-16 15:56:17.875727542 UTC

.section .text
.align 8
ds_s1sx3_entry:
_c1v9v:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1v9w
_c1v9x:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1v9q_info(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1v9w:
	jmp *-16(%r13)
	.size ds_s1sx3_entry, .-ds_s1sx3_entry


==================== Asm code ====================
2018-03-16 15:56:17.876408258 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sx3_info:
	.quad	ds_s1sx3_entry
	.quad	2
	.quad	-4294967278
	.quad	u1vax_srtd


==================== Asm code ====================
2018-03-16 15:56:17.877139039 UTC

.section .text
.align 8
_c1v9q:
_c1v9q:
	cmpq $1,%rbx
	je _c1v9u
_c1v9t:
	movq 16(%rbp),%rax
	leaq block_c1v9A_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c1v9u:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1v9q, .-_c1v9q


==================== Asm code ====================
2018-03-16 15:56:17.877875009 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v9q_info:
	.quad	_c1v9q
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+832


==================== Asm code ====================
2018-03-16 15:56:17.878651216 UTC

.section .text
.align 8
_c1v9A:
_c1v9A:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1v9G
_c1v9F:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1v9G:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1v9A, .-_c1v9A


==================== Asm code ====================
2018-03-16 15:56:17.879254131 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v9A_info:
	.quad	_c1v9A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.880036044 UTC

.section .text
.align 8
sat_s1sxj_entry:
_c1v9R:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1va0
_c1va1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1v9O_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c1v9O
_c1v9P:
	movq (%rbx),%rax
	jmp *(%rax)
_c1va0:
	jmp *-16(%r13)
	.size sat_s1sxj_entry, .-sat_s1sxj_entry


==================== Asm code ====================
2018-03-16 15:56:17.880692439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sxj_info:
	.quad	sat_s1sxj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.882003579 UTC

.section .text
.align 8
_c1v9O:
_c1v9O:
	leaq block_c1v9U_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c1v9U
_c1v9V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1v9O, .-_c1v9O


==================== Asm code ====================
2018-03-16 15:56:17.882616222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v9O_info:
	.quad	_c1v9O
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.883378775 UTC

.section .text
.align 8
_c1v9U:
_c1v9U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1va5
_c1va4:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1va5:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1v9U, .-_c1v9U


==================== Asm code ====================
2018-03-16 15:56:17.884026575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1v9U_info:
	.quad	_c1v9U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.884847071 UTC

.section .text
.align 8
sat_s1sxe_entry:
_c1vaf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vaj
_c1vak:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vam
_c1val:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1vad_info(%rip),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1vam:
	movq $24,904(%r13)
_c1vaj:
	jmp *-16(%r13)
	.size sat_s1sxe_entry, .-sat_s1sxe_entry


==================== Asm code ====================
2018-03-16 15:56:17.886217255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sxe_info:
	.quad	sat_s1sxe_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.886901252 UTC

.section .text
.align 8
_c1vad:
_c1vad:
	leaq block_c1vai_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vad, .-_c1vad


==================== Asm code ====================
2018-03-16 15:56:17.887528258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vad_info:
	.quad	_c1vad
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.88814472 UTC

.section .text
.align 8
_c1vai:
_c1vai:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1vai, .-_c1vai


==================== Asm code ====================
2018-03-16 15:56:17.888704132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vai_info:
	.quad	_c1vai
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.889531425 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cproperFraction_entry
.type GHC.Real.$w$s$cproperFraction_entry, @object
GHC.Real.$w$s$cproperFraction_entry:
_c1vas:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1vaw
_c1vav:
	leaq ds_s1sx3_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	leaq sat_s1sxj_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	leaq sat_s1sxe_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %r14,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%r14
	leaq -24(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vaw:
	movq $96,904(%r13)
	leaq GHC.Real.$w$s$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cproperFraction_entry, .-GHC.Real.$w$s$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:17.890278749 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cproperFraction_info
.type GHC.Real.$w$s$cproperFraction_info, @object
GHC.Real.$w$s$cproperFraction_info:
	.quad	GHC.Real.$w$s$cproperFraction_entry
	.quad	0
	.quad	6755403736023054
	.quad	12884901911
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.894182557 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_closure
.type GHC.Real.$fEnumRatio_$s$cproperFraction_closure, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.895002516 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_entry
.type GHC.Real.$fEnumRatio_$s$cproperFraction_entry, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_entry:
_c1vbC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vbI
_c1vbJ:
	leaq block_c1vbz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vbz
_c1vbA:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vbI:
	leaq GHC.Real.$fEnumRatio_$s$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cproperFraction_entry, .-GHC.Real.$fEnumRatio_$s$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:17.895652879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cproperFraction_info
.type GHC.Real.$fEnumRatio_$s$cproperFraction_info, @object
GHC.Real.$fEnumRatio_$s$cproperFraction_info:
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+840


==================== Asm code ====================
2018-03-16 15:56:17.89634018 UTC

.section .text
.align 8
_c1vbz:
_c1vbz:
	movq 8(%rbp),%rax
	leaq block_c1vbF_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
	.size _c1vbz, .-_c1vbz


==================== Asm code ====================
2018-03-16 15:56:17.896951168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vbz_info:
	.quad	_c1vbz
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+840


==================== Asm code ====================
2018-03-16 15:56:17.897721475 UTC

.section .text
.align 8
_c1vbF:
_c1vbF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vbN
_c1vbM:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vbN:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vbF, .-_c1vbF


==================== Asm code ====================
2018-03-16 15:56:17.898335862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vbF_info:
	.quad	_c1vbF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.906482722 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cproperFraction_closure
.type GHC.Real.$w$cproperFraction_closure, @object
GHC.Real.$w$cproperFraction_closure:
	.quad	GHC.Real.$w$cproperFraction_info


==================== Asm code ====================
2018-03-16 15:56:17.907343653 UTC

.section .text
.align 8
ds_s1sxw_entry:
_c1vcd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vce
_c1vcf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quotRem_entry
_c1vce:
	jmp *-16(%r13)
	.size ds_s1sxw_entry, .-ds_s1sxw_entry


==================== Asm code ====================
2018-03-16 15:56:17.908058568 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s1sxw_info:
	.quad	ds_s1sxw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.908842719 UTC

.section .text
.align 8
sat_s1sxJ_entry:
_c1vcn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vct
_c1vcu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1vck_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c1vck
_c1vcl:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vct:
	jmp *-16(%r13)
	.size sat_s1sxJ_entry, .-sat_s1sxJ_entry


==================== Asm code ====================
2018-03-16 15:56:17.909548285 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sxJ_info:
	.quad	sat_s1sxJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.9101621 UTC

.section .text
.align 8
_c1vck:
_c1vck:
	leaq block_c1vcq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vck, .-_c1vck


==================== Asm code ====================
2018-03-16 15:56:17.910738707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vck_info:
	.quad	_c1vck
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.911485873 UTC

.section .text
.align 8
_c1vcq:
_c1vcq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vcy
_c1vcx:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vcy:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vcq, .-_c1vcq


==================== Asm code ====================
2018-03-16 15:56:17.91214073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vcq_info:
	.quad	_c1vcq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.912936965 UTC

.section .text
.align 8
sat_s1sxD_entry:
_c1vcJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vcK
_c1vcL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vcN
_c1vcM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.toInteger_entry
_c1vcN:
	movq $24,904(%r13)
_c1vcK:
	jmp *-16(%r13)
	.size sat_s1sxD_entry, .-sat_s1sxD_entry


==================== Asm code ====================
2018-03-16 15:56:17.913741099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sxD_info:
	.quad	sat_s1sxD_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.914688774 UTC

.section .text
.align 8
sat_s1sxE_entry:
_c1vcQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vcU
_c1vcV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1vcX
_c1vcW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1sxD_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1vcO_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rcx,%r14
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1vcX:
	movq $32,904(%r13)
_c1vcU:
	jmp *-16(%r13)
	.size sat_s1sxE_entry, .-sat_s1sxE_entry


==================== Asm code ====================
2018-03-16 15:56:17.915439696 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sxE_info:
	.quad	sat_s1sxE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.916142548 UTC

.section .text
.align 8
_c1vcO:
_c1vcO:
	leaq block_c1vcT_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vcO, .-_c1vcO


==================== Asm code ====================
2018-03-16 15:56:17.916674597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vcO_info:
	.quad	_c1vcO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.917367511 UTC

.section .text
.align 8
_c1vcT:
_c1vcT:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1vcT, .-_c1vcT


==================== Asm code ====================
2018-03-16 15:56:17.918043645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vcT_info:
	.quad	_c1vcT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.919410279 UTC

.section .text
.align 8
.globl GHC.Real.$w$cproperFraction_entry
.type GHC.Real.$w$cproperFraction_entry, @object
GHC.Real.$w$cproperFraction_entry:
_c1vd3:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1vd7
_c1vd6:
	leaq ds_s1sxw_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	leaq sat_s1sxJ_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r8,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1sxE_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rax,(%r12)
	leaq -64(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vd7:
	movq $112,904(%r13)
	leaq GHC.Real.$w$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cproperFraction_entry, .-GHC.Real.$w$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:17.920255065 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cproperFraction_info
.type GHC.Real.$w$cproperFraction_info, @object
GHC.Real.$w$cproperFraction_info:
	.quad	GHC.Real.$w$cproperFraction_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:56:17.924489435 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cproperFraction_closure
.type GHC.Real.$fEnumRatio_$cproperFraction_closure, @object
GHC.Real.$fEnumRatio_$cproperFraction_closure:
	.quad	GHC.Real.$fEnumRatio_$cproperFraction_info


==================== Asm code ====================
2018-03-16 15:56:17.925385239 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cproperFraction_entry
.type GHC.Real.$fEnumRatio_$cproperFraction_entry, @object
GHC.Real.$fEnumRatio_$cproperFraction_entry:
_c1vea:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1veg
_c1veh:
	leaq block_c1ve7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1ve7
_c1ve8:
	movq (%rbx),%rax
	jmp *(%rax)
_c1veg:
	leaq GHC.Real.$fEnumRatio_$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cproperFraction_entry, .-GHC.Real.$fEnumRatio_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:56:17.926008369 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cproperFraction_info
.type GHC.Real.$fEnumRatio_$cproperFraction_info, @object
GHC.Real.$fEnumRatio_$cproperFraction_info:
	.quad	GHC.Real.$fEnumRatio_$cproperFraction_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:17.926673379 UTC

.section .text
.align 8
_c1ve7:
_c1ve7:
	movq 16(%rbp),%rax
	leaq block_c1ved_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
	.size _c1ve7, .-_c1ve7


==================== Asm code ====================
2018-03-16 15:56:17.927305816 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ve7_info:
	.quad	_c1ve7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.92803627 UTC

.section .text
.align 8
_c1ved:
_c1ved:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vel
_c1vek:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vel:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1ved, .-_c1ved


==================== Asm code ====================
2018-03-16 15:56:17.928675627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ved_info:
	.quad	_c1ved
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.936530499 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wreduce_closure
.type GHC.Real.$wreduce_closure, @object
GHC.Real.$wreduce_closure:
	.quad	GHC.Real.$wreduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.937402924 UTC

.section .text
.align 8
sat_s1sy0_entry:
_c1veR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1veS
_c1veT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1veP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c1veS:
	jmp *-16(%r13)
	.size sat_s1sy0_entry, .-sat_s1sy0_entry


==================== Asm code ====================
2018-03-16 15:56:17.938024379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sy0_info:
	.quad	sat_s1sy0_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.938696676 UTC

.section .text
.align 8
_c1veP:
_c1veP:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1veP, .-_c1veP


==================== Asm code ====================
2018-03-16 15:56:17.939293666 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1veP_info:
	.quad	_c1veP
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+680


==================== Asm code ====================
2018-03-16 15:56:17.939991124 UTC

.section .text
.align 8
d_s1sy2_entry:
_c1vfd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vfe
_c1vff:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.gcd_entry
_c1vfe:
	jmp *-16(%r13)
	.size d_s1sy2_entry, .-d_s1sy2_entry


==================== Asm code ====================
2018-03-16 15:56:17.940626637 UTC

.section .data.rel.ro
.align 8
.align 1
d_s1sy2_info:
	.quad	d_s1sy2_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+856


==================== Asm code ====================
2018-03-16 15:56:17.941221759 UTC

.section .data.rel.ro
.align 8
.align 1
u1vfE_srtd:
	.quad	S1sVz_srt+296
	.quad	72
	.quad	281474976710657
	.quad	192


==================== Asm code ====================
2018-03-16 15:56:17.94209943 UTC

.section .text
.align 8
.globl GHC.Real.$wreduce_entry
.type GHC.Real.$wreduce_entry, @object
GHC.Real.$wreduce_entry:
_c1vfg:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vfh
_c1vfi:
	leaq block_c1veH_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1vfh:
	leaq GHC.Real.$wreduce_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$wreduce_entry, .-GHC.Real.$wreduce_entry


==================== Asm code ====================
2018-03-16 15:56:17.942793769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wreduce_info
.type GHC.Real.$wreduce_info, @object
GHC.Real.$wreduce_info:
	.quad	GHC.Real.$wreduce_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1vfE_srtd


==================== Asm code ====================
2018-03-16 15:56:17.943393663 UTC

.section .data.rel.ro
.align 8
.align 1
u1vfF_srtd:
	.quad	S1sVz_srt+296
	.quad	71
	.quad	281474976710657
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:17.944142948 UTC

.section .text
.align 8
_c1veH:
_c1veH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vfl
_c1vfk:
	leaq sat_s1sy0_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1veX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1vfl:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1veH, .-_c1veH


==================== Asm code ====================
2018-03-16 15:56:17.944774869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1veH_info:
	.quad	_c1veH
	.quad	3
	.quad	-4294967266
	.quad	u1vfF_srtd


==================== Asm code ====================
2018-03-16 15:56:17.94540361 UTC

.section .data.rel.ro
.align 8
.align 1
u1vfG_srtd:
	.quad	S1sVz_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:17.946042296 UTC

.section .text
.align 8
_c1veX:
_c1veX:
	leaq block_c1vf1_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1veX, .-_c1veX


==================== Asm code ====================
2018-03-16 15:56:17.946667154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1veX_info:
	.quad	_c1veX
	.quad	4
	.quad	-4294967266
	.quad	u1vfG_srtd


==================== Asm code ====================
2018-03-16 15:56:17.947201816 UTC

.section .data.rel.ro
.align 8
.align 1
u1vfH_srtd:
	.quad	S1sVz_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:17.947871561 UTC

.section .text
.align 8
_c1vf1:
_c1vf1:
	movq 8(%rbp),%rax
	leaq block_c1vf5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1vf1, .-_c1vf1


==================== Asm code ====================
2018-03-16 15:56:17.948562657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vf1_info:
	.quad	_c1vf1
	.quad	4
	.quad	-4294967266
	.quad	u1vfH_srtd


==================== Asm code ====================
2018-03-16 15:56:17.949143864 UTC

.section .data.rel.ro
.align 8
.align 1
u1vfI_srtd:
	.quad	S1sVz_srt+296
	.quad	71
	.quad	1
	.quad	64


==================== Asm code ====================
2018-03-16 15:56:17.950236125 UTC

.section .text
.align 8
_c1vf5:
_c1vf5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1vfs
_c1vfC:
	leaq GHC.Real.ratioZeroDenominatorError_closure(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1vfv:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1vfs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1vfv
_c1vfu:
	leaq d_s1sy2_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_c1vfo_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.quot_entry
	.size _c1vf5, .-_c1vf5


==================== Asm code ====================
2018-03-16 15:56:17.950972162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vf5_info:
	.quad	_c1vf5
	.quad	3
	.quad	-4294967266
	.quad	u1vfI_srtd


==================== Asm code ====================
2018-03-16 15:56:17.952182232 UTC

.section .text
.align 8
_c1vfo:
_c1vfo:
	movq 16(%rbp),%rax
	leaq block_c1vfq_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 24(%rbp),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	movq %rbx,24(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.quot_entry
	.size _c1vfo, .-_c1vfo


==================== Asm code ====================
2018-03-16 15:56:17.952873199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vfo_info:
	.quad	_c1vfo
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.953557719 UTC

.section .text
.align 8
_c1vfq:
_c1vfq:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1vfq, .-_c1vfq


==================== Asm code ====================
2018-03-16 15:56:17.954119088 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vfq_info:
	.quad	_c1vfq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.957631269 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.reduce_closure
.type GHC.Real.reduce_closure, @object
GHC.Real.reduce_closure:
	.quad	GHC.Real.reduce_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.958447337 UTC

.section .text
.align 8
.globl GHC.Real.reduce_entry
.type GHC.Real.reduce_entry, @object
GHC.Real.reduce_entry:
_c1vgQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vgR
_c1vgS:
	leaq block_c1vgN_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$wreduce_entry
_c1vgR:
	leaq GHC.Real.reduce_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.reduce_entry, .-GHC.Real.reduce_entry


==================== Asm code ====================
2018-03-16 15:56:17.959079782 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.reduce_info
.type GHC.Real.reduce_info, @object
GHC.Real.reduce_info:
	.quad	GHC.Real.reduce_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+864


==================== Asm code ====================
2018-03-16 15:56:17.959786693 UTC

.section .text
.align 8
_c1vgN:
_c1vgN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vgV
_c1vgU:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vgV:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vgN, .-_c1vgN


==================== Asm code ====================
2018-03-16 15:56:17.960444197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vgN_info:
	.quad	_c1vgN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.963566808 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.%_$s%_closure
.type GHC.Real.%_$s%_closure, @object
GHC.Real.%_$s%_closure:
	.quad	GHC.Real.%_$s%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.964355438 UTC

.section .text
.align 8
.globl GHC.Real.%_$s%_entry
.type GHC.Real.%_$s%_entry, @object
GHC.Real.%_$s%_entry:
_c1vhe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vhf
_c1vhg:
	leaq block_c1vhb_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$s$cfromRational_entry
_c1vhf:
	leaq GHC.Real.%_$s%_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.%_$s%_entry, .-GHC.Real.%_$s%_entry


==================== Asm code ====================
2018-03-16 15:56:17.964948635 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.%_$s%_info
.type GHC.Real.%_$s%_info, @object
GHC.Real.%_$s%_info:
	.quad	GHC.Real.%_$s%_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+880


==================== Asm code ====================
2018-03-16 15:56:17.965711539 UTC

.section .text
.align 8
_c1vhb:
_c1vhb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vhj
_c1vhi:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vhj:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vhb, .-_c1vhb


==================== Asm code ====================
2018-03-16 15:56:17.966332903 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vhb_info:
	.quad	_c1vhb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.972605459 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w%_closure
.type GHC.Real.$w%_closure, @object
GHC.Real.$w%_closure:
	.quad	GHC.Real.$w%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.973327349 UTC

.section .text
.align 8
$dReal_s1syk_entry:
_c1vhD:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1syk_entry, .-$dReal_s1syk_entry


==================== Asm code ====================
2018-03-16 15:56:17.973897634 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1syk_info:
	.quad	$dReal_s1syk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.97466093 UTC

.section .text
.align 8
$dNum_s1syl_entry:
_c1vhK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vhL
_c1vhM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vhL:
	jmp *-16(%r13)
	.size $dNum_s1syl_entry, .-$dNum_s1syl_entry


==================== Asm code ====================
2018-03-16 15:56:17.975265505 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1syl_info:
	.quad	$dNum_s1syl_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.975939279 UTC

.section .text
.align 8
sat_s1syo_entry:
_c1vhR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vhS
_c1vhT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
_c1vhS:
	jmp *-16(%r13)
	.size sat_s1syo_entry, .-sat_s1syo_entry


==================== Asm code ====================
2018-03-16 15:56:17.976602839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syo_info:
	.quad	sat_s1syo_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.97742967 UTC

.section .text
.align 8
sat_s1sym_entry:
_c1vi2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vi3
_c1vi4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.signum_entry@gotpcrel(%rip)
_c1vi3:
	jmp *-16(%r13)
	.size sat_s1sym_entry, .-sat_s1sym_entry


==================== Asm code ====================
2018-03-16 15:56:17.978086522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sym_info:
	.quad	sat_s1sym_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:17.978916235 UTC

.section .text
.align 8
sat_s1syn_entry:
_c1vi5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vi6
_c1vi7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1vi9
_c1vi8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1sym_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rax,-32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vi9:
	movq $32,904(%r13)
_c1vi6:
	jmp *-16(%r13)
	.size sat_s1syn_entry, .-sat_s1syn_entry


==================== Asm code ====================
2018-03-16 15:56:17.979661366 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syn_info:
	.quad	sat_s1syn_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.980416184 UTC

.section .text
.align 8
.globl GHC.Real.$w%_entry
.type GHC.Real.$w%_entry, @object
GHC.Real.$w%_entry:
_c1via:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c1vie
_c1vid:
	leaq $dReal_s1syk_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	leaq $dNum_s1syl_info(%rip),%rax
	movq %rax,-88(%r12)
	leaq -112(%r12),%rax
	movq %rax,-72(%r12)
	leaq sat_s1syo_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rdi,-48(%r12)
	leaq -88(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1syn_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rax,(%r12)
	leaq -64(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1vie:
	movq $120,904(%r13)
	leaq GHC.Real.$w%_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w%_entry, .-GHC.Real.$w%_entry


==================== Asm code ====================
2018-03-16 15:56:17.98113238 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w%_info
.type GHC.Real.$w%_info, @object
GHC.Real.$w%_info:
	.quad	GHC.Real.$w%_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S1sVz_srt+864


==================== Asm code ====================
2018-03-16 15:56:17.984597043 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.%_closure
.type GHC.Real.%_closure, @object
GHC.Real.%_closure:
	.quad	GHC.Real.%_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.985941185 UTC

.section .text
.align 8
.globl GHC.Real.%_entry
.type GHC.Real.%_entry, @object
GHC.Real.%_entry:
_c1viZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vj0
_c1vj1:
	leaq block_c1viW_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w%_entry
_c1vj0:
	leaq GHC.Real.%_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.%_entry, .-GHC.Real.%_entry


==================== Asm code ====================
2018-03-16 15:56:17.986647566 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.%_info
.type GHC.Real.%_info, @object
GHC.Real.%_info:
	.quad	GHC.Real.%_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+896


==================== Asm code ====================
2018-03-16 15:56:17.987382187 UTC

.section .text
.align 8
_c1viW:
_c1viW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vj4
_c1vj3:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vj4:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1viW, .-_c1viW


==================== Asm code ====================
2018-03-16 15:56:17.987974158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1viW_info:
	.quad	_c1viW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:17.992931046 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c/_closure
.type GHC.Real.$w$c/_closure, @object
GHC.Real.$w$c/_closure:
	.quad	GHC.Real.$w$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:17.993692933 UTC

.section .text
.align 8
$dReal_s1syA_entry:
_c1vjo:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1syA_entry, .-$dReal_s1syA_entry


==================== Asm code ====================
2018-03-16 15:56:17.99428832 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1syA_info:
	.quad	$dReal_s1syA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.994967864 UTC

.section .text
.align 8
$dNum_s1syB_entry:
_c1vjv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vjw
_c1vjx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vjw:
	jmp *-16(%r13)
	.size $dNum_s1syB_entry, .-$dNum_s1syB_entry


==================== Asm code ====================
2018-03-16 15:56:17.995573711 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1syB_info:
	.quad	$dNum_s1syB_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:17.996295069 UTC

.section .text
.align 8
sat_s1syD_entry:
_c1vjC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vjD
_c1vjE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vjD:
	jmp *-16(%r13)
	.size sat_s1syD_entry, .-sat_s1syD_entry


==================== Asm code ====================
2018-03-16 15:56:17.996925121 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syD_info:
	.quad	sat_s1syD_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.997654694 UTC

.section .text
.align 8
sat_s1syC_entry:
_c1vjJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vjK
_c1vjL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vjK:
	jmp *-16(%r13)
	.size sat_s1syC_entry, .-sat_s1syC_entry


==================== Asm code ====================
2018-03-16 15:56:17.998298005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syC_info:
	.quad	sat_s1syC_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:17.999063216 UTC

.section .text
.align 8
.globl GHC.Real.$w$c/_entry
.type GHC.Real.$w$c/_entry, @object
GHC.Real.$w$c/_entry:
_c1vjM:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _c1vjQ
_c1vjP:
	leaq $dReal_s1syA_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-104(%r12)
	leaq $dNum_s1syB_info(%rip),%rax
	movq %rax,-96(%r12)
	leaq -120(%r12),%rax
	movq %rax,-80(%r12)
	leaq sat_s1syD_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1syC_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -72(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$w%_entry
_c1vjQ:
	movq $128,904(%r13)
	leaq GHC.Real.$w$c/_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c/_entry, .-GHC.Real.$w$c/_entry


==================== Asm code ====================
2018-03-16 15:56:17.999772681 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c/_info
.type GHC.Real.$w$c/_info, @object
GHC.Real.$w$c/_info:
	.quad	GHC.Real.$w$c/_entry
	.quad	0
	.quad	21474836494
	.quad	21474836505
	.quad	S1sVz_srt+896


==================== Asm code ====================
2018-03-16 15:56:18.004309189 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$c/_closure
.type GHC.Real.$fFractionalRatio_$c/_closure, @object
GHC.Real.$fFractionalRatio_$c/_closure:
	.quad	GHC.Real.$fFractionalRatio_$c/_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.005113271 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$c/_entry
.type GHC.Real.$fFractionalRatio_$c/_entry, @object
GHC.Real.$fFractionalRatio_$c/_entry:
_c1vkv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vkG
_c1vkH:
	leaq block_c1vks_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vks
_c1vkt:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vkG:
	leaq GHC.Real.$fFractionalRatio_$c/_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$c/_entry, .-GHC.Real.$fFractionalRatio_$c/_entry


==================== Asm code ====================
2018-03-16 15:56:18.005836102 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$c/_info
.type GHC.Real.$fFractionalRatio_$c/_info, @object
GHC.Real.$fFractionalRatio_$c/_info:
	.quad	GHC.Real.$fFractionalRatio_$c/_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+912


==================== Asm code ====================
2018-03-16 15:56:18.006569655 UTC

.section .text
.align 8
_c1vks:
_c1vks:
	leaq block_c1vky_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vky
_c1vkz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vks, .-_c1vks


==================== Asm code ====================
2018-03-16 15:56:18.007143795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vks_info:
	.quad	_c1vks
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+912


==================== Asm code ====================
2018-03-16 15:56:18.007784618 UTC

.section .text
.align 8
_c1vky:
_c1vky:
	movq 24(%rbp),%rax
	leaq block_c1vkD_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c/_entry
	.size _c1vky, .-_c1vky


==================== Asm code ====================
2018-03-16 15:56:18.008389084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vky_info:
	.quad	_c1vky
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+912


==================== Asm code ====================
2018-03-16 15:56:18.009030877 UTC

.section .text
.align 8
_c1vkD:
_c1vkD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vkM
_c1vkL:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vkM:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vkD, .-_c1vkD


==================== Asm code ====================
2018-03-16 15:56:18.010020008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vkD_info:
	.quad	_c1vkD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.014853706 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfromRational_closure
.type GHC.Real.$w$cfromRational_closure, @object
GHC.Real.$w$cfromRational_closure:
	.quad	GHC.Real.$w$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.015530324 UTC

.section .text
.align 8
$dReal_s1syT_entry:
_c1vli:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1syT_entry, .-$dReal_s1syT_entry


==================== Asm code ====================
2018-03-16 15:56:18.01608927 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1syT_info:
	.quad	$dReal_s1syT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.016766686 UTC

.section .text
.align 8
$dNum_s1syU_entry:
_c1vlp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vlq
_c1vlr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vlq:
	jmp *-16(%r13)
	.size $dNum_s1syU_entry, .-$dNum_s1syU_entry


==================== Asm code ====================
2018-03-16 15:56:18.017464999 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1syU_info:
	.quad	$dNum_s1syU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.018171977 UTC

.section .text
.align 8
sat_s1syW_entry:
_c1vlw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vlx
_c1vly:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vlx:
	jmp *-16(%r13)
	.size sat_s1syW_entry, .-sat_s1syW_entry


==================== Asm code ====================
2018-03-16 15:56:18.018845695 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syW_info:
	.quad	sat_s1syW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.020089515 UTC

.section .text
.align 8
sat_s1syV_entry:
_c1vlD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vlE
_c1vlF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vlE:
	jmp *-16(%r13)
	.size sat_s1syV_entry, .-sat_s1syV_entry


==================== Asm code ====================
2018-03-16 15:56:18.020765612 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1syV_info:
	.quad	sat_s1syV_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.02163887 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfromRational_entry
.type GHC.Real.$w$cfromRational_entry, @object
GHC.Real.$w$cfromRational_entry:
_c1vlG:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1vlK
_c1vlJ:
	leaq $dReal_s1syT_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq $dNum_s1syU_info(%rip),%rax
	movq %rax,-80(%r12)
	leaq -104(%r12),%rax
	movq %rax,-64(%r12)
	leaq sat_s1syW_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq sat_s1syV_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%rdi
	leaq -24(%r12),%rsi
	jmp GHC.Real.$w%_entry
_c1vlK:
	movq $112,904(%r13)
	leaq GHC.Real.$w$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfromRational_entry, .-GHC.Real.$w$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:18.022416917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfromRational_info
.type GHC.Real.$w$cfromRational_info, @object
GHC.Real.$w$cfromRational_info:
	.quad	GHC.Real.$w$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S1sVz_srt+896


==================== Asm code ====================
2018-03-16 15:56:18.026701878 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$cfromRational_closure
.type GHC.Real.$fFractionalRatio_$cfromRational_closure, @object
GHC.Real.$fFractionalRatio_$cfromRational_closure:
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.027805749 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_$cfromRational_entry
.type GHC.Real.$fFractionalRatio_$cfromRational_entry, @object
GHC.Real.$fFractionalRatio_$cfromRational_entry:
_c1vmn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vmt
_c1vmu:
	leaq block_c1vmk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vmk
_c1vml:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vmt:
	leaq GHC.Real.$fFractionalRatio_$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_$cfromRational_entry, .-GHC.Real.$fFractionalRatio_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:56:18.028748813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_$cfromRational_info
.type GHC.Real.$fFractionalRatio_$cfromRational_info, @object
GHC.Real.$fFractionalRatio_$cfromRational_info:
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+928


==================== Asm code ====================
2018-03-16 15:56:18.029812605 UTC

.section .text
.align 8
_c1vmk:
_c1vmk:
	movq 8(%rbp),%rax
	leaq block_c1vmq_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$cfromRational_entry
	.size _c1vmk, .-_c1vmk


==================== Asm code ====================
2018-03-16 15:56:18.03062606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vmk_info:
	.quad	_c1vmk
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+928


==================== Asm code ====================
2018-03-16 15:56:18.031598514 UTC

.section .text
.align 8
_c1vmq:
_c1vmq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vmy
_c1vmx:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vmy:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vmq, .-_c1vmq


==================== Asm code ====================
2018-03-16 15:56:18.032486817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vmq_info:
	.quad	_c1vmq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.042222826 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c+_closure
.type GHC.Real.$w$c+_closure, @object
GHC.Real.$w$c+_closure:
	.quad	GHC.Real.$w$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.043025767 UTC

.section .text
.align 8
$dReal_s1sza_entry:
_c1vmY:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1sza_entry, .-$dReal_s1sza_entry


==================== Asm code ====================
2018-03-16 15:56:18.043706947 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1sza_info:
	.quad	$dReal_s1sza_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.044548404 UTC

.section .text
.align 8
$dNum_s1szb_entry:
_c1vn5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vn6
_c1vn7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vn6:
	jmp *-16(%r13)
	.size $dNum_s1szb_entry, .-$dNum_s1szb_entry


==================== Asm code ====================
2018-03-16 15:56:18.045433238 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1szb_info:
	.quad	$dNum_s1szb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.04639653 UTC

.section .text
.align 8
sat_s1szf_entry:
_c1vnc:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vnd
_c1vne:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vnd:
	jmp *-16(%r13)
	.size sat_s1szf_entry, .-sat_s1szf_entry


==================== Asm code ====================
2018-03-16 15:56:18.047373007 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szf_info:
	.quad	sat_s1szf_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.048392576 UTC

.section .text
.align 8
sat_s1szd_entry:
_c1vnn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vno
_c1vnp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vno:
	jmp *-16(%r13)
	.size sat_s1szd_entry, .-sat_s1szd_entry


==================== Asm code ====================
2018-03-16 15:56:18.049292792 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szd_info:
	.quad	sat_s1szd_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.050299194 UTC

.section .text
.align 8
sat_s1szc_entry:
_c1vnu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vnv
_c1vnw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vnv:
	jmp *-16(%r13)
	.size sat_s1szc_entry, .-sat_s1szc_entry


==================== Asm code ====================
2018-03-16 15:56:18.051296384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szc_info:
	.quad	sat_s1szc_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.052507406 UTC

.section .text
.align 8
sat_s1sze_entry:
_c1vnx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vny
_c1vnz:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1vnB
_c1vnA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_s1szd_info(%rip),%rdi
	movq %rdi,-72(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_s1szc_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1vnB:
	movq $80,904(%r13)
_c1vny:
	jmp *-16(%r13)
	.size sat_s1sze_entry, .-sat_s1sze_entry


==================== Asm code ====================
2018-03-16 15:56:18.053889951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sze_info:
	.quad	sat_s1sze_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.054954575 UTC

.section .text
.align 8
.globl GHC.Real.$w$c+_entry
.type GHC.Real.$w$c+_entry, @object
GHC.Real.$w$c+_entry:
_c1vnC:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _c1vnG
_c1vnF:
	leaq $dReal_s1sza_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq $dNum_s1szb_info(%rip),%rax
	movq %rax,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-96(%r12)
	leaq sat_s1szf_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rdi,-72(%r12)
	movq %r9,-64(%r12)
	leaq -112(%r12),%rax
	movq %rax,-56(%r12)
	leaq sat_s1sze_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rdi
	leaq -48(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1vnG:
	movq $144,904(%r13)
	leaq GHC.Real.$w$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c+_entry, .-GHC.Real.$w$c+_entry


==================== Asm code ====================
2018-03-16 15:56:18.055969776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c+_info
.type GHC.Real.$w$c+_info, @object
GHC.Real.$w$c+_info:
	.quad	GHC.Real.$w$c+_entry
	.quad	0
	.quad	4402341478414
	.quad	21474836505
	.quad	S1sVz_srt+864


==================== Asm code ====================
2018-03-16 15:56:18.060428524 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c+_closure
.type GHC.Real.$fNumRatio_$c+_closure, @object
GHC.Real.$fNumRatio_$c+_closure:
	.quad	GHC.Real.$fNumRatio_$c+_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.061925012 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c+_entry
.type GHC.Real.$fNumRatio_$c+_entry, @object
GHC.Real.$fNumRatio_$c+_entry:
_c1voD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1voO
_c1voP:
	leaq block_c1voA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1voA
_c1voB:
	movq (%rbx),%rax
	jmp *(%rax)
_c1voO:
	leaq GHC.Real.$fNumRatio_$c+_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c+_entry, .-GHC.Real.$fNumRatio_$c+_entry


==================== Asm code ====================
2018-03-16 15:56:18.062660757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c+_info
.type GHC.Real.$fNumRatio_$c+_info, @object
GHC.Real.$fNumRatio_$c+_info:
	.quad	GHC.Real.$fNumRatio_$c+_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+944


==================== Asm code ====================
2018-03-16 15:56:18.06346051 UTC

.section .text
.align 8
_c1voA:
_c1voA:
	leaq block_c1voG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1voG
_c1voH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1voA, .-_c1voA


==================== Asm code ====================
2018-03-16 15:56:18.064102472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1voA_info:
	.quad	_c1voA
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+944


==================== Asm code ====================
2018-03-16 15:56:18.064694169 UTC

.section .text
.align 8
_c1voG:
_c1voG:
	movq 24(%rbp),%rax
	leaq block_c1voL_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c+_entry
	.size _c1voG, .-_c1voG


==================== Asm code ====================
2018-03-16 15:56:18.065445755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1voG_info:
	.quad	_c1voG
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+944


==================== Asm code ====================
2018-03-16 15:56:18.066179215 UTC

.section .text
.align 8
_c1voL:
_c1voL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1voU
_c1voT:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1voU:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1voL, .-_c1voL


==================== Asm code ====================
2018-03-16 15:56:18.066813888 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1voL_info:
	.quad	_c1voL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.073489135 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c-_closure
.type GHC.Real.$w$c-_closure, @object
GHC.Real.$w$c-_closure:
	.quad	GHC.Real.$w$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.074206618 UTC

.section .text
.align 8
$dReal_s1szx_entry:
_c1vpq:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1szx_entry, .-$dReal_s1szx_entry


==================== Asm code ====================
2018-03-16 15:56:18.074772348 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1szx_info:
	.quad	$dReal_s1szx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.075485051 UTC

.section .text
.align 8
$dNum_s1szy_entry:
_c1vpx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vpy
_c1vpz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vpy:
	jmp *-16(%r13)
	.size $dNum_s1szy_entry, .-$dNum_s1szy_entry


==================== Asm code ====================
2018-03-16 15:56:18.076115144 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1szy_info:
	.quad	$dNum_s1szy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.07683977 UTC

.section .text
.align 8
sat_s1szC_entry:
_c1vpE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vpF
_c1vpG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vpF:
	jmp *-16(%r13)
	.size sat_s1szC_entry, .-sat_s1szC_entry


==================== Asm code ====================
2018-03-16 15:56:18.077857868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szC_info:
	.quad	sat_s1szC_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.078589714 UTC

.section .text
.align 8
sat_s1szA_entry:
_c1vpP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vpQ
_c1vpR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vpQ:
	jmp *-16(%r13)
	.size sat_s1szA_entry, .-sat_s1szA_entry


==================== Asm code ====================
2018-03-16 15:56:18.079238211 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szA_info:
	.quad	sat_s1szA_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.079992895 UTC

.section .text
.align 8
sat_s1szz_entry:
_c1vpW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vpX
_c1vpY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vpX:
	jmp *-16(%r13)
	.size sat_s1szz_entry, .-sat_s1szz_entry


==================== Asm code ====================
2018-03-16 15:56:18.080630513 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szz_info:
	.quad	sat_s1szz_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.081597301 UTC

.section .text
.align 8
sat_s1szB_entry:
_c1vpZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vq0
_c1vq1:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1vq3
_c1vq2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_s1szA_info(%rip),%rdi
	movq %rdi,-72(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rbx,-40(%r12)
	leaq sat_s1szz_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -72(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1vq3:
	movq $80,904(%r13)
_c1vq0:
	jmp *-16(%r13)
	.size sat_s1szB_entry, .-sat_s1szB_entry


==================== Asm code ====================
2018-03-16 15:56:18.082373582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szB_info:
	.quad	sat_s1szB_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.08317876 UTC

.section .text
.align 8
.globl GHC.Real.$w$c-_entry
.type GHC.Real.$w$c-_entry, @object
GHC.Real.$w$c-_entry:
_c1vq4:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _c1vq8
_c1vq7:
	leaq $dReal_s1szx_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq $dNum_s1szy_info(%rip),%rax
	movq %rax,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-96(%r12)
	leaq sat_s1szC_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rdi,-72(%r12)
	movq %r9,-64(%r12)
	leaq -112(%r12),%rax
	movq %rax,-56(%r12)
	leaq sat_s1szB_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rax,(%r12)
	leaq -88(%r12),%rdi
	leaq -48(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1vq8:
	movq $144,904(%r13)
	leaq GHC.Real.$w$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c-_entry, .-GHC.Real.$w$c-_entry


==================== Asm code ====================
2018-03-16 15:56:18.083972757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c-_info
.type GHC.Real.$w$c-_info, @object
GHC.Real.$w$c-_info:
	.quad	GHC.Real.$w$c-_entry
	.quad	0
	.quad	17596481011726
	.quad	21474836505
	.quad	S1sVz_srt+864


==================== Asm code ====================
2018-03-16 15:56:18.088466442 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c-_closure
.type GHC.Real.$fNumRatio_$c-_closure, @object
GHC.Real.$fNumRatio_$c-_closure:
	.quad	GHC.Real.$fNumRatio_$c-_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.089344919 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c-_entry
.type GHC.Real.$fNumRatio_$c-_entry, @object
GHC.Real.$fNumRatio_$c-_entry:
_c1vr5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vrg
_c1vrh:
	leaq block_c1vr2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vr2
_c1vr3:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vrg:
	leaq GHC.Real.$fNumRatio_$c-_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c-_entry, .-GHC.Real.$fNumRatio_$c-_entry


==================== Asm code ====================
2018-03-16 15:56:18.090021132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c-_info
.type GHC.Real.$fNumRatio_$c-_info, @object
GHC.Real.$fNumRatio_$c-_info:
	.quad	GHC.Real.$fNumRatio_$c-_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+960


==================== Asm code ====================
2018-03-16 15:56:18.090773889 UTC

.section .text
.align 8
_c1vr2:
_c1vr2:
	leaq block_c1vr8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vr8
_c1vr9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vr2, .-_c1vr2


==================== Asm code ====================
2018-03-16 15:56:18.091410977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vr2_info:
	.quad	_c1vr2
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+960


==================== Asm code ====================
2018-03-16 15:56:18.092127505 UTC

.section .text
.align 8
_c1vr8:
_c1vr8:
	movq 24(%rbp),%rax
	leaq block_c1vrd_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1vr8, .-_c1vr8


==================== Asm code ====================
2018-03-16 15:56:18.092786272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vr8_info:
	.quad	_c1vr8
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+960


==================== Asm code ====================
2018-03-16 15:56:18.094082045 UTC

.section .text
.align 8
_c1vrd:
_c1vrd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vrm
_c1vrl:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vrm:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vrd, .-_c1vrd


==================== Asm code ====================
2018-03-16 15:56:18.09474812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vrd_info:
	.quad	_c1vrd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.100377335 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$c*_closure
.type GHC.Real.$w$c*_closure, @object
GHC.Real.$w$c*_closure:
	.quad	GHC.Real.$w$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.101040611 UTC

.section .text
.align 8
$dReal_s1szU_entry:
_c1vrS:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s1szU_entry, .-$dReal_s1szU_entry


==================== Asm code ====================
2018-03-16 15:56:18.10167125 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s1szU_info:
	.quad	$dReal_s1szU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.102326761 UTC

.section .text
.align 8
$dNum_s1szV_entry:
_c1vrZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vs0
_c1vs1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1vs0:
	jmp *-16(%r13)
	.size $dNum_s1szV_entry, .-$dNum_s1szV_entry


==================== Asm code ====================
2018-03-16 15:56:18.102957417 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1szV_info:
	.quad	$dNum_s1szV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.103666496 UTC

.section .text
.align 8
sat_s1szX_entry:
_c1vs6:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vs7
_c1vs8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vs7:
	jmp *-16(%r13)
	.size sat_s1szX_entry, .-sat_s1szX_entry


==================== Asm code ====================
2018-03-16 15:56:18.104302525 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szX_info:
	.quad	sat_s1szX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.105007295 UTC

.section .text
.align 8
sat_s1szW_entry:
_c1vsd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vse
_c1vsf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1vse:
	jmp *-16(%r13)
	.size sat_s1szW_entry, .-sat_s1szW_entry


==================== Asm code ====================
2018-03-16 15:56:18.105686311 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1szW_info:
	.quad	sat_s1szW_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.106503924 UTC

.section .text
.align 8
.globl GHC.Real.$w$c*_entry
.type GHC.Real.$w$c*_entry, @object
GHC.Real.$w$c*_entry:
_c1vsg:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _c1vsk
_c1vsj:
	leaq $dReal_s1szU_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-104(%r12)
	leaq $dNum_s1szV_info(%rip),%rax
	movq %rax,-96(%r12)
	leaq -120(%r12),%rax
	movq %rax,-80(%r12)
	leaq sat_s1szX_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rdi,-56(%r12)
	movq %r9,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_s1szW_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rax,(%r12)
	leaq -72(%r12),%rdi
	leaq -32(%r12),%rsi
	jmp GHC.Real.$wreduce_entry
_c1vsk:
	movq $128,904(%r13)
	leaq GHC.Real.$w$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$c*_entry, .-GHC.Real.$w$c*_entry


==================== Asm code ====================
2018-03-16 15:56:18.107275099 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$c*_info
.type GHC.Real.$w$c*_info, @object
GHC.Real.$w$c*_info:
	.quad	GHC.Real.$w$c*_entry
	.quad	0
	.quad	70373039144974
	.quad	21474836505
	.quad	S1sVz_srt+864


==================== Asm code ====================
2018-03-16 15:56:18.111656045 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c*_closure
.type GHC.Real.$fNumRatio_$c*_closure, @object
GHC.Real.$fNumRatio_$c*_closure:
	.quad	GHC.Real.$fNumRatio_$c*_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.112450898 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_$c*_entry
.type GHC.Real.$fNumRatio_$c*_entry, @object
GHC.Real.$fNumRatio_$c*_entry:
_c1vsZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vta
_c1vtb:
	leaq block_c1vsW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vsW
_c1vsX:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vta:
	leaq GHC.Real.$fNumRatio_$c*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_$c*_entry, .-GHC.Real.$fNumRatio_$c*_entry


==================== Asm code ====================
2018-03-16 15:56:18.113088079 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_$c*_info
.type GHC.Real.$fNumRatio_$c*_info, @object
GHC.Real.$fNumRatio_$c*_info:
	.quad	GHC.Real.$fNumRatio_$c*_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+976


==================== Asm code ====================
2018-03-16 15:56:18.113879448 UTC

.section .text
.align 8
_c1vsW:
_c1vsW:
	leaq block_c1vt2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vt2
_c1vt3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vsW, .-_c1vsW


==================== Asm code ====================
2018-03-16 15:56:18.114495481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vsW_info:
	.quad	_c1vsW
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+976


==================== Asm code ====================
2018-03-16 15:56:18.115173935 UTC

.section .text
.align 8
_c1vt2:
_c1vt2:
	movq 24(%rbp),%rax
	leaq block_c1vt7_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c*_entry
	.size _c1vt2, .-_c1vt2


==================== Asm code ====================
2018-03-16 15:56:18.115733155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vt2_info:
	.quad	_c1vt2
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+976


==================== Asm code ====================
2018-03-16 15:56:18.116454991 UTC

.section .text
.align 8
_c1vt7:
_c1vt7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vtg
_c1vtf:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vtg:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vt7, .-_c1vt7


==================== Asm code ====================
2018-03-16 15:56:18.117117744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vt7_info:
	.quad	_c1vt7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.12295702 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fNumRatio_closure
.type GHC.Real.$fNumRatio_closure, @object
GHC.Real.$fNumRatio_closure:
	.quad	GHC.Real.$fNumRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.123643226 UTC

.section .text
.align 8
sat_s1sAh_entry:
_c1vtN:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cfromInteger_entry
	.size sat_s1sAh_entry, .-sat_s1sAh_entry


==================== Asm code ====================
2018-03-16 15:56:18.124249818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAh_info:
	.quad	sat_s1sAh_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+808


==================== Asm code ====================
2018-03-16 15:56:18.124877741 UTC

.section .text
.align 8
sat_s1sAg_entry:
_c1vtV:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$csignum_entry
	.size sat_s1sAg_entry, .-sat_s1sAg_entry


==================== Asm code ====================
2018-03-16 15:56:18.125504966 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAg_info:
	.quad	sat_s1sAg_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+792


==================== Asm code ====================
2018-03-16 15:56:18.126686619 UTC

.section .text
.align 8
sat_s1sAf_entry:
_c1vu3:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cabs_entry
	.size sat_s1sAf_entry, .-sat_s1sAf_entry


==================== Asm code ====================
2018-03-16 15:56:18.127301596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAf_info:
	.quad	sat_s1sAf_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.128003848 UTC

.section .text
.align 8
sat_s1sAe_entry:
_c1vub:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$cnegate_entry
	.size sat_s1sAe_entry, .-sat_s1sAe_entry


==================== Asm code ====================
2018-03-16 15:56:18.12856207 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAe_info:
	.quad	sat_s1sAe_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.129166159 UTC

.section .text
.align 8
sat_s1sAd_entry:
_c1vuj:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c*_entry
	.size sat_s1sAd_entry, .-sat_s1sAd_entry


==================== Asm code ====================
2018-03-16 15:56:18.129804006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAd_info:
	.quad	sat_s1sAd_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+984


==================== Asm code ====================
2018-03-16 15:56:18.130437955 UTC

.section .text
.align 8
sat_s1sAc_entry:
_c1vur:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c-_entry
	.size sat_s1sAc_entry, .-sat_s1sAc_entry


==================== Asm code ====================
2018-03-16 15:56:18.130975925 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAc_info:
	.quad	sat_s1sAc_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+968


==================== Asm code ====================
2018-03-16 15:56:18.131616081 UTC

.section .text
.align 8
sat_s1sAb_entry:
_c1vuz:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fNumRatio_$c+_entry
	.size sat_s1sAb_entry, .-sat_s1sAb_entry


==================== Asm code ====================
2018-03-16 15:56:18.132211972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAb_info:
	.quad	sat_s1sAb_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+952


==================== Asm code ====================
2018-03-16 15:56:18.133133557 UTC

.section .text
.align 8
.globl GHC.Real.$fNumRatio_entry
.type GHC.Real.$fNumRatio_entry, @object
GHC.Real.$fNumRatio_entry:
_c1vuD:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c1vuH
_c1vuG:
	leaq sat_s1sAh_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_s1sAg_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_s1sAf_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_s1sAe_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_s1sAd_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_s1sAc_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_s1sAb_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq GHC.Num.C:Num_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -70(%r12),%rax
	movq %rax,-48(%r12)
	leaq -86(%r12),%rax
	movq %rax,-40(%r12)
	leaq -102(%r12),%rax
	movq %rax,-32(%r12)
	leaq -119(%r12),%rax
	movq %rax,-24(%r12)
	leaq -135(%r12),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -167(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vuH:
	movq $176,904(%r13)
	leaq GHC.Real.$fNumRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fNumRatio_entry, .-GHC.Real.$fNumRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.134389343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fNumRatio_info
.type GHC.Real.$fNumRatio_info, @object
GHC.Real.$fNumRatio_info:
	.quad	GHC.Real.$fNumRatio_entry
	.quad	0
	.quad	238690801725472782
	.quad	4294967301
	.quad	S1sVz_srt+792


==================== Asm code ====================
2018-03-16 15:56:18.13611312 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio3_closure
.type GHC.Real.$fEnumRatio3_closure, @object
GHC.Real.$fEnumRatio3_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.139592677 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$csucc_closure
.type GHC.Real.$fEnumRatio_$s$csucc_closure, @object
GHC.Real.$fEnumRatio_$s$csucc_closure:
	.quad	GHC.Real.$fEnumRatio_$s$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.140471143 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$csucc_entry
.type GHC.Real.$fEnumRatio_$s$csucc_entry, @object
GHC.Real.$fEnumRatio_$s$csucc_entry:
_c1vvv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vvB
_c1vvC:
	leaq block_c1vvs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vvs
_c1vvt:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vvB:
	leaq GHC.Real.$fEnumRatio_$s$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$csucc_entry, .-GHC.Real.$fEnumRatio_$s$csucc_entry


==================== Asm code ====================
2018-03-16 15:56:18.141222797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$csucc_info
.type GHC.Real.$fEnumRatio_$s$csucc_info, @object
GHC.Real.$fEnumRatio_$s$csucc_info:
	.quad	GHC.Real.$fEnumRatio_$s$csucc_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S1sVz_srt+1000


==================== Asm code ====================
2018-03-16 15:56:18.142257913 UTC

.section .text
.align 8
_c1vvs:
_c1vvs:
	leaq block_c1vvy_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$c+_entry
	.size _c1vvs, .-_c1vvs


==================== Asm code ====================
2018-03-16 15:56:18.142860168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vvs_info:
	.quad	_c1vvs
	.quad	0
	.quad	12884901918
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.143511779 UTC

.section .text
.align 8
_c1vvy:
_c1vvy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vvG
_c1vvF:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vvG:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vvy, .-_c1vvy


==================== Asm code ====================
2018-03-16 15:56:18.144109289 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vvy_info:
	.quad	_c1vvy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.148282657 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$csucc_closure
.type GHC.Real.$fEnumRatio_$csucc_closure, @object
GHC.Real.$fEnumRatio_$csucc_closure:
	.quad	GHC.Real.$fEnumRatio_$csucc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.149111297 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$csucc_entry
.type GHC.Real.$fEnumRatio_$csucc_entry, @object
GHC.Real.$fEnumRatio_$csucc_entry:
_c1vw5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vwd
_c1vwe:
	leaq block_c1vw2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vw2
_c1vw3:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vwd:
	leaq GHC.Real.$fEnumRatio_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$csucc_entry, .-GHC.Real.$fEnumRatio_$csucc_entry


==================== Asm code ====================
2018-03-16 15:56:18.149900509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$csucc_info
.type GHC.Real.$fEnumRatio_$csucc_info, @object
GHC.Real.$fEnumRatio_$csucc_info:
	.quad	GHC.Real.$fEnumRatio_$csucc_entry
	.quad	0
	.quad	1442277784960368654
	.quad	8589934607
	.quad	S1sVz_srt+800


==================== Asm code ====================
2018-03-16 15:56:18.150586845 UTC

.section .text
.align 8
_c1vw2:
_c1vw2:
	leaq block_c1vw8_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1vw2, .-_c1vw2


==================== Asm code ====================
2018-03-16 15:56:18.151219254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vw2_info:
	.quad	_c1vw2
	.quad	1
	.quad	289356280353521694
	.quad	S1sVz_srt+800


==================== Asm code ====================
2018-03-16 15:56:18.151892327 UTC

.section .text
.align 8
_c1vw8:
_c1vw8:
	movq 24(%rbp),%rax
	leaq block_c1vwa_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c+_entry
	.size _c1vw8, .-_c1vw8


==================== Asm code ====================
2018-03-16 15:56:18.152540778 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vw8_info:
	.quad	_c1vw8
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+944


==================== Asm code ====================
2018-03-16 15:56:18.15335178 UTC

.section .text
.align 8
_c1vwa:
_c1vwa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vwj
_c1vwi:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vwj:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vwa, .-_c1vwa


==================== Asm code ====================
2018-03-16 15:56:18.154003724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vwa_info:
	.quad	_c1vwa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.157862002 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cpred_closure
.type GHC.Real.$fEnumRatio_$s$cpred_closure, @object
GHC.Real.$fEnumRatio_$s$cpred_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.1589909 UTC

.section .data.rel.ro
.align 8
.align 1
u1vx1_srtd:
	.quad	S1sVz_srt+464
	.quad	72
	.quad	1
	.quad	144


==================== Asm code ====================
2018-03-16 15:56:18.15981621 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cpred_entry
.type GHC.Real.$fEnumRatio_$s$cpred_entry, @object
GHC.Real.$fEnumRatio_$s$cpred_entry:
_c1vwO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vwU
_c1vwV:
	leaq block_c1vwL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vwL
_c1vwM:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vwU:
	leaq GHC.Real.$fEnumRatio_$s$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cpred_entry, .-GHC.Real.$fEnumRatio_$s$cpred_entry


==================== Asm code ====================
2018-03-16 15:56:18.160515308 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cpred_info
.type GHC.Real.$fEnumRatio_$s$cpred_info, @object
GHC.Real.$fEnumRatio_$s$cpred_info:
	.quad	GHC.Real.$fEnumRatio_$s$cpred_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1vx1_srtd


==================== Asm code ====================
2018-03-16 15:56:18.161118132 UTC

.section .data.rel.ro
.align 8
.align 1
u1vx2_srtd:
	.quad	S1sVz_srt+464
	.quad	69
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.162232132 UTC

.section .text
.align 8
_c1vwL:
_c1vwL:
	leaq block_c1vwR_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$c-_entry
	.size _c1vwL, .-_c1vwL


==================== Asm code ====================
2018-03-16 15:56:18.162808834 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vwL_info:
	.quad	_c1vwL
	.quad	0
	.quad	-4294967266
	.quad	u1vx2_srtd


==================== Asm code ====================
2018-03-16 15:56:18.163490817 UTC

.section .text
.align 8
_c1vwR:
_c1vwR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vwZ
_c1vwY:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vwZ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vwR, .-_c1vwR


==================== Asm code ====================
2018-03-16 15:56:18.164127069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vwR_info:
	.quad	_c1vwR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.168235107 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cpred_closure
.type GHC.Real.$fEnumRatio_$cpred_closure, @object
GHC.Real.$fEnumRatio_$cpred_closure:
	.quad	GHC.Real.$fEnumRatio_$cpred_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.169002706 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cpred_entry
.type GHC.Real.$fEnumRatio_$cpred_entry, @object
GHC.Real.$fEnumRatio_$cpred_entry:
_c1vxs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vxA
_c1vxB:
	leaq block_c1vxp_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vxp
_c1vxq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vxA:
	leaq GHC.Real.$fEnumRatio_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cpred_entry, .-GHC.Real.$fEnumRatio_$cpred_entry


==================== Asm code ====================
2018-03-16 15:56:18.16997779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cpred_info
.type GHC.Real.$fEnumRatio_$cpred_info, @object
GHC.Real.$fEnumRatio_$cpred_info:
	.quad	GHC.Real.$fEnumRatio_$cpred_entry
	.quad	0
	.quad	4904419998501437454
	.quad	8589934607
	.quad	S1sVz_srt+800


==================== Asm code ====================
2018-03-16 15:56:18.170613064 UTC

.section .text
.align 8
_c1vxp:
_c1vxp:
	leaq block_c1vxv_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1vxp, .-_c1vxp


==================== Asm code ====================
2018-03-16 15:56:18.171196327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vxp_info:
	.quad	_c1vxp
	.quad	1
	.quad	292733980074049566
	.quad	S1sVz_srt+800


==================== Asm code ====================
2018-03-16 15:56:18.17188951 UTC

.section .text
.align 8
_c1vxv:
_c1vxv:
	movq 24(%rbp),%rax
	leaq block_c1vxx_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1vxv, .-_c1vxv


==================== Asm code ====================
2018-03-16 15:56:18.172473022 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vxv_info:
	.quad	_c1vxv
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+960


==================== Asm code ====================
2018-03-16 15:56:18.173178026 UTC

.section .text
.align 8
_c1vxx:
_c1vxx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vxG
_c1vxF:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vxG:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vxx, .-_c1vxx


==================== Asm code ====================
2018-03-16 15:56:18.173880477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vxx_info:
	.quad	_c1vxx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.178426802 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_closure
.type GHC.Real.$fFractionalRatio_closure, @object
GHC.Real.$fFractionalRatio_closure:
	.quad	GHC.Real.$fFractionalRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.179092442 UTC

.section .text
.align 8
sat_s1sAW_entry:
_c1vyd:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$cfromRational_entry
	.size sat_s1sAW_entry, .-sat_s1sAW_entry


==================== Asm code ====================
2018-03-16 15:56:18.179650869 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAW_info:
	.quad	sat_s1sAW_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+936


==================== Asm code ====================
2018-03-16 15:56:18.180306956 UTC

.section .text
.align 8
sat_s1sAV_entry:
_c1vyl:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$crecip_entry
	.size sat_s1sAV_entry, .-sat_s1sAV_entry


==================== Asm code ====================
2018-03-16 15:56:18.180866998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAV_info:
	.quad	sat_s1sAV_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+824


==================== Asm code ====================
2018-03-16 15:56:18.181916503 UTC

.section .text
.align 8
sat_s1sAU_entry:
_c1vyt:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fFractionalRatio_$c/_entry
	.size sat_s1sAU_entry, .-sat_s1sAU_entry


==================== Asm code ====================
2018-03-16 15:56:18.182463616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAU_info:
	.quad	sat_s1sAU_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+920


==================== Asm code ====================
2018-03-16 15:56:18.183127755 UTC

.section .text
.align 8
sat_s1sAT_entry:
_c1vyA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vyB
_c1vyC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fNumRatio_entry
_c1vyB:
	jmp *-16(%r13)
	.size sat_s1sAT_entry, .-sat_s1sAT_entry


==================== Asm code ====================
2018-03-16 15:56:18.183761302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sAT_info:
	.quad	sat_s1sAT_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+992


==================== Asm code ====================
2018-03-16 15:56:18.184625161 UTC

.section .text
.align 8
.globl GHC.Real.$fFractionalRatio_entry
.type GHC.Real.$fFractionalRatio_entry, @object
GHC.Real.$fFractionalRatio_entry:
_c1vyE:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1vyI
_c1vyH:
	leaq sat_s1sAW_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_s1sAV_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_s1sAU_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_s1sAT_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Real.C:Fractional_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -70(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -103(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vyI:
	movq $112,904(%r13)
	leaq GHC.Real.$fFractionalRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fFractionalRatio_entry, .-GHC.Real.$fFractionalRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.185512756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fFractionalRatio_info
.type GHC.Real.$fFractionalRatio_info, @object
GHC.Real.$fFractionalRatio_info:
	.quad	GHC.Real.$fFractionalRatio_entry
	.quad	0
	.quad	1162016669086777358
	.quad	4294967301
	.quad	S1sVz_srt+824


==================== Asm code ====================
2018-03-16 15:56:18.190134425 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFrom_closure
.type GHC.Real.$fEnumRatio_$cenumFrom_closure, @object
GHC.Real.$fEnumRatio_$cenumFrom_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.19092213 UTC

.section .text
.align 8
w_s1sAY_entry:
_c1vzj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vzk
_c1vzl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1vzk:
	jmp *-16(%r13)
	.size w_s1sAY_entry, .-w_s1sAY_entry


==================== Asm code ====================
2018-03-16 15:56:18.191573769 UTC

.section .data.rel.ro
.align 8
.align 1
w_s1sAY_info:
	.quad	w_s1sAY_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.192850583 UTC

.section .text
.align 8
sat_s1sB3_entry:
_c1vzu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vzv
_c1vzw:
	leaq block_c1vzr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	movq 7(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c1vzv:
	jmp *-8(%r13)
	.size sat_s1sB3_entry, .-sat_s1sB3_entry


==================== Asm code ====================
2018-03-16 15:56:18.193634392 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sB3_info:
	.quad	sat_s1sB3_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+1056


==================== Asm code ====================
2018-03-16 15:56:18.194370655 UTC

.section .text
.align 8
_c1vzr:
_c1vzr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vzz
_c1vzy:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vzz:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vzr, .-_c1vzr


==================== Asm code ====================
2018-03-16 15:56:18.194997313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vzr_info:
	.quad	_c1vzr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.195733463 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFrom_entry
.type GHC.Real.$fEnumRatio_$cenumFrom_entry, @object
GHC.Real.$fEnumRatio_$cenumFrom_entry:
_c1vzA:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1vzE
_c1vzD:
	leaq w_s1sAY_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s1sB3_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vzE:
	movq $40,904(%r13)
	leaq GHC.Real.$fEnumRatio_$cenumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFrom_entry, .-GHC.Real.$fEnumRatio_$cenumFrom_entry


==================== Asm code ====================
2018-03-16 15:56:18.196417561 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFrom_info
.type GHC.Real.$fEnumRatio_$cenumFrom_info, @object
GHC.Real.$fEnumRatio_$cenumFrom_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.200825274 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThen_closure
.type GHC.Real.$fEnumRatio_$cenumFromThen_closure, @object
GHC.Real.$fEnumRatio_$cenumFromThen_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.201909002 UTC

.section .text
.align 8
w_s1sB5_entry:
_c1vAa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vAb
_c1vAc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1vAb:
	jmp *-16(%r13)
	.size w_s1sB5_entry, .-w_s1sB5_entry


==================== Asm code ====================
2018-03-16 15:56:18.202525727 UTC

.section .data.rel.ro
.align 8
.align 1
w_s1sB5_info:
	.quad	w_s1sB5_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.203209823 UTC

.section .text
.align 8
sat_s1sBb_entry:
_c1vAl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vAm
_c1vAn:
	leaq block_c1vAi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c1vAm:
	jmp *-8(%r13)
	.size sat_s1sBb_entry, .-sat_s1sBb_entry


==================== Asm code ====================
2018-03-16 15:56:18.203814002 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBb_info:
	.quad	sat_s1sBb_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.204531214 UTC

.section .text
.align 8
_c1vAi:
_c1vAi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vAq
_c1vAp:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1vAq:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1vAi, .-_c1vAi


==================== Asm code ====================
2018-03-16 15:56:18.205172574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vAi_info:
	.quad	_c1vAi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.205935437 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromThen_entry
.type GHC.Real.$fEnumRatio_$cenumFromThen_entry, @object
GHC.Real.$fEnumRatio_$cenumFromThen_entry:
_c1vAr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1vAv
_c1vAu:
	leaq w_s1sB5_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s1sBb_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vAv:
	movq $40,904(%r13)
	leaq GHC.Real.$fEnumRatio_$cenumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromThen_entry, .-GHC.Real.$fEnumRatio_$cenumFromThen_entry


==================== Asm code ====================
2018-03-16 15:56:18.206673119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThen_info
.type GHC.Real.$fEnumRatio_$cenumFromThen_info, @object
GHC.Real.$fEnumRatio_$cenumFromThen_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.210500141 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromTo_closure
.type GHC.Real.$fEnumRatio_$cenumFromTo_closure, @object
GHC.Real.$fEnumRatio_$cenumFromTo_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.211267166 UTC

.section .text
.align 8
sat_s1sBe_entry:
_c1vB1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vB2
_c1vB3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1vB2:
	jmp *-16(%r13)
	.size sat_s1sBe_entry, .-sat_s1sBe_entry


==================== Asm code ====================
2018-03-16 15:56:18.211881083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBe_info:
	.quad	sat_s1sBe_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.2125973 UTC

.section .text
.align 8
sat_s1sBd_entry:
_c1vB8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vB9
_c1vBa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1vB9:
	jmp *-16(%r13)
	.size sat_s1sBd_entry, .-sat_s1sBd_entry


==================== Asm code ====================
2018-03-16 15:56:18.213236561 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBd_info:
	.quad	sat_s1sBd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.214057206 UTC

.section .data.rel.ro
.align 8
.align 1
u1vBg_srtd:
	.quad	S1sVz_srt+624
	.quad	58
	.quad	153122387330596865


==================== Asm code ====================
2018-03-16 15:56:18.214780724 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromTo_entry
.type GHC.Real.$fEnumRatio_$cenumFromTo_entry, @object
GHC.Real.$fEnumRatio_$cenumFromTo_entry:
_c1vBb:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1vBf
_c1vBe:
	leaq sat_s1sBe_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s1sBd_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	leaq GHC.Real.numericEnumFromTo_closure+4(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_c1vBf:
	movq $48,904(%r13)
	leaq GHC.Real.$fEnumRatio_$cenumFromTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromTo_entry, .-GHC.Real.$fEnumRatio_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:56:18.215471941 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromTo_info
.type GHC.Real.$fEnumRatio_$cenumFromTo_info, @object
GHC.Real.$fEnumRatio_$cenumFromTo_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1vBg_srtd


==================== Asm code ====================
2018-03-16 15:56:18.219318018 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_closure, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_closure:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.220103365 UTC

.section .text
.align 8
sat_s1sBh_entry:
_c1vBG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vBH
_c1vBI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1vBH:
	jmp *-16(%r13)
	.size sat_s1sBh_entry, .-sat_s1sBh_entry


==================== Asm code ====================
2018-03-16 15:56:18.22075183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBh_info:
	.quad	sat_s1sBh_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.221694101 UTC

.section .text
.align 8
sat_s1sBg_entry:
_c1vBN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vBO
_c1vBP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1vBO:
	jmp *-16(%r13)
	.size sat_s1sBg_entry, .-sat_s1sBg_entry


==================== Asm code ====================
2018-03-16 15:56:18.222355857 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBg_info:
	.quad	sat_s1sBg_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.222920609 UTC

.section .data.rel.ro
.align 8
.align 1
u1vBV_srtd:
	.quad	S1sVz_srt+672
	.quad	53
	.quad	4644337115725825


==================== Asm code ====================
2018-03-16 15:56:18.223707232 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_entry, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_entry:
_c1vBQ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1vBU
_c1vBT:
	leaq sat_s1sBh_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s1sBg_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	leaq GHC.Real.numericEnumFromThenTo_closure+5(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_c1vBU:
	movq $48,904(%r13)
	leaq GHC.Real.$fEnumRatio_$cenumFromThenTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cenumFromThenTo_entry, .-GHC.Real.$fEnumRatio_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:56:18.224927588 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cenumFromThenTo_info
.type GHC.Real.$fEnumRatio_$cenumFromThenTo_info, @object
GHC.Real.$fEnumRatio_$cenumFromThenTo_info:
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u1vBV_srtd


==================== Asm code ====================
2018-03-16 15:56:18.226845551 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$fRealRatio_closure
.type GHC.Real.$fRealFracRatio_$s$fRealRatio_closure, @object
GHC.Real.$fRealFracRatio_$s$fRealRatio_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Real.$fFractionalRatio_$s$fNumRatio_closure+1
	.quad	GHC.Real.$fOrdRatio_$s$fOrdRatio_closure+1
	.quad	GHC.Real.$fRealRatio_$s$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.231033032 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealRatio_closure
.type GHC.Real.$fRealRatio_closure, @object
GHC.Real.$fRealRatio_closure:
	.quad	GHC.Real.$fRealRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.231702911 UTC

.section .text
.align 8
sat_s1sBl_entry:
_c1vCn:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fRealRatio_$ctoRational_entry
	.size sat_s1sBl_entry, .-sat_s1sBl_entry


==================== Asm code ====================
2018-03-16 15:56:18.232284918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBl_info:
	.quad	sat_s1sBl_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.233047119 UTC

.section .text
.align 8
sat_s1sBk_entry:
_c1vCu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vCv
_c1vCw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fOrdRatio_entry
_c1vCv:
	jmp *-16(%r13)
	.size sat_s1sBk_entry, .-sat_s1sBk_entry


==================== Asm code ====================
2018-03-16 15:56:18.233741023 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBk_info:
	.quad	sat_s1sBk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.234418255 UTC

.section .text
.align 8
sat_s1sBj_entry:
_c1vCB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vCC
_c1vCD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fNumRatio_entry
_c1vCC:
	jmp *-16(%r13)
	.size sat_s1sBj_entry, .-sat_s1sBj_entry


==================== Asm code ====================
2018-03-16 15:56:18.235057163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBj_info:
	.quad	sat_s1sBj_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+992


==================== Asm code ====================
2018-03-16 15:56:18.235855663 UTC

.section .text
.align 8
.globl GHC.Real.$fRealRatio_entry
.type GHC.Real.$fRealRatio_entry, @object
GHC.Real.$fRealRatio_entry:
_c1vCF:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c1vCJ
_c1vCI:
	leaq sat_s1sBl_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_s1sBk_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq sat_s1sBj_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	leaq GHC.Real.C:Real_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1vCJ:
	movq $96,904(%r13)
	leaq GHC.Real.$fRealRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealRatio_entry, .-GHC.Real.$fRealRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.236607634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealRatio_info
.type GHC.Real.$fRealRatio_info, @object
GHC.Real.$fRealRatio_info:
	.quad	GHC.Real.$fRealRatio_entry
	.quad	0
	.quad	35188667056142
	.quad	4294967301
	.quad	S1sVz_srt+992


==================== Asm code ====================
2018-03-16 15:56:18.242406781 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cceiling_closure
.type GHC.Real.$w$s$cceiling_closure, @object
GHC.Real.$w$s$cceiling_closure:
	.quad	GHC.Real.$w$s$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.243207464 UTC

.section .text
.align 8
sat_s1sBy_entry:
_c1vDB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vDC
_c1vDD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vDC:
	jmp *-16(%r13)
	.size sat_s1sBy_entry, .-sat_s1sBy_entry


==================== Asm code ====================
2018-03-16 15:56:18.243822689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBy_info:
	.quad	sat_s1sBy_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.244365009 UTC

.section .data.rel.ro
.align 8
.align 1
u1vDV_srtd:
	.quad	S1sVz_srt+24
	.quad	136
	.quad	1
	.quad	576461027181592576
	.quad	128


==================== Asm code ====================
2018-03-16 15:56:18.245065187 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cceiling_entry
.type GHC.Real.$w$s$cceiling_entry, @object
GHC.Real.$w$s$cceiling_entry:
_c1vDE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vDF
_c1vDG:
	leaq block_c1vDd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1vDF:
	leaq GHC.Real.$w$s$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cceiling_entry, .-GHC.Real.$w$s$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:18.245731117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cceiling_info
.type GHC.Real.$w$s$cceiling_info, @object
GHC.Real.$w$s$cceiling_info:
	.quad	GHC.Real.$w$s$cceiling_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1vDV_srtd


==================== Asm code ====================
2018-03-16 15:56:18.246349847 UTC

.section .data.rel.ro
.align 8
.align 1
u1vDW_srtd:
	.quad	S1sVz_srt+24
	.quad	124
	.quad	1
	.quad	576460752303685632


==================== Asm code ====================
2018-03-16 15:56:18.247063842 UTC

.section .text
.align 8
_c1vDd:
_c1vDd:
	leaq block_c1vDf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vDf
_c1vDg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vDd, .-_c1vDd


==================== Asm code ====================
2018-03-16 15:56:18.24766812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vDd_info:
	.quad	_c1vDd
	.quad	1
	.quad	-4294967266
	.quad	u1vDW_srtd


==================== Asm code ====================
2018-03-16 15:56:18.248179048 UTC

.section .data.rel.ro
.align 8
.align 1
u1vDX_srtd:
	.quad	S1sVz_srt+24
	.quad	124
	.quad	1
	.quad	576460752303685632


==================== Asm code ====================
2018-03-16 15:56:18.248775804 UTC

.section .text
.align 8
_c1vDf:
_c1vDf:
	leaq block_c1vDk_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r8
	leaq GHC.Real.even1_closure(%rip),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$ccompare_entry
	.size _c1vDf, .-_c1vDf


==================== Asm code ====================
2018-03-16 15:56:18.249369794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vDf_info:
	.quad	_c1vDf
	.quad	2
	.quad	-4294967266
	.quad	u1vDX_srtd


==================== Asm code ====================
2018-03-16 15:56:18.25006882 UTC

.section .text
.align 8
_c1vDk:
_c1vDk:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1vDO
_c1vDM:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1vDO:
	leaq block_c1vDp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1vDk, .-_c1vDk


==================== Asm code ====================
2018-03-16 15:56:18.250632605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vDk_info:
	.quad	_c1vDk
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.251265769 UTC

.section .text
.align 8
_c1vDp:
_c1vDp:
	leaq block_c1vDt_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vDp, .-_c1vDp


==================== Asm code ====================
2018-03-16 15:56:18.251863051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vDp_info:
	.quad	_c1vDp
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.252603521 UTC

.section .text
.align 8
_c1vDt:
_c1vDt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vDS
_c1vDR:
	leaq sat_s1sBy_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1vDS:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vDt, .-_c1vDt


==================== Asm code ====================
2018-03-16 15:56:18.253466904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vDt_info:
	.quad	_c1vDt
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.257145432 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cceiling_closure
.type GHC.Real.$fRealFracRatio_$s$cceiling_closure, @object
GHC.Real.$fRealFracRatio_$s$cceiling_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.257987781 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cceiling_entry
.type GHC.Real.$fRealFracRatio_$s$cceiling_entry, @object
GHC.Real.$fRealFracRatio_$s$cceiling_entry:
_c1vEK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vEL
_c1vEM:
	leaq block_c1vEH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vEH
_c1vEI:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vEL:
	leaq GHC.Real.$fRealFracRatio_$s$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cceiling_entry, .-GHC.Real.$fRealFracRatio_$s$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:18.25866343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cceiling_info
.type GHC.Real.$fRealFracRatio_$s$cceiling_info, @object
GHC.Real.$fRealFracRatio_$s$cceiling_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1104


==================== Asm code ====================
2018-03-16 15:56:18.259286947 UTC

.section .text
.align 8
_c1vEH:
_c1vEH:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cceiling_entry
	.size _c1vEH, .-_c1vEH


==================== Asm code ====================
2018-03-16 15:56:18.259849456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vEH_info:
	.quad	_c1vEH
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1104


==================== Asm code ====================
2018-03-16 15:56:18.266089887 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cceiling_closure
.type GHC.Real.$w$cceiling_closure, @object
GHC.Real.$w$cceiling_closure:
	.quad	GHC.Real.$w$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.26690343 UTC

.section .text
.align 8
sat_s1sBU_entry:
_c1vFv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vFw
_c1vFx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vFw:
	jmp *-16(%r13)
	.size sat_s1sBU_entry, .-sat_s1sBU_entry


==================== Asm code ====================
2018-03-16 15:56:18.267535847 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sBU_info:
	.quad	sat_s1sBU_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.268132593 UTC

.section .data.rel.ro
.align 8
.align 1
u1vFQ_srtd:
	.quad	S1sVz_srt+680
	.quad	56
	.quad	36030996042252289


==================== Asm code ====================
2018-03-16 15:56:18.268881368 UTC

.section .text
.align 8
.globl GHC.Real.$w$cceiling_entry
.type GHC.Real.$w$cceiling_entry, @object
GHC.Real.$w$cceiling_entry:
_c1vFy:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vFz
_c1vFA:
	leaq block_c1vF5_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1vFz:
	leaq GHC.Real.$w$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cceiling_entry, .-GHC.Real.$w$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:18.269583912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cceiling_info
.type GHC.Real.$w$cceiling_info, @object
GHC.Real.$w$cceiling_info:
	.quad	GHC.Real.$w$cceiling_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1vFQ_srtd


==================== Asm code ====================
2018-03-16 15:56:18.270146944 UTC

.section .data.rel.ro
.align 8
.align 1
u1vFR_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:18.270824206 UTC

.section .text
.align 8
_c1vF5:
_c1vF5:
	leaq block_c1vF7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vF7
_c1vF8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vF5, .-_c1vF5


==================== Asm code ====================
2018-03-16 15:56:18.27145495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vF5_info:
	.quad	_c1vF5
	.quad	2
	.quad	-4294967266
	.quad	u1vFR_srtd


==================== Asm code ====================
2018-03-16 15:56:18.27201406 UTC

.section .data.rel.ro
.align 8
.align 1
u1vFS_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:18.272661875 UTC

.section .text
.align 8
_c1vF7:
_c1vF7:
	leaq block_c1vFc_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1vF7, .-_c1vF7


==================== Asm code ====================
2018-03-16 15:56:18.273216455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vF7_info:
	.quad	_c1vF7
	.quad	3
	.quad	-4294967266
	.quad	u1vFS_srtd


==================== Asm code ====================
2018-03-16 15:56:18.274136599 UTC

.section .text
.align 8
_c1vFc:
_c1vFc:
	movq 16(%rbp),%rax
	leaq block_c1vFe_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$ccompare_entry
	.size _c1vFc, .-_c1vFc


==================== Asm code ====================
2018-03-16 15:56:18.2747707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vFc_info:
	.quad	_c1vFc
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.275468816 UTC

.section .text
.align 8
_c1vFe:
_c1vFe:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c1vFJ
_c1vFH:
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1vFJ:
	leaq block_c1vFj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1vFe, .-_c1vFe


==================== Asm code ====================
2018-03-16 15:56:18.276104669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vFe_info:
	.quad	_c1vFe
	.quad	131
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.276760945 UTC

.section .text
.align 8
_c1vFj:
_c1vFj:
	leaq block_c1vFn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vFj, .-_c1vFj


==================== Asm code ====================
2018-03-16 15:56:18.277406211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vFj_info:
	.quad	_c1vFj
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.278207321 UTC

.section .text
.align 8
_c1vFn:
_c1vFn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vFN
_c1vFM:
	leaq sat_s1sBU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq 8(%rbp),%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1vFN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vFn, .-_c1vFn


==================== Asm code ====================
2018-03-16 15:56:18.278913474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vFn_info:
	.quad	_c1vFn
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.282180132 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cceiling_closure
.type GHC.Real.$fRealFracRatio_$cceiling_closure, @object
GHC.Real.$fRealFracRatio_$cceiling_closure:
	.quad	GHC.Real.$fRealFracRatio_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.282946409 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cceiling_entry
.type GHC.Real.$fRealFracRatio_$cceiling_entry, @object
GHC.Real.$fRealFracRatio_$cceiling_entry:
_c1vGL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vGM
_c1vGN:
	leaq block_c1vGI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vGI
_c1vGJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vGM:
	leaq GHC.Real.$fRealFracRatio_$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cceiling_entry, .-GHC.Real.$fRealFracRatio_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:56:18.28363022 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cceiling_info
.type GHC.Real.$fRealFracRatio_$cceiling_info, @object
GHC.Real.$fRealFracRatio_$cceiling_info:
	.quad	GHC.Real.$fRealFracRatio_$cceiling_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1120


==================== Asm code ====================
2018-03-16 15:56:18.284352589 UTC

.section .text
.align 8
_c1vGI:
_c1vGI:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cceiling_entry
	.size _c1vGI, .-_c1vGI


==================== Asm code ====================
2018-03-16 15:56:18.284969852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vGI_info:
	.quad	_c1vGI
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1120


==================== Asm code ====================
2018-03-16 15:56:18.294081264 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfloor_closure
.type GHC.Real.$w$s$cfloor_closure, @object
GHC.Real.$w$s$cfloor_closure:
	.quad	GHC.Real.$w$s$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.294929107 UTC

.section .text
.align 8
sat_s1sCf_entry:
_c1vHC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vHD
_c1vHE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vHD:
	jmp *-16(%r13)
	.size sat_s1sCf_entry, .-sat_s1sCf_entry


==================== Asm code ====================
2018-03-16 15:56:18.295599482 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sCf_info:
	.quad	sat_s1sCf_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.296190623 UTC

.section .data.rel.ro
.align 8
.align 1
u1vHX_srtd:
	.quad	S1sVz_srt
	.quad	143
	.quad	1
	.quad	4611688217452740608
	.quad	16384


==================== Asm code ====================
2018-03-16 15:56:18.296961115 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfloor_entry
.type GHC.Real.$w$s$cfloor_entry, @object
GHC.Real.$w$s$cfloor_entry:
_c1vHF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vHG
_c1vHH:
	leaq block_c1vH6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1vHG:
	leaq GHC.Real.$w$s$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfloor_entry, .-GHC.Real.$w$s$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:18.29767403 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfloor_info
.type GHC.Real.$w$s$cfloor_info, @object
GHC.Real.$w$s$cfloor_info:
	.quad	GHC.Real.$w$s$cfloor_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1vHX_srtd


==================== Asm code ====================
2018-03-16 15:56:18.29831088 UTC

.section .data.rel.ro
.align 8
.align 1
u1vHY_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:18.299020074 UTC

.section .text
.align 8
_c1vH6:
_c1vH6:
	leaq block_c1vH8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vH8
_c1vH9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vH6, .-_c1vH6


==================== Asm code ====================
2018-03-16 15:56:18.299681883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vH6_info:
	.quad	_c1vH6
	.quad	1
	.quad	-4294967266
	.quad	u1vHY_srtd


==================== Asm code ====================
2018-03-16 15:56:18.30024859 UTC

.section .data.rel.ro
.align 8
.align 1
u1vHZ_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:18.300960783 UTC

.section .text
.align 8
_c1vH8:
_c1vH8:
	leaq block_c1vHd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rsi
	leaq GHC.Real.even1_closure(%rip),%r14
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1vH8, .-_c1vH8


==================== Asm code ====================
2018-03-16 15:56:18.302025122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vH8_info:
	.quad	_c1vH8
	.quad	2
	.quad	-4294967266
	.quad	u1vHZ_srtd


==================== Asm code ====================
2018-03-16 15:56:18.302578156 UTC

.section .data.rel.ro
.align 8
.align 1
u1vI0_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018427387904


==================== Asm code ====================
2018-03-16 15:56:18.303231285 UTC

.section .text
.align 8
_c1vHd:
_c1vHd:
	leaq block_c1vHh_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1vHd, .-_c1vHd


==================== Asm code ====================
2018-03-16 15:56:18.303838236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vHd_info:
	.quad	_c1vHd
	.quad	3
	.quad	-4294967266
	.quad	u1vI0_srtd


==================== Asm code ====================
2018-03-16 15:56:18.304538476 UTC

.section .text
.align 8
_c1vHh:
_c1vHh:
	movq 8(%rbp),%rax
	leaq block_c1vHl_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c1vHh, .-_c1vHh


==================== Asm code ====================
2018-03-16 15:56:18.305170697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vHh_info:
	.quad	_c1vHh
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.30598381 UTC

.section .text
.align 8
_c1vHl:
_c1vHl:
	cmpq $1,%rbx
	je _c1vHR
_c1vHP:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1vHR:
	leaq block_c1vHq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c1vHl, .-_c1vHl


==================== Asm code ====================
2018-03-16 15:56:18.306644188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vHl_info:
	.quad	_c1vHl
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.30728327 UTC

.section .text
.align 8
_c1vHq:
_c1vHq:
	leaq block_c1vHu_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vHq, .-_c1vHq


==================== Asm code ====================
2018-03-16 15:56:18.307852033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vHq_info:
	.quad	_c1vHq
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.308645223 UTC

.section .text
.align 8
_c1vHu:
_c1vHu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vHV
_c1vHU:
	leaq sat_s1sCf_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1vHV:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vHu, .-_c1vHu


==================== Asm code ====================
2018-03-16 15:56:18.309322151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vHu_info:
	.quad	_c1vHu
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.312425236 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cfloor_closure
.type GHC.Real.$fRealFracRatio_$s$cfloor_closure, @object
GHC.Real.$fRealFracRatio_$s$cfloor_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.313304399 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cfloor_entry
.type GHC.Real.$fRealFracRatio_$s$cfloor_entry, @object
GHC.Real.$fRealFracRatio_$s$cfloor_entry:
_c1vIV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vIW
_c1vIX:
	leaq block_c1vIS_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vIS
_c1vIT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vIW:
	leaq GHC.Real.$fRealFracRatio_$s$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cfloor_entry, .-GHC.Real.$fRealFracRatio_$s$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:18.314006249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cfloor_info
.type GHC.Real.$fRealFracRatio_$s$cfloor_info, @object
GHC.Real.$fRealFracRatio_$s$cfloor_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1136


==================== Asm code ====================
2018-03-16 15:56:18.314663178 UTC

.section .text
.align 8
_c1vIS:
_c1vIS:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cfloor_entry
	.size _c1vIS, .-_c1vIS


==================== Asm code ====================
2018-03-16 15:56:18.315333324 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vIS_info:
	.quad	_c1vIS
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1136


==================== Asm code ====================
2018-03-16 15:56:18.322599068 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cfloor_closure
.type GHC.Real.$w$cfloor_closure, @object
GHC.Real.$w$cfloor_closure:
	.quad	GHC.Real.$w$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.323498164 UTC

.section .text
.align 8
sat_s1sCB_entry:
_c1vJG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vJH
_c1vJI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vJH:
	jmp *-16(%r13)
	.size sat_s1sCB_entry, .-sat_s1sCB_entry


==================== Asm code ====================
2018-03-16 15:56:18.324207733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sCB_info:
	.quad	sat_s1sCB_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.324751624 UTC

.section .data.rel.ro
.align 8
.align 1
u1vK1_srtd:
	.quad	S1sVz_srt+680
	.quad	60
	.quad	576462951326711809


==================== Asm code ====================
2018-03-16 15:56:18.325491581 UTC

.section .text
.align 8
.globl GHC.Real.$w$cfloor_entry
.type GHC.Real.$w$cfloor_entry, @object
GHC.Real.$w$cfloor_entry:
_c1vJJ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vJK
_c1vJL:
	leaq block_c1vJg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1vJK:
	leaq GHC.Real.$w$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cfloor_entry, .-GHC.Real.$w$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:18.326160738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cfloor_info
.type GHC.Real.$w$cfloor_info, @object
GHC.Real.$w$cfloor_info:
	.quad	GHC.Real.$w$cfloor_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1vK1_srtd


==================== Asm code ====================
2018-03-16 15:56:18.326800181 UTC

.section .data.rel.ro
.align 8
.align 1
u1vK2_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:18.327531229 UTC

.section .text
.align 8
_c1vJg:
_c1vJg:
	leaq block_c1vJi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vJi
_c1vJj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vJg, .-_c1vJg


==================== Asm code ====================
2018-03-16 15:56:18.32812844 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJg_info:
	.quad	_c1vJg
	.quad	2
	.quad	-4294967266
	.quad	u1vK2_srtd


==================== Asm code ====================
2018-03-16 15:56:18.328633381 UTC

.section .data.rel.ro
.align 8
.align 1
u1vK3_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288321


==================== Asm code ====================
2018-03-16 15:56:18.329648369 UTC

.section .text
.align 8
_c1vJi:
_c1vJi:
	leaq block_c1vJn_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1vJi, .-_c1vJi


==================== Asm code ====================
2018-03-16 15:56:18.330245285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJi_info:
	.quad	_c1vJi
	.quad	3
	.quad	-4294967266
	.quad	u1vK3_srtd


==================== Asm code ====================
2018-03-16 15:56:18.330923652 UTC

.section .text
.align 8
_c1vJn:
_c1vJn:
	movq 16(%rbp),%rax
	leaq block_c1vJp_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 8(%rbp),%rdi
	movq %rax,%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1vJn, .-_c1vJn


==================== Asm code ====================
2018-03-16 15:56:18.331520137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJn_info:
	.quad	_c1vJn
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.332212361 UTC

.section .text
.align 8
_c1vJp:
_c1vJp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1vJS
_c1vJU:
	leaq block_c1vJu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
_c1vJS:
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vJp, .-_c1vJp


==================== Asm code ====================
2018-03-16 15:56:18.332851854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJp_info:
	.quad	_c1vJp
	.quad	131
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.333502857 UTC

.section .text
.align 8
_c1vJu:
_c1vJu:
	leaq block_c1vJy_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vJu, .-_c1vJu


==================== Asm code ====================
2018-03-16 15:56:18.334041542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJu_info:
	.quad	_c1vJu
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.334734009 UTC

.section .text
.align 8
_c1vJy:
_c1vJy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vJY
_c1vJX:
	leaq sat_s1sCB_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq 8(%rbp),%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1vJY:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vJy, .-_c1vJy


==================== Asm code ====================
2018-03-16 15:56:18.335390164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vJy_info:
	.quad	_c1vJy
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.338612388 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cfloor_closure
.type GHC.Real.$fRealFracRatio_$cfloor_closure, @object
GHC.Real.$fRealFracRatio_$cfloor_closure:
	.quad	GHC.Real.$fRealFracRatio_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.339450738 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cfloor_entry
.type GHC.Real.$fRealFracRatio_$cfloor_entry, @object
GHC.Real.$fRealFracRatio_$cfloor_entry:
_c1vKW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vKX
_c1vKY:
	leaq block_c1vKT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vKT
_c1vKU:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vKX:
	leaq GHC.Real.$fRealFracRatio_$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cfloor_entry, .-GHC.Real.$fRealFracRatio_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:56:18.340116106 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cfloor_info
.type GHC.Real.$fRealFracRatio_$cfloor_info, @object
GHC.Real.$fRealFracRatio_$cfloor_info:
	.quad	GHC.Real.$fRealFracRatio_$cfloor_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1152


==================== Asm code ====================
2018-03-16 15:56:18.340767151 UTC

.section .text
.align 8
_c1vKT:
_c1vKT:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cfloor_entry
	.size _c1vKT, .-_c1vKT


==================== Asm code ====================
2018-03-16 15:56:18.341712257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vKT_info:
	.quad	_c1vKT
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1152


==================== Asm code ====================
2018-03-16 15:56:18.34340545 UTC

.section .data
.align 8
.align 1
sat_s1sCI_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:18.345079115 UTC

.section .data
.align 8
.align 1
sat_s1sCJ_closure:
	.quad	:_con_info
	.quad	sat_s1sCI_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.347891169 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio2_closure
.type GHC.Real.$fRealFracRatio2_closure, @object
GHC.Real.$fRealFracRatio2_closure:
	.quad	GHC.Real.$fRealFracRatio2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.348874039 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio2_entry
.type GHC.Real.$fRealFracRatio2_entry, @object
GHC.Real.$fRealFracRatio2_entry:
_c1vLl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vLm
_c1vLn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1vLk
_c1vLj:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s1sCJ_closure+2(%rip),%rsi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c1vLm:
	jmp *-16(%r13)
_c1vLk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.$fRealFracRatio2_entry, .-GHC.Real.$fRealFracRatio2_entry


==================== Asm code ====================
2018-03-16 15:56:18.349681571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio2_info
.type GHC.Real.$fRealFracRatio2_info, @object
GHC.Real.$fRealFracRatio2_info:
	.quad	GHC.Real.$fRealFracRatio2_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+1168


==================== Asm code ====================
2018-03-16 15:56:18.362611966 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cround_closure
.type GHC.Real.$w$s$cround_closure, @object
GHC.Real.$w$s$cround_closure:
	.quad	GHC.Real.$w$s$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.363463801 UTC

.section .text
.align 8
sat_s1sD5_entry:
_c1vMp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vMq
_c1vMr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vMq:
	jmp *-16(%r13)
	.size sat_s1sD5_entry, .-sat_s1sD5_entry


==================== Asm code ====================
2018-03-16 15:56:18.364192093 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sD5_info:
	.quad	sat_s1sD5_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.364941416 UTC

.section .text
.align 8
sat_s1sD6_entry:
_c1vMy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vMz
_c1vMA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vMz:
	jmp *-16(%r13)
	.size sat_s1sD6_entry, .-sat_s1sD6_entry


==================== Asm code ====================
2018-03-16 15:56:18.365944498 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sD6_info:
	.quad	sat_s1sD6_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.366487599 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNL_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611688217729565184
	.quad	1572864


==================== Asm code ====================
2018-03-16 15:56:18.367222257 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cround_entry
.type GHC.Real.$w$s$cround_entry, @object
GHC.Real.$w$s$cround_entry:
_c1vMB:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vMC
_c1vMD:
	leaq block_c1vLB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$s$cproperFraction_entry
_c1vMC:
	leaq GHC.Real.$w$s$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cround_entry, .-GHC.Real.$w$s$cround_entry


==================== Asm code ====================
2018-03-16 15:56:18.367871774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cround_info
.type GHC.Real.$w$s$cround_info, @object
GHC.Real.$w$s$cround_info:
	.quad	GHC.Real.$w$s$cround_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1vNL_srtd


==================== Asm code ====================
2018-03-16 15:56:18.368463644 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNM_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:18.369147286 UTC

.section .text
.align 8
_c1vLB:
_c1vLB:
	leaq block_c1vLD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vLD
_c1vLE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vLB, .-_c1vLB


==================== Asm code ====================
2018-03-16 15:56:18.369806288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLB_info:
	.quad	_c1vLB
	.quad	1
	.quad	-4294967266
	.quad	u1vNM_srtd


==================== Asm code ====================
2018-03-16 15:56:18.370375579 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNN_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:18.371036328 UTC

.section .text
.align 8
_c1vLD:
_c1vLD:
	leaq block_c1vLI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.absInteger_entry@gotpcrel(%rip)
	.size _c1vLD, .-_c1vLD


==================== Asm code ====================
2018-03-16 15:56:18.371627604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLD_info:
	.quad	_c1vLD
	.quad	2
	.quad	-4294967266
	.quad	u1vNN_srtd


==================== Asm code ====================
2018-03-16 15:56:18.372212907 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNO_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	288230376151711745
	.quad	4611686018706309632
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:18.372893393 UTC

.section .text
.align 8
_c1vLI:
_c1vLI:
	leaq block_c1vLM_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even2_closure(%rip),%r8
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Real.$w$s$c-_entry
	.size _c1vLI, .-_c1vLI


==================== Asm code ====================
2018-03-16 15:56:18.373585398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLI_info:
	.quad	_c1vLI
	.quad	4
	.quad	-4294967266
	.quad	u1vNO_srtd


==================== Asm code ====================
2018-03-16 15:56:18.374163627 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNP_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	1
	.quad	4611686018706309120
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:18.374787506 UTC

.section .text
.align 8
_c1vLM:
_c1vLM:
	leaq block_c1vLO_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.signumInteger_entry@gotpcrel(%rip)
	.size _c1vLM, .-_c1vLM


==================== Asm code ====================
2018-03-16 15:56:18.375389686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLM_info:
	.quad	_c1vLM
	.quad	4
	.quad	-4294967266
	.quad	u1vNP_srtd


==================== Asm code ====================
2018-03-16 15:56:18.375941521 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNQ_srtd:
	.quad	S1sVz_srt
	.quad	149
	.quad	1
	.quad	4611686018706309120
	.quad	1048576


==================== Asm code ====================
2018-03-16 15:56:18.376644705 UTC

.section .text
.align 8
_c1vLO:
_c1vLO:
	leaq block_c1vLS_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.$fRealFracRatio2_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1vLO, .-_c1vLO


==================== Asm code ====================
2018-03-16 15:56:18.377235279 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLO_info:
	.quad	_c1vLO
	.quad	4
	.quad	-4294967266
	.quad	u1vNQ_srtd


==================== Asm code ====================
2018-03-16 15:56:18.377911766 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNR_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018706309120


==================== Asm code ====================
2018-03-16 15:56:18.378670215 UTC

.section .text
.align 8
_c1vLS:
_c1vLS:
	cmpq $1,%rbx
	je _u1vNC
_c1vN0:
	leaq block_c1vMJ_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_u1vNC:
	addq $32,%rbp
	jmp _c1vNA
	.size _c1vLS, .-_c1vLS


==================== Asm code ====================
2018-03-16 15:56:18.379338051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vLS_info:
	.quad	_c1vLS
	.quad	5
	.quad	-4294967266
	.quad	u1vNR_srtd


==================== Asm code ====================
2018-03-16 15:56:18.379912421 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNS_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018706309120


==================== Asm code ====================
2018-03-16 15:56:18.380680013 UTC

.section .text
.align 8
_c1vMJ:
_c1vMJ:
	cmpq $1,%rbx
	je _c1vNm
_c1vN7:
	movq 8(%rbp),%rax
	leaq block_c1vN4_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1vNm:
	leaq block_c1vNk_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.even_entry
	.size _c1vMJ, .-_c1vMJ


==================== Asm code ====================
2018-03-16 15:56:18.381474605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vMJ_info:
	.quad	_c1vMJ
	.quad	5
	.quad	-4294967266
	.quad	u1vNS_srtd


==================== Asm code ====================
2018-03-16 15:56:18.382065739 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNT_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:18.382771355 UTC

.section .text
.align 8
_c1vNk:
_c1vNk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vNE
_u1vNF:
	addq $24,%rbp
	jmp _c1vNA
_u1vNE:
	addq $8,%rbp
	jmp _s1sCZ
	.size _c1vNk, .-_c1vNk


==================== Asm code ====================
2018-03-16 15:56:18.383389512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vNk_info:
	.quad	_c1vNk
	.quad	4
	.quad	-4294967266
	.quad	u1vNT_srtd


==================== Asm code ====================
2018-03-16 15:56:18.384130789 UTC

.section .text
.align 8
_c1vNA:
_c1vNA:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vNA, .-_c1vNA


==================== Asm code ====================
2018-03-16 15:56:18.385318089 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNU_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018697920512


==================== Asm code ====================
2018-03-16 15:56:18.386064922 UTC

.section .text
.align 8
_c1vN4:
_c1vN4:
	cmpq $1,%rbx
	je _u1vND
_c1vNd:
	leaq GHC.Real.$fRealFracRatio1_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_u1vND:
	addq $8,%rbp
	jmp _s1sCZ
	.size _c1vN4, .-_c1vN4


==================== Asm code ====================
2018-03-16 15:56:18.386759381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vN4_info:
	.quad	_c1vN4
	.quad	4
	.quad	-4294967266
	.quad	u1vNU_srtd


==================== Asm code ====================
2018-03-16 15:56:18.387397115 UTC

.section .text
.align 8
_s1sCZ:
_s1sCZ:
	leaq block_c1vM1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1sCZ, .-_s1sCZ


==================== Asm code ====================
2018-03-16 15:56:18.387999475 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNV_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:18.388584637 UTC

.section .text
.align 8
_c1vM1:
_c1vM1:
	leaq block_c1vM5_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vM1, .-_c1vM1


==================== Asm code ====================
2018-03-16 15:56:18.389167863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vM1_info:
	.quad	_c1vM1
	.quad	516
	.quad	-4294967266
	.quad	u1vNV_srtd


==================== Asm code ====================
2018-03-16 15:56:18.389760089 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNW_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018429485056


==================== Asm code ====================
2018-03-16 15:56:18.390440177 UTC

.section .text
.align 8
_c1vM5:
_c1vM5:
	movq 8(%rbp),%rax
	leaq block_c1vM9_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	leaq GHC.Real.even1_closure(%rip),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1vM5, .-_c1vM5


==================== Asm code ====================
2018-03-16 15:56:18.391075782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vM5_info:
	.quad	_c1vM5
	.quad	516
	.quad	-4294967266
	.quad	u1vNW_srtd


==================== Asm code ====================
2018-03-16 15:56:18.391629927 UTC

.section .data.rel.ro
.align 8
.align 1
u1vNX_srtd:
	.quad	S1sVz_srt
	.quad	127
	.quad	1
	.quad	4611686018427387904


==================== Asm code ====================
2018-03-16 15:56:18.392272996 UTC

.section .text
.align 8
_c1vM9:
_c1vM9:
	leaq block_c1vMd_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1vM9, .-_c1vM9


==================== Asm code ====================
2018-03-16 15:56:18.392869253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vM9_info:
	.quad	_c1vM9
	.quad	3
	.quad	-4294967266
	.quad	u1vNX_srtd


==================== Asm code ====================
2018-03-16 15:56:18.393541682 UTC

.section .text
.align 8
_c1vMd:
_c1vMd:
	movq 8(%rbp),%rax
	leaq block_c1vMh_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c1vMd, .-_c1vMd


==================== Asm code ====================
2018-03-16 15:56:18.394150645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vMd_info:
	.quad	_c1vMd
	.quad	3
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.394956284 UTC

.section .text
.align 8
_c1vMh:
_c1vMh:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1vMV
_c1vMR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vMY
_c1vMT:
	leaq sat_s1sD5_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c1vMY:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1vMV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vMY
_c1vMX:
	leaq sat_s1sD6_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
	.size _c1vMh, .-_c1vMh


==================== Asm code ====================
2018-03-16 15:56:18.395679268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vMh_info:
	.quad	_c1vMh
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.398989581 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cround_closure
.type GHC.Real.$fRealFracRatio_$s$cround_closure, @object
GHC.Real.$fRealFracRatio_$s$cround_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.399758246 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$cround_entry
.type GHC.Real.$fRealFracRatio_$s$cround_entry, @object
GHC.Real.$fRealFracRatio_$s$cround_entry:
_c1vPJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vPK
_c1vPL:
	leaq block_c1vPG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vPG
_c1vPH:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vPK:
	leaq GHC.Real.$fRealFracRatio_$s$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$cround_entry, .-GHC.Real.$fRealFracRatio_$s$cround_entry


==================== Asm code ====================
2018-03-16 15:56:18.400396256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$cround_info
.type GHC.Real.$fRealFracRatio_$s$cround_info, @object
GHC.Real.$fRealFracRatio_$s$cround_info:
	.quad	GHC.Real.$fRealFracRatio_$s$cround_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+1176


==================== Asm code ====================
2018-03-16 15:56:18.401029847 UTC

.section .text
.align 8
_c1vPG:
_c1vPG:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cround_entry
	.size _c1vPG, .-_c1vPG


==================== Asm code ====================
2018-03-16 15:56:18.401640048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vPG_info:
	.quad	_c1vPG
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1176


==================== Asm code ====================
2018-03-16 15:56:18.422018367 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cround_closure
.type GHC.Real.$w$cround_closure, @object
GHC.Real.$w$cround_closure:
	.quad	GHC.Real.$w$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.422880387 UTC

.section .text
.align 8
sat_s1sDS_entry:
_c1vRh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vRi
_c1vRj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vRi:
	jmp *-16(%r13)
	.size sat_s1sDS_entry, .-sat_s1sDS_entry


==================== Asm code ====================
2018-03-16 15:56:18.423550497 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sDS_info:
	.quad	sat_s1sDS_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.424305277 UTC

.section .text
.align 8
sat_s1sDT_entry:
_c1vRq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vRr
_c1vRs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1vRr:
	jmp *-16(%r13)
	.size sat_s1sDT_entry, .-sat_s1sDT_entry


==================== Asm code ====================
2018-03-16 15:56:18.425020073 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sDT_info:
	.quad	sat_s1sDT_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.425623218 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTN_srtd:
	.quad	S1sVz_srt+584
	.quad	78
	.quad	9156733004435457
	.quad	8192


==================== Asm code ====================
2018-03-16 15:56:18.426406211 UTC

.section .text
.align 8
.globl GHC.Real.$w$cround_entry
.type GHC.Real.$w$cround_entry, @object
GHC.Real.$w$cround_entry:
_c1vRt:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vRu
_c1vRv:
	leaq block_c1vQ4_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
_c1vRu:
	leaq GHC.Real.$w$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cround_entry, .-GHC.Real.$w$cround_entry


==================== Asm code ====================
2018-03-16 15:56:18.427040692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cround_info
.type GHC.Real.$w$cround_info, @object
GHC.Real.$w$cround_info:
	.quad	GHC.Real.$w$cround_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1vTN_srtd


==================== Asm code ====================
2018-03-16 15:56:18.427629913 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTO_srtd:
	.quad	S1sVz_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:18.428296739 UTC

.section .text
.align 8
_c1vQ4:
_c1vQ4:
	leaq block_c1vQ6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c1vQ6
_c1vQ7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vQ4, .-_c1vQ4


==================== Asm code ====================
2018-03-16 15:56:18.428918013 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQ4_info:
	.quad	_c1vQ4
	.quad	2
	.quad	-4294967266
	.quad	u1vTO_srtd


==================== Asm code ====================
2018-03-16 15:56:18.429523654 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTP_srtd:
	.quad	S1sVz_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:18.430151508 UTC

.section .text
.align 8
_c1vQ6:
_c1vQ6:
	leaq block_c1vQb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1vQ6, .-_c1vQ6


==================== Asm code ====================
2018-03-16 15:56:18.430770839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQ6_info:
	.quad	_c1vQ6
	.quad	3
	.quad	-4294967266
	.quad	u1vTP_srtd


==================== Asm code ====================
2018-03-16 15:56:18.431336018 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTQ_srtd:
	.quad	S1sVz_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:18.431985284 UTC

.section .text
.align 8
_c1vQb:
_c1vQb:
	leaq block_c1vQf_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vQb, .-_c1vQb


==================== Asm code ====================
2018-03-16 15:56:18.432539501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQb_info:
	.quad	_c1vQb
	.quad	5
	.quad	-4294967266
	.quad	u1vTQ_srtd


==================== Asm code ====================
2018-03-16 15:56:18.433061243 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTR_srtd:
	.quad	S1sVz_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:18.433761531 UTC

.section .text
.align 8
_c1vQf:
_c1vQf:
	leaq block_c1vQj_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
	.size _c1vQf, .-_c1vQf


==================== Asm code ====================
2018-03-16 15:56:18.434372099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQf_info:
	.quad	_c1vQf
	.quad	5
	.quad	-4294967266
	.quad	u1vTR_srtd


==================== Asm code ====================
2018-03-16 15:56:18.434909134 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTS_srtd:
	.quad	S1sVz_srt+584
	.quad	54
	.quad	9156733004435457


==================== Asm code ====================
2018-03-16 15:56:18.435565556 UTC

.section .text
.align 8
_c1vQj:
_c1vQj:
	leaq block_c1vQl_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rdi
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromRational_entry
	.size _c1vQj, .-_c1vQj


==================== Asm code ====================
2018-03-16 15:56:18.43614968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQj_info:
	.quad	_c1vQj
	.quad	5
	.quad	-4294967266
	.quad	u1vTS_srtd


==================== Asm code ====================
2018-03-16 15:56:18.436674906 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTT_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2233383035013


==================== Asm code ====================
2018-03-16 15:56:18.437396999 UTC

.section .text
.align 8
_c1vQl:
_c1vQl:
	movq 8(%rbp),%rax
	leaq block_c1vQn_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %r14,%r9
	movq %rbx,%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq 40(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Real.$w$c-_entry
	.size _c1vQl, .-_c1vQl


==================== Asm code ====================
2018-03-16 15:56:18.437989831 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQl_info:
	.quad	_c1vQl
	.quad	6
	.quad	-4294967266
	.quad	u1vTT_srtd


==================== Asm code ====================
2018-03-16 15:56:18.438542139 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTU_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023296645


==================== Asm code ====================
2018-03-16 15:56:18.439191462 UTC

.section .text
.align 8
_c1vQn:
_c1vQn:
	leaq block_c1vQp_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp GHC.Real.$w$csignum_entry
	.size _c1vQn, .-_c1vQn


==================== Asm code ====================
2018-03-16 15:56:18.439756461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQn_info:
	.quad	_c1vQn
	.quad	5
	.quad	-4294967266
	.quad	u1vTU_srtd


==================== Asm code ====================
2018-03-16 15:56:18.440287346 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTV_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.44098669 UTC

.section .text
.align 8
_c1vQp:
_c1vQp:
	leaq block_c1vQr_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %r14,%rax
	movq 32(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _c1vQp, .-_c1vQp


==================== Asm code ====================
2018-03-16 15:56:18.441701256 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQp_info:
	.quad	_c1vQp
	.quad	5
	.quad	-4294967266
	.quad	u1vTV_srtd


==================== Asm code ====================
2018-03-16 15:56:18.44222406 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTW_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.442908742 UTC

.section .text
.align 8
_c1vQr:
_c1vQr:
	leaq block_c1vQt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1vQr, .-_c1vQr


==================== Asm code ====================
2018-03-16 15:56:18.443515116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQr_info:
	.quad	_c1vQr
	.quad	7
	.quad	-4294967266
	.quad	u1vTW_srtd


==================== Asm code ====================
2018-03-16 15:56:18.444058253 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTX_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.444707816 UTC

.section .text
.align 8
_c1vQt:
_c1vQt:
	leaq block_c1vQx_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vQt, .-_c1vQt


==================== Asm code ====================
2018-03-16 15:56:18.445439946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQt_info:
	.quad	_c1vQt
	.quad	9
	.quad	-4294967266
	.quad	u1vTX_srtd


==================== Asm code ====================
2018-03-16 15:56:18.445969651 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTY_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.446644942 UTC

.section .text
.align 8
_c1vQx:
_c1vQx:
	leaq block_c1vQB_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
	.size _c1vQx, .-_c1vQx


==================== Asm code ====================
2018-03-16 15:56:18.447329621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQx_info:
	.quad	_c1vQx
	.quad	9
	.quad	-4294967266
	.quad	u1vTY_srtd


==================== Asm code ====================
2018-03-16 15:56:18.448531989 UTC

.section .data.rel.ro
.align 8
.align 1
u1vTZ_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.44922915 UTC

.section .text
.align 8
_c1vQB:
_c1vQB:
	leaq block_c1vQD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 64(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _c1vQB, .-_c1vQB


==================== Asm code ====================
2018-03-16 15:56:18.449870664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQB_info:
	.quad	_c1vQB
	.quad	9
	.quad	-4294967266
	.quad	u1vTZ_srtd


==================== Asm code ====================
2018-03-16 15:56:18.450380603 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU0_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.450975602 UTC

.section .text
.align 8
_c1vQD:
_c1vQD:
	leaq block_c1vQH_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p2Real_entry
	.size _c1vQD, .-_c1vQD


==================== Asm code ====================
2018-03-16 15:56:18.451558863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQD_info:
	.quad	_c1vQD
	.quad	10
	.quad	-4294967266
	.quad	u1vU0_srtd


==================== Asm code ====================
2018-03-16 15:56:18.452287476 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU1_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.452962323 UTC

.section .text
.align 8
_c1vQH:
_c1vQH:
	leaq block_c1vQL_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1vQH, .-_c1vQH


==================== Asm code ====================
2018-03-16 15:56:18.45357712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQH_info:
	.quad	_c1vQH
	.quad	10
	.quad	-4294967266
	.quad	u1vU1_srtd


==================== Asm code ====================
2018-03-16 15:56:18.454082295 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU2_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.454722221 UTC

.section .text
.align 8
_c1vQL:
_c1vQL:
	leaq block_c1vRK_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1vQL, .-_c1vQL


==================== Asm code ====================
2018-03-16 15:56:18.455335253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQL_info:
	.quad	_c1vQL
	.quad	10
	.quad	-4294967266
	.quad	u1vU2_srtd


==================== Asm code ====================
2018-03-16 15:56:18.455889168 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU3_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.456585697 UTC

.section .text
.align 8
_c1vRK:
_c1vRK:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTs
_c1vT9:
	leaq block_c1vT7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_u1vTs:
	addq $8,%rbp
	jmp _s1sDK
	.size _c1vRK, .-_c1vRK


==================== Asm code ====================
2018-03-16 15:56:18.457300952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vRK_info:
	.quad	_c1vRK
	.quad	10
	.quad	-4294967266
	.quad	u1vU3_srtd


==================== Asm code ====================
2018-03-16 15:56:18.457846437 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU4_srtd:
	.quad	S1sVz_srt+680
	.quad	42
	.quad	2199023288453


==================== Asm code ====================
2018-03-16 15:56:18.458541641 UTC

.section .text
.align 8
_c1vT7:
_c1vT7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTt
_u1vTu:
	addq $64,%rbp
	jmp _c1vTj
_u1vTt:
	addq $8,%rbp
	jmp _s1sDK
	.size _c1vT7, .-_c1vT7


==================== Asm code ====================
2018-03-16 15:56:18.459157115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vT7_info:
	.quad	_c1vT7
	.quad	10
	.quad	-4294967266
	.quad	u1vU4_srtd


==================== Asm code ====================
2018-03-16 15:56:18.459775787 UTC

.section .text
.align 8
_s1sDK:
_s1sDK:
	leaq block_c1vQU_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 64(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$w$cfromInteger_entry
	.size _s1sDK, .-_s1sDK


==================== Asm code ====================
2018-03-16 15:56:18.460406876 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU5_srtd:
	.quad	S1sVz_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:18.461082867 UTC

.section .text
.align 8
_c1vQU:
_c1vQU:
	leaq block_c1vRO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%rbp)
	movq 40(%rbp),%rcx
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1vQU, .-_c1vQU


==================== Asm code ====================
2018-03-16 15:56:18.462190935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vQU_info:
	.quad	_c1vQU
	.quad	10
	.quad	-4294967266
	.quad	u1vU5_srtd


==================== Asm code ====================
2018-03-16 15:56:18.462700868 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU6_srtd:
	.quad	S1sVz_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:18.463391128 UTC

.section .text
.align 8
_c1vRO:
_c1vRO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTv
_c1vSD:
	leaq block_c1vSB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_u1vTv:
	addq $8,%rbp
	jmp _s1sDU
	.size _c1vRO, .-_c1vRO


==================== Asm code ====================
2018-03-16 15:56:18.463981128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vRO_info:
	.quad	_c1vRO
	.quad	12
	.quad	-4294967266
	.quad	u1vU6_srtd


==================== Asm code ====================
2018-03-16 15:56:18.464493477 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU7_srtd:
	.quad	S1sVz_srt+696
	.quad	40
	.quad	549755813921


==================== Asm code ====================
2018-03-16 15:56:18.465152807 UTC

.section .text
.align 8
_c1vSB:
_c1vSB:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTw
_c1vSO:
	leaq block_c1vSM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 80(%rbp),%rsi
	movq 96(%rbp),%r14
	jmp GHC.Real.even_entry
_u1vTw:
	addq $8,%rbp
	jmp _s1sDU
	.size _c1vSB, .-_c1vSB


==================== Asm code ====================
2018-03-16 15:56:18.465788799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vSB_info:
	.quad	_c1vSB
	.quad	12
	.quad	-4294967266
	.quad	u1vU7_srtd


==================== Asm code ====================
2018-03-16 15:56:18.466435562 UTC

.section .text
.align 8
_s1sDU:
_s1sDU:
	leaq block_c1vS6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _s1sDU, .-_s1sDU


==================== Asm code ====================
2018-03-16 15:56:18.46703345 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU8_srtd:
	.quad	S1sVz_srt+736
	.quad	35
	.quad	17179869185


==================== Asm code ====================
2018-03-16 15:56:18.46771721 UTC

.section .text
.align 8
_c1vS6:
_c1vS6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTz
_c1vSi:
	leaq block_c1vSg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_u1vTz:
	addq $104,%rbp
	jmp _c1vSo
	.size _c1vS6, .-_c1vS6


==================== Asm code ====================
2018-03-16 15:56:18.468363638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vS6_info:
	.quad	_c1vS6
	.quad	5132
	.quad	-4294967266
	.quad	u1vU8_srtd


==================== Asm code ====================
2018-03-16 15:56:18.468892632 UTC

.section .data.rel.ro
.align 8
.align 1
u1vU9_srtd:
	.quad	S1sVz_srt+736
	.quad	35
	.quad	17179869185


==================== Asm code ====================
2018-03-16 15:56:18.469547707 UTC

.section .text
.align 8
_c1vSg:
_c1vSg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTA
_u1vTB:
	addq $8,%rbp
	jmp _s1sDO
_u1vTA:
	addq $104,%rbp
	jmp _c1vSo
	.size _c1vSg, .-_c1vSg


==================== Asm code ====================
2018-03-16 15:56:18.470127981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vSg_info:
	.quad	_c1vSg
	.quad	7948
	.quad	-4294967266
	.quad	u1vU9_srtd


==================== Asm code ====================
2018-03-16 15:56:18.470768384 UTC

.section .text
.align 8
_c1vSo:
_c1vSo:
	leaq GHC.Real.$fRealFracRatio1_closure(%rip),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vSo, .-_c1vSo


==================== Asm code ====================
2018-03-16 15:56:18.471399137 UTC

.section .text
.align 8
_c1vSM:
_c1vSM:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u1vTx
_u1vTy:
	addq $80,%rbp
	jmp _c1vTj
_u1vTx:
	addq $8,%rbp
	jmp _s1sDO
	.size _c1vSM, .-_c1vSM


==================== Asm code ====================
2018-03-16 15:56:18.471984452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vSM_info:
	.quad	_c1vSM
	.quad	7948
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.472610252 UTC

.section .text
.align 8
_s1sDO:
_s1sDO:
	leaq block_c1vR1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 88(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s1sDO, .-_s1sDO


==================== Asm code ====================
2018-03-16 15:56:18.473345638 UTC

.section .text
.align 8
_c1vR1:
_c1vR1:
	leaq block_c1vR5_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vR1, .-_c1vR1


==================== Asm code ====================
2018-03-16 15:56:18.47390323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vR1_info:
	.quad	_c1vR1
	.quad	139020
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.474597298 UTC

.section .text
.align 8
_c1vR5:
_c1vR5:
	movq 72(%rbp),%rax
	leaq block_c1vR9_info(%rip),%rcx
	movq %rcx,72(%rbp)
	movq 8(%rbp),%r9
	movq 16(%rbp),%r8
	movq 64(%rbp),%rdi
	movq %rax,%rsi
	movq 88(%rbp),%r14
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.Real.$w$c<_entry
	.size _c1vR5, .-_c1vR5


==================== Asm code ====================
2018-03-16 15:56:18.475672148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vR5_info:
	.quad	_c1vR5
	.quad	139020
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.476620224 UTC

.section .text
.align 8
_c1vR9:
_c1vR9:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1vRV
_c1vRZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vS2
_c1vS1:
	leaq sat_s1sDT_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c1vS2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1vRV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1vS2
_c1vRX:
	leaq sat_s1sDS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
	.size _c1vR9, .-_c1vR9


==================== Asm code ====================
2018-03-16 15:56:18.477458305 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vR9_info:
	.quad	_c1vR9
	.quad	131
	.quad	4294967326
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.478057502 UTC

.section .text
.align 8
_c1vTj:
_c1vTj:
	movq (%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vTj, .-_c1vTj


==================== Asm code ====================
2018-03-16 15:56:18.48114075 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cround_closure
.type GHC.Real.$fRealFracRatio_$cround_closure, @object
GHC.Real.$fRealFracRatio_$cround_closure:
	.quad	GHC.Real.$fRealFracRatio_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.482524313 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$cround_entry
.type GHC.Real.$fRealFracRatio_$cround_entry, @object
GHC.Real.$fRealFracRatio_$cround_entry:
_c1vXx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vXy
_c1vXz:
	leaq block_c1vXu_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vXu
_c1vXv:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vXy:
	leaq GHC.Real.$fRealFracRatio_$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$cround_entry, .-GHC.Real.$fRealFracRatio_$cround_entry


==================== Asm code ====================
2018-03-16 15:56:18.483187717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$cround_info
.type GHC.Real.$fRealFracRatio_$cround_info, @object
GHC.Real.$fRealFracRatio_$cround_info:
	.quad	GHC.Real.$fRealFracRatio_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1200


==================== Asm code ====================
2018-03-16 15:56:18.483829598 UTC

.section .text
.align 8
_c1vXu:
_c1vXu:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cround_entry
	.size _c1vXu, .-_c1vXu


==================== Asm code ====================
2018-03-16 15:56:18.484466996 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vXu_info:
	.quad	_c1vXu
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1200


==================== Asm code ====================
2018-03-16 15:56:18.489816488 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_closure
.type GHC.Real.$fRealFracRatio_$s$ctruncate_closure, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_closure:
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.490661665 UTC

.section .text
.align 8
sat_s1sEk_entry:
_c1vY6:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vY7
_c1vY8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1vY1_info(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1vY7:
	jmp *-16(%r13)
	.size sat_s1sEk_entry, .-sat_s1sEk_entry


==================== Asm code ====================
2018-03-16 15:56:18.491322674 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEk_info:
	.quad	sat_s1sEk_entry
	.quad	2
	.quad	12884901906
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.492068044 UTC

.section .text
.align 8
_c1vY1:
_c1vY1:
	cmpq $1,%rbx
	je _c1vY5
_c1vY4:
	movq 16(%rbp),%rax
	leaq block_c1vYb_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c1vY5:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vY1, .-_c1vY1


==================== Asm code ====================
2018-03-16 15:56:18.492690148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vY1_info:
	.quad	_c1vY1
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.493360045 UTC

.section .text
.align 8
_c1vYb:
_c1vYb:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1vYb, .-_c1vYb


==================== Asm code ====================
2018-03-16 15:56:18.493932694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vYb_info:
	.quad	_c1vYb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.494700261 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_entry
.type GHC.Real.$fRealFracRatio_$s$ctruncate_entry, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_entry:
_c1vYi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vYo
_c1vYp:
	leaq block_c1vXS_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1vXS
_c1vXT:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vYo:
	leaq GHC.Real.$fRealFracRatio_$s$ctruncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$s$ctruncate_entry, .-GHC.Real.$fRealFracRatio_$s$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:56:18.49537964 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$ctruncate_info
.type GHC.Real.$fRealFracRatio_$s$ctruncate_info, @object
GHC.Real.$fRealFracRatio_$s$ctruncate_info:
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.496075224 UTC

.section .text
.align 8
_c1vXS:
_c1vXS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1vYs
_c1vYr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s1sEk_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1vYj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	leaq -24(%r12),%rax
	movq %rax,8(%rbp)
	jmp GHC.Real.$p1Integral_entry
_c1vYs:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1vXS, .-_c1vXS


==================== Asm code ====================
2018-03-16 15:56:18.496701135 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vXS_info:
	.quad	_c1vXS
	.quad	1
	.quad	12884901918
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.497350776 UTC

.section .text
.align 8
_c1vYj:
_c1vYj:
	leaq block_c1vYn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1vYj, .-_c1vYj


==================== Asm code ====================
2018-03-16 15:56:18.497879678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vYj_info:
	.quad	_c1vYj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.498483371 UTC

.section .text
.align 8
_c1vYn:
_c1vYn:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1vYn, .-_c1vYn


==================== Asm code ====================
2018-03-16 15:56:18.499040865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vYn_info:
	.quad	_c1vYn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.502780677 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$ctruncate_closure
.type GHC.Real.$fRealFracRatio_$ctruncate_closure, @object
GHC.Real.$fRealFracRatio_$ctruncate_closure:
	.quad	GHC.Real.$fRealFracRatio_$ctruncate_info


==================== Asm code ====================
2018-03-16 15:56:18.503590845 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_$ctruncate_entry
.type GHC.Real.$fRealFracRatio_$ctruncate_entry, @object
GHC.Real.$fRealFracRatio_$ctruncate_entry:
_c1vZh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1vZl
_c1vZm:
	leaq block_c1vZe_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1vZe
_c1vZf:
	movq (%rbx),%rax
	jmp *(%rax)
_c1vZl:
	leaq GHC.Real.$fRealFracRatio_$ctruncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_$ctruncate_entry, .-GHC.Real.$fRealFracRatio_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:56:18.504247018 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$ctruncate_info
.type GHC.Real.$fRealFracRatio_$ctruncate_info, @object
GHC.Real.$fRealFracRatio_$ctruncate_info:
	.quad	GHC.Real.$fRealFracRatio_$ctruncate_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:18.504952628 UTC

.section .text
.align 8
_c1vZe:
_c1vZe:
	movq 16(%rbp),%rax
	leaq block_c1vZk_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cproperFraction_entry
	.size _c1vZe, .-_c1vZe


==================== Asm code ====================
2018-03-16 15:56:18.505629934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vZe_info:
	.quad	_c1vZe
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.506263245 UTC

.section .text
.align 8
_c1vZk:
_c1vZk:
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1vZk, .-_c1vZk


==================== Asm code ====================
2018-03-16 15:56:18.506831789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1vZk_info:
	.quad	_c1vZk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.509203383 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure
.type GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure, @object
GHC.Real.$fRealFracRatio_$s$fRealFracRatio_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Real.$fRealFracRatio_$s$fRealRatio_closure+1
	.quad	GHC.Real.$fFractionalRatio_$s$fFractionalRatio_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cround_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_closure+2
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.515602173 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_closure
.type GHC.Real.$fRealFracRatio_closure, @object
GHC.Real.$fRealFracRatio_closure:
	.quad	GHC.Real.$fRealFracRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.516314957 UTC

.section .text
.align 8
sat_s1sEB_entry:
_c1vZP:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cfloor_entry
	.size sat_s1sEB_entry, .-sat_s1sEB_entry


==================== Asm code ====================
2018-03-16 15:56:18.516884863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEB_info:
	.quad	sat_s1sEB_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+1160


==================== Asm code ====================
2018-03-16 15:56:18.517570914 UTC

.section .text
.align 8
sat_s1sEA_entry:
_c1vZX:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cceiling_entry
	.size sat_s1sEA_entry, .-sat_s1sEA_entry


==================== Asm code ====================
2018-03-16 15:56:18.518147375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEA_info:
	.quad	sat_s1sEA_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+1128


==================== Asm code ====================
2018-03-16 15:56:18.518750145 UTC

.section .text
.align 8
sat_s1sEz_entry:
_c1w05:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$cround_entry
	.size sat_s1sEz_entry, .-sat_s1sEz_entry


==================== Asm code ====================
2018-03-16 15:56:18.519276356 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEz_info:
	.quad	sat_s1sEz_entry
	.quad	1
	.quad	4294967305
	.quad	8589934607
	.quad	S1sVz_srt+1208


==================== Asm code ====================
2018-03-16 15:56:18.519901797 UTC

.section .text
.align 8
sat_s1sEy_entry:
_c1w0d:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fRealFracRatio_$ctruncate_entry
	.size sat_s1sEy_entry, .-sat_s1sEy_entry


==================== Asm code ====================
2018-03-16 15:56:18.520466238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEy_info:
	.quad	sat_s1sEy_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.52109954 UTC

.section .text
.align 8
sat_s1sEx_entry:
_c1w0l:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cproperFraction_entry
	.size sat_s1sEx_entry, .-sat_s1sEx_entry


==================== Asm code ====================
2018-03-16 15:56:18.521726112 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEx_info:
	.quad	sat_s1sEx_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.522428986 UTC

.section .text
.align 8
sat_s1sEw_entry:
_c1w0s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w0t
_c1w0u:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fFractionalRatio_entry
_c1w0t:
	jmp *-16(%r13)
	.size sat_s1sEw_entry, .-sat_s1sEw_entry


==================== Asm code ====================
2018-03-16 15:56:18.523027974 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEw_info:
	.quad	sat_s1sEw_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.523728206 UTC

.section .text
.align 8
sat_s1sEv_entry:
_c1w0z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w0A
_c1w0B:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fRealRatio_entry
_c1w0A:
	jmp *-16(%r13)
	.size sat_s1sEv_entry, .-sat_s1sEv_entry


==================== Asm code ====================
2018-03-16 15:56:18.524368153 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sEv_info:
	.quad	sat_s1sEv_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1096


==================== Asm code ====================
2018-03-16 15:56:18.525234273 UTC

.section .text
.align 8
.globl GHC.Real.$fRealFracRatio_entry
.type GHC.Real.$fRealFracRatio_entry, @object
GHC.Real.$fRealFracRatio_entry:
_c1w0D:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c1w0H
_c1w0G:
	leaq sat_s1sEB_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	leaq sat_s1sEA_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_s1sEz_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_s1sEy_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_s1sEx_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_s1sEw_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq sat_s1sEv_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	leaq GHC.Real.C:RealFrac_con_info(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-48(%r12)
	leaq -104(%r12),%rax
	movq %rax,-40(%r12)
	leaq -118(%r12),%rax
	movq %rax,-32(%r12)
	leaq -134(%r12),%rax
	movq %rax,-24(%r12)
	leaq -150(%r12),%rax
	movq %rax,-16(%r12)
	leaq -166(%r12),%rax
	movq %rax,-8(%r12)
	leaq -182(%r12),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1w0H:
	movq $192,904(%r13)
	leaq GHC.Real.$fRealFracRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fRealFracRatio_entry, .-GHC.Real.$fRealFracRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.526639902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fRealFracRatio_info
.type GHC.Real.$fRealFracRatio_info, @object
GHC.Real.$fRealFracRatio_info:
	.quad	GHC.Real.$fRealFracRatio_entry
	.quad	0
	.quad	76636239628861454
	.quad	4294967301
	.quad	S1sVz_srt+1048


==================== Asm code ====================
2018-03-16 15:56:18.533706327 UTC

.section .data
.align 8
.align 1
g_r1j3N_closure:
	.quad	g_r1j3N_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.534272505 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2u_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:18.535110825 UTC

.section .text
.align 8
g_r1j3N_entry:
_c1w1x:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w1y
_u1w2o:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c1w1s
_c1w1y:
	leaq g_r1j3N_closure(%rip),%rbx
	jmp *-8(%r13)
	.size g_r1j3N_entry, .-g_r1j3N_entry


==================== Asm code ====================
2018-03-16 15:56:18.535759023 UTC

.section .data.rel.ro
.align 8
.align 1
g_r1j3N_info:
	.quad	g_r1j3N_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u1w2u_srtd


==================== Asm code ====================
2018-03-16 15:56:18.536434508 UTC

.section .text
.align 8
_c1w1s:
_c1w1s:
	leaq block_c1w1v_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.remInteger_entry@gotpcrel(%rip)
	.size _c1w1s, .-_c1w1s


==================== Asm code ====================
2018-03-16 15:56:18.53706072 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2v_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.537748838 UTC

.section .text
.align 8
_c1w1v:
_c1w1v:
	leaq block_c1w1C_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1w1v, .-_c1w1v


==================== Asm code ====================
2018-03-16 15:56:18.538359521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1v_info:
	.quad	_c1w1v
	.quad	3
	.quad	-4294967266
	.quad	u1w2v_srtd


==================== Asm code ====================
2018-03-16 15:56:18.538945962 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2w_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.539683313 UTC

.section .text
.align 8
_c1w1C:
_c1w1C:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1w2i
_c1w1K:
	leaq block_c1w1H_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1w2i:
	leaq block_c1w2c_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
	.size _c1w1C, .-_c1w1C


==================== Asm code ====================
2018-03-16 15:56:18.540348136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1C_info:
	.quad	_c1w1C
	.quad	3
	.quad	-4294967266
	.quad	u1w2w_srtd


==================== Asm code ====================
2018-03-16 15:56:18.541628851 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2x_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.54233607 UTC

.section .text
.align 8
_c1w2c:
_c1w2c:
	movq 8(%rbp),%rax
	leaq block_c1w2g_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1w2c, .-_c1w2c


==================== Asm code ====================
2018-03-16 15:56:18.542954891 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w2c_info:
	.quad	_c1w2c
	.quad	131
	.quad	-4294967266
	.quad	u1w2x_srtd


==================== Asm code ====================
2018-03-16 15:56:18.543542194 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2y_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.544145248 UTC

.section .text
.align 8
_c1w2g:
_c1w2g:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1w1s
	.size _c1w2g, .-_c1w2g


==================== Asm code ====================
2018-03-16 15:56:18.544702219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w2g_info:
	.quad	_c1w2g
	.quad	2
	.quad	-4294967266
	.quad	u1w2y_srtd


==================== Asm code ====================
2018-03-16 15:56:18.545230004 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2z_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.545990806 UTC

.section .text
.align 8
_c1w1H:
_c1w1H:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _c1w29
_c1w1Z:
	leaq block_c1w1O_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1w29:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1w1H, .-_c1w1H


==================== Asm code ====================
2018-03-16 15:56:18.546620145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1H_info:
	.quad	_c1w1H
	.quad	3
	.quad	-4294967266
	.quad	u1w2z_srtd


==================== Asm code ====================
2018-03-16 15:56:18.547145009 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2A_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.547792985 UTC

.section .text
.align 8
_c1w1O:
_c1w1O:
	leaq block_c1w1S_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq 16(%rbp),%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
	.size _c1w1O, .-_c1w1O


==================== Asm code ====================
2018-03-16 15:56:18.54840841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1O_info:
	.quad	_c1w1O
	.quad	259
	.quad	-4294967266
	.quad	u1w2A_srtd


==================== Asm code ====================
2018-03-16 15:56:18.54895878 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2B_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.549701857 UTC

.section .text
.align 8
_c1w1S:
_c1w1S:
	movq 8(%rbp),%rax
	leaq block_c1w1W_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1w1S, .-_c1w1S


==================== Asm code ====================
2018-03-16 15:56:18.550316464 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1S_info:
	.quad	_c1w1S
	.quad	131
	.quad	-4294967266
	.quad	u1w2B_srtd


==================== Asm code ====================
2018-03-16 15:56:18.550850389 UTC

.section .data.rel.ro
.align 8
.align 1
u1w2C_srtd:
	.quad	S1sVz_srt
	.quad	154
	.quad	1
	.quad	4611686018427388416
	.quad	33554432


==================== Asm code ====================
2018-03-16 15:56:18.551464695 UTC

.section .text
.align 8
_c1w1W:
_c1w1W:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1w1s
	.size _c1w1W, .-_c1w1W


==================== Asm code ====================
2018-03-16 15:56:18.552034894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w1W_info:
	.quad	_c1w1W
	.quad	2
	.quad	-4294967266
	.quad	u1w2C_srtd


==================== Asm code ====================
2018-03-16 15:56:18.558568246 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f_closure
.type GHC.Real.^_f_closure, @object
GHC.Real.^_f_closure:
	.quad	GHC.Real.^_f_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.559123604 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4p_srtd:
	.quad	S1sVz_srt
	.quad	158
	.quad	1
	.quad	4611686018427388416
	.quad	838860800


==================== Asm code ====================
2018-03-16 15:56:18.559930179 UTC

.section .text
.align 8
.globl GHC.Real.^_f_entry
.type GHC.Real.^_f_entry, @object
GHC.Real.^_f_entry:
_c1w3z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w3A
_u1w4l:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1w3u
_c1w3A:
	leaq GHC.Real.^_f_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_f_entry, .-GHC.Real.^_f_entry


==================== Asm code ====================
2018-03-16 15:56:18.560575389 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f_info
.type GHC.Real.^_f_info, @object
GHC.Real.^_f_info:
	.quad	GHC.Real.^_f_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1w4p_srtd


==================== Asm code ====================
2018-03-16 15:56:18.561669407 UTC

.section .text
.align 8
_c1w3u:
_c1w3u:
	leaq block_c1w3x_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.remInteger_entry@gotpcrel(%rip)
	.size _c1w3u, .-_c1w3u


==================== Asm code ====================
2018-03-16 15:56:18.562294507 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4q_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:18.562966613 UTC

.section .text
.align 8
_c1w3x:
_c1w3x:
	leaq block_c1w3E_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c1w3x, .-_c1w3x


==================== Asm code ====================
2018-03-16 15:56:18.563600165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w3x_info:
	.quad	_c1w3x
	.quad	2
	.quad	-4294967266
	.quad	u1w4q_srtd


==================== Asm code ====================
2018-03-16 15:56:18.564151388 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4r_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:18.564912286 UTC

.section .text
.align 8
_c1w3E:
_c1w3E:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c1w4f
_c1w3M:
	leaq block_c1w3J_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1w4f:
	leaq block_c1w49_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
	.size _c1w3E, .-_c1w3E


==================== Asm code ====================
2018-03-16 15:56:18.565599423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w3E_info:
	.quad	_c1w3E
	.quad	2
	.quad	-4294967266
	.quad	u1w4r_srtd


==================== Asm code ====================
2018-03-16 15:56:18.566180803 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4s_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:18.566878765 UTC

.section .text
.align 8
_c1w49:
_c1w49:
	movq 8(%rbp),%rax
	leaq block_c1w4d_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1w49, .-_c1w49


==================== Asm code ====================
2018-03-16 15:56:18.567501503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w49_info:
	.quad	_c1w49
	.quad	130
	.quad	-4294967266
	.quad	u1w4s_srtd


==================== Asm code ====================
2018-03-16 15:56:18.568053391 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4t_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	4611686018427388416
	.quad	301989888


==================== Asm code ====================
2018-03-16 15:56:18.568689864 UTC

.section .text
.align 8
_c1w4d:
_c1w4d:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	jmp _c1w3u
	.size _c1w4d, .-_c1w4d


==================== Asm code ====================
2018-03-16 15:56:18.569291201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w4d_info:
	.quad	_c1w4d
	.quad	1
	.quad	-4294967266
	.quad	u1w4t_srtd


==================== Asm code ====================
2018-03-16 15:56:18.569851356 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4u_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	512
	.quad	268435456


==================== Asm code ====================
2018-03-16 15:56:18.570588831 UTC

.section .text
.align 8
_c1w3J:
_c1w3J:
	cmpq $1,%rbx
	je _c1w46
_c1w3X:
	leaq block_c1w3Q_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c1w46:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1w3J, .-_c1w3J


==================== Asm code ====================
2018-03-16 15:56:18.571223985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w3J_info:
	.quad	_c1w3J
	.quad	2
	.quad	-4294967266
	.quad	u1w4u_srtd


==================== Asm code ====================
2018-03-16 15:56:18.572265394 UTC

.section .data.rel.ro
.align 8
.align 1
u1w4v_srtd:
	.quad	S1sVz_srt
	.quad	157
	.quad	1
	.quad	0
	.quad	268435456


==================== Asm code ====================
2018-03-16 15:56:18.572981576 UTC

.section .text
.align 8
_c1w3Q:
_c1w3Q:
	leaq block_c1w3U_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1w3Q, .-_c1w3Q


==================== Asm code ====================
2018-03-16 15:56:18.573905702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w3Q_info:
	.quad	_c1w3Q
	.quad	130
	.quad	-4294967266
	.quad	u1w4v_srtd


==================== Asm code ====================
2018-03-16 15:56:18.574556324 UTC

.section .text
.align 8
_c1w3U:
_c1w3U:
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp g_r1j3N_entry
	.size _c1w3U, .-_c1w3U


==================== Asm code ====================
2018-03-16 15:56:18.575142613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w3U_info:
	.quad	_c1w3U
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1248


==================== Asm code ====================
2018-03-16 15:56:18.576813148 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_r1j3O_bytes:
	.asciz "Negative exponent"


==================== Asm code ====================
2018-03-16 15:56:18.579867237 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^1_closure
.type GHC.Real.^1_closure, @object
GHC.Real.^1_closure:
	.quad	GHC.Real.^1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.580840714 UTC

.section .text
.align 8
.globl GHC.Real.^1_entry
.type GHC.Real.^1_entry, @object
GHC.Real.^1_entry:
_c1w5o:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w5p
_c1w5q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1w5l
_c1w5k:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1w5m_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl5_r1j3O_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c1w5p:
	jmp *-16(%r13)
_c1w5l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.^1_entry, .-GHC.Real.^1_entry


==================== Asm code ====================
2018-03-16 15:56:18.581616306 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^1_info
.type GHC.Real.^1_info, @object
GHC.Real.^1_info:
	.quad	GHC.Real.^1_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+1264


==================== Asm code ====================
2018-03-16 15:56:18.582273774 UTC

.section .text
.align 8
_c1w5m:
_c1w5m:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c1w5m, .-_c1w5m


==================== Asm code ====================
2018-03-16 15:56:18.582850356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w5m_info:
	.quad	_c1w5m
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1264


==================== Asm code ====================
2018-03-16 15:56:18.586839646 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^_closure
.type GHC.Real.^_$s^_closure, @object
GHC.Real.^_$s^_closure:
	.quad	GHC.Real.^_$s^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.587441198 UTC

.section .data.rel.ro
.align 8
.align 1
u1w69_srtd:
	.quad	S1sVz_srt+1008
	.quad	35
	.quad	28051505153


==================== Asm code ====================
2018-03-16 15:56:18.588271616 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^_entry
.type GHC.Real.^_$s^_entry, @object
GHC.Real.^_$s^_entry:
_c1w5P:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w5Q
_c1w5R:
	leaq block_c1w5K_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c1w5Q:
	leaq GHC.Real.^_$s^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^_entry, .-GHC.Real.^_$s^_entry


==================== Asm code ====================
2018-03-16 15:56:18.588879619 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^_info
.type GHC.Real.^_$s^_info, @object
GHC.Real.^_$s^_info:
	.quad	GHC.Real.^_$s^_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1w69_srtd


==================== Asm code ====================
2018-03-16 15:56:18.589500241 UTC

.section .data.rel.ro
.align 8
.align 1
u1w6a_srtd:
	.quad	S1sVz_srt+1008
	.quad	35
	.quad	19461570561


==================== Asm code ====================
2018-03-16 15:56:18.590203333 UTC

.section .text
.align 8
_c1w5K:
_c1w5K:
	cmpq $1,%rbx
	je _c1w5O
_c1w5N:
	leaq block_c1w5U_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1w5O:
	leaq GHC.Real.^1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1w5K, .-_c1w5K


==================== Asm code ====================
2018-03-16 15:56:18.59086744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w5K_info:
	.quad	_c1w5K
	.quad	2
	.quad	-4294967266
	.quad	u1w6a_srtd


==================== Asm code ====================
2018-03-16 15:56:18.591524624 UTC

.section .text
.align 8
_c1w5U:
_c1w5U:
	cmpq $1,%rbx
	je _c1w65
_c1w61:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.^_f_entry
_c1w65:
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1w5U, .-_c1w5U


==================== Asm code ====================
2018-03-16 15:56:18.592143909 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w5U_info:
	.quad	_c1w5U
	.quad	2
	.quad	-9223372032559808482
	.quad	S1sVz_srt+1008


==================== Asm code ====================
2018-03-16 15:56:18.595676192 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cfromEnum_closure
.type GHC.Real.$w$s$cfromEnum_closure, @object
GHC.Real.$w$s$cfromEnum_closure:
	.quad	GHC.Real.$w$s$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.596507221 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cfromEnum_entry
.type GHC.Real.$w$s$cfromEnum_entry, @object
GHC.Real.$w$s$cfromEnum_entry:
_c1w6B:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w6C
_c1w6D:
	leaq block_c1w6w_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1w6C:
	leaq GHC.Real.$w$s$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cfromEnum_entry, .-GHC.Real.$w$s$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:18.597228843 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cfromEnum_info
.type GHC.Real.$w$s$cfromEnum_info, @object
GHC.Real.$w$s$cfromEnum_info:
	.quad	GHC.Real.$w$s$cfromEnum_entry
	.quad	0
	.quad	2211908157454
	.quad	8589934607
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.598012616 UTC

.section .text
.align 8
_c1w6w:
_c1w6w:
	cmpq $1,%rbx
	je _c1w6A
_c1w6z:
	movq 16(%rbp),%rax
	leaq block_c1w6G_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c1w6A:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1w6w, .-_c1w6w


==================== Asm code ====================
2018-03-16 15:56:18.59866698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w6w_info:
	.quad	_c1w6w
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.599299273 UTC

.section .text
.align 8
_c1w6G:
_c1w6G:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c1w6G, .-_c1w6G


==================== Asm code ====================
2018-03-16 15:56:18.599902482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w6G_info:
	.quad	_c1w6G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.604292272 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_closure
.type GHC.Real.$fEnumRatio_$s$cfromEnum_closure, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.605162719 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_entry
.type GHC.Real.$fEnumRatio_$s$cfromEnum_entry, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_entry:
_c1w77:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w7f
_c1w7g:
	leaq block_c1w74_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1w74
_c1w75:
	movq (%rbx),%rax
	jmp *(%rax)
_c1w7f:
	leaq GHC.Real.$fEnumRatio_$s$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$s$cfromEnum_entry, .-GHC.Real.$fEnumRatio_$s$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:18.605938627 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$cfromEnum_info
.type GHC.Real.$fEnumRatio_$s$cfromEnum_info, @object
GHC.Real.$fEnumRatio_$s$cfromEnum_info:
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1sVz_srt+1288


==================== Asm code ====================
2018-03-16 15:56:18.606612742 UTC

.section .text
.align 8
_c1w74:
_c1w74:
	leaq block_c1w7a_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cfromEnum_entry
	.size _c1w74, .-_c1w74


==================== Asm code ====================
2018-03-16 15:56:18.607209227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w74_info:
	.quad	_c1w74
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1288


==================== Asm code ====================
2018-03-16 15:56:18.607926107 UTC

.section .text
.align 8
_c1w7a:
_c1w7a:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1w7k
_c1w7j:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1w7k:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1w7a, .-_c1w7a


==================== Asm code ====================
2018-03-16 15:56:18.608595506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w7a_info:
	.quad	_c1w7a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.613936005 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cfromEnum_closure
.type GHC.Real.$fEnumRatio_$cfromEnum_closure, @object
GHC.Real.$fEnumRatio_$cfromEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:56:18.614737526 UTC

.section .text
.align 8
sat_s1sFl_entry:
_c1w7R:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w7S
_c1w7T:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1w7P_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-48,%rbp
	jmp GHC.Real.quotRem_entry
_c1w7S:
	jmp *-16(%r13)
	.size sat_s1sFl_entry, .-sat_s1sFl_entry


==================== Asm code ====================
2018-03-16 15:56:18.61540037 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFl_info:
	.quad	sat_s1sFl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.615978963 UTC

.section .text
.align 8
_c1w7P:
_c1w7P:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c1w7P, .-_c1w7P


==================== Asm code ====================
2018-03-16 15:56:18.616540906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w7P_info:
	.quad	_c1w7P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.61732733 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$cfromEnum_entry
.type GHC.Real.$fEnumRatio_$cfromEnum_entry, @object
GHC.Real.$fEnumRatio_$cfromEnum_entry:
_c1w7X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w87
_c1w88:
	leaq block_c1w7G_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1w7G
_c1w7H:
	movq (%rbx),%rax
	jmp *(%rax)
_c1w87:
	leaq GHC.Real.$fEnumRatio_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$cfromEnum_entry, .-GHC.Real.$fEnumRatio_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:56:18.617984666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$cfromEnum_info
.type GHC.Real.$fEnumRatio_$cfromEnum_info, @object
GHC.Real.$fEnumRatio_$cfromEnum_info:
	.quad	GHC.Real.$fEnumRatio_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.618802037 UTC

.section .text
.align 8
_c1w7G:
_c1w7G:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1w8b
_c1w8a:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s1sFl_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1w7Y_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -32(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.toInteger_entry
_c1w8b:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1w7G, .-_c1w7G


==================== Asm code ====================
2018-03-16 15:56:18.619532065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w7G_info:
	.quad	_c1w7G
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.620147787 UTC

.section .text
.align 8
_c1w7Y:
_c1w7Y:
	leaq block_c1w82_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c1w7Y, .-_c1w7Y


==================== Asm code ====================
2018-03-16 15:56:18.620727674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w7Y_info:
	.quad	_c1w7Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.621444753 UTC

.section .text
.align 8
_c1w82:
_c1w82:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1w8f
_c1w8e:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1w8f:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1w82, .-_c1w82


==================== Asm code ====================
2018-03-16 15:56:18.622092695 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w82_info:
	.quad	_c1w82
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.623748244 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.ratioPrec1_closure
.type GHC.Real.ratioPrec1_closure, @object
GHC.Real.ratioPrec1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	8


==================== Asm code ====================
2018-03-16 15:56:18.625454411 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Real.$fShowRatio2_bytes
.type GHC.Real.$fShowRatio2_bytes, @object
GHC.Real.$fShowRatio2_bytes:
	.asciz " % "


==================== Asm code ====================
2018-03-16 15:56:18.635939895 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cshowsPrec_closure
.type GHC.Real.$w$s$cshowsPrec_closure, @object
GHC.Real.$w$s$cshowsPrec_closure:
	.quad	GHC.Real.$w$s$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.636736287 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshowsPrec_slow
.type GHC.Real.$w$s$cshowsPrec_slow, @object
GHC.Real.$w$s$cshowsPrec_slow:
_c1w8T:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size GHC.Real.$w$s$cshowsPrec_slow, .-GHC.Real.$w$s$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:18.637837145 UTC

.section .text
.align 8
sat_s1sFw_entry:
_c1w9b:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w9c
_c1w9d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1w98_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_c1w9c:
	jmp *-16(%r13)
	.size sat_s1sFw_entry, .-sat_s1sFw_entry


==================== Asm code ====================
2018-03-16 15:56:18.638549331 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFw_info:
	.quad	sat_s1sFw_entry
	.quad	2
	.quad	4294967314
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.639225317 UTC

.section .text
.align 8
_c1w98:
_c1w98:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1w9g
_c1w9f:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1w9g:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1w98, .-_c1w98


==================== Asm code ====================
2018-03-16 15:56:18.639863698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w98_info:
	.quad	_c1w98
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.640657683 UTC

.section .text
.align 8
sat_s1sFx_entry:
_c1w9h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w9i
_c1w9j:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1w9l
_c1w9k:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1sFw_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1w9l:
	movq $32,904(%r13)
_c1w9i:
	jmp *-16(%r13)
	.size sat_s1sFx_entry, .-sat_s1sFx_entry


==================== Asm code ====================
2018-03-16 15:56:18.641426789 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFx_info:
	.quad	sat_s1sFx_entry
	.quad	2
	.quad	4294967314
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.642302098 UTC

.section .text
.align 8
sat_s1sFC_entry:
_c1w9D:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w9E
_c1w9F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1w9H
_c1w9G:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1w9A_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq -14(%r12),%rdi
	movq %rax,%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_c1w9H:
	movq $24,904(%r13)
_c1w9E:
	jmp *-16(%r13)
	.size sat_s1sFC_entry, .-sat_s1sFC_entry


==================== Asm code ====================
2018-03-16 15:56:18.643027045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFC_info:
	.quad	sat_s1sFC_entry
	.quad	2
	.quad	4294967314
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.643761943 UTC

.section .text
.align 8
_c1w9A:
_c1w9A:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1w9K
_c1w9J:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1w9K:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1w9A, .-_c1w9A


==================== Asm code ====================
2018-03-16 15:56:18.644425813 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w9A_info:
	.quad	_c1w9A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.645233199 UTC

.section .text
.align 8
sat_s1sFD_entry:
_c1w9L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w9M
_c1w9N:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1w9P
_c1w9O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1sFC_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1w9P:
	movq $32,904(%r13)
_c1w9M:
	jmp *-16(%r13)
	.size sat_s1sFD_entry, .-sat_s1sFD_entry


==================== Asm code ====================
2018-03-16 15:56:18.646015832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFD_info:
	.quad	sat_s1sFD_entry
	.quad	2
	.quad	4294967314
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.646811501 UTC

.section .text
.align 8
sat_s1sFH_entry:
_c1w9T:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1w9U
_c1w9V:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1w9X
_c1w9W:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1sFD_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c1w9Q_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_c1w9X:
	movq $32,904(%r13)
_c1w9U:
	jmp *-16(%r13)
	.size sat_s1sFH_entry, .-sat_s1sFH_entry


==================== Asm code ====================
2018-03-16 15:56:18.647507553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sFH_info:
	.quad	sat_s1sFH_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.648224948 UTC

.section .text
.align 8
_c1w9Q:
_c1w9Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wa0
_c1w9Z:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wa0:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1w9Q, .-_c1w9Q


==================== Asm code ====================
2018-03-16 15:56:18.648891315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1w9Q_info:
	.quad	_c1w9Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.650069903 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshowsPrec_entry
.type GHC.Real.$w$s$cshowsPrec_entry, @object
GHC.Real.$w$s$cshowsPrec_entry:
_c1wa4:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1wa8
_c1wa7:
	cmpq $7,%r14
	jle _c1wa2
_c1wa3:
	leaq sat_s1sFH_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -32(%r12),%r14
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wa8:
	movq $40,904(%r13)
	leaq GHC.Real.$w$s$cshowsPrec_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c1wa2:
	leaq sat_s1sFx_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	leaq -32(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movl $8,%r14d
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
	.size GHC.Real.$w$s$cshowsPrec_entry, .-GHC.Real.$w$s$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:18.650844058 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cshowsPrec_info
.type GHC.Real.$w$s$cshowsPrec_info, @object
GHC.Real.$w$s$cshowsPrec_info:
	.quad	GHC.Real.$w$s$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	17179869184
	.quad	S1sVz_srt+1304
	.quad	68
	.quad	GHC.Real.$w$s$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:18.65511569 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_closure
.type GHC.Real.$fShowRatio_$s$cshowsPrec_closure, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.655964245 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_entry
.type GHC.Real.$fShowRatio_$s$cshowsPrec_entry, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_entry:
_c1wbb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wbm
_c1wbn:
	leaq block_c1wb8_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1wb8
_c1wb9:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wbm:
	leaq GHC.Real.$fShowRatio_$s$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$s$cshowsPrec_entry, .-GHC.Real.$fShowRatio_$s$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:18.656720474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowsPrec_info
.type GHC.Real.$fShowRatio_$s$cshowsPrec_info, @object
GHC.Real.$fShowRatio_$s$cshowsPrec_info:
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1312


==================== Asm code ====================
2018-03-16 15:56:18.657615992 UTC

.section .text
.align 8
_c1wb8:
_c1wb8:
	leaq block_c1wbe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1wbe
_c1wbf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wb8, .-_c1wb8


==================== Asm code ====================
2018-03-16 15:56:18.658227852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wb8_info:
	.quad	_c1wb8
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1312


==================== Asm code ====================
2018-03-16 15:56:18.658856772 UTC

.section .text
.align 8
_c1wbe:
_c1wbe:
	movq 16(%rbp),%rax
	leaq block_c1wbj_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size _c1wbe, .-_c1wbe


==================== Asm code ====================
2018-03-16 15:56:18.659479989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wbe_info:
	.quad	_c1wbe
	.quad	66
	.quad	4294967326
	.quad	S1sVz_srt+1312


==================== Asm code ====================
2018-03-16 15:56:18.660209104 UTC

.section .text
.align 8
_c1wbj:
_c1wbj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wbs
_c1wbr:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wbs:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wbj, .-_c1wbj


==================== Asm code ====================
2018-03-16 15:56:18.660843657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wbj_info:
	.quad	_c1wbj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.671348251 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cshowsPrec_closure
.type GHC.Real.$w$cshowsPrec_closure, @object
GHC.Real.$w$cshowsPrec_closure:
	.quad	GHC.Real.$w$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:56:18.672117091 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshowsPrec_slow
.type GHC.Real.$w$cshowsPrec_slow, @object
GHC.Real.$w$cshowsPrec_slow:
_c1wbR:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size GHC.Real.$w$cshowsPrec_slow, .-GHC.Real.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:18.672897386 UTC

.section .text
.align 8
f_s1sFX_entry:
_c1wbZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wc0
_c1wc1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Real.ratioPrec1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c1wc0:
	jmp *-16(%r13)
	.size f_s1sFX_entry, .-f_s1sFX_entry


==================== Asm code ====================
2018-03-16 15:56:18.673870745 UTC

.section .data.rel.ro
.align 8
.align 1
f_s1sFX_info:
	.quad	f_s1sFX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.674591185 UTC

.section .text
.align 8
g1_s1sFY_entry:
_c1wc6:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wc7
_c1wc8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq GHC.Real.ratioPrec1_closure+1(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c1wc7:
	jmp *-16(%r13)
	.size g1_s1sFY_entry, .-g1_s1sFY_entry


==================== Asm code ====================
2018-03-16 15:56:18.675258386 UTC

.section .data.rel.ro
.align 8
.align 1
g1_s1sFY_info:
	.quad	g1_s1sFY_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.676089631 UTC

.section .text
.align 8
sat_s1sG2_entry:
_c1wcm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wcn
_c1wco:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wcq
_c1wcp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1wcq:
	movq $32,904(%r13)
_c1wcn:
	jmp *-16(%r13)
	.size sat_s1sG2_entry, .-sat_s1sG2_entry


==================== Asm code ====================
2018-03-16 15:56:18.676807228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG2_info:
	.quad	sat_s1sG2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.677550844 UTC

.section .text
.align 8
sat_s1sG3_entry:
_c1wcr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wcv
_c1wcu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s1sG2_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c1wcv:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s1sG3_entry, .-sat_s1sG3_entry


==================== Asm code ====================
2018-03-16 15:56:18.678199008 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG3_info:
	.quad	sat_s1sG3_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.678958291 UTC

.section .text
.align 8
sat_s1sG6_entry:
_c1wcP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wcQ
_c1wcR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wcT
_c1wcS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c1wcT:
	movq $24,904(%r13)
_c1wcQ:
	jmp *-16(%r13)
	.size sat_s1sG6_entry, .-sat_s1sG6_entry


==================== Asm code ====================
2018-03-16 15:56:18.679661705 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG6_info:
	.quad	sat_s1sG6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.68042544 UTC

.section .text
.align 8
sat_s1sG7_entry:
_c1wcU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wcV
_c1wcW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wcY
_c1wcX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1sG6_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1wcY:
	movq $32,904(%r13)
_c1wcV:
	jmp *-16(%r13)
	.size sat_s1sG7_entry, .-sat_s1sG7_entry


==================== Asm code ====================
2018-03-16 15:56:18.681130483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG7_info:
	.quad	sat_s1sG7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.682018763 UTC

.section .text
.align 8
sat_s1sG8_entry:
_c1wcZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wd0
_c1wd1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wd3
_c1wd2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1sG7_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c1wd3:
	movq $32,904(%r13)
_c1wd0:
	jmp *-16(%r13)
	.size sat_s1sG8_entry, .-sat_s1sG8_entry


==================== Asm code ====================
2018-03-16 15:56:18.682759455 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG8_info:
	.quad	sat_s1sG8_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:18.683534964 UTC

.section .text
.align 8
sat_s1sG9_entry:
_c1wd5:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1wd9
_c1wd8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s1sG8_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wd9:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s1sG9_entry, .-sat_s1sG9_entry


==================== Asm code ====================
2018-03-16 15:56:18.684258008 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sG9_info:
	.quad	sat_s1sG9_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.685060192 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshowsPrec_entry
.type GHC.Real.$w$cshowsPrec_entry, @object
GHC.Real.$w$cshowsPrec_entry:
_c1wdd:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c1wdh
_c1wdg:
	leaq f_s1sFX_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rdi,-56(%r12)
	leaq g1_s1sFY_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %r8,-24(%r12)
	leaq -80(%r12),%rax
	leaq -48(%r12),%rbx
	cmpq $7,%rsi
	jle _c1wdb
_c1wdc:
	leaq sat_s1sG9_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wdh:
	movq $88,904(%r13)
	leaq GHC.Real.$w$cshowsPrec_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c1wdb:
	leaq sat_s1sG3_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.$w$cshowsPrec_entry, .-GHC.Real.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:18.68591257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cshowsPrec_info
.type GHC.Real.$w$cshowsPrec_info, @object
GHC.Real.$w$cshowsPrec_info:
	.quad	GHC.Real.$w$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	17179869184
	.quad	0
	.quad	132
	.quad	GHC.Real.$w$cshowsPrec_slow


==================== Asm code ====================
2018-03-16 15:56:18.689727047 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowsPrec_closure
.type GHC.Real.$fShowRatio_$cshowsPrec_closure, @object
GHC.Real.$fShowRatio_$cshowsPrec_closure:
	.quad	GHC.Real.$fShowRatio_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 15:56:18.690583109 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshowsPrec_entry
.type GHC.Real.$fShowRatio_$cshowsPrec_entry, @object
GHC.Real.$fShowRatio_$cshowsPrec_entry:
_c1wes:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wew
_c1wex:
	leaq block_c1wep_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1wep
_c1weq:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wew:
	leaq GHC.Real.$fShowRatio_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshowsPrec_entry, .-GHC.Real.$fShowRatio_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:56:18.691256649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowsPrec_info
.type GHC.Real.$fShowRatio_$cshowsPrec_info, @object
GHC.Real.$fShowRatio_$cshowsPrec_info:
	.quad	GHC.Real.$fShowRatio_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:18.691994505 UTC

.section .text
.align 8
_c1wep:
_c1wep:
	leaq block_c1wev_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c1wev
_c1wez:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wep, .-_c1wep


==================== Asm code ====================
2018-03-16 15:56:18.69258505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wep_info:
	.quad	_c1wep
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.693218478 UTC

.section .text
.align 8
_c1wev:
_c1wev:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size _c1wev, .-_c1wev


==================== Asm code ====================
2018-03-16 15:56:18.693882918 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wev_info:
	.quad	_c1wev
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.697786427 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio1_closure
.type GHC.Real.$fShowRatio1_closure, @object
GHC.Real.$fShowRatio1_closure:
	.quad	GHC.Real.$fShowRatio1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.698590466 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio1_entry
.type GHC.Real.$fShowRatio1_entry, @object
GHC.Real.$fShowRatio1_entry:
_c1wf2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wf8
_c1wf9:
	leaq block_c1weZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1weZ
_c1wf0:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wf8:
	leaq GHC.Real.$fShowRatio1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio1_entry, .-GHC.Real.$fShowRatio1_entry


==================== Asm code ====================
2018-03-16 15:56:18.699312275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio1_info
.type GHC.Real.$fShowRatio1_info, @object
GHC.Real.$fShowRatio1_info:
	.quad	GHC.Real.$fShowRatio1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+1312


==================== Asm code ====================
2018-03-16 15:56:18.700500335 UTC

.section .text
.align 8
_c1weZ:
_c1weZ:
	movq 8(%rbp),%rax
	leaq block_c1wf5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Real.$w$s$cshowsPrec_entry
	.size _c1weZ, .-_c1weZ


==================== Asm code ====================
2018-03-16 15:56:18.701201682 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1weZ_info:
	.quad	_c1weZ
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1312


==================== Asm code ====================
2018-03-16 15:56:18.702005322 UTC

.section .text
.align 8
_c1wf5:
_c1wf5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wfd
_c1wfc:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wfd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wf5, .-_c1wf5


==================== Asm code ====================
2018-03-16 15:56:18.702622793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wf5_info:
	.quad	_c1wf5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.704918869 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowList_closure
.type GHC.Real.$fShowRatio_$s$cshowList_closure, @object
GHC.Real.$fShowRatio_$s$cshowList_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.705659718 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshowList_entry
.type GHC.Real.$fShowRatio_$s$cshowList_entry, @object
GHC.Real.$fShowRatio_$s$cshowList_entry:
_c1wfz:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Real.$fShowRatio1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Real.$fShowRatio_$s$cshowList_entry, .-GHC.Real.$fShowRatio_$s$cshowList_entry


==================== Asm code ====================
2018-03-16 15:56:18.706251796 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshowList_info
.type GHC.Real.$fShowRatio_$s$cshowList_info, @object
GHC.Real.$fShowRatio_$s$cshowList_info:
	.quad	GHC.Real.$fShowRatio_$s$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S1sVz_srt+1328


==================== Asm code ====================
2018-03-16 15:56:18.709909657 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowList_closure
.type GHC.Real.$fShowRatio_$cshowList_closure, @object
GHC.Real.$fShowRatio_$cshowList_closure:
	.quad	GHC.Real.$fShowRatio_$cshowList_info


==================== Asm code ====================
2018-03-16 15:56:18.710700924 UTC

.section .text
.align 8
sat_s1sGz_entry:
_c1wfS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wfT
_c1wfU:
	leaq block_c1wfP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wfP
_c1wfQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wfT:
	jmp *-8(%r13)
	.size sat_s1sGz_entry, .-sat_s1sGz_entry


==================== Asm code ====================
2018-03-16 15:56:18.711363152 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGz_info:
	.quad	sat_s1sGz_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.71200586 UTC

.section .text
.align 8
_c1wfP:
_c1wfP:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cshowsPrec_entry
	.size _c1wfP, .-_c1wfP


==================== Asm code ====================
2018-03-16 15:56:18.712561615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wfP_info:
	.quad	_c1wfP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.713719115 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshowList_entry
.type GHC.Real.$fShowRatio_$cshowList_entry, @object
GHC.Real.$fShowRatio_$cshowList_entry:
_c1wfZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wg3
_c1wg2:
	leaq sat_s1sGz_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
_c1wg3:
	movq $16,904(%r13)
	leaq GHC.Real.$fShowRatio_$cshowList_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshowList_entry, .-GHC.Real.$fShowRatio_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:56:18.714381053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshowList_info
.type GHC.Real.$fShowRatio_$cshowList_info, @object
GHC.Real.$fShowRatio_$cshowList_info:
	.quad	GHC.Real.$fShowRatio_$cshowList_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:18.719004953 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$s$cshow_closure
.type GHC.Real.$w$s$cshow_closure, @object
GHC.Real.$w$s$cshow_closure:
	.quad	GHC.Real.$w$s$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.71986927 UTC

.section .text
.align 8
sat_s1sGF_entry:
_c1wgx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wgy
_c1wgz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1wgu_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	movl $8,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_c1wgy:
	jmp *-16(%r13)
	.size sat_s1sGF_entry, .-sat_s1sGF_entry


==================== Asm code ====================
2018-03-16 15:56:18.720533099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGF_info:
	.quad	sat_s1sGF_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.721319243 UTC

.section .text
.align 8
_c1wgu:
_c1wgu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wgC
_c1wgB:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wgC:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wgu, .-_c1wgu


==================== Asm code ====================
2018-03-16 15:56:18.721982116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wgu_info:
	.quad	_c1wgu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.722742544 UTC

.section .text
.align 8
sat_s1sGG_entry:
_c1wgD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wgE
_c1wgF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wgH
_c1wgG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s1sGF_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1wgH:
	movq $24,904(%r13)
_c1wgE:
	jmp *-16(%r13)
	.size sat_s1sGG_entry, .-sat_s1sGG_entry


==================== Asm code ====================
2018-03-16 15:56:18.723454418 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGG_info:
	.quad	sat_s1sGG_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.724217657 UTC

.section .text
.align 8
.globl GHC.Real.$w$s$cshow_entry
.type GHC.Real.$w$s$cshow_entry, @object
GHC.Real.$w$s$cshow_entry:
_c1wgI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wgM
_c1wgL:
	leaq sat_s1sGG_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,(%r12)
	leaq -16(%r12),%rdi
	movq %r14,%rsi
	movl $8,%r14d
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_c1wgM:
	movq $24,904(%r13)
	leaq GHC.Real.$w$s$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$s$cshow_entry, .-GHC.Real.$w$s$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:18.72507656 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$s$cshow_info
.type GHC.Real.$w$s$cshow_info, @object
GHC.Real.$w$s$cshow_info:
	.quad	GHC.Real.$w$s$cshow_entry
	.quad	0
	.quad	73014444046
	.quad	8589934607
	.quad	S1sVz_srt+1304


==================== Asm code ====================
2018-03-16 15:56:18.729023796 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshow_closure
.type GHC.Real.$fShowRatio_$s$cshow_closure, @object
GHC.Real.$fShowRatio_$s$cshow_closure:
	.quad	GHC.Real.$fShowRatio_$s$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.729946551 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$s$cshow_entry
.type GHC.Real.$fShowRatio_$s$cshow_entry, @object
GHC.Real.$fShowRatio_$s$cshow_entry:
_c1whh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1whn
_c1who:
	leaq block_c1whe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c1whe
_c1whf:
	movq (%rbx),%rax
	jmp *(%rax)
_c1whn:
	leaq GHC.Real.$fShowRatio_$s$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$s$cshow_entry, .-GHC.Real.$fShowRatio_$s$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:18.730614318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$cshow_info
.type GHC.Real.$fShowRatio_$s$cshow_info, @object
GHC.Real.$fShowRatio_$s$cshow_info:
	.quad	GHC.Real.$fShowRatio_$s$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S1sVz_srt+1336


==================== Asm code ====================
2018-03-16 15:56:18.731324155 UTC

.section .text
.align 8
_c1whe:
_c1whe:
	leaq block_c1whk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$w$s$cshow_entry
	.size _c1whe, .-_c1whe


==================== Asm code ====================
2018-03-16 15:56:18.73246735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1whe_info:
	.quad	_c1whe
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1336


==================== Asm code ====================
2018-03-16 15:56:18.733470053 UTC

.section .text
.align 8
_c1whk:
_c1whk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1whs
_c1whr:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1whs:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1whk, .-_c1whk


==================== Asm code ====================
2018-03-16 15:56:18.734190643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1whk_info:
	.quad	_c1whk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.738520023 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$cshow_closure
.type GHC.Real.$w$cshow_closure, @object
GHC.Real.$w$cshow_closure:
	.quad	GHC.Real.$w$cshow_info


==================== Asm code ====================
2018-03-16 15:56:18.739382802 UTC

.section .text
.align 8
sat_s1sGR_entry:
_c1whW:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c1whX
_c1whY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	leaq GHC.Real.ratioPrec1_closure+1(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c1whX:
	jmp *-16(%r13)
	.size sat_s1sGR_entry, .-sat_s1sGR_entry


==================== Asm code ====================
2018-03-16 15:56:18.740032554 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGR_info:
	.quad	sat_s1sGR_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.740881593 UTC

.section .text
.align 8
sat_s1sGS_entry:
_c1whZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wi0
_c1wi1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wi3
_c1wi2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s1sGR_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.Real.$fShowRatio2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c1wi3:
	movq $32,904(%r13)
_c1wi0:
	jmp *-16(%r13)
	.size sat_s1sGS_entry, .-sat_s1sGS_entry


==================== Asm code ====================
2018-03-16 15:56:18.742011243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGS_info:
	.quad	sat_s1sGS_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:18.742821515 UTC

.section .text
.align 8
.globl GHC.Real.$w$cshow_entry
.type GHC.Real.$w$cshow_entry, @object
GHC.Real.$w$cshow_entry:
_c1wi4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wi5
_c1wi6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wi8
_c1wi7:
	leaq sat_s1sGS_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.ratioPrec1_closure+1(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Show.showsPrec_entry@gotpcrel(%rip)
_c1wi8:
	movq $32,904(%r13)
_c1wi5:
	leaq GHC.Real.$w$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$cshow_entry, .-GHC.Real.$w$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:18.743523309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$cshow_info
.type GHC.Real.$w$cshow_info, @object
GHC.Real.$w$cshow_info:
	.quad	GHC.Real.$w$cshow_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:18.746487328 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshow_closure
.type GHC.Real.$fShowRatio_$cshow_closure, @object
GHC.Real.$fShowRatio_$cshow_closure:
	.quad	GHC.Real.$fShowRatio_$cshow_info


==================== Asm code ====================
2018-03-16 15:56:18.747223911 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_$cshow_entry
.type GHC.Real.$fShowRatio_$cshow_entry, @object
GHC.Real.$fShowRatio_$cshow_entry:
_c1wiF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wiG
_c1wiH:
	leaq block_c1wiC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wiC
_c1wiD:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wiG:
	leaq GHC.Real.$fShowRatio_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_$cshow_entry, .-GHC.Real.$fShowRatio_$cshow_entry


==================== Asm code ====================
2018-03-16 15:56:18.747881344 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$cshow_info
.type GHC.Real.$fShowRatio_$cshow_info, @object
GHC.Real.$fShowRatio_$cshow_info:
	.quad	GHC.Real.$fShowRatio_$cshow_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.748455393 UTC

.section .text
.align 8
_c1wiC:
_c1wiC:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w$cshow_entry
	.size _c1wiC, .-_c1wiC


==================== Asm code ====================
2018-03-16 15:56:18.749046417 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wiC_info:
	.quad	_c1wiC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.75076446 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_$s$fShowRatio_closure
.type GHC.Real.$fShowRatio_$s$fShowRatio_closure, @object
GHC.Real.$fShowRatio_$s$fShowRatio_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_closure+3
	.quad	GHC.Real.$fShowRatio_$s$cshow_closure+1
	.quad	GHC.Real.$fShowRatio_$s$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.755000862 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fShowRatio_closure
.type GHC.Real.$fShowRatio_closure, @object
GHC.Real.$fShowRatio_closure:
	.quad	GHC.Real.$fShowRatio_info


==================== Asm code ====================
2018-03-16 15:56:18.755682719 UTC

.section .text
.align 8
sat_s1sH1_entry:
_c1wj6:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshowList_entry
	.size sat_s1sH1_entry, .-sat_s1sH1_entry


==================== Asm code ====================
2018-03-16 15:56:18.756229526 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sH1_info:
	.quad	sat_s1sH1_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.756850437 UTC

.section .text
.align 8
sat_s1sH0_entry:
_c1wje:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshow_entry
	.size sat_s1sH0_entry, .-sat_s1sH0_entry


==================== Asm code ====================
2018-03-16 15:56:18.757467552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sH0_info:
	.quad	sat_s1sH0_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.758061613 UTC

.section .text
.align 8
sat_s1sGZ_entry:
_c1wjm:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Real.$fShowRatio_$cshowsPrec_entry
	.size sat_s1sGZ_entry, .-sat_s1sGZ_entry


==================== Asm code ====================
2018-03-16 15:56:18.758611515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sGZ_info:
	.quad	sat_s1sGZ_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.759445184 UTC

.section .text
.align 8
.globl GHC.Real.$fShowRatio_entry
.type GHC.Real.$fShowRatio_entry, @object
GHC.Real.$fShowRatio_entry:
_c1wjq:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1wju
_c1wjt:
	leaq sat_s1sH1_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_s1sH0_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s1sGZ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.Show.C:Show_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wju:
	movq $80,904(%r13)
	leaq GHC.Real.$fShowRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fShowRatio_entry, .-GHC.Real.$fShowRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.7602022 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fShowRatio_info
.type GHC.Real.$fShowRatio_info, @object
GHC.Real.$fShowRatio_info:
	.quad	GHC.Real.$fShowRatio_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.764778988 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$slcm_closure
.type GHC.Real.$w$slcm_closure, @object
GHC.Real.$w$slcm_closure:
	.quad	GHC.Real.$w$slcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.766071298 UTC

.section .data.rel.ro
.align 8
.align 1
u1wkv_srtd:
	.quad	S1sVz_srt+856
	.quad	64
	.quad	-4611650834055299071


==================== Asm code ====================
2018-03-16 15:56:18.767004341 UTC

.section .text
.align 8
.globl GHC.Real.$w$slcm_entry
.type GHC.Real.$w$slcm_entry, @object
GHC.Real.$w$slcm_entry:
_c1wjY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wjZ
_c1wk0:
	testq %rsi,%rsi
	je _c1wjX
_c1wjW:
	leaq block_c1wk2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wk2
_c1wk3:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wjZ:
	leaq GHC.Real.$w$slcm_closure(%rip),%rbx
	jmp *-8(%r13)
_c1wjX:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.$w$slcm_entry, .-GHC.Real.$w$slcm_entry


==================== Asm code ====================
2018-03-16 15:56:18.7677007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$slcm_info
.type GHC.Real.$w$slcm_info, @object
GHC.Real.$w$slcm_info:
	.quad	GHC.Real.$w$slcm_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u1wkv_srtd


==================== Asm code ====================
2018-03-16 15:56:18.768261175 UTC

.section .data.rel.ro
.align 8
.align 1
u1wkw_srtd:
	.quad	S1sVz_srt+856
	.quad	63
	.quad	4611721202799476737


==================== Asm code ====================
2018-03-16 15:56:18.769043072 UTC

.section .text
.align 8
_c1wk2:
_c1wk2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wk9
_c1wk8:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _c1wkt
_c1wkf:
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_c1wkd_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	leaq -7(%r12),%rdi
	movq %rbx,%rsi
	leaq GHC.Real.$fIntegralWord_closure+1(%rip),%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.gcd_entry
_c1wkt:
	addq $-16,%r12
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wk9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wk2, .-_c1wk2


==================== Asm code ====================
2018-03-16 15:56:18.76977944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wk2_info:
	.quad	_c1wk2
	.quad	65
	.quad	-4294967266
	.quad	u1wkw_srtd


==================== Asm code ====================
2018-03-16 15:56:18.770489558 UTC

.section .text
.align 8
_c1wkd:
_c1wkd:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c1wkr
_c1wks:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wkr:
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	movq %rax,%rbx
	imulq 16(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wkd, .-_c1wkd


==================== Asm code ====================
2018-03-16 15:56:18.771099353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wkd_info:
	.quad	_c1wkd
	.quad	194
	.quad	4294967326
	.quad	S1sVz_srt+1216


==================== Asm code ====================
2018-03-16 15:56:18.774732742 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_$slcm_closure
.type GHC.Real.lcm_$slcm_closure, @object
GHC.Real.lcm_$slcm_closure:
	.quad	GHC.Real.lcm_$slcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.775564929 UTC

.section .text
.align 8
.globl GHC.Real.lcm_$slcm_entry
.type GHC.Real.lcm_$slcm_entry, @object
GHC.Real.lcm_$slcm_entry:
_c1wl0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wl8
_c1wl9:
	leaq block_c1wkX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wkX
_c1wkY:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wl8:
	leaq GHC.Real.lcm_$slcm_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.lcm_$slcm_entry, .-GHC.Real.lcm_$slcm_entry


==================== Asm code ====================
2018-03-16 15:56:18.776241861 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_$slcm_info
.type GHC.Real.lcm_$slcm_info, @object
GHC.Real.lcm_$slcm_info:
	.quad	GHC.Real.lcm_$slcm_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1360


==================== Asm code ====================
2018-03-16 15:56:18.776923081 UTC

.section .text
.align 8
_c1wkX:
_c1wkX:
	movq 8(%rbp),%rax
	leaq block_c1wl3_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$slcm_entry
	.size _c1wkX, .-_c1wkX


==================== Asm code ====================
2018-03-16 15:56:18.777551737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wkX_info:
	.quad	_c1wkX
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1360


==================== Asm code ====================
2018-03-16 15:56:18.778292771 UTC

.section .text
.align 8
_c1wl3:
_c1wl3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wld
_c1wlc:
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wld:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1wl3, .-_c1wl3


==================== Asm code ====================
2018-03-16 15:56:18.778926822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wl3_info:
	.quad	_c1wl3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.786750671 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$slcm1_closure
.type GHC.Real.$w$slcm1_closure, @object
GHC.Real.$w$slcm1_closure:
	.quad	GHC.Real.$w$slcm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.787658872 UTC

.section .text
.align 8
sat_s1sHt_entry:
_c1wlW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wm0
_c1wlZ:
	movq 24(%rbx),%rax
	testq %rax,%rax
	jl _c1wlU
_c1wlV:
	movq 16(%rbx),%rax
	addq $-16,%r12
	movq %rax,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c1wm0:
	movq $16,904(%r13)
	jmp *-16(%r13)
_c1wlU:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s1sHt_entry, .-sat_s1sHt_entry


==================== Asm code ====================
2018-03-16 15:56:18.788281596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sHt_info:
	.quad	sat_s1sHt_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:56:18.788860554 UTC

.section .data.rel.ro
.align 8
.align 1
u1wni_srtd:
	.quad	S1sVz_srt+344
	.quad	130
	.quad	17
	.quad	35184372088832
	.quad	2


==================== Asm code ====================
2018-03-16 15:56:18.789702744 UTC

.section .text
.align 8
.globl GHC.Real.$w$slcm1_entry
.type GHC.Real.$w$slcm1_entry, @object
GHC.Real.$w$slcm1_entry:
_c1wm9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wma
_c1wmb:
	testq %rsi,%rsi
	je _c1wm8
_c1wm7:
	leaq block_c1wlB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wlB
_c1wlC:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wma:
	leaq GHC.Real.$w$slcm1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$slcm1_entry, .-GHC.Real.$w$slcm1_entry


==================== Asm code ====================
2018-03-16 15:56:18.790386471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$slcm1_info
.type GHC.Real.$w$slcm1_info, @object
GHC.Real.$w$slcm1_info:
	.quad	GHC.Real.$w$slcm1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u1wni_srtd


==================== Asm code ====================
2018-03-16 15:56:18.790967692 UTC

.section .data.rel.ro
.align 8
.align 1
u1wnj_srtd:
	.quad	S1sVz_srt+344
	.quad	110
	.quad	17
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:18.791758727 UTC

.section .text
.align 8
_c1wlB:
_c1wlB:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _u1wn8
_c1wn3:
	movq 8(%rbp),%rcx
	testq %rcx,%rcx
	jl _c1wn0
_c1wn1:
	movq %rbx,(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-16,%rbp
	jmp _c1wlL
_u1wn8:
	addq $16,%rbp
	jmp _c1wm8
_c1wn0:
	movq %rax,-16(%rbp)
	negq %rcx
	movq %rcx,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c1wlL
	.size _c1wlB, .-_c1wlB


==================== Asm code ====================
2018-03-16 15:56:18.792410116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wlB_info:
	.quad	_c1wlB
	.quad	65
	.quad	-4294967266
	.quad	u1wnj_srtd


==================== Asm code ====================
2018-03-16 15:56:18.79303221 UTC

.section .text
.align 8
_c1wm8:
_c1wm8:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wm8, .-_c1wm8


==================== Asm code ====================
2018-03-16 15:56:18.79391631 UTC

.section .text
.align 8
_c1wlL:
_c1wlL:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c1wmg
_c1wmf:
	leaq sat_s1sHt_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_c1wmd_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	leaq -24(%r12),%r14
	addq $-8,%rbp
	jmp GHC.Real.$wgcd'_entry
_c1wmg:
	movq $32,904(%r13)
	leaq block_c1wlK_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1wlL, .-_c1wlL


==================== Asm code ====================
2018-03-16 15:56:18.794619563 UTC

.section .data.rel.ro
.align 8
.align 1
u1wnk_srtd:
	.quad	S1sVz_srt+344
	.quad	110
	.quad	17
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:18.795268178 UTC

.section .text
.align 8
_c1wlK:
_c1wlK:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _c1wlL
	.size _c1wlK, .-_c1wlK


==================== Asm code ====================
2018-03-16 15:56:18.795842979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wlK_info:
	.quad	_c1wlK
	.quad	708
	.quad	-4294967266
	.quad	u1wnk_srtd


==================== Asm code ====================
2018-03-16 15:56:18.796424988 UTC

.section .data.rel.ro
.align 8
.align 1
u1wnl_srtd:
	.quad	S1sVz_srt+344
	.quad	110
	.quad	1
	.quad	35184372088832


==================== Asm code ====================
2018-03-16 15:56:18.798233526 UTC

.section .text
.align 8
_c1wmd:
_c1wmd:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _u1wn7
_c1wmV:
	movq $-9223372036854775808,%rbx
	cmpq %rbx,%rcx
	je _c1wmU
_c1wmT:
	movq $-1,%rbx
	movq %rax,%rdx
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rbx
	imulq %rcx,%rax
	testq %rax,%rax
	jl _c1wmQ
_c1wmR:
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u1wn7:
	testq %rbx,%rbx
	jne _c1wmB
_c1wmW:
	leaq GHC.Real.divZeroError_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wmU:
	leaq GHC.Real.overflowError_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wmQ:
	movq %rax,%rbx
	negq %rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wmB:
	movq %rax,%rdx
	movq %rcx,%rax
	movq %rdx,%rcx
	cqto
	idivq %rbx
	imulq %rcx,%rax
	testq %rax,%rax
	jl _c1wmy
_c1wmz:
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wmy:
	movq %rax,%rbx
	negq %rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wmd, .-_c1wmd


==================== Asm code ====================
2018-03-16 15:56:18.799092298 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wmd_info:
	.quad	_c1wmd
	.quad	964
	.quad	-4294967266
	.quad	u1wnl_srtd


==================== Asm code ====================
2018-03-16 15:56:18.802874621 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_$slcm1_closure
.type GHC.Real.lcm_$slcm1_closure, @object
GHC.Real.lcm_$slcm1_closure:
	.quad	GHC.Real.lcm_$slcm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.803682192 UTC

.section .text
.align 8
.globl GHC.Real.lcm_$slcm1_entry
.type GHC.Real.lcm_$slcm1_entry, @object
GHC.Real.lcm_$slcm1_entry:
_c1woe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wom
_c1won:
	leaq block_c1wob_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wob
_c1woc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wom:
	leaq GHC.Real.lcm_$slcm1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.lcm_$slcm1_entry, .-GHC.Real.lcm_$slcm1_entry


==================== Asm code ====================
2018-03-16 15:56:18.804360543 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_$slcm1_info
.type GHC.Real.lcm_$slcm1_info, @object
GHC.Real.lcm_$slcm1_info:
	.quad	GHC.Real.lcm_$slcm1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1376


==================== Asm code ====================
2018-03-16 15:56:18.805026233 UTC

.section .text
.align 8
_c1wob:
_c1wob:
	movq 8(%rbp),%rax
	leaq block_c1woh_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$w$slcm1_entry
	.size _c1wob, .-_c1wob


==================== Asm code ====================
2018-03-16 15:56:18.805923454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wob_info:
	.quad	_c1wob
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1376


==================== Asm code ====================
2018-03-16 15:56:18.80658138 UTC

.section .text
.align 8
_c1woh:
_c1woh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wor
_c1woq:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wor:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1woh, .-_c1woh


==================== Asm code ====================
2018-03-16 15:56:18.807219929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1woh_info:
	.quad	_c1woh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.8170528 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.lcm_closure
.type GHC.Real.lcm_closure, @object
GHC.Real.lcm_closure:
	.quad	GHC.Real.lcm_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.81789511 UTC

.section .text
.align 8
sat_s1sHU_entry:
_c1wp7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wp8
_c1wp9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wp8:
	jmp *-16(%r13)
	.size sat_s1sHU_entry, .-sat_s1sHU_entry


==================== Asm code ====================
2018-03-16 15:56:18.818555388 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sHU_info:
	.quad	sat_s1sHU_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.819276187 UTC

.section .text
.align 8
sat_s1sHW_entry:
_c1wpi:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wpj
_c1wpk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wpj:
	jmp *-16(%r13)
	.size sat_s1sHW_entry, .-sat_s1sHW_entry


==================== Asm code ====================
2018-03-16 15:56:18.819953759 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sHW_info:
	.quad	sat_s1sHW_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.820675599 UTC

.section .text
.align 8
sat_s1sHY_entry:
_c1wpB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wpC
_c1wpD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.gcd_entry
_c1wpC:
	jmp *-16(%r13)
	.size sat_s1sHY_entry, .-sat_s1sHY_entry


==================== Asm code ====================
2018-03-16 15:56:18.821365283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sHY_info:
	.quad	sat_s1sHY_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+1392


==================== Asm code ====================
2018-03-16 15:56:18.822172027 UTC

.section .text
.align 8
sat_s1sHZ_entry:
_c1wpE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wpF
_c1wpG:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1wpI
_c1wpH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s1sHY_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1wpI:
	movq $40,904(%r13)
_c1wpF:
	jmp *-16(%r13)
	.size sat_s1sHZ_entry, .-sat_s1sHZ_entry


==================== Asm code ====================
2018-03-16 15:56:18.822903286 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sHZ_info:
	.quad	sat_s1sHZ_entry
	.quad	3
	.quad	4294967311
	.quad	S1sVz_srt+1392


==================== Asm code ====================
2018-03-16 15:56:18.823734973 UTC

.section .text
.align 8
sat_s1sI0_entry:
_c1wpJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wpK
_c1wpL:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1wpN
_c1wpM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s1sHZ_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wpN:
	movq $40,904(%r13)
_c1wpK:
	jmp *-16(%r13)
	.size sat_s1sI0_entry, .-sat_s1sI0_entry


==================== Asm code ====================
2018-03-16 15:56:18.82447296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sI0_info:
	.quad	sat_s1sI0_entry
	.quad	4
	.quad	4294967311
	.quad	S1sVz_srt+1392


==================== Asm code ====================
2018-03-16 15:56:18.825147605 UTC

.section .text
.align 8
.globl GHC.Real.lcm_entry
.type GHC.Real.lcm_entry, @object
GHC.Real.lcm_entry:
_c1wpO:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wpP
_c1wpQ:
	leaq block_c1woN_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wpP:
	leaq GHC.Real.lcm_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.lcm_entry, .-GHC.Real.lcm_entry


==================== Asm code ====================
2018-03-16 15:56:18.826280916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.lcm_info
.type GHC.Real.lcm_info, @object
GHC.Real.lcm_info:
	.quad	GHC.Real.lcm_entry
	.quad	0
	.quad	27021602059190286
	.quad	12884901911
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.8269345 UTC

.section .text
.align 8
_c1woN:
_c1woN:
	leaq block_c1woR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1Real_entry
	.size _c1woN, .-_c1woN


==================== Asm code ====================
2018-03-16 15:56:18.827490965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1woN_info:
	.quad	_c1woN
	.quad	3
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.828153617 UTC

.section .text
.align 8
_c1woR:
_c1woR:
	leaq block_c1woV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Real.$p2Real_entry
	.size _c1woR, .-_c1woR


==================== Asm code ====================
2018-03-16 15:56:18.828775493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1woR_info:
	.quad	_c1woR
	.quad	4
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.829538933 UTC

.section .text
.align 8
_c1woV:
_c1woV:
	leaq block_c1woZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1woV, .-_c1woV


==================== Asm code ====================
2018-03-16 15:56:18.830675526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1woV_info:
	.quad	_c1woV
	.quad	4
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.831496306 UTC

.section .text
.align 8
_c1woZ:
_c1woZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wpW
_c1wpV:
	leaq sat_s1sHU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wpa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c1wpW:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1woZ, .-_c1woZ


==================== Asm code ====================
2018-03-16 15:56:18.832233425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1woZ_info:
	.quad	_c1woZ
	.quad	4
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.833031189 UTC

.section .text
.align 8
_c1wpa:
_c1wpa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wpY
_u1wqh:
	addq $16,%rbp
	jmp _c1wqe
_c1wq1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wpY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wq1
_c1wq0:
	leaq sat_s1sHW_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	leaq block_c1wpl_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1wpa, .-_c1wpa


==================== Asm code ====================
2018-03-16 15:56:18.833816595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wpa_info:
	.quad	_c1wpa
	.quad	5
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.834591557 UTC

.section .text
.align 8
_c1wpl:
_c1wpl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wq3
_u1wqi:
	addq $8,%rbp
	jmp _c1wqe
_c1wq6:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wq3:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1wq6
_c1wq5:
	leaq sat_s1sI0_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -40(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp *GHC.Num.abs_entry@gotpcrel(%rip)
	.size _c1wpl, .-_c1wpl


==================== Asm code ====================
2018-03-16 15:56:18.835357948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wpl_info:
	.quad	_c1wpl
	.quad	4
	.quad	9007203549708318
	.quad	S1sVz_srt+1224


==================== Asm code ====================
2018-03-16 15:56:18.836015334 UTC

.section .text
.align 8
_c1wqe:
_c1wqe:
	movq (%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1wqe, .-_c1wqe


==================== Asm code ====================
2018-03-16 15:56:18.841101144 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w$ctoEnum_closure
.type GHC.Real.$w$ctoEnum_closure, @object
GHC.Real.$w$ctoEnum_closure:
	.quad	GHC.Real.$w$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.842056664 UTC

.section .text
.align 8
sat_s1sI7_entry:
_c1ws4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1ws5
_c1ws6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c1ws1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c1ws1
_c1ws2:
	movq (%rbx),%rax
	jmp *(%rax)
_c1ws5:
	jmp *-16(%r13)
	.size sat_s1sI7_entry, .-sat_s1sI7_entry


==================== Asm code ====================
2018-03-16 15:56:18.842713056 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sI7_info:
	.quad	sat_s1sI7_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.843311998 UTC

.section .text
.align 8
_c1ws1:
_c1ws1:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c1ws1, .-_c1ws1


==================== Asm code ====================
2018-03-16 15:56:18.843907743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1ws1_info:
	.quad	_c1ws1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.844600403 UTC

.section .text
.align 8
.globl GHC.Real.$w$ctoEnum_entry
.type GHC.Real.$w$ctoEnum_entry, @object
GHC.Real.$w$ctoEnum_entry:
_c1wsb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wsf
_c1wsg:
	leaq block_c1wrP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wsf:
	leaq GHC.Real.$w$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w$ctoEnum_entry, .-GHC.Real.$w$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:56:18.845296991 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w$ctoEnum_info
.type GHC.Real.$w$ctoEnum_info, @object
GHC.Real.$w$ctoEnum_info:
	.quad	GHC.Real.$w$ctoEnum_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1408


==================== Asm code ====================
2018-03-16 15:56:18.845951486 UTC

.section .text
.align 8
_c1wrP:
_c1wrP:
	leaq block_c1wrT_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c1wrP, .-_c1wrP


==================== Asm code ====================
2018-03-16 15:56:18.846508149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wrP_info:
	.quad	_c1wrP
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:18.847239309 UTC

.section .text
.align 8
_c1wrT:
_c1wrT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wsk
_c1wsj:
	leaq sat_s1sI7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wsc_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wsk:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wrT, .-_c1wrT


==================== Asm code ====================
2018-03-16 15:56:18.847925081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wrT_info:
	.quad	_c1wrT
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:18.848575562 UTC

.section .text
.align 8
_c1wsc:
_c1wsc:
	leaq block_c1wse_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c1wsc, .-_c1wsc


==================== Asm code ====================
2018-03-16 15:56:18.849226678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wsc_info:
	.quad	_c1wsc
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:18.849971107 UTC

.section .text
.align 8
_c1wse:
_c1wse:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wse, .-_c1wse


==================== Asm code ====================
2018-03-16 15:56:18.850547616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wse_info:
	.quad	_c1wse
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.854103039 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoEnum_closure
.type GHC.Real.$fEnumRatio_$ctoEnum_closure, @object
GHC.Real.$fEnumRatio_$ctoEnum_closure:
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.85486709 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_$ctoEnum_entry
.type GHC.Real.$fEnumRatio_$ctoEnum_entry, @object
GHC.Real.$fEnumRatio_$ctoEnum_entry:
_c1wt7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wt8
_c1wt9:
	leaq block_c1wt4_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$w$ctoEnum_entry
_c1wt8:
	leaq GHC.Real.$fEnumRatio_$ctoEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_$ctoEnum_entry, .-GHC.Real.$fEnumRatio_$ctoEnum_entry


==================== Asm code ====================
2018-03-16 15:56:18.855503522 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$ctoEnum_info
.type GHC.Real.$fEnumRatio_$ctoEnum_info, @object
GHC.Real.$fEnumRatio_$ctoEnum_info:
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S1sVz_srt+1408


==================== Asm code ====================
2018-03-16 15:56:18.856261454 UTC

.section .text
.align 8
_c1wt4:
_c1wt4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wtc
_c1wtb:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wtc:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wt4, .-_c1wt4


==================== Asm code ====================
2018-03-16 15:56:18.856895264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wt4_info:
	.quad	_c1wt4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.858714232 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_$s$fEnumRatio_closure
.type GHC.Real.$fEnumRatio_$s$fEnumRatio_closure, @object
GHC.Real.$fEnumRatio_$s$fEnumRatio_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Real.$fEnumRatio_$s$csucc_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cpred_closure+1
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure+1
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_closure+1
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_closure+1
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure+2
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure+2
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.8662353 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_closure
.type GHC.Real.$fEnumRatio_closure, @object
GHC.Real.$fEnumRatio_closure:
	.quad	GHC.Real.$fEnumRatio_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.867038685 UTC

.section .text
.align 8
sat_s1sIn_entry:
_c1wtx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wty
_c1wtz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromThenTo_entry
_c1wty:
	jmp *-16(%r13)
	.size sat_s1sIn_entry, .-sat_s1sIn_entry


==================== Asm code ====================
2018-03-16 15:56:18.867663495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIn_info:
	.quad	sat_s1sIn_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1432


==================== Asm code ====================
2018-03-16 15:56:18.868365339 UTC

.section .text
.align 8
sat_s1sIm_entry:
_c1wtE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wtF
_c1wtG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromTo_entry
_c1wtF:
	jmp *-16(%r13)
	.size sat_s1sIm_entry, .-sat_s1sIm_entry


==================== Asm code ====================
2018-03-16 15:56:18.868992624 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIm_info:
	.quad	sat_s1sIm_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1440


==================== Asm code ====================
2018-03-16 15:56:18.870210242 UTC

.section .text
.align 8
sat_s1sIl_entry:
_c1wtL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wtM
_c1wtN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFromThen_entry
_c1wtM:
	jmp *-16(%r13)
	.size sat_s1sIl_entry, .-sat_s1sIl_entry


==================== Asm code ====================
2018-03-16 15:56:18.870880553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIl_info:
	.quad	sat_s1sIl_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1448


==================== Asm code ====================
2018-03-16 15:56:18.871588217 UTC

.section .text
.align 8
sat_s1sIk_entry:
_c1wtS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wtT
_c1wtU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$fEnumRatio_$cenumFrom_entry
_c1wtT:
	jmp *-16(%r13)
	.size sat_s1sIk_entry, .-sat_s1sIk_entry


==================== Asm code ====================
2018-03-16 15:56:18.872212276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIk_info:
	.quad	sat_s1sIk_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1456


==================== Asm code ====================
2018-03-16 15:56:18.872857071 UTC

.section .text
.align 8
sat_s1sIj_entry:
_c1wu0:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cfromEnum_entry
	.size sat_s1sIj_entry, .-sat_s1sIj_entry


==================== Asm code ====================
2018-03-16 15:56:18.873461095 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIj_info:
	.quad	sat_s1sIj_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:56:18.874113195 UTC

.section .text
.align 8
sat_s1sIi_entry:
_c1wu8:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$ctoEnum_entry
	.size sat_s1sIi_entry, .-sat_s1sIi_entry


==================== Asm code ====================
2018-03-16 15:56:18.874667952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIi_info:
	.quad	sat_s1sIi_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+1424


==================== Asm code ====================
2018-03-16 15:56:18.875274917 UTC

.section .text
.align 8
sat_s1sIh_entry:
_c1wug:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$cpred_entry
	.size sat_s1sIh_entry, .-sat_s1sIh_entry


==================== Asm code ====================
2018-03-16 15:56:18.875856345 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIh_info:
	.quad	sat_s1sIh_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+1464


==================== Asm code ====================
2018-03-16 15:56:18.876449853 UTC

.section .text
.align 8
sat_s1sIg_entry:
_c1wuo:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Real.$fEnumRatio_$csucc_entry
	.size sat_s1sIg_entry, .-sat_s1sIg_entry


==================== Asm code ====================
2018-03-16 15:56:18.87699015 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sIg_info:
	.quad	sat_s1sIg_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S1sVz_srt+1472


==================== Asm code ====================
2018-03-16 15:56:18.877906708 UTC

.section .text
.align 8
.globl GHC.Real.$fEnumRatio_entry
.type GHC.Real.$fEnumRatio_entry, @object
GHC.Real.$fEnumRatio_entry:
_c1wus:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _c1wuw
_c1wuv:
	leaq sat_s1sIn_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	leaq sat_s1sIm_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-184(%r12)
	leaq sat_s1sIl_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-160(%r12)
	leaq sat_s1sIk_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	leaq sat_s1sIj_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	leaq sat_s1sIi_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-104(%r12)
	leaq sat_s1sIh_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-88(%r12)
	leaq sat_s1sIg_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-72(%r12)
	movq GHC.Enum.C:Enum_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -79(%r12),%rax
	movq %rax,-56(%r12)
	leaq -95(%r12),%rax
	movq %rax,-48(%r12)
	leaq -111(%r12),%rax
	movq %rax,-40(%r12)
	leaq -127(%r12),%rax
	movq %rax,-32(%r12)
	leaq -152(%r12),%rax
	movq %rax,-24(%r12)
	leaq -176(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wuw:
	movq $232,904(%r13)
	leaq GHC.Real.$fEnumRatio_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$fEnumRatio_entry, .-GHC.Real.$fEnumRatio_entry


==================== Asm code ====================
2018-03-16 15:56:18.878764234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$fEnumRatio_info
.type GHC.Real.$fEnumRatio_info, @object
GHC.Real.$fEnumRatio_info:
	.quad	GHC.Real.$fEnumRatio_entry
	.quad	0
	.quad	1095216660494
	.quad	4294967301
	.quad	S1sVz_srt+1424


==================== Asm code ====================
2018-03-16 15:56:18.881920966 UTC

.section .data
.align 8
.align 1
$wg_r1j3P_closure:
	.quad	$wg_r1j3P_info


==================== Asm code ====================
2018-03-16 15:56:18.882838081 UTC

.section .text
.align 8
$wg_r1j3P_entry:
_c1wvy:
_c1wvq:
	movq %rsi,%rax
	shrq $63,%rax
	movq %rsi,%rbx
	addq %rax,%rbx
	andq $-2,%rbx
	movq %rsi,%rax
	subq %rbx,%rax
	testq %rax,%rax
	je _c1wvx
_c1wvw:
	cmpq $1,%rsi
	je _c1wvM
_c1wvI:
	movq %r14,%rax
	imulq %rdi,%rax
	movq %rsi,%rbx
	shrq $63,%rbx
	addq %rbx,%rsi
	sarq $1,%rsi
	movq %r14,%rbx
	imulq %rbx,%r14
_n1wwl:
	movq %rax,%rdi
	jmp _c1wvq
_c1wvM:
	movq %r14,%rbx
	imulq %rdi,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wvx:
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp _c1wvq
	.size $wg_r1j3P_entry, .-$wg_r1j3P_entry


==================== Asm code ====================
2018-03-16 15:56:18.883586099 UTC

.section .data.rel.ro
.align 8
.align 1
$wg_r1j3P_info:
	.quad	$wg_r1j3P_entry
	.quad	0
	.quad	14
	.quad	12884901904


==================== Asm code ====================
2018-03-16 15:56:18.886558571 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wf1_closure
.type GHC.Real.$wf1_closure, @object
GHC.Real.$wf1_closure:
	.quad	GHC.Real.$wf1_info


==================== Asm code ====================
2018-03-16 15:56:18.887474811 UTC

.section .text
.align 8
.globl GHC.Real.$wf1_entry
.type GHC.Real.$wf1_entry, @object
GHC.Real.$wf1_entry:
_c1www:
_c1wwo:
	movq %rsi,%rax
	shrq $63,%rax
	movq %rsi,%rbx
	addq %rax,%rbx
	andq $-2,%rbx
	movq %rsi,%rax
	subq %rbx,%rax
	testq %rax,%rax
	je _c1wwv
_c1wwu:
	cmpq $1,%rsi
	je _c1wwH
_c1wwG:
	movq %r14,%rdi
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp $wg_r1j3P_entry
_c1wwH:
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wwv:
	movq %rsi,%rax
	shrq $63,%rax
	addq %rax,%rsi
	sarq $1,%rsi
	movq %r14,%rax
	imulq %rax,%r14
	jmp _c1wwo
	.size GHC.Real.$wf1_entry, .-GHC.Real.$wf1_entry


==================== Asm code ====================
2018-03-16 15:56:18.888203543 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wf1_info
.type GHC.Real.$wf1_info, @object
GHC.Real.$wf1_info:
	.quad	GHC.Real.$wf1_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:56:18.892118291 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f2_closure
.type GHC.Real.^_f2_closure, @object
GHC.Real.^_f2_closure:
	.quad	GHC.Real.^_f2_info


==================== Asm code ====================
2018-03-16 15:56:18.892978884 UTC

.section .text
.align 8
.globl GHC.Real.^_f2_entry
.type GHC.Real.^_f2_entry, @object
GHC.Real.^_f2_entry:
_c1wxk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wxx
_c1wxy:
	leaq block_c1wxh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wxh
_c1wxi:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wxx:
	leaq GHC.Real.^_f2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_f2_entry, .-GHC.Real.^_f2_entry


==================== Asm code ====================
2018-03-16 15:56:18.894298933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f2_info
.type GHC.Real.^_f2_info, @object
GHC.Real.^_f2_info:
	.quad	GHC.Real.^_f2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:18.895114757 UTC

.section .text
.align 8
_c1wxh:
_c1wxh:
	leaq block_c1wxn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1wxn
_c1wxo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wxh, .-_c1wxh


==================== Asm code ====================
2018-03-16 15:56:18.895758908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wxh_info:
	.quad	_c1wxh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.896435156 UTC

.section .text
.align 8
_c1wxn:
_c1wxn:
	movq 8(%rbp),%rax
	leaq block_c1wxs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Real.$wf1_entry
	.size _c1wxn, .-_c1wxn


==================== Asm code ====================
2018-03-16 15:56:18.897012766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wxn_info:
	.quad	_c1wxn
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.897933784 UTC

.section .text
.align 8
_c1wxs:
_c1wxs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wxD
_c1wxC:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wxD:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1wxs, .-_c1wxs


==================== Asm code ====================
2018-03-16 15:56:18.898534445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wxs_info:
	.quad	_c1wxs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.900223374 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^3_closure
.type GHC.Real.^3_closure, @object
GHC.Real.^3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:56:18.903210552 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^2_closure
.type GHC.Real.^2_closure, @object
GHC.Real.^2_closure:
	.quad	GHC.Real.^2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.904074389 UTC

.section .text
.align 8
.globl GHC.Real.^2_entry
.type GHC.Real.^2_entry, @object
GHC.Real.^2_entry:
_c1wya:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wyb
_c1wyc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1wy7
_c1wy6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1wy8_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl5_r1j3O_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c1wyb:
	jmp *-16(%r13)
_c1wy7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Real.^2_entry, .-GHC.Real.^2_entry


==================== Asm code ====================
2018-03-16 15:56:18.904786395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^2_info
.type GHC.Real.^2_info, @object
GHC.Real.^2_info:
	.quad	GHC.Real.^2_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+1264


==================== Asm code ====================
2018-03-16 15:56:18.905692394 UTC

.section .text
.align 8
_c1wy8:
_c1wy8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c1wy8, .-_c1wy8


==================== Asm code ====================
2018-03-16 15:56:18.906259394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wy8_info:
	.quad	_c1wy8
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1264


==================== Asm code ====================
2018-03-16 15:56:18.910519333 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^2_closure
.type GHC.Real.^_$s^2_closure, @object
GHC.Real.^_$s^2_closure:
	.quad	GHC.Real.^_$s^2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.911304894 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^2_entry
.type GHC.Real.^_$s^2_entry, @object
GHC.Real.^_$s^2_entry:
_c1wyz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wyA
_c1wyB:
	leaq block_c1wyw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wyw
_c1wyx:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wyA:
	leaq GHC.Real.^_$s^2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^2_entry, .-GHC.Real.^_$s^2_entry


==================== Asm code ====================
2018-03-16 15:56:18.911980075 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^2_info
.type GHC.Real.^_$s^2_info, @object
GHC.Real.^_$s^2_info:
	.quad	GHC.Real.^_$s^2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1488


==================== Asm code ====================
2018-03-16 15:56:18.912784206 UTC

.section .text
.align 8
_c1wyw:
_c1wyw:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jge _c1wz2
_c1wz3:
	leaq GHC.Real.^2_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1wz0:
	leaq GHC.Real.^3_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wz2:
	testq %rax,%rax
	je _c1wz0
_c1wyV:
	leaq block_c1wyK_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c1wyK
_c1wyL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wyw, .-_c1wyw


==================== Asm code ====================
2018-03-16 15:56:18.913538018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wyw_info:
	.quad	_c1wyw
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1496


==================== Asm code ====================
2018-03-16 15:56:18.914200902 UTC

.section .text
.align 8
_c1wyK:
_c1wyK:
	movq 8(%rbp),%rax
	leaq block_c1wyP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Real.$wf1_entry
	.size _c1wyK, .-_c1wyK


==================== Asm code ====================
2018-03-16 15:56:18.91478934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wyK_info:
	.quad	_c1wyK
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.915527534 UTC

.section .text
.align 8
_c1wyP:
_c1wyP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c1wyZ
_c1wyY:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wyZ:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1wyP, .-_c1wyP


==================== Asm code ====================
2018-03-16 15:56:18.916162082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wyP_info:
	.quad	_c1wyP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:18.921653645 UTC

.section .data
.align 8
.align 1
$wg1_r1j3Q_closure:
	.quad	$wg1_r1j3Q_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.92239933 UTC

.section .text
.align 8
$wg1_r1j3Q_entry:
_c1wzC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wzD
_u1wAf:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c1wzu
_c1wzD:
	leaq $wg1_r1j3Q_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wg1_r1j3Q_entry, .-$wg1_r1j3Q_entry


==================== Asm code ====================
2018-03-16 15:56:18.923023024 UTC

.section .data.rel.ro
.align 8
.align 1
$wg1_r1j3Q_info:
	.quad	$wg1_r1j3Q_entry
	.quad	0
	.quad	12884901902
	.quad	12884901909
	.quad	S1sVz_srt+1504


==================== Asm code ====================
2018-03-16 15:56:18.923853851 UTC

.section .text
.align 8
_c1wzu:
_c1wzu:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,%rcx
	shrq $63,%rcx
	movq %rbx,%rdx
	addq %rcx,%rdx
	andq $-2,%rdx
	movq %rbx,%rcx
	subq %rdx,%rcx
	testq %rcx,%rcx
	je _c1wzB
_c1wzA:
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c1wA1
_c1wzV:
	leaq block_c1wzM_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1wA1:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1wzB:
	leaq block_c1wA9_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1wzu, .-_c1wzu


==================== Asm code ====================
2018-03-16 15:56:18.924710196 UTC

.section .text
.align 8
_c1wA9:
_c1wA9:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	jmp _c1wzu
	.size _c1wA9, .-_c1wA9


==================== Asm code ====================
2018-03-16 15:56:18.925364339 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wA9_info:
	.quad	_c1wA9
	.quad	66
	.quad	4294967326
	.quad	S1sVz_srt+1512


==================== Asm code ====================
2018-03-16 15:56:18.92620074 UTC

.section .text
.align 8
_c1wzM:
_c1wzM:
	movq 8(%rbp),%rax
	leaq block_c1wzT_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,%rbx
	shrq $63,%rbx
	addq %rbx,%rax
	sarq $1,%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1wzM, .-_c1wzM


==================== Asm code ====================
2018-03-16 15:56:18.927656083 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wzM_info:
	.quad	_c1wzM
	.quad	387
	.quad	4294967326
	.quad	S1sVz_srt+1512


==================== Asm code ====================
2018-03-16 15:56:18.928363609 UTC

.section .text
.align 8
_c1wzT:
_c1wzT:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp _c1wzu
	.size _c1wzT, .-_c1wzT


==================== Asm code ====================
2018-03-16 15:56:18.92901221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wzT_info:
	.quad	_c1wzT
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1512


==================== Asm code ====================
2018-03-16 15:56:18.93332382 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$wf_closure
.type GHC.Real.$wf_closure, @object
GHC.Real.$wf_closure:
	.quad	GHC.Real.$wf_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.93400655 UTC

.section .text
.align 8
.globl GHC.Real.$wf_entry
.type GHC.Real.$wf_entry, @object
GHC.Real.$wf_entry:
_c1wB2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wB3
_u1wBA:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _c1wAU
_c1wB3:
	leaq GHC.Real.$wf_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$wf_entry, .-GHC.Real.$wf_entry


==================== Asm code ====================
2018-03-16 15:56:18.934638828 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$wf_info
.type GHC.Real.$wf_info, @object
GHC.Real.$wf_info:
	.quad	GHC.Real.$wf_entry
	.quad	0
	.quad	30064771086
	.quad	8589934606
	.quad	S1sVz_srt+1504


==================== Asm code ====================
2018-03-16 15:56:18.935507419 UTC

.section .text
.align 8
_c1wAU:
_c1wAU:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,%rcx
	shrq $63,%rcx
	movq %rbx,%rdx
	addq %rcx,%rdx
	andq $-2,%rdx
	movq %rbx,%rcx
	subq %rdx,%rcx
	testq %rcx,%rcx
	je _c1wB1
_c1wB0:
	cmpq $1,%rbx
	je _c1wBm
_c1wBh:
	leaq block_c1wBf_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c1wBm:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1wB1:
	leaq block_c1wBu_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	shrq $63,%rax
	addq %rax,%rbx
	sarq $1,%rbx
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c1wAU, .-_c1wAU


==================== Asm code ====================
2018-03-16 15:56:18.936320142 UTC

.section .text
.align 8
_c1wBu:
_c1wBu:
	movq %rbx,(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	jmp _c1wAU
	.size _c1wBu, .-_c1wBu


==================== Asm code ====================
2018-03-16 15:56:18.936883489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wBu_info:
	.quad	_c1wBu
	.quad	65
	.quad	12884901918
	.quad	S1sVz_srt+1504


==================== Asm code ====================
2018-03-16 15:56:18.937547186 UTC

.section .text
.align 8
_c1wBf:
_c1wBf:
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wg1_r1j3Q_entry
	.size _c1wBf, .-_c1wBf


==================== Asm code ====================
2018-03-16 15:56:18.938117794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wBf_info:
	.quad	_c1wBf
	.quad	130
	.quad	4294967326
	.quad	S1sVz_srt+1504


==================== Asm code ====================
2018-03-16 15:56:18.940971739 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_f1_closure
.type GHC.Real.^_f1_closure, @object
GHC.Real.^_f1_closure:
	.quad	GHC.Real.^_f1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.941797934 UTC

.section .text
.align 8
.globl GHC.Real.^_f1_entry
.type GHC.Real.^_f1_entry, @object
GHC.Real.^_f1_entry:
_c1wCf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wCg
_c1wCh:
	leaq block_c1wCc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wCc
_c1wCd:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wCg:
	leaq GHC.Real.^_f1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_f1_entry, .-GHC.Real.^_f1_entry


==================== Asm code ====================
2018-03-16 15:56:18.942438905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_f1_info
.type GHC.Real.^_f1_info, @object
GHC.Real.^_f1_info:
	.quad	GHC.Real.^_f1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S1sVz_srt+1520


==================== Asm code ====================
2018-03-16 15:56:18.943058165 UTC

.section .text
.align 8
_c1wCc:
_c1wCc:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wf_entry
	.size _c1wCc, .-_c1wCc


==================== Asm code ====================
2018-03-16 15:56:18.943644127 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wCc_info:
	.quad	_c1wCc
	.quad	1
	.quad	4294967326
	.quad	S1sVz_srt+1520


==================== Asm code ====================
2018-03-16 15:56:18.946999291 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_$s^1_closure
.type GHC.Real.^_$s^1_closure, @object
GHC.Real.^_$s^1_closure:
	.quad	GHC.Real.^_$s^1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.947561328 UTC

.section .data.rel.ro
.align 8
.align 1
u1wCU_srtd:
	.quad	S1sVz_srt+1280
	.quad	33
	.quad	5368840193


==================== Asm code ====================
2018-03-16 15:56:18.948259117 UTC

.section .text
.align 8
.globl GHC.Real.^_$s^1_entry
.type GHC.Real.^_$s^1_entry, @object
GHC.Real.^_$s^1_entry:
_c1wCD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wCE
_c1wCF:
	leaq block_c1wCA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c1wCA
_c1wCB:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wCE:
	leaq GHC.Real.^_$s^1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_$s^1_entry, .-GHC.Real.^_$s^1_entry


==================== Asm code ====================
2018-03-16 15:56:18.948892212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_$s^1_info
.type GHC.Real.^_$s^1_info, @object
GHC.Real.^_$s^1_info:
	.quad	GHC.Real.^_$s^1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u1wCU_srtd


==================== Asm code ====================
2018-03-16 15:56:18.949866058 UTC

.section .text
.align 8
_c1wCA:
_c1wCA:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jge _c1wCR
_c1wCS:
	leaq GHC.Real.^1_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1wCP:
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1wCR:
	testq %rax,%rax
	je _c1wCP
_c1wCO:
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$wf_entry
	.size _c1wCA, .-_c1wCA


==================== Asm code ====================
2018-03-16 15:56:18.950501407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wCA_info:
	.quad	_c1wCA
	.quad	1
	.quad	4612248972675776542
	.quad	S1sVz_srt+1280


==================== Asm code ====================
2018-03-16 15:56:18.953428917 UTC

.section .data
.align 8
.align 1
lvl6_r1j3R_closure:
	.quad	lvl6_r1j3R_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.954284358 UTC

.section .text
.align 8
lvl6_r1j3R_entry:
_c1wDg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wDh
_c1wDi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1wDd
_c1wDc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1wDe_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl5_r1j3O_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c1wDh:
	jmp *-16(%r13)
_c1wDd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_r1j3R_entry, .-lvl6_r1j3R_entry


==================== Asm code ====================
2018-03-16 15:56:18.954983861 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_r1j3R_info:
	.quad	lvl6_r1j3R_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+1544


==================== Asm code ====================
2018-03-16 15:56:18.955581414 UTC

.section .text
.align 8
_c1wDe:
_c1wDe:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c1wDe, .-_c1wDe


==================== Asm code ====================
2018-03-16 15:56:18.956141163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wDe_info:
	.quad	_c1wDe
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1544


==================== Asm code ====================
2018-03-16 15:56:18.959360231 UTC

.section .data
.align 8
.align 1
lvl7_r1j3S_closure:
	.quad	lvl7_r1j3S_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.960822645 UTC

.section .text
.align 8
lvl7_r1j3S_entry:
_c1wDG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wDH
_c1wDI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c1wDD
_c1wDC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c1wDE_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl5_r1j3O_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c1wDH:
	jmp *-16(%r13)
_c1wDD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_r1j3S_entry, .-lvl7_r1j3S_entry


==================== Asm code ====================
2018-03-16 15:56:18.961618284 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_r1j3S_info:
	.quad	lvl7_r1j3S_entry
	.quad	0
	.quad	4294967317
	.quad	S1sVz_srt+1544


==================== Asm code ====================
2018-03-16 15:56:18.962214003 UTC

.section .text
.align 8
_c1wDE:
_c1wDE:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c1wDE, .-_c1wDE


==================== Asm code ====================
2018-03-16 15:56:18.962762712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wDE_info:
	.quad	_c1wDE
	.quad	0
	.quad	4294967326
	.quad	S1sVz_srt+1544


==================== Asm code ====================
2018-03-16 15:56:18.992168249 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^_closure
.type GHC.Real.^_closure, @object
GHC.Real.^_closure:
	.quad	GHC.Real.^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:18.994005694 UTC

.section .text
.align 8
$dNum1_s1sJw_entry:
_c1wFr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFs
_c1wFt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1wFs:
	jmp *-16(%r13)
	.size $dNum1_s1sJw_entry, .-$dNum1_s1sJw_entry


==================== Asm code ====================
2018-03-16 15:56:18.994668616 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum1_s1sJw_info:
	.quad	$dNum1_s1sJw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:18.99539608 UTC

.section .text
.align 8
sat_s1sJy_entry:
_c1wFw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFx
_c1wFy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wFx:
	jmp *-16(%r13)
	.size sat_s1sJy_entry, .-sat_s1sJy_entry


==================== Asm code ====================
2018-03-16 15:56:18.996046846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJy_info:
	.quad	sat_s1sJy_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:18.99675079 UTC

.section .text
.align 8
sat_s1sJB_entry:
_c1wFB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFC
_c1wFD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wFC:
	jmp *-16(%r13)
	.size sat_s1sJB_entry, .-sat_s1sJB_entry


==================== Asm code ====================
2018-03-16 15:56:18.997402868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJB_info:
	.quad	sat_s1sJB_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:18.99804344 UTC

.section .text
.align 8
lvl8_s1sJD_entry:
_c1wFG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFH
_c1wFI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even2_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wFH:
	jmp *-16(%r13)
	.size lvl8_s1sJD_entry, .-lvl8_s1sJD_entry


==================== Asm code ====================
2018-03-16 15:56:18.998626148 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_s1sJD_info:
	.quad	lvl8_s1sJD_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1560


==================== Asm code ====================
2018-03-16 15:56:18.999323958 UTC

.section .text
.align 8
lvl9_s1sJI_entry:
_c1wFL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFM
_c1wFN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wFM:
	jmp *-16(%r13)
	.size lvl9_s1sJI_entry, .-lvl9_s1sJI_entry


==================== Asm code ====================
2018-03-16 15:56:18.99992523 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_s1sJI_info:
	.quad	lvl9_s1sJI_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.000610118 UTC

.section .text
.align 8
sat_s1sJZ_entry:
_c1wFQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFR
_c1wFS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1wFR:
	jmp *-16(%r13)
	.size sat_s1sJZ_entry, .-sat_s1sJZ_entry


==================== Asm code ====================
2018-03-16 15:56:19.001225793 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJZ_info:
	.quad	sat_s1sJZ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:19.001983142 UTC

.section .text
.align 8
sat_s1sJY_entry:
_c1wFV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wFW
_c1wFX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wFW:
	jmp *-16(%r13)
	.size sat_s1sJY_entry, .-sat_s1sJY_entry


==================== Asm code ====================
2018-03-16 15:56:19.002605151 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJY_info:
	.quad	sat_s1sJY_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.003295118 UTC

.section .text
.align 8
sat_s1sJV_entry:
_c1wG0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wG1
_c1wG2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wG1:
	jmp *-16(%r13)
	.size sat_s1sJV_entry, .-sat_s1sJV_entry


==================== Asm code ====================
2018-03-16 15:56:19.003927318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJV_info:
	.quad	sat_s1sJV_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:19.004621377 UTC

.section .text
.align 8
sat_s1sJU_entry:
_c1wG5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wG6
_c1wG7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1wG6:
	jmp *-16(%r13)
	.size sat_s1sJU_entry, .-sat_s1sJU_entry


==================== Asm code ====================
2018-03-16 15:56:19.005326788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJU_info:
	.quad	sat_s1sJU_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:19.006000243 UTC

.section .text
.align 8
sat_s1sJT_entry:
_c1wGb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGc
_c1wGd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wGc:
	jmp *-16(%r13)
	.size sat_s1sJT_entry, .-sat_s1sJT_entry


==================== Asm code ====================
2018-03-16 15:56:19.006654067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJT_info:
	.quad	sat_s1sJT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.007351381 UTC

.section .text
.align 8
sat_s1sJX_entry:
_c1wGg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGh
_c1wGi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1wGh:
	jmp *-16(%r13)
	.size sat_s1sJX_entry, .-sat_s1sJX_entry


==================== Asm code ====================
2018-03-16 15:56:19.008003731 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJX_info:
	.quad	sat_s1sJX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:19.008697293 UTC

.section .text
.align 8
sat_s1sJW_entry:
_c1wGm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGn
_c1wGo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wGn:
	jmp *-16(%r13)
	.size sat_s1sJW_entry, .-sat_s1sJW_entry


==================== Asm code ====================
2018-03-16 15:56:19.009373423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sJW_info:
	.quad	sat_s1sJW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.010084536 UTC

.section .text
.align 8
sat_s1sK5_entry:
_c1wGr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGs
_c1wGt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.quot_entry
_c1wGs:
	jmp *-16(%r13)
	.size sat_s1sK5_entry, .-sat_s1sK5_entry


==================== Asm code ====================
2018-03-16 15:56:19.010734239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sK5_info:
	.quad	sat_s1sK5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:56:19.011450088 UTC

.section .text
.align 8
sat_s1sK4_entry:
_c1wGx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGy
_c1wGz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wGy:
	jmp *-16(%r13)
	.size sat_s1sK4_entry, .-sat_s1sK4_entry


==================== Asm code ====================
2018-03-16 15:56:19.012118851 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sK4_info:
	.quad	sat_s1sK4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.012660954 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJE_srtd:
	.quad	S1sVz_srt+696
	.quad	111
	.quad	1
	.quad	131941462441984


==================== Asm code ====================
2018-03-16 15:56:19.013458812 UTC

.section .text
.align 8
.globl GHC.Real.^_entry
.type GHC.Real.^_entry, @object
GHC.Real.^_entry:
_c1wGA:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wGB
_c1wGC:
	leaq block_c1wE2_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wGB:
	leaq GHC.Real.^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^_entry, .-GHC.Real.^_entry


==================== Asm code ====================
2018-03-16 15:56:19.014064026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^_info
.type GHC.Real.^_info, @object
GHC.Real.^_info:
	.quad	GHC.Real.^_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1wJE_srtd


==================== Asm code ====================
2018-03-16 15:56:19.014610145 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJF_srtd:
	.quad	S1sVz_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:19.015332103 UTC

.section .text
.align 8
_c1wE2:
_c1wE2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wGF
_c1wGE:
	leaq $dNum1_s1sJw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1wE8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1wGF:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wE2, .-_c1wE2


==================== Asm code ====================
2018-03-16 15:56:19.015972726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wE2_info:
	.quad	_c1wE2
	.quad	4
	.quad	-4294967266
	.quad	u1wJF_srtd


==================== Asm code ====================
2018-03-16 15:56:19.01653235 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJG_srtd:
	.quad	S1sVz_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:19.017302739 UTC

.section .text
.align 8
_c1wE8:
_c1wE8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wGI
_c1wGH:
	leaq sat_s1sJy_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wEe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c1wGI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wE8, .-_c1wE8


==================== Asm code ====================
2018-03-16 15:56:19.017974679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wE8_info:
	.quad	_c1wE8
	.quad	5
	.quad	-4294967266
	.quad	u1wJG_srtd


==================== Asm code ====================
2018-03-16 15:56:19.01853026 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJH_srtd:
	.quad	S1sVz_srt+696
	.quad	111
	.quad	1
	.quad	96757090353152


==================== Asm code ====================
2018-03-16 15:56:19.019278629 UTC

.section .text
.align 8
_c1wEe:
_c1wEe:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wGK
_c1wHI:
	leaq lvl7_r1j3S_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wGN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wGK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wGN
_c1wGM:
	leaq sat_s1sJB_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wEk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1wEe, .-_c1wEe


==================== Asm code ====================
2018-03-16 15:56:19.019970028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEe_info:
	.quad	_c1wEe
	.quad	6
	.quad	-4294967266
	.quad	u1wJH_srtd


==================== Asm code ====================
2018-03-16 15:56:19.02053279 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJI_srtd:
	.quad	S1sVz_srt+696
	.quad	109
	.quad	1
	.quad	17592253153280


==================== Asm code ====================
2018-03-16 15:56:19.021194998 UTC

.section .text
.align 8
_c1wEk:
_c1wEk:
	movq 8(%rbp),%rax
	leaq block_c1wEo_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 56(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1wEk, .-_c1wEk


==================== Asm code ====================
2018-03-16 15:56:19.022790743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEk_info:
	.quad	_c1wEk
	.quad	7
	.quad	-4294967266
	.quad	u1wJI_srtd


==================== Asm code ====================
2018-03-16 15:56:19.023400568 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJJ_srtd:
	.quad	S1sVz_srt+696
	.quad	109
	.quad	1
	.quad	17592253153280


==================== Asm code ====================
2018-03-16 15:56:19.024217637 UTC

.section .text
.align 8
_c1wEo:
_c1wEo:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wGQ
_c1wHE:
	movq 24(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,40(%rbp)
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rax
	movq %rax,48(%rbp)
	addq $40,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wGT:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wGQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wGT
_c1wGS:
	leaq lvl8_s1sJD_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	jmp _c1wFf
	.size _c1wEo, .-_c1wEo


==================== Asm code ====================
2018-03-16 15:56:19.024950993 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEo_info:
	.quad	_c1wEo
	.quad	6
	.quad	-4294967266
	.quad	u1wJJ_srtd


==================== Asm code ====================
2018-03-16 15:56:19.025614063 UTC

.section .text
.align 8
_c1wFf:
_c1wFf:
	leaq block_c1wFh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rsi
	movq 32(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c1wFf, .-_c1wFf


==================== Asm code ====================
2018-03-16 15:56:19.026210787 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJK_srtd:
	.quad	S1sVz_srt+696
	.quad	91
	.quad	1
	.quad	67108864


==================== Asm code ====================
2018-03-16 15:56:19.027011696 UTC

.section .text
.align 8
_c1wFh:
_c1wFh:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c1wHw
_c1wHx:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1wHA
_c1wHz:
	leaq sat_s1sK5_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	leaq sat_s1sK4_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,48(%rbp)
	leaq -64(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1wFf
_c1wHA:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wHw:
	leaq block_c1wEz_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq 16(%rbp),%r14
	movq %rcx,16(%rbp)
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1wFh, .-_c1wFh


==================== Asm code ====================
2018-03-16 15:56:19.027764663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wFh_info:
	.quad	_c1wFh
	.quad	7
	.quad	-4294967266
	.quad	u1wJK_srtd


==================== Asm code ====================
2018-03-16 15:56:19.028276118 UTC

.section .data.rel.ro
.align 8
.align 1
u1wJL_srtd:
	.quad	S1sVz_srt+696
	.quad	91
	.quad	1
	.quad	67108864


==================== Asm code ====================
2018-03-16 15:56:19.029045028 UTC

.section .text
.align 8
_c1wEz:
_c1wEz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wGX
_c1wGW:
	leaq lvl9_s1sJI_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wEF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	movq %rax,16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c1wGX:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wEz, .-_c1wEz


==================== Asm code ====================
2018-03-16 15:56:19.029776985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEz_info:
	.quad	_c1wEz
	.quad	6
	.quad	-4294967266
	.quad	u1wJL_srtd


==================== Asm code ====================
2018-03-16 15:56:19.030577216 UTC

.section .text
.align 8
_c1wEF:
_c1wEF:
	movq 48(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1wGZ
_c1wHr:
	movq %rax,%rbx
	addq $64,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wH2:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wGZ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1wH2
_c1wH1:
	leaq sat_s1sJZ_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	leaq sat_s1sJY_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rax,(%rbp)
	leaq -64(%r12),%rax
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,48(%rbp)
	jmp _c1wES
	.size _c1wEF, .-_c1wEF


==================== Asm code ====================
2018-03-16 15:56:19.031277367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEF_info:
	.quad	_c1wEF
	.quad	7
	.quad	4294967326
	.quad	S1sVz_srt+1584


==================== Asm code ====================
2018-03-16 15:56:19.031935758 UTC

.section .text
.align 8
_c1wES:
_c1wES:
	leaq block_c1wEU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rsi
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c1wES, .-_c1wES


==================== Asm code ====================
2018-03-16 15:56:19.032790237 UTC

.section .text
.align 8
_c1wEU:
_c1wEU:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c1wHa
_c1wHk:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c1wHn
_c1wHm:
	leaq sat_s1sJX_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	leaq sat_s1sJW_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1wES
_c1wHn:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wHa:
	leaq block_c1wEY_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1wEU, .-_c1wEU


==================== Asm code ====================
2018-03-16 15:56:19.033651532 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEU_info:
	.quad	_c1wEU
	.quad	8
	.quad	4294967326
	.quad	S1sVz_srt+1584


==================== Asm code ====================
2018-03-16 15:56:19.034530736 UTC

.section .text
.align 8
_c1wEY:
_c1wEY:
	movq 40(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $1,%rsi
	je _c1wHc
_c1wHj:
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,48(%rbp)
	movq %rcx,56(%rbp)
	movq %rdx,64(%rbp)
	addq $48,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c1wHf:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wHc:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c1wHf
_c1wHe:
	leaq sat_s1sJV_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq %rax,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	leaq sat_s1sJU_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	leaq sat_s1sJT_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	leaq -104(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c1wES
	.size _c1wEY, .-_c1wEY


==================== Asm code ====================
2018-03-16 15:56:19.035313728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wEY_info:
	.quad	_c1wEY
	.quad	8
	.quad	4294967326
	.quad	S1sVz_srt+1584


==================== Asm code ====================
2018-03-16 15:56:19.035872237 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^%^_closure
.type GHC.Real.^%^_closure, @object
GHC.Real.^%^_closure:
	.quad	GHC.Real.^%^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:19.036618827 UTC

.section .text
.align 8
.globl GHC.Real.^%^_entry
.type GHC.Real.^%^_entry, @object
GHC.Real.^%^_entry:
_c1wI6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wIc
_c1wId:
	leaq block_c1wI3_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1wI3
_c1wI4:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wIc:
	leaq GHC.Real.^%^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^%^_entry, .-GHC.Real.^%^_entry


==================== Asm code ====================
2018-03-16 15:56:19.037511489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^%^_info
.type GHC.Real.^%^_info, @object
GHC.Real.^%^_info:
	.quad	GHC.Real.^%^_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1592


==================== Asm code ====================
2018-03-16 15:56:19.038170699 UTC

.section .text
.align 8
_c1wI3:
_c1wI3:
	movq 16(%rbp),%rax
	leaq block_c1wI9_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w^%^_entry
	.size _c1wI3, .-_c1wI3


==================== Asm code ====================
2018-03-16 15:56:19.03877952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wI3_info:
	.quad	_c1wI3
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1600


==================== Asm code ====================
2018-03-16 15:56:19.039435277 UTC

.section .text
.align 8
_c1wI9:
_c1wI9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wIh
_c1wIg:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wIh:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wI9, .-_c1wI9


==================== Asm code ====================
2018-03-16 15:56:19.040044909 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wI9_info:
	.quad	_c1wI9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.040575189 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w^%^_closure
.type GHC.Real.$w^%^_closure, @object
GHC.Real.$w^%^_closure:
	.quad	GHC.Real.$w^%^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:19.041379458 UTC

.section .text
.align 8
$dNum_s1sKk_entry:
_c1wIv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wIw
_c1wIx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1wIw:
	jmp *-16(%r13)
	.size $dNum_s1sKk_entry, .-$dNum_s1sKk_entry


==================== Asm code ====================
2018-03-16 15:56:19.041976521 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1sKk_info:
	.quad	$dNum_s1sKk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.042707329 UTC

.section .text
.align 8
sat_s1sKm_entry:
_c1wIG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wIH
_c1wII:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wIH:
	jmp *-16(%r13)
	.size sat_s1sKm_entry, .-sat_s1sKm_entry


==================== Asm code ====================
2018-03-16 15:56:19.043368595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKm_info:
	.quad	sat_s1sKm_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.044078791 UTC

.section .text
.align 8
sat_s1sKp_entry:
_c1wIR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wIS
_c1wIT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wIS:
	jmp *-16(%r13)
	.size sat_s1sKp_entry, .-sat_s1sKp_entry


==================== Asm code ====================
2018-03-16 15:56:19.044777337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKp_info:
	.quad	sat_s1sKp_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.045560204 UTC

.section .text
.align 8
.globl GHC.Real.$w^%^_entry
.type GHC.Real.$w^%^_entry, @object
GHC.Real.$w^%^_entry:
_c1wIU:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wIV
_c1wIW:
	leaq block_c1wIn_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wIV:
	leaq GHC.Real.$w^%^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w^%^_entry, .-GHC.Real.$w^%^_entry


==================== Asm code ====================
2018-03-16 15:56:19.046185007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w^%^_info
.type GHC.Real.$w^%^_info, @object
GHC.Real.$w^%^_info:
	.quad	GHC.Real.$w^%^_entry
	.quad	0
	.quad	255016333194821646
	.quad	17179869208
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.046916441 UTC

.section .text
.align 8
_c1wIn:
_c1wIn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wIZ
_c1wIY:
	leaq $dNum_s1sKk_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1wIy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1wIZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wIn, .-_c1wIn


==================== Asm code ====================
2018-03-16 15:56:19.047554186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wIn_info:
	.quad	_c1wIn
	.quad	4
	.quad	218987536175857694
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.048279121 UTC

.section .text
.align 8
_c1wIy:
_c1wIy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wJ2
_c1wJ1:
	leaq sat_s1sKm_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wIJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c1wJ2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wIy, .-_c1wIy


==================== Asm code ====================
2018-03-16 15:56:19.048944942 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wIy_info:
	.quad	_c1wIy
	.quad	5
	.quad	218987536175857694
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.050042751 UTC

.section .text
.align 8
_c1wIJ:
_c1wIJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wJ5
_c1wJB:
	leaq lvl6_r1j3R_closure(%rip),%rbx
	addq $56,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c1wJ8:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wJ5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wJ8
_c1wJ7:
	leaq sat_s1sKp_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	leaq block_c1wJ3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1wIJ, .-_c1wIJ


==================== Asm code ====================
2018-03-16 15:56:19.050765101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wIJ_info:
	.quad	_c1wIJ
	.quad	6
	.quad	218987536175857694
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.051476388 UTC

.section .text
.align 8
_c1wJ3:
_c1wJ3:
	movq 8(%rbp),%rax
	leaq block_c1wJc_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1wJ3, .-_c1wJ3


==================== Asm code ====================
2018-03-16 15:56:19.05210357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wJ3_info:
	.quad	_c1wJ3
	.quad	5
	.quad	74309398146580510
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.052843595 UTC

.section .text
.align 8
_c1wJc:
_c1wJc:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1wJo
_c1wJx:
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r14
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wJo:
	leaq block_c1wJh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	jmp GHC.Real.^_entry
	.size _c1wJc, .-_c1wJc


==================== Asm code ====================
2018-03-16 15:56:19.054079173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wJc_info:
	.quad	_c1wJc
	.quad	4
	.quad	74309398146580510
	.quad	S1sVz_srt+1416


==================== Asm code ====================
2018-03-16 15:56:19.054814343 UTC

.section .text
.align 8
_c1wJh:
_c1wJh:
	movq 24(%rbp),%rax
	leaq block_c1wJl_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 32(%rbp),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Real.^_entry
	.size _c1wJh, .-_c1wJh


==================== Asm code ====================
2018-03-16 15:56:19.055454604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wJh_info:
	.quad	_c1wJh
	.quad	132
	.quad	141733920798
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.056125082 UTC

.section .text
.align 8
_c1wJl:
_c1wJl:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wJl, .-_c1wJl


==================== Asm code ====================
2018-03-16 15:56:19.056692954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wJl_info:
	.quad	_c1wJl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.075008147 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.$w^^%^^_closure
.type GHC.Real.$w^^%^^_closure, @object
GHC.Real.$w^^%^^_closure:
	.quad	GHC.Real.$w^^%^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:19.075872067 UTC

.section .text
.align 8
$dNum_s1sKz_entry:
_c1wP0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wP1
_c1wP2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1wP1:
	jmp *-16(%r13)
	.size $dNum_s1sKz_entry, .-$dNum_s1sKz_entry


==================== Asm code ====================
2018-03-16 15:56:19.076513663 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1sKz_info:
	.quad	$dNum_s1sKz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.077206643 UTC

.section .text
.align 8
sat_s1sKB_entry:
_c1wPb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wPc
_c1wPd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wPc:
	jmp *-16(%r13)
	.size sat_s1sKB_entry, .-sat_s1sKB_entry


==================== Asm code ====================
2018-03-16 15:56:19.07793534 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKB_info:
	.quad	sat_s1sKB_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.078640289 UTC

.section .text
.align 8
sat_s1sKE_entry:
_c1wPm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wPn
_c1wPo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wPn:
	jmp *-16(%r13)
	.size sat_s1sKE_entry, .-sat_s1sKE_entry


==================== Asm code ====================
2018-03-16 15:56:19.079305001 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKE_info:
	.quad	sat_s1sKE_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.080064585 UTC

.section .text
.align 8
sat_s1sKK_entry:
_c1wPJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wPK
_c1wPL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1wPK:
	jmp *-16(%r13)
	.size sat_s1sKK_entry, .-sat_s1sKK_entry


==================== Asm code ====================
2018-03-16 15:56:19.080700043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKK_info:
	.quad	sat_s1sKK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.081444076 UTC

.section .text
.align 8
sat_s1sKJ_entry:
_c1wPQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wPR
_c1wPS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
_c1wPR:
	jmp *-16(%r13)
	.size sat_s1sKJ_entry, .-sat_s1sKJ_entry


==================== Asm code ====================
2018-03-16 15:56:19.08207767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKJ_info:
	.quad	sat_s1sKJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.082795075 UTC

.section .text
.align 8
sat_s1sKM_entry:
_c1wQ1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wQ2
_c1wQ3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1wQ2:
	jmp *-16(%r13)
	.size sat_s1sKM_entry, .-sat_s1sKM_entry


==================== Asm code ====================
2018-03-16 15:56:19.083441562 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKM_info:
	.quad	sat_s1sKM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.084196946 UTC

.section .text
.align 8
sat_s1sKT_entry:
_c1wQa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wQb
_c1wQc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1wQb:
	jmp *-16(%r13)
	.size sat_s1sKT_entry, .-sat_s1sKT_entry


==================== Asm code ====================
2018-03-16 15:56:19.084880024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKT_info:
	.quad	sat_s1sKT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.085664055 UTC

.section .text
.align 8
sat_s1sKV_entry:
_c1wQl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wQm
_c1wQn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1wQm:
	jmp *-16(%r13)
	.size sat_s1sKV_entry, .-sat_s1sKV_entry


==================== Asm code ====================
2018-03-16 15:56:19.087043766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sKV_info:
	.quad	sat_s1sKV_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.087606155 UTC

.section .data.rel.ro
.align 8
.align 1
u1wS8_srtd:
	.quad	S1sVz_srt+296
	.quad	167
	.quad	1
	.quad	0
	.quad	354871676928


==================== Asm code ====================
2018-03-16 15:56:19.088349095 UTC

.section .text
.align 8
.globl GHC.Real.$w^^%^^_entry
.type GHC.Real.$w^^%^^_entry, @object
GHC.Real.$w^^%^^_entry:
_c1wQo:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wQp
_c1wQq:
	leaq block_c1wOS_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wQp:
	leaq GHC.Real.$w^^%^^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.$w^^%^^_entry, .-GHC.Real.$w^^%^^_entry


==================== Asm code ====================
2018-03-16 15:56:19.08896818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.$w^^%^^_info
.type GHC.Real.$w^^%^^_info, @object
GHC.Real.$w^^%^^_info:
	.quad	GHC.Real.$w^^%^^_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869208
	.quad	u1wS8_srtd


==================== Asm code ====================
2018-03-16 15:56:19.089617581 UTC

.section .data.rel.ro
.align 8
.align 1
u1wS9_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:19.090323731 UTC

.section .text
.align 8
_c1wOS:
_c1wOS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wQt
_c1wQs:
	leaq $dNum_s1sKz_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c1wP3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c1wQt:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wOS, .-_c1wOS


==================== Asm code ====================
2018-03-16 15:56:19.090935947 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wOS_info:
	.quad	_c1wOS
	.quad	4
	.quad	-4294967266
	.quad	u1wS9_srtd


==================== Asm code ====================
2018-03-16 15:56:19.091432717 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSa_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:19.092158117 UTC

.section .text
.align 8
_c1wP3:
_c1wP3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wQw
_c1wQv:
	leaq sat_s1sKB_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wPe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
_c1wQw:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wP3, .-_c1wP3


==================== Asm code ====================
2018-03-16 15:56:19.092828388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wP3_info:
	.quad	_c1wP3
	.quad	5
	.quad	-4294967266
	.quad	u1wSa_srtd


==================== Asm code ====================
2018-03-16 15:56:19.093427303 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSb_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:19.094213063 UTC

.section .text
.align 8
_c1wPe:
_c1wPe:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c1wQy
_c1wRW:
	leaq block_c1wRQ_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 48(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	addq $16,%rbp
	jmp GHC.Real.^_entry
_c1wQB:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wQy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wQB
_c1wQA:
	leaq sat_s1sKE_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wPp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c1wPe, .-_c1wPe


==================== Asm code ====================
2018-03-16 15:56:19.094978113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPe_info:
	.quad	_c1wPe
	.quad	6
	.quad	-4294967266
	.quad	u1wSb_srtd


==================== Asm code ====================
2018-03-16 15:56:19.095485783 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSc_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:19.096162995 UTC

.section .text
.align 8
_c1wPp:
_c1wPp:
	movq 8(%rbp),%rax
	leaq block_c1wPt_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c1wPp, .-_c1wPp


==================== Asm code ====================
2018-03-16 15:56:19.096764999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPp_info:
	.quad	_c1wPp
	.quad	6
	.quad	-4294967266
	.quad	u1wSc_srtd


==================== Asm code ====================
2018-03-16 15:56:19.097357173 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSd_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993769984


==================== Asm code ====================
2018-03-16 15:56:19.098071989 UTC

.section .text
.align 8
_c1wPt:
_c1wPt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1wQF
_c1wRN:
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%r14
	leaq GHC.Real.$fEnumRatio1_closure(%rip),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wQF:
	leaq block_c1wPx_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 24(%rbp),%r14
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
	.size _c1wPt, .-_c1wPt


==================== Asm code ====================
2018-03-16 15:56:19.098731093 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPt_info:
	.quad	_c1wPt
	.quad	5
	.quad	-4294967266
	.quad	u1wSd_srtd


==================== Asm code ====================
2018-03-16 15:56:19.099288415 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSe_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79993765888


==================== Asm code ====================
2018-03-16 15:56:19.100050295 UTC

.section .text
.align 8
_c1wPx:
_c1wPx:
	cmpq $1,%rbx
	je _c1wRz
_c1wQI:
	leaq block_c1wPB_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rsi
	movq 24(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c1wRC:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c1wRz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wRC
_c1wRB:
	leaq sat_s1sKT_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wQd_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -24(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	jmp GHC.Real.^_entry
	.size _c1wPx, .-_c1wPx


==================== Asm code ====================
2018-03-16 15:56:19.100749062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPx_info:
	.quad	_c1wPx
	.quad	5
	.quad	-4294967266
	.quad	u1wSe_srtd


==================== Asm code ====================
2018-03-16 15:56:19.101563124 UTC

.section .text
.align 8
_c1wQd:
_c1wQd:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wRF
_c1wRE:
	leaq sat_s1sKV_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wRy_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -24(%r12),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	movq %rbx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Real.^_entry
_c1wRF:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wQd, .-_c1wQd


==================== Asm code ====================
2018-03-16 15:56:19.102197871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wQd_info:
	.quad	_c1wQd
	.quad	517
	.quad	141733920798
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.102854111 UTC

.section .text
.align 8
_c1wRy:
_c1wRy:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wRy, .-_c1wRy


==================== Asm code ====================
2018-03-16 15:56:19.103390904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wRy_info:
	.quad	_c1wRy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.103906298 UTC

.section .data.rel.ro
.align 8
.align 1
u1wSf_srtd:
	.quad	S1sVz_srt+296
	.quad	165
	.quad	1
	.quad	0
	.quad	79456894976


==================== Asm code ====================
2018-03-16 15:56:19.104701498 UTC

.section .text
.align 8
_c1wPB:
_c1wPB:
	cmpq $1,%rbx
	je _c1wRx
_c1wQL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1wQO
_c1wQN:
	leaq sat_s1sKK_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s1sKJ_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wPT_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -48(%r12),%r8
	leaq -16(%r12),%rdi
	movq 16(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	jmp GHC.Real.^_entry
_c1wRx:
	leaq GHC.Real.ratioZeroDenominatorError_closure(%rip),%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c1wQO:
	movq $56,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c1wPB, .-_c1wPB


==================== Asm code ====================
2018-03-16 15:56:19.105487031 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPB_info:
	.quad	_c1wPB
	.quad	5
	.quad	-4294967266
	.quad	u1wSf_srtd


==================== Asm code ====================
2018-03-16 15:56:19.106222703 UTC

.section .text
.align 8
_c1wPT:
_c1wPT:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wQR
_c1wQQ:
	leaq sat_s1sKM_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c1wQJ_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -24(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Real.^_entry
_c1wQR:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wPT, .-_c1wPT


==================== Asm code ====================
2018-03-16 15:56:19.106914302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wPT_info:
	.quad	_c1wPT
	.quad	261
	.quad	158913789982
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.10753929 UTC

.section .text
.align 8
_c1wQJ:
_c1wQJ:
	leaq block_c1wQV_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $16,%rbp
	jmp GHC.Real.even_entry
	.size _c1wQJ, .-_c1wQJ


==================== Asm code ====================
2018-03-16 15:56:19.108144051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wQJ_info:
	.quad	_c1wQJ
	.quad	132
	.quad	4294967326
	.quad	S1sVz_srt+1584


==================== Asm code ====================
2018-03-16 15:56:19.108919433 UTC

.section .text
.align 8
_c1wQV:
_c1wQV:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c1wR7
_c1wRn:
	leaq block_c1wRg_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c1wRg
_c1wRh:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wR7:
	leaq block_c1wR0_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c1wQV, .-_c1wQV


==================== Asm code ====================
2018-03-16 15:56:19.109640524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wQV_info:
	.quad	_c1wQV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.110313711 UTC

.section .text
.align 8
_c1wR0:
_c1wR0:
	movq 8(%rbp),%rax
	leaq block_c1wR4_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c1wR4
_c1wR9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wR0, .-_c1wR0


==================== Asm code ====================
2018-03-16 15:56:19.110921273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wR0_info:
	.quad	_c1wR0
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.111532611 UTC

.section .text
.align 8
_c1wR4:
_c1wR4:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wR4, .-_c1wR4


==================== Asm code ====================
2018-03-16 15:56:19.112093651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wR4_info:
	.quad	_c1wR4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.112802183 UTC

.section .text
.align 8
_c1wRg:
_c1wRg:
	movq 8(%rbp),%rax
	leaq block_c1wRl_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c1wRl
_c1wRp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c1wRg, .-_c1wRg


==================== Asm code ====================
2018-03-16 15:56:19.113484305 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wRg_info:
	.quad	_c1wRg
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.114102712 UTC

.section .text
.align 8
_c1wRl:
_c1wRl:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wRl, .-_c1wRl


==================== Asm code ====================
2018-03-16 15:56:19.115133482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wRl_info:
	.quad	_c1wRl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.115883399 UTC

.section .text
.align 8
_c1wRQ:
_c1wRQ:
	movq 24(%rbp),%rax
	leaq block_c1wRU_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 32(%rbp),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq GHC.Num.$fNumInteger_closure@gotpcrel(%rip),%r14
	movq %rbx,32(%rbp)
	addq $24,%rbp
	jmp GHC.Real.^_entry
	.size _c1wRQ, .-_c1wRQ


==================== Asm code ====================
2018-03-16 15:56:19.116576707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wRQ_info:
	.quad	_c1wRQ
	.quad	132
	.quad	141733920798
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.117857633 UTC

.section .text
.align 8
_c1wRU:
_c1wRU:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c1wRU, .-_c1wRU


==================== Asm code ====================
2018-03-16 15:56:19.118395273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wRU_info:
	.quad	_c1wRU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.122117888 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^^%^^_closure
.type GHC.Real.^^%^^_closure, @object
GHC.Real.^^%^^_closure:
	.quad	GHC.Real.^^%^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:19.122850217 UTC

.section .text
.align 8
.globl GHC.Real.^^%^^_entry
.type GHC.Real.^^%^^_entry, @object
GHC.Real.^^%^^_entry:
_c1wVe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wVk
_c1wVl:
	leaq block_c1wVb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c1wVb
_c1wVc:
	movq (%rbx),%rax
	jmp *(%rax)
_c1wVk:
	leaq GHC.Real.^^%^^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^^%^^_entry, .-GHC.Real.^^%^^_entry


==================== Asm code ====================
2018-03-16 15:56:19.123489406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^^%^^_info
.type GHC.Real.^^%^^_info, @object
GHC.Real.^^%^^_info:
	.quad	GHC.Real.^^%^^_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S1sVz_srt+1624


==================== Asm code ====================
2018-03-16 15:56:19.124154749 UTC

.section .text
.align 8
_c1wVb:
_c1wVb:
	movq 16(%rbp),%rax
	leaq block_c1wVh_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Real.$w^^%^^_entry
	.size _c1wVb, .-_c1wVb


==================== Asm code ====================
2018-03-16 15:56:19.124768385 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wVb_info:
	.quad	_c1wVb
	.quad	2
	.quad	4294967326
	.quad	S1sVz_srt+1624


==================== Asm code ====================
2018-03-16 15:56:19.125710166 UTC

.section .text
.align 8
_c1wVh:
_c1wVh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wVp
_c1wVo:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wVp:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c1wVh, .-_c1wVh


==================== Asm code ====================
2018-03-16 15:56:19.12632801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wVh_info:
	.quad	_c1wVh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:56:19.135203412 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.^^_closure
.type GHC.Real.^^_closure, @object
GHC.Real.^^_closure:
	.quad	GHC.Real.^^_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:56:19.136025414 UTC

.section .text
.align 8
$dNum_s1sLd_entry:
_c1wVT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wVU
_c1wVV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c1wVU:
	jmp *-16(%r13)
	.size $dNum_s1sLd_entry, .-$dNum_s1sLd_entry


==================== Asm code ====================
2018-03-16 15:56:19.13668662 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s1sLd_info:
	.quad	$dNum_s1sLd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.137806238 UTC

.section .text
.align 8
sat_s1sLf_entry:
_c1wW0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wW1
_c1wW2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Real.even1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c1wW1:
	jmp *-16(%r13)
	.size sat_s1sLf_entry, .-sat_s1sLf_entry


==================== Asm code ====================
2018-03-16 15:56:19.138443653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sLf_info:
	.quad	sat_s1sLf_entry
	.quad	1
	.quad	4294967312
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.139187808 UTC

.section .text
.align 8
sat_s1sLi_entry:
_c1wWj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wWk
_c1wWl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c1wWk:
	jmp *-16(%r13)
	.size sat_s1sLi_entry, .-sat_s1sLi_entry


==================== Asm code ====================
2018-03-16 15:56:19.139807998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sLi_info:
	.quad	sat_s1sLi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:56:19.140496699 UTC

.section .text
.align 8
sat_s1sLh_entry:
_c1wWq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wWr
_c1wWs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1wWr:
	jmp *-16(%r13)
	.size sat_s1sLh_entry, .-sat_s1sLh_entry


==================== Asm code ====================
2018-03-16 15:56:19.141108328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sLh_info:
	.quad	sat_s1sLh_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.143197371 UTC

.section .text
.align 8
sat_s1sLj_entry:
_c1wWt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wWu
_c1wWv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1wWx
_c1wWw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_s1sLi_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s1sLh_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -48(%r12),%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Real.^_entry
_c1wWx:
	movq $56,904(%r13)
_c1wWu:
	jmp *-16(%r13)
	.size sat_s1sLj_entry, .-sat_s1sLj_entry


==================== Asm code ====================
2018-03-16 15:56:19.143999709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sLj_info:
	.quad	sat_s1sLj_entry
	.quad	5
	.quad	4294967311
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.14469175 UTC

.section .text
.align 8
sat_s1sLk_entry:
_c1wWE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wWF
_c1wWG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Fractional_entry
_c1wWF:
	jmp *-16(%r13)
	.size sat_s1sLk_entry, .-sat_s1sLk_entry


==================== Asm code ====================
2018-03-16 15:56:19.145335684 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s1sLk_info:
	.quad	sat_s1sLk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:56:19.146053649 UTC

.section .text
.align 8
.globl GHC.Real.^^_entry
.type GHC.Real.^^_entry, @object
GHC.Real.^^_entry:
_c1wWH:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c1wWI
_c1wWJ:
	leaq block_c1wVL_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p1Integral_entry
_c1wWI:
	leaq GHC.Real.^^_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.^^_entry, .-GHC.Real.^^_entry


==================== Asm code ====================
2018-03-16 15:56:19.146774441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.^^_info
.type GHC.Real.^^_info, @object
GHC.Real.^^_info:
	.quad	GHC.Real.^^_entry
	.quad	0
	.quad	8817567858702
	.quad	17179869208
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.147552279 UTC

.section .text
.align 8
_c1wVL:
_c1wVL:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c1wWM
_c1wWL:
	leaq $dNum_s1sLd_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s1sLf_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c1wW3_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c1wWM:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c1wVL, .-_c1wVL


==================== Asm code ====================
2018-03-16 15:56:19.14829869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wVL_info:
	.quad	_c1wVL
	.quad	4
	.quad	21474836510
	.quad	S1sVz_srt+1552


==================== Asm code ====================
2018-03-16 15:56:19.149022681 UTC

.section .text
.align 8
_c1wW3:
_c1wW3:
	movq 8(%rbp),%rax
	leaq block_c1wW7_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.>=_entry@gotpcrel(%rip)
	.size _c1wW3, .-_c1wW3


==================== Asm code ====================
2018-03-16 15:56:19.150720928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wW3_info:
	.quad	_c1wW3
	.quad	6
	.quad	4294967326
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.151719869 UTC

.section .text
.align 8
_c1wW7:
_c1wW7:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c1wWP
_c1wWT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wWW
_c1wWV:
	leaq sat_s1sLk_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	addq $48,%rbp
	jmp GHC.Real.^_entry
_c1wWW:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wWS:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c1wWP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c1wWS
_c1wWR:
	leaq sat_s1sLj_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	leaq -48(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Real.recip_entry
	.size _c1wW7, .-_c1wW7


==================== Asm code ====================
2018-03-16 15:56:19.1526513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c1wW7_info:
	.quad	_c1wW7
	.quad	5
	.quad	4294967326
	.quad	S1sVz_srt+1568


==================== Asm code ====================
2018-03-16 15:56:19.155394514 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Fractional_closure
.type GHC.Real.C:Fractional_closure, @object
GHC.Real.C:Fractional_closure:
	.quad	GHC.Real.C:Fractional_info


==================== Asm code ====================
2018-03-16 15:56:19.156198381 UTC

.section .text
.align 8
GHC.Real.C:Fractional_entry:
_c1wY6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c1wYa
_c1wY9:
	leaq GHC.Real.C:Fractional_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wYa:
	movq $40,904(%r13)
	leaq GHC.Real.C:Fractional_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.C:Fractional_entry, .-GHC.Real.C:Fractional_entry


==================== Asm code ====================
2018-03-16 15:56:19.156852438 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Fractional_info:
	.quad	GHC.Real.C:Fractional_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:56:19.160429009 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Integral_closure
.type GHC.Real.C:Integral_closure, @object
GHC.Real.C:Integral_closure:
	.quad	GHC.Real.C:Integral_info


==================== Asm code ====================
2018-03-16 15:56:19.161232596 UTC

.section .text
.align 8
.globl GHC.Real.C:Integral_slow
.type GHC.Real.C:Integral_slow, @object
GHC.Real.C:Integral_slow:
_c1wYi:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.C:Integral_entry
	.size GHC.Real.C:Integral_slow, .-GHC.Real.C:Integral_slow


==================== Asm code ====================
2018-03-16 15:56:19.162362788 UTC

.section .text
.align 8
GHC.Real.C:Integral_entry:
_c1wYn:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c1wYr
_c1wYq:
	leaq GHC.Real.C:Integral_con_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq (%rbp),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -71(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wYr:
	movq $80,904(%r13)
	leaq GHC.Real.C:Integral_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Real.C:Integral_entry, .-GHC.Real.C:Integral_entry


==================== Asm code ====================
2018-03-16 15:56:19.163125054 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Integral_info:
	.quad	GHC.Real.C:Integral_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	GHC.Real.C:Integral_slow


==================== Asm code ====================
2018-03-16 15:56:19.165825166 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:Real_closure
.type GHC.Real.C:Real_closure, @object
GHC.Real.C:Real_closure:
	.quad	GHC.Real.C:Real_info


==================== Asm code ====================
2018-03-16 15:56:19.166667834 UTC

.section .text
.align 8
GHC.Real.C:Real_entry:
_c1wYJ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c1wYN
_c1wYM:
	leaq GHC.Real.C:Real_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wYN:
	movq $32,904(%r13)
	leaq GHC.Real.C:Real_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.C:Real_entry, .-GHC.Real.C:Real_entry


==================== Asm code ====================
2018-03-16 15:56:19.167297078 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:Real_info:
	.quad	GHC.Real.C:Real_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:56:19.170609626 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.C:RealFrac_closure
.type GHC.Real.C:RealFrac_closure, @object
GHC.Real.C:RealFrac_closure:
	.quad	GHC.Real.C:RealFrac_info


==================== Asm code ====================
2018-03-16 15:56:19.171323673 UTC

.section .text
.align 8
.globl GHC.Real.C:RealFrac_slow
.type GHC.Real.C:RealFrac_slow, @object
GHC.Real.C:RealFrac_slow:
_c1wYV:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Real.C:RealFrac_entry
	.size GHC.Real.C:RealFrac_slow, .-GHC.Real.C:RealFrac_slow


==================== Asm code ====================
2018-03-16 15:56:19.172197493 UTC

.section .text
.align 8
GHC.Real.C:RealFrac_entry:
_c1wZ0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c1wZ4
_c1wZ3:
	leaq GHC.Real.C:RealFrac_con_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -55(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c1wZ4:
	movq $64,904(%r13)
	leaq GHC.Real.C:RealFrac_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Real.C:RealFrac_entry, .-GHC.Real.C:RealFrac_entry


==================== Asm code ====================
2018-03-16 15:56:19.172957315 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.C:RealFrac_info:
	.quad	GHC.Real.C:RealFrac_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Real.C:RealFrac_slow


==================== Asm code ====================
2018-03-16 15:56:19.175622375 UTC

.section .data
.align 8
.align 1
.globl GHC.Real.:%_closure
.type GHC.Real.:%_closure, @object
GHC.Real.:%_closure:
	.quad	GHC.Real.:%_info


==================== Asm code ====================
2018-03-16 15:56:19.176433581 UTC

.section .text
.align 8
GHC.Real.:%_entry:
_c1wZk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c1wZo
_c1wZn:
	leaq GHC.Real.:%_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c1wZo:
	movq $24,904(%r13)
	leaq GHC.Real.:%_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Real.:%_entry, .-GHC.Real.:%_entry


==================== Asm code ====================
2018-03-16 15:56:19.17709111 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Real.:%_info:
	.quad	GHC.Real.:%_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:56:19.17968513 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1wZw_str:
	.asciz "base:GHC.Real.C:Fractional"


==================== Asm code ====================
2018-03-16 15:56:19.180351256 UTC

.section .text
.align 8
.globl GHC.Real.C:Fractional_con_entry
.type GHC.Real.C:Fractional_con_entry, @object
GHC.Real.C:Fractional_con_entry:
_c1wZv:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Fractional_con_entry, .-GHC.Real.C:Fractional_con_entry


==================== Asm code ====================
2018-03-16 15:56:19.18088918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Fractional_con_info
.type GHC.Real.C:Fractional_con_info, @object
GHC.Real.C:Fractional_con_info:
	.quad	GHC.Real.C:Fractional_con_entry
	.quad	4
	.quad	1
	.quad	i1wZw_str


==================== Asm code ====================
2018-03-16 15:56:19.183467559 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1wZD_str:
	.asciz "base:GHC.Real.C:Integral"


==================== Asm code ====================
2018-03-16 15:56:19.184275961 UTC

.section .text
.align 8
.globl GHC.Real.C:Integral_con_entry
.type GHC.Real.C:Integral_con_entry, @object
GHC.Real.C:Integral_con_entry:
_c1wZC:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Integral_con_entry, .-GHC.Real.C:Integral_con_entry


==================== Asm code ====================
2018-03-16 15:56:19.185080183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Integral_con_info
.type GHC.Real.C:Integral_con_info, @object
GHC.Real.C:Integral_con_info:
	.quad	GHC.Real.C:Integral_con_entry
	.quad	9
	.quad	1
	.quad	i1wZD_str


==================== Asm code ====================
2018-03-16 15:56:19.18717262 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1wZK_str:
	.asciz "base:GHC.Real.C:Real"


==================== Asm code ====================
2018-03-16 15:56:19.187778894 UTC

.section .text
.align 8
.globl GHC.Real.C:Real_con_entry
.type GHC.Real.C:Real_con_entry, @object
GHC.Real.C:Real_con_entry:
_c1wZJ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:Real_con_entry, .-GHC.Real.C:Real_con_entry


==================== Asm code ====================
2018-03-16 15:56:19.188342557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:Real_con_info
.type GHC.Real.C:Real_con_info, @object
GHC.Real.C:Real_con_info:
	.quad	GHC.Real.C:Real_con_entry
	.quad	3
	.quad	1
	.quad	i1wZK_str


==================== Asm code ====================
2018-03-16 15:56:19.190455331 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1wZR_str:
	.asciz "base:GHC.Real.C:RealFrac"


==================== Asm code ====================
2018-03-16 15:56:19.191075619 UTC

.section .text
.align 8
.globl GHC.Real.C:RealFrac_con_entry
.type GHC.Real.C:RealFrac_con_entry, @object
GHC.Real.C:RealFrac_con_entry:
_c1wZQ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.C:RealFrac_con_entry, .-GHC.Real.C:RealFrac_con_entry


==================== Asm code ====================
2018-03-16 15:56:19.191652127 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.C:RealFrac_con_info
.type GHC.Real.C:RealFrac_con_info, @object
GHC.Real.C:RealFrac_con_info:
	.quad	GHC.Real.C:RealFrac_con_entry
	.quad	7
	.quad	1
	.quad	i1wZR_str


==================== Asm code ====================
2018-03-16 15:56:19.193663241 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i1wZY_str:
	.asciz "base:GHC.Real.:%"


==================== Asm code ====================
2018-03-16 15:56:19.194256765 UTC

.section .text
.align 8
.globl GHC.Real.:%_con_entry
.type GHC.Real.:%_con_entry, @object
GHC.Real.:%_con_entry:
_c1wZX:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Real.:%_con_entry, .-GHC.Real.:%_con_entry


==================== Asm code ====================
2018-03-16 15:56:19.194820424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Real.:%_con_info
.type GHC.Real.:%_con_info, @object
GHC.Real.:%_con_info:
	.quad	GHC.Real.:%_con_entry
	.quad	2
	.quad	4
	.quad	i1wZY_str


==================== Asm code ====================
2018-03-16 15:56:19.199194243 UTC

.section .data.rel.ro
.align 8
.align 1
S1sVz_srt:
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$fOrdRatio_$s$c<_closure
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio_$s$ccompare_closure
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure
	.quad	GHC.Real.$fOrdRatio_$s$c>_closure
	.quad	GHC.Real.$fOrdRatio_$s$cmin_closure
	.quad	GHC.Real.$fOrdRatio_$s$cmax_closure
	.quad	sat_s1sfy_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fFractionalRatio_$s$csignum_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromInteger_closure
	.quad	GHC.Real.$fEnumRatio_$ctoRational_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.$dmfloor_closure
	.quad	GHC.Real.$dmceiling_closure
	.quad	GHC.Real.$dmrecip_closure
	.quad	GHC.Real.$dmdivMod_closure
	.quad	GHC.Exception.divZeroException_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.$fIntegralInt_$cmod_closure
	.quad	GHC.Real.$fIntegralInt_$crem_closure
	.quad	GHC.Real.$fIntegralInteger_$cquot_closure
	.quad	GHC.Real.$fIntegralInteger_$crem_closure
	.quad	GHC.Integer.Type.divInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cdiv_closure
	.quad	GHC.Integer.Type.modInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cmod_closure
	.quad	GHC.Real.$fIntegralInteger_$cquotRem_closure
	.quad	GHC.Integer.Type.divModInteger_closure
	.quad	GHC.Real.$fIntegralInteger_$cdivMod_closure
	.quad	GHC.Real.$fIntegralWord_$cquot_closure
	.quad	GHC.Real.$fIntegralWord_$crem_closure
	.quad	GHC.Real.$fIntegralWord_$cquotRem_closure
	.quad	GHC.Real.$fIntegralWord_$cdivMod_closure
	.quad	GHC.Exception.ratioZeroDenomException_closure
	.quad	GHC.Real.ratioZeroDenominatorError_closure
	.quad	GHC.Real.$fFractionalRatio_$s$crecip_closure
	.quad	GHC.Exception.overflowException_closure
	.quad	GHC.Real.$fIntegralInt_$cdivMod_closure
	.quad	lvl_r1j38_closure
	.quad	GHC.Real.$fIntegralInt_$cquotRem_closure
	.quad	GHC.Real.overflowError_closure
	.quad	GHC.Real.$fIntegralInt_$cdiv_closure
	.quad	GHC.Real.$w$cdiv_closure
	.quad	GHC.Real.$fIntegralInt_$cquot_closure
	.quad	GHC.Real.$wgcd'_closure
	.quad	lvl2_r1j3a_closure
	.quad	GHC.Real.$fEnumRatio_gcd'_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.$w$sreduce_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.reduce_$sreduce_closure
	.quad	GHC.Real.$fRealWord_$ctoRational_closure
	.quad	GHC.Real.$fFractionalRatio_$s$c*_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.Real.$w$s$c-_closure
	.quad	GHC.Real.$fEnumRatio_$s$c-_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$fEnumRatio_$s$c+_closure
	.quad	GHC.Real.$w$s$cfromRational_closure
	.quad	GHC.Real.$fFractionalRatio_$s$cfromRational_closure
	.quad	GHC.Real.$w$s$c/_closure
	.quad	GHC.Real.$fFractionalRatio_$s$c/_closure
	.quad	GHC.Real.$w$snumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Real.numericEnumFrom_closure
	.quad	sat_s1soJ_closure
	.quad	GHC.Real.even2_closure
	.quad	GHC.Real.$fEnumRatio2_closure
	.quad	GHC.Real.$fEnumRatio_$s$c<=_closure
	.quad	GHC.Real.$w$snumericEnumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromTo_closure
	.quad	GHC.Real.numericEnumFromTo_closure
	.quad	GHC.Real.$w$snumericEnumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$s$c>=_closure
	.quad	GHC.Real.$w$snumericEnumFromThenTo_closure
	.quad	GHC.Real.$fEnumRatio_$snumericEnumFromThenTo_closure
	.quad	GHC.Real.numericEnumFromThenTo_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.showSigned_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Real.odd_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	lvl3_r1j3b_closure
	.quad	GHC.Real.$dmround_closure
	.quad	GHC.Real.$fRealFracRatio1_closure
	.quad	GHC.Real.integralEnumFrom_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.integralEnumFromThen_closure
	.quad	GHC.Real.integralEnumFromTo_closure
	.quad	GHC.Real.integralEnumFromThenTo_closure
	.quad	GHC.Real.$w$csignum_closure
	.quad	GHC.Real.$fNumRatio_$csignum_closure
	.quad	GHC.Real.$w$cfromInteger_closure
	.quad	GHC.Real.$fNumRatio_$cfromInteger_closure
	.quad	GHC.Real.$w$crecip_closure
	.quad	GHC.Real.$fFractionalRatio_$crecip_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.$w$s$cproperFraction_closure
	.quad	GHC.Real.$fEnumRatio_$s$cproperFraction_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.$wreduce_closure
	.quad	GHC.Real.reduce_closure
	.quad	GHC.Real.%_$s%_closure
	.quad	GHC.Real.$w$s$cfromRational_closure
	.quad	GHC.Real.$w%_closure
	.quad	GHC.Real.%_closure
	.quad	GHC.Real.$w$c/_closure
	.quad	GHC.Real.$fFractionalRatio_$c/_closure
	.quad	GHC.Real.$w$cfromRational_closure
	.quad	GHC.Real.$fFractionalRatio_$cfromRational_closure
	.quad	GHC.Real.$w$c+_closure
	.quad	GHC.Real.$fNumRatio_$c+_closure
	.quad	GHC.Real.$w$c-_closure
	.quad	GHC.Real.$fNumRatio_$c-_closure
	.quad	GHC.Real.$w$c*_closure
	.quad	GHC.Real.$fNumRatio_$c*_closure
	.quad	GHC.Real.$fNumRatio_closure
	.quad	GHC.Real.$fEnumRatio_$s$csucc_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$w$s$c+_closure
	.quad	GHC.Real.$fEnumRatio_$csucc_closure
	.quad	GHC.Real.$fEnumRatio_$s$cpred_closure
	.quad	GHC.Real.$fEnumRatio_$cpred_closure
	.quad	GHC.Real.$fFractionalRatio_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
	.quad	GHC.Real.$fRealRatio_closure
	.quad	GHC.Real.$w$s$cceiling_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cceiling_closure
	.quad	GHC.Real.$w$cceiling_closure
	.quad	GHC.Real.$fRealFracRatio_$cceiling_closure
	.quad	GHC.Real.$w$s$cfloor_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cfloor_closure
	.quad	GHC.Real.$w$cfloor_closure
	.quad	GHC.Real.$fRealFracRatio_$cfloor_closure
	.quad	sat_s1sCJ_closure
	.quad	GHC.Real.$w$s$cround_closure
	.quad	GHC.Real.$fRealFracRatio2_closure
	.quad	GHC.Real.$fRealFracRatio_$s$cround_closure
	.quad	GHC.Real.$w$cround_closure
	.quad	GHC.Real.$fRealFracRatio_$cround_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.$fRealFracRatio_$s$ctruncate_closure
	.quad	GHC.Real.$fRealFracRatio_closure
	.quad	g_r1j3N_closure
	.quad	GHC.Real.^_f_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Real.^_$s^_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$w$s$cfromEnum_closure
	.quad	GHC.Real.$fEnumRatio_$s$cfromEnum_closure
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.Real.$w$s$cshowsPrec_closure
	.quad	GHC.Real.$fShowRatio_$s$cshowsPrec_closure
	.quad	GHC.Real.$fShowRatio1_closure
	.quad	GHC.Real.$w$s$cshow_closure
	.quad	GHC.Real.$fShowRatio_$s$cshow_closure
	.quad	GHC.Real.$fIntegralWord_closure
	.quad	GHC.Real.$w$slcm_closure
	.quad	GHC.Real.lcm_$slcm_closure
	.quad	GHC.Real.$w$slcm1_closure
	.quad	GHC.Real.lcm_$slcm1_closure
	.quad	GHC.Real.gcd_closure
	.quad	GHC.Real.lcm_closure
	.quad	GHC.Real.$w$ctoEnum_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.$fEnumRatio_$ctoEnum_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThenTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromTo_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFromThen_closure
	.quad	GHC.Real.$fEnumRatio_$cenumFrom_closure
	.quad	GHC.Real.$fEnumRatio_$cpred_closure
	.quad	GHC.Real.$fEnumRatio_$csucc_closure
	.quad	GHC.Real.$fEnumRatio_closure
	.quad	GHC.Real.^_$s^2_closure
	.quad	GHC.Real.^2_closure
	.quad	$wg1_r1j3Q_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Real.^_f1_closure
	.quad	GHC.Real.^_$s^1_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Real.even1_closure
	.quad	GHC.Real.even2_closure
	.quad	GHC.Real.^_closure
	.quad	lvl7_r1j3S_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Real.^%^_closure
	.quad	GHC.Real.$w^%^_closure
	.quad	GHC.Num.$fNumInteger_closure
	.quad	lvl6_r1j3R_closure
	.quad	GHC.Real.$w^^%^^_closure
	.quad	GHC.Real.^^%^^_closure
	.quad	GHC.Real.^^_closure

