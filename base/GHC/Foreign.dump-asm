
==================== Asm code ====================
2018-03-16 16:04:02.789634059 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Foreign.$trModule4_bytes
.type GHC.Foreign.$trModule4_bytes, @object
GHC.Foreign.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:02.791656797 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule3_closure
.type GHC.Foreign.$trModule3_closure, @object
GHC.Foreign.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Foreign.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:02.793750355 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Foreign.$trModule2_bytes
.type GHC.Foreign.$trModule2_bytes, @object
GHC.Foreign.$trModule2_bytes:
	.asciz "GHC.Foreign"


==================== Asm code ====================
2018-03-16 16:04:02.795623653 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule1_closure
.type GHC.Foreign.$trModule1_closure, @object
GHC.Foreign.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Foreign.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:02.797685442 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule_closure
.type GHC.Foreign.$trModule_closure, @object
GHC.Foreign.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Foreign.$trModule3_closure+1
	.quad	GHC.Foreign.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:02.828296834 UTC

.section .data
.align 8
.align 1
$wpeekCStringLen_r8TNn_closure:
	.quad	$wpeekCStringLen_r8TNn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:02.829464475 UTC

.section .text
.align 8
sat_s8TOF_entry:
_c8V5g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8V5h
_c8V5i:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8V5k
_c8V5j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8V5k:
	movq $40,904(%r13)
_c8V5h:
	jmp *-16(%r13)
	.size sat_s8TOF_entry, .-sat_s8TOF_entry


==================== Asm code ====================
2018-03-16 16:04:02.830233342 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TOF_info:
	.quad	sat_s8TOF_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:02.830992959 UTC

.section .text
.align 8
sat_s8TOW_entry:
_c8V5t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8V5u
_c8V5v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8V5u:
	jmp *-16(%r13)
	.size sat_s8TOW_entry, .-sat_s8TOW_entry


==================== Asm code ====================
2018-03-16 16:04:02.831719247 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TOW_info:
	.quad	sat_s8TOW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:02.832565334 UTC

.section .text
.align 8
$wgo_s8TNW_entry:
_c8V5w:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8V5x
_c8V5y:
	movq $block_c8V3V_info,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8V3V
_c8V3W:
	movq (%rbx),%rax
	jmp *(%rax)
_c8V5x:
	jmp *-8(%r13)
	.size $wgo_s8TNW_entry, .-$wgo_s8TNW_entry


==================== Asm code ====================
2018-03-16 16:04:02.833353563 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8TNW_info:
	.quad	$wgo_s8TNW_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:02.834091746 UTC

.section .text
.align 8
_c8V3V:
_c8V3V:
	movq 8(%rbp),%rax
	movq $block_c8V40_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8V3V, .-_c8V3V


==================== Asm code ====================
2018-03-16 16:04:02.834777899 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3V_info:
	.quad	_c8V3V
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.835462718 UTC

.section .text
.align 8
_c8V40:
_c8V40:
	movq $block_c8V42_info,(%rbp)
	testb $7,%bl
	jne _c8V42
_c8V43:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V40, .-_c8V40


==================== Asm code ====================
2018-03-16 16:04:02.836153533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V40_info:
	.quad	_c8V40
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.836911568 UTC

.section .text
.align 8
_c8V42:
_c8V42:
	movq $block_c8V47_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8V47
_c8V48:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V42, .-_c8V42


==================== Asm code ====================
2018-03-16 16:04:02.837621392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V42_info:
	.quad	_c8V42
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.838478356 UTC

.section .text
.align 8
_c8V47:
_c8V47:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8V6t
_c8V5W:
	movq $block_c8V5D_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8V5D
_c8V5X:
	movq (%rbx),%rax
	jmp *(%rax)
_c8V6t:
	movq $block_c8V4F_info,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8V4F
_c8V4G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V47, .-_c8V47


==================== Asm code ====================
2018-03-16 16:04:02.83924377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V47_info:
	.quad	_c8V47
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.840155885 UTC

.section .text
.align 8
_c8V4F:
_c8V4F:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c8V6L
_c8V6M:
	movl $GHC.Types.[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8V6L:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8V4X
	.size _c8V4F, .-_c8V4F


==================== Asm code ====================
2018-03-16 16:04:02.840957984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V4F_info:
	.quad	_c8V4F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.841948468 UTC

.section .text
.align 8
_c8V4X:
_c8V4X:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8V6G
_c8V6F:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c8V6I
_c8V6J:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c8V6w
_c8V6I:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c8V4X
_c8V6G:
	movq $40,904(%r13)
	movq $block_c8V4X_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8V4X, .-_c8V4X


==================== Asm code ====================
2018-03-16 16:04:02.842908913 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V4X_info:
	.quad	_c8V4X
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.844054006 UTC

.section .text
.align 8
_c8V6w:
_c8V6w:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8V6D
_c8V6C:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8V6D:
	movq $40,904(%r13)
	movq $block_c8V6v_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _c8V6w, .-_c8V6w


==================== Asm code ====================
2018-03-16 16:04:02.845651638 UTC

.section .text
.align 8
_c8V6v:
_c8V6v:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8V6w
	.size _c8V6v, .-_c8V6v


==================== Asm code ====================
2018-03-16 16:04:02.846222958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V6v_info:
	.quad	_c8V6v
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.846959352 UTC

.section .text
.align 8
_c8V5D:
_c8V5D:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8V6n
_c8V6b:
	movq 16(%rbp),%rbx
	movq $block_c8V61_info,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_c8V6n:
	movq $block_c8V6l_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8V6l
_c8V6o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V5D, .-_c8V5D


==================== Asm code ====================
2018-03-16 16:04:02.847569396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V5D_info:
	.quad	_c8V5D
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.848219046 UTC

.section .text
.align 8
_c8V6l:
_c8V6l:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s8TOk
	.size _c8V6l, .-_c8V6l


==================== Asm code ====================
2018-03-16 16:04:02.848820072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V6l_info:
	.quad	_c8V6l
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.849506619 UTC

.section .text
.align 8
_c8V61:
_c8V61:
	movq $block_c8V63_info,(%rbp)
	testb $7,%bl
	jne _c8V63
_c8V64:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V61, .-_c8V61


==================== Asm code ====================
2018-03-16 16:04:02.850110407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V61_info:
	.quad	_c8V61
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.850779974 UTC

.section .text
.align 8
_c8V63:
_c8V63:
	movq $block_c8V68_info,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8V68
_c8V6e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V63, .-_c8V63


==================== Asm code ====================
2018-03-16 16:04:02.851370964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V63_info:
	.quad	_c8V63
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.852019176 UTC

.section .text
.align 8
_c8V68:
_c8V68:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s8TOk
	.size _c8V68, .-_c8V68


==================== Asm code ====================
2018-03-16 16:04:02.852619394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V68_info:
	.quad	_c8V68
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.853375721 UTC

.section .text
.align 8
_s8TOk:
_s8TOk:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c8V5Q
_c8V5R:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	movq $block_c8V5n_info,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s8TNW_entry
_c8V5Q:
	movq $GHC.Types.[]_closure+1,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c8V4x
	.size _s8TOk, .-_s8TOk


==================== Asm code ====================
2018-03-16 16:04:02.854330873 UTC

.section .text
.align 8
_c8V4x:
_c8V4x:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8V5L
_c8V5K:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c8V5N
_c8V5O:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	movq $block_c8V58_info,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s8TNW_entry
_c8V5N:
	movl (%rax,%rcx,4),%eax
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8V4x
_c8V5L:
	movq $40,904(%r13)
	movq $block_c8V4x_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8V4x, .-_c8V4x


==================== Asm code ====================
2018-03-16 16:04:02.855112195 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V4x_info:
	.quad	_c8V4x
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.85577461 UTC

.section .text
.align 8
_c8V58:
_c8V58:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8V5I
_c8V5H:
	movq $sat_s8TOF_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8V5I:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8V58, .-_c8V58


==================== Asm code ====================
2018-03-16 16:04:02.856395814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V58_info:
	.quad	_c8V58
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.857022671 UTC

.section .text
.align 8
_c8V5n:
_c8V5n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8V5U
_c8V5T:
	movq $sat_s8TOW_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8V5U:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8V5n, .-_c8V5n


==================== Asm code ====================
2018-03-16 16:04:02.858666887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V5n_info:
	.quad	_c8V5n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.859460964 UTC

.section .text
.align 8
sat_s8TPR_entry:
_c8V7g:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8V7h
_c8V7i:
	movq $block_c8V3k_info,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8V3k
_c8V3l:
	movq (%rbx),%rax
	jmp *(%rax)
_c8V7h:
	jmp *-8(%r13)
	.size sat_s8TPR_entry, .-sat_s8TPR_entry


==================== Asm code ====================
2018-03-16 16:04:02.860247893 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TPR_info:
	.quad	sat_s8TPR_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.86100262 UTC

.section .text
.align 8
_c8V3k:
_c8V3k:
	movq $block_c8V3p_info,-8(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newMutVar#
	.size _c8V3k, .-_c8V3k


==================== Asm code ====================
2018-03-16 16:04:02.861678646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3k_info:
	.quad	_c8V3k
	.quad	2
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.862412293 UTC

.section .text
.align 8
_c8V3p:
_c8V3p:
	movq $block_c8V3r_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8V3r
_c8V3s:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8V3p, .-_c8V3p


==================== Asm code ====================
2018-03-16 16:04:02.863092004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3p_info:
	.quad	_c8V3p
	.quad	67
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.863932116 UTC

.section .text
.align 8
_c8V3r:
_c8V3r:
	movq 7(%rbx),%rax
	cmpq $1,%rax
	jg _c8V7z
_c8V7A:
	movl $1,%ebx
_s8TNJ:
	movq %rbx,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c8V7q
_c8V7v:
	movl $GHC.ForeignPtr.mallocForeignPtrBytes2_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
_c8V7z:
	movq %rax,%rbx
	jmp _s8TNJ
_c8V7q:
	movq $block_c8V3H_info,-24(%rbp)
	movq %rbx,%rdx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp stg_newMutVar#
	.size _c8V3r, .-_c8V3r


==================== Asm code ====================
2018-03-16 16:04:02.864688409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3r_info:
	.quad	_c8V3r
	.quad	67
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.865478684 UTC

.section .text
.align 8
_c8V3H:
_c8V3H:
	movq $block_c8V3J_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_newPinnedByteArray#
	.size _c8V3H, .-_c8V3H


==================== Asm code ====================
2018-03-16 16:04:02.86613166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3H_info:
	.quad	_c8V3H
	.quad	966
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.86704708 UTC

.section .text
.align 8
_c8V3J:
_c8V3J:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c8V7u
_c8V7t:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	movq $$wgo_s8TNW_info,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s8TNW_entry
_c8V7u:
	movq $176,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8V3J, .-_c8V3J


==================== Asm code ====================
2018-03-16 16:04:02.867946525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3J_info:
	.quad	_c8V3J
	.quad	838
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.868758723 UTC

.section .text
.align 8
$wpeekCStringLen_r8TNn_entry:
_c8V7D:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8V7E
_c8V7F:
	movq $block_c8V3a_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8V3a
_c8V3b:
	movq (%rbx),%rax
	jmp *(%rax)
_c8V7E:
	movl $$wpeekCStringLen_r8TNn_closure,%ebx
	jmp *-8(%r13)
	.size $wpeekCStringLen_r8TNn_entry, .-$wpeekCStringLen_r8TNn_entry


==================== Asm code ====================
2018-03-16 16:04:02.869773417 UTC

.section .data.rel.ro
.align 8
.align 1
$wpeekCStringLen_r8TNn_info:
	.quad	$wpeekCStringLen_r8TNn_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.870627335 UTC

.section .text
.align 8
_c8V3a:
_c8V3a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8V7I
_c8V7H:
	movq 15(%rbx),%rax
	movq $sat_s8TPR_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.bracket1_entry
_c8V7I:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8V3a, .-_c8V3a


==================== Asm code ====================
2018-03-16 16:04:02.871387424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8V3a_info:
	.quad	_c8V3a
	.quad	2
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:02.875457931 UTC

.section .data
.align 8
.align 1
peekCStringLen1_r8TNo_closure:
	.quad	peekCStringLen1_r8TNo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:02.876234433 UTC

.section .text
.align 8
peekCStringLen1_r8TNo_entry:
_c8Vad:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vae
_c8Vaf:
	movq $block_c8Vaa_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Vaa
_c8Vab:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vae:
	movl $peekCStringLen1_r8TNo_closure,%ebx
	jmp *-8(%r13)
	.size peekCStringLen1_r8TNo_entry, .-peekCStringLen1_r8TNo_entry


==================== Asm code ====================
2018-03-16 16:04:02.876941422 UTC

.section .data.rel.ro
.align 8
.align 1
peekCStringLen1_r8TNo_info:
	.quad	peekCStringLen1_r8TNo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8U6c_srt+8


==================== Asm code ====================
2018-03-16 16:04:02.877629973 UTC

.section .text
.align 8
_c8Vaa:
_c8Vaa:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp $wpeekCStringLen_r8TNn_entry
	.size _c8Vaa, .-_c8Vaa


==================== Asm code ====================
2018-03-16 16:04:02.878325118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vaa_info:
	.quad	_c8Vaa
	.quad	1
	.quad	4294967326
	.quad	S8U6c_srt+8


==================== Asm code ====================
2018-03-16 16:04:02.880592605 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCStringLen_closure
.type GHC.Foreign.peekCStringLen_closure, @object
GHC.Foreign.peekCStringLen_closure:
	.quad	GHC.Foreign.peekCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:02.881230715 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCStringLen_entry
.type GHC.Foreign.peekCStringLen_entry, @object
GHC.Foreign.peekCStringLen_entry:
_c8Vax:
	jmp peekCStringLen1_r8TNo_entry
	.size GHC.Foreign.peekCStringLen_entry, .-GHC.Foreign.peekCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:02.881894375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCStringLen_info
.type GHC.Foreign.peekCStringLen_info, @object
GHC.Foreign.peekCStringLen_info:
	.quad	GHC.Foreign.peekCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8U6c_srt+16


==================== Asm code ====================
2018-03-16 16:04:02.896844406 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$wtryFillBufferAndCall_closure
.type GHC.Foreign.$wtryFillBufferAndCall_closure, @object
GHC.Foreign.$wtryFillBufferAndCall_closure:
	.quad	GHC.Foreign.$wtryFillBufferAndCall_info


==================== Asm code ====================
2018-03-16 16:04:02.897659756 UTC

.section .text
.align 8
.globl GHC.Foreign.$wtryFillBufferAndCall_slow
.type GHC.Foreign.$wtryFillBufferAndCall_slow, @object
GHC.Foreign.$wtryFillBufferAndCall_slow:
_c8VaF:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size GHC.Foreign.$wtryFillBufferAndCall_slow, .-GHC.Foreign.$wtryFillBufferAndCall_slow


==================== Asm code ====================
2018-03-16 16:04:02.898506815 UTC

.section .text
.align 8
sat_s8TRg_entry:
_c8VaS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VaX
_c8VaY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c8VaP_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8VaP
_c8VaQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VaX:
	jmp *-16(%r13)
	.size sat_s8TRg_entry, .-sat_s8TRg_entry


==================== Asm code ====================
2018-03-16 16:04:02.899204143 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TRg_info:
	.quad	sat_s8TRg_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:02.900029538 UTC

.section .text
.align 8
_c8VaP:
_c8VaP:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8Vb1
_c8Vb0:
	movq 7(%rbx),%rax
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Vb1:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VaP, .-_c8VaP


==================== Asm code ====================
2018-03-16 16:04:02.900716488 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VaP_info:
	.quad	_c8VaP
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.901532823 UTC

.section .text
.align 8
.globl GHC.Foreign.$wtryFillBufferAndCall_entry
.type GHC.Foreign.$wtryFillBufferAndCall_entry, @object
GHC.Foreign.$wtryFillBufferAndCall_entry:
_c8Vb7:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vb8
_c8Vb9:
	movq $block_c8VaJ_info,-48(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp stg_newMutVar#
_c8Vb8:
	movl $GHC.Foreign.$wtryFillBufferAndCall_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Foreign.$wtryFillBufferAndCall_entry, .-GHC.Foreign.$wtryFillBufferAndCall_entry


==================== Asm code ====================
2018-03-16 16:04:02.902266968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.$wtryFillBufferAndCall_info
.type GHC.Foreign.$wtryFillBufferAndCall_info, @object
GHC.Foreign.$wtryFillBufferAndCall_info:
	.quad	GHC.Foreign.$wtryFillBufferAndCall_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	1031
	.quad	GHC.Foreign.$wtryFillBufferAndCall_slow


==================== Asm code ====================
2018-03-16 16:04:02.903016978 UTC

.section .text
.align 8
_c8VaJ:
_c8VaJ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8Vbc
_c8Vbb:
	movq $sat_s8TRg_info,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,40(%rbp)
	movq 32(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8VcH
_c8Vbc:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VaJ, .-_c8VaJ


==================== Asm code ====================
2018-03-16 16:04:02.904342269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VaJ_info:
	.quad	_c8VaJ
	.quad	1031
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.904963274 UTC

.section .text
.align 8
_c8VcH:
_c8VcH:
	movq $block_c8VcJ_info,-8(%rbp)
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8VcH, .-_c8VcH


==================== Asm code ====================
2018-03-16 16:04:02.906008636 UTC

.section .text
.align 8
_c8VcJ:
_c8VcJ:
	movq $block_c8VcL_info,(%rbp)
	testb $7,%bl
	jne _c8VcL
_c8VcM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VcJ, .-_c8VcJ


==================== Asm code ====================
2018-03-16 16:04:02.906597921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VcJ_info:
	.quad	_c8VcJ
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.907314765 UTC

.section .text
.align 8
_c8VcL:
_c8VcL:
	movq $block_c8VcQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,40(%rbp)
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c8VcQ
_c8VcU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VcL, .-_c8VcL


==================== Asm code ====================
2018-03-16 16:04:02.907918512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VcL_info:
	.quad	_c8VcL
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.908667501 UTC

.section .text
.align 8
_c8VcQ:
_c8VcQ:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8Vdp
_c8Vd4:
	movq $block_c8Vd2_info,(%rbp)
	movq %rbx,%rax
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c8Vd2
_c8Vd5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vdp:
	movq $block_c8Vbi_info,16(%rbp)
	movq 24(%rbp),%rbx
	movq 40(%rbp),%rax
	movq %rax,48(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _c8Vbi
_c8Vca:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VcQ, .-_c8VcQ


==================== Asm code ====================
2018-03-16 16:04:02.909382457 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VcQ_info:
	.quad	_c8VcQ
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.910096876 UTC

.section .text
.align 8
_c8Vbi:
_c8Vbi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8Vdw
_c8Vcl:
	movq $block_c8Vcj_info,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _c8Vcj
_c8Vcm:
	movq (%rbx),%rax
	jmp *(%rax)
_u8Vdw:
	addq $8,%rbp
	jmp _s8TQc
	.size _c8Vbi, .-_c8Vbi


==================== Asm code ====================
2018-03-16 16:04:02.910886636 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vbi_info:
	.quad	_c8Vbi
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.91181958 UTC

.section .text
.align 8
_c8Vcj:
_c8Vcj:
	leaq 47(%rbx),%rax
	movq 31(%rbx),%rbx
	subq (%rax),%rbx
	testq %rbx,%rbx
	je _u8Vdx
_u8Vdy:
	addq $8,%rbp
	jmp _s8TQc
_u8Vdx:
	addq $48,%rbp
	jmp _c8VcC
	.size _c8Vcj, .-_c8Vcj


==================== Asm code ====================
2018-03-16 16:04:02.912656658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vcj_info:
	.quad	_c8Vcj
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.913581118 UTC

.section .text
.align 8
_s8TQc:
_s8TQc:
	movq $block_c8Vbn_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vbn
_c8Vbp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s8TQc, .-_s8TQc


==================== Asm code ====================
2018-03-16 16:04:02.914554286 UTC

.section .text
.align 8
_c8Vbn:
_c8Vbn:
	movq $block_c8Vbt_info,(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rbp),%rbx
	movq %rsi,8(%rbp)
	movq %rdx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	testb $7,%bl
	jne _c8Vbt
_c8Vbv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vbn, .-_c8Vbn


==================== Asm code ====================
2018-03-16 16:04:02.915478251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vbn_info:
	.quad	_c8Vbn
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.916789307 UTC

.section .text
.align 8
_c8Vbt:
_c8Vbt:
	movq 40(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c8VbK
_c8Vc3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Vc6
_c8Vc5:
	movb $0,(%rcx,%rsi,1)
	movq $GHC.Types.I#_con_info,-48(%r12)
	subq %rdx,%rsi
	movq %rsi,-40(%r12)
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq %rcx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c8VbZ_info,16(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
_c8Vc6:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8VbK:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Vc6
_c8VbM:
	movq $GHC.Types.I#_con_info,-48(%r12)
	subq %rdx,%rsi
	movq %rsi,-40(%r12)
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq %rcx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c8VbF_info,16(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
	.size _c8Vbt, .-_c8Vbt


==================== Asm code ====================
2018-03-16 16:04:02.918071657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vbt_info:
	.quad	_c8Vbt
	.quad	709
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.919035767 UTC

.section .text
.align 8
_c8VbF:
_c8VbF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8VbQ
_c8VbP:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VbQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VbF, .-_c8VbF


==================== Asm code ====================
2018-03-16 16:04:02.919930487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VbF_info:
	.quad	_c8VbF
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.920894035 UTC

.section .text
.align 8
_c8VbZ:
_c8VbZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Vc9
_c8Vc8:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Vc9:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VbZ, .-_c8VbZ


==================== Asm code ====================
2018-03-16 16:04:02.922079212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VbZ_info:
	.quad	_c8VbZ
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.922886359 UTC

.section .text
.align 8
_c8Vd2:
_c8Vd2:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8Vdu
_c8Vde:
	movq $block_c8Vd9_info,(%rbp)
	movq 40(%rbp),%rsi
	movq 48(%rbp),%r14
	movq 16(%rbp),%rbx
	jmp stg_ap_ppv_fast
_u8Vdu:
	addq $64,%rbp
	jmp _c8VcC
	.size _c8Vd2, .-_c8Vd2


==================== Asm code ====================
2018-03-16 16:04:02.923674439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vd2_info:
	.quad	_c8Vd2
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.924481249 UTC

.section .text
.align 8
_c8VcC:
_c8VcC:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8VcC, .-_c8VcC


==================== Asm code ====================
2018-03-16 16:04:02.925408275 UTC

.section .text
.align 8
_c8Vd9:
_c8Vd9:
	movq $block_c8Vdb_info,(%rbp)
	testb $7,%bl
	jne _c8Vdb
_c8Vdg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vd9, .-_c8Vd9


==================== Asm code ====================
2018-03-16 16:04:02.926160167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vd9_info:
	.quad	_c8Vd9
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.926958832 UTC

.section .text
.align 8
_c8Vdb:
_c8Vdb:
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c8VcH
	.size _c8Vdb, .-_c8Vdb


==================== Asm code ====================
2018-03-16 16:04:02.927443857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vdb_info:
	.quad	_c8Vdb
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.932071284 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCStringLen1_closure
.type GHC.Foreign.newCStringLen1_closure, @object
GHC.Foreign.newCStringLen1_closure:
	.quad	GHC.Foreign.newCStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:02.933092696 UTC

.section .text
.align 8
.globl GHC.Foreign.newCStringLen1_entry
.type GHC.Foreign.newCStringLen1_entry, @object
GHC.Foreign.newCStringLen1_entry:
_c8Vfw:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VfA
_c8VfB:
	movq $block_c8Vft_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Vft
_c8Vfu:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VfA:
	movl $GHC.Foreign.newCStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.newCStringLen1_entry, .-GHC.Foreign.newCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:02.934562067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCStringLen1_info
.type GHC.Foreign.newCStringLen1_info, @object
GHC.Foreign.newCStringLen1_info:
	.quad	GHC.Foreign.newCStringLen1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:04:02.935584651 UTC

.section .text
.align 8
_c8Vft:
_c8Vft:
	movq $block_c8Vfz_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vfz
_c8VfD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vft, .-_c8Vft


==================== Asm code ====================
2018-03-16 16:04:02.936433645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vft_info:
	.quad	_c8Vft
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.937916595 UTC

.section .text
.align 8
_c8Vfz:
_c8Vfz:
	movq 7(%rbx),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size _c8Vfz, .-_c8Vfz


==================== Asm code ====================
2018-03-16 16:04:02.938735313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vfz_info:
	.quad	_c8Vfz
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.950950711 UTC

.section .data
.align 8
.align 1
withEncodedCString1_r8TNp_closure:
	.quad	withEncodedCString1_r8TNp_info


==================== Asm code ====================
2018-03-16 16:04:02.951832674 UTC

.section .text
.align 8
$wgo_s8TRX_entry:
_c8VgG:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VgH
_c8VgI:
	movq $block_c8VgB_info,-56(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rsi
	movq 30(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-56,%rbp
	jmp stg_newPinnedByteArray#
_c8VgH:
	jmp *-8(%r13)
	.size $wgo_s8TRX_entry, .-$wgo_s8TRX_entry


==================== Asm code ====================
2018-03-16 16:04:02.952522888 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8TRX_info:
	.quad	$wgo_s8TRX_entry
	.quad	4
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:02.953191298 UTC

.section .text
.align 8
_c8VgB:
_c8VgB:
	movq $block_c8VgD_info,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c8VgD
_c8VgE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VgB, .-_c8VgB


==================== Asm code ====================
2018-03-16 16:04:02.953809356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VgB_info:
	.quad	_c8VgB
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.954579488 UTC

.section .text
.align 8
_c8VgD:
_c8VgD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8VgO
_c8VgN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 48(%rbp),%rcx
	movq %rcx,(%r12)
	movq 16(%rbp),%rcx
	movq $block_c8VgT_info,16(%rbp)
	movq 24(%rbp),%rdx
	leaq 16(%rdx),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
_c8VgO:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VgD, .-_c8VgD


==================== Asm code ====================
2018-03-16 16:04:02.955225203 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VgD_info:
	.quad	_c8VgD
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.955896268 UTC

.section .text
.align 8
_c8VgT:
_c8VgT:
	movq $block_c8VgV_info,(%rbp)
	testb $7,%bl
	jne _c8VgV
_c8VgX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VgT, .-_c8VgT


==================== Asm code ====================
2018-03-16 16:04:02.956468247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VgT_info:
	.quad	_c8VgT
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.957200799 UTC

.section .text
.align 8
_c8VgV:
_c8VgV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Vh7
_c8Vhd:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Vh7:
	movq $block_c8Vh5_info,(%rbp)
	movq 32(%rbp),%r14
	shlq $1,%r14
	movq 24(%rbp),%rbx
	jmp $wgo_s8TRX_entry
	.size _c8VgV, .-_c8VgV


==================== Asm code ====================
2018-03-16 16:04:02.957856465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VgV_info:
	.quad	_c8VgV
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.958467779 UTC

.section .text
.align 8
_c8Vh5:
_c8Vh5:
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Vh5, .-_c8Vh5


==================== Asm code ====================
2018-03-16 16:04:02.959048254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vh5_info:
	.quad	_c8Vh5
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.959789823 UTC

.section .text
.align 8
sat_s8TSF_entry:
_c8Vhj:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vhk
_c8Vhl:
	movq $block_c8Vgb_info,-40(%rbp)
	xorl %esi,%esi
	movq 14(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq 6(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq 22(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8Vhk:
	jmp *-8(%r13)
	.size sat_s8TSF_entry, .-sat_s8TSF_entry


==================== Asm code ====================
2018-03-16 16:04:02.960467548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TSF_info:
	.quad	sat_s8TSF_entry
	.quad	3
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:02.961180887 UTC

.section .text
.align 8
_c8Vgb:
_c8Vgb:
	movq $block_c8Vgi_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8Vgb, .-_c8Vgb


==================== Asm code ====================
2018-03-16 16:04:02.961992447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vgb_info:
	.quad	_c8Vgb
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.962634548 UTC

.section .text
.align 8
_c8Vgi:
_c8Vgi:
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp _c8VhA
	.size _c8Vgi, .-_c8Vgi


==================== Asm code ====================
2018-03-16 16:04:02.963298624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vgi_info:
	.quad	_c8Vgi
	.quad	69
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.963888204 UTC

.section .text
.align 8
_c8VhA:
_c8VhA:
	movq (%rbp),%rax
	movq $block_c8VhD_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8VhD
_c8VhF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VhA, .-_c8VhA


==================== Asm code ====================
2018-03-16 16:04:02.964689631 UTC

.section .text
.align 8
_c8VhD:
_c8VhD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8VhL
_c8VhQ:
	movq $block_c8VhO_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8VhO
_c8VhR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VhL:
	movq $block_c8Vgs_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8VhD, .-_c8VhD


==================== Asm code ====================
2018-03-16 16:04:02.965903097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VhD_info:
	.quad	_c8VhD
	.quad	455
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.96664087 UTC

.section .text
.align 8
_c8Vgs:
_c8Vgs:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8Vhr
_c8Vhq:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-88(%r12)
	leaq -103(%r12),%rax
	movq %rax,-80(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq $0,-48(%r12)
	movq %rax,-40(%r12)
	movq $$wgo_s8TRX_info,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -87(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c8Vhv_info,24(%rbp)
	leaq 1(%rax),%r14
	leaq -30(%r12),%rbx
	addq $24,%rbp
	jmp $wgo_s8TRX_entry
_c8Vhr:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vgs, .-_c8Vgs


==================== Asm code ====================
2018-03-16 16:04:02.967355042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vgs_info:
	.quad	_c8Vgs
	.quad	198
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.967981719 UTC

.section .text
.align 8
_c8Vhv:
_c8Vhv:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Vhv, .-_c8Vhv


==================== Asm code ====================
2018-03-16 16:04:02.968530332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vhv_info:
	.quad	_c8Vhv
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.969173661 UTC

.section .text
.align 8
_c8VhO:
_c8VhO:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8VhA
	.size _c8VhO, .-_c8VhO


==================== Asm code ====================
2018-03-16 16:04:02.969813556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VhO_info:
	.quad	_c8VhO
	.quad	904
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.970514268 UTC

.section .text
.align 8
withEncodedCString1_r8TNp_entry:
_c8Vi5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vi6
_c8Vi7:
	movq $block_c8Vg1_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8Vg1
_c8Vg2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vi6:
	movl $withEncodedCString1_r8TNp_closure,%ebx
	jmp *-8(%r13)
	.size withEncodedCString1_r8TNp_entry, .-withEncodedCString1_r8TNp_entry


==================== Asm code ====================
2018-03-16 16:04:02.971142071 UTC

.section .data.rel.ro
.align 8
.align 1
withEncodedCString1_r8TNp_info:
	.quad	withEncodedCString1_r8TNp_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:04:02.971909411 UTC

.section .text
.align 8
_c8Vg1:
_c8Vg1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8Via
_c8Vi9:
	movq 23(%rbx),%rax
	movq $sat_s8TSF_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.IO.bracket1_entry
_c8Via:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vg1, .-_c8Vg1


==================== Asm code ====================
2018-03-16 16:04:02.972550997 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vg1_info:
	.quad	_c8Vg1
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.974835164 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withEncodedCString_closure
.type GHC.Foreign.withEncodedCString_closure, @object
GHC.Foreign.withEncodedCString_closure:
	.quad	GHC.Foreign.withEncodedCString_info


==================== Asm code ====================
2018-03-16 16:04:02.975410828 UTC

.section .text
.align 8
.globl GHC.Foreign.withEncodedCString_entry
.type GHC.Foreign.withEncodedCString_entry, @object
GHC.Foreign.withEncodedCString_entry:
_c8VjA:
	jmp withEncodedCString1_r8TNp_entry
	.size GHC.Foreign.withEncodedCString_entry, .-GHC.Foreign.withEncodedCString_entry


==================== Asm code ====================
2018-03-16 16:04:02.975943859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withEncodedCString_info
.type GHC.Foreign.withEncodedCString_info, @object
GHC.Foreign.withEncodedCString_info:
	.quad	GHC.Foreign.withEncodedCString_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:04:02.993341893 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable3_closure
.type GHC.Foreign.charIsRepresentable3_closure, @object
GHC.Foreign.charIsRepresentable3_closure:
	.quad	GHC.Foreign.charIsRepresentable3_info


==================== Asm code ====================
2018-03-16 16:04:02.994143968 UTC

.section .text
.align 8
$wgo_s8TT6_entry:
_c8Vku:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vkv
_c8Vkw:
	movq $block_c8Vkl_info,-48(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-48,%rbp
	jmp stg_newPinnedByteArray#
_c8Vkv:
	jmp *-8(%r13)
	.size $wgo_s8TT6_entry, .-$wgo_s8TT6_entry


==================== Asm code ====================
2018-03-16 16:04:02.994771372 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8TT6_info:
	.quad	$wgo_s8TT6_entry
	.quad	3
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:02.995378273 UTC

.section .text
.align 8
_c8Vkl:
_c8Vkl:
	movq $block_c8Vkn_info,-8(%rbp)
	movq %rbx,%rax
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newMutVar#
	.size _c8Vkl, .-_c8Vkl


==================== Asm code ====================
2018-03-16 16:04:02.99593367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vkl_info:
	.quad	_c8Vkl
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.996653216 UTC

.section .text
.align 8
_c8Vkn:
_c8Vkn:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8VkA
_c8Vkz:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 8(%rbp),%rax
	addq $16,%rax
	movq %rax,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,32(%rbp)
	jmp _c8Vlt
_c8VkA:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vkn, .-_c8Vkn


==================== Asm code ====================
2018-03-16 16:04:02.997309616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vkn_info:
	.quad	_c8Vkn
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.997983706 UTC

.section .text
.align 8
_c8Vlt:
_c8Vlt:
	movq $block_c8Vlv_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vlv
_c8Vlw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vlt, .-_c8Vlt


==================== Asm code ====================
2018-03-16 16:04:02.998623425 UTC

.section .text
.align 8
_c8Vlv:
_c8Vlv:
	movq 8(%rbp),%rax
	movq $block_c8VlA_info,8(%rbp)
	movq %rax,%rsi
	movq 40(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8Vlv, .-_c8Vlv


==================== Asm code ====================
2018-03-16 16:04:02.999161173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vlv_info:
	.quad	_c8Vlv
	.quad	4103
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:02.999787002 UTC

.section .text
.align 8
_c8VlA:
_c8VlA:
	movq $block_c8VlC_info,(%rbp)
	testb $7,%bl
	jne _c8VlC
_c8VlD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VlA, .-_c8VlA


==================== Asm code ====================
2018-03-16 16:04:03.000277743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VlA_info:
	.quad	_c8VlA
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.00092521 UTC

.section .text
.align 8
_c8VlC:
_c8VlC:
	movq $block_c8VlH_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VlH
_c8VlM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VlC, .-_c8VlC


==================== Asm code ====================
2018-03-16 16:04:03.001502128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VlC_info:
	.quad	_c8VlC
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.002173677 UTC

.section .text
.align 8
_c8VlH:
_c8VlH:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8Vmh
_c8VlW:
	movq $block_c8VlU_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8VlU
_c8VlX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vmh:
	movq $block_c8VkS_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c8VkS
_c8VkU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VlH, .-_c8VlH


==================== Asm code ====================
2018-03-16 16:04:03.002807033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VlH_info:
	.quad	_c8VlH
	.quad	8200
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.003489854 UTC

.section .text
.align 8
_c8VkS:
_c8VkS:
	movq 47(%rbx),%rax
	movq 31(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	jne _u8Vmp
_c8Vlg:
	movq $block_c8Vln_info,(%rbp)
	movq 48(%rbp),%r14
	shlq $1,%r14
	movq 40(%rbp),%rbx
	jmp $wgo_s8TT6_entry
_u8Vmp:
	movq %rcx,24(%rbp)
	movq %rax,32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	movq 23(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8Vl3
	.size _c8VkS, .-_c8VkS


==================== Asm code ====================
2018-03-16 16:04:03.004084542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VkS_info:
	.quad	_c8VkS
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.004812497 UTC

.section .text
.align 8
_c8Vl3:
_c8Vl3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Vlb
_c8Vla:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 24(%rbp),%rcx
	movb $0,(%rbx,%rcx,1)
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c8Vl6_info,-8(%rbp)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_ap_pv_fast
_c8Vlb:
	movq $16,904(%r13)
	movq $block_c8Vl2_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c8Vl3, .-_c8Vl3


==================== Asm code ====================
2018-03-16 16:04:03.006013576 UTC

.section .text
.align 8
_c8Vl2:
_c8Vl2:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8Vl3
	.size _c8Vl2, .-_c8Vl2


==================== Asm code ====================
2018-03-16 16:04:03.00654182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vl2_info:
	.quad	_c8Vl2
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.007117549 UTC

.section .text
.align 8
_c8Vl6:
_c8Vl6:
	movq 8(%rbp),%rax
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Vl6, .-_c8Vl6


==================== Asm code ====================
2018-03-16 16:04:03.007651156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vl6_info:
	.quad	_c8Vl6
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.008277174 UTC

.section .text
.align 8
_c8Vln:
_c8Vln:
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Vln, .-_c8Vln


==================== Asm code ====================
2018-03-16 16:04:03.00884662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vln_info:
	.quad	_c8Vln
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.009555885 UTC

.section .text
.align 8
_c8VlU:
_c8VlU:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8Vmg
_c8Vm6:
	movq 16(%rbp),%rax
	movq $block_c8Vm1_info,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 48(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_c8Vmg:
	movq $block_c8VkK_info,16(%rbp)
	movq 64(%rbp),%r14
	shlq $1,%r14
	movq 56(%rbp),%rbx
	addq $16,%rbp
	jmp $wgo_s8TT6_entry
	.size _c8VlU, .-_c8VlU


==================== Asm code ====================
2018-03-16 16:04:03.010207852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VlU_info:
	.quad	_c8VlU
	.quad	8200
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.010842833 UTC

.section .text
.align 8
_c8VkK:
_c8VkK:
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8VkK, .-_c8VkK


==================== Asm code ====================
2018-03-16 16:04:03.011407113 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VkK_info:
	.quad	_c8VkK
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.012071308 UTC

.section .text
.align 8
_c8Vm1:
_c8Vm1:
	movq $block_c8Vm3_info,(%rbp)
	testb $7,%bl
	jne _c8Vm3
_c8Vm8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vm1, .-_c8Vm1


==================== Asm code ====================
2018-03-16 16:04:03.012615939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vm1_info:
	.quad	_c8Vm1
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.013211795 UTC

.section .text
.align 8
_c8Vm3:
_c8Vm3:
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	jmp _c8Vlt
	.size _c8Vm3, .-_c8Vm3


==================== Asm code ====================
2018-03-16 16:04:03.013808725 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vm3_info:
	.quad	_c8Vm3
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.014503768 UTC

.section .text
.align 8
sat_s8TUB_entry:
_c8VmB:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VmC
_c8VmD:
	movq $block_c8VjV_info,-32(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8VmC:
	jmp *-8(%r13)
	.size sat_s8TUB_entry, .-sat_s8TUB_entry


==================== Asm code ====================
2018-03-16 16:04:03.01515505 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TUB_info:
	.quad	sat_s8TUB_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:03.015777935 UTC

.section .text
.align 8
_c8VjV:
_c8VjV:
	movq $block_c8Vk2_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8VjV, .-_c8VjV


==================== Asm code ====================
2018-03-16 16:04:03.016393074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VjV_info:
	.quad	_c8VjV
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.017031244 UTC

.section .text
.align 8
_c8Vk2:
_c8Vk2:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8VmS
	.size _c8Vk2, .-_c8Vk2


==================== Asm code ====================
2018-03-16 16:04:03.017651476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vk2_info:
	.quad	_c8Vk2
	.quad	68
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.018335669 UTC

.section .text
.align 8
_c8VmS:
_c8VmS:
	movq (%rbp),%rax
	movq $block_c8VmV_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8VmV
_c8VmX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VmS, .-_c8VmS


==================== Asm code ====================
2018-03-16 16:04:03.019103899 UTC

.section .text
.align 8
_c8VmV:
_c8VmV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Vn3
_c8Vn8:
	movq $block_c8Vn6_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vn6
_c8Vn9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vn3:
	movq $block_c8Vkc_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8VmV, .-_c8VmV


==================== Asm code ====================
2018-03-16 16:04:03.020348475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VmV_info:
	.quad	_c8VmV
	.quad	454
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.02111301 UTC

.section .text
.align 8
_c8Vkc:
_c8Vkc:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c8VmJ
_c8VmI:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-96(%r12)
	movq %rbx,-88(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	leaq -95(%r12),%rax
	movq %rax,-72(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq $0,-40(%r12)
	movq %rax,-32(%r12)
	movq $$wgo_s8TT6_info,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c8VmN_info,16(%rbp)
	leaq 1(%rax),%r14
	leaq -22(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_s8TT6_entry
_c8VmJ:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vkc, .-_c8Vkc


==================== Asm code ====================
2018-03-16 16:04:03.021827397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vkc_info:
	.quad	_c8Vkc
	.quad	197
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.022445139 UTC

.section .text
.align 8
_c8VmN:
_c8VmN:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8VmN, .-_c8VmN


==================== Asm code ====================
2018-03-16 16:04:03.023033633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VmN_info:
	.quad	_c8VmN
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.023652522 UTC

.section .text
.align 8
_c8Vn6:
_c8Vn6:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8VmS
	.size _c8Vn6, .-_c8Vn6


==================== Asm code ====================
2018-03-16 16:04:03.024245233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vn6_info:
	.quad	_c8Vn6
	.quad	903
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.024991233 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable3_entry
.type GHC.Foreign.charIsRepresentable3_entry, @object
GHC.Foreign.charIsRepresentable3_entry:
_c8Vnn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vno
_c8Vnp:
	movq $block_c8VjL_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8VjL
_c8VjM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vno:
	movl $GHC.Foreign.charIsRepresentable3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable3_entry, .-GHC.Foreign.charIsRepresentable3_entry


==================== Asm code ====================
2018-03-16 16:04:03.025663292 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable3_info
.type GHC.Foreign.charIsRepresentable3_info, @object
GHC.Foreign.charIsRepresentable3_info:
	.quad	GHC.Foreign.charIsRepresentable3_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:03.026361229 UTC

.section .text
.align 8
_c8VjL:
_c8VjL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Vns
_c8Vnr:
	movq 23(%rbx),%rax
	movq $sat_s8TUB_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.bracket1_entry
_c8Vns:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VjL, .-_c8VjL


==================== Asm code ====================
2018-03-16 16:04:03.027002261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VjL_info:
	.quad	_c8VjL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.029227125 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCString_closure
.type GHC.Foreign.withCString_closure, @object
GHC.Foreign.withCString_closure:
	.quad	GHC.Foreign.withCString_info


==================== Asm code ====================
2018-03-16 16:04:03.030239341 UTC

.section .text
.align 8
.globl GHC.Foreign.withCString_entry
.type GHC.Foreign.withCString_entry, @object
GHC.Foreign.withCString_entry:
_c8Vpz:
	jmp GHC.Foreign.charIsRepresentable3_entry
	.size GHC.Foreign.withCString_entry, .-GHC.Foreign.withCString_entry


==================== Asm code ====================
2018-03-16 16:04:03.030793721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCString_info
.type GHC.Foreign.withCString_info, @object
GHC.Foreign.withCString_info:
	.quad	GHC.Foreign.withCString_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:03.036916733 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen1_closure
.type GHC.Foreign.withCStringsLen1_closure, @object
GHC.Foreign.withCStringsLen1_closure:
	.quad	GHC.Foreign.withCStringsLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.037703705 UTC

.section .text
.align 8
sat_s8TUL_entry:
_c8VpY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VpZ
_c8Vq0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.List.reverse_entry
_c8VpZ:
	jmp *-16(%r13)
	.size sat_s8TUL_entry, .-sat_s8TUL_entry


==================== Asm code ====================
2018-03-16 16:04:03.038312515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TUL_info:
	.quad	sat_s8TUL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:03.039019193 UTC

.section .text
.align 8
sat_s8TUR_entry:
_c8Vq9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Vqd
_c8Vqc:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rcx,(%r12)
	movq %rbx,%rsi
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp go_s8TUG_entry
_c8Vqd:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8TUR_entry, .-sat_s8TUR_entry


==================== Asm code ====================
2018-03-16 16:04:03.039670391 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TUR_info:
	.quad	sat_s8TUR_entry
	.quad	3
	.quad	4294967304
	.quad	8589934597
	.quad	S8U6c_srt+24


==================== Asm code ====================
2018-03-16 16:04:03.04048128 UTC

.section .text
.align 8
go_s8TUG_entry:
_c8Vqi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vqj
_c8Vqk:
	movq $block_c8VpP_info,-40(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rsi,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8VpP
_c8VpQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vqj:
	jmp *-8(%r13)
	.size go_s8TUG_entry, .-go_s8TUG_entry


==================== Asm code ====================
2018-03-16 16:04:03.041108185 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8TUG_info:
	.quad	go_s8TUG_entry
	.quad	2
	.quad	4294967307
	.quad	12884901903
	.quad	S8U6c_srt+24


==================== Asm code ====================
2018-03-16 16:04:03.042053853 UTC

.section .text
.align 8
_c8VpP:
_c8VpP:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8Vqf
_c8Vqg:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8Vqq
_c8Vqp:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $sat_s8TUR_info,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -22(%r12),%rdi
	movq %rcx,%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.charIsRepresentable3_entry
_c8Vqq:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c8Vqn:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c8Vqf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Vqn
_c8Vqm:
	movq $sat_s8TUL_info,-16(%r12)
	movq %rax,(%r12)
	movq 16(%rbp),%rdi
	leaq -16(%r12),%rsi
	movl $Foreign.Storable.$fStorablePtr_closure,%r14d
	movq $stg_ap_v_info,32(%rbp)
	addq $32,%rbp
	jmp Foreign.Marshal.Array.withArrayLen_entry
	.size _c8VpP, .-_c8VpP


==================== Asm code ====================
2018-03-16 16:04:03.042894401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VpP_info:
	.quad	_c8VpP
	.quad	4
	.quad	4294967326
	.quad	S8U6c_srt+24


==================== Asm code ====================
2018-03-16 16:04:03.043652166 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringsLen1_entry
.type GHC.Foreign.withCStringsLen1_entry, @object
GHC.Foreign.withCStringsLen1_entry:
_c8Vqs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Vqw
_c8Vqv:
	movq $go_s8TUG_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movl $GHC.Types.[]_closure+1,%r14d
	leaq -13(%r12),%rbx
	jmp go_s8TUG_entry
_c8Vqw:
	movq $24,904(%r13)
	movl $GHC.Foreign.withCStringsLen1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.withCStringsLen1_entry, .-GHC.Foreign.withCStringsLen1_entry


==================== Asm code ====================
2018-03-16 16:04:03.044334621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen1_info
.type GHC.Foreign.withCStringsLen1_info, @object
GHC.Foreign.withCStringsLen1_info:
	.quad	GHC.Foreign.withCStringsLen1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S8U6c_srt+24


==================== Asm code ====================
2018-03-16 16:04:03.047452887 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen_closure
.type GHC.Foreign.withCStringsLen_closure, @object
GHC.Foreign.withCStringsLen_closure:
	.quad	GHC.Foreign.withCStringsLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.04859759 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringsLen_entry
.type GHC.Foreign.withCStringsLen_entry, @object
GHC.Foreign.withCStringsLen_entry:
_c8VqX:
	jmp GHC.Foreign.withCStringsLen1_entry
	.size GHC.Foreign.withCStringsLen_entry, .-GHC.Foreign.withCStringsLen_entry


==================== Asm code ====================
2018-03-16 16:04:03.049188332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen_info
.type GHC.Foreign.withCStringsLen_info, @object
GHC.Foreign.withCStringsLen_info:
	.quad	GHC.Foreign.withCStringsLen_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S8U6c_srt+32


==================== Asm code ====================
2018-03-16 16:04:03.051306254 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringLen_closure
.type GHC.Foreign.withCStringLen_closure, @object
GHC.Foreign.withCStringLen_closure:
	.quad	GHC.Foreign.withCStringLen_info


==================== Asm code ====================
2018-03-16 16:04:03.051918219 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringLen_entry
.type GHC.Foreign.withCStringLen_entry, @object
GHC.Foreign.withCStringLen_entry:
_c8Vr8:
	movq %rdi,%r8
	movq %rsi,%rdi
	movl $GHC.Types.False_closure+1,%esi
	jmp GHC.Foreign.withEncodedCString_entry
	.size GHC.Foreign.withCStringLen_entry, .-GHC.Foreign.withCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:03.052488538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringLen_info
.type GHC.Foreign.withCStringLen_info, @object
GHC.Foreign.withCStringLen_info:
	.quad	GHC.Foreign.withCStringLen_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:03.054185637 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString2_closure
.type GHC.Foreign.newCString2_closure, @object
GHC.Foreign.newCString2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.066080172 UTC

.section .data
.align 8
.align 1
newEncodedCString1_r8TNq_closure:
	.quad	newEncodedCString1_r8TNq_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.06690724 UTC

.section .text
.align 8
sat_s8TWa_entry:
_c8VsF:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VsG
_c8VsH:
	movq $block_c8Vru_info,-32(%rbp)
	xorl %esi,%esi
	movq 14(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq 6(%rbx),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8VsG:
	jmp *-8(%r13)
	.size sat_s8TWa_entry, .-sat_s8TWa_entry


==================== Asm code ====================
2018-03-16 16:04:03.06756379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TWa_info:
	.quad	sat_s8TWa_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.068229754 UTC

.section .text
.align 8
_c8Vru:
_c8Vru:
	movq $block_c8VrB_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8Vru, .-_c8Vru


==================== Asm code ====================
2018-03-16 16:04:03.068824045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vru_info:
	.quad	_c8Vru
	.quad	3
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.069505775 UTC

.section .text
.align 8
_c8VrB:
_c8VrB:
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp _c8Vtm
	.size _c8VrB, .-_c8VrB


==================== Asm code ====================
2018-03-16 16:04:03.07011136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VrB_info:
	.quad	_c8VrB
	.quad	68
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.070744573 UTC

.section .text
.align 8
_c8Vtm:
_c8Vtm:
	movq (%rbp),%rax
	movq $block_c8Vtp_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Vtp
_c8Vtr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vtm, .-_c8Vtm


==================== Asm code ====================
2018-03-16 16:04:03.071575706 UTC

.section .text
.align 8
_c8Vtp:
_c8Vtp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Vtx
_c8VtC:
	movq $block_c8VtA_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8VtA
_c8VtD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vtx:
	movq $block_c8VrL_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8Vtp, .-_c8Vtp


==================== Asm code ====================
2018-03-16 16:04:03.072274586 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vtp_info:
	.quad	_c8Vtp
	.quad	454
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.07330192 UTC

.section .text
.align 8
_c8VrL:
_c8VrL:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8VsN
_c8VsM:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Vtj
_c8Vti:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8Vs5
_c8Vtj:
	addq $-88,%r12
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $48,%rbp
	jmp stg_raiseIO#
_c8VsN:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VrL, .-_c8VrL


==================== Asm code ====================
2018-03-16 16:04:03.07415538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VrL_info:
	.quad	_c8VrL
	.quad	197
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.074842904 UTC

.section .text
.align 8
_c8Vs5:
_c8Vs5:
	movq $block_c8Vs8_info,-8(%rbp)
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vs8
_c8Vs9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vs5, .-_c8Vs5


==================== Asm code ====================
2018-03-16 16:04:03.076156268 UTC

.section .text
.align 8
_c8Vs8:
_c8Vs8:
	movq $block_c8Vsd_info,(%rbp)
	movq 16(%rbp),%r9
	movq 24(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Base.$fApplicativeIO4_closure+2,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size _c8Vs8, .-_c8Vs8


==================== Asm code ====================
2018-03-16 16:04:03.076753672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vs8_info:
	.quad	_c8Vs8
	.quad	134
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.077386594 UTC

.section .text
.align 8
_c8Vsd:
_c8Vsd:
	movq $block_c8Vsf_info,(%rbp)
	testb $7,%bl
	jne _c8Vsf
_c8Vsg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vsd, .-_c8Vsd


==================== Asm code ====================
2018-03-16 16:04:03.077985839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vsd_info:
	.quad	_c8Vsd
	.quad	134
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.078769205 UTC

.section .text
.align 8
_c8Vsf:
_c8Vsf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8VsX
_c8Vtg:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VsX:
	movq 8(%rbp),%rax
	movq $block_c8Vsk_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Vsk
_c8Vsl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vsf, .-_c8Vsf


==================== Asm code ====================
2018-03-16 16:04:03.079390712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vsf_info:
	.quad	_c8Vsf
	.quad	134
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.080091542 UTC

.section .text
.align 8
_c8Vsk:
_c8Vsk:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u8VtR
_c8Vt9:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free
	addq $8,%rsp
	movq $0,8(%rbp)
	movq $GHC.Foreign.newCString2_closure+1,(%rbp)
	jmp _c8Vs5
_u8VtR:
	movq %rax,(%rbp)
	jmp _c8Vst
	.size _c8Vsk, .-_c8Vsk


==================== Asm code ====================
2018-03-16 16:04:03.080708848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vsk_info:
	.quad	_c8Vsk
	.quad	69
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.081840475 UTC

.section .text
.align 8
_c8Vst:
_c8Vst:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8Vt3
_c8Vt2:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Vt6
_c8Vt5:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c8Vs5
_c8Vt6:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	addq $48,%rbp
	jmp stg_raiseIO#
_c8Vt3:
	movq $16,904(%r13)
	movq $block_c8Vss_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c8Vst, .-_c8Vst


==================== Asm code ====================
2018-03-16 16:04:03.082528402 UTC

.section .text
.align 8
_c8Vss:
_c8Vss:
	movq %rbx,(%rbp)
	jmp _c8Vst
	.size _c8Vss, .-_c8Vss


==================== Asm code ====================
2018-03-16 16:04:03.083044683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vss_info:
	.quad	_c8Vss
	.quad	69
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.083651007 UTC

.section .text
.align 8
_c8VtA:
_c8VtA:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Vtm
	.size _c8VtA, .-_c8VtA


==================== Asm code ====================
2018-03-16 16:04:03.084253122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VtA_info:
	.quad	_c8VtA
	.quad	903
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.084992226 UTC

.section .text
.align 8
newEncodedCString1_r8TNq_entry:
_c8Vu7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vu8
_c8Vu9:
	movq $block_c8Vrk_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Vrk
_c8Vrl:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vu8:
	movl $newEncodedCString1_r8TNq_closure,%ebx
	jmp *-8(%r13)
	.size newEncodedCString1_r8TNq_entry, .-newEncodedCString1_r8TNq_entry


==================== Asm code ====================
2018-03-16 16:04:03.085659657 UTC

.section .data.rel.ro
.align 8
.align 1
newEncodedCString1_r8TNq_info:
	.quad	newEncodedCString1_r8TNq_entry
	.quad	0
	.quad	30064771086
	.quad	17179869207
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.086384396 UTC

.section .text
.align 8
_c8Vrk:
_c8Vrk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Vuc
_c8Vub:
	movq 23(%rbx),%rax
	movq $sat_s8TWa_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.bracket1_entry
_c8Vuc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vrk, .-_c8Vrk


==================== Asm code ====================
2018-03-16 16:04:03.087049473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vrk_info:
	.quad	_c8Vrk
	.quad	2
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.089480487 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newEncodedCString_closure
.type GHC.Foreign.newEncodedCString_closure, @object
GHC.Foreign.newEncodedCString_closure:
	.quad	GHC.Foreign.newEncodedCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.090158967 UTC

.section .text
.align 8
.globl GHC.Foreign.newEncodedCString_entry
.type GHC.Foreign.newEncodedCString_entry, @object
GHC.Foreign.newEncodedCString_entry:
_c8Vvs:
	jmp newEncodedCString1_r8TNq_entry
	.size GHC.Foreign.newEncodedCString_entry, .-GHC.Foreign.newEncodedCString_entry


==================== Asm code ====================
2018-03-16 16:04:03.090721467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newEncodedCString_info
.type GHC.Foreign.newEncodedCString_info, @object
GHC.Foreign.newEncodedCString_info:
	.quad	GHC.Foreign.newEncodedCString_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S8U6c_srt+56


==================== Asm code ====================
2018-03-16 16:04:03.112781883 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString1_closure
.type GHC.Foreign.newCString1_closure, @object
GHC.Foreign.newCString1_closure:
	.quad	GHC.Foreign.newCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.113685954 UTC

.section .text
.align 8
sat_s8TY4_entry:
_c8Vxa:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vxf
_c8Vxg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c8Vx7_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Vx7
_c8Vx8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vxf:
	jmp *-16(%r13)
	.size sat_s8TY4_entry, .-sat_s8TY4_entry


==================== Asm code ====================
2018-03-16 16:04:03.114357156 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TY4_info:
	.quad	sat_s8TY4_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:03.115122232 UTC

.section .text
.align 8
_c8Vx7:
_c8Vx7:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8Vxj
_c8Vxi:
	movq 7(%rbx),%rax
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Vxj:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vx7, .-_c8Vx7


==================== Asm code ====================
2018-03-16 16:04:03.115777025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vx7_info:
	.quad	_c8Vx7
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.116472685 UTC

.section .text
.align 8
sat_s8TYi_entry:
_c8Vxl:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Vxm
_c8Vxn:
	movq $block_c8VvN_info,-24(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,%r14
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8Vxm:
	jmp *-8(%r13)
	.size sat_s8TYi_entry, .-sat_s8TYi_entry


==================== Asm code ====================
2018-03-16 16:04:03.117110343 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TYi_info:
	.quad	sat_s8TYi_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.117795565 UTC

.section .text
.align 8
_c8VvN:
_c8VvN:
	movq $block_c8VvU_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8VvN, .-_c8VvN


==================== Asm code ====================
2018-03-16 16:04:03.118398825 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VvN_info:
	.quad	_c8VvN
	.quad	2
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.119011422 UTC

.section .text
.align 8
_c8VvU:
_c8VvU:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8Vzq
	.size _c8VvU, .-_c8VvU


==================== Asm code ====================
2018-03-16 16:04:03.119616255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VvU_info:
	.quad	_c8VvU
	.quad	67
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.120256811 UTC

.section .text
.align 8
_c8Vzq:
_c8Vzq:
	movq (%rbp),%rax
	movq $block_c8Vzt_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Vzt
_c8Vzv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vzq, .-_c8Vzq


==================== Asm code ====================
2018-03-16 16:04:03.1210239 UTC

.section .text
.align 8
_c8Vzt:
_c8Vzt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8VzB
_c8VzG:
	movq $block_c8VzE_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8VzE
_c8VzH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VzB:
	movq $block_c8Vw4_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8Vzt, .-_c8Vzt


==================== Asm code ====================
2018-03-16 16:04:03.123270475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vzt_info:
	.quad	_c8Vzt
	.quad	453
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.124187991 UTC

.section .text
.align 8
_c8Vw4:
_c8Vw4:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8Vxt
_c8Vxs:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Vzn
_c8Vzm:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8Vwo
_c8Vzn:
	addq $-88,%r12
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_c8Vxt:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vw4, .-_c8Vw4


==================== Asm code ====================
2018-03-16 16:04:03.125058546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vw4_info:
	.quad	_c8Vw4
	.quad	196
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.125686965 UTC

.section .text
.align 8
_c8Vwo:
_c8Vwo:
	movq $block_c8Vwr_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Vwr
_c8Vws:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vwo, .-_c8Vwo


==================== Asm code ====================
2018-03-16 16:04:03.126341686 UTC

.section .text
.align 8
_c8Vwr:
_c8Vwr:
	movq $block_c8Vww_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
	.size _c8Vwr, .-_c8Vwr


==================== Asm code ====================
2018-03-16 16:04:03.126979216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vwr_info:
	.quad	_c8Vwr
	.quad	133
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.127691815 UTC

.section .text
.align 8
_c8Vww:
_c8Vww:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8VxC
_c8VxB:
	movq $sat_s8TY4_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _c8VyC
_c8VxC:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Vww, .-_c8Vww


==================== Asm code ====================
2018-03-16 16:04:03.128393073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vww_info:
	.quad	_c8Vww
	.quad	519
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.129092337 UTC

.section .text
.align 8
_c8VyC:
_c8VyC:
	movq 8(%rbp),%rax
	movq $block_c8VyE_info,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8VyC, .-_c8VyC


==================== Asm code ====================
2018-03-16 16:04:03.130195392 UTC

.section .text
.align 8
_c8VyE:
_c8VyE:
	movq $block_c8VyG_info,(%rbp)
	testb $7,%bl
	jne _c8VyG
_c8VyH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VyE, .-_c8VyE


==================== Asm code ====================
2018-03-16 16:04:03.130795901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VyE_info:
	.quad	_c8VyE
	.quad	519
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.131565871 UTC

.section .text
.align 8
_c8VyG:
_c8VyG:
	movq $block_c8VyL_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VyL
_c8VyP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VyG, .-_c8VyG


==================== Asm code ====================
2018-03-16 16:04:03.132796995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VyG_info:
	.quad	_c8VyG
	.quad	519
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.133586297 UTC

.section .text
.align 8
_c8VyL:
_c8VyL:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8Vzk
_c8VyZ:
	movq $block_c8VyX_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8VyX
_c8Vz0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Vzk:
	movq $block_c8Vyb_info,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8Vyb
_c8Vyd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VyL, .-_c8VyL


==================== Asm code ====================
2018-03-16 16:04:03.134264798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VyL_info:
	.quad	_c8VyL
	.quad	2057
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.134964158 UTC

.section .text
.align 8
_c8Vyb:
_c8Vyb:
	movq 47(%rbx),%rax
	movq 31(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	jne _u8VA8
_u8VA7:
	addq $8,%rbp
	jmp _c8Vyv
_u8VA8:
	movq 7(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 39(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8Vyo
	.size _c8Vyb, .-_c8Vyb


==================== Asm code ====================
2018-03-16 16:04:03.13560218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vyb_info:
	.quad	_c8Vyb
	.quad	133
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.136357084 UTC

.section .text
.align 8
_c8Vyo:
_c8Vyo:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8Vys
_c8Vyr:
	movq 32(%rbp),%rax
	movq (%rbp),%rbx
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb $0,(%rax,%rcx,1)
	movq $GHC.Types.I#_con_info,-64(%r12)
	subq %rbx,%rcx
	movq %rcx,-56(%r12)
	movq $GHC.Ptr.Ptr_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,)_con_info,-32(%r12)
	leaq -47(%r12),%rax
	movq %rax,-24(%r12)
	leaq -63(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp _s8TWY
_c8Vys:
	movq $72,904(%r13)
	movq $block_c8Vyl_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c8Vyo, .-_c8Vyo


==================== Asm code ====================
2018-03-16 16:04:03.137152319 UTC

.section .text
.align 8
_c8Vyl:
_c8Vyl:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c8Vyo
	.size _c8Vyl, .-_c8Vyl


==================== Asm code ====================
2018-03-16 16:04:03.137718287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vyl_info:
	.quad	_c8Vyl
	.quad	6026
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.138403436 UTC

.section .text
.align 8
_c8VyX:
_c8VyX:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8VA5
_c8Vz9:
	movq 16(%rbp),%rax
	movq $block_c8Vz4_info,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_u8VA5:
	addq $40,%rbp
	jmp _c8Vyv
	.size _c8VyX, .-_c8VyX


==================== Asm code ====================
2018-03-16 16:04:03.138980777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VyX_info:
	.quad	_c8VyX
	.quad	2057
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.139600079 UTC

.section .text
.align 8
_c8Vyv:
_c8Vyv:
	movq $GHC.Base.Nothing_closure+1,-8(%rbp)
	addq $-8,%rbp
	jmp _s8TWY
	.size _c8Vyv, .-_c8Vyv


==================== Asm code ====================
2018-03-16 16:04:03.140279636 UTC

.section .text
.align 8
_s8TWY:
_s8TWY:
	movq (%rbp),%rax
	movq $block_c8VwF_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8VwF
_c8VwG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s8TWY, .-_s8TWY


==================== Asm code ====================
2018-03-16 16:04:03.141037036 UTC

.section .text
.align 8
_c8VwF:
_c8VwF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8VxG
_c8VxZ:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VxG:
	movq 8(%rbp),%rax
	movq $block_c8VwK_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8VwK
_c8VwL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VwF, .-_c8VwF


==================== Asm code ====================
2018-03-16 16:04:03.142142395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VwF_info:
	.quad	_c8VwF
	.quad	133
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.142860353 UTC

.section .text
.align 8
_c8VwK:
_c8VwK:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u8VAc
_c8VxS:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free
	addq $8,%rsp
	movq $0,8(%rbp)
	movq $GHC.Foreign.newCString2_closure+1,(%rbp)
	jmp _c8Vwo
_u8VAc:
	movq %rax,(%rbp)
	jmp _c8VwT
	.size _c8VwK, .-_c8VwK


==================== Asm code ====================
2018-03-16 16:04:03.143460492 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VwK_info:
	.quad	_c8VwK
	.quad	68
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.144220171 UTC

.section .text
.align 8
_c8VwT:
_c8VwT:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8VxM
_c8VxL:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8VxP
_c8VxO:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c8Vwo
_c8VxP:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_c8VxM:
	movq $16,904(%r13)
	movq $block_c8VwS_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c8VwT, .-_c8VwT


==================== Asm code ====================
2018-03-16 16:04:03.144969959 UTC

.section .text
.align 8
_c8VwS:
_c8VwS:
	movq %rbx,(%rbp)
	jmp _c8VwT
	.size _c8VwS, .-_c8VwS


==================== Asm code ====================
2018-03-16 16:04:03.145551115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VwS_info:
	.quad	_c8VwS
	.quad	68
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.146197505 UTC

.section .text
.align 8
_c8Vz4:
_c8Vz4:
	movq $block_c8Vz6_info,(%rbp)
	testb $7,%bl
	jne _c8Vz6
_c8Vzb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Vz4, .-_c8Vz4


==================== Asm code ====================
2018-03-16 16:04:03.146762478 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vz4_info:
	.quad	_c8Vz4
	.quad	519
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.147395933 UTC

.section .text
.align 8
_c8Vz6:
_c8Vz6:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _c8VyC
	.size _c8Vz6, .-_c8Vz6


==================== Asm code ====================
2018-03-16 16:04:03.148004256 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Vz6_info:
	.quad	_c8Vz6
	.quad	519
	.quad	4294967326
	.quad	S8U6c_srt+48


==================== Asm code ====================
2018-03-16 16:04:03.148639854 UTC

.section .text
.align 8
_c8VzE:
_c8VzE:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Vzq
	.size _c8VzE, .-_c8VzE


==================== Asm code ====================
2018-03-16 16:04:03.149272759 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VzE_info:
	.quad	_c8VzE
	.quad	902
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.149964426 UTC

.section .text
.align 8
sat_s8TYm_entry:
_c8VAL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VAM
_c8VAN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp Data.Tuple.fst_entry
_c8VAM:
	jmp *-16(%r13)
	.size sat_s8TYm_entry, .-sat_s8TYm_entry


==================== Asm code ====================
2018-03-16 16:04:03.150552658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TYm_info:
	.quad	sat_s8TYm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:03.15131074 UTC

.section .text
.align 8
.globl GHC.Foreign.newCString1_entry
.type GHC.Foreign.newCString1_entry, @object
GHC.Foreign.newCString1_entry:
_c8VAO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VAP
_c8VAQ:
	movq $block_c8VvD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VvD
_c8VvE:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VAP:
	movl $GHC.Foreign.newCString1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.newCString1_entry, .-GHC.Foreign.newCString1_entry


==================== Asm code ====================
2018-03-16 16:04:03.151957476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCString1_info
.type GHC.Foreign.newCString1_info, @object
GHC.Foreign.newCString1_info:
	.quad	GHC.Foreign.newCString1_entry
	.quad	0
	.quad	47244640270
	.quad	12884901903
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.152705712 UTC

.section .text
.align 8
_c8VvD:
_c8VvD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8VAT
_c8VAS:
	movq 23(%rbx),%rax
	movq $sat_s8TYi_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_c8VAF_info,8(%rbp)
	leaq -6(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.bracket1_entry
_c8VAT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VvD, .-_c8VvD


==================== Asm code ====================
2018-03-16 16:04:03.153363001 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VvD_info:
	.quad	_c8VvD
	.quad	1
	.quad	12884901918
	.quad	S8U6c_srt+40


==================== Asm code ====================
2018-03-16 16:04:03.154069345 UTC

.section .text
.align 8
_c8VAF:
_c8VAF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8VAW
_c8VAV:
	movq $sat_s8TYm_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VAW:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VAF, .-_c8VAF


==================== Asm code ====================
2018-03-16 16:04:03.154707434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VAF_info:
	.quad	_c8VAF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.156982919 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString_closure
.type GHC.Foreign.newCString_closure, @object
GHC.Foreign.newCString_closure:
	.quad	GHC.Foreign.newCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.157981041 UTC

.section .text
.align 8
.globl GHC.Foreign.newCString_entry
.type GHC.Foreign.newCString_entry, @object
GHC.Foreign.newCString_entry:
_c8VDn:
	jmp GHC.Foreign.newCString1_entry
	.size GHC.Foreign.newCString_entry, .-GHC.Foreign.newCString_entry


==================== Asm code ====================
2018-03-16 16:04:03.158560108 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCString_info
.type GHC.Foreign.newCString_info, @object
GHC.Foreign.newCString_info:
	.quad	GHC.Foreign.newCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8U6c_srt+64


==================== Asm code ====================
2018-03-16 16:04:03.161319128 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCStringLen_closure
.type GHC.Foreign.newCStringLen_closure, @object
GHC.Foreign.newCStringLen_closure:
	.quad	GHC.Foreign.newCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.161905439 UTC

.section .text
.align 8
.globl GHC.Foreign.newCStringLen_entry
.type GHC.Foreign.newCStringLen_entry, @object
GHC.Foreign.newCStringLen_entry:
_c8VDy:
	movq %rsi,%rdi
	movl $GHC.Types.False_closure+1,%esi
	jmp GHC.Foreign.newEncodedCString_entry
	.size GHC.Foreign.newCStringLen_entry, .-GHC.Foreign.newCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:03.162502208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCStringLen_info
.type GHC.Foreign.newCStringLen_info, @object
GHC.Foreign.newCStringLen_info:
	.quad	GHC.Foreign.newCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8U6c_srt+72


==================== Asm code ====================
2018-03-16 16:04:03.182503894 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$wpeekCString_closure
.type GHC.Foreign.$wpeekCString_closure, @object
GHC.Foreign.$wpeekCString_closure:
	.quad	GHC.Foreign.$wpeekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.183478305 UTC

.section .text
.align 8
sat_s8TZz_entry:
_c8VFK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VFL
_c8VFM:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8VFO
_c8VFN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8VFO:
	movq $40,904(%r13)
_c8VFL:
	jmp *-16(%r13)
	.size sat_s8TZz_entry, .-sat_s8TZz_entry


==================== Asm code ====================
2018-03-16 16:04:03.1842101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TZz_info:
	.quad	sat_s8TZz_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:03.184880534 UTC

.section .text
.align 8
sat_s8TZQ_entry:
_c8VFX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VFY
_c8VFZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8VFY:
	jmp *-16(%r13)
	.size sat_s8TZQ_entry, .-sat_s8TZQ_entry


==================== Asm code ====================
2018-03-16 16:04:03.185558618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8TZQ_info:
	.quad	sat_s8TZQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:03.186335407 UTC

.section .text
.align 8
$wgo_s8TYQ_entry:
_c8VG0:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VG1
_c8VG2:
	movq $block_c8VEp_info,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8VEp
_c8VEq:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VG1:
	jmp *-8(%r13)
	.size $wgo_s8TYQ_entry, .-$wgo_s8TYQ_entry


==================== Asm code ====================
2018-03-16 16:04:03.187652168 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8TYQ_info:
	.quad	$wgo_s8TYQ_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:03.188282095 UTC

.section .text
.align 8
_c8VEp:
_c8VEp:
	movq 8(%rbp),%rax
	movq $block_c8VEu_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8VEp, .-_c8VEp


==================== Asm code ====================
2018-03-16 16:04:03.18888763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEp_info:
	.quad	_c8VEp
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.189529968 UTC

.section .text
.align 8
_c8VEu:
_c8VEu:
	movq $block_c8VEw_info,(%rbp)
	testb $7,%bl
	jne _c8VEw
_c8VEx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VEu, .-_c8VEu


==================== Asm code ====================
2018-03-16 16:04:03.190109595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEu_info:
	.quad	_c8VEu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.190797643 UTC

.section .text
.align 8
_c8VEw:
_c8VEw:
	movq $block_c8VEB_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VEB
_c8VEC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VEw, .-_c8VEw


==================== Asm code ====================
2018-03-16 16:04:03.191386094 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEw_info:
	.quad	_c8VEw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.192093432 UTC

.section .text
.align 8
_c8VEB:
_c8VEB:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8VGX
_c8VGq:
	movq $block_c8VG7_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8VG7
_c8VGr:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VGX:
	movq $block_c8VF9_info,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8VF9
_c8VFa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VEB, .-_c8VEB


==================== Asm code ====================
2018-03-16 16:04:03.192740337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEB_info:
	.quad	_c8VEB
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.193707857 UTC

.section .text
.align 8
_c8VF9:
_c8VF9:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c8VHf
_c8VHg:
	movl $GHC.Types.[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VHf:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8VFr
	.size _c8VF9, .-_c8VF9


==================== Asm code ====================
2018-03-16 16:04:03.194332708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VF9_info:
	.quad	_c8VF9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.195133669 UTC

.section .text
.align 8
_c8VFr:
_c8VFr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8VHa
_c8VH9:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c8VHc
_c8VHd:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c8VH0
_c8VHc:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c8VFr
_c8VHa:
	movq $40,904(%r13)
	movq $block_c8VFr_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8VFr, .-_c8VFr


==================== Asm code ====================
2018-03-16 16:04:03.195830051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VFr_info:
	.quad	_c8VFr
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.196592777 UTC

.section .text
.align 8
_c8VH0:
_c8VH0:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8VH7
_c8VH6:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VH7:
	movq $40,904(%r13)
	movq $block_c8VGZ_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _c8VH0, .-_c8VH0


==================== Asm code ====================
2018-03-16 16:04:03.197369414 UTC

.section .text
.align 8
_c8VGZ:
_c8VGZ:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8VH0
	.size _c8VGZ, .-_c8VGZ


==================== Asm code ====================
2018-03-16 16:04:03.197877732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VGZ_info:
	.quad	_c8VGZ
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.198614557 UTC

.section .text
.align 8
_c8VG7:
_c8VG7:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8VGR
_c8VGF:
	movq 16(%rbp),%rbx
	movq $block_c8VGv_info,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_c8VGR:
	movq $block_c8VGP_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8VGP
_c8VGS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VG7, .-_c8VG7


==================== Asm code ====================
2018-03-16 16:04:03.199259667 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VG7_info:
	.quad	_c8VG7
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.199907606 UTC

.section .text
.align 8
_c8VGP:
_c8VGP:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s8TZe
	.size _c8VGP, .-_c8VGP


==================== Asm code ====================
2018-03-16 16:04:03.200496782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VGP_info:
	.quad	_c8VGP
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.201193878 UTC

.section .text
.align 8
_c8VGv:
_c8VGv:
	movq $block_c8VGx_info,(%rbp)
	testb $7,%bl
	jne _c8VGx
_c8VGy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VGv, .-_c8VGv


==================== Asm code ====================
2018-03-16 16:04:03.201787202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VGv_info:
	.quad	_c8VGv
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.202451689 UTC

.section .text
.align 8
_c8VGx:
_c8VGx:
	movq $block_c8VGC_info,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8VGC
_c8VGI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VGx, .-_c8VGx


==================== Asm code ====================
2018-03-16 16:04:03.203076977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VGx_info:
	.quad	_c8VGx
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.203736744 UTC

.section .text
.align 8
_c8VGC:
_c8VGC:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s8TZe
	.size _c8VGC, .-_c8VGC


==================== Asm code ====================
2018-03-16 16:04:03.204342992 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VGC_info:
	.quad	_c8VGC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.205082406 UTC

.section .text
.align 8
_s8TZe:
_s8TZe:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c8VGk
_c8VGl:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	movq $block_c8VFR_info,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s8TYQ_entry
_c8VGk:
	movq $GHC.Types.[]_closure+1,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c8VF1
	.size _s8TZe, .-_s8TZe


==================== Asm code ====================
2018-03-16 16:04:03.206374622 UTC

.section .text
.align 8
_c8VF1:
_c8VF1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8VGf
_c8VGe:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c8VGh
_c8VGi:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	movq $block_c8VFC_info,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s8TYQ_entry
_c8VGh:
	movl (%rax,%rcx,4),%eax
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8VF1
_c8VGf:
	movq $40,904(%r13)
	movq $block_c8VF1_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8VF1, .-_c8VF1


==================== Asm code ====================
2018-03-16 16:04:03.20713129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VF1_info:
	.quad	_c8VF1
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.207811392 UTC

.section .text
.align 8
_c8VFC:
_c8VFC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8VGc
_c8VGb:
	movq $sat_s8TZz_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VGc:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VFC, .-_c8VFC


==================== Asm code ====================
2018-03-16 16:04:03.208408726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VFC_info:
	.quad	_c8VFC
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.209140643 UTC

.section .text
.align 8
_c8VFR:
_c8VFR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8VGo
_c8VGn:
	movq $sat_s8TZQ_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VGo:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VFR, .-_c8VFR


==================== Asm code ====================
2018-03-16 16:04:03.209825551 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VFR_info:
	.quad	_c8VFR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.210593309 UTC

.section .text
.align 8
sat_s8U0L_entry:
_c8VHP:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VHQ
_c8VHR:
	movq $block_c8VDY_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	jmp stg_newMutVar#
_c8VHQ:
	jmp *-8(%r13)
	.size sat_s8U0L_entry, .-sat_s8U0L_entry


==================== Asm code ====================
2018-03-16 16:04:03.211308488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8U0L_info:
	.quad	sat_s8U0L_entry
	.quad	8589934592
	.quad	4294967309
	.quad	8589934597
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:03.212116008 UTC

.section .text
.align 8
_c8VDY:
_c8VDY:
	movq 16(%rbp),%rax
	cmpq $1,%rax
	jg _s8TYD
_c8VHO:
	movl $1,%eax
_s8TYD:
	movq %rax,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c8VHX
_c8VI2:
	movl $GHC.ForeignPtr.mallocForeignPtrBytes2_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
_c8VHX:
	movq $block_c8VEb_info,-24(%rbp)
	movq %rbx,%rdx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rdx,(%rbp)
	addq $-24,%rbp
	jmp stg_newMutVar#
	.size _c8VDY, .-_c8VDY


==================== Asm code ====================
2018-03-16 16:04:03.212796606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VDY_info:
	.quad	_c8VDY
	.quad	195
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:03.213988231 UTC

.section .text
.align 8
_c8VEb:
_c8VEb:
	movq $block_c8VEd_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_newPinnedByteArray#
	.size _c8VEb, .-_c8VEb


==================== Asm code ====================
2018-03-16 16:04:03.214555436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEb_info:
	.quad	_c8VEb
	.quad	1734
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.215355626 UTC

.section .text
.align 8
_c8VEd:
_c8VEd:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c8VI1
_c8VI0:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	movq $$wgo_s8TYQ_info,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s8TYQ_entry
_c8VI1:
	movq $176,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VEd, .-_c8VEd


==================== Asm code ====================
2018-03-16 16:04:03.216164398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VEd_info:
	.quad	_c8VEd
	.quad	1606
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.217015595 UTC

.section .text
.align 8
.globl GHC.Foreign.$wpeekCString_entry
.type GHC.Foreign.$wpeekCString_entry, @object
GHC.Foreign.$wpeekCString_entry:
_c8VI5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VI6
_c8VI7:
	xorl %eax,%eax
_c8VId:
	cmpb $0,(%rsi,%rax,1)
	je _c8VIj
_c8VIi:
	incq %rax
	jmp _c8VId
_c8VI6:
	movl $GHC.Foreign.$wpeekCString_closure,%ebx
	jmp *-8(%r13)
_c8VIj:
	movq $block_c8VDO_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8VDO
_c8VDP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Foreign.$wpeekCString_entry, .-GHC.Foreign.$wpeekCString_entry


==================== Asm code ====================
2018-03-16 16:04:03.217749262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.$wpeekCString_info
.type GHC.Foreign.$wpeekCString_info, @object
GHC.Foreign.$wpeekCString_info:
	.quad	GHC.Foreign.$wpeekCString_entry
	.quad	0
	.quad	4402341478414
	.quad	12884901902
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:03.218467068 UTC

.section .text
.align 8
_c8VDO:
_c8VDO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8VIb
_c8VIa:
	movq 15(%rbx),%rax
	movq $sat_s8U0L_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.bracket1_entry
_c8VIb:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VDO, .-_c8VDO


==================== Asm code ====================
2018-03-16 16:04:03.219137116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VDO_info:
	.quad	_c8VDO
	.quad	194
	.quad	4294967326
	.quad	S8U6c_srt


==================== Asm code ====================
2018-03-16 16:04:03.222180145 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCString1_closure
.type GHC.Foreign.peekCString1_closure, @object
GHC.Foreign.peekCString1_closure:
	.quad	GHC.Foreign.peekCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.222962355 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCString1_entry
.type GHC.Foreign.peekCString1_entry, @object
GHC.Foreign.peekCString1_entry:
_c8VKI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VKJ
_c8VKK:
	movq $block_c8VKF_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VKF
_c8VKG:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VKJ:
	movl $GHC.Foreign.peekCString1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.peekCString1_entry, .-GHC.Foreign.peekCString1_entry


==================== Asm code ====================
2018-03-16 16:04:03.223617816 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCString1_info
.type GHC.Foreign.peekCString1_info, @object
GHC.Foreign.peekCString1_info:
	.quad	GHC.Foreign.peekCString1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.224239904 UTC

.section .text
.align 8
_c8VKF:
_c8VKF:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Foreign.$wpeekCString_entry
	.size _c8VKF, .-_c8VKF


==================== Asm code ====================
2018-03-16 16:04:03.224787366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VKF_info:
	.quad	_c8VKF
	.quad	1
	.quad	4294967326
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.227262303 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCString_closure
.type GHC.Foreign.peekCString_closure, @object
GHC.Foreign.peekCString_closure:
	.quad	GHC.Foreign.peekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.227883451 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCString_entry
.type GHC.Foreign.peekCString_entry, @object
GHC.Foreign.peekCString_entry:
_c8VL2:
	jmp GHC.Foreign.peekCString1_entry
	.size GHC.Foreign.peekCString_entry, .-GHC.Foreign.peekCString_entry


==================== Asm code ====================
2018-03-16 16:04:03.228508876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCString_info
.type GHC.Foreign.peekCString_info, @object
GHC.Foreign.peekCString_info:
	.quad	GHC.Foreign.peekCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8U6c_srt+88


==================== Asm code ====================
2018-03-16 16:04:03.232072603 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable2_closure
.type GHC.Foreign.charIsRepresentable2_closure, @object
GHC.Foreign.charIsRepresentable2_closure:
	.quad	GHC.Foreign.charIsRepresentable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.23286511 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable2_entry
.type GHC.Foreign.charIsRepresentable2_entry, @object
GHC.Foreign.charIsRepresentable2_entry:
_c8VLg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VLk
_c8VLl:
	movq $block_c8VLd_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8VLd
_c8VLe:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VLk:
	movl $GHC.Foreign.charIsRepresentable2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable2_entry, .-GHC.Foreign.charIsRepresentable2_entry


==================== Asm code ====================
2018-03-16 16:04:03.233537422 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable2_info
.type GHC.Foreign.charIsRepresentable2_info, @object
GHC.Foreign.charIsRepresentable2_info:
	.quad	GHC.Foreign.charIsRepresentable2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	S8U6c_srt+96


==================== Asm code ====================
2018-03-16 16:04:03.234188775 UTC

.section .text
.align 8
_c8VLd:
_c8VLd:
	movq $block_c8VLj_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _c8VLd, .-_c8VLd


==================== Asm code ====================
2018-03-16 16:04:03.234756904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VLd_info:
	.quad	_c8VLd
	.quad	0
	.quad	12884901918
	.quad	S8U6c_srt+96


==================== Asm code ====================
2018-03-16 16:04:03.23541703 UTC

.section .text
.align 8
_c8VLj:
_c8VLj:
	movq $block_c8VLq_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _c8VLj, .-_c8VLj


==================== Asm code ====================
2018-03-16 16:04:03.235981071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VLj_info:
	.quad	_c8VLj
	.quad	1
	.quad	12884901918
	.quad	S8U6c_srt+96


==================== Asm code ====================
2018-03-16 16:04:03.236690439 UTC

.section .text
.align 8
_c8VLq:
_c8VLq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8VLx
_c8VLB:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8VLx:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _c8VLq, .-_c8VLq


==================== Asm code ====================
2018-03-16 16:04:03.237378573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VLq_info:
	.quad	_c8VLq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.24607352 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable1_closure
.type GHC.Foreign.charIsRepresentable1_closure, @object
GHC.Foreign.charIsRepresentable1_closure:
	.quad	GHC.Foreign.charIsRepresentable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.246797402 UTC

.section .text
.align 8
sat_s8U1w_entry:
_c8VMd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VMe
_c8VMf:
	movq $block_c8VMa_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8VMa
_c8VMb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VMe:
	jmp *-8(%r13)
	.size sat_s8U1w_entry, .-sat_s8U1w_entry


==================== Asm code ====================
2018-03-16 16:04:03.247446893 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8U1w_info:
	.quad	sat_s8U1w_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.248069998 UTC

.section .text
.align 8
_c8VMa:
_c8VMa:
	movq $block_c8VMi_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Foreign.$wpeekCString_entry
	.size _c8VMa, .-_c8VMa


==================== Asm code ====================
2018-03-16 16:04:03.248631593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMa_info:
	.quad	_c8VMa
	.quad	2
	.quad	4294967326
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.24927064 UTC

.section .text
.align 8
_c8VMi:
_c8VMi:
	movq $block_c8VMk_info,(%rbp)
	testb $7,%bl
	jne _c8VMk
_c8VMn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VMi, .-_c8VMi


==================== Asm code ====================
2018-03-16 16:04:03.249831635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMi_info:
	.quad	_c8VMi
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.250501597 UTC

.section .text
.align 8
_c8VMk:
_c8VMk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8VN3
_c8VMy:
	movq $block_c8VMw_info,(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8VMw
_c8VMz:
	movq (%rbx),%rax
	jmp *(%rax)
_u8VN3:
	addq $24,%rbp
	jmp _c8VN0
	.size _c8VMk, .-_c8VMk


==================== Asm code ====================
2018-03-16 16:04:03.251140738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMk_info:
	.quad	_c8VMk
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.251839377 UTC

.section .text
.align 8
_c8VMw:
_c8VMw:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8VML
_u8VN4:
	addq $24,%rbp
	jmp _c8VN0
_c8VML:
	movq $block_c8VMD_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8VMD
_c8VME:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VMw, .-_c8VMw


==================== Asm code ====================
2018-03-16 16:04:03.252448195 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMw_info:
	.quad	_c8VMw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.253150047 UTC

.section .text
.align 8
_c8VMD:
_c8VMD:
	movq 8(%rbp),%rax
	movq $block_c8VMI_info,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c8VMI
_c8VMN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8VMD, .-_c8VMD


==================== Asm code ====================
2018-03-16 16:04:03.253753337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMD_info:
	.quad	_c8VMD
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.254421644 UTC

.section .text
.align 8
_c8VMI:
_c8VMI:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c8VMW
_u8VN5:
	addq $16,%rbp
	jmp _c8VN0
_c8VMW:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8VMI, .-_c8VMI


==================== Asm code ====================
2018-03-16 16:04:03.255028696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VMI_info:
	.quad	_c8VMI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:03.255644056 UTC

.section .text
.align 8
_c8VN0:
_c8VN0:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8VN0, .-_c8VN0


==================== Asm code ====================
2018-03-16 16:04:03.256247408 UTC

.section .text
.align 8
sat_s8U1x_entry:
_c8VNk:
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Foreign.charIsRepresentable3_entry
	.size sat_s8U1x_entry, .-sat_s8U1x_entry


==================== Asm code ====================
2018-03-16 16:04:03.256812802 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8U1x_info:
	.quad	sat_s8U1x_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:03.257920613 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable1_entry
.type GHC.Foreign.charIsRepresentable1_entry, @object
GHC.Foreign.charIsRepresentable1_entry:
_c8VNn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8VNo
_c8VNp:
	movq $block_c8VM0_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8VM0
_c8VM1:
	movq (%rbx),%rax
	jmp *(%rax)
_c8VNo:
	movl $GHC.Foreign.charIsRepresentable1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable1_entry, .-GHC.Foreign.charIsRepresentable1_entry


==================== Asm code ====================
2018-03-16 16:04:03.258567026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable1_info
.type GHC.Foreign.charIsRepresentable1_info, @object
GHC.Foreign.charIsRepresentable1_info:
	.quad	GHC.Foreign.charIsRepresentable1_entry
	.quad	0
	.quad	210453397518
	.quad	12884901903
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.259405278 UTC

.section .text
.align 8
_c8VM0:
_c8VM0:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c8VNs
_c8VNr:
	movq $sat_s8U1w_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq $:_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.Types.[]_closure+1,-32(%r12)
	movq $sat_s8U1x_info,-24(%r12)
	movq %rbx,-16(%r12)
	leaq -46(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	movl $GHC.Foreign.charIsRepresentable2_closure+2,%r14d
	leaq -23(%r12),%rbx
	addq $16,%rbp
	jmp stg_catch#
_c8VNs:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8VM0, .-_c8VM0


==================== Asm code ====================
2018-03-16 16:04:03.260157329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8VM0_info:
	.quad	_c8VM0
	.quad	1
	.quad	73014444062
	.quad	S8U6c_srt+80


==================== Asm code ====================
2018-03-16 16:04:03.26251683 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable_closure
.type GHC.Foreign.charIsRepresentable_closure, @object
GHC.Foreign.charIsRepresentable_closure:
	.quad	GHC.Foreign.charIsRepresentable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:03.263139111 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable_entry
.type GHC.Foreign.charIsRepresentable_entry, @object
GHC.Foreign.charIsRepresentable_entry:
_c8VOm:
	jmp GHC.Foreign.charIsRepresentable1_entry
	.size GHC.Foreign.charIsRepresentable_entry, .-GHC.Foreign.charIsRepresentable_entry


==================== Asm code ====================
2018-03-16 16:04:03.263986974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable_info
.type GHC.Foreign.charIsRepresentable_info, @object
GHC.Foreign.charIsRepresentable_info:
	.quad	GHC.Foreign.charIsRepresentable_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8U6c_srt+120


==================== Asm code ====================
2018-03-16 16:04:03.267300426 UTC

.section .data.rel.ro
.align 8
.align 1
S8U6c_srt:
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	$wpeekCStringLen_r8TNn_closure
	.quad	peekCStringLen1_r8TNo_closure
	.quad	Foreign.Marshal.Array.withArrayLen_closure
	.quad	GHC.Foreign.withCStringsLen1_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	newEncodedCString1_r8TNq_closure
	.quad	GHC.Foreign.newCString1_closure
	.quad	GHC.Foreign.newEncodedCString_closure
	.quad	GHC.Foreign.$wpeekCString_closure
	.quad	GHC.Foreign.peekCString1_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.Foreign.charIsRepresentable2_closure
	.quad	GHC.Foreign.charIsRepresentable1_closure


==================== Asm code ====================
2018-03-16 16:04:06.495811181 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Foreign.$trModule4_bytes
.type GHC.Foreign.$trModule4_bytes, @object
GHC.Foreign.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:06.497712328 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule3_closure
.type GHC.Foreign.$trModule3_closure, @object
GHC.Foreign.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Foreign.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:06.499506068 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Foreign.$trModule2_bytes
.type GHC.Foreign.$trModule2_bytes, @object
GHC.Foreign.$trModule2_bytes:
	.asciz "GHC.Foreign"


==================== Asm code ====================
2018-03-16 16:04:06.50143937 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule1_closure
.type GHC.Foreign.$trModule1_closure, @object
GHC.Foreign.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Foreign.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:06.503331108 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$trModule_closure
.type GHC.Foreign.$trModule_closure, @object
GHC.Foreign.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Foreign.$trModule3_closure+1
	.quad	GHC.Foreign.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:06.523441245 UTC

.section .data
.align 8
.align 1
$wpeekCStringLen_r8TNn_closure:
	.quad	$wpeekCStringLen_r8TNn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.524373675 UTC

.section .text
.align 8
sat_s8VPH_entry:
_c8W4P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8W4Q
_c8W4R:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8W4T
_c8W4S:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8W4T:
	movq $40,904(%r13)
_c8W4Q:
	jmp *-16(%r13)
	.size sat_s8VPH_entry, .-sat_s8VPH_entry


==================== Asm code ====================
2018-03-16 16:04:06.525079419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VPH_info:
	.quad	sat_s8VPH_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:06.525863189 UTC

.section .text
.align 8
sat_s8VPY_entry:
_c8W52:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8W53
_c8W54:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8W53:
	jmp *-16(%r13)
	.size sat_s8VPY_entry, .-sat_s8VPY_entry


==================== Asm code ====================
2018-03-16 16:04:06.526482905 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VPY_info:
	.quad	sat_s8VPY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:06.527213009 UTC

.section .text
.align 8
$wgo_s8VOY_entry:
_c8W55:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8W56
_c8W57:
	leaq block_c8W3u_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8W3u
_c8W3v:
	movq (%rbx),%rax
	jmp *(%rax)
_c8W56:
	jmp *-8(%r13)
	.size $wgo_s8VOY_entry, .-$wgo_s8VOY_entry


==================== Asm code ====================
2018-03-16 16:04:06.527872538 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8VOY_info:
	.quad	$wgo_s8VOY_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:06.52852391 UTC

.section .text
.align 8
_c8W3u:
_c8W3u:
	movq 8(%rbp),%rax
	leaq block_c8W3z_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c8W3u, .-_c8W3u


==================== Asm code ====================
2018-03-16 16:04:06.529112212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3u_info:
	.quad	_c8W3u
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.529784751 UTC

.section .text
.align 8
_c8W3z:
_c8W3z:
	leaq block_c8W3B_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8W3B
_c8W3C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W3z, .-_c8W3z


==================== Asm code ====================
2018-03-16 16:04:06.530327897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3z_info:
	.quad	_c8W3z
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.531016603 UTC

.section .text
.align 8
_c8W3B:
_c8W3B:
	leaq block_c8W3G_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8W3G
_c8W3H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W3B, .-_c8W3B


==================== Asm code ====================
2018-03-16 16:04:06.531679153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3B_info:
	.quad	_c8W3B
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.532480075 UTC

.section .text
.align 8
_c8W3G:
_c8W3G:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8W62
_c8W5v:
	leaq block_c8W5c_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8W5c
_c8W5w:
	movq (%rbx),%rax
	jmp *(%rax)
_c8W62:
	leaq block_c8W4e_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8W4e
_c8W4f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W3G, .-_c8W3G


==================== Asm code ====================
2018-03-16 16:04:06.533120632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3G_info:
	.quad	_c8W3G
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.533882699 UTC

.section .text
.align 8
_c8W4e:
_c8W4e:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c8W6k
_c8W6l:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8W6k:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8W4w
	.size _c8W4e, .-_c8W4e


==================== Asm code ====================
2018-03-16 16:04:06.53457974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W4e_info:
	.quad	_c8W4e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.535360199 UTC

.section .text
.align 8
_c8W4w:
_c8W4w:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8W6f
_c8W6e:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c8W6h
_c8W6i:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c8W65
_c8W6h:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c8W4w
_c8W6f:
	movq $40,904(%r13)
	leaq block_c8W4w_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8W4w, .-_c8W4w


==================== Asm code ====================
2018-03-16 16:04:06.536109803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W4w_info:
	.quad	_c8W4w
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.536902984 UTC

.section .text
.align 8
_c8W65:
_c8W65:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8W6c
_c8W6b:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8W6c:
	movq $40,904(%r13)
	leaq block_c8W64_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8W65, .-_c8W65


==================== Asm code ====================
2018-03-16 16:04:06.537753823 UTC

.section .text
.align 8
_c8W64:
_c8W64:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8W65
	.size _c8W64, .-_c8W64


==================== Asm code ====================
2018-03-16 16:04:06.538314284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W64_info:
	.quad	_c8W64
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.539067165 UTC

.section .text
.align 8
_c8W5c:
_c8W5c:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8W5W
_c8W5K:
	movq 16(%rbp),%rbx
	leaq block_c8W5A_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c8W5W:
	leaq block_c8W5U_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8W5U
_c8W5X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W5c, .-_c8W5c


==================== Asm code ====================
2018-03-16 16:04:06.539764876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W5c_info:
	.quad	_c8W5c
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.54046551 UTC

.section .text
.align 8
_c8W5U:
_c8W5U:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s8VPm
	.size _c8W5U, .-_c8W5U


==================== Asm code ====================
2018-03-16 16:04:06.541091969 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W5U_info:
	.quad	_c8W5U
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.541801359 UTC

.section .text
.align 8
_c8W5A:
_c8W5A:
	leaq block_c8W5C_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8W5C
_c8W5D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W5A, .-_c8W5A


==================== Asm code ====================
2018-03-16 16:04:06.543096257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W5A_info:
	.quad	_c8W5A
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.543788331 UTC

.section .text
.align 8
_c8W5C:
_c8W5C:
	leaq block_c8W5H_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8W5H
_c8W5N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W5C, .-_c8W5C


==================== Asm code ====================
2018-03-16 16:04:06.544365883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W5C_info:
	.quad	_c8W5C
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.545013482 UTC

.section .text
.align 8
_c8W5H:
_c8W5H:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s8VPm
	.size _c8W5H, .-_c8W5H


==================== Asm code ====================
2018-03-16 16:04:06.545659713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W5H_info:
	.quad	_c8W5H
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.546364155 UTC

.section .text
.align 8
_s8VPm:
_s8VPm:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c8W5p
_c8W5q:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	leaq block_c8W4W_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s8VOY_entry
_c8W5p:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c8W46
	.size _s8VPm, .-_s8VPm


==================== Asm code ====================
2018-03-16 16:04:06.547273031 UTC

.section .text
.align 8
_c8W46:
_c8W46:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8W5k
_c8W5j:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c8W5m
_c8W5n:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	leaq block_c8W4H_info(%rip),%rsi
	movq %rsi,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s8VOY_entry
_c8W5m:
	movl (%rax,%rcx,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8W46
_c8W5k:
	movq $40,904(%r13)
	leaq block_c8W46_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8W46, .-_c8W46


==================== Asm code ====================
2018-03-16 16:04:06.548051459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W46_info:
	.quad	_c8W46
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.54874831 UTC

.section .text
.align 8
_c8W4H:
_c8W4H:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8W5h
_c8W5g:
	leaq sat_s8VPH_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8W5h:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8W4H, .-_c8W4H


==================== Asm code ====================
2018-03-16 16:04:06.549370452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W4H_info:
	.quad	_c8W4H
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.550032256 UTC

.section .text
.align 8
_c8W4W:
_c8W4W:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8W5t
_c8W5s:
	leaq sat_s8VPY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8W5t:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8W4W, .-_c8W4W


==================== Asm code ====================
2018-03-16 16:04:06.550583392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W4W_info:
	.quad	_c8W4W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.551266973 UTC

.section .text
.align 8
sat_s8VQT_entry:
_c8W6P:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8W6Q
_c8W6R:
	leaq block_c8W2T_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8W2T
_c8W2U:
	movq (%rbx),%rax
	jmp *(%rax)
_c8W6Q:
	jmp *-8(%r13)
	.size sat_s8VQT_entry, .-sat_s8VQT_entry


==================== Asm code ====================
2018-03-16 16:04:06.55190671 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VQT_info:
	.quad	sat_s8VQT_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.552556263 UTC

.section .text
.align 8
_c8W2T:
_c8W2T:
	leaq block_c8W2Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8W2T, .-_c8W2T


==================== Asm code ====================
2018-03-16 16:04:06.553145854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W2T_info:
	.quad	_c8W2T
	.quad	2
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.554214784 UTC

.section .text
.align 8
_c8W2Y:
_c8W2Y:
	leaq block_c8W30_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8W30
_c8W31:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8W2Y, .-_c8W2Y


==================== Asm code ====================
2018-03-16 16:04:06.554772144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W2Y_info:
	.quad	_c8W2Y
	.quad	67
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.55557173 UTC

.section .text
.align 8
_c8W30:
_c8W30:
	movq 7(%rbx),%rax
	cmpq $1,%rax
	jg _c8W78
_c8W79:
	movl $1,%ebx
_s8VOL:
	movq %rbx,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c8W6Z
_c8W74:
	movq GHC.ForeignPtr.mallocForeignPtrBytes2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c8W78:
	movq %rax,%rbx
	jmp _s8VOL
_c8W6Z:
	leaq block_c8W3g_info(%rip),%rdx
	movq %rdx,-24(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rdx
	movq %rbx,%rsi
	leaq 1(%rdx),%rbx
	movq %rsi,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8W30, .-_c8W30


==================== Asm code ====================
2018-03-16 16:04:06.556240891 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W30_info:
	.quad	_c8W30
	.quad	67
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.556906099 UTC

.section .text
.align 8
_c8W3g:
_c8W3g:
	leaq block_c8W3i_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _c8W3g, .-_c8W3g


==================== Asm code ====================
2018-03-16 16:04:06.557508582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3g_info:
	.quad	_c8W3g
	.quad	966
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.558389583 UTC

.section .text
.align 8
_c8W3i:
_c8W3i:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c8W73
_c8W72:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	leaq $wgo_s8VOY_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s8VOY_entry
_c8W73:
	movq $176,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8W3i, .-_c8W3i


==================== Asm code ====================
2018-03-16 16:04:06.559306491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W3i_info:
	.quad	_c8W3i
	.quad	838
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.560022312 UTC

.section .text
.align 8
$wpeekCStringLen_r8TNn_entry:
_c8W7c:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8W7d
_c8W7e:
	leaq block_c8W2J_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8W2J
_c8W2K:
	movq (%rbx),%rax
	jmp *(%rax)
_c8W7d:
	leaq $wpeekCStringLen_r8TNn_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wpeekCStringLen_r8TNn_entry, .-$wpeekCStringLen_r8TNn_entry


==================== Asm code ====================
2018-03-16 16:04:06.560644117 UTC

.section .data.rel.ro
.align 8
.align 1
$wpeekCStringLen_r8TNn_info:
	.quad	$wpeekCStringLen_r8TNn_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.561411894 UTC

.section .text
.align 8
_c8W2J:
_c8W2J:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8W7h
_c8W7g:
	movq 15(%rbx),%rax
	leaq sat_s8VQT_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8W7h:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8W2J, .-_c8W2J


==================== Asm code ====================
2018-03-16 16:04:06.562067098 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8W2J_info:
	.quad	_c8W2J
	.quad	2
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.565026042 UTC

.section .data
.align 8
.align 1
peekCStringLen1_r8TNo_closure:
	.quad	peekCStringLen1_r8TNo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.566026084 UTC

.section .text
.align 8
peekCStringLen1_r8TNo_entry:
_c8WaD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WaE
_c8WaF:
	leaq block_c8WaA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WaA
_c8WaB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WaE:
	leaq peekCStringLen1_r8TNo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size peekCStringLen1_r8TNo_entry, .-peekCStringLen1_r8TNo_entry


==================== Asm code ====================
2018-03-16 16:04:06.566652811 UTC

.section .data.rel.ro
.align 8
.align 1
peekCStringLen1_r8TNo_info:
	.quad	peekCStringLen1_r8TNo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8W7j_srt+8


==================== Asm code ====================
2018-03-16 16:04:06.567292561 UTC

.section .text
.align 8
_c8WaA:
_c8WaA:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp $wpeekCStringLen_r8TNn_entry
	.size _c8WaA, .-_c8WaA


==================== Asm code ====================
2018-03-16 16:04:06.56789546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WaA_info:
	.quad	_c8WaA
	.quad	1
	.quad	4294967326
	.quad	S8W7j_srt+8


==================== Asm code ====================
2018-03-16 16:04:06.569979668 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCStringLen_closure
.type GHC.Foreign.peekCStringLen_closure, @object
GHC.Foreign.peekCStringLen_closure:
	.quad	GHC.Foreign.peekCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.570591797 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCStringLen_entry
.type GHC.Foreign.peekCStringLen_entry, @object
GHC.Foreign.peekCStringLen_entry:
_c8WaY:
	jmp peekCStringLen1_r8TNo_entry
	.size GHC.Foreign.peekCStringLen_entry, .-GHC.Foreign.peekCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:06.571155774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCStringLen_info
.type GHC.Foreign.peekCStringLen_info, @object
GHC.Foreign.peekCStringLen_info:
	.quad	GHC.Foreign.peekCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8W7j_srt+16


==================== Asm code ====================
2018-03-16 16:04:06.584692878 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$wtryFillBufferAndCall_closure
.type GHC.Foreign.$wtryFillBufferAndCall_closure, @object
GHC.Foreign.$wtryFillBufferAndCall_closure:
	.quad	GHC.Foreign.$wtryFillBufferAndCall_info


==================== Asm code ====================
2018-03-16 16:04:06.586157183 UTC

.section .text
.align 8
.globl GHC.Foreign.$wtryFillBufferAndCall_slow
.type GHC.Foreign.$wtryFillBufferAndCall_slow, @object
GHC.Foreign.$wtryFillBufferAndCall_slow:
_c8Wb6:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size GHC.Foreign.$wtryFillBufferAndCall_slow, .-GHC.Foreign.$wtryFillBufferAndCall_slow


==================== Asm code ====================
2018-03-16 16:04:06.587005495 UTC

.section .text
.align 8
sat_s8VSi_entry:
_c8Wbj:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wbo
_c8Wbp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c8Wbg_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Wbg
_c8Wbh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wbo:
	jmp *-16(%r13)
	.size sat_s8VSi_entry, .-sat_s8VSi_entry


==================== Asm code ====================
2018-03-16 16:04:06.587664954 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VSi_info:
	.quad	sat_s8VSi_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:06.588432924 UTC

.section .text
.align 8
_c8Wbg:
_c8Wbg:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8Wbs
_c8Wbr:
	movq 7(%rbx),%rax
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Wbs:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wbg, .-_c8Wbg


==================== Asm code ====================
2018-03-16 16:04:06.5891179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wbg_info:
	.quad	_c8Wbg
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.590109235 UTC

.section .text
.align 8
.globl GHC.Foreign.$wtryFillBufferAndCall_entry
.type GHC.Foreign.$wtryFillBufferAndCall_entry, @object
GHC.Foreign.$wtryFillBufferAndCall_entry:
_c8Wby:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wbz
_c8WbA:
	leaq block_c8Wba_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8Wbz:
	leaq GHC.Foreign.$wtryFillBufferAndCall_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Foreign.$wtryFillBufferAndCall_entry, .-GHC.Foreign.$wtryFillBufferAndCall_entry


==================== Asm code ====================
2018-03-16 16:04:06.590813776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.$wtryFillBufferAndCall_info
.type GHC.Foreign.$wtryFillBufferAndCall_info, @object
GHC.Foreign.$wtryFillBufferAndCall_info:
	.quad	GHC.Foreign.$wtryFillBufferAndCall_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	1031
	.quad	GHC.Foreign.$wtryFillBufferAndCall_slow


==================== Asm code ====================
2018-03-16 16:04:06.591548651 UTC

.section .text
.align 8
_c8Wba:
_c8Wba:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WbD
_c8WbC:
	leaq sat_s8VSi_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,40(%rbp)
	movq 32(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8Wd8
_c8WbD:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wba, .-_c8Wba


==================== Asm code ====================
2018-03-16 16:04:06.592179156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wba_info:
	.quad	_c8Wba
	.quad	1031
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.592798662 UTC

.section .text
.align 8
_c8Wd8:
_c8Wd8:
	leaq block_c8Wda_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rsi
	movq 40(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c8Wd8, .-_c8Wd8


==================== Asm code ====================
2018-03-16 16:04:06.593527861 UTC

.section .text
.align 8
_c8Wda:
_c8Wda:
	leaq block_c8Wdc_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8Wdc
_c8Wdd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wda, .-_c8Wda


==================== Asm code ====================
2018-03-16 16:04:06.594143672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wda_info:
	.quad	_c8Wda
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.594795793 UTC

.section .text
.align 8
_c8Wdc:
_c8Wdc:
	leaq block_c8Wdh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,40(%rbp)
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c8Wdh
_c8Wdl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wdc, .-_c8Wdc


==================== Asm code ====================
2018-03-16 16:04:06.595374806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wdc_info:
	.quad	_c8Wdc
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.596157918 UTC

.section .text
.align 8
_c8Wdh:
_c8Wdh:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8WdQ
_c8Wdv:
	leaq block_c8Wdt_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c8Wdt
_c8Wdw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WdQ:
	leaq block_c8WbJ_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 24(%rbp),%rbx
	movq 40(%rbp),%rax
	movq %rax,48(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _c8WbJ
_c8WcB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wdh, .-_c8Wdh


==================== Asm code ====================
2018-03-16 16:04:06.596825487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wdh_info:
	.quad	_c8Wdh
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.59752821 UTC

.section .text
.align 8
_c8WbJ:
_c8WbJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8WdX
_c8WcM:
	leaq block_c8WcK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _c8WcK
_c8WcN:
	movq (%rbx),%rax
	jmp *(%rax)
_u8WdX:
	addq $8,%rbp
	jmp _s8VRe
	.size _c8WbJ, .-_c8WbJ


==================== Asm code ====================
2018-03-16 16:04:06.59810047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WbJ_info:
	.quad	_c8WbJ
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.598741587 UTC

.section .text
.align 8
_c8WcK:
_c8WcK:
	leaq 47(%rbx),%rax
	movq 31(%rbx),%rbx
	subq (%rax),%rbx
	testq %rbx,%rbx
	je _u8WdY
_u8WdZ:
	addq $8,%rbp
	jmp _s8VRe
_u8WdY:
	addq $48,%rbp
	jmp _c8Wd3
	.size _c8WcK, .-_c8WcK


==================== Asm code ====================
2018-03-16 16:04:06.599295045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WcK_info:
	.quad	_c8WcK
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.59995764 UTC

.section .text
.align 8
_s8VRe:
_s8VRe:
	leaq block_c8WbO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WbO
_c8WbQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s8VRe, .-_s8VRe


==================== Asm code ====================
2018-03-16 16:04:06.600644605 UTC

.section .text
.align 8
_c8WbO:
_c8WbO:
	leaq block_c8WbU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rbp),%rbx
	movq %rsi,8(%rbp)
	movq %rdx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	testb $7,%bl
	jne _c8WbU
_c8WbW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WbO, .-_c8WbO


==================== Asm code ====================
2018-03-16 16:04:06.60134937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WbO_info:
	.quad	_c8WbO
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.602298229 UTC

.section .text
.align 8
_c8WbU:
_c8WbU:
	movq 40(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	andl $7,%edi
	cmpq $1,%rdi
	je _c8Wcb
_c8Wcu:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Wcx
_c8Wcw:
	movb $0,(%rcx,%rsi,1)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	subq %rdx,%rsi
	movq %rsi,-40(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c8Wcq_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c8Wcx:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Wcb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Wcx
_c8Wcd:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	subq %rdx,%rsi
	movq %rsi,-40(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -47(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c8Wc6_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _c8WbU, .-_c8WbU


==================== Asm code ====================
2018-03-16 16:04:06.603214751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WbU_info:
	.quad	_c8WbU
	.quad	709
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.603903168 UTC

.section .text
.align 8
_c8Wc6:
_c8Wc6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Wch
_c8Wcg:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Wch:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wc6, .-_c8Wc6


==================== Asm code ====================
2018-03-16 16:04:06.604515115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wc6_info:
	.quad	_c8Wc6
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.605213836 UTC

.section .text
.align 8
_c8Wcq:
_c8Wcq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8WcA
_c8Wcz:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WcA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wcq, .-_c8Wcq


==================== Asm code ====================
2018-03-16 16:04:06.605881679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wcq_info:
	.quad	_c8Wcq
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.606567739 UTC

.section .text
.align 8
_c8Wdt:
_c8Wdt:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8WdV
_c8WdF:
	leaq block_c8WdA_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	movq 48(%rbp),%r14
	movq 16(%rbp),%rbx
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_u8WdV:
	addq $64,%rbp
	jmp _c8Wd3
	.size _c8Wdt, .-_c8Wdt


==================== Asm code ====================
2018-03-16 16:04:06.607159769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wdt_info:
	.quad	_c8Wdt
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.60772256 UTC

.section .text
.align 8
_c8Wd3:
_c8Wd3:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wd3, .-_c8Wd3


==================== Asm code ====================
2018-03-16 16:04:06.608362821 UTC

.section .text
.align 8
_c8WdA:
_c8WdA:
	leaq block_c8WdC_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WdC
_c8WdH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WdA, .-_c8WdA


==================== Asm code ====================
2018-03-16 16:04:06.608940447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WdA_info:
	.quad	_c8WdA
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.609616215 UTC

.section .text
.align 8
_c8WdC:
_c8WdC:
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 15(%rbx),%rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c8Wd8
	.size _c8WdC, .-_c8WdC


==================== Asm code ====================
2018-03-16 16:04:06.610198273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WdC_info:
	.quad	_c8WdC
	.quad	3591
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.613926672 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCStringLen1_closure
.type GHC.Foreign.newCStringLen1_closure, @object
GHC.Foreign.newCStringLen1_closure:
	.quad	GHC.Foreign.newCStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:06.614665501 UTC

.section .text
.align 8
.globl GHC.Foreign.newCStringLen1_entry
.type GHC.Foreign.newCStringLen1_entry, @object
GHC.Foreign.newCStringLen1_entry:
_c8Wgr:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wgv
_c8Wgw:
	leaq block_c8Wgo_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Wgo
_c8Wgp:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wgv:
	leaq GHC.Foreign.newCStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.newCStringLen1_entry, .-GHC.Foreign.newCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:06.615325636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCStringLen1_info
.type GHC.Foreign.newCStringLen1_info, @object
GHC.Foreign.newCStringLen1_info:
	.quad	GHC.Foreign.newCStringLen1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:04:06.616029938 UTC

.section .text
.align 8
_c8Wgo:
_c8Wgo:
	leaq block_c8Wgu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Wgu
_c8Wgy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wgo, .-_c8Wgo


==================== Asm code ====================
2018-03-16 16:04:06.616640886 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wgo_info:
	.quad	_c8Wgo
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.618410803 UTC

.section .text
.align 8
_c8Wgu:
_c8Wgu:
	movq 7(%rbx),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size _c8Wgu, .-_c8Wgu


==================== Asm code ====================
2018-03-16 16:04:06.619030575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wgu_info:
	.quad	_c8Wgu
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.630292247 UTC

.section .data
.align 8
.align 1
withEncodedCString1_r8TNp_closure:
	.quad	withEncodedCString1_r8TNp_info


==================== Asm code ====================
2018-03-16 16:04:06.631125492 UTC

.section .text
.align 8
$wgo_s8VSZ_entry:
_c8WhD:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WhE
_c8WhF:
	leaq block_c8Why_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rsi
	movq 30(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-56,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
_c8WhE:
	jmp *-8(%r13)
	.size $wgo_s8VSZ_entry, .-$wgo_s8VSZ_entry


==================== Asm code ====================
2018-03-16 16:04:06.631799584 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8VSZ_info:
	.quad	$wgo_s8VSZ_entry
	.quad	4
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:06.632457273 UTC

.section .text
.align 8
_c8Why:
_c8Why:
	leaq block_c8WhA_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c8WhA
_c8WhB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Why, .-_c8Why


==================== Asm code ====================
2018-03-16 16:04:06.633062932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Why_info:
	.quad	_c8Why
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.633864122 UTC

.section .text
.align 8
_c8WhA:
_c8WhA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8WhL
_c8WhK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq 48(%rbp),%rcx
	movq %rcx,(%r12)
	movq 16(%rbp),%rcx
	leaq block_c8WhQ_info(%rip),%rdx
	movq %rdx,16(%rbp)
	movq 24(%rbp),%rdx
	leaq 16(%rdx),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
_c8WhL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WhA, .-_c8WhA


==================== Asm code ====================
2018-03-16 16:04:06.634591019 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WhA_info:
	.quad	_c8WhA
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.635268506 UTC

.section .text
.align 8
_c8WhQ:
_c8WhQ:
	leaq block_c8WhS_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WhS
_c8WhU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WhQ, .-_c8WhQ


==================== Asm code ====================
2018-03-16 16:04:06.635832576 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WhQ_info:
	.quad	_c8WhQ
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.636503613 UTC

.section .text
.align 8
_c8WhS:
_c8WhS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Wi4
_c8Wia:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Wi4:
	leaq block_c8Wi2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%r14
	shlq $1,%r14
	movq 24(%rbp),%rbx
	jmp $wgo_s8VSZ_entry
	.size _c8WhS, .-_c8WhS


==================== Asm code ====================
2018-03-16 16:04:06.63710646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WhS_info:
	.quad	_c8WhS
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.637707228 UTC

.section .text
.align 8
_c8Wi2:
_c8Wi2:
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wi2, .-_c8Wi2


==================== Asm code ====================
2018-03-16 16:04:06.638257494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wi2_info:
	.quad	_c8Wi2
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.638996719 UTC

.section .text
.align 8
sat_s8VTH_entry:
_c8Wig:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wih
_c8Wii:
	leaq block_c8Wh8_info(%rip),%rax
	movq %rax,-40(%rbp)
	xorl %esi,%esi
	movq 14(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq 6(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq 22(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c8Wih:
	jmp *-8(%r13)
	.size sat_s8VTH_entry, .-sat_s8VTH_entry


==================== Asm code ====================
2018-03-16 16:04:06.639651438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VTH_info:
	.quad	sat_s8VTH_entry
	.quad	3
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:06.640290204 UTC

.section .text
.align 8
_c8Wh8:
_c8Wh8:
	leaq block_c8Whf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8Wh8, .-_c8Wh8


==================== Asm code ====================
2018-03-16 16:04:06.640889434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wh8_info:
	.quad	_c8Wh8
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.641632753 UTC

.section .text
.align 8
_c8Whf:
_c8Whf:
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp _c8Wix
	.size _c8Whf, .-_c8Whf


==================== Asm code ====================
2018-03-16 16:04:06.642215883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Whf_info:
	.quad	_c8Whf
	.quad	69
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.642900013 UTC

.section .text
.align 8
_c8Wix:
_c8Wix:
	movq (%rbp),%rax
	leaq block_c8WiA_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8WiA
_c8WiC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wix, .-_c8Wix


==================== Asm code ====================
2018-03-16 16:04:06.643705262 UTC

.section .text
.align 8
_c8WiA:
_c8WiA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8WiI
_c8WiN:
	leaq block_c8WiL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WiL
_c8WiO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WiI:
	leaq block_c8Whp_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8WiA, .-_c8WiA


==================== Asm code ====================
2018-03-16 16:04:06.644384707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WiA_info:
	.quad	_c8WiA
	.quad	455
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.645218756 UTC

.section .text
.align 8
_c8Whp:
_c8Whp:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8Wio
_c8Win:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-88(%r12)
	leaq -103(%r12),%rax
	movq %rax,-80(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq $0,-48(%r12)
	movq %rax,-40(%r12)
	leaq $wgo_s8VSZ_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -87(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c8Wis_info(%rip),%rbx
	movq %rbx,24(%rbp)
	leaq 1(%rax),%r14
	leaq -30(%r12),%rbx
	addq $24,%rbp
	jmp $wgo_s8VSZ_entry
_c8Wio:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Whp, .-_c8Whp


==================== Asm code ====================
2018-03-16 16:04:06.646022746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Whp_info:
	.quad	_c8Whp
	.quad	198
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.646638713 UTC

.section .text
.align 8
_c8Wis:
_c8Wis:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wis, .-_c8Wis


==================== Asm code ====================
2018-03-16 16:04:06.647217665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wis_info:
	.quad	_c8Wis
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.64784813 UTC

.section .text
.align 8
_c8WiL:
_c8WiL:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Wix
	.size _c8WiL, .-_c8WiL


==================== Asm code ====================
2018-03-16 16:04:06.648427649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WiL_info:
	.quad	_c8WiL
	.quad	904
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.649147801 UTC

.section .text
.align 8
withEncodedCString1_r8TNp_entry:
_c8Wj2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wj3
_c8Wj4:
	leaq block_c8WgY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8WgY
_c8WgZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wj3:
	leaq withEncodedCString1_r8TNp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size withEncodedCString1_r8TNp_entry, .-withEncodedCString1_r8TNp_entry


==================== Asm code ====================
2018-03-16 16:04:06.64982954 UTC

.section .data.rel.ro
.align 8
.align 1
withEncodedCString1_r8TNp_info:
	.quad	withEncodedCString1_r8TNp_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:04:06.650577614 UTC

.section .text
.align 8
_c8WgY:
_c8WgY:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8Wj7
_c8Wj6:
	movq 23(%rbx),%rax
	leaq sat_s8VTH_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8Wj7:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WgY, .-_c8WgY


==================== Asm code ====================
2018-03-16 16:04:06.65126953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WgY_info:
	.quad	_c8WgY
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.653579831 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withEncodedCString_closure
.type GHC.Foreign.withEncodedCString_closure, @object
GHC.Foreign.withEncodedCString_closure:
	.quad	GHC.Foreign.withEncodedCString_info


==================== Asm code ====================
2018-03-16 16:04:06.654206558 UTC

.section .text
.align 8
.globl GHC.Foreign.withEncodedCString_entry
.type GHC.Foreign.withEncodedCString_entry, @object
GHC.Foreign.withEncodedCString_entry:
_c8WkS:
	jmp withEncodedCString1_r8TNp_entry
	.size GHC.Foreign.withEncodedCString_entry, .-GHC.Foreign.withEncodedCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.654742938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withEncodedCString_info
.type GHC.Foreign.withEncodedCString_info, @object
GHC.Foreign.withEncodedCString_info:
	.quad	GHC.Foreign.withEncodedCString_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:04:06.671680963 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable3_closure
.type GHC.Foreign.charIsRepresentable3_closure, @object
GHC.Foreign.charIsRepresentable3_closure:
	.quad	GHC.Foreign.charIsRepresentable3_info


==================== Asm code ====================
2018-03-16 16:04:06.672544907 UTC

.section .text
.align 8
$wgo_s8VU8_entry:
_c8WlM:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WlN
_c8WlO:
	leaq block_c8WlD_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-48,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
_c8WlN:
	jmp *-8(%r13)
	.size $wgo_s8VU8_entry, .-$wgo_s8VU8_entry


==================== Asm code ====================
2018-03-16 16:04:06.673208551 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8VU8_info:
	.quad	$wgo_s8VU8_entry
	.quad	3
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:06.673910297 UTC

.section .text
.align 8
_c8WlD:
_c8WlD:
	leaq block_c8WlF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	movq %rbx,%rcx
	leaq 1(%rax),%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8WlD, .-_c8WlD


==================== Asm code ====================
2018-03-16 16:04:06.674450925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WlD_info:
	.quad	_c8WlD
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.675164139 UTC

.section .text
.align 8
_c8WlF:
_c8WlF:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8WlS
_c8WlR:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	addq $16,%rax
	movq %rax,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,32(%rbp)
	jmp _c8WmL
_c8WlS:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WlF, .-_c8WlF


==================== Asm code ====================
2018-03-16 16:04:06.675869326 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WlF_info:
	.quad	_c8WlF
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.676556152 UTC

.section .text
.align 8
_c8WmL:
_c8WmL:
	leaq block_c8WmN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WmN
_c8WmO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WmL, .-_c8WmL


==================== Asm code ====================
2018-03-16 16:04:06.677211466 UTC

.section .text
.align 8
_c8WmN:
_c8WmN:
	movq 8(%rbp),%rax
	leaq block_c8WmS_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 40(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c8WmN, .-_c8WmN


==================== Asm code ====================
2018-03-16 16:04:06.677847736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WmN_info:
	.quad	_c8WmN
	.quad	4103
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.678467592 UTC

.section .text
.align 8
_c8WmS:
_c8WmS:
	leaq block_c8WmU_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WmU
_c8WmV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WmS, .-_c8WmS


==================== Asm code ====================
2018-03-16 16:04:06.679031973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WmS_info:
	.quad	_c8WmS
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.679673554 UTC

.section .text
.align 8
_c8WmU:
_c8WmU:
	leaq block_c8WmZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WmZ
_c8Wn4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WmU, .-_c8WmU


==================== Asm code ====================
2018-03-16 16:04:06.680269584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WmU_info:
	.quad	_c8WmU
	.quad	2054
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.681002763 UTC

.section .text
.align 8
_c8WmZ:
_c8WmZ:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8Wnz
_c8Wne:
	leaq block_c8Wnc_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8Wnc
_c8Wnf:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wnz:
	leaq block_c8Wma_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c8Wma
_c8Wmc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WmZ, .-_c8WmZ


==================== Asm code ====================
2018-03-16 16:04:06.681698164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WmZ_info:
	.quad	_c8WmZ
	.quad	8200
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.682371574 UTC

.section .text
.align 8
_c8Wma:
_c8Wma:
	movq 47(%rbx),%rax
	movq 31(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	jne _u8WnH
_c8Wmy:
	leaq block_c8WmF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%r14
	shlq $1,%r14
	movq 40(%rbp),%rbx
	jmp $wgo_s8VU8_entry
_u8WnH:
	movq %rcx,24(%rbp)
	movq %rax,32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	movq 23(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8Wml
	.size _c8Wma, .-_c8Wma


==================== Asm code ====================
2018-03-16 16:04:06.683022025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wma_info:
	.quad	_c8Wma
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.683732391 UTC

.section .text
.align 8
_c8Wml:
_c8Wml:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Wmt
_c8Wms:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 24(%rbp),%rcx
	movb $0,(%rbx,%rcx,1)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c8Wmo_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c8Wmt:
	movq $16,904(%r13)
	leaq block_c8Wmk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c8Wml, .-_c8Wml


==================== Asm code ====================
2018-03-16 16:04:06.684499546 UTC

.section .text
.align 8
_c8Wmk:
_c8Wmk:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8Wml
	.size _c8Wmk, .-_c8Wmk


==================== Asm code ====================
2018-03-16 16:04:06.685087295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wmk_info:
	.quad	_c8Wmk
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.68623286 UTC

.section .text
.align 8
_c8Wmo:
_c8Wmo:
	movq 8(%rbp),%rax
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wmo, .-_c8Wmo


==================== Asm code ====================
2018-03-16 16:04:06.686770669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wmo_info:
	.quad	_c8Wmo
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.687368067 UTC

.section .text
.align 8
_c8WmF:
_c8WmF:
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8WmF, .-_c8WmF


==================== Asm code ====================
2018-03-16 16:04:06.687897368 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WmF_info:
	.quad	_c8WmF
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.688574391 UTC

.section .text
.align 8
_c8Wnc:
_c8Wnc:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8Wny
_c8Wno:
	movq 16(%rbp),%rax
	leaq block_c8Wnj_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 48(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c8Wny:
	leaq block_c8Wm2_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 64(%rbp),%r14
	shlq $1,%r14
	movq 56(%rbp),%rbx
	addq $16,%rbp
	jmp $wgo_s8VU8_entry
	.size _c8Wnc, .-_c8Wnc


==================== Asm code ====================
2018-03-16 16:04:06.689234092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wnc_info:
	.quad	_c8Wnc
	.quad	8200
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.689849244 UTC

.section .text
.align 8
_c8Wm2:
_c8Wm2:
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wm2, .-_c8Wm2


==================== Asm code ====================
2018-03-16 16:04:06.690399758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wm2_info:
	.quad	_c8Wm2
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.691057665 UTC

.section .text
.align 8
_c8Wnj:
_c8Wnj:
	leaq block_c8Wnl_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8Wnl
_c8Wnq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wnj, .-_c8Wnj


==================== Asm code ====================
2018-03-16 16:04:06.691611037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wnj_info:
	.quad	_c8Wnj
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.692206879 UTC

.section .text
.align 8
_c8Wnl:
_c8Wnl:
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	jmp _c8WmL
	.size _c8Wnl, .-_c8Wnl


==================== Asm code ====================
2018-03-16 16:04:06.692755796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wnl_info:
	.quad	_c8Wnl
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.693896216 UTC

.section .text
.align 8
sat_s8VVD_entry:
_c8WnT:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WnU
_c8WnV:
	leaq block_c8Wld_info(%rip),%rax
	movq %rax,-32(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c8WnU:
	jmp *-8(%r13)
	.size sat_s8VVD_entry, .-sat_s8VVD_entry


==================== Asm code ====================
2018-03-16 16:04:06.694551207 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VVD_info:
	.quad	sat_s8VVD_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:06.695192256 UTC

.section .text
.align 8
_c8Wld:
_c8Wld:
	leaq block_c8Wlk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8Wld, .-_c8Wld


==================== Asm code ====================
2018-03-16 16:04:06.695764531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wld_info:
	.quad	_c8Wld
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.696405482 UTC

.section .text
.align 8
_c8Wlk:
_c8Wlk:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8Woa
	.size _c8Wlk, .-_c8Wlk


==================== Asm code ====================
2018-03-16 16:04:06.696981853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wlk_info:
	.quad	_c8Wlk
	.quad	68
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.697675975 UTC

.section .text
.align 8
_c8Woa:
_c8Woa:
	movq (%rbp),%rax
	leaq block_c8Wod_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Wod
_c8Wof:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Woa, .-_c8Woa


==================== Asm code ====================
2018-03-16 16:04:06.69842274 UTC

.section .text
.align 8
_c8Wod:
_c8Wod:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Wol
_c8Woq:
	leaq block_c8Woo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Woo
_c8Wor:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wol:
	leaq block_c8Wlu_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8Wod, .-_c8Wod


==================== Asm code ====================
2018-03-16 16:04:06.699095554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wod_info:
	.quad	_c8Wod
	.quad	454
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.700460238 UTC

.section .text
.align 8
_c8Wlu:
_c8Wlu:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c8Wo1
_c8Wo0:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-96(%r12)
	movq %rbx,-88(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-80(%r12)
	leaq -95(%r12),%rax
	movq %rax,-72(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq $0,-40(%r12)
	movq %rax,-32(%r12)
	leaq $wgo_s8VU8_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c8Wo5_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq 1(%rax),%r14
	leaq -22(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_s8VU8_entry
_c8Wo1:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wlu, .-_c8Wlu


==================== Asm code ====================
2018-03-16 16:04:06.701232612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wlu_info:
	.quad	_c8Wlu
	.quad	197
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.701869177 UTC

.section .text
.align 8
_c8Wo5:
_c8Wo5:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Wo5, .-_c8Wo5


==================== Asm code ====================
2018-03-16 16:04:06.702413014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wo5_info:
	.quad	_c8Wo5
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.703061384 UTC

.section .text
.align 8
_c8Woo:
_c8Woo:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Woa
	.size _c8Woo, .-_c8Woo


==================== Asm code ====================
2018-03-16 16:04:06.703633462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Woo_info:
	.quad	_c8Woo
	.quad	903
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.704381556 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable3_entry
.type GHC.Foreign.charIsRepresentable3_entry, @object
GHC.Foreign.charIsRepresentable3_entry:
_c8WoF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WoG
_c8WoH:
	leaq block_c8Wl3_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Wl3
_c8Wl4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WoG:
	leaq GHC.Foreign.charIsRepresentable3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable3_entry, .-GHC.Foreign.charIsRepresentable3_entry


==================== Asm code ====================
2018-03-16 16:04:06.705059087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable3_info
.type GHC.Foreign.charIsRepresentable3_info, @object
GHC.Foreign.charIsRepresentable3_info:
	.quad	GHC.Foreign.charIsRepresentable3_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:06.705853812 UTC

.section .text
.align 8
_c8Wl3:
_c8Wl3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8WoK
_c8WoJ:
	movq 23(%rbx),%rax
	leaq sat_s8VVD_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8WoK:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wl3, .-_c8Wl3


==================== Asm code ====================
2018-03-16 16:04:06.706538488 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wl3_info:
	.quad	_c8Wl3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.708833263 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCString_closure
.type GHC.Foreign.withCString_closure, @object
GHC.Foreign.withCString_closure:
	.quad	GHC.Foreign.withCString_info


==================== Asm code ====================
2018-03-16 16:04:06.709750295 UTC

.section .text
.align 8
.globl GHC.Foreign.withCString_entry
.type GHC.Foreign.withCString_entry, @object
GHC.Foreign.withCString_entry:
_c8Wrq:
	jmp GHC.Foreign.charIsRepresentable3_entry
	.size GHC.Foreign.withCString_entry, .-GHC.Foreign.withCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.710279107 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCString_info
.type GHC.Foreign.withCString_info, @object
GHC.Foreign.withCString_info:
	.quad	GHC.Foreign.withCString_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:06.716245422 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen1_closure
.type GHC.Foreign.withCStringsLen1_closure, @object
GHC.Foreign.withCStringsLen1_closure:
	.quad	GHC.Foreign.withCStringsLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.717046184 UTC

.section .text
.align 8
sat_s8VVN_entry:
_c8WrP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WrQ
_c8WrR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.List.reverse_entry@gotpcrel(%rip)
_c8WrQ:
	jmp *-16(%r13)
	.size sat_s8VVN_entry, .-sat_s8VVN_entry


==================== Asm code ====================
2018-03-16 16:04:06.717709918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VVN_info:
	.quad	sat_s8VVN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:06.718428045 UTC

.section .text
.align 8
sat_s8VVT_entry:
_c8Ws0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Ws4
_c8Ws3:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rcx,(%r12)
	movq %rbx,%rsi
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp go_s8VVI_entry
_c8Ws4:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8VVT_entry, .-sat_s8VVT_entry


==================== Asm code ====================
2018-03-16 16:04:06.719114124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VVT_info:
	.quad	sat_s8VVT_entry
	.quad	3
	.quad	4294967304
	.quad	8589934597
	.quad	S8W7j_srt+24


==================== Asm code ====================
2018-03-16 16:04:06.719898423 UTC

.section .text
.align 8
go_s8VVI_entry:
_c8Ws9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Wsa
_c8Wsb:
	leaq block_c8WrG_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rsi,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8WrG
_c8WrH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wsa:
	jmp *-8(%r13)
	.size go_s8VVI_entry, .-go_s8VVI_entry


==================== Asm code ====================
2018-03-16 16:04:06.720565813 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8VVI_info:
	.quad	go_s8VVI_entry
	.quad	2
	.quad	4294967307
	.quad	12884901903
	.quad	S8W7j_srt+24


==================== Asm code ====================
2018-03-16 16:04:06.721968513 UTC

.section .text
.align 8
_c8WrG:
_c8WrG:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8Ws6
_c8Ws7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8Wsh
_c8Wsg:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	leaq sat_s8VVT_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -22(%r12),%rdi
	movq %rcx,%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Foreign.charIsRepresentable3_entry
_c8Wsh:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Wse:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Ws6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Wse
_c8Wsd:
	leaq sat_s8VVN_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq 16(%rbp),%rdi
	leaq -16(%r12),%rsi
	movq Foreign.Storable.$fStorablePtr_closure@gotpcrel(%rip),%r14
	movq stg_ap_v_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp *Foreign.Marshal.Array.withArrayLen_entry@gotpcrel(%rip)
	.size _c8WrG, .-_c8WrG


==================== Asm code ====================
2018-03-16 16:04:06.722762536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WrG_info:
	.quad	_c8WrG
	.quad	4
	.quad	4294967326
	.quad	S8W7j_srt+24


==================== Asm code ====================
2018-03-16 16:04:06.723494944 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringsLen1_entry
.type GHC.Foreign.withCStringsLen1_entry, @object
GHC.Foreign.withCStringsLen1_entry:
_c8Wsj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Wsn
_c8Wsm:
	leaq go_s8VVI_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	leaq -13(%r12),%rbx
	jmp go_s8VVI_entry
_c8Wsn:
	movq $24,904(%r13)
	leaq GHC.Foreign.withCStringsLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.withCStringsLen1_entry, .-GHC.Foreign.withCStringsLen1_entry


==================== Asm code ====================
2018-03-16 16:04:06.724127062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen1_info
.type GHC.Foreign.withCStringsLen1_info, @object
GHC.Foreign.withCStringsLen1_info:
	.quad	GHC.Foreign.withCStringsLen1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S8W7j_srt+24


==================== Asm code ====================
2018-03-16 16:04:06.72640123 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen_closure
.type GHC.Foreign.withCStringsLen_closure, @object
GHC.Foreign.withCStringsLen_closure:
	.quad	GHC.Foreign.withCStringsLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.727025572 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringsLen_entry
.type GHC.Foreign.withCStringsLen_entry, @object
GHC.Foreign.withCStringsLen_entry:
_c8WsW:
	jmp GHC.Foreign.withCStringsLen1_entry
	.size GHC.Foreign.withCStringsLen_entry, .-GHC.Foreign.withCStringsLen_entry


==================== Asm code ====================
2018-03-16 16:04:06.72757858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringsLen_info
.type GHC.Foreign.withCStringsLen_info, @object
GHC.Foreign.withCStringsLen_info:
	.quad	GHC.Foreign.withCStringsLen_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S8W7j_srt+32


==================== Asm code ====================
2018-03-16 16:04:06.729771619 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.withCStringLen_closure
.type GHC.Foreign.withCStringLen_closure, @object
GHC.Foreign.withCStringLen_closure:
	.quad	GHC.Foreign.withCStringLen_info


==================== Asm code ====================
2018-03-16 16:04:06.730459298 UTC

.section .text
.align 8
.globl GHC.Foreign.withCStringLen_entry
.type GHC.Foreign.withCStringLen_entry, @object
GHC.Foreign.withCStringLen_entry:
_c8Wt7:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	jmp GHC.Foreign.withEncodedCString_entry
	.size GHC.Foreign.withCStringLen_entry, .-GHC.Foreign.withCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:06.731096167 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.withCStringLen_info
.type GHC.Foreign.withCStringLen_info, @object
GHC.Foreign.withCStringLen_info:
	.quad	GHC.Foreign.withCStringLen_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:04:06.732849274 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString2_closure
.type GHC.Foreign.newCString2_closure, @object
GHC.Foreign.newCString2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.745306338 UTC

.section .data
.align 8
.align 1
newEncodedCString1_r8TNq_closure:
	.quad	newEncodedCString1_r8TNq_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.746169012 UTC

.section .text
.align 8
sat_s8VXc_entry:
_c8WuF:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WuG
_c8WuH:
	leaq block_c8Wtu_info(%rip),%rax
	movq %rax,-32(%rbp)
	xorl %esi,%esi
	movq 14(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq 6(%rbx),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c8WuG:
	jmp *-8(%r13)
	.size sat_s8VXc_entry, .-sat_s8VXc_entry


==================== Asm code ====================
2018-03-16 16:04:06.74685081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VXc_info:
	.quad	sat_s8VXc_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.74752229 UTC

.section .text
.align 8
_c8Wtu:
_c8Wtu:
	leaq block_c8WtB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8Wtu, .-_c8Wtu


==================== Asm code ====================
2018-03-16 16:04:06.748081846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wtu_info:
	.quad	_c8Wtu
	.quad	3
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.748673271 UTC

.section .text
.align 8
_c8WtB:
_c8WtB:
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,24(%rbp)
	addq $-16,%rbp
	jmp _c8Wvm
	.size _c8WtB, .-_c8WtB


==================== Asm code ====================
2018-03-16 16:04:06.749673548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WtB_info:
	.quad	_c8WtB
	.quad	68
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.750331108 UTC

.section .text
.align 8
_c8Wvm:
_c8Wvm:
	movq (%rbp),%rax
	leaq block_c8Wvp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Wvp
_c8Wvr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wvm, .-_c8Wvm


==================== Asm code ====================
2018-03-16 16:04:06.751114828 UTC

.section .text
.align 8
_c8Wvp:
_c8Wvp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8Wvx
_c8WvC:
	leaq block_c8WvA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WvA
_c8WvD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Wvx:
	leaq block_c8WtL_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8Wvp, .-_c8Wvp


==================== Asm code ====================
2018-03-16 16:04:06.751743419 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wvp_info:
	.quad	_c8Wvp
	.quad	454
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.752644455 UTC

.section .text
.align 8
_c8WtL:
_c8WtL:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8WuN
_c8WuM:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8Wvj
_c8Wvi:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8Wu5
_c8Wvj:
	addq $-88,%r12
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8WuN:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WtL, .-_c8WtL


==================== Asm code ====================
2018-03-16 16:04:06.753516929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WtL_info:
	.quad	_c8WtL
	.quad	197
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.754161144 UTC

.section .text
.align 8
_c8Wu5:
_c8Wu5:
	leaq block_c8Wu8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Wu8
_c8Wu9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wu5, .-_c8Wu5


==================== Asm code ====================
2018-03-16 16:04:06.75490606 UTC

.section .text
.align 8
_c8Wu8:
_c8Wu8:
	leaq block_c8Wud_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r9
	movq 24(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	movq GHC.Base.$fApplicativeIO4_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
	.size _c8Wu8, .-_c8Wu8


==================== Asm code ====================
2018-03-16 16:04:06.755511739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wu8_info:
	.quad	_c8Wu8
	.quad	134
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.756201426 UTC

.section .text
.align 8
_c8Wud:
_c8Wud:
	leaq block_c8Wuf_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8Wuf
_c8Wug:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wud, .-_c8Wud


==================== Asm code ====================
2018-03-16 16:04:06.756787637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wud_info:
	.quad	_c8Wud
	.quad	134
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.757563109 UTC

.section .text
.align 8
_c8Wuf:
_c8Wuf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8WuX
_c8Wvg:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WuX:
	movq 8(%rbp),%rax
	leaq block_c8Wuk_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Wuk
_c8Wul:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wuf, .-_c8Wuf


==================== Asm code ====================
2018-03-16 16:04:06.758181048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wuf_info:
	.quad	_c8Wuf
	.quad	134
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.758904321 UTC

.section .text
.align 8
_c8Wuk:
_c8Wuk:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u8WvR
_c8Wv9:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	movq $0,8(%rbp)
	leaq GHC.Foreign.newCString2_closure+1(%rip),%rax
	movq %rax,(%rbp)
	jmp _c8Wu5
_u8WvR:
	movq %rax,(%rbp)
	jmp _c8Wut
	.size _c8Wuk, .-_c8Wuk


==================== Asm code ====================
2018-03-16 16:04:06.759503025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wuk_info:
	.quad	_c8Wuk
	.quad	69
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.760301468 UTC

.section .text
.align 8
_c8Wut:
_c8Wut:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8Wv3
_c8Wv2:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8Wv6
_c8Wv5:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c8Wu5
_c8Wv6:
	addq $-16,%r12
	movq Foreign.Marshal.Alloc.realloc2_closure@gotpcrel(%rip),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8Wv3:
	movq $16,904(%r13)
	leaq block_c8Wus_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c8Wut, .-_c8Wut


==================== Asm code ====================
2018-03-16 16:04:06.761031085 UTC

.section .text
.align 8
_c8Wus:
_c8Wus:
	movq %rbx,(%rbp)
	jmp _c8Wut
	.size _c8Wus, .-_c8Wus


==================== Asm code ====================
2018-03-16 16:04:06.761598255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wus_info:
	.quad	_c8Wus
	.quad	69
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.762264606 UTC

.section .text
.align 8
_c8WvA:
_c8WvA:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8Wvm
	.size _c8WvA, .-_c8WvA


==================== Asm code ====================
2018-03-16 16:04:06.762846871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WvA_info:
	.quad	_c8WvA
	.quad	903
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.76360093 UTC

.section .text
.align 8
newEncodedCString1_r8TNq_entry:
_c8Ww7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ww8
_c8Ww9:
	leaq block_c8Wtk_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Wtk
_c8Wtl:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Ww8:
	leaq newEncodedCString1_r8TNq_closure(%rip),%rbx
	jmp *-8(%r13)
	.size newEncodedCString1_r8TNq_entry, .-newEncodedCString1_r8TNq_entry


==================== Asm code ====================
2018-03-16 16:04:06.764249204 UTC

.section .data.rel.ro
.align 8
.align 1
newEncodedCString1_r8TNq_info:
	.quad	newEncodedCString1_r8TNq_entry
	.quad	0
	.quad	30064771086
	.quad	17179869207
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.764976707 UTC

.section .text
.align 8
_c8Wtk:
_c8Wtk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8Wwc
_c8Wwb:
	movq 23(%rbx),%rax
	leaq sat_s8VXc_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8Wwc:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wtk, .-_c8Wtk


==================== Asm code ====================
2018-03-16 16:04:06.765854299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wtk_info:
	.quad	_c8Wtk
	.quad	2
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.768172155 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newEncodedCString_closure
.type GHC.Foreign.newEncodedCString_closure, @object
GHC.Foreign.newEncodedCString_closure:
	.quad	GHC.Foreign.newEncodedCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.76877935 UTC

.section .text
.align 8
.globl GHC.Foreign.newEncodedCString_entry
.type GHC.Foreign.newEncodedCString_entry, @object
GHC.Foreign.newEncodedCString_entry:
_c8WxP:
	jmp newEncodedCString1_r8TNq_entry
	.size GHC.Foreign.newEncodedCString_entry, .-GHC.Foreign.newEncodedCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.769368935 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newEncodedCString_info
.type GHC.Foreign.newEncodedCString_info, @object
GHC.Foreign.newEncodedCString_info:
	.quad	GHC.Foreign.newEncodedCString_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S8W7j_srt+56


==================== Asm code ====================
2018-03-16 16:04:06.790680097 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString1_closure
.type GHC.Foreign.newCString1_closure, @object
GHC.Foreign.newCString1_closure:
	.quad	GHC.Foreign.newCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.791609983 UTC

.section .text
.align 8
sat_s8VZ6_entry:
_c8Wzx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WzC
_c8WzD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c8Wzu_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Wzu
_c8Wzv:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WzC:
	jmp *-16(%r13)
	.size sat_s8VZ6_entry, .-sat_s8VZ6_entry


==================== Asm code ====================
2018-03-16 16:04:06.792293859 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VZ6_info:
	.quad	sat_s8VZ6_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:06.793078708 UTC

.section .text
.align 8
_c8Wzu:
_c8Wzu:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8WzG
_c8WzF:
	movq 7(%rbx),%rax
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WzG:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wzu, .-_c8Wzu


==================== Asm code ====================
2018-03-16 16:04:06.793839324 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wzu_info:
	.quad	_c8Wzu
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.795387705 UTC

.section .text
.align 8
sat_s8VZk_entry:
_c8WzI:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WzJ
_c8WzK:
	leaq block_c8Wya_info(%rip),%rax
	movq %rax,-24(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,%r14
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c8WzJ:
	jmp *-8(%r13)
	.size sat_s8VZk_entry, .-sat_s8VZk_entry


==================== Asm code ====================
2018-03-16 16:04:06.796052437 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VZk_info:
	.quad	sat_s8VZk_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.79669255 UTC

.section .text
.align 8
_c8Wya:
_c8Wya:
	leaq block_c8Wyh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8Wya, .-_c8Wya


==================== Asm code ====================
2018-03-16 16:04:06.797307514 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wya_info:
	.quad	_c8Wya
	.quad	2
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.797961188 UTC

.section .text
.align 8
_c8Wyh:
_c8Wyh:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8WBN
	.size _c8Wyh, .-_c8Wyh


==================== Asm code ====================
2018-03-16 16:04:06.798517829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wyh_info:
	.quad	_c8Wyh
	.quad	67
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.799185981 UTC

.section .text
.align 8
_c8WBN:
_c8WBN:
	movq (%rbp),%rax
	leaq block_c8WBQ_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8WBQ
_c8WBS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WBN, .-_c8WBN


==================== Asm code ====================
2018-03-16 16:04:06.799957869 UTC

.section .text
.align 8
_c8WBQ:
_c8WBQ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8WBY
_c8WC3:
	leaq block_c8WC1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WC1
_c8WC4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WBY:
	leaq block_c8Wyr_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8WBQ, .-_c8WBQ


==================== Asm code ====================
2018-03-16 16:04:06.800651249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WBQ_info:
	.quad	_c8WBQ
	.quad	453
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.801652172 UTC

.section .text
.align 8
_c8Wyr:
_c8Wyr:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8WzQ
_c8WzP:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8WBK
_c8WBJ:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8WyL
_c8WBK:
	addq $-88,%r12
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8WzQ:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wyr, .-_c8Wyr


==================== Asm code ====================
2018-03-16 16:04:06.802470099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wyr_info:
	.quad	_c8Wyr
	.quad	196
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.803151801 UTC

.section .text
.align 8
_c8WyL:
_c8WyL:
	leaq block_c8WyO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WyO
_c8WyP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WyL, .-_c8WyL


==================== Asm code ====================
2018-03-16 16:04:06.803842076 UTC

.section .text
.align 8
_c8WyO:
_c8WyO:
	leaq block_c8WyT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rcx
	movq %rbx,%rdx
	leaq 1(%rcx),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8WyO, .-_c8WyO


==================== Asm code ====================
2018-03-16 16:04:06.80445658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WyO_info:
	.quad	_c8WyO
	.quad	133
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.805170282 UTC

.section .text
.align 8
_c8WyT:
_c8WyT:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WzZ
_c8WzY:
	leaq sat_s8VZ6_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _c8WAZ
_c8WzZ:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WyT, .-_c8WyT


==================== Asm code ====================
2018-03-16 16:04:06.805880642 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WyT_info:
	.quad	_c8WyT
	.quad	519
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.806582931 UTC

.section .text
.align 8
_c8WAZ:
_c8WAZ:
	movq 8(%rbp),%rax
	leaq block_c8WB1_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c8WAZ, .-_c8WAZ


==================== Asm code ====================
2018-03-16 16:04:06.80730069 UTC

.section .text
.align 8
_c8WB1:
_c8WB1:
	leaq block_c8WB3_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WB3
_c8WB4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WB1, .-_c8WB1


==================== Asm code ====================
2018-03-16 16:04:06.807901338 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WB1_info:
	.quad	_c8WB1
	.quad	519
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.808598032 UTC

.section .text
.align 8
_c8WB3:
_c8WB3:
	leaq block_c8WB8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WB8
_c8WBc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WB3, .-_c8WB3


==================== Asm code ====================
2018-03-16 16:04:06.809194254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WB3_info:
	.quad	_c8WB3
	.quad	519
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.811724936 UTC

.section .text
.align 8
_c8WB8:
_c8WB8:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8WBH
_c8WBm:
	leaq block_c8WBk_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8WBk
_c8WBn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WBH:
	leaq block_c8WAy_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8WAy
_c8WAA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WB8, .-_c8WB8


==================== Asm code ====================
2018-03-16 16:04:06.812442588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WB8_info:
	.quad	_c8WB8
	.quad	2057
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.813598293 UTC

.section .text
.align 8
_c8WAy:
_c8WAy:
	movq 47(%rbx),%rax
	movq 31(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	jne _u8WCv
_u8WCu:
	addq $8,%rbp
	jmp _c8WAS
_u8WCv:
	movq 7(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 39(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8WAL
	.size _c8WAy, .-_c8WAy


==================== Asm code ====================
2018-03-16 16:04:06.814393121 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WAy_info:
	.quad	_c8WAy
	.quad	133
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.815428264 UTC

.section .text
.align 8
_c8WAL:
_c8WAL:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8WAP
_c8WAO:
	movq 32(%rbp),%rax
	movq (%rbp),%rbx
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb $0,(%rax,%rcx,1)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-64(%r12)
	subq %rbx,%rcx
	movq %rcx,-56(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -47(%r12),%rax
	movq %rax,-24(%r12)
	leaq -63(%r12),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp _s8VY0
_c8WAP:
	movq $72,904(%r13)
	leaq block_c8WAI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c8WAL, .-_c8WAL


==================== Asm code ====================
2018-03-16 16:04:06.816416627 UTC

.section .text
.align 8
_c8WAI:
_c8WAI:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c8WAL
	.size _c8WAI, .-_c8WAI


==================== Asm code ====================
2018-03-16 16:04:06.817102851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WAI_info:
	.quad	_c8WAI
	.quad	6026
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.817943674 UTC

.section .text
.align 8
_c8WBk:
_c8WBk:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8WCs
_c8WBw:
	movq 16(%rbp),%rax
	leaq block_c8WBr_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_u8WCs:
	addq $40,%rbp
	jmp _c8WAS
	.size _c8WBk, .-_c8WBk


==================== Asm code ====================
2018-03-16 16:04:06.818648248 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WBk_info:
	.quad	_c8WBk
	.quad	2057
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.819405545 UTC

.section .text
.align 8
_c8WAS:
_c8WAS:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s8VY0
	.size _c8WAS, .-_c8WAS


==================== Asm code ====================
2018-03-16 16:04:06.820287956 UTC

.section .text
.align 8
_s8VY0:
_s8VY0:
	movq (%rbp),%rax
	leaq block_c8Wz2_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8Wz2
_c8Wz3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s8VY0, .-_s8VY0


==================== Asm code ====================
2018-03-16 16:04:06.821211334 UTC

.section .text
.align 8
_c8Wz2:
_c8Wz2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8WA3
_c8WAm:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WA3:
	movq 8(%rbp),%rax
	leaq block_c8Wz7_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Wz7
_c8Wz8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Wz2, .-_c8Wz2


==================== Asm code ====================
2018-03-16 16:04:06.822068232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wz2_info:
	.quad	_c8Wz2
	.quad	133
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.82302437 UTC

.section .text
.align 8
_c8Wz7:
_c8Wz7:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u8WCz
_c8WAf:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	movq $0,8(%rbp)
	leaq GHC.Foreign.newCString2_closure+1(%rip),%rax
	movq %rax,(%rbp)
	jmp _c8WyL
_u8WCz:
	movq %rax,(%rbp)
	jmp _c8Wzg
	.size _c8Wz7, .-_c8Wz7


==================== Asm code ====================
2018-03-16 16:04:06.823828669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wz7_info:
	.quad	_c8Wz7
	.quad	68
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.824824324 UTC

.section .text
.align 8
_c8Wzg:
_c8Wzg:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8WA9
_c8WA8:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8WAc
_c8WAb:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c8WyL
_c8WAc:
	addq $-16,%r12
	movq Foreign.Marshal.Alloc.realloc2_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8WA9:
	movq $16,904(%r13)
	leaq block_c8Wzf_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c8Wzg, .-_c8Wzg


==================== Asm code ====================
2018-03-16 16:04:06.826097579 UTC

.section .text
.align 8
_c8Wzf:
_c8Wzf:
	movq %rbx,(%rbp)
	jmp _c8Wzg
	.size _c8Wzf, .-_c8Wzf


==================== Asm code ====================
2018-03-16 16:04:06.826759066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wzf_info:
	.quad	_c8Wzf
	.quad	68
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.827549548 UTC

.section .text
.align 8
_c8WBr:
_c8WBr:
	leaq block_c8WBt_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WBt
_c8WBy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WBr, .-_c8WBr


==================== Asm code ====================
2018-03-16 16:04:06.828217471 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WBr_info:
	.quad	_c8WBr
	.quad	519
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.829028955 UTC

.section .text
.align 8
_c8WBt:
_c8WBt:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _c8WAZ
	.size _c8WBt, .-_c8WBt


==================== Asm code ====================
2018-03-16 16:04:06.829700478 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WBt_info:
	.quad	_c8WBt
	.quad	519
	.quad	4294967326
	.quad	S8W7j_srt+48


==================== Asm code ====================
2018-03-16 16:04:06.831134218 UTC

.section .text
.align 8
_c8WC1:
_c8WC1:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8WBN
	.size _c8WC1, .-_c8WC1


==================== Asm code ====================
2018-03-16 16:04:06.83190946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WC1_info:
	.quad	_c8WC1
	.quad	902
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.832811728 UTC

.section .text
.align 8
sat_s8VZo_entry:
_c8WD8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WD9
_c8WDa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *Data.Tuple.fst_entry@gotpcrel(%rip)
_c8WD9:
	jmp *-16(%r13)
	.size sat_s8VZo_entry, .-sat_s8VZo_entry


==================== Asm code ====================
2018-03-16 16:04:06.833640198 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8VZo_info:
	.quad	sat_s8VZo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:06.834505771 UTC

.section .text
.align 8
.globl GHC.Foreign.newCString1_entry
.type GHC.Foreign.newCString1_entry, @object
GHC.Foreign.newCString1_entry:
_c8WDb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WDc
_c8WDd:
	leaq block_c8Wy0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Wy0
_c8Wy1:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WDc:
	leaq GHC.Foreign.newCString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.newCString1_entry, .-GHC.Foreign.newCString1_entry


==================== Asm code ====================
2018-03-16 16:04:06.835325242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCString1_info
.type GHC.Foreign.newCString1_info, @object
GHC.Foreign.newCString1_info:
	.quad	GHC.Foreign.newCString1_entry
	.quad	0
	.quad	47244640270
	.quad	12884901903
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.836276869 UTC

.section .text
.align 8
_c8Wy0:
_c8Wy0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8WDg
_c8WDf:
	movq 23(%rbx),%rax
	leaq sat_s8VZk_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_c8WD2_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq -6(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8WDg:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Wy0, .-_c8Wy0


==================== Asm code ====================
2018-03-16 16:04:06.837094901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Wy0_info:
	.quad	_c8Wy0
	.quad	1
	.quad	12884901918
	.quad	S8W7j_srt+40


==================== Asm code ====================
2018-03-16 16:04:06.837979987 UTC

.section .text
.align 8
_c8WD2:
_c8WD2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8WDj
_c8WDi:
	leaq sat_s8VZo_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WDj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WD2, .-_c8WD2


==================== Asm code ====================
2018-03-16 16:04:06.83878157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WD2_info:
	.quad	_c8WD2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.841728011 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCString_closure
.type GHC.Foreign.newCString_closure, @object
GHC.Foreign.newCString_closure:
	.quad	GHC.Foreign.newCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.842440034 UTC

.section .text
.align 8
.globl GHC.Foreign.newCString_entry
.type GHC.Foreign.newCString_entry, @object
GHC.Foreign.newCString_entry:
_c8WGu:
	jmp GHC.Foreign.newCString1_entry
	.size GHC.Foreign.newCString_entry, .-GHC.Foreign.newCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.843108166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCString_info
.type GHC.Foreign.newCString_info, @object
GHC.Foreign.newCString_info:
	.quad	GHC.Foreign.newCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8W7j_srt+64


==================== Asm code ====================
2018-03-16 16:04:06.845618177 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.newCStringLen_closure
.type GHC.Foreign.newCStringLen_closure, @object
GHC.Foreign.newCStringLen_closure:
	.quad	GHC.Foreign.newCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.846332688 UTC

.section .text
.align 8
.globl GHC.Foreign.newCStringLen_entry
.type GHC.Foreign.newCStringLen_entry, @object
GHC.Foreign.newCStringLen_entry:
_c8WGF:
	movq %rsi,%rdi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	jmp GHC.Foreign.newEncodedCString_entry
	.size GHC.Foreign.newCStringLen_entry, .-GHC.Foreign.newCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:06.847015657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.newCStringLen_info
.type GHC.Foreign.newCStringLen_info, @object
GHC.Foreign.newCStringLen_info:
	.quad	GHC.Foreign.newCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8W7j_srt+72


==================== Asm code ====================
2018-03-16 16:04:06.867519627 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.$wpeekCString_closure
.type GHC.Foreign.$wpeekCString_closure, @object
GHC.Foreign.$wpeekCString_closure:
	.quad	GHC.Foreign.$wpeekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.8686581 UTC

.section .text
.align 8
sat_s8W0B_entry:
_c8WIS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WIT
_c8WIU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WIW
_c8WIV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8WIW:
	movq $40,904(%r13)
_c8WIT:
	jmp *-16(%r13)
	.size sat_s8W0B_entry, .-sat_s8W0B_entry


==================== Asm code ====================
2018-03-16 16:04:06.869558461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8W0B_info:
	.quad	sat_s8W0B_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:06.870414166 UTC

.section .text
.align 8
sat_s8W0S_entry:
_c8WJ5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WJ6
_c8WJ7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8WJ6:
	jmp *-16(%r13)
	.size sat_s8W0S_entry, .-sat_s8W0S_entry


==================== Asm code ====================
2018-03-16 16:04:06.871166897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8W0S_info:
	.quad	sat_s8W0S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:06.872024728 UTC

.section .text
.align 8
$wgo_s8VZS_entry:
_c8WJ8:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WJ9
_c8WJa:
	leaq block_c8WHx_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8WHx
_c8WHy:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WJ9:
	jmp *-8(%r13)
	.size $wgo_s8VZS_entry, .-$wgo_s8VZS_entry


==================== Asm code ====================
2018-03-16 16:04:06.87284216 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8VZS_info:
	.quad	$wgo_s8VZS_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:06.873861087 UTC

.section .text
.align 8
_c8WHx:
_c8WHx:
	movq 8(%rbp),%rax
	leaq block_c8WHC_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c8WHx, .-_c8WHx


==================== Asm code ====================
2018-03-16 16:04:06.874550904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHx_info:
	.quad	_c8WHx
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.875267934 UTC

.section .text
.align 8
_c8WHC:
_c8WHC:
	leaq block_c8WHE_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WHE
_c8WHF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WHC, .-_c8WHC


==================== Asm code ====================
2018-03-16 16:04:06.875977139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHC_info:
	.quad	_c8WHC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.87675498 UTC

.section .text
.align 8
_c8WHE:
_c8WHE:
	leaq block_c8WHJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WHJ
_c8WHK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WHE, .-_c8WHE


==================== Asm code ====================
2018-03-16 16:04:06.877442478 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHE_info:
	.quad	_c8WHE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.878263427 UTC

.section .text
.align 8
_c8WHJ:
_c8WHJ:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8WK5
_c8WJy:
	leaq block_c8WJf_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8WJf
_c8WJz:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WK5:
	leaq block_c8WIh_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8WIh
_c8WIi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WHJ, .-_c8WHJ


==================== Asm code ====================
2018-03-16 16:04:06.879053221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHJ_info:
	.quad	_c8WHJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.879931866 UTC

.section .text
.align 8
_c8WIh:
_c8WIh:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c8WKn
_c8WKo:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WKn:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8WIz
	.size _c8WIh, .-_c8WIh


==================== Asm code ====================
2018-03-16 16:04:06.88072591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WIh_info:
	.quad	_c8WIh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.88166448 UTC

.section .text
.align 8
_c8WIz:
_c8WIz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WKi
_c8WKh:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c8WKk
_c8WKl:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c8WK8
_c8WKk:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c8WIz
_c8WKi:
	movq $40,904(%r13)
	leaq block_c8WIz_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8WIz, .-_c8WIz


==================== Asm code ====================
2018-03-16 16:04:06.882447681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WIz_info:
	.quad	_c8WIz
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.883284272 UTC

.section .text
.align 8
_c8WK8:
_c8WK8:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8WKf
_c8WKe:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WKf:
	movq $40,904(%r13)
	leaq block_c8WK7_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WK8, .-_c8WK8


==================== Asm code ====================
2018-03-16 16:04:06.884159352 UTC

.section .text
.align 8
_c8WK7:
_c8WK7:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8WK8
	.size _c8WK7, .-_c8WK7


==================== Asm code ====================
2018-03-16 16:04:06.885629229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WK7_info:
	.quad	_c8WK7
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.886395505 UTC

.section .text
.align 8
_c8WJf:
_c8WJf:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8WJZ
_c8WJN:
	movq 16(%rbp),%rbx
	leaq block_c8WJD_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c8WJZ:
	leaq block_c8WJX_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8WJX
_c8WK0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WJf, .-_c8WJf


==================== Asm code ====================
2018-03-16 16:04:06.887011694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WJf_info:
	.quad	_c8WJf
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.887671378 UTC

.section .text
.align 8
_c8WJX:
_c8WJX:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s8W0g
	.size _c8WJX, .-_c8WJX


==================== Asm code ====================
2018-03-16 16:04:06.88826576 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WJX_info:
	.quad	_c8WJX
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.888871548 UTC

.section .text
.align 8
_c8WJD:
_c8WJD:
	leaq block_c8WJF_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WJF
_c8WJG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WJD, .-_c8WJD


==================== Asm code ====================
2018-03-16 16:04:06.889583295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WJD_info:
	.quad	_c8WJD
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.890588681 UTC

.section .text
.align 8
_c8WJF:
_c8WJF:
	leaq block_c8WJK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8WJK
_c8WJQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WJF, .-_c8WJF


==================== Asm code ====================
2018-03-16 16:04:06.891515809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WJF_info:
	.quad	_c8WJF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.892470889 UTC

.section .text
.align 8
_c8WJK:
_c8WJK:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s8W0g
	.size _c8WJK, .-_c8WJK


==================== Asm code ====================
2018-03-16 16:04:06.893398052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WJK_info:
	.quad	_c8WJK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.894496364 UTC

.section .text
.align 8
_s8W0g:
_s8W0g:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c8WJs
_c8WJt:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	leaq block_c8WIZ_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s8VZS_entry
_c8WJs:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c8WI9
	.size _s8W0g, .-_s8W0g


==================== Asm code ====================
2018-03-16 16:04:06.895966271 UTC

.section .text
.align 8
_c8WI9:
_c8WI9:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WJn
_c8WJm:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c8WJp
_c8WJq:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	leaq block_c8WIK_info(%rip),%rsi
	movq %rsi,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s8VZS_entry
_c8WJp:
	movl (%rax,%rcx,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8WI9
_c8WJn:
	movq $40,904(%r13)
	leaq block_c8WI9_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8WI9, .-_c8WI9


==================== Asm code ====================
2018-03-16 16:04:06.897300158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WI9_info:
	.quad	_c8WI9
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.898360022 UTC

.section .text
.align 8
_c8WIK:
_c8WIK:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8WJk
_c8WJj:
	leaq sat_s8W0B_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WJk:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WIK, .-_c8WIK


==================== Asm code ====================
2018-03-16 16:04:06.899051502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WIK_info:
	.quad	_c8WIK
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.899737184 UTC

.section .text
.align 8
_c8WIZ:
_c8WIZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8WJw
_c8WJv:
	leaq sat_s8W0S_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WJw:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WIZ, .-_c8WIZ


==================== Asm code ====================
2018-03-16 16:04:06.900298468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WIZ_info:
	.quad	_c8WIZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.90102231 UTC

.section .text
.align 8
sat_s8W1N_entry:
_c8WKX:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WKY
_c8WKZ:
	leaq block_c8WH6_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rcx
	movq %rbx,%rdx
	leaq 1(%rcx),%rbx
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8WKY:
	jmp *-8(%r13)
	.size sat_s8W1N_entry, .-sat_s8W1N_entry


==================== Asm code ====================
2018-03-16 16:04:06.901717591 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8W1N_info:
	.quad	sat_s8W1N_entry
	.quad	8589934592
	.quad	4294967309
	.quad	8589934597
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.902514629 UTC

.section .text
.align 8
_c8WH6:
_c8WH6:
	movq 16(%rbp),%rax
	cmpq $1,%rax
	jg _s8VZF
_c8WKW:
	movl $1,%eax
_s8VZF:
	movq %rax,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c8WL5
_c8WLa:
	movq GHC.ForeignPtr.mallocForeignPtrBytes2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c8WL5:
	leaq block_c8WHj_info(%rip),%rdx
	movq %rdx,-24(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rdx
	movq %rbx,%rsi
	leaq 1(%rdx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-24,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c8WH6, .-_c8WH6


==================== Asm code ====================
2018-03-16 16:04:06.903223025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WH6_info:
	.quad	_c8WH6
	.quad	195
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.903836955 UTC

.section .text
.align 8
_c8WHj:
_c8WHj:
	leaq block_c8WHl_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _c8WHj, .-_c8WHj


==================== Asm code ====================
2018-03-16 16:04:06.904407611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHj_info:
	.quad	_c8WHj
	.quad	1734
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.905315682 UTC

.section .text
.align 8
_c8WHl:
_c8WHl:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c8WL9
_c8WL8:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	leaq $wgo_s8VZS_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s8VZS_entry
_c8WL9:
	movq $176,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WHl, .-_c8WHl


==================== Asm code ====================
2018-03-16 16:04:06.906136291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WHl_info:
	.quad	_c8WHl
	.quad	1606
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.906981464 UTC

.section .text
.align 8
.globl GHC.Foreign.$wpeekCString_entry
.type GHC.Foreign.$wpeekCString_entry, @object
GHC.Foreign.$wpeekCString_entry:
_c8WLd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WLe
_c8WLf:
	xorl %eax,%eax
_c8WLl:
	cmpb $0,(%rsi,%rax,1)
	je _c8WLr
_c8WLq:
	incq %rax
	jmp _c8WLl
_c8WLe:
	leaq GHC.Foreign.$wpeekCString_closure(%rip),%rbx
	jmp *-8(%r13)
_c8WLr:
	leaq block_c8WGW_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8WGW
_c8WGX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Foreign.$wpeekCString_entry, .-GHC.Foreign.$wpeekCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.90763366 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.$wpeekCString_info
.type GHC.Foreign.$wpeekCString_info, @object
GHC.Foreign.$wpeekCString_info:
	.quad	GHC.Foreign.$wpeekCString_entry
	.quad	0
	.quad	4402341478414
	.quad	12884901902
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.908364935 UTC

.section .text
.align 8
_c8WGW:
_c8WGW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8WLj
_c8WLi:
	movq 15(%rbx),%rax
	leaq sat_s8W1N_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c8WLj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WGW, .-_c8WGW


==================== Asm code ====================
2018-03-16 16:04:06.909024574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WGW_info:
	.quad	_c8WGW
	.quad	194
	.quad	4294967326
	.quad	S8W7j_srt


==================== Asm code ====================
2018-03-16 16:04:06.912037436 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCString1_closure
.type GHC.Foreign.peekCString1_closure, @object
GHC.Foreign.peekCString1_closure:
	.quad	GHC.Foreign.peekCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.912791395 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCString1_entry
.type GHC.Foreign.peekCString1_entry, @object
GHC.Foreign.peekCString1_entry:
_c8WOE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WOF
_c8WOG:
	leaq block_c8WOB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WOB
_c8WOC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WOF:
	leaq GHC.Foreign.peekCString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.peekCString1_entry, .-GHC.Foreign.peekCString1_entry


==================== Asm code ====================
2018-03-16 16:04:06.913481262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCString1_info
.type GHC.Foreign.peekCString1_info, @object
GHC.Foreign.peekCString1_info:
	.quad	GHC.Foreign.peekCString1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.914138509 UTC

.section .text
.align 8
_c8WOB:
_c8WOB:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Foreign.$wpeekCString_entry
	.size _c8WOB, .-_c8WOB


==================== Asm code ====================
2018-03-16 16:04:06.914742864 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WOB_info:
	.quad	_c8WOB
	.quad	1
	.quad	4294967326
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.916835629 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.peekCString_closure
.type GHC.Foreign.peekCString_closure, @object
GHC.Foreign.peekCString_closure:
	.quad	GHC.Foreign.peekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.9174144 UTC

.section .text
.align 8
.globl GHC.Foreign.peekCString_entry
.type GHC.Foreign.peekCString_entry, @object
GHC.Foreign.peekCString_entry:
_c8WOZ:
	jmp GHC.Foreign.peekCString1_entry
	.size GHC.Foreign.peekCString_entry, .-GHC.Foreign.peekCString_entry


==================== Asm code ====================
2018-03-16 16:04:06.917905631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.peekCString_info
.type GHC.Foreign.peekCString_info, @object
GHC.Foreign.peekCString_info:
	.quad	GHC.Foreign.peekCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8W7j_srt+88


==================== Asm code ====================
2018-03-16 16:04:06.922395954 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable2_closure
.type GHC.Foreign.charIsRepresentable2_closure, @object
GHC.Foreign.charIsRepresentable2_closure:
	.quad	GHC.Foreign.charIsRepresentable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.92313715 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable2_entry
.type GHC.Foreign.charIsRepresentable2_entry, @object
GHC.Foreign.charIsRepresentable2_entry:
_c8WPd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WPh
_c8WPi:
	leaq block_c8WPa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8WPa
_c8WPb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WPh:
	leaq GHC.Foreign.charIsRepresentable2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable2_entry, .-GHC.Foreign.charIsRepresentable2_entry


==================== Asm code ====================
2018-03-16 16:04:06.923716009 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable2_info
.type GHC.Foreign.charIsRepresentable2_info, @object
GHC.Foreign.charIsRepresentable2_info:
	.quad	GHC.Foreign.charIsRepresentable2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	S8W7j_srt+96


==================== Asm code ====================
2018-03-16 16:04:06.92435048 UTC

.section .text
.align 8
_c8WPa:
_c8WPa:
	leaq block_c8WPg_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _c8WPa, .-_c8WPa


==================== Asm code ====================
2018-03-16 16:04:06.924883337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WPa_info:
	.quad	_c8WPa
	.quad	0
	.quad	12884901918
	.quad	S8W7j_srt+96


==================== Asm code ====================
2018-03-16 16:04:06.925534939 UTC

.section .text
.align 8
_c8WPg:
_c8WPg:
	leaq block_c8WPn_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _c8WPg, .-_c8WPg


==================== Asm code ====================
2018-03-16 16:04:06.926098757 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WPg_info:
	.quad	_c8WPg
	.quad	1
	.quad	12884901918
	.quad	S8W7j_srt+96


==================== Asm code ====================
2018-03-16 16:04:06.926850087 UTC

.section .text
.align 8
_c8WPn:
_c8WPn:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8WPu
_c8WPy:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8WPu:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8WPn, .-_c8WPn


==================== Asm code ====================
2018-03-16 16:04:06.927464311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WPn_info:
	.quad	_c8WPn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.935270596 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable1_closure
.type GHC.Foreign.charIsRepresentable1_closure, @object
GHC.Foreign.charIsRepresentable1_closure:
	.quad	GHC.Foreign.charIsRepresentable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.936093967 UTC

.section .text
.align 8
sat_s8W2y_entry:
_c8WQe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WQf
_c8WQg:
	leaq block_c8WQb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8WQb
_c8WQc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WQf:
	jmp *-8(%r13)
	.size sat_s8W2y_entry, .-sat_s8W2y_entry


==================== Asm code ====================
2018-03-16 16:04:06.936741703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8W2y_info:
	.quad	sat_s8W2y_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.93740704 UTC

.section .text
.align 8
_c8WQb:
_c8WQb:
	leaq block_c8WQj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Foreign.$wpeekCString_entry
	.size _c8WQb, .-_c8WQb


==================== Asm code ====================
2018-03-16 16:04:06.937929075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQb_info:
	.quad	_c8WQb
	.quad	2
	.quad	4294967326
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.938543189 UTC

.section .text
.align 8
_c8WQj:
_c8WQj:
	leaq block_c8WQl_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c8WQl
_c8WQo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WQj, .-_c8WQj


==================== Asm code ====================
2018-03-16 16:04:06.939106429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQj_info:
	.quad	_c8WQj
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.939845469 UTC

.section .text
.align 8
_c8WQl:
_c8WQl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8WR4
_c8WQz:
	leaq block_c8WQx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8WQx
_c8WQA:
	movq (%rbx),%rax
	jmp *(%rax)
_u8WR4:
	addq $24,%rbp
	jmp _c8WR1
	.size _c8WQl, .-_c8WQl


==================== Asm code ====================
2018-03-16 16:04:06.940482475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQl_info:
	.quad	_c8WQl
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.941155858 UTC

.section .text
.align 8
_c8WQx:
_c8WQx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8WQM
_u8WR5:
	addq $24,%rbp
	jmp _c8WR1
_c8WQM:
	leaq block_c8WQE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8WQE
_c8WQF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WQx, .-_c8WQx


==================== Asm code ====================
2018-03-16 16:04:06.941786684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQx_info:
	.quad	_c8WQx
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.942481719 UTC

.section .text
.align 8
_c8WQE:
_c8WQE:
	movq 8(%rbp),%rax
	leaq block_c8WQJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c8WQJ
_c8WQO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8WQE, .-_c8WQE


==================== Asm code ====================
2018-03-16 16:04:06.943105294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQE_info:
	.quad	_c8WQE
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.943801747 UTC

.section .text
.align 8
_c8WQJ:
_c8WQJ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c8WQX
_u8WR6:
	addq $16,%rbp
	jmp _c8WR1
_c8WQX:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8WQJ, .-_c8WQJ


==================== Asm code ====================
2018-03-16 16:04:06.944460264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQJ_info:
	.quad	_c8WQJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:06.945050657 UTC

.section .text
.align 8
_c8WR1:
_c8WR1:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8WR1, .-_c8WR1


==================== Asm code ====================
2018-03-16 16:04:06.945716928 UTC

.section .text
.align 8
sat_s8W2z_entry:
_c8WRl:
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Foreign.charIsRepresentable3_entry
	.size sat_s8W2z_entry, .-sat_s8W2z_entry


==================== Asm code ====================
2018-03-16 16:04:06.946272014 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8W2z_info:
	.quad	sat_s8W2z_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:06.947079076 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable1_entry
.type GHC.Foreign.charIsRepresentable1_entry, @object
GHC.Foreign.charIsRepresentable1_entry:
_c8WRo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8WRp
_c8WRq:
	leaq block_c8WQ1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8WQ1
_c8WQ2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8WRp:
	leaq GHC.Foreign.charIsRepresentable1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Foreign.charIsRepresentable1_entry, .-GHC.Foreign.charIsRepresentable1_entry


==================== Asm code ====================
2018-03-16 16:04:06.947773411 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable1_info
.type GHC.Foreign.charIsRepresentable1_info, @object
GHC.Foreign.charIsRepresentable1_info:
	.quad	GHC.Foreign.charIsRepresentable1_entry
	.quad	0
	.quad	210453397518
	.quad	12884901903
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.948584579 UTC

.section .text
.align 8
_c8WQ1:
_c8WQ1:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c8WRt
_c8WRs:
	leaq sat_s8W2y_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq sat_s8W2z_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq -46(%r12),%rax
	movq %rax,-8(%r12)
	leaq -70(%r12),%rax
	movq %rax,(%r12)
	leaq GHC.Foreign.charIsRepresentable2_closure+2(%rip),%r14
	leaq -23(%r12),%rbx
	addq $16,%rbp
	jmp *stg_catch#@gotpcrel(%rip)
_c8WRt:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8WQ1, .-_c8WQ1


==================== Asm code ====================
2018-03-16 16:04:06.949616846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8WQ1_info:
	.quad	_c8WQ1
	.quad	1
	.quad	73014444062
	.quad	S8W7j_srt+80


==================== Asm code ====================
2018-03-16 16:04:06.95189363 UTC

.section .data
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable_closure
.type GHC.Foreign.charIsRepresentable_closure, @object
GHC.Foreign.charIsRepresentable_closure:
	.quad	GHC.Foreign.charIsRepresentable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:06.952506506 UTC

.section .text
.align 8
.globl GHC.Foreign.charIsRepresentable_entry
.type GHC.Foreign.charIsRepresentable_entry, @object
GHC.Foreign.charIsRepresentable_entry:
_c8WSB:
	jmp GHC.Foreign.charIsRepresentable1_entry
	.size GHC.Foreign.charIsRepresentable_entry, .-GHC.Foreign.charIsRepresentable_entry


==================== Asm code ====================
2018-03-16 16:04:06.953060083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Foreign.charIsRepresentable_info
.type GHC.Foreign.charIsRepresentable_info, @object
GHC.Foreign.charIsRepresentable_info:
	.quad	GHC.Foreign.charIsRepresentable_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8W7j_srt+120


==================== Asm code ====================
2018-03-16 16:04:06.954986238 UTC

.section .data.rel.ro
.align 8
.align 1
S8W7j_srt:
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	$wpeekCStringLen_r8TNn_closure
	.quad	peekCStringLen1_r8TNo_closure
	.quad	Foreign.Marshal.Array.withArrayLen_closure
	.quad	GHC.Foreign.withCStringsLen1_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	newEncodedCString1_r8TNq_closure
	.quad	GHC.Foreign.newCString1_closure
	.quad	GHC.Foreign.newEncodedCString_closure
	.quad	GHC.Foreign.$wpeekCString_closure
	.quad	GHC.Foreign.peekCString1_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.Foreign.charIsRepresentable2_closure
	.quad	GHC.Foreign.charIsRepresentable1_closure

