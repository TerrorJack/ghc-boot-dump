
==================== Raw Cmm ====================
2018-03-16 15:54:40.098677161 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:54:40.100817834 UTC

[section ""data" . GHC.Err.error_closure" {
     GHC.Err.error_closure:
         const GHC.Err.error_info;
         const 0;
 },
 sat_s2Tl_entry() //  [R1]
         { []
         }
     {offset
       c2Y2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2Y3; else goto c2Y4;
       c2Y3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2Y4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s2Tl_info" {
     sat_s2Tl_info:
         const sat_s2Tl_entry;
         const 2;
         const 4294967314;
         const S2TJ_srt;
 },
 GHC.Err.error_entry() //  [R2, R3]
         { []
         }
     {offset
       c2Y5: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c2Y9; else goto c2Y8;
       c2Y9: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Err.error_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c2Y8: // global
           I64[Hp - 24] = sat_s2Tl_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.error_info" {
     GHC.Err.error_info:
         const GHC.Err.error_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S2TJ_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.107061022 UTC

[section ""data" . lvl_r2T3_closure" {
     lvl_r2T3_closure:
         const GHC.Stack.Types.FreezeCallStack_con_info;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.110048468 UTC

[section ""data" . GHC.Err.errorWithoutStackTrace_closure" {
     GHC.Err.errorWithoutStackTrace_closure:
         const GHC.Err.errorWithoutStackTrace_info;
         const 0;
 },
 sat_s2Tn_entry() //  [R1]
         { []
         }
     {offset
       c2Yr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2Ys; else goto c2Yt;
       c2Ys: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2Yt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = lvl_r2T3_closure+3;
           R2 = P64[R1 + 16];
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s2Tn_info" {
     sat_s2Tn_info:
         const sat_s2Tn_entry;
         const 1;
         const 4294967312;
         const S2TJ_srt;
 },
 GHC.Err.errorWithoutStackTrace_entry() //  [R2]
         { []
         }
     {offset
       c2Yu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c2Yy; else goto c2Yx;
       c2Yy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Err.errorWithoutStackTrace_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c2Yx: // global
           I64[Hp - 16] = sat_s2Tn_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.errorWithoutStackTrace_info" {
     GHC.Err.errorWithoutStackTrace_info:
         const GHC.Err.errorWithoutStackTrace_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S2TJ_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.116346578 UTC

[section ""cstring" . lvl1_r2T4_bytes" {
     lvl1_r2T4_bytes:
         I8[] [79,111,112,115,33,32,84,104,101,32,112,114,111,103,114,97,109,32,104,97,115,32,101,110,116,101,114,101,100,32,97,110,32,96,97,98,115,101,110,116,39,32,97,114,103,117,109,101,110,116,33,10]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.118968031 UTC

[section ""data" . lvl2_r2T5_closure" {
     lvl2_r2T5_closure:
         const lvl2_r2T5_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r2T5_entry() //  [R1]
         { []
         }
     {offset
       c2YO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2YP; else goto c2YQ;
       c2YP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2YQ: // global
           (_c2YL::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c2YL::I64 == 0) goto c2YN; else goto c2YM;
       c2YN: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c2YM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c2YL::I64;
           R2 = lvl1_r2T4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r2T5_info" {
     lvl2_r2T5_info:
         const lvl2_r2T5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.123949737 UTC

[section ""data" . GHC.Err.absentErr_closure" {
     GHC.Err.absentErr_closure:
         const GHC.Err.absentErr_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Err.absentErr_entry() //  [R1]
         { []
         }
     {offset
       c2Z4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2Z5; else goto c2Z6;
       c2Z5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2Z6: // global
           (_c2Z1::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c2Z1::I64 == 0) goto c2Z3; else goto c2Z2;
       c2Z3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c2Z2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c2Z1::I64;
           R2 = lvl2_r2T5_closure;
           Sp = Sp - 16;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Err.absentErr_info" {
     GHC.Err.absentErr_info:
         const GHC.Err.absentErr_entry;
         const 0;
         const 12884901909;
         const S2TJ_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.127810495 UTC

[section ""cstring" . lvl3_r2T6_bytes" {
     lvl3_r2T6_bytes:
         I8[] [80,114,101,108,117,100,101,46,117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.130847182 UTC

[section ""data" . lvl4_r2T7_closure" {
     lvl4_r2T7_closure:
         const lvl4_r2T7_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r2T7_entry() //  [R1]
         { []
         }
     {offset
       c2Zl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2Zm; else goto c2Zn;
       c2Zm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2Zn: // global
           (_c2Zi::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c2Zi::I64 == 0) goto c2Zk; else goto c2Zj;
       c2Zk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c2Zj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c2Zi::I64;
           R2 = lvl3_r2T6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl4_r2T7_info" {
     lvl4_r2T7_info:
         const lvl4_r2T7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.135621553 UTC

[section ""cstring" . lvl5_r2T8_bytes" {
     lvl5_r2T8_bytes:
         I8[] [101,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.139425634 UTC

[section ""data" . lvl6_r2T9_closure" {
     lvl6_r2T9_closure:
         const lvl6_r2T9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r2T9_entry() //  [R1]
         { []
         }
     {offset
       c2ZC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2ZD; else goto c2ZE;
       c2ZD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2ZE: // global
           (_c2Zz::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c2Zz::I64 == 0) goto c2ZB; else goto c2ZA;
       c2ZB: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c2ZA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c2Zz::I64;
           R2 = lvl5_r2T8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl6_r2T9_info" {
     lvl6_r2T9_info:
         const lvl6_r2T9_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.143292694 UTC

[section ""cstring" . GHC.Err.$trModule4_bytes" {
     GHC.Err.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.145947347 UTC

[section ""data" . lvl7_r2Ta_closure" {
     lvl7_r2Ta_closure:
         const lvl7_r2Ta_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_r2Ta_entry() //  [R1]
         { []
         }
     {offset
       c2ZT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c2ZU; else goto c2ZV;
       c2ZU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c2ZV: // global
           (_c2ZQ::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c2ZQ::I64 == 0) goto c2ZS; else goto c2ZR;
       c2ZS: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c2ZR: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c2ZQ::I64;
           R2 = GHC.Err.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_r2Ta_info" {
     lvl7_r2Ta_info:
         const lvl7_r2Ta_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.150231898 UTC

[section ""cstring" . GHC.Err.$trModule2_bytes" {
     GHC.Err.$trModule2_bytes:
         I8[] [71,72,67,46,69,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.152894368 UTC

[section ""data" . lvl8_r2Tb_closure" {
     lvl8_r2Tb_closure:
         const lvl8_r2Tb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl8_r2Tb_entry() //  [R1]
         { []
         }
     {offset
       c30a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c30b; else goto c30c;
       c30b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c30c: // global
           (_c307::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c307::I64 == 0) goto c309; else goto c308;
       c309: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c308: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c307::I64;
           R2 = GHC.Err.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl8_r2Tb_info" {
     lvl8_r2Tb_info:
         const lvl8_r2Tb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.15902806 UTC

[section ""cstring" . lvl9_r2Tc_bytes" {
     lvl9_r2Tc_bytes:
         I8[] [46,47,71,72,67,47,69,114,114,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.161701849 UTC

[section ""data" . lvl10_r2Td_closure" {
     lvl10_r2Td_closure:
         const lvl10_r2Td_info;
         const 0;
         const 0;
         const 0;
 },
 lvl10_r2Td_entry() //  [R1]
         { []
         }
     {offset
       c30r: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c30s; else goto c30t;
       c30s: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c30t: // global
           (_c30o::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c30o::I64 == 0) goto c30q; else goto c30p;
       c30q: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c30p: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c30o::I64;
           R2 = lvl9_r2Tc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl10_r2Td_info" {
     lvl10_r2Td_info:
         const lvl10_r2Td_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.166060254 UTC

[section ""data" . lvl11_r2Te_closure" {
     lvl11_r2Te_closure:
         const GHC.Types.I#_con_info;
         const 79;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.167816929 UTC

[section ""data" . lvl12_r2Tf_closure" {
     lvl12_r2Tf_closure:
         const GHC.Types.I#_con_info;
         const 14;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.169578516 UTC

[section ""data" . lvl13_r2Tg_closure" {
     lvl13_r2Tg_closure:
         const GHC.Types.I#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.17130782 UTC

[section ""data" . lvl14_r2Th_closure" {
     lvl14_r2Th_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl7_r2Ta_closure;
         const lvl8_r2Tb_closure;
         const lvl10_r2Td_closure;
         const lvl11_r2Te_closure+1;
         const lvl12_r2Tf_closure+1;
         const lvl11_r2Te_closure+1;
         const lvl13_r2Tg_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.176221952 UTC

[section ""data" . GHC.Err.undefined_closure" {
     GHC.Err.undefined_closure:
         const GHC.Err.undefined_info;
         const 0;
 },
 sat_s2Tr_entry() //  [R1]
         { []
         }
     {offset
       c30Y: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c30Z; else goto c310;
       c30Z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c310: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c30R_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u31a; else goto c30S;
       u31a: // global
           call _c30R(R1) args: 0, res: 0, upd: 0;
       c30S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s2Tr_info" {
     sat_s2Tr_info:
         const sat_s2Tr_entry;
         const 1;
         const 12884901904;
         const S2TJ_srt+32;
 },
 _c30R() //  [R1]
         { []
         }
     {offset
       c30R: // global
           if (R1 & 7 == 3) goto c30W; else goto c30V;
       c30W: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c30V: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c316; else goto c315;
       c316: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c315: // global
           I64[Hp - 24] = GHC.Stack.Types.PushCallStack_con_info;
           P64[Hp - 16] = lvl6_r2T9_closure;
           P64[Hp - 8] = lvl14_r2Th_closure+1;
           P64[Hp] = R1;
           R1 = Hp - 22;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c30R_info" {
     block_c30R_info:
         const _c30R;
         const 0;
         const 12884901918;
         const S2TJ_srt+32;
 },
 sat_s2Ts_entry() //  [R1]
         { []
         }
     {offset
       c31b: // global
           _s2Ts::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c31c; else goto c31d;
       c31d: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c31f; else goto c31e;
       c31f: // global
           HpAlloc = 24;
           goto c31c;
       c31c: // global
           R1 = _s2Ts::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c31e: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s2Ts::P64;
           _s2To::P64 = P64[_s2Ts::P64 + 16];
           I64[Hp - 16] = sat_s2Tr_info;
           P64[Hp] = _s2To::P64;
           R3 = Hp - 16;
           R2 = lvl4_r2T7_closure;
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s2Ts_info" {
     sat_s2Ts_info:
         const sat_s2Ts_entry;
         const 1;
         const 485331304464;
         const S2TJ_srt;
 },
 GHC.Err.undefined_entry() //  [R2]
         { []
         }
     {offset
       c31g: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c31k; else goto c31j;
       c31k: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Err.undefined_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c31j: // global
           I64[Hp - 16] = sat_s2Ts_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.undefined_info" {
     GHC.Err.undefined_info:
         const GHC.Err.undefined_entry;
         const 0;
         const 1035087118350;
         const 4294967301;
         const S2TJ_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.186065871 UTC

[section ""data" . GHC.Err.$trModule3_closure" {
     GHC.Err.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Err.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.187680323 UTC

[section ""data" . GHC.Err.$trModule1_closure" {
     GHC.Err.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Err.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.189637767 UTC

[section ""data" . GHC.Err.$trModule_closure" {
     GHC.Err.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Err.$trModule3_closure+1;
         const GHC.Err.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.191309059 UTC

[section ""relreadonly" . S2TJ_srt" {
     S2TJ_srt:
         const GHC.Exception.errorCallWithCallStackException_closure;
         const GHC.Err.error_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const lvl2_r2T5_closure;
         const lvl6_r2T9_closure;
         const lvl14_r2Th_closure;
         const lvl4_r2T7_closure;
         const GHC.Err.undefined_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.324055994 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:54:40.3261958 UTC

[section ""data" . GHC.Err.error_closure" {
     GHC.Err.error_closure:
         const GHC.Err.error_info;
         const 0;
 },
 sat_s31M_entry() //  [R1]
         { []
         }
     {offset
       c322: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c323; else goto c324;
       c323: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c324: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = P64[R1 + 24];
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s31M_info" {
     sat_s31M_info:
         const sat_s31M_entry;
         const 2;
         const 4294967314;
         const S32a_srt;
 },
 GHC.Err.error_entry() //  [R2, R3]
         { []
         }
     {offset
       c325: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c329; else goto c328;
       c329: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Err.error_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c328: // global
           I64[Hp - 24] = sat_s31M_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.error_info" {
     GHC.Err.error_info:
         const GHC.Err.error_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S32a_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.331439831 UTC

[section ""data" . lvl_r2T3_closure" {
     lvl_r2T3_closure:
         const GHC.Stack.Types.FreezeCallStack_con_info;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.334902962 UTC

[section ""data" . GHC.Err.errorWithoutStackTrace_closure" {
     GHC.Err.errorWithoutStackTrace_closure:
         const GHC.Err.errorWithoutStackTrace_info;
         const 0;
 },
 sat_s31O_entry() //  [R1]
         { []
         }
     {offset
       c32u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c32v; else goto c32w;
       c32v: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c32w: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = lvl_r2T3_closure+3;
           R2 = P64[R1 + 16];
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s31O_info" {
     sat_s31O_info:
         const sat_s31O_entry;
         const 1;
         const 4294967312;
         const S32a_srt;
 },
 GHC.Err.errorWithoutStackTrace_entry() //  [R2]
         { []
         }
     {offset
       c32x: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c32B; else goto c32A;
       c32B: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Err.errorWithoutStackTrace_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c32A: // global
           I64[Hp - 16] = sat_s31O_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.errorWithoutStackTrace_info" {
     GHC.Err.errorWithoutStackTrace_info:
         const GHC.Err.errorWithoutStackTrace_entry;
         const 0;
         const 21474836494;
         const 4294967301;
         const S32a_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.339752701 UTC

[section ""cstring" . lvl1_r2T4_bytes" {
     lvl1_r2T4_bytes:
         I8[] [79,111,112,115,33,32,84,104,101,32,112,114,111,103,114,97,109,32,104,97,115,32,101,110,116,101,114,101,100,32,97,110,32,96,97,98,115,101,110,116,39,32,97,114,103,117,109,101,110,116,33,10]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.342233993 UTC

[section ""data" . lvl2_r2T5_closure" {
     lvl2_r2T5_closure:
         const lvl2_r2T5_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r2T5_entry() //  [R1]
         { []
         }
     {offset
       c32T: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c32U; else goto c32V;
       c32U: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c32V: // global
           (_c32Q::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c32Q::I64 == 0) goto c32S; else goto c32R;
       c32S: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c32R: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c32Q::I64;
           R2 = lvl1_r2T4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r2T5_info" {
     lvl2_r2T5_info:
         const lvl2_r2T5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.346620951 UTC

[section ""data" . GHC.Err.absentErr_closure" {
     GHC.Err.absentErr_closure:
         const GHC.Err.absentErr_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Err.absentErr_entry() //  [R1]
         { []
         }
     {offset
       c33a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c33b; else goto c33c;
       c33b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c33c: // global
           (_c337::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c337::I64 == 0) goto c339; else goto c338;
       c339: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c338: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c337::I64;
           R2 = lvl2_r2T5_closure;
           Sp = Sp - 16;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Err.absentErr_info" {
     GHC.Err.absentErr_info:
         const GHC.Err.absentErr_entry;
         const 0;
         const 12884901909;
         const S32a_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.350183423 UTC

[section ""cstring" . lvl3_r2T6_bytes" {
     lvl3_r2T6_bytes:
         I8[] [80,114,101,108,117,100,101,46,117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.352900261 UTC

[section ""data" . lvl4_r2T7_closure" {
     lvl4_r2T7_closure:
         const lvl4_r2T7_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r2T7_entry() //  [R1]
         { []
         }
     {offset
       c33s: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c33t; else goto c33u;
       c33t: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c33u: // global
           (_c33p::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c33p::I64 == 0) goto c33r; else goto c33q;
       c33r: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c33q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c33p::I64;
           R2 = lvl3_r2T6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl4_r2T7_info" {
     lvl4_r2T7_info:
         const lvl4_r2T7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.356429366 UTC

[section ""cstring" . lvl5_r2T8_bytes" {
     lvl5_r2T8_bytes:
         I8[] [101,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.358613912 UTC

[section ""data" . lvl6_r2T9_closure" {
     lvl6_r2T9_closure:
         const lvl6_r2T9_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r2T9_entry() //  [R1]
         { []
         }
     {offset
       c33K: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c33L; else goto c33M;
       c33L: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c33M: // global
           (_c33H::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c33H::I64 == 0) goto c33J; else goto c33I;
       c33J: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c33I: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c33H::I64;
           R2 = lvl5_r2T8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl6_r2T9_info" {
     lvl6_r2T9_info:
         const lvl6_r2T9_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.362561486 UTC

[section ""cstring" . GHC.Err.$trModule4_bytes" {
     GHC.Err.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.364793424 UTC

[section ""data" . lvl7_r2Ta_closure" {
     lvl7_r2Ta_closure:
         const lvl7_r2Ta_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_r2Ta_entry() //  [R1]
         { []
         }
     {offset
       c342: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c343; else goto c344;
       c343: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c344: // global
           (_c33Z::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c33Z::I64 == 0) goto c341; else goto c340;
       c341: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c340: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c33Z::I64;
           R2 = GHC.Err.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl7_r2Ta_info" {
     lvl7_r2Ta_info:
         const lvl7_r2Ta_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.368392784 UTC

[section ""cstring" . GHC.Err.$trModule2_bytes" {
     GHC.Err.$trModule2_bytes:
         I8[] [71,72,67,46,69,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.37184955 UTC

[section ""data" . lvl8_r2Tb_closure" {
     lvl8_r2Tb_closure:
         const lvl8_r2Tb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl8_r2Tb_entry() //  [R1]
         { []
         }
     {offset
       c34k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c34l; else goto c34m;
       c34l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c34m: // global
           (_c34h::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c34h::I64 == 0) goto c34j; else goto c34i;
       c34j: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c34i: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c34h::I64;
           R2 = GHC.Err.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl8_r2Tb_info" {
     lvl8_r2Tb_info:
         const lvl8_r2Tb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.37671778 UTC

[section ""cstring" . lvl9_r2Tc_bytes" {
     lvl9_r2Tc_bytes:
         I8[] [46,47,71,72,67,47,69,114,114,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.379018768 UTC

[section ""data" . lvl10_r2Td_closure" {
     lvl10_r2Td_closure:
         const lvl10_r2Td_info;
         const 0;
         const 0;
         const 0;
 },
 lvl10_r2Td_entry() //  [R1]
         { []
         }
     {offset
       c34C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c34D; else goto c34E;
       c34D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c34E: // global
           (_c34z::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c34z::I64 == 0) goto c34B; else goto c34A;
       c34B: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c34A: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c34z::I64;
           R2 = lvl9_r2Tc_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl10_r2Td_info" {
     lvl10_r2Td_info:
         const lvl10_r2Td_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.383438486 UTC

[section ""data" . lvl11_r2Te_closure" {
     lvl11_r2Te_closure:
         const GHC.Types.I#_con_info;
         const 79;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.385480165 UTC

[section ""data" . lvl12_r2Tf_closure" {
     lvl12_r2Tf_closure:
         const GHC.Types.I#_con_info;
         const 14;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.38720974 UTC

[section ""data" . lvl13_r2Tg_closure" {
     lvl13_r2Tg_closure:
         const GHC.Types.I#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.388917804 UTC

[section ""data" . lvl14_r2Th_closure" {
     lvl14_r2Th_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl7_r2Ta_closure;
         const lvl8_r2Tb_closure;
         const lvl10_r2Td_closure;
         const lvl11_r2Te_closure+1;
         const lvl12_r2Tf_closure+1;
         const lvl11_r2Te_closure+1;
         const lvl13_r2Tg_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.39291583 UTC

[section ""data" . GHC.Err.undefined_closure" {
     GHC.Err.undefined_closure:
         const GHC.Err.undefined_info;
         const 0;
 },
 sat_s31S_entry() //  [R1]
         { []
         }
     {offset
       c35a: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c35b; else goto c35c;
       c35b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c35c: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c353_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u35m; else goto c354;
       u35m: // global
           call _c353(R1) args: 0, res: 0, upd: 0;
       c354: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s31S_info" {
     sat_s31S_info:
         const sat_s31S_entry;
         const 1;
         const 12884901904;
         const S32a_srt+32;
 },
 _c353() //  [R1]
         { []
         }
     {offset
       c353: // global
           if (R1 & 7 == 3) goto c358; else goto c357;
       c358: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
       c357: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c35i; else goto c35h;
       c35i: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c35h: // global
           I64[Hp - 24] = GHC.Stack.Types.PushCallStack_con_info;
           P64[Hp - 16] = lvl6_r2T9_closure;
           P64[Hp - 8] = lvl14_r2Th_closure+1;
           P64[Hp] = R1;
           R1 = Hp - 22;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c353_info" {
     block_c353_info:
         const _c353;
         const 0;
         const 12884901918;
         const S32a_srt+32;
 },
 sat_s31T_entry() //  [R1]
         { []
         }
     {offset
       c35n: // global
           _s31T::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c35o; else goto c35p;
       c35p: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c35r; else goto c35q;
       c35r: // global
           HpAlloc = 24;
           goto c35o;
       c35o: // global
           R1 = _s31T::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c35q: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s31T::P64;
           _s31P::P64 = P64[_s31T::P64 + 16];
           I64[Hp - 16] = sat_s31S_info;
           P64[Hp] = _s31P::P64;
           R3 = Hp - 16;
           R2 = lvl4_r2T7_closure;
           R1 = GHC.Exception.errorCallWithCallStackException_closure;
           Sp = Sp - 16;
           call stg_ap_pp_fast(R3, R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s31T_info" {
     sat_s31T_info:
         const sat_s31T_entry;
         const 1;
         const 485331304464;
         const S32a_srt;
 },
 GHC.Err.undefined_entry() //  [R2]
         { []
         }
     {offset
       c35s: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c35w; else goto c35v;
       c35w: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Err.undefined_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c35v: // global
           I64[Hp - 16] = sat_s31T_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Err.undefined_info" {
     GHC.Err.undefined_info:
         const GHC.Err.undefined_entry;
         const 0;
         const 1035087118350;
         const 4294967301;
         const S32a_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.402686174 UTC

[section ""data" . GHC.Err.$trModule3_closure" {
     GHC.Err.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Err.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.404790112 UTC

[section ""data" . GHC.Err.$trModule1_closure" {
     GHC.Err.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Err.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.406579601 UTC

[section ""data" . GHC.Err.$trModule_closure" {
     GHC.Err.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Err.$trModule3_closure+1;
         const GHC.Err.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:54:40.40822411 UTC

[section ""relreadonly" . S32a_srt" {
     S32a_srt:
         const GHC.Exception.errorCallWithCallStackException_closure;
         const GHC.Err.error_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const lvl2_r2T5_closure;
         const lvl6_r2T9_closure;
         const lvl14_r2Th_closure;
         const lvl4_r2T7_closure;
         const GHC.Err.undefined_closure;
 }]

