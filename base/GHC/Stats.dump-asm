
==================== Asm code ====================
2018-03-16 16:07:36.614346143 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rcHpv_bytes:
	.asciz "GCDetails {"


==================== Asm code ====================
2018-03-16 16:07:36.616133527 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rcHpw_bytes:
	.asciz "gcdetails_gen = "


==================== Asm code ====================
2018-03-16 16:07:36.618272132 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rcHpx_bytes:
	.asciz "gcdetails_threads = "


==================== Asm code ====================
2018-03-16 16:07:36.620040003 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rcHpy_bytes:
	.asciz "gcdetails_allocated_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.621845872 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rcHpz_bytes:
	.asciz "gcdetails_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.623633479 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_rcHpA_bytes:
	.asciz "gcdetails_large_objects_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.625324763 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rcHpB_bytes:
	.asciz "gcdetails_compact_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.626978086 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl7_rcHpC_bytes:
	.asciz "gcdetails_slop_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.628814124 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rcHpD_bytes:
	.asciz "gcdetails_mem_in_use_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.630615457 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl9_rcHpE_bytes:
	.asciz "gcdetails_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.63236883 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rcHpF_bytes:
	.asciz "gcdetails_par_max_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.634249326 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl11_rcHpG_bytes:
	.asciz "gcdetails_par_balanced_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.636140705 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rcHpH_bytes:
	.asciz "gcdetails_sync_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.638683825 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rcHpI_bytes:
	.asciz "gcdetails_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.640307858 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rcHpJ_bytes:
	.asciz "gcdetails_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.642319422 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rcHpK_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:07:36.723455596 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_closure
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_closure, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.724442493 UTC

.section .text
.align 8
w1_scHss_entry:
_ccK0q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK0r
_ccK0s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK0n_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK0n
_ccK0o:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK0r:
	jmp *-16(%r13)
	.size w1_scHss_entry, .-w1_scHss_entry


==================== Asm code ====================
2018-03-16 16:07:36.725212463 UTC

.section .data.rel.ro
.align 8
.align 1
w1_scHss_info:
	.quad	w1_scHss_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.72602674 UTC

.section .text
.align 8
_ccK0n:
_ccK0n:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK0C
_ccK0D:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK0C:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK0n, .-_ccK0n


==================== Asm code ====================
2018-03-16 16:07:36.727178154 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK0n_info:
	.quad	_ccK0n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.727909518 UTC

.section .text
.align 8
w2_scHsx_entry:
_ccK0M:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK0N
_ccK0O:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK0J_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK0J
_ccK0K:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK0N:
	jmp *-16(%r13)
	.size w2_scHsx_entry, .-w2_scHsx_entry


==================== Asm code ====================
2018-03-16 16:07:36.728603446 UTC

.section .data.rel.ro
.align 8
.align 1
w2_scHsx_info:
	.quad	w2_scHsx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.729347729 UTC

.section .text
.align 8
_ccK0J:
_ccK0J:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK0Y
_ccK0Z:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK0Y:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK0J, .-_ccK0J


==================== Asm code ====================
2018-03-16 16:07:36.730035049 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK0J_info:
	.quad	_ccK0J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.730783753 UTC

.section .text
.align 8
w3_scHsC_entry:
_ccK18:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK19
_ccK1a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK15_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK15
_ccK16:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK19:
	jmp *-16(%r13)
	.size w3_scHsC_entry, .-w3_scHsC_entry


==================== Asm code ====================
2018-03-16 16:07:36.731449024 UTC

.section .data.rel.ro
.align 8
.align 1
w3_scHsC_info:
	.quad	w3_scHsC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.732132153 UTC

.section .text
.align 8
_ccK15:
_ccK15:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK1k
_ccK1l:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK1k:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK15, .-_ccK15


==================== Asm code ====================
2018-03-16 16:07:36.732739496 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK15_info:
	.quad	_ccK15
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.733539551 UTC

.section .text
.align 8
w4_scHsH_entry:
_ccK1u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK1v
_ccK1w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK1r_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK1r
_ccK1s:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK1v:
	jmp *-16(%r13)
	.size w4_scHsH_entry, .-w4_scHsH_entry


==================== Asm code ====================
2018-03-16 16:07:36.734230654 UTC

.section .data.rel.ro
.align 8
.align 1
w4_scHsH_info:
	.quad	w4_scHsH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.73495962 UTC

.section .text
.align 8
_ccK1r:
_ccK1r:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK1G
_ccK1H:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK1G:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK1r, .-_ccK1r


==================== Asm code ====================
2018-03-16 16:07:36.735566341 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK1r_info:
	.quad	_ccK1r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.736345471 UTC

.section .text
.align 8
w5_scHsM_entry:
_ccK1Q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK1R
_ccK1S:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK1N_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK1N
_ccK1O:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK1R:
	jmp *-16(%r13)
	.size w5_scHsM_entry, .-w5_scHsM_entry


==================== Asm code ====================
2018-03-16 16:07:36.737038206 UTC

.section .data.rel.ro
.align 8
.align 1
w5_scHsM_info:
	.quad	w5_scHsM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.737842194 UTC

.section .text
.align 8
_ccK1N:
_ccK1N:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK22
_ccK23:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK22:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK1N, .-_ccK1N


==================== Asm code ====================
2018-03-16 16:07:36.7384823 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK1N_info:
	.quad	_ccK1N
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.739222844 UTC

.section .text
.align 8
w6_scHsR_entry:
_ccK2c:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK2d
_ccK2e:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK29_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK29
_ccK2a:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK2d:
	jmp *-16(%r13)
	.size w6_scHsR_entry, .-w6_scHsR_entry


==================== Asm code ====================
2018-03-16 16:07:36.739929065 UTC

.section .data.rel.ro
.align 8
.align 1
w6_scHsR_info:
	.quad	w6_scHsR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.740637435 UTC

.section .text
.align 8
_ccK29:
_ccK29:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK2o
_ccK2p:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK2o:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK29, .-_ccK29


==================== Asm code ====================
2018-03-16 16:07:36.741315147 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK29_info:
	.quad	_ccK29
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.742075247 UTC

.section .text
.align 8
w7_scHsW_entry:
_ccK2y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK2z
_ccK2A:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK2v_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK2v
_ccK2w:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK2z:
	jmp *-16(%r13)
	.size w7_scHsW_entry, .-w7_scHsW_entry


==================== Asm code ====================
2018-03-16 16:07:36.742753436 UTC

.section .data.rel.ro
.align 8
.align 1
w7_scHsW_info:
	.quad	w7_scHsW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.743499362 UTC

.section .text
.align 8
_ccK2v:
_ccK2v:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK2K
_ccK2L:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK2K:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK2v, .-_ccK2v


==================== Asm code ====================
2018-03-16 16:07:36.744158083 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK2v_info:
	.quad	_ccK2v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.744913057 UTC

.section .text
.align 8
w8_scHt1_entry:
_ccK2U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK2V
_ccK2W:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK2R_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK2R
_ccK2S:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK2V:
	jmp *-16(%r13)
	.size w8_scHt1_entry, .-w8_scHt1_entry


==================== Asm code ====================
2018-03-16 16:07:36.745631098 UTC

.section .data.rel.ro
.align 8
.align 1
w8_scHt1_info:
	.quad	w8_scHt1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.746390084 UTC

.section .text
.align 8
_ccK2R:
_ccK2R:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK36
_ccK37:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK36:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK2R, .-_ccK2R


==================== Asm code ====================
2018-03-16 16:07:36.747042404 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK2R_info:
	.quad	_ccK2R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.747836414 UTC

.section .text
.align 8
w9_scHt6_entry:
_ccK3g:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK3h
_ccK3i:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK3d_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccK3d
_ccK3e:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK3h:
	jmp *-16(%r13)
	.size w9_scHt6_entry, .-w9_scHt6_entry


==================== Asm code ====================
2018-03-16 16:07:36.748536001 UTC

.section .data.rel.ro
.align 8
.align 1
w9_scHt6_info:
	.quad	w9_scHt6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.749323228 UTC

.section .text
.align 8
_ccK3d:
_ccK3d:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccK3s
_ccK3t:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccK3s:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccK3d, .-_ccK3d


==================== Asm code ====================
2018-03-16 16:07:36.749977643 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK3d_info:
	.quad	_ccK3d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.750735062 UTC

.section .text
.align 8
sat_scHtp_entry:
_ccK6H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK6I
_ccK6J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $lvl15_rcHpK_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_ccK6I:
	jmp *-16(%r13)
	.size sat_scHtp_entry, .-sat_scHtp_entry


==================== Asm code ====================
2018-03-16 16:07:36.751436099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtp_info:
	.quad	sat_scHtp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:36.752221119 UTC

.section .text
.align 8
sat_scHtt_entry:
_ccK6K:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK6O
_ccK6P:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK6y_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ccK6y
_ccK6z:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK6O:
	jmp *-16(%r13)
	.size sat_scHtt_entry, .-sat_scHtt_entry


==================== Asm code ====================
2018-03-16 16:07:36.752896979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtt_info:
	.quad	sat_scHtt_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:36.754090888 UTC

.section .text
.align 8
_ccK6y:
_ccK6y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK6S
_ccK6R:
	movq 7(%rbx),%rax
	movq $sat_scHtp_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccK6L_info,8(%rbp)
	leaq -16(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccK6S:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK6y, .-_ccK6y


==================== Asm code ====================
2018-03-16 16:07:36.75481425 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK6y_info:
	.quad	_ccK6y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.756052133 UTC

.section .text
.align 8
_ccK6L:
_ccK6L:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK6V
_ccK6U:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK6V:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK6L, .-_ccK6L


==================== Asm code ====================
2018-03-16 16:07:36.756706158 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK6L_info:
	.quad	_ccK6L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.75747712 UTC

.section .text
.align 8
sat_scHtu_entry:
_ccK6X:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccK71
_ccK70:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_scHtt_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl14_rcHpJ_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK71:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtu_entry, .-sat_scHtu_entry


==================== Asm code ====================
2018-03-16 16:07:36.758109039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtu_info:
	.quad	sat_scHtu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:36.758913167 UTC

.section .text
.align 8
sat_scHtv_entry:
_ccK72:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK73
_ccK74:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccK76
_ccK75:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_scHtu_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK76:
	movq $32,904(%r13)
_ccK73:
	jmp *-16(%r13)
	.size sat_scHtv_entry, .-sat_scHtv_entry


==================== Asm code ====================
2018-03-16 16:07:36.759624653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtv_info:
	.quad	sat_scHtv_entry
	.quad	2
	.quad	4294967314
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.76042737 UTC

.section .text
.align 8
sat_scHtz_entry:
_ccK77:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK7b
_ccK7c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK6h_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ccK6h
_ccK6i:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK7b:
	jmp *-16(%r13)
	.size sat_scHtz_entry, .-sat_scHtz_entry


==================== Asm code ====================
2018-03-16 16:07:36.761116281 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtz_info:
	.quad	sat_scHtz_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.76189508 UTC

.section .text
.align 8
_ccK6h:
_ccK6h:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccK7f
_ccK7e:
	movq 7(%rbx),%rax
	movq $sat_scHtv_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccK78_info,16(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccK7f:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK6h, .-_ccK6h


==================== Asm code ====================
2018-03-16 16:07:36.762523829 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK6h_info:
	.quad	_ccK6h
	.quad	2
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.763287317 UTC

.section .text
.align 8
_ccK78:
_ccK78:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK7i
_ccK7h:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK7i:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK78, .-_ccK78


==================== Asm code ====================
2018-03-16 16:07:36.763953312 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK78_info:
	.quad	_ccK78
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.764699017 UTC

.section .text
.align 8
sat_scHtA_entry:
_ccK7k:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccK7o
_ccK7n:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_scHtz_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $lvl13_rcHpI_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK7o:
	movq $40,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtA_entry, .-sat_scHtA_entry


==================== Asm code ====================
2018-03-16 16:07:36.765855256 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtA_info:
	.quad	sat_scHtA_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.766650975 UTC

.section .text
.align 8
sat_scHtB_entry:
_ccK7p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK7q
_ccK7r:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccK7t
_ccK7s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_scHtA_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK7t:
	movq $40,904(%r13)
_ccK7q:
	jmp *-16(%r13)
	.size sat_scHtB_entry, .-sat_scHtB_entry


==================== Asm code ====================
2018-03-16 16:07:36.767343793 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtB_info:
	.quad	sat_scHtB_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.768150682 UTC

.section .text
.align 8
sat_scHtF_entry:
_ccK7u:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK7y
_ccK7z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK60_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ccK60
_ccK61:
	movq (%rbx),%rax
	jmp *(%rax)
_ccK7y:
	jmp *-16(%r13)
	.size sat_scHtF_entry, .-sat_scHtF_entry


==================== Asm code ====================
2018-03-16 16:07:36.768838801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtF_info:
	.quad	sat_scHtF_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.76965927 UTC

.section .text
.align 8
_ccK60:
_ccK60:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccK7C
_ccK7B:
	movq 7(%rbx),%rax
	movq $sat_scHtB_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccK7v_info,24(%rbp)
	leaq -32(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccK7C:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK60, .-_ccK60


==================== Asm code ====================
2018-03-16 16:07:36.770358856 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK60_info:
	.quad	_ccK60
	.quad	3
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.771146176 UTC

.section .text
.align 8
_ccK7v:
_ccK7v:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK7F
_ccK7E:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK7F:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK7v, .-_ccK7v


==================== Asm code ====================
2018-03-16 16:07:36.771790345 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK7v_info:
	.quad	_ccK7v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.772537182 UTC

.section .text
.align 8
sat_scHtG_entry:
_ccK7H:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccK7L
_ccK7K:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_scHtF_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movl $lvl12_rcHpH_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK7L:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtG_entry, .-sat_scHtG_entry


==================== Asm code ====================
2018-03-16 16:07:36.773224671 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtG_info:
	.quad	sat_scHtG_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.774074688 UTC

.section .text
.align 8
sat_scHtH_entry:
_ccK7M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK7N
_ccK7O:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccK7Q
_ccK7P:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_scHtG_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK7Q:
	movq $48,904(%r13)
_ccK7N:
	jmp *-16(%r13)
	.size sat_scHtH_entry, .-sat_scHtH_entry


==================== Asm code ====================
2018-03-16 16:07:36.774776829 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtH_info:
	.quad	sat_scHtH_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.775622165 UTC

.section .text
.align 8
sat_scHtL_entry:
_ccK7U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK7V
_ccK7W:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccK7Y
_ccK7X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_scHtH_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK7R_info,-24(%rbp)
	leaq -40(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK7Y:
	movq $48,904(%r13)
_ccK7V:
	jmp *-16(%r13)
	.size sat_scHtL_entry, .-sat_scHtL_entry


==================== Asm code ====================
2018-03-16 16:07:36.776354092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtL_info:
	.quad	sat_scHtL_entry
	.quad	5
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.77708171 UTC

.section .text
.align 8
_ccK7R:
_ccK7R:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK81
_ccK80:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK81:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK7R, .-_ccK7R


==================== Asm code ====================
2018-03-16 16:07:36.778054897 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK7R_info:
	.quad	_ccK7R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.778793219 UTC

.section .text
.align 8
sat_scHtM_entry:
_ccK82:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccK86
_ccK85:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_scHtL_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movl $lvl11_rcHpG_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK86:
	movq $56,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtM_entry, .-sat_scHtM_entry


==================== Asm code ====================
2018-03-16 16:07:36.779558145 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtM_info:
	.quad	sat_scHtM_entry
	.quad	5
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.780403457 UTC

.section .text
.align 8
sat_scHtN_entry:
_ccK87:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK88
_ccK89:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccK8b
_ccK8a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_scHtM_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK8b:
	movq $56,904(%r13)
_ccK88:
	jmp *-16(%r13)
	.size sat_scHtN_entry, .-sat_scHtN_entry


==================== Asm code ====================
2018-03-16 16:07:36.781206932 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtN_info:
	.quad	sat_scHtN_entry
	.quad	5
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.782107679 UTC

.section .text
.align 8
sat_scHtR_entry:
_ccK8f:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK8g
_ccK8h:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccK8j
_ccK8i:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_scHtN_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK8c_info,-24(%rbp)
	leaq -48(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK8j:
	movq $56,904(%r13)
_ccK8g:
	jmp *-16(%r13)
	.size sat_scHtR_entry, .-sat_scHtR_entry


==================== Asm code ====================
2018-03-16 16:07:36.782940766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtR_info:
	.quad	sat_scHtR_entry
	.quad	6
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.783726634 UTC

.section .text
.align 8
_ccK8c:
_ccK8c:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK8m
_ccK8l:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK8m:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK8c, .-_ccK8c


==================== Asm code ====================
2018-03-16 16:07:36.784437038 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK8c_info:
	.quad	_ccK8c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.785800231 UTC

.section .text
.align 8
sat_scHtS_entry:
_ccK8n:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccK8r
_ccK8q:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_scHtR_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movl $lvl10_rcHpF_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK8r:
	movq $64,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtS_entry, .-sat_scHtS_entry


==================== Asm code ====================
2018-03-16 16:07:36.786520788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtS_info:
	.quad	sat_scHtS_entry
	.quad	6
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.787343174 UTC

.section .text
.align 8
sat_scHtT_entry:
_ccK8s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK8t
_ccK8u:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccK8w
_ccK8v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_scHtS_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK8w:
	movq $64,904(%r13)
_ccK8t:
	jmp *-16(%r13)
	.size sat_scHtT_entry, .-sat_scHtT_entry


==================== Asm code ====================
2018-03-16 16:07:36.788113013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtT_info:
	.quad	sat_scHtT_entry
	.quad	6
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.788987684 UTC

.section .text
.align 8
sat_scHtX_entry:
_ccK8A:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK8B
_ccK8C:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccK8E
_ccK8D:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	movq $sat_scHtT_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK8x_info,-24(%rbp)
	leaq -56(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK8E:
	movq $64,904(%r13)
_ccK8B:
	jmp *-16(%r13)
	.size sat_scHtX_entry, .-sat_scHtX_entry


==================== Asm code ====================
2018-03-16 16:07:36.789803115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtX_info:
	.quad	sat_scHtX_entry
	.quad	7
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.790551414 UTC

.section .text
.align 8
_ccK8x:
_ccK8x:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK8H
_ccK8G:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK8H:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK8x, .-_ccK8x


==================== Asm code ====================
2018-03-16 16:07:36.791229987 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK8x_info:
	.quad	_ccK8x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.792005471 UTC

.section .text
.align 8
sat_scHtY_entry:
_ccK8I:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccK8M
_ccK8L:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	movq $sat_scHtX_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movl $lvl9_rcHpE_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK8M:
	movq $72,904(%r13)
	jmp *-16(%r13)
	.size sat_scHtY_entry, .-sat_scHtY_entry


==================== Asm code ====================
2018-03-16 16:07:36.792766549 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtY_info:
	.quad	sat_scHtY_entry
	.quad	7
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.793980831 UTC

.section .text
.align 8
sat_scHtZ_entry:
_ccK8N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK8O
_ccK8P:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccK8R
_ccK8Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	movq $sat_scHtY_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK8R:
	movq $72,904(%r13)
_ccK8O:
	jmp *-16(%r13)
	.size sat_scHtZ_entry, .-sat_scHtZ_entry


==================== Asm code ====================
2018-03-16 16:07:36.794746251 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHtZ_info:
	.quad	sat_scHtZ_entry
	.quad	7
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.795659369 UTC

.section .text
.align 8
sat_scHu3_entry:
_ccK8V:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK8W
_ccK8X:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccK8Z
_ccK8Y:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	movq $sat_scHtZ_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK8S_info,-24(%rbp)
	leaq -64(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK8Z:
	movq $72,904(%r13)
_ccK8W:
	jmp *-16(%r13)
	.size sat_scHu3_entry, .-sat_scHu3_entry


==================== Asm code ====================
2018-03-16 16:07:36.79646137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHu3_info:
	.quad	sat_scHu3_entry
	.quad	8
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.797208742 UTC

.section .text
.align 8
_ccK8S:
_ccK8S:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK92
_ccK91:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK92:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK8S, .-_ccK8S


==================== Asm code ====================
2018-03-16 16:07:36.797919136 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK8S_info:
	.quad	_ccK8S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.798700672 UTC

.section .text
.align 8
sat_scHu4_entry:
_ccK93:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccK97
_ccK96:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	movq $sat_scHu3_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movl $lvl8_rcHpD_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK97:
	movq $80,904(%r13)
	jmp *-16(%r13)
	.size sat_scHu4_entry, .-sat_scHu4_entry


==================== Asm code ====================
2018-03-16 16:07:36.799404005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHu4_info:
	.quad	sat_scHu4_entry
	.quad	8
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.800262418 UTC

.section .text
.align 8
sat_scHu5_entry:
_ccK98:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK99
_ccK9a:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccK9c
_ccK9b:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	movq $sat_scHu4_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK9c:
	movq $80,904(%r13)
_ccK99:
	jmp *-16(%r13)
	.size sat_scHu5_entry, .-sat_scHu5_entry


==================== Asm code ====================
2018-03-16 16:07:36.801011533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHu5_info:
	.quad	sat_scHu5_entry
	.quad	8
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.801924066 UTC

.section .text
.align 8
sat_scHu9_entry:
_ccK9g:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK9h
_ccK9i:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccK9k
_ccK9j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHu5_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK9d_info,-24(%rbp)
	leaq -72(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK9k:
	movq $80,904(%r13)
_ccK9h:
	jmp *-16(%r13)
	.size sat_scHu9_entry, .-sat_scHu9_entry


==================== Asm code ====================
2018-03-16 16:07:36.802723909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHu9_info:
	.quad	sat_scHu9_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.803450512 UTC

.section .text
.align 8
_ccK9d:
_ccK9d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK9n
_ccK9m:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK9n:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK9d, .-_ccK9d


==================== Asm code ====================
2018-03-16 16:07:36.804070139 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK9d_info:
	.quad	_ccK9d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.804885843 UTC

.section .text
.align 8
sat_scHua_entry:
_ccK9o:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccK9s
_ccK9r:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHu9_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movl $lvl7_rcHpC_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK9s:
	movq $88,904(%r13)
	jmp *-16(%r13)
	.size sat_scHua_entry, .-sat_scHua_entry


==================== Asm code ====================
2018-03-16 16:07:36.805657601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHua_info:
	.quad	sat_scHua_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.806534996 UTC

.section .text
.align 8
sat_scHub_entry:
_ccK9t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK9u
_ccK9v:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccK9x
_ccK9w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHua_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK9x:
	movq $88,904(%r13)
_ccK9u:
	jmp *-16(%r13)
	.size sat_scHub_entry, .-sat_scHub_entry


==================== Asm code ====================
2018-03-16 16:07:36.80738052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHub_info:
	.quad	sat_scHub_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.808267209 UTC

.section .text
.align 8
sat_scHuf_entry:
_ccK9B:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK9C
_ccK9D:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccK9F
_ccK9E:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHub_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK9y_info,-24(%rbp)
	leaq -80(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccK9F:
	movq $88,904(%r13)
_ccK9C:
	jmp *-16(%r13)
	.size sat_scHuf_entry, .-sat_scHuf_entry


==================== Asm code ====================
2018-03-16 16:07:36.809134307 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuf_info:
	.quad	sat_scHuf_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.810379166 UTC

.section .text
.align 8
_ccK9y:
_ccK9y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccK9I
_ccK9H:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccK9I:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK9y, .-_ccK9y


==================== Asm code ====================
2018-03-16 16:07:36.811093493 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK9y_info:
	.quad	_ccK9y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.811937229 UTC

.section .text
.align 8
sat_scHug_entry:
_ccK9J:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccK9N
_ccK9M:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHuf_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movl $lvl6_rcHpB_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccK9N:
	movq $96,904(%r13)
	jmp *-16(%r13)
	.size sat_scHug_entry, .-sat_scHug_entry


==================== Asm code ====================
2018-03-16 16:07:36.812765582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHug_info:
	.quad	sat_scHug_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.813689746 UTC

.section .text
.align 8
sat_scHuh_entry:
_ccK9O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK9P
_ccK9Q:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccK9S
_ccK9R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHug_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccK9S:
	movq $96,904(%r13)
_ccK9P:
	jmp *-16(%r13)
	.size sat_scHuh_entry, .-sat_scHuh_entry


==================== Asm code ====================
2018-03-16 16:07:36.814546677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuh_info:
	.quad	sat_scHuh_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.815975653 UTC

.section .text
.align 8
sat_scHul_entry:
_ccK9W:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccK9X
_ccK9Y:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKa0
_ccK9Z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHuh_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccK9T_info,-24(%rbp)
	leaq -88(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKa0:
	movq $96,904(%r13)
_ccK9X:
	jmp *-16(%r13)
	.size sat_scHul_entry, .-sat_scHul_entry


==================== Asm code ====================
2018-03-16 16:07:36.81680128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHul_info:
	.quad	sat_scHul_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.817521672 UTC

.section .text
.align 8
_ccK9T:
_ccK9T:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKa3
_ccKa2:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKa3:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccK9T, .-_ccK9T


==================== Asm code ====================
2018-03-16 16:07:36.818134319 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK9T_info:
	.quad	_ccK9T
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.818907501 UTC

.section .text
.align 8
sat_scHum_entry:
_ccKa4:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKa8
_ccKa7:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHul_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movl $lvl5_rcHpA_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKa8:
	movq $104,904(%r13)
	jmp *-16(%r13)
	.size sat_scHum_entry, .-sat_scHum_entry


==================== Asm code ====================
2018-03-16 16:07:36.819686039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHum_info:
	.quad	sat_scHum_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.820551174 UTC

.section .text
.align 8
sat_scHun_entry:
_ccKa9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKaa
_ccKab:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKad
_ccKac:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHum_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKad:
	movq $104,904(%r13)
_ccKaa:
	jmp *-16(%r13)
	.size sat_scHun_entry, .-sat_scHun_entry


==================== Asm code ====================
2018-03-16 16:07:36.821784575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHun_info:
	.quad	sat_scHun_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.822681357 UTC

.section .text
.align 8
sat_scHur_entry:
_ccKah:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKai
_ccKaj:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKal
_ccKak:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHun_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKae_info,-24(%rbp)
	leaq -96(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKal:
	movq $104,904(%r13)
_ccKai:
	jmp *-16(%r13)
	.size sat_scHur_entry, .-sat_scHur_entry


==================== Asm code ====================
2018-03-16 16:07:36.823565619 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHur_info:
	.quad	sat_scHur_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.824306925 UTC

.section .text
.align 8
_ccKae:
_ccKae:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKao
_ccKan:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKao:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKae, .-_ccKae


==================== Asm code ====================
2018-03-16 16:07:36.82492347 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKae_info:
	.quad	_ccKae
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.825813056 UTC

.section .text
.align 8
sat_scHus_entry:
_ccKap:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKat
_ccKas:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHur_info,-104(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movl $lvl4_rcHpz_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKat:
	movq $112,904(%r13)
	jmp *-16(%r13)
	.size sat_scHus_entry, .-sat_scHus_entry


==================== Asm code ====================
2018-03-16 16:07:36.826595195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHus_info:
	.quad	sat_scHus_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.827547628 UTC

.section .text
.align 8
sat_scHut_entry:
_ccKau:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKav
_ccKaw:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKay
_ccKax:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHus_info,-104(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKay:
	movq $112,904(%r13)
_ccKav:
	jmp *-16(%r13)
	.size sat_scHut_entry, .-sat_scHut_entry


==================== Asm code ====================
2018-03-16 16:07:36.828391319 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHut_info:
	.quad	sat_scHut_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.829391714 UTC

.section .text
.align 8
sat_scHux_entry:
_ccKaC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKaD
_ccKaE:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKaG
_ccKaF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHut_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKaz_info,-24(%rbp)
	leaq -104(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKaG:
	movq $112,904(%r13)
_ccKaD:
	jmp *-16(%r13)
	.size sat_scHux_entry, .-sat_scHux_entry


==================== Asm code ====================
2018-03-16 16:07:36.830296508 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHux_info:
	.quad	sat_scHux_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.831044046 UTC

.section .text
.align 8
_ccKaz:
_ccKaz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKaJ
_ccKaI:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKaJ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKaz, .-_ccKaz


==================== Asm code ====================
2018-03-16 16:07:36.831681494 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKaz_info:
	.quad	_ccKaz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.832542983 UTC

.section .text
.align 8
sat_scHuy_entry:
_ccKaK:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKaO
_ccKaN:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHux_info,-112(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movl $lvl3_rcHpy_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKaO:
	movq $120,904(%r13)
	jmp *-16(%r13)
	.size sat_scHuy_entry, .-sat_scHuy_entry


==================== Asm code ====================
2018-03-16 16:07:36.833449443 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuy_info:
	.quad	sat_scHuy_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.834389418 UTC

.section .text
.align 8
sat_scHuz_entry:
_ccKaP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKaQ
_ccKaR:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKaT
_ccKaS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHuy_info,-112(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKaT:
	movq $120,904(%r13)
_ccKaQ:
	jmp *-16(%r13)
	.size sat_scHuz_entry, .-sat_scHuz_entry


==================== Asm code ====================
2018-03-16 16:07:36.835287591 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuz_info:
	.quad	sat_scHuz_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.836222767 UTC

.section .text
.align 8
sat_scHuD_entry:
_ccKaU:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKb1
_ccKb2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK3Z_info,-128(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-120(%rbp)
	movq 72(%rsp),%rsi
	movq %rsi,-112(%rbp)
	movq 80(%rsp),%rsi
	movq %rsi,-104(%rbp)
	movq 88(%rsp),%rsi
	movq %rsi,-96(%rbp)
	movq %rdi,-88(%rbp)
	movq %r8,-80(%rbp)
	movq %r9,-72(%rbp)
	movq %r10,-64(%rbp)
	movq %r11,-56(%rbp)
	movq %r14,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _ccK3Z
_ccK40:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKb1:
	jmp *-16(%r13)
	.size sat_scHuD_entry, .-sat_scHuD_entry


==================== Asm code ====================
2018-03-16 16:07:36.837129681 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuD_info:
	.quad	sat_scHuD_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.838034332 UTC

.section .text
.align 8
_ccK3Z:
_ccK3Z:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKb5
_ccKb4:
	movq 7(%rbx),%rax
	movq $sat_scHuz_info,-112(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKaY_info,104(%rbp)
	leaq -112(%r12),%rsi
	movq %rax,%r14
	addq $104,%rbp
	jmp GHC.Show.$witos_entry
_ccKb5:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK3Z, .-_ccK3Z


==================== Asm code ====================
2018-03-16 16:07:36.83888993 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK3Z_info:
	.quad	_ccK3Z
	.quad	13
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.839648142 UTC

.section .text
.align 8
_ccKaY:
_ccKaY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKb8
_ccKb7:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKb8:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKaY, .-_ccKaY


==================== Asm code ====================
2018-03-16 16:07:36.840352985 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKaY_info:
	.quad	_ccKaY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.841577835 UTC

.section .text
.align 8
sat_scHuE_entry:
_ccKba:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKbe
_ccKbd:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq $sat_scHuD_info,-120(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movl $lvl2_rcHpx_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKbe:
	movq $128,904(%r13)
	jmp *-16(%r13)
	.size sat_scHuE_entry, .-sat_scHuE_entry


==================== Asm code ====================
2018-03-16 16:07:36.842503522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuE_info:
	.quad	sat_scHuE_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.843484116 UTC

.section .text
.align 8
sat_scHuF_entry:
_ccKbf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKbg
_ccKbh:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKbj
_ccKbi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq $sat_scHuE_info,-120(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKbj:
	movq $128,904(%r13)
_ccKbg:
	jmp *-16(%r13)
	.size sat_scHuF_entry, .-sat_scHuF_entry


==================== Asm code ====================
2018-03-16 16:07:36.844459952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuF_info:
	.quad	sat_scHuF_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.845939293 UTC

.section .text
.align 8
sat_scHuJ_entry:
_ccKbk:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKbr
_ccKbs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccK3I_info,-136(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq 16(%rbx),%rbx
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-128(%rbp)
	movq 72(%rsp),%rdi
	movq %rdi,-120(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 96(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq %r8,-88(%rbp)
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-136,%rbp
	testb $7,%bl
	jne _ccK3I
_ccK3J:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKbr:
	jmp *-16(%r13)
	.size sat_scHuJ_entry, .-sat_scHuJ_entry


==================== Asm code ====================
2018-03-16 16:07:36.84682927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuJ_info:
	.quad	sat_scHuJ_entry
	.quad	15
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.847632464 UTC

.section .text
.align 8
_ccK3I:
_ccK3I:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKbv
_ccKbu:
	movq 7(%rbx),%rax
	movq $sat_scHuF_info,-120(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKbo_info,112(%rbp)
	leaq -120(%r12),%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp GHC.Show.$witos_entry
_ccKbv:
	movq $128,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK3I, .-_ccK3I


==================== Asm code ====================
2018-03-16 16:07:36.848435923 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK3I_info:
	.quad	_ccK3I
	.quad	14
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.849160233 UTC

.section .text
.align 8
_ccKbo:
_ccKbo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKby
_ccKbx:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKby:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKbo, .-_ccKbo


==================== Asm code ====================
2018-03-16 16:07:36.849845162 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKbo_info:
	.quad	_ccKbo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:36.850781214 UTC

.section .text
.align 8
sat_scHuK_entry:
_ccKbA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKbB
_ccKbC:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccKbE
_ccKbD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq $sat_scHuJ_info,-128(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	movl $lvl1_rcHpw_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_ccKbE:
	movq $136,904(%r13)
_ccKbB:
	jmp *-16(%r13)
	.size sat_scHuK_entry, .-sat_scHuK_entry


==================== Asm code ====================
2018-03-16 16:07:36.85169181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuK_info:
	.quad	sat_scHuK_entry
	.quad	15
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.852611822 UTC

.section .text
.align 8
p_scHtb_entry:
_ccKbF:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccKbJ
_ccKbI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq $sat_scHuK_info,-128(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -128(%r12),%rsi
	movl $lvl_rcHpv_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKbJ:
	movq $136,904(%r13)
	jmp *-8(%r13)
	.size p_scHtb_entry, .-p_scHtb_entry


==================== Asm code ====================
2018-03-16 16:07:36.853534894 UTC

.section .data.rel.ro
.align 8
.align 1
p_scHtb_info:
	.quad	p_scHtb_entry
	.quad	14
	.quad	12884901896
	.quad	4294967301
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.854357783 UTC

.section .text
.align 8
sat_scHuO_entry:
_ccKbY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKbZ
_ccKc0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKc2
_ccKc1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp p_scHtb_entry
_ccKc2:
	movq $24,904(%r13)
_ccKbZ:
	jmp *-16(%r13)
	.size sat_scHuO_entry, .-sat_scHuO_entry


==================== Asm code ====================
2018-03-16 16:07:36.855070177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuO_info:
	.quad	sat_scHuO_entry
	.quad	2
	.quad	12884901906
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.855876486 UTC

.section .text
.align 8
sat_scHuP_entry:
_ccKc4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKc8
_ccKc7:
	movq 7(%rbx),%rax
	movq $sat_scHuO_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccKc8:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scHuP_entry, .-sat_scHuP_entry


==================== Asm code ====================
2018-03-16 16:07:36.856574878 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHuP_info:
	.quad	sat_scHuP_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.857380254 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_entry, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_entry:
_ccKc9:
	leaq -120(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKca
_ccKcb:
	movq $block_ccK09_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccK09
_ccK0a:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKca:
	movl $GHC.Stats.$fShowGCDetails_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowGCDetails_$cshowsPrec_entry, .-GHC.Stats.$fShowGCDetails_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:36.858060165 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_info
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_info, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.858945295 UTC

.section .text
.align 8
_ccK09:
_ccK09:
	movq $block_ccK0e_info,-104(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq %rbx,88(%rsp)
	movq 8(%rbp),%rbx
	movq %rsi,96(%rsp)
	movq 80(%rsp),%rsi
	movq %rsi,-96(%rbp)
	movq 96(%rsp),%rsi
	movq %rsi,-88(%rbp)
	movq %rdi,-80(%rbp)
	movq %r8,-72(%rbp)
	movq %r9,-64(%rbp)
	movq %r10,-56(%rbp)
	movq %r11,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq 88(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 72(%rsp),%rax
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,8(%rbp)
	addq $-104,%rbp
	testb $7,%bl
	jne _ccK0e
_ccK0f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccK09, .-_ccK09


==================== Asm code ====================
2018-03-16 16:07:36.859813659 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK09_info:
	.quad	_ccK09
	.quad	1
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.860829252 UTC

.section .text
.align 8
_ccK0e:
_ccK0e:
	addq $352,%r12
	cmpq 856(%r13),%r12
	ja _ccKcf
_ccKce:
	movq 7(%rbx),%rax
	movq $w1_scHss_info,-344(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-328(%r12)
	movq $w2_scHsx_info,-320(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-304(%r12)
	movq $w3_scHsC_info,-296(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-280(%r12)
	movq $w4_scHsH_info,-272(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-256(%r12)
	movq $w5_scHsM_info,-248(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-232(%r12)
	movq $w6_scHsR_info,-224(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-208(%r12)
	movq $w7_scHsW_info,-200(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-184(%r12)
	movq $w8_scHt1_info,-176(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq $w9_scHt6_info,-152(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq $p_scHtb_info,-128(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-88(%r12)
	leaq -344(%r12),%rbx
	movq %rbx,-80(%r12)
	leaq -320(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-64(%r12)
	leaq -272(%r12),%rbx
	movq %rbx,-56(%r12)
	leaq -248(%r12),%rbx
	movq %rbx,-48(%r12)
	leaq -224(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq -200(%r12),%rbx
	movq %rbx,-32(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -152(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -127(%r12),%rbx
	cmpq $11,%rax
	jl _ccKch
_ccKci:
	movq $sat_scHuP_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKch:
	addq $-16,%r12
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKcf:
	movq $352,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccK0e, .-_ccK0e


==================== Asm code ====================
2018-03-16 16:07:36.861898362 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccK0e_info:
	.quad	_ccK0e
	.quad	14
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:36.863802126 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails2_closure
.type GHC.Stats.$fShowGCDetails2_closure, @object
GHC.Stats.$fShowGCDetails2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.867106836 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshow_closure
.type GHC.Stats.$fShowGCDetails_$cshow_closure, @object
GHC.Stats.$fShowGCDetails_$cshow_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.867902928 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshow_entry
.type GHC.Stats.$fShowGCDetails_$cshow_entry, @object
GHC.Stats.$fShowGCDetails_$cshow_entry:
_ccKiE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKiF
_ccKiG:
	movq %r14,%rsi
	movl $GHC.Stats.$fShowGCDetails2_closure+1,%r14d
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
_ccKiF:
	movl $GHC.Stats.$fShowGCDetails_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowGCDetails_$cshow_entry, .-GHC.Stats.$fShowGCDetails_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:36.86854196 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshow_info
.type GHC.Stats.$fShowGCDetails_$cshow_info, @object
GHC.Stats.$fShowGCDetails_$cshow_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScI2G_srt+16


==================== Asm code ====================
2018-03-16 16:07:36.870859287 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails1_closure
.type GHC.Stats.$fShowGCDetails1_closure, @object
GHC.Stats.$fShowGCDetails1_closure:
	.quad	GHC.Stats.$fShowGCDetails1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.871591667 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails1_entry
.type GHC.Stats.$fShowGCDetails1_entry, @object
GHC.Stats.$fShowGCDetails1_entry:
_ccKiQ:
	movq %r14,%rsi
	movl $GHC.Stats.$fShowGCDetails2_closure+1,%r14d
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
	.size GHC.Stats.$fShowGCDetails1_entry, .-GHC.Stats.$fShowGCDetails1_entry


==================== Asm code ====================
2018-03-16 16:07:36.872234165 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails1_info
.type GHC.Stats.$fShowGCDetails1_info, @object
GHC.Stats.$fShowGCDetails1_info:
	.quad	GHC.Stats.$fShowGCDetails1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+16


==================== Asm code ====================
2018-03-16 16:07:36.874663722 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowList_closure
.type GHC.Stats.$fShowGCDetails_$cshowList_closure, @object
GHC.Stats.$fShowGCDetails_$cshowList_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.875920961 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshowList_entry
.type GHC.Stats.$fShowGCDetails_$cshowList_entry, @object
GHC.Stats.$fShowGCDetails_$cshowList_entry:
_ccKj1:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Stats.$fShowGCDetails1_closure+1,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Stats.$fShowGCDetails_$cshowList_entry, .-GHC.Stats.$fShowGCDetails_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:36.876531907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowList_info
.type GHC.Stats.$fShowGCDetails_$cshowList_info, @object
GHC.Stats.$fShowGCDetails_$cshowList_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScI2G_srt+32


==================== Asm code ====================
2018-03-16 16:07:36.878370031 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_closure
.type GHC.Stats.$fShowGCDetails_closure, @object
GHC.Stats.$fShowGCDetails_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_closure+2
	.quad	GHC.Stats.$fShowGCDetails_$cshow_closure+1
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:36.88014382 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl16_rcHpL_bytes:
	.asciz "RTSStats {"


==================== Asm code ====================
2018-03-16 16:07:36.882188982 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_rcHpM_bytes:
	.asciz "gcs = "


==================== Asm code ====================
2018-03-16 16:07:36.883934415 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl18_rcHpN_bytes:
	.asciz "major_gcs = "


==================== Asm code ====================
2018-03-16 16:07:36.885669701 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl19_rcHpO_bytes:
	.asciz "allocated_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.887382104 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_rcHpP_bytes:
	.asciz "max_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.889097702 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_rcHpQ_bytes:
	.asciz "max_large_objects_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.890809638 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_rcHpR_bytes:
	.asciz "max_compact_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.892623776 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl23_rcHpS_bytes:
	.asciz "max_slop_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.894398317 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_rcHpT_bytes:
	.asciz "max_mem_in_use_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.896218808 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl25_rcHpU_bytes:
	.asciz "cumulative_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.898457628 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_rcHpV_bytes:
	.asciz "copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.900288001 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl27_rcHpW_bytes:
	.asciz "par_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.902634368 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl28_rcHpX_bytes:
	.asciz "cumulative_par_max_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.904270626 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl29_rcHpY_bytes:
	.asciz "cumulative_par_balanced_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:36.905948224 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_rcHpZ_bytes:
	.asciz "mutator_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.907676721 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl31_rcHq0_bytes:
	.asciz "mutator_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.909393976 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_rcHq1_bytes:
	.asciz "gc_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.91101859 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_rcHq2_bytes:
	.asciz "gc_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.91264358 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl34_rcHq3_bytes:
	.asciz "cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.914435618 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl35_rcHq4_bytes:
	.asciz "elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:36.916224051 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_rcHq5_bytes:
	.asciz "gc = "


==================== Asm code ====================
2018-03-16 16:07:37.106617501 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_closure
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_closure, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.107933871 UTC

.section .text
.align 8
w1_scHvi_entry:
_ccKjP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKjQ
_ccKjR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKjM_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKjM
_ccKjN:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKjQ:
	jmp *-16(%r13)
	.size w1_scHvi_entry, .-w1_scHvi_entry


==================== Asm code ====================
2018-03-16 16:07:37.109078382 UTC

.section .data.rel.ro
.align 8
.align 1
w1_scHvi_info:
	.quad	w1_scHvi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.11040855 UTC

.section .text
.align 8
_ccKjM:
_ccKjM:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKk1
_ccKk2:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKk1:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKjM, .-_ccKjM


==================== Asm code ====================
2018-03-16 16:07:37.112080112 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKjM_info:
	.quad	_ccKjM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.113231809 UTC

.section .text
.align 8
w2_scHvn_entry:
_ccKkb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKkc
_ccKkd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKk8_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKk8
_ccKk9:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKkc:
	jmp *-16(%r13)
	.size w2_scHvn_entry, .-w2_scHvn_entry


==================== Asm code ====================
2018-03-16 16:07:37.114399367 UTC

.section .data.rel.ro
.align 8
.align 1
w2_scHvn_info:
	.quad	w2_scHvn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.115575658 UTC

.section .text
.align 8
_ccKk8:
_ccKk8:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKkn
_ccKko:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKkn:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKk8, .-_ccKk8


==================== Asm code ====================
2018-03-16 16:07:37.116558789 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKk8_info:
	.quad	_ccKk8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.117617886 UTC

.section .text
.align 8
w3_scHvs_entry:
_ccKkx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKky
_ccKkz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKku_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKku
_ccKkv:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKky:
	jmp *-16(%r13)
	.size w3_scHvs_entry, .-w3_scHvs_entry


==================== Asm code ====================
2018-03-16 16:07:37.11829134 UTC

.section .data.rel.ro
.align 8
.align 1
w3_scHvs_info:
	.quad	w3_scHvs_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.118998685 UTC

.section .text
.align 8
_ccKku:
_ccKku:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKkJ
_ccKkK:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKkJ:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKku, .-_ccKku


==================== Asm code ====================
2018-03-16 16:07:37.11962805 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKku_info:
	.quad	_ccKku
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.120355832 UTC

.section .text
.align 8
w4_scHvx_entry:
_ccKkT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKkU
_ccKkV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKkQ_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKkQ
_ccKkR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKkU:
	jmp *-16(%r13)
	.size w4_scHvx_entry, .-w4_scHvx_entry


==================== Asm code ====================
2018-03-16 16:07:37.120976942 UTC

.section .data.rel.ro
.align 8
.align 1
w4_scHvx_info:
	.quad	w4_scHvx_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.121711624 UTC

.section .text
.align 8
_ccKkQ:
_ccKkQ:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKl5
_ccKl6:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKl5:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKkQ, .-_ccKkQ


==================== Asm code ====================
2018-03-16 16:07:37.122350949 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKkQ_info:
	.quad	_ccKkQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.123087819 UTC

.section .text
.align 8
w5_scHvC_entry:
_ccKlf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKlg
_ccKlh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKlc_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKlc
_ccKld:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKlg:
	jmp *-16(%r13)
	.size w5_scHvC_entry, .-w5_scHvC_entry


==================== Asm code ====================
2018-03-16 16:07:37.12379102 UTC

.section .data.rel.ro
.align 8
.align 1
w5_scHvC_info:
	.quad	w5_scHvC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.124464579 UTC

.section .text
.align 8
_ccKlc:
_ccKlc:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKlr
_ccKls:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKlr:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKlc, .-_ccKlc


==================== Asm code ====================
2018-03-16 16:07:37.125105206 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKlc_info:
	.quad	_ccKlc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.126008093 UTC

.section .text
.align 8
w6_scHvH_entry:
_ccKlB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKlC
_ccKlD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKly_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKly
_ccKlz:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKlC:
	jmp *-16(%r13)
	.size w6_scHvH_entry, .-w6_scHvH_entry


==================== Asm code ====================
2018-03-16 16:07:37.126649576 UTC

.section .data.rel.ro
.align 8
.align 1
w6_scHvH_info:
	.quad	w6_scHvH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.12735344 UTC

.section .text
.align 8
_ccKly:
_ccKly:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKlN
_ccKlO:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKlN:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKly, .-_ccKly


==================== Asm code ====================
2018-03-16 16:07:37.127978505 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKly_info:
	.quad	_ccKly
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.128709215 UTC

.section .text
.align 8
w7_scHvM_entry:
_ccKlX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKlY
_ccKlZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKlU_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKlU
_ccKlV:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKlY:
	jmp *-16(%r13)
	.size w7_scHvM_entry, .-w7_scHvM_entry


==================== Asm code ====================
2018-03-16 16:07:37.129385532 UTC

.section .data.rel.ro
.align 8
.align 1
w7_scHvM_info:
	.quad	w7_scHvM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.130238033 UTC

.section .text
.align 8
_ccKlU:
_ccKlU:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKm9
_ccKma:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKm9:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKlU, .-_ccKlU


==================== Asm code ====================
2018-03-16 16:07:37.130964242 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKlU_info:
	.quad	_ccKlU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.131902076 UTC

.section .text
.align 8
w8_scHvR_entry:
_ccKmj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKmk
_ccKml:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKmg_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKmg
_ccKmh:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKmk:
	jmp *-16(%r13)
	.size w8_scHvR_entry, .-w8_scHvR_entry


==================== Asm code ====================
2018-03-16 16:07:37.13261587 UTC

.section .data.rel.ro
.align 8
.align 1
w8_scHvR_info:
	.quad	w8_scHvR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.13334755 UTC

.section .text
.align 8
_ccKmg:
_ccKmg:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKmv
_ccKmw:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKmv:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKmg, .-_ccKmg


==================== Asm code ====================
2018-03-16 16:07:37.133971005 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKmg_info:
	.quad	_ccKmg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.134854325 UTC

.section .text
.align 8
w9_scHvW_entry:
_ccKmF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKmG
_ccKmH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKmC_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKmC
_ccKmD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKmG:
	jmp *-16(%r13)
	.size w9_scHvW_entry, .-w9_scHvW_entry


==================== Asm code ====================
2018-03-16 16:07:37.135570564 UTC

.section .data.rel.ro
.align 8
.align 1
w9_scHvW_info:
	.quad	w9_scHvW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.136357567 UTC

.section .text
.align 8
_ccKmC:
_ccKmC:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKmR
_ccKmS:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKmR:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKmC, .-_ccKmC


==================== Asm code ====================
2018-03-16 16:07:37.137081423 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKmC_info:
	.quad	_ccKmC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.138003098 UTC

.section .text
.align 8
w10_scHw1_entry:
_ccKn1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKn2
_ccKn3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKmY_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKmY
_ccKmZ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKn2:
	jmp *-16(%r13)
	.size w10_scHw1_entry, .-w10_scHw1_entry


==================== Asm code ====================
2018-03-16 16:07:37.138748104 UTC

.section .data.rel.ro
.align 8
.align 1
w10_scHw1_info:
	.quad	w10_scHw1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.139535389 UTC

.section .text
.align 8
_ccKmY:
_ccKmY:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKnd
_ccKne:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKnd:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKmY, .-_ccKmY


==================== Asm code ====================
2018-03-16 16:07:37.14021958 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKmY_info:
	.quad	_ccKmY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.14115081 UTC

.section .text
.align 8
w11_scHw6_entry:
_ccKnn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKno
_ccKnp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKnk_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccKnk
_ccKnl:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKno:
	jmp *-16(%r13)
	.size w11_scHw6_entry, .-w11_scHw6_entry


==================== Asm code ====================
2018-03-16 16:07:37.141931497 UTC

.section .data.rel.ro
.align 8
.align 1
w11_scHw6_info:
	.quad	w11_scHw6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.142731747 UTC

.section .text
.align 8
_ccKnk:
_ccKnk:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccKnz
_ccKnA:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_ccKnz:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
	.size _ccKnk, .-_ccKnk


==================== Asm code ====================
2018-03-16 16:07:37.144144133 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKnk_info:
	.quad	_ccKnk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.144884784 UTC

.section .text
.align 8
f_scHwb_entry:
_ccKnG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKnH
_ccKnI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Stats.$fShowGCDetails2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
_ccKnH:
	jmp *-16(%r13)
	.size f_scHwb_entry, .-f_scHwb_entry


==================== Asm code ====================
2018-03-16 16:07:37.145890349 UTC

.section .data.rel.ro
.align 8
.align 1
f_scHwb_info:
	.quad	f_scHwb_entry
	.quad	1
	.quad	4294967312
	.quad	ScI2G_srt+16


==================== Asm code ====================
2018-03-16 16:07:37.146686009 UTC

.section .text
.align 8
sat_scHww_entry:
_ccKsk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKsl
_ccKsm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $lvl15_rcHpK_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_ccKsl:
	jmp *-16(%r13)
	.size sat_scHww_entry, .-sat_scHww_entry


==================== Asm code ====================
2018-03-16 16:07:37.147366234 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHww_info:
	.quad	sat_scHww_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:37.148204783 UTC

.section .text
.align 8
sat_scHwx_entry:
_ccKsn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKso
_ccKsp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKsr
_ccKsq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_scHww_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ccKsr:
	movq $24,904(%r13)
_ccKso:
	jmp *-16(%r13)
	.size sat_scHwx_entry, .-sat_scHwx_entry


==================== Asm code ====================
2018-03-16 16:07:37.148894422 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwx_info:
	.quad	sat_scHwx_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:37.149660441 UTC

.section .text
.align 8
sat_scHwy_entry:
_ccKss:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccKsw
_ccKsv:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_scHwx_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl36_rcHq5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKsw:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_scHwy_entry, .-sat_scHwy_entry


==================== Asm code ====================
2018-03-16 16:07:37.150486484 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwy_info:
	.quad	sat_scHwy_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:37.151303859 UTC

.section .text
.align 8
sat_scHwz_entry:
_ccKsx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKsy
_ccKsz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccKsB
_ccKsA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_scHwy_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKsB:
	movq $32,904(%r13)
_ccKsy:
	jmp *-16(%r13)
	.size sat_scHwz_entry, .-sat_scHwz_entry


==================== Asm code ====================
2018-03-16 16:07:37.152044515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwz_info:
	.quad	sat_scHwz_entry
	.quad	2
	.quad	4294967314
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.152822874 UTC

.section .text
.align 8
sat_scHwD_entry:
_ccKsC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKsG
_ccKsH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKrZ_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ccKrZ
_ccKs0:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKsG:
	jmp *-16(%r13)
	.size sat_scHwD_entry, .-sat_scHwD_entry


==================== Asm code ====================
2018-03-16 16:07:37.153547673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwD_info:
	.quad	sat_scHwD_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.154299642 UTC

.section .text
.align 8
_ccKrZ:
_ccKrZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccKsK
_ccKsJ:
	movq 7(%rbx),%rax
	movq $sat_scHwz_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKsD_info,16(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKsK:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKrZ, .-_ccKrZ


==================== Asm code ====================
2018-03-16 16:07:37.154976377 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKrZ_info:
	.quad	_ccKrZ
	.quad	2
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.155739186 UTC

.section .text
.align 8
_ccKsD:
_ccKsD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKsN
_ccKsM:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKsN:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKsD, .-_ccKsD


==================== Asm code ====================
2018-03-16 16:07:37.156437911 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKsD_info:
	.quad	_ccKsD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.157913589 UTC

.section .text
.align 8
sat_scHwE_entry:
_ccKsP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccKsT
_ccKsS:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_scHwD_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $lvl35_rcHq4_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKsT:
	movq $40,904(%r13)
	jmp *-16(%r13)
	.size sat_scHwE_entry, .-sat_scHwE_entry


==================== Asm code ====================
2018-03-16 16:07:37.158789691 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwE_info:
	.quad	sat_scHwE_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.159897863 UTC

.section .text
.align 8
sat_scHwF_entry:
_ccKsU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKsV
_ccKsW:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccKsY
_ccKsX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_scHwE_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKsY:
	movq $40,904(%r13)
_ccKsV:
	jmp *-16(%r13)
	.size sat_scHwF_entry, .-sat_scHwF_entry


==================== Asm code ====================
2018-03-16 16:07:37.160720114 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwF_info:
	.quad	sat_scHwF_entry
	.quad	3
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.161596013 UTC

.section .text
.align 8
sat_scHwJ_entry:
_ccKsZ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKt3
_ccKt4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKrI_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ccKrI
_ccKrJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKt3:
	jmp *-16(%r13)
	.size sat_scHwJ_entry, .-sat_scHwJ_entry


==================== Asm code ====================
2018-03-16 16:07:37.162308125 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwJ_info:
	.quad	sat_scHwJ_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.163066163 UTC

.section .text
.align 8
_ccKrI:
_ccKrI:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccKt7
_ccKt6:
	movq 7(%rbx),%rax
	movq $sat_scHwF_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKt0_info,24(%rbp)
	leaq -32(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKt7:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKrI, .-_ccKrI


==================== Asm code ====================
2018-03-16 16:07:37.163819005 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKrI_info:
	.quad	_ccKrI
	.quad	3
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.164549136 UTC

.section .text
.align 8
_ccKt0:
_ccKt0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKta
_ccKt9:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKta:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKt0, .-_ccKt0


==================== Asm code ====================
2018-03-16 16:07:37.165176077 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKt0_info:
	.quad	_ccKt0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.165989682 UTC

.section .text
.align 8
sat_scHwK_entry:
_ccKtc:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccKtg
_ccKtf:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_scHwJ_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movl $lvl34_rcHq3_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKtg:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_scHwK_entry, .-sat_scHwK_entry


==================== Asm code ====================
2018-03-16 16:07:37.166692568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwK_info:
	.quad	sat_scHwK_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.167523243 UTC

.section .text
.align 8
sat_scHwL_entry:
_ccKth:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKti
_ccKtj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccKtl
_ccKtk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_scHwK_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKtl:
	movq $48,904(%r13)
_ccKti:
	jmp *-16(%r13)
	.size sat_scHwL_entry, .-sat_scHwL_entry


==================== Asm code ====================
2018-03-16 16:07:37.168305982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwL_info:
	.quad	sat_scHwL_entry
	.quad	4
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.169158181 UTC

.section .text
.align 8
sat_scHwP_entry:
_ccKtm:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKtq
_ccKtr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKrr_info,-56(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 16(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _ccKrr
_ccKrs:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKtq:
	jmp *-16(%r13)
	.size sat_scHwP_entry, .-sat_scHwP_entry


==================== Asm code ====================
2018-03-16 16:07:37.170003824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwP_info:
	.quad	sat_scHwP_entry
	.quad	5
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.170833098 UTC

.section .text
.align 8
_ccKrr:
_ccKrr:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccKtu
_ccKtt:
	movq 7(%rbx),%rax
	movq $sat_scHwL_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKtn_info,32(%rbp)
	leaq -40(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $32,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKtu:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKrr, .-_ccKrr


==================== Asm code ====================
2018-03-16 16:07:37.17162075 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKrr_info:
	.quad	_ccKrr
	.quad	4
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.172526517 UTC

.section .text
.align 8
_ccKtn:
_ccKtn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKtx
_ccKtw:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKtx:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKtn, .-_ccKtn


==================== Asm code ====================
2018-03-16 16:07:37.173607252 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKtn_info:
	.quad	_ccKtn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.174423333 UTC

.section .text
.align 8
sat_scHwQ_entry:
_ccKtz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKtD
_ccKtC:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_scHwP_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movl $lvl33_rcHq2_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKtD:
	movq $56,904(%r13)
	jmp *-16(%r13)
	.size sat_scHwQ_entry, .-sat_scHwQ_entry


==================== Asm code ====================
2018-03-16 16:07:37.175774407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwQ_info:
	.quad	sat_scHwQ_entry
	.quad	5
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.176666222 UTC

.section .text
.align 8
sat_scHwR_entry:
_ccKtE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKtF
_ccKtG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKtI
_ccKtH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_scHwQ_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKtI:
	movq $56,904(%r13)
_ccKtF:
	jmp *-16(%r13)
	.size sat_scHwR_entry, .-sat_scHwR_entry


==================== Asm code ====================
2018-03-16 16:07:37.177499059 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwR_info:
	.quad	sat_scHwR_entry
	.quad	5
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.178405276 UTC

.section .text
.align 8
sat_scHwV_entry:
_ccKtJ:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKtN
_ccKtO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKra_info,-64(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 16(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _ccKra
_ccKrb:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKtN:
	jmp *-16(%r13)
	.size sat_scHwV_entry, .-sat_scHwV_entry


==================== Asm code ====================
2018-03-16 16:07:37.179146375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwV_info:
	.quad	sat_scHwV_entry
	.quad	6
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.179957824 UTC

.section .text
.align 8
_ccKra:
_ccKra:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKtR
_ccKtQ:
	movq 7(%rbx),%rax
	movq $sat_scHwR_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKtK_info,40(%rbp)
	leaq -48(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $40,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKtR:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKra, .-_ccKra


==================== Asm code ====================
2018-03-16 16:07:37.180693377 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKra_info:
	.quad	_ccKra
	.quad	5
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.18155791 UTC

.section .text
.align 8
_ccKtK:
_ccKtK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKtU
_ccKtT:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKtU:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKtK, .-_ccKtK


==================== Asm code ====================
2018-03-16 16:07:37.182237475 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKtK_info:
	.quad	_ccKtK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.182984364 UTC

.section .text
.align 8
sat_scHwW_entry:
_ccKtW:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccKu0
_ccKtZ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_scHwV_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movl $lvl32_rcHq1_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKu0:
	movq $64,904(%r13)
	jmp *-16(%r13)
	.size sat_scHwW_entry, .-sat_scHwW_entry


==================== Asm code ====================
2018-03-16 16:07:37.18371879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwW_info:
	.quad	sat_scHwW_entry
	.quad	6
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.184551881 UTC

.section .text
.align 8
sat_scHwX_entry:
_ccKu1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKu2
_ccKu3:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccKu5
_ccKu4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_scHwW_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKu5:
	movq $64,904(%r13)
_ccKu2:
	jmp *-16(%r13)
	.size sat_scHwX_entry, .-sat_scHwX_entry


==================== Asm code ====================
2018-03-16 16:07:37.185371954 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHwX_info:
	.quad	sat_scHwX_entry
	.quad	6
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.186219972 UTC

.section .text
.align 8
sat_scHx1_entry:
_ccKu6:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKua
_ccKub:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKqT_info,-72(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 16(%rbx),%rbx
	movq %rax,-64(%rbp)
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _ccKqT
_ccKqU:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKua:
	jmp *-16(%r13)
	.size sat_scHx1_entry, .-sat_scHx1_entry


==================== Asm code ====================
2018-03-16 16:07:37.186986092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx1_info:
	.quad	sat_scHx1_entry
	.quad	7
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.187796665 UTC

.section .text
.align 8
_ccKqT:
_ccKqT:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccKue
_ccKud:
	movq 7(%rbx),%rax
	movq $sat_scHwX_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKu7_info,48(%rbp)
	leaq -56(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $48,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKue:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKqT, .-_ccKqT


==================== Asm code ====================
2018-03-16 16:07:37.188543809 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKqT_info:
	.quad	_ccKqT
	.quad	6
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.189342251 UTC

.section .text
.align 8
_ccKu7:
_ccKu7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKuh
_ccKug:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKuh:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKu7, .-_ccKu7


==================== Asm code ====================
2018-03-16 16:07:37.190028501 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKu7_info:
	.quad	_ccKu7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.190818767 UTC

.section .text
.align 8
sat_scHx2_entry:
_ccKuj:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccKun
_ccKum:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	movq $sat_scHx1_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movl $lvl31_rcHq0_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKun:
	movq $72,904(%r13)
	jmp *-16(%r13)
	.size sat_scHx2_entry, .-sat_scHx2_entry


==================== Asm code ====================
2018-03-16 16:07:37.191536108 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx2_info:
	.quad	sat_scHx2_entry
	.quad	7
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.192359621 UTC

.section .text
.align 8
sat_scHx3_entry:
_ccKuo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKup
_ccKuq:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccKus
_ccKur:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	movq $sat_scHx2_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKus:
	movq $72,904(%r13)
_ccKup:
	jmp *-16(%r13)
	.size sat_scHx3_entry, .-sat_scHx3_entry


==================== Asm code ====================
2018-03-16 16:07:37.193152215 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx3_info:
	.quad	sat_scHx3_entry
	.quad	7
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.19440916 UTC

.section .text
.align 8
sat_scHx7_entry:
_ccKut:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKux
_ccKuy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKqC_info,-80(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 16(%rbx),%rbx
	movq %rax,-72(%rbp)
	movq %rcx,-64(%rbp)
	movq %rdx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %rdi,-40(%rbp)
	movq %r8,-32(%rbp)
	movq %r9,-24(%rbp)
	addq $-80,%rbp
	testb $7,%bl
	jne _ccKqC
_ccKqD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKux:
	jmp *-16(%r13)
	.size sat_scHx7_entry, .-sat_scHx7_entry


==================== Asm code ====================
2018-03-16 16:07:37.195127453 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx7_info:
	.quad	sat_scHx7_entry
	.quad	8
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.195904643 UTC

.section .text
.align 8
_ccKqC:
_ccKqC:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccKuB
_ccKuA:
	movq 7(%rbx),%rax
	movq $sat_scHx3_info,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKuu_info,56(%rbp)
	leaq -64(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $56,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_ccKuB:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKqC, .-_ccKqC


==================== Asm code ====================
2018-03-16 16:07:37.196662147 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKqC_info:
	.quad	_ccKqC
	.quad	7
	.quad	4294967326
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.197398212 UTC

.section .text
.align 8
_ccKuu:
_ccKuu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKuE
_ccKuD:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKuE:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKuu, .-_ccKuu


==================== Asm code ====================
2018-03-16 16:07:37.198051535 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKuu_info:
	.quad	_ccKuu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.198867763 UTC

.section .text
.align 8
sat_scHx8_entry:
_ccKuG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccKuK
_ccKuJ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	movq $sat_scHx7_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movl $lvl30_rcHpZ_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKuK:
	movq $80,904(%r13)
	jmp *-16(%r13)
	.size sat_scHx8_entry, .-sat_scHx8_entry


==================== Asm code ====================
2018-03-16 16:07:37.199648188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx8_info:
	.quad	sat_scHx8_entry
	.quad	8
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.20055369 UTC

.section .text
.align 8
sat_scHx9_entry:
_ccKuL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKuM
_ccKuN:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccKuP
_ccKuO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	movq $sat_scHx8_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKuP:
	movq $80,904(%r13)
_ccKuM:
	jmp *-16(%r13)
	.size sat_scHx9_entry, .-sat_scHx9_entry


==================== Asm code ====================
2018-03-16 16:07:37.201430201 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHx9_info:
	.quad	sat_scHx9_entry
	.quad	8
	.quad	4294967311
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.202362208 UTC

.section .text
.align 8
sat_scHxd_entry:
_ccKuT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKuU
_ccKuV:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccKuX
_ccKuW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHx9_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKuQ_info,-24(%rbp)
	leaq -72(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKuX:
	movq $80,904(%r13)
_ccKuU:
	jmp *-16(%r13)
	.size sat_scHxd_entry, .-sat_scHxd_entry


==================== Asm code ====================
2018-03-16 16:07:37.203174803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxd_info:
	.quad	sat_scHxd_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.203977697 UTC

.section .text
.align 8
_ccKuQ:
_ccKuQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKv0
_ccKuZ:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKv0:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKuQ, .-_ccKuQ


==================== Asm code ====================
2018-03-16 16:07:37.205199593 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKuQ_info:
	.quad	_ccKuQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.206489956 UTC

.section .text
.align 8
sat_scHxe_entry:
_ccKv1:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccKv5
_ccKv4:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHxd_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movl $lvl29_rcHpY_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKv5:
	movq $88,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxe_entry, .-sat_scHxe_entry


==================== Asm code ====================
2018-03-16 16:07:37.207216133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxe_info:
	.quad	sat_scHxe_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.208097663 UTC

.section .text
.align 8
sat_scHxf_entry:
_ccKv6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKv7
_ccKv8:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccKva
_ccKv9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	movq $sat_scHxe_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKva:
	movq $88,904(%r13)
_ccKv7:
	jmp *-16(%r13)
	.size sat_scHxf_entry, .-sat_scHxf_entry


==================== Asm code ====================
2018-03-16 16:07:37.208894245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxf_info:
	.quad	sat_scHxf_entry
	.quad	9
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.20978574 UTC

.section .text
.align 8
sat_scHxj_entry:
_ccKve:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKvf
_ccKvg:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccKvi
_ccKvh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHxf_info,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKvb_info,-24(%rbp)
	leaq -80(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKvi:
	movq $88,904(%r13)
_ccKvf:
	jmp *-16(%r13)
	.size sat_scHxj_entry, .-sat_scHxj_entry


==================== Asm code ====================
2018-03-16 16:07:37.210568763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxj_info:
	.quad	sat_scHxj_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.211336786 UTC

.section .text
.align 8
_ccKvb:
_ccKvb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKvl
_ccKvk:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKvl:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKvb, .-_ccKvb


==================== Asm code ====================
2018-03-16 16:07:37.211990632 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKvb_info:
	.quad	_ccKvb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.212795474 UTC

.section .text
.align 8
sat_scHxk_entry:
_ccKvm:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKvq
_ccKvp:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHxj_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movl $lvl28_rcHpX_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKvq:
	movq $96,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxk_entry, .-sat_scHxk_entry


==================== Asm code ====================
2018-03-16 16:07:37.213595378 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxk_info:
	.quad	sat_scHxk_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.214458544 UTC

.section .text
.align 8
sat_scHxl_entry:
_ccKvr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKvs
_ccKvt:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKvv
_ccKvu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	movq $sat_scHxk_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKvv:
	movq $96,904(%r13)
_ccKvs:
	jmp *-16(%r13)
	.size sat_scHxl_entry, .-sat_scHxl_entry


==================== Asm code ====================
2018-03-16 16:07:37.215264176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxl_info:
	.quad	sat_scHxl_entry
	.quad	10
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.216100647 UTC

.section .text
.align 8
sat_scHxp_entry:
_ccKvz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKvA
_ccKvB:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKvD
_ccKvC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHxl_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKvw_info,-24(%rbp)
	leaq -88(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKvD:
	movq $96,904(%r13)
_ccKvA:
	jmp *-16(%r13)
	.size sat_scHxp_entry, .-sat_scHxp_entry


==================== Asm code ====================
2018-03-16 16:07:37.216951904 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxp_info:
	.quad	sat_scHxp_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.217985524 UTC

.section .text
.align 8
_ccKvw:
_ccKvw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKvG
_ccKvF:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKvG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKvw, .-_ccKvw


==================== Asm code ====================
2018-03-16 16:07:37.218619017 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKvw_info:
	.quad	_ccKvw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.219473309 UTC

.section .text
.align 8
sat_scHxq_entry:
_ccKvH:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKvL
_ccKvK:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHxp_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movl $lvl27_rcHpW_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKvL:
	movq $104,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxq_entry, .-sat_scHxq_entry


==================== Asm code ====================
2018-03-16 16:07:37.220285706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxq_info:
	.quad	sat_scHxq_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.221197254 UTC

.section .text
.align 8
sat_scHxr_entry:
_ccKvM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKvN
_ccKvO:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKvQ
_ccKvP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq $sat_scHxq_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKvQ:
	movq $104,904(%r13)
_ccKvN:
	jmp *-16(%r13)
	.size sat_scHxr_entry, .-sat_scHxr_entry


==================== Asm code ====================
2018-03-16 16:07:37.222188661 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxr_info:
	.quad	sat_scHxr_entry
	.quad	11
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.223240915 UTC

.section .text
.align 8
sat_scHxv_entry:
_ccKvU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKvV
_ccKvW:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKvY
_ccKvX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHxr_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKvR_info,-24(%rbp)
	leaq -96(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKvY:
	movq $104,904(%r13)
_ccKvV:
	jmp *-16(%r13)
	.size sat_scHxv_entry, .-sat_scHxv_entry


==================== Asm code ====================
2018-03-16 16:07:37.224129553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxv_info:
	.quad	sat_scHxv_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.22490238 UTC

.section .text
.align 8
_ccKvR:
_ccKvR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKw1
_ccKw0:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKw1:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKvR, .-_ccKvR


==================== Asm code ====================
2018-03-16 16:07:37.225702718 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKvR_info:
	.quad	_ccKvR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.226567354 UTC

.section .text
.align 8
sat_scHxw_entry:
_ccKw2:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKw6
_ccKw5:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHxv_info,-104(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movl $lvl26_rcHpV_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKw6:
	movq $112,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxw_entry, .-sat_scHxw_entry


==================== Asm code ====================
2018-03-16 16:07:37.227404641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxw_info:
	.quad	sat_scHxw_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.228412582 UTC

.section .text
.align 8
sat_scHxx_entry:
_ccKw7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKw8
_ccKw9:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKwb
_ccKwa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq $sat_scHxw_info,-104(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKwb:
	movq $112,904(%r13)
_ccKw8:
	jmp *-16(%r13)
	.size sat_scHxx_entry, .-sat_scHxx_entry


==================== Asm code ====================
2018-03-16 16:07:37.229405102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxx_info:
	.quad	sat_scHxx_entry
	.quad	12
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.230477 UTC

.section .text
.align 8
sat_scHxB_entry:
_ccKwf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKwg
_ccKwh:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKwj
_ccKwi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHxx_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKwc_info,-24(%rbp)
	leaq -104(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKwj:
	movq $112,904(%r13)
_ccKwg:
	jmp *-16(%r13)
	.size sat_scHxB_entry, .-sat_scHxB_entry


==================== Asm code ====================
2018-03-16 16:07:37.23140584 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxB_info:
	.quad	sat_scHxB_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.232139857 UTC

.section .text
.align 8
_ccKwc:
_ccKwc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKwm
_ccKwl:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKwm:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKwc, .-_ccKwc


==================== Asm code ====================
2018-03-16 16:07:37.232809353 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKwc_info:
	.quad	_ccKwc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.234120558 UTC

.section .text
.align 8
sat_scHxC_entry:
_ccKwn:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKwr
_ccKwq:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHxB_info,-112(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movl $lvl25_rcHpU_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKwr:
	movq $120,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxC_entry, .-sat_scHxC_entry


==================== Asm code ====================
2018-03-16 16:07:37.23555722 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxC_info:
	.quad	sat_scHxC_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.236543232 UTC

.section .text
.align 8
sat_scHxD_entry:
_ccKws:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKwt
_ccKwu:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKww
_ccKwv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq $sat_scHxC_info,-112(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKww:
	movq $120,904(%r13)
_ccKwt:
	jmp *-16(%r13)
	.size sat_scHxD_entry, .-sat_scHxD_entry


==================== Asm code ====================
2018-03-16 16:07:37.237423717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxD_info:
	.quad	sat_scHxD_entry
	.quad	13
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.238385624 UTC

.section .text
.align 8
sat_scHxH_entry:
_ccKwA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKwB
_ccKwC:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKwE
_ccKwD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq $sat_scHxD_info,-112(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKwx_info,-24(%rbp)
	leaq -112(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKwE:
	movq $120,904(%r13)
_ccKwB:
	jmp *-16(%r13)
	.size sat_scHxH_entry, .-sat_scHxH_entry


==================== Asm code ====================
2018-03-16 16:07:37.239282292 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxH_info:
	.quad	sat_scHxH_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.240005738 UTC

.section .text
.align 8
_ccKwx:
_ccKwx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKwH
_ccKwG:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKwH:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKwx, .-_ccKwx


==================== Asm code ====================
2018-03-16 16:07:37.240631147 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKwx_info:
	.quad	_ccKwx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.241572885 UTC

.section .text
.align 8
sat_scHxI_entry:
_ccKwI:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKwM
_ccKwL:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq $sat_scHxH_info,-120(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movl $lvl24_rcHpT_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKwM:
	movq $128,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxI_entry, .-sat_scHxI_entry


==================== Asm code ====================
2018-03-16 16:07:37.242355745 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxI_info:
	.quad	sat_scHxI_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.243273976 UTC

.section .text
.align 8
sat_scHxJ_entry:
_ccKwN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKwO
_ccKwP:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKwR
_ccKwQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq $sat_scHxI_info,-120(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKwR:
	movq $128,904(%r13)
_ccKwO:
	jmp *-16(%r13)
	.size sat_scHxJ_entry, .-sat_scHxJ_entry


==================== Asm code ====================
2018-03-16 16:07:37.244151824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxJ_info:
	.quad	sat_scHxJ_entry
	.quad	14
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.24510183 UTC

.section .text
.align 8
sat_scHxN_entry:
_ccKwV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKwW
_ccKwX:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKwZ
_ccKwY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq $sat_scHxJ_info,-120(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKwS_info,-24(%rbp)
	leaq -120(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKwZ:
	movq $128,904(%r13)
_ccKwW:
	jmp *-16(%r13)
	.size sat_scHxN_entry, .-sat_scHxN_entry


==================== Asm code ====================
2018-03-16 16:07:37.246056942 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxN_info:
	.quad	sat_scHxN_entry
	.quad	15
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.246811518 UTC

.section .text
.align 8
_ccKwS:
_ccKwS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKx2
_ccKx1:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKx2:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKwS, .-_ccKwS


==================== Asm code ====================
2018-03-16 16:07:37.247429833 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKwS_info:
	.quad	_ccKwS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.248272396 UTC

.section .text
.align 8
sat_scHxO_entry:
_ccKx3:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccKx7
_ccKx6:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq $sat_scHxN_info,-128(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	movl $lvl23_rcHpS_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKx7:
	movq $136,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxO_entry, .-sat_scHxO_entry


==================== Asm code ====================
2018-03-16 16:07:37.249154688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxO_info:
	.quad	sat_scHxO_entry
	.quad	15
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.250148315 UTC

.section .text
.align 8
sat_scHxP_entry:
_ccKx8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKx9
_ccKxa:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccKxc
_ccKxb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq $sat_scHxO_info,-128(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKxc:
	movq $136,904(%r13)
_ccKx9:
	jmp *-16(%r13)
	.size sat_scHxP_entry, .-sat_scHxP_entry


==================== Asm code ====================
2018-03-16 16:07:37.251062366 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxP_info:
	.quad	sat_scHxP_entry
	.quad	15
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.252017782 UTC

.section .text
.align 8
sat_scHxT_entry:
_ccKxg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKxh
_ccKxi:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccKxk
_ccKxj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq $sat_scHxP_info,-128(%r12)
	movq %r8,104(%rsp)
	movq 64(%rsp),%r8
	movq %r8,-112(%r12)
	movq 72(%rsp),%r8
	movq %r8,-104(%r12)
	movq 80(%rsp),%r8
	movq %r8,-96(%r12)
	movq 88(%rsp),%r8
	movq %r8,-88(%r12)
	movq 96(%rsp),%r8
	movq %r8,-80(%r12)
	movq 104(%rsp),%r8
	movq %r8,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKxd_info,-24(%rbp)
	leaq -128(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKxk:
	movq $136,904(%r13)
_ccKxh:
	jmp *-16(%r13)
	.size sat_scHxT_entry, .-sat_scHxT_entry


==================== Asm code ====================
2018-03-16 16:07:37.252964755 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxT_info:
	.quad	sat_scHxT_entry
	.quad	16
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.254130751 UTC

.section .text
.align 8
_ccKxd:
_ccKxd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKxn
_ccKxm:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKxn:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKxd, .-_ccKxd


==================== Asm code ====================
2018-03-16 16:07:37.254806655 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKxd_info:
	.quad	_ccKxd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.255681796 UTC

.section .text
.align 8
sat_scHxU_entry:
_ccKxo:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccKxs
_ccKxr:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq $sat_scHxT_info,-136(%r12)
	movq %r8,104(%rsp)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -136(%r12),%rsi
	movl $lvl22_rcHpR_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKxs:
	movq $144,904(%r13)
	jmp *-16(%r13)
	.size sat_scHxU_entry, .-sat_scHxU_entry


==================== Asm code ====================
2018-03-16 16:07:37.256556389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxU_info:
	.quad	sat_scHxU_entry
	.quad	16
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.25766423 UTC

.section .text
.align 8
sat_scHxV_entry:
_ccKxt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKxu
_ccKxv:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccKxx
_ccKxw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq $sat_scHxU_info,-136(%r12)
	movq %r8,104(%rsp)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -136(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKxx:
	movq $144,904(%r13)
_ccKxu:
	jmp *-16(%r13)
	.size sat_scHxV_entry, .-sat_scHxV_entry


==================== Asm code ====================
2018-03-16 16:07:37.258591945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxV_info:
	.quad	sat_scHxV_entry
	.quad	16
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.259682681 UTC

.section .text
.align 8
sat_scHxZ_entry:
_ccKxB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKxC
_ccKxD:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccKxF
_ccKxE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq $sat_scHxV_info,-136(%r12)
	movq %r9,112(%rsp)
	movq 64(%rsp),%r9
	movq %r9,-120(%r12)
	movq 72(%rsp),%r9
	movq %r9,-112(%r12)
	movq 80(%rsp),%r9
	movq %r9,-104(%r12)
	movq 88(%rsp),%r9
	movq %r9,-96(%r12)
	movq 96(%rsp),%r9
	movq %r9,-88(%r12)
	movq 104(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKxy_info,-24(%rbp)
	leaq -136(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKxF:
	movq $144,904(%r13)
_ccKxC:
	jmp *-16(%r13)
	.size sat_scHxZ_entry, .-sat_scHxZ_entry


==================== Asm code ====================
2018-03-16 16:07:37.260778382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHxZ_info:
	.quad	sat_scHxZ_entry
	.quad	17
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.261603959 UTC

.section .text
.align 8
_ccKxy:
_ccKxy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKxI
_ccKxH:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKxI:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKxy, .-_ccKxy


==================== Asm code ====================
2018-03-16 16:07:37.262326429 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKxy_info:
	.quad	_ccKxy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.263329405 UTC

.section .text
.align 8
sat_scHy0_entry:
_ccKxJ:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccKxN
_ccKxM:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq $sat_scHxZ_info,-144(%r12)
	movq %r9,112(%rsp)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -144(%r12),%rsi
	movl $lvl21_rcHpQ_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKxN:
	movq $152,904(%r13)
	jmp *-16(%r13)
	.size sat_scHy0_entry, .-sat_scHy0_entry


==================== Asm code ====================
2018-03-16 16:07:37.26429351 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHy0_info:
	.quad	sat_scHy0_entry
	.quad	17
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.265806903 UTC

.section .text
.align 8
sat_scHy1_entry:
_ccKxO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKxP
_ccKxQ:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccKxS
_ccKxR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq $sat_scHy0_info,-144(%r12)
	movq %r9,112(%rsp)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -144(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKxS:
	movq $152,904(%r13)
_ccKxP:
	jmp *-16(%r13)
	.size sat_scHy1_entry, .-sat_scHy1_entry


==================== Asm code ====================
2018-03-16 16:07:37.266770953 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHy1_info:
	.quad	sat_scHy1_entry
	.quad	17
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.267784292 UTC

.section .text
.align 8
sat_scHy5_entry:
_ccKxW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKxX
_ccKxY:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccKy0
_ccKxZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq $sat_scHy1_info,-144(%r12)
	movq %r10,120(%rsp)
	movq 64(%rsp),%r10
	movq %r10,-128(%r12)
	movq 72(%rsp),%r10
	movq %r10,-120(%r12)
	movq 80(%rsp),%r10
	movq %r10,-112(%r12)
	movq 88(%rsp),%r10
	movq %r10,-104(%r12)
	movq 96(%rsp),%r10
	movq %r10,-96(%r12)
	movq 104(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKxT_info,-24(%rbp)
	leaq -144(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKy0:
	movq $152,904(%r13)
_ccKxX:
	jmp *-16(%r13)
	.size sat_scHy5_entry, .-sat_scHy5_entry


==================== Asm code ====================
2018-03-16 16:07:37.268740912 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHy5_info:
	.quad	sat_scHy5_entry
	.quad	18
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.269939457 UTC

.section .text
.align 8
_ccKxT:
_ccKxT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKy3
_ccKy2:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKy3:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKxT, .-_ccKxT


==================== Asm code ====================
2018-03-16 16:07:37.270565089 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKxT_info:
	.quad	_ccKxT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.271479798 UTC

.section .text
.align 8
sat_scHy6_entry:
_ccKy4:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccKy8
_ccKy7:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq $sat_scHy5_info,-152(%r12)
	movq %r10,120(%rsp)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rsi
	movl $lvl20_rcHpP_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKy8:
	movq $160,904(%r13)
	jmp *-16(%r13)
	.size sat_scHy6_entry, .-sat_scHy6_entry


==================== Asm code ====================
2018-03-16 16:07:37.272444188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHy6_info:
	.quad	sat_scHy6_entry
	.quad	18
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.273486327 UTC

.section .text
.align 8
sat_scHy7_entry:
_ccKy9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKya
_ccKyb:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccKyd
_ccKyc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq $sat_scHy6_info,-152(%r12)
	movq %r10,120(%rsp)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKyd:
	movq $160,904(%r13)
_ccKya:
	jmp *-16(%r13)
	.size sat_scHy7_entry, .-sat_scHy7_entry


==================== Asm code ====================
2018-03-16 16:07:37.274491892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHy7_info:
	.quad	sat_scHy7_entry
	.quad	18
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.275600654 UTC

.section .text
.align 8
sat_scHyb_entry:
_ccKyh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKyi
_ccKyj:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccKyl
_ccKyk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq $sat_scHy7_info,-152(%r12)
	movq %r11,128(%rsp)
	movq 64(%rsp),%r11
	movq %r11,-136(%r12)
	movq 72(%rsp),%r11
	movq %r11,-128(%r12)
	movq 80(%rsp),%r11
	movq %r11,-120(%r12)
	movq 88(%rsp),%r11
	movq %r11,-112(%r12)
	movq 96(%rsp),%r11
	movq %r11,-104(%r12)
	movq 104(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	movq $block_ccKye_info,-24(%rbp)
	leaq -152(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_ccKyl:
	movq $160,904(%r13)
_ccKyi:
	jmp *-16(%r13)
	.size sat_scHyb_entry, .-sat_scHyb_entry


==================== Asm code ====================
2018-03-16 16:07:37.276634582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyb_info:
	.quad	sat_scHyb_entry
	.quad	19
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.277451193 UTC

.section .text
.align 8
_ccKye:
_ccKye:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKyo
_ccKyn:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKyo:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKye, .-_ccKye


==================== Asm code ====================
2018-03-16 16:07:37.278142599 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKye_info:
	.quad	_ccKye
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.279115754 UTC

.section .text
.align 8
sat_scHyc_entry:
_ccKyp:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccKyt
_ccKys:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq $sat_scHyb_info,-160(%r12)
	movq %r11,128(%rsp)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -160(%r12),%rsi
	movl $lvl19_rcHpO_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKyt:
	movq $168,904(%r13)
	jmp *-16(%r13)
	.size sat_scHyc_entry, .-sat_scHyc_entry


==================== Asm code ====================
2018-03-16 16:07:37.28012266 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyc_info:
	.quad	sat_scHyc_entry
	.quad	19
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.281179435 UTC

.section .text
.align 8
sat_scHyd_entry:
_ccKyu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKyv
_ccKyw:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccKyy
_ccKyx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq $sat_scHyc_info,-160(%r12)
	movq %r11,128(%rsp)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -160(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKyy:
	movq $168,904(%r13)
_ccKyv:
	jmp *-16(%r13)
	.size sat_scHyd_entry, .-sat_scHyd_entry


==================== Asm code ====================
2018-03-16 16:07:37.282593209 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyd_info:
	.quad	sat_scHyd_entry
	.quad	19
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.283638718 UTC

.section .text
.align 8
sat_scHyh_entry:
_ccKyz:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKyG
_ccKyH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKod_info,-176(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 136(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 144(%rbx),%r8
	movq %r9,112(%rsp)
	movq 152(%rbx),%r9
	movq %r10,120(%rsp)
	movq 160(%rbx),%r10
	movq %r11,128(%rsp)
	movq 168(%rbx),%r11
	movq 16(%rbx),%rbx
	movq %r14,136(%rsp)
	movq 64(%rsp),%r14
	movq %r14,-168(%rbp)
	movq 72(%rsp),%r14
	movq %r14,-160(%rbp)
	movq 80(%rsp),%r14
	movq %r14,-152(%rbp)
	movq 88(%rsp),%r14
	movq %r14,-144(%rbp)
	movq 96(%rsp),%r14
	movq %r14,-136(%rbp)
	movq 104(%rsp),%r14
	movq %r14,-128(%rbp)
	movq 112(%rsp),%r14
	movq %r14,-120(%rbp)
	movq 120(%rsp),%r14
	movq %r14,-112(%rbp)
	movq 128(%rsp),%r14
	movq %r14,-104(%rbp)
	movq 136(%rsp),%r14
	movq %r14,-96(%rbp)
	movq %rax,-88(%rbp)
	movq %rcx,-80(%rbp)
	movq %rdx,-72(%rbp)
	movq %rsi,-64(%rbp)
	movq %rdi,-56(%rbp)
	movq %r8,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %r11,-24(%rbp)
	addq $-176,%rbp
	testb $7,%bl
	jne _ccKod
_ccKoe:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKyG:
	jmp *-16(%r13)
	.size sat_scHyh_entry, .-sat_scHyh_entry


==================== Asm code ====================
2018-03-16 16:07:37.284641742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyh_info:
	.quad	sat_scHyh_entry
	.quad	20
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.285622209 UTC

.section .text
.align 8
_ccKod:
_ccKod:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccKyK
_ccKyJ:
	movq 7(%rbx),%rax
	movq $sat_scHyd_info,-160(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKyD_info,152(%rbp)
	leaq -160(%r12),%rsi
	movq %rax,%r14
	addq $152,%rbp
	jmp GHC.Show.$witos_entry
_ccKyK:
	movq $168,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKod, .-_ccKod


==================== Asm code ====================
2018-03-16 16:07:37.286490255 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKod_info:
	.quad	_ccKod
	.quad	19
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.287289956 UTC

.section .text
.align 8
_ccKyD:
_ccKyD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKyN
_ccKyM:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKyN:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKyD, .-_ccKyD


==================== Asm code ====================
2018-03-16 16:07:37.287987334 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKyD_info:
	.quad	_ccKyD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.289088377 UTC

.section .text
.align 8
sat_scHyi_entry:
_ccKyP:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccKyT
_ccKyS:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq 168(%rbx),%rbx
	movq $sat_scHyh_info,-168(%r12)
	movq %r14,136(%rsp)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -168(%r12),%rsi
	movl $lvl18_rcHpN_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKyT:
	movq $176,904(%r13)
	jmp *-16(%r13)
	.size sat_scHyi_entry, .-sat_scHyi_entry


==================== Asm code ====================
2018-03-16 16:07:37.290210924 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyi_info:
	.quad	sat_scHyi_entry
	.quad	20
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.291320734 UTC

.section .text
.align 8
sat_scHyj_entry:
_ccKyU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKyV
_ccKyW:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccKyY
_ccKyX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq 168(%rbx),%rbx
	movq $sat_scHyi_info,-168(%r12)
	movq %r14,136(%rsp)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -168(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ccKyY:
	movq $176,904(%r13)
_ccKyV:
	jmp *-16(%r13)
	.size sat_scHyj_entry, .-sat_scHyj_entry


==================== Asm code ====================
2018-03-16 16:07:37.292482909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyj_info:
	.quad	sat_scHyj_entry
	.quad	20
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.293663801 UTC

.section .text
.align 8
sat_scHyn_entry:
_ccKyZ:
	leaq -184(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKz6
_ccKz7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccKnW_info,-184(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 136(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 144(%rbx),%r8
	movq %r9,112(%rsp)
	movq 152(%rbx),%r9
	movq %r10,120(%rsp)
	movq 160(%rbx),%r10
	movq %r11,128(%rsp)
	movq 168(%rbx),%r11
	movq %r14,136(%rsp)
	movq 176(%rbx),%r14
	movq 16(%rbx),%rbx
	movq %rax,144(%rsp)
	movq 64(%rsp),%rax
	movq %rax,-176(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-168(%rbp)
	movq 80(%rsp),%rax
	movq %rax,-160(%rbp)
	movq 88(%rsp),%rax
	movq %rax,-152(%rbp)
	movq 96(%rsp),%rax
	movq %rax,-144(%rbp)
	movq 104(%rsp),%rax
	movq %rax,-136(%rbp)
	movq 112(%rsp),%rax
	movq %rax,-128(%rbp)
	movq 120(%rsp),%rax
	movq %rax,-120(%rbp)
	movq 128(%rsp),%rax
	movq %rax,-112(%rbp)
	movq 136(%rsp),%rax
	movq %rax,-104(%rbp)
	movq 144(%rsp),%rax
	movq %rax,-96(%rbp)
	movq %rcx,-88(%rbp)
	movq %rdx,-80(%rbp)
	movq %rsi,-72(%rbp)
	movq %rdi,-64(%rbp)
	movq %r8,-56(%rbp)
	movq %r9,-48(%rbp)
	movq %r10,-40(%rbp)
	movq %r11,-32(%rbp)
	movq %r14,-24(%rbp)
	addq $-184,%rbp
	testb $7,%bl
	jne _ccKnW
_ccKnX:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKz6:
	jmp *-16(%r13)
	.size sat_scHyn_entry, .-sat_scHyn_entry


==================== Asm code ====================
2018-03-16 16:07:37.295349594 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyn_info:
	.quad	sat_scHyn_entry
	.quad	21
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.296293102 UTC

.section .text
.align 8
_ccKnW:
_ccKnW:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccKza
_ccKz9:
	movq 7(%rbx),%rax
	movq $sat_scHyj_info,-168(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-152(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 160(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_ccKz3_info,160(%rbp)
	leaq -168(%r12),%rsi
	movq %rax,%r14
	addq $160,%rbp
	jmp GHC.Show.$witos_entry
_ccKza:
	movq $176,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKnW, .-_ccKnW


==================== Asm code ====================
2018-03-16 16:07:37.29714409 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKnW_info:
	.quad	_ccKnW
	.quad	20
	.quad	12884901918
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.298371868 UTC

.section .text
.align 8
_ccKz3:
_ccKz3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKzd
_ccKzc:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKzd:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccKz3, .-_ccKz3


==================== Asm code ====================
2018-03-16 16:07:37.299120785 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKz3_info:
	.quad	_ccKz3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.300308769 UTC

.section .text
.align 8
sat_scHyo_entry:
_ccKzf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKzg
_ccKzh:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _ccKzj
_ccKzi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq %r14,136(%rsp)
	movq 168(%rbx),%r14
	movq 176(%rbx),%rbx
	movq $sat_scHyn_info,-176(%r12)
	movq %rax,144(%rsp)
	movq 64(%rsp),%rax
	movq %rax,-160(%r12)
	movq 72(%rsp),%rax
	movq %rax,-152(%r12)
	movq 80(%rsp),%rax
	movq %rax,-144(%r12)
	movq 88(%rsp),%rax
	movq %rax,-136(%r12)
	movq 96(%rsp),%rax
	movq %rax,-128(%r12)
	movq 104(%rsp),%rax
	movq %rax,-120(%r12)
	movq 112(%rsp),%rax
	movq %rax,-112(%r12)
	movq 120(%rsp),%rax
	movq %rax,-104(%r12)
	movq 128(%rsp),%rax
	movq %rax,-96(%r12)
	movq 136(%rsp),%rax
	movq %rax,-88(%r12)
	movq 144(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -176(%r12),%rsi
	movl $lvl17_rcHpM_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_ccKzj:
	movq $184,904(%r13)
_ccKzg:
	jmp *-16(%r13)
	.size sat_scHyo_entry, .-sat_scHyo_entry


==================== Asm code ====================
2018-03-16 16:07:37.301413566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyo_info:
	.quad	sat_scHyo_entry
	.quad	21
	.quad	12884901903
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.302449759 UTC

.section .text
.align 8
p_scHwc_entry:
_ccKzk:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _ccKzo
_ccKzn:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq %rax,136(%rsp)
	movq 151(%rbx),%rax
	movq 159(%rbx),%rbx
	movq $sat_scHyo_info,-176(%r12)
	movq %rcx,144(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-160(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-152(%r12)
	movq 80(%rsp),%rcx
	movq %rcx,-144(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-136(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-128(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-120(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-112(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-104(%r12)
	movq 128(%rsp),%rcx
	movq %rcx,-96(%r12)
	movq 136(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -176(%r12),%rsi
	movl $lvl16_rcHpL_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_ccKzo:
	movq $184,904(%r13)
	jmp *-8(%r13)
	.size p_scHwc_entry, .-p_scHwc_entry


==================== Asm code ====================
2018-03-16 16:07:37.303532999 UTC

.section .data.rel.ro
.align 8
.align 1
p_scHwc_info:
	.quad	p_scHwc_entry
	.quad	20
	.quad	12884901896
	.quad	4294967301
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.30442422 UTC

.section .text
.align 8
sat_scHys_entry:
_ccKzD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKzE
_ccKzF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKzH
_ccKzG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp p_scHwc_entry
_ccKzH:
	movq $24,904(%r13)
_ccKzE:
	jmp *-16(%r13)
	.size sat_scHys_entry, .-sat_scHys_entry


==================== Asm code ====================
2018-03-16 16:07:37.305194711 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHys_info:
	.quad	sat_scHys_entry
	.quad	2
	.quad	12884901906
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.306037732 UTC

.section .text
.align 8
sat_scHyt_entry:
_ccKzJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKzN
_ccKzM:
	movq 7(%rbx),%rax
	movq $sat_scHys_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccKzN:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scHyt_entry, .-sat_scHyt_entry


==================== Asm code ====================
2018-03-16 16:07:37.306842799 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHyt_info:
	.quad	sat_scHyt_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.307718 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_entry, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_entry:
_ccKzO:
	leaq -168(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKzP
_ccKzQ:
	movq $block_ccKjy_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccKjy
_ccKjz:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKzP:
	movl $GHC.Stats.$fShowRTSStats_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowRTSStats_$cshowsPrec_entry, .-GHC.Stats.$fShowRTSStats_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:37.308377483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_info
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_info, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
	.quad	0
	.quad	167503724558
	.quad	8589934607
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.309482278 UTC

.section .text
.align 8
_ccKjy:
_ccKjy:
	movq $block_ccKjD_info,-152(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq 159(%rbx),%rbx
	movq %rbx,136(%rsp)
	movq 8(%rbp),%rbx
	movq %r14,144(%rsp)
	movq 80(%rsp),%r14
	movq %r14,-144(%rbp)
	movq 88(%rsp),%r14
	movq %r14,-136(%rbp)
	movq 96(%rsp),%r14
	movq %r14,-128(%rbp)
	movq 104(%rsp),%r14
	movq %r14,-120(%rbp)
	movq 112(%rsp),%r14
	movq %r14,-112(%rbp)
	movq 120(%rsp),%r14
	movq %r14,-104(%rbp)
	movq 128(%rsp),%r14
	movq %r14,-96(%rbp)
	movq 144(%rsp),%r14
	movq %r14,-88(%rbp)
	movq %rax,-80(%rbp)
	movq %rcx,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %rsi,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %r9,-32(%rbp)
	movq %r10,-24(%rbp)
	movq %r11,-16(%rbp)
	movq 136(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 72(%rsp),%rax
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,8(%rbp)
	addq $-152,%rbp
	testb $7,%bl
	jne _ccKjD
_ccKjE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccKjy, .-_ccKjy


==================== Asm code ====================
2018-03-16 16:07:37.31057397 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKjy_info:
	.quad	_ccKjy
	.quad	1
	.quad	30064771102
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.311846052 UTC

.section .text
.align 8
_ccKjD:
_ccKjD:
	addq $472,%r12
	cmpq 856(%r13),%r12
	ja _ccKzU
_ccKzT:
	movq 7(%rbx),%rax
	movq $w1_scHvi_info,-464(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-448(%r12)
	movq $w2_scHvn_info,-440(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-424(%r12)
	movq $w3_scHvs_info,-416(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-400(%r12)
	movq $w4_scHvx_info,-392(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-376(%r12)
	movq $w5_scHvC_info,-368(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-352(%r12)
	movq $w6_scHvH_info,-344(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-328(%r12)
	movq $w7_scHvM_info,-320(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-304(%r12)
	movq $w8_scHvR_info,-296(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-280(%r12)
	movq $w9_scHvW_info,-272(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-256(%r12)
	movq $w10_scHw1_info,-248(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-232(%r12)
	movq $w11_scHw6_info,-224(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-208(%r12)
	movq $f_scHwb_info,-200(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-184(%r12)
	movq $p_scHwc_info,-176(%r12)
	movq 160(%rbp),%rbx
	movq %rbx,-168(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-152(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-112(%r12)
	leaq -464(%r12),%rbx
	movq %rbx,-104(%r12)
	leaq -440(%r12),%rbx
	movq %rbx,-96(%r12)
	leaq -416(%r12),%rbx
	movq %rbx,-88(%r12)
	leaq -392(%r12),%rbx
	movq %rbx,-80(%r12)
	leaq -368(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -344(%r12),%rbx
	movq %rbx,-64(%r12)
	leaq -320(%r12),%rbx
	movq %rbx,-56(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-48(%r12)
	leaq -272(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq -248(%r12),%rbx
	movq %rbx,-32(%r12)
	leaq -224(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -200(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -175(%r12),%rbx
	cmpq $11,%rax
	jl _ccKzW
_ccKzX:
	movq $sat_scHyt_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $168,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKzW:
	addq $-16,%r12
	addq $168,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKzU:
	movq $472,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKjD, .-_ccKjD


==================== Asm code ====================
2018-03-16 16:07:37.313165308 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKjD_info:
	.quad	_ccKjD
	.quad	20
	.quad	30064771102
	.quad	ScI2G_srt


==================== Asm code ====================
2018-03-16 16:07:37.316011703 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshow_closure
.type GHC.Stats.$fShowRTSStats_$cshow_closure, @object
GHC.Stats.$fShowRTSStats_$cshow_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.316788743 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshow_entry
.type GHC.Stats.$fShowRTSStats_$cshow_entry, @object
GHC.Stats.$fShowRTSStats_$cshow_entry:
_ccKIS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKIT
_ccKIU:
	movq %r14,%rsi
	movl $GHC.Stats.$fShowGCDetails2_closure+1,%r14d
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
_ccKIT:
	movl $GHC.Stats.$fShowRTSStats_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowRTSStats_$cshow_entry, .-GHC.Stats.$fShowRTSStats_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:37.31754449 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshow_info
.type GHC.Stats.$fShowRTSStats_$cshow_info, @object
GHC.Stats.$fShowRTSStats_$cshow_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScI2G_srt+40


==================== Asm code ====================
2018-03-16 16:07:37.319854383 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats1_closure
.type GHC.Stats.$fShowRTSStats1_closure, @object
GHC.Stats.$fShowRTSStats1_closure:
	.quad	GHC.Stats.$fShowRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.320583762 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats1_entry
.type GHC.Stats.$fShowRTSStats1_entry, @object
GHC.Stats.$fShowRTSStats1_entry:
_ccKJ4:
	movq %r14,%rsi
	movl $GHC.Stats.$fShowGCDetails2_closure+1,%r14d
	jmp GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
	.size GHC.Stats.$fShowRTSStats1_entry, .-GHC.Stats.$fShowRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:37.321266824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats1_info
.type GHC.Stats.$fShowRTSStats1_info, @object
GHC.Stats.$fShowRTSStats1_info:
	.quad	GHC.Stats.$fShowRTSStats1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+40


==================== Asm code ====================
2018-03-16 16:07:37.323629909 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowList_closure
.type GHC.Stats.$fShowRTSStats_$cshowList_closure, @object
GHC.Stats.$fShowRTSStats_$cshowList_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.324338003 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshowList_entry
.type GHC.Stats.$fShowRTSStats_$cshowList_entry, @object
GHC.Stats.$fShowRTSStats_$cshowList_entry:
_ccKJf:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Stats.$fShowRTSStats1_closure+1,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Stats.$fShowRTSStats_$cshowList_entry, .-GHC.Stats.$fShowRTSStats_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:37.324959278 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowList_info
.type GHC.Stats.$fShowRTSStats_$cshowList_info, @object
GHC.Stats.$fShowRTSStats_$cshowList_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScI2G_srt+56


==================== Asm code ====================
2018-03-16 16:07:37.327332395 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_closure
.type GHC.Stats.$fShowRTSStats_closure, @object
GHC.Stats.$fShowRTSStats_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_closure+2
	.quad	GHC.Stats.$fShowRTSStats_$cshow_closure+1
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.3291134 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tcGCDetails2_bytes
.type GHC.Stats.$tcGCDetails2_bytes, @object
GHC.Stats.$tcGCDetails2_bytes:
	.asciz "GCDetails"


==================== Asm code ====================
2018-03-16 16:07:37.337431825 UTC

.section .data
.align 8
.align 1
lexeme_rcHq6_closure:
	.quad	lexeme_rcHq6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.338800432 UTC

.section .text
.align 8
lexeme_rcHq6_entry:
_ccKJu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKJv
_ccKJw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKJt
_ccKJs:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.$tcGCDetails2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKJv:
	jmp *-16(%r13)
_ccKJt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme_rcHq6_entry, .-lexeme_rcHq6_entry


==================== Asm code ====================
2018-03-16 16:07:37.339904951 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme_rcHq6_info:
	.quad	lexeme_rcHq6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.342698107 UTC

.section .data
.align 8
.align 1
lexeme1_rcHq7_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	lexeme_rcHq6_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.345436942 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lexeme2_rcHq8_bytes:
	.asciz "{"


==================== Asm code ====================
2018-03-16 16:07:37.350275939 UTC

.section .data
.align 8
.align 1
lexeme3_rcHq9_closure:
	.quad	lexeme3_rcHq9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.351777564 UTC

.section .text
.align 8
lexeme3_rcHq9_entry:
_ccKJM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKJN
_ccKJO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKJL
_ccKJK:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lexeme2_rcHq8_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKJN:
	jmp *-16(%r13)
_ccKJL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme3_rcHq9_entry, .-lexeme3_rcHq9_entry


==================== Asm code ====================
2018-03-16 16:07:37.352902431 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme3_rcHq9_info:
	.quad	lexeme3_rcHq9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.35574267 UTC

.section .data
.align 8
.align 1
lexeme4_rcHqa_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lexeme3_rcHq9_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.358499316 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ds_rcHqb_bytes:
	.asciz "gcdetails_gen"


==================== Asm code ====================
2018-03-16 16:07:37.3627656 UTC

.section .data
.align 8
.align 1
ds1_rcHqc_closure:
	.quad	ds1_rcHqc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.364220863 UTC

.section .text
.align 8
ds1_rcHqc_entry:
_ccKK4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKK5
_ccKK6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKK3
_ccKK2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $ds_rcHqb_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKK5:
	jmp *-16(%r13)
_ccKK3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size ds1_rcHqc_entry, .-ds1_rcHqc_entry


==================== Asm code ====================
2018-03-16 16:07:37.365422209 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_rcHqc_info:
	.quad	ds1_rcHqc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.368039852 UTC

.section .data
.align 8
.align 1
lvl37_rcHqd_closure:
	.quad	lvl37_rcHqd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.36883525 UTC

.section .text
.align 8
lvl37_rcHqd_entry:
_ccKKi:
	movq %r14,%rsi
	movl $Text.ParserCombinators.ReadPrec.minPrec_closure,%r14d
	jmp GHC.Read.$fReadWord32_$creadsPrec_entry
	.size lvl37_rcHqd_entry, .-lvl37_rcHqd_entry


==================== Asm code ====================
2018-03-16 16:07:37.369786209 UTC

.section .data.rel.ro
.align 8
.align 1
lvl37_rcHqd_info:
	.quad	lvl37_rcHqd_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+64


==================== Asm code ====================
2018-03-16 16:07:37.373809226 UTC

.section .data
.align 8
.align 1
ds2_rcHqe_closure:
	.quad	ds2_rcHqe_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.374699335 UTC

.section .text
.align 8
ds2_rcHqe_entry:
_ccKKw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKKx
_ccKKy:
	movq $block_ccKKt_info,-8(%rbp)
	movl $lvl37_rcHqd_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_ccKKx:
	movl $ds2_rcHqe_closure,%ebx
	jmp *-8(%r13)
	.size ds2_rcHqe_entry, .-ds2_rcHqe_entry


==================== Asm code ====================
2018-03-16 16:07:37.375345181 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_rcHqe_info:
	.quad	ds2_rcHqe_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScI2G_srt+72


==================== Asm code ====================
2018-03-16 16:07:37.376231463 UTC

.section .text
.align 8
_ccKKt:
_ccKKt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKKB
_ccKKA:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKKB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKKt, .-_ccKKt


==================== Asm code ====================
2018-03-16 16:07:37.376900246 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKKt_info:
	.quad	_ccKKt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.378788913 UTC

.section .data
.align 8
.align 1
n_rcHqf_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:07:37.380580848 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl38_rcHqg_bytes:
	.asciz ","


==================== Asm code ====================
2018-03-16 16:07:37.383580449 UTC

.section .data
.align 8
.align 1
lvl39_rcHqh_closure:
	.quad	lvl39_rcHqh_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.384583277 UTC

.section .text
.align 8
lvl39_rcHqh_entry:
_ccKKT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKKU
_ccKKV:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKKS
_ccKKR:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl38_rcHqg_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKKU:
	jmp *-16(%r13)
_ccKKS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl39_rcHqh_entry, .-lvl39_rcHqh_entry


==================== Asm code ====================
2018-03-16 16:07:37.385344569 UTC

.section .data.rel.ro
.align 8
.align 1
lvl39_rcHqh_info:
	.quad	lvl39_rcHqh_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.387263874 UTC

.section .data
.align 8
.align 1
lvl40_rcHqi_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lvl39_rcHqh_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.389104586 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl41_rcHqj_bytes:
	.asciz "gcdetails_threads"


==================== Asm code ====================
2018-03-16 16:07:37.393381825 UTC

.section .data
.align 8
.align 1
lvl42_rcHqk_closure:
	.quad	lvl42_rcHqk_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.394683294 UTC

.section .text
.align 8
lvl42_rcHqk_entry:
_ccKLb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKLc
_ccKLd:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKLa
_ccKL9:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl41_rcHqj_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKLc:
	jmp *-16(%r13)
_ccKLa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl42_rcHqk_entry, .-lvl42_rcHqk_entry


==================== Asm code ====================
2018-03-16 16:07:37.395815443 UTC

.section .data.rel.ro
.align 8
.align 1
lvl42_rcHqk_info:
	.quad	lvl42_rcHqk_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.398662863 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl43_rcHql_bytes:
	.asciz "gcdetails_allocated_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.40281751 UTC

.section .data
.align 8
.align 1
lvl44_rcHqm_closure:
	.quad	lvl44_rcHqm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.404197043 UTC

.section .text
.align 8
lvl44_rcHqm_entry:
_ccKLs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKLt
_ccKLu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKLr
_ccKLq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl43_rcHql_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKLt:
	jmp *-16(%r13)
_ccKLr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl44_rcHqm_entry, .-lvl44_rcHqm_entry


==================== Asm code ====================
2018-03-16 16:07:37.406114179 UTC

.section .data.rel.ro
.align 8
.align 1
lvl44_rcHqm_info:
	.quad	lvl44_rcHqm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.40952508 UTC

.section .data
.align 8
.align 1
lvl45_rcHqn_closure:
	.quad	lvl45_rcHqn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.410253128 UTC

.section .text
.align 8
lvl45_rcHqn_entry:
_ccKLG:
	movq %r14,%rsi
	movl $Text.ParserCombinators.ReadPrec.minPrec_closure,%r14d
	jmp GHC.Read.$fReadWord64_$creadsPrec_entry
	.size lvl45_rcHqn_entry, .-lvl45_rcHqn_entry


==================== Asm code ====================
2018-03-16 16:07:37.410865352 UTC

.section .data.rel.ro
.align 8
.align 1
lvl45_rcHqn_info:
	.quad	lvl45_rcHqn_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+88


==================== Asm code ====================
2018-03-16 16:07:37.414058193 UTC

.section .data
.align 8
.align 1
lvl46_rcHqo_closure:
	.quad	lvl46_rcHqo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.414835716 UTC

.section .text
.align 8
lvl46_rcHqo_entry:
_ccKLU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKLV
_ccKLW:
	movq $block_ccKLR_info,-8(%rbp)
	movl $lvl45_rcHqn_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_ccKLV:
	movl $lvl46_rcHqo_closure,%ebx
	jmp *-8(%r13)
	.size lvl46_rcHqo_entry, .-lvl46_rcHqo_entry


==================== Asm code ====================
2018-03-16 16:07:37.415498471 UTC

.section .data.rel.ro
.align 8
.align 1
lvl46_rcHqo_info:
	.quad	lvl46_rcHqo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScI2G_srt+96


==================== Asm code ====================
2018-03-16 16:07:37.416238764 UTC

.section .text
.align 8
_ccKLR:
_ccKLR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKLZ
_ccKLY:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKLZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKLR, .-_ccKLR


==================== Asm code ====================
2018-03-16 16:07:37.416898948 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKLR_info:
	.quad	_ccKLR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.418744961 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl47_rcHqp_bytes:
	.asciz "gcdetails_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.421505553 UTC

.section .data
.align 8
.align 1
lvl48_rcHqq_closure:
	.quad	lvl48_rcHqq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.422354086 UTC

.section .text
.align 8
lvl48_rcHqq_entry:
_ccKMg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKMh
_ccKMi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKMf
_ccKMe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl47_rcHqp_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKMh:
	jmp *-16(%r13)
_ccKMf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl48_rcHqq_entry, .-lvl48_rcHqq_entry


==================== Asm code ====================
2018-03-16 16:07:37.423081068 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_rcHqq_info:
	.quad	lvl48_rcHqq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.424830233 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl49_rcHqr_bytes:
	.asciz "gcdetails_large_objects_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.427380417 UTC

.section .data
.align 8
.align 1
lvl50_rcHqs_closure:
	.quad	lvl50_rcHqs_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.428220726 UTC

.section .text
.align 8
lvl50_rcHqs_entry:
_ccKMx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKMy
_ccKMz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKMw
_ccKMv:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl49_rcHqr_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKMy:
	jmp *-16(%r13)
_ccKMw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl50_rcHqs_entry, .-lvl50_rcHqs_entry


==================== Asm code ====================
2018-03-16 16:07:37.428925338 UTC

.section .data.rel.ro
.align 8
.align 1
lvl50_rcHqs_info:
	.quad	lvl50_rcHqs_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.431320854 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl51_rcHqt_bytes:
	.asciz "gcdetails_compact_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.434254268 UTC

.section .data
.align 8
.align 1
lvl52_rcHqu_closure:
	.quad	lvl52_rcHqu_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.435265997 UTC

.section .text
.align 8
lvl52_rcHqu_entry:
_ccKMO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKMP
_ccKMQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKMN
_ccKMM:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl51_rcHqt_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKMP:
	jmp *-16(%r13)
_ccKMN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl52_rcHqu_entry, .-lvl52_rcHqu_entry


==================== Asm code ====================
2018-03-16 16:07:37.436042867 UTC

.section .data.rel.ro
.align 8
.align 1
lvl52_rcHqu_info:
	.quad	lvl52_rcHqu_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.438500432 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl53_rcHqv_bytes:
	.asciz "gcdetails_slop_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.441281803 UTC

.section .data
.align 8
.align 1
lvl54_rcHqw_closure:
	.quad	lvl54_rcHqw_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.442235535 UTC

.section .text
.align 8
lvl54_rcHqw_entry:
_ccKN5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKN6
_ccKN7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKN4
_ccKN3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl53_rcHqv_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKN6:
	jmp *-16(%r13)
_ccKN4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl54_rcHqw_entry, .-lvl54_rcHqw_entry


==================== Asm code ====================
2018-03-16 16:07:37.442973663 UTC

.section .data.rel.ro
.align 8
.align 1
lvl54_rcHqw_info:
	.quad	lvl54_rcHqw_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.444743335 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl55_rcHqx_bytes:
	.asciz "gcdetails_mem_in_use_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.447503343 UTC

.section .data
.align 8
.align 1
lvl56_rcHqy_closure:
	.quad	lvl56_rcHqy_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.448459123 UTC

.section .text
.align 8
lvl56_rcHqy_entry:
_ccKNm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKNn
_ccKNo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKNl
_ccKNk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl55_rcHqx_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKNn:
	jmp *-16(%r13)
_ccKNl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl56_rcHqy_entry, .-lvl56_rcHqy_entry


==================== Asm code ====================
2018-03-16 16:07:37.449235368 UTC

.section .data.rel.ro
.align 8
.align 1
lvl56_rcHqy_info:
	.quad	lvl56_rcHqy_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.451487907 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl57_rcHqz_bytes:
	.asciz "gcdetails_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.454381481 UTC

.section .data
.align 8
.align 1
lvl58_rcHqA_closure:
	.quad	lvl58_rcHqA_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.455367251 UTC

.section .text
.align 8
lvl58_rcHqA_entry:
_ccKND:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKNE
_ccKNF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKNC
_ccKNB:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl57_rcHqz_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKNE:
	jmp *-16(%r13)
_ccKNC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl58_rcHqA_entry, .-lvl58_rcHqA_entry


==================== Asm code ====================
2018-03-16 16:07:37.456090117 UTC

.section .data.rel.ro
.align 8
.align 1
lvl58_rcHqA_info:
	.quad	lvl58_rcHqA_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.458016992 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl59_rcHqB_bytes:
	.asciz "gcdetails_par_max_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.460893319 UTC

.section .data
.align 8
.align 1
lvl60_rcHqC_closure:
	.quad	lvl60_rcHqC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.461948368 UTC

.section .text
.align 8
lvl60_rcHqC_entry:
_ccKNU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKNV
_ccKNW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKNT
_ccKNS:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl59_rcHqB_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKNV:
	jmp *-16(%r13)
_ccKNT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl60_rcHqC_entry, .-lvl60_rcHqC_entry


==================== Asm code ====================
2018-03-16 16:07:37.462675342 UTC

.section .data.rel.ro
.align 8
.align 1
lvl60_rcHqC_info:
	.quad	lvl60_rcHqC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.464576171 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl61_rcHqD_bytes:
	.asciz "gcdetails_par_balanced_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.468152271 UTC

.section .data
.align 8
.align 1
lvl62_rcHqE_closure:
	.quad	lvl62_rcHqE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.469149997 UTC

.section .text
.align 8
lvl62_rcHqE_entry:
_ccKOb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKOc
_ccKOd:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKOa
_ccKO9:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl61_rcHqD_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKOc:
	jmp *-16(%r13)
_ccKOa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl62_rcHqE_entry, .-lvl62_rcHqE_entry


==================== Asm code ====================
2018-03-16 16:07:37.470409651 UTC

.section .data.rel.ro
.align 8
.align 1
lvl62_rcHqE_info:
	.quad	lvl62_rcHqE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.472219692 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl63_rcHqF_bytes:
	.asciz "gcdetails_sync_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:37.474887505 UTC

.section .data
.align 8
.align 1
lvl64_rcHqG_closure:
	.quad	lvl64_rcHqG_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.475846976 UTC

.section .text
.align 8
lvl64_rcHqG_entry:
_ccKOs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKOt
_ccKOu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKOr
_ccKOq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl63_rcHqF_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKOt:
	jmp *-16(%r13)
_ccKOr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl64_rcHqG_entry, .-lvl64_rcHqG_entry


==================== Asm code ====================
2018-03-16 16:07:37.476547704 UTC

.section .data.rel.ro
.align 8
.align 1
lvl64_rcHqG_info:
	.quad	lvl64_rcHqG_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.478951635 UTC

.section .data
.align 8
.align 1
lvl65_rcHqH_closure:
	.quad	lvl65_rcHqH_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.479694968 UTC

.section .text
.align 8
lvl65_rcHqH_entry:
_ccKOG:
	movq %r14,%rsi
	movl $Text.ParserCombinators.ReadPrec.minPrec_closure,%r14d
	jmp GHC.Int.$fReadInt64_$creadsPrec_entry
	.size lvl65_rcHqH_entry, .-lvl65_rcHqH_entry


==================== Asm code ====================
2018-03-16 16:07:37.480325783 UTC

.section .data.rel.ro
.align 8
.align 1
lvl65_rcHqH_info:
	.quad	lvl65_rcHqH_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+112


==================== Asm code ====================
2018-03-16 16:07:37.483504908 UTC

.section .data
.align 8
.align 1
lvl66_rcHqI_closure:
	.quad	lvl66_rcHqI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.484334784 UTC

.section .text
.align 8
lvl66_rcHqI_entry:
_ccKOU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKOV
_ccKOW:
	movq $block_ccKOR_info,-8(%rbp)
	movl $lvl65_rcHqH_closure+1,%r14d
	addq $-8,%rbp
	jmp Text.ParserCombinators.ReadP.$wreadS_to_P_entry
_ccKOV:
	movl $lvl66_rcHqI_closure,%ebx
	jmp *-8(%r13)
	.size lvl66_rcHqI_entry, .-lvl66_rcHqI_entry


==================== Asm code ====================
2018-03-16 16:07:37.484975612 UTC

.section .data.rel.ro
.align 8
.align 1
lvl66_rcHqI_info:
	.quad	lvl66_rcHqI_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScI2G_srt+120


==================== Asm code ====================
2018-03-16 16:07:37.486276215 UTC

.section .text
.align 8
_ccKOR:
_ccKOR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKOZ
_ccKOY:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKOZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKOR, .-_ccKOR


==================== Asm code ====================
2018-03-16 16:07:37.487353684 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKOR_info:
	.quad	_ccKOR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.490089921 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl67_rcHqJ_bytes:
	.asciz "gcdetails_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:37.494536159 UTC

.section .data
.align 8
.align 1
lvl68_rcHqK_closure:
	.quad	lvl68_rcHqK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.496040428 UTC

.section .text
.align 8
lvl68_rcHqK_entry:
_ccKPg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKPh
_ccKPi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKPf
_ccKPe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl67_rcHqJ_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKPh:
	jmp *-16(%r13)
_ccKPf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl68_rcHqK_entry, .-lvl68_rcHqK_entry


==================== Asm code ====================
2018-03-16 16:07:37.497201855 UTC

.section .data.rel.ro
.align 8
.align 1
lvl68_rcHqK_info:
	.quad	lvl68_rcHqK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.500154245 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl69_rcHqL_bytes:
	.asciz "gcdetails_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:37.50479737 UTC

.section .data
.align 8
.align 1
lvl70_rcHqM_closure:
	.quad	lvl70_rcHqM_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.506307456 UTC

.section .text
.align 8
lvl70_rcHqM_entry:
_ccKPx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKPy
_ccKPz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKPw
_ccKPv:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl69_rcHqL_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKPy:
	jmp *-16(%r13)
_ccKPw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl70_rcHqM_entry, .-lvl70_rcHqM_entry


==================== Asm code ====================
2018-03-16 16:07:37.508290864 UTC

.section .data.rel.ro
.align 8
.align 1
lvl70_rcHqM_info:
	.quad	lvl70_rcHqM_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.511373897 UTC

.section .data
.align 8
.align 1
lvl71_rcHqN_closure:
	.quad	lvl71_rcHqN_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.512284361 UTC

.section .text
.align 8
lvl71_rcHqN_entry:
_ccKPN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKPO
_ccKPP:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccKPM
_ccKPL:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl15_rcHpK_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccKPO:
	jmp *-16(%r13)
_ccKPM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl71_rcHqN_entry, .-lvl71_rcHqN_entry


==================== Asm code ====================
2018-03-16 16:07:37.51298293 UTC

.section .data.rel.ro
.align 8
.align 1
lvl71_rcHqN_info:
	.quad	lvl71_rcHqN_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.51482583 UTC

.section .data
.align 8
.align 1
lvl72_rcHqO_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lvl71_rcHqN_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.565985956 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec_closure
.type GHC.Stats.$w$creadPrec_closure, @object
GHC.Stats.$w$creadPrec_closure:
	.quad	GHC.Stats.$w$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.567185777 UTC

.section .text
.align 8
sat_scHzh_entry:
_ccKSx:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKSB
_ccKSA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq 119(%rbx),%rbx
	movq $GHC.Stats.GCDetails_con_info,-112(%r12)
	movq %rdi,96(%rsp)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r14
	movq 64(%rsp),%rax
	movq %rax,%rbx
	jmp stg_ap_p_fast
_ccKSB:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzh_entry, .-sat_scHzh_entry


==================== Asm code ====================
2018-03-16 16:07:37.568125644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzh_info:
	.quad	sat_scHzh_entry
	.quad	15
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:37.569236932 UTC

.section .text
.align 8
sat_scHzk_entry:
_ccKSF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKSG
_ccKSH:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccKSJ
_ccKSI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq $sat_scHzh_info,-120(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKSC_info,-8(%rbp)
	leaq -119(%r12),%rsi
	movl $lvl72_rcHqO_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKSJ:
	movq $128,904(%r13)
_ccKSG:
	jmp *-8(%r13)
	.size sat_scHzk_entry, .-sat_scHzk_entry


==================== Asm code ====================
2018-03-16 16:07:37.571168007 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzk_info:
	.quad	sat_scHzk_entry
	.quad	14
	.quad	12884901896
	.quad	4294967301
	.quad	ScI2G_srt+136


==================== Asm code ====================
2018-03-16 16:07:37.572258029 UTC

.section .text
.align 8
_ccKSC:
_ccKSC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKSM
_ccKSL:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKSM:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKSC, .-_ccKSC


==================== Asm code ====================
2018-03-16 16:07:37.572984107 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKSC_info:
	.quad	_ccKSC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.574077077 UTC

.section .text
.align 8
sat_scHzl_entry:
_ccKSN:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKSR
_ccKSQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq $sat_scHzk_info,-112(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl70_rcHqM_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKSR:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzl_entry, .-sat_scHzl_entry


==================== Asm code ====================
2018-03-16 16:07:37.575054023 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzl_info:
	.quad	sat_scHzl_entry
	.quad	14
	.quad	133143986184
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.576185281 UTC

.section .text
.align 8
sat_scHzo_entry:
_ccKSV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKSW
_ccKSX:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccKSZ
_ccKSY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq 103(%rbx),%rbx
	movq $sat_scHzl_info,-112(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKSS_info,-8(%rbp)
	leaq -111(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKSZ:
	movq $120,904(%r13)
_ccKSW:
	jmp *-8(%r13)
	.size sat_scHzo_entry, .-sat_scHzo_entry


==================== Asm code ====================
2018-03-16 16:07:37.577190121 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzo_info:
	.quad	sat_scHzo_entry
	.quad	13
	.quad	270582939656
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.578083949 UTC

.section .text
.align 8
_ccKSS:
_ccKSS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKT2
_ccKT1:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKT2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKSS, .-_ccKSS


==================== Asm code ====================
2018-03-16 16:07:37.578841258 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKSS_info:
	.quad	_ccKSS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.579805053 UTC

.section .text
.align 8
sat_scHzp_entry:
_ccKT3:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKT7
_ccKT6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 103(%rbx),%rbx
	movq $sat_scHzo_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -103(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl68_rcHqK_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKT7:
	movq $112,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzp_entry, .-sat_scHzp_entry


==================== Asm code ====================
2018-03-16 16:07:37.580788084 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzp_info:
	.quad	sat_scHzp_entry
	.quad	13
	.quad	545460846600
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.581932184 UTC

.section .text
.align 8
sat_scHzs_entry:
_ccKTb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKTc
_ccKTd:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccKTf
_ccKTe:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq $sat_scHzp_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKT8_info,-8(%rbp)
	leaq -103(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKTf:
	movq $112,904(%r13)
_ccKTc:
	jmp *-8(%r13)
	.size sat_scHzs_entry, .-sat_scHzs_entry


==================== Asm code ====================
2018-03-16 16:07:37.582908513 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzs_info:
	.quad	sat_scHzs_entry
	.quad	12
	.quad	545460846600
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.583762987 UTC

.section .text
.align 8
_ccKT8:
_ccKT8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKTi
_ccKTh:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKTi:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKT8, .-_ccKT8


==================== Asm code ====================
2018-03-16 16:07:37.584516019 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKT8_info:
	.quad	_ccKT8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.585616389 UTC

.section .text
.align 8
sat_scHzt_entry:
_ccKTj:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKTn
_ccKTm:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq $sat_scHzs_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -95(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl64_rcHqG_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKTn:
	movq $104,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzt_entry, .-sat_scHzt_entry


==================== Asm code ====================
2018-03-16 16:07:37.586527371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzt_info:
	.quad	sat_scHzt_entry
	.quad	12
	.quad	1095216660488
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.587594385 UTC

.section .text
.align 8
sat_scHzw_entry:
_ccKTr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKTs
_ccKTt:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccKTv
_ccKTu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq 87(%rbx),%rbx
	movq $sat_scHzt_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKTo_info,-8(%rbp)
	leaq -95(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKTv:
	movq $104,904(%r13)
_ccKTs:
	jmp *-8(%r13)
	.size sat_scHzw_entry, .-sat_scHzw_entry


==================== Asm code ====================
2018-03-16 16:07:37.588533642 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzw_info:
	.quad	sat_scHzw_entry
	.quad	11
	.quad	1095216660488
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.589474916 UTC

.section .text
.align 8
_ccKTo:
_ccKTo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKTy
_ccKTx:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKTy:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKTo, .-_ccKTo


==================== Asm code ====================
2018-03-16 16:07:37.590189072 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKTo_info:
	.quad	_ccKTo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.591078134 UTC

.section .text
.align 8
sat_scHzx_entry:
_ccKTz:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKTD
_ccKTC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq 87(%rbx),%rbx
	movq $sat_scHzw_info,-88(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -87(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl62_rcHqE_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKTD:
	movq $96,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzx_entry, .-sat_scHzx_entry


==================== Asm code ====================
2018-03-16 16:07:37.591963649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzx_info:
	.quad	sat_scHzx_entry
	.quad	11
	.quad	17562121273352
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.593013689 UTC

.section .text
.align 8
sat_scHzA_entry:
_ccKTH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKTI
_ccKTJ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccKTL
_ccKTK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq $sat_scHzx_info,-88(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKTE_info,-8(%rbp)
	leaq -87(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKTL:
	movq $96,904(%r13)
_ccKTI:
	jmp *-8(%r13)
	.size sat_scHzA_entry, .-sat_scHzA_entry


==================== Asm code ====================
2018-03-16 16:07:37.594038449 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzA_info:
	.quad	sat_scHzA_entry
	.quad	10
	.quad	17562121273352
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.594867478 UTC

.section .text
.align 8
_ccKTE:
_ccKTE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKTO
_ccKTN:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKTO:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKTE, .-_ccKTE


==================== Asm code ====================
2018-03-16 16:07:37.595598776 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKTE_info:
	.quad	_ccKTE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.596614209 UTC

.section .text
.align 8
sat_scHzB_entry:
_ccKTP:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccKTT
_ccKTS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq $sat_scHzA_info,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -79(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl60_rcHqC_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKTT:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzB_entry, .-sat_scHzB_entry


==================== Asm code ====================
2018-03-16 16:07:37.597607839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzB_info:
	.quad	sat_scHzB_entry
	.quad	10
	.quad	35154307317768
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.598685428 UTC

.section .text
.align 8
sat_scHzE_entry:
_ccKTX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKTY
_ccKTZ:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccKU1
_ccKU0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	movq $sat_scHzB_info,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKTU_info,-8(%rbp)
	leaq -79(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKU1:
	movq $88,904(%r13)
_ccKTY:
	jmp *-8(%r13)
	.size sat_scHzE_entry, .-sat_scHzE_entry


==================== Asm code ====================
2018-03-16 16:07:37.599599625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzE_info:
	.quad	sat_scHzE_entry
	.quad	9
	.quad	35154307317768
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.600385075 UTC

.section .text
.align 8
_ccKTU:
_ccKTU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKU4
_ccKU3:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKU4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKTU, .-_ccKTU


==================== Asm code ====================
2018-03-16 16:07:37.601098454 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKTU_info:
	.quad	_ccKTU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.602058838 UTC

.section .text
.align 8
sat_scHzF_entry:
_ccKU5:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccKU9
_ccKU8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	movq $sat_scHzE_info,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -71(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl58_rcHqA_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKU9:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzF_entry, .-sat_scHzF_entry


==================== Asm code ====================
2018-03-16 16:07:37.602989175 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzF_info:
	.quad	sat_scHzF_entry
	.quad	9
	.quad	70338679406600
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.604774204 UTC

.section .text
.align 8
sat_scHzI_entry:
_ccKUd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKUe
_ccKUf:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccKUh
_ccKUg:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	movq $sat_scHzF_info,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKUa_info,-8(%rbp)
	leaq -71(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKUh:
	movq $80,904(%r13)
_ccKUe:
	jmp *-8(%r13)
	.size sat_scHzI_entry, .-sat_scHzI_entry


==================== Asm code ====================
2018-03-16 16:07:37.606029759 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzI_info:
	.quad	sat_scHzI_entry
	.quad	8
	.quad	70338679406600
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.606890365 UTC

.section .text
.align 8
_ccKUa:
_ccKUa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKUk
_ccKUj:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKUk:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKUa, .-_ccKUa


==================== Asm code ====================
2018-03-16 16:07:37.607637969 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKUa_info:
	.quad	_ccKUa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.608554449 UTC

.section .text
.align 8
sat_scHzJ_entry:
_ccKUl:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccKUp
_ccKUo:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	movq $sat_scHzI_info,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -63(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl56_rcHqy_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKUp:
	movq $72,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzJ_entry, .-sat_scHzJ_entry


==================== Asm code ====================
2018-03-16 16:07:37.60944749 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzJ_info:
	.quad	sat_scHzJ_entry
	.quad	8
	.quad	140707423584264
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.610376289 UTC

.section .text
.align 8
sat_scHzM_entry:
_ccKUt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKUu
_ccKUv:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccKUx
_ccKUw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	movq $sat_scHzJ_info,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKUq_info,-8(%rbp)
	leaq -63(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKUx:
	movq $72,904(%r13)
_ccKUu:
	jmp *-8(%r13)
	.size sat_scHzM_entry, .-sat_scHzM_entry


==================== Asm code ====================
2018-03-16 16:07:37.611268185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzM_info:
	.quad	sat_scHzM_entry
	.quad	7
	.quad	140707423584264
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.612080195 UTC

.section .text
.align 8
_ccKUq:
_ccKUq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKUA
_ccKUz:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKUA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKUq, .-_ccKUq


==================== Asm code ====================
2018-03-16 16:07:37.612801609 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKUq_info:
	.quad	_ccKUq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.613739172 UTC

.section .text
.align 8
sat_scHzN_entry:
_ccKUB:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccKUF
_ccKUE:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	movq $sat_scHzM_info,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -55(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl54_rcHqw_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKUF:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzN_entry, .-sat_scHzN_entry


==================== Asm code ====================
2018-03-16 16:07:37.614616181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzN_info:
	.quad	sat_scHzN_entry
	.quad	7
	.quad	281444911939592
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.615639918 UTC

.section .text
.align 8
sat_scHzQ_entry:
_ccKUJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKUK
_ccKUL:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccKUN
_ccKUM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_scHzN_info,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKUG_info,-8(%rbp)
	leaq -55(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKUN:
	movq $64,904(%r13)
_ccKUK:
	jmp *-8(%r13)
	.size sat_scHzQ_entry, .-sat_scHzQ_entry


==================== Asm code ====================
2018-03-16 16:07:37.616531092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzQ_info:
	.quad	sat_scHzQ_entry
	.quad	6
	.quad	281444911939592
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.617394586 UTC

.section .text
.align 8
_ccKUG:
_ccKUG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKUQ
_ccKUP:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKUQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKUG, .-_ccKUG


==================== Asm code ====================
2018-03-16 16:07:37.618121825 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKUG_info:
	.quad	_ccKUG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.619002113 UTC

.section .text
.align 8
sat_scHzR_entry:
_ccKUR:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKUV
_ccKUU:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_scHzQ_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl52_rcHqu_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKUV:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzR_entry, .-sat_scHzR_entry


==================== Asm code ====================
2018-03-16 16:07:37.619816322 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzR_info:
	.quad	sat_scHzR_entry
	.quad	6
	.quad	562919888650248
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.620782279 UTC

.section .text
.align 8
sat_scHzU_entry:
_ccKUZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKV0
_ccKV1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccKV3
_ccKV2:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_scHzR_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKUW_info,-8(%rbp)
	leaq -47(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKV3:
	movq $56,904(%r13)
_ccKV0:
	jmp *-8(%r13)
	.size sat_scHzU_entry, .-sat_scHzU_entry


==================== Asm code ====================
2018-03-16 16:07:37.622044249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzU_info:
	.quad	sat_scHzU_entry
	.quad	5
	.quad	562919888650248
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.62295775 UTC

.section .text
.align 8
_ccKUW:
_ccKUW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKV6
_ccKV5:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKV6:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKUW, .-_ccKUW


==================== Asm code ====================
2018-03-16 16:07:37.623571831 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKUW_info:
	.quad	_ccKUW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.624394608 UTC

.section .text
.align 8
sat_scHzV_entry:
_ccKV7:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccKVb
_ccKVa:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_scHzU_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -39(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl50_rcHqs_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKVb:
	movq $48,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzV_entry, .-sat_scHzV_entry


==================== Asm code ====================
2018-03-16 16:07:37.625133685 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzV_info:
	.quad	sat_scHzV_entry
	.quad	5
	.quad	1125869842071560
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.626019203 UTC

.section .text
.align 8
sat_scHzY_entry:
_ccKVf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKVg
_ccKVh:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccKVj
_ccKVi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_scHzV_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKVc_info,-8(%rbp)
	leaq -39(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKVj:
	movq $48,904(%r13)
_ccKVg:
	jmp *-8(%r13)
	.size sat_scHzY_entry, .-sat_scHzY_entry


==================== Asm code ====================
2018-03-16 16:07:37.626783339 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzY_info:
	.quad	sat_scHzY_entry
	.quad	4
	.quad	1125869842071560
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.627541602 UTC

.section .text
.align 8
_ccKVc:
_ccKVc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKVm
_ccKVl:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKVm:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKVc, .-_ccKVc


==================== Asm code ====================
2018-03-16 16:07:37.628239222 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKVc_info:
	.quad	_ccKVc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.629044907 UTC

.section .text
.align 8
sat_scHzZ_entry:
_ccKVn:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccKVr
_ccKVq:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_scHzY_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -31(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl48_rcHqq_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKVr:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_scHzZ_entry, .-sat_scHzZ_entry


==================== Asm code ====================
2018-03-16 16:07:37.629917008 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHzZ_info:
	.quad	sat_scHzZ_entry
	.quad	4
	.quad	2251769748914184
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.630831691 UTC

.section .text
.align 8
sat_scHA2_entry:
_ccKVv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKVw
_ccKVx:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccKVz
_ccKVy:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_scHzZ_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKVs_info,-8(%rbp)
	leaq -31(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKVz:
	movq $40,904(%r13)
_ccKVw:
	jmp *-8(%r13)
	.size sat_scHA2_entry, .-sat_scHA2_entry


==================== Asm code ====================
2018-03-16 16:07:37.631612347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHA2_info:
	.quad	sat_scHA2_entry
	.quad	3
	.quad	2251769748914184
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.632447629 UTC

.section .text
.align 8
_ccKVs:
_ccKVs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKVC
_ccKVB:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKVC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKVs, .-_ccKVs


==================== Asm code ====================
2018-03-16 16:07:37.633198596 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKVs_info:
	.quad	_ccKVs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.634081161 UTC

.section .text
.align 8
sat_scHA3_entry:
_ccKVD:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccKVH
_ccKVG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_scHA2_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl44_rcHqm_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKVH:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_scHA3_entry, .-sat_scHA3_entry


==================== Asm code ====================
2018-03-16 16:07:37.635438593 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHA3_info:
	.quad	sat_scHA3_entry
	.quad	3
	.quad	4503569562599432
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.63642987 UTC

.section .text
.align 8
sat_scHA6_entry:
_ccKVL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKVM
_ccKVN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccKVP
_ccKVO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_scHA3_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKVI_info,-8(%rbp)
	leaq -23(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKVP:
	movq $32,904(%r13)
_ccKVM:
	jmp *-8(%r13)
	.size sat_scHA6_entry, .-sat_scHA6_entry


==================== Asm code ====================
2018-03-16 16:07:37.637434012 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHA6_info:
	.quad	sat_scHA6_entry
	.quad	2
	.quad	4503569562599435
	.quad	4294967301
	.quad	ScI2G_srt+104


==================== Asm code ====================
2018-03-16 16:07:37.638286826 UTC

.section .text
.align 8
_ccKVI:
_ccKVI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKVS
_ccKVR:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKVS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKVI, .-_ccKVI


==================== Asm code ====================
2018-03-16 16:07:37.639010724 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKVI_info:
	.quad	_ccKVI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.639844859 UTC

.section .text
.align 8
sat_scHA7_entry:
_ccKVT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKVX
_ccKVW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_scHA6_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $ds2_rcHqe_closure+2,%esi
	movl $lvl42_rcHqk_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKVX:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_scHA7_entry, .-sat_scHA7_entry


==================== Asm code ====================
2018-03-16 16:07:37.640585432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHA7_info:
	.quad	sat_scHA7_entry
	.quad	2
	.quad	72057357814726667
	.quad	4294967301
	.quad	ScI2G_srt+80


==================== Asm code ====================
2018-03-16 16:07:37.641517785 UTC

.section .text
.align 8
sat_scHAa_entry:
_ccKW1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKW2
_ccKW3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccKW5
_ccKW4:
	movq 7(%rbx),%rax
	movq $sat_scHA7_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccKVY_info,-8(%rbp)
	leaq -15(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKW5:
	movq $24,904(%r13)
_ccKW2:
	jmp *-8(%r13)
	.size sat_scHAa_entry, .-sat_scHAa_entry


==================== Asm code ====================
2018-03-16 16:07:37.642269975 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHAa_info:
	.quad	sat_scHAa_entry
	.quad	1
	.quad	72057357814726665
	.quad	4294967301
	.quad	ScI2G_srt+80


==================== Asm code ====================
2018-03-16 16:07:37.643055503 UTC

.section .text
.align 8
_ccKVY:
_ccKVY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKW8
_ccKW7:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKW8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKVY, .-_ccKVY


==================== Asm code ====================
2018-03-16 16:07:37.643774527 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKVY_info:
	.quad	_ccKVY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.644577801 UTC

.section .text
.align 8
sat_scHAb_entry:
_ccKW9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKWd
_ccKWc:
	movq 7(%rbx),%rax
	movq $sat_scHAa_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $ds2_rcHqe_closure+2,%esi
	movl $ds1_rcHqc_closure,%r14d
	jmp GHC.Read.readField_entry
_ccKWd:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_scHAb_entry, .-sat_scHAb_entry


==================== Asm code ====================
2018-03-16 16:07:37.645354877 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHAb_info:
	.quad	sat_scHAb_entry
	.quad	1
	.quad	144114951852654601
	.quad	4294967301
	.quad	ScI2G_srt+80


==================== Asm code ====================
2018-03-16 16:07:37.646280771 UTC

.section .text
.align 8
sat_scHAe_entry:
_ccKWh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKWi
_ccKWj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKWl
_ccKWk:
	movq 7(%rbx),%rax
	movq $sat_scHAb_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_ccKWe_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $lexeme4_rcHqa_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKWl:
	movq $16,904(%r13)
_ccKWi:
	jmp *-8(%r13)
	.size sat_scHAe_entry, .-sat_scHAe_entry


==================== Asm code ====================
2018-03-16 16:07:37.647050373 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHAe_info:
	.quad	sat_scHAe_entry
	.quad	1
	.quad	288230139928510473
	.quad	4294967301
	.quad	ScI2G_srt+80


==================== Asm code ====================
2018-03-16 16:07:37.647830246 UTC

.section .text
.align 8
_ccKWe:
_ccKWe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKWo
_ccKWn:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKWo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKWe, .-_ccKWe


==================== Asm code ====================
2018-03-16 16:07:37.64857922 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKWe_info:
	.quad	_ccKWe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.649544321 UTC

.section .text
.align 8
.globl GHC.Stats.$w$creadPrec_entry
.type GHC.Stats.$w$creadPrec_entry, @object
GHC.Stats.$w$creadPrec_entry:
_ccKWs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKWt
_ccKWu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKWw
_ccKWv:
	cmpq $11,%r14
	jg _ccKWq
_ccKWr:
	movq $sat_scHAe_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_ccKWx_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $lexeme1_rcHq7_closure+4,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccKWw:
	movq $16,904(%r13)
_ccKWt:
	movl $GHC.Stats.$w$creadPrec_closure,%ebx
	jmp *-8(%r13)
_ccKWq:
	addq $-16,%r12
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.$w$creadPrec_entry, .-GHC.Stats.$w$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:07:37.650459494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec_info
.type GHC.Stats.$w$creadPrec_info, @object
GHC.Stats.$w$creadPrec_info:
	.quad	GHC.Stats.$w$creadPrec_entry
	.quad	0
	.quad	1152921268383645710
	.quad	8589934605
	.quad	ScI2G_srt+80


==================== Asm code ====================
2018-03-16 16:07:37.651317596 UTC

.section .text
.align 8
_ccKWx:
_ccKWx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccKWC
_ccKWB:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccKWC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccKWx, .-_ccKWx


==================== Asm code ====================
2018-03-16 16:07:37.652037883 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKWx_info:
	.quad	_ccKWx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.655784305 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails2_closure
.type GHC.Stats.$fReadGCDetails2_closure, @object
GHC.Stats.$fReadGCDetails2_closure:
	.quad	GHC.Stats.$fReadGCDetails2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.656882894 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails2_entry
.type GHC.Stats.$fReadGCDetails2_entry, @object
GHC.Stats.$fReadGCDetails2_entry:
_ccKZz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccKZA
_ccKZB:
	movq $block_ccKZw_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccKZw
_ccKZx:
	movq (%rbx),%rax
	jmp *(%rax)
_ccKZA:
	movl $GHC.Stats.$fReadGCDetails2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadGCDetails2_entry, .-GHC.Stats.$fReadGCDetails2_entry


==================== Asm code ====================
2018-03-16 16:07:37.657726887 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails2_info
.type GHC.Stats.$fReadGCDetails2_info, @object
GHC.Stats.$fReadGCDetails2_info:
	.quad	GHC.Stats.$fReadGCDetails2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	ScI2G_srt+288


==================== Asm code ====================
2018-03-16 16:07:37.658525882 UTC

.section .text
.align 8
_ccKZw:
_ccKZw:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Stats.$w$creadPrec_entry
	.size _ccKZw, .-_ccKZw


==================== Asm code ====================
2018-03-16 16:07:37.659233425 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccKZw_info:
	.quad	_ccKZw
	.quad	1
	.quad	4294967326
	.quad	ScI2G_srt+288


==================== Asm code ====================
2018-03-16 16:07:37.662097812 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails1_closure
.type GHC.Stats.$fReadGCDetails1_closure, @object
GHC.Stats.$fReadGCDetails1_closure:
	.quad	GHC.Stats.$fReadGCDetails1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.662993163 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails1_entry
.type GHC.Stats.$fReadGCDetails1_entry, @object
GHC.Stats.$fReadGCDetails1_entry:
_ccKZT:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Stats.$fReadGCDetails2_closure+2,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.Stats.$fReadGCDetails1_entry, .-GHC.Stats.$fReadGCDetails1_entry


==================== Asm code ====================
2018-03-16 16:07:37.663786507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails1_info
.type GHC.Stats.$fReadGCDetails1_info, @object
GHC.Stats.$fReadGCDetails1_info:
	.quad	GHC.Stats.$fReadGCDetails1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScI2G_srt+304


==================== Asm code ====================
2018-03-16 16:07:37.667795242 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_closure
.type GHC.Stats.$fReadGCDetails_$creadsPrec_closure, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.668811615 UTC

.section .text
.align 8
sat_scHAm_entry:
_ccL08:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL09
_ccL0a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.Stats.$fReadGCDetails2_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_ccL09:
	jmp *-16(%r13)
	.size sat_scHAm_entry, .-sat_scHAm_entry


==================== Asm code ====================
2018-03-16 16:07:37.670409147 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHAm_info:
	.quad	sat_scHAm_entry
	.quad	1
	.quad	12884901904
	.quad	ScI2G_srt+304


==================== Asm code ====================
2018-03-16 16:07:37.671255828 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_entry
.type GHC.Stats.$fReadGCDetails_$creadsPrec_entry, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_entry:
_ccL0b:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccL0f
_ccL0e:
	movq $sat_scHAm_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_ccL0f:
	movq $24,904(%r13)
	movl $GHC.Stats.$fReadGCDetails_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadGCDetails_$creadsPrec_entry, .-GHC.Stats.$fReadGCDetails_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:37.672004609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_info
.type GHC.Stats.$fReadGCDetails_$creadsPrec_info, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScI2G_srt+304


==================== Asm code ====================
2018-03-16 16:07:37.675320516 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_closure
.type GHC.Stats.$fReadGCDetails_$creadListPrec_closure, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.676317633 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_entry
.type GHC.Stats.$fReadGCDetails_$creadListPrec_entry, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_entry:
_ccL0u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL0v
_ccL0w:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL0t
_ccL0s:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.$fReadGCDetails1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_ccL0v:
	jmp *-16(%r13)
_ccL0t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadGCDetails_$creadListPrec_entry, .-GHC.Stats.$fReadGCDetails_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:37.677121564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_info
.type GHC.Stats.$fReadGCDetails_$creadListPrec_info, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	ScI2G_srt+328


==================== Asm code ====================
2018-03-16 16:07:37.68032904 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails3_closure
.type GHC.Stats.$fReadGCDetails3_closure, @object
GHC.Stats.$fReadGCDetails3_closure:
	.quad	GHC.Stats.$fReadGCDetails3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.681631854 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails3_entry
.type GHC.Stats.$fReadGCDetails3_entry, @object
GHC.Stats.$fReadGCDetails3_entry:
_ccL0K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL0L
_ccL0M:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL0J
_ccL0I:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.Stats.$fReadGCDetails_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_ccL0L:
	jmp *-16(%r13)
_ccL0J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadGCDetails3_entry, .-GHC.Stats.$fReadGCDetails3_entry


==================== Asm code ====================
2018-03-16 16:07:37.68253916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails3_info
.type GHC.Stats.$fReadGCDetails3_info, @object
GHC.Stats.$fReadGCDetails3_info:
	.quad	GHC.Stats.$fReadGCDetails3_entry
	.quad	0
	.quad	4294967317
	.quad	ScI2G_srt+344


==================== Asm code ====================
2018-03-16 16:07:37.685126441 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadList_closure
.type GHC.Stats.$fReadGCDetails_$creadList_closure, @object
GHC.Stats.$fReadGCDetails_$creadList_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.68596623 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadList_entry
.type GHC.Stats.$fReadGCDetails_$creadList_entry, @object
GHC.Stats.$fReadGCDetails_$creadList_entry:
_ccL0Y:
	movq %r14,%rsi
	movl $GHC.Stats.$fReadGCDetails3_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Stats.$fReadGCDetails_$creadList_entry, .-GHC.Stats.$fReadGCDetails_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:37.686626224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadList_info
.type GHC.Stats.$fReadGCDetails_$creadList_info, @object
GHC.Stats.$fReadGCDetails_$creadList_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+352


==================== Asm code ====================
2018-03-16 16:07:37.688511357 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_closure
.type GHC.Stats.$fReadGCDetails_closure, @object
GHC.Stats.$fReadGCDetails_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_closure+1
	.quad	GHC.Stats.$fReadGCDetails_$creadList_closure+1
	.quad	GHC.Stats.$fReadGCDetails1_closure+2
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.690477486 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tcRTSStats2_bytes
.type GHC.Stats.$tcRTSStats2_bytes, @object
GHC.Stats.$tcRTSStats2_bytes:
	.asciz "RTSStats"


==================== Asm code ====================
2018-03-16 16:07:37.693163604 UTC

.section .data
.align 8
.align 1
lexeme5_rcHqP_closure:
	.quad	lexeme5_rcHqP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.694174557 UTC

.section .text
.align 8
lexeme5_rcHqP_entry:
_ccL1d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL1e
_ccL1f:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL1c
_ccL1b:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.$tcRTSStats2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL1e:
	jmp *-16(%r13)
_ccL1c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme5_rcHqP_entry, .-lexeme5_rcHqP_entry


==================== Asm code ====================
2018-03-16 16:07:37.694906191 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme5_rcHqP_info:
	.quad	lexeme5_rcHqP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.696906403 UTC

.section .data
.align 8
.align 1
lexeme6_rcHqQ_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	lexeme5_rcHqP_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.698823937 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ds3_rcHqR_bytes:
	.asciz "gcs"


==================== Asm code ====================
2018-03-16 16:07:37.702478165 UTC

.section .data
.align 8
.align 1
ds4_rcHqS_closure:
	.quad	ds4_rcHqS_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.70341265 UTC

.section .text
.align 8
ds4_rcHqS_entry:
_ccL1v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL1w
_ccL1x:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL1u
_ccL1t:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $ds3_rcHqR_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL1w:
	jmp *-16(%r13)
_ccL1u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size ds4_rcHqS_entry, .-ds4_rcHqS_entry


==================== Asm code ====================
2018-03-16 16:07:37.704132707 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_rcHqS_info:
	.quad	ds4_rcHqS_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.705974737 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl73_rcHqT_bytes:
	.asciz "major_gcs"


==================== Asm code ====================
2018-03-16 16:07:37.70869172 UTC

.section .data
.align 8
.align 1
lvl74_rcHqU_closure:
	.quad	lvl74_rcHqU_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.709783491 UTC

.section .text
.align 8
lvl74_rcHqU_entry:
_ccL1M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL1N
_ccL1O:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL1L
_ccL1K:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl73_rcHqT_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL1N:
	jmp *-16(%r13)
_ccL1L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl74_rcHqU_entry, .-lvl74_rcHqU_entry


==================== Asm code ====================
2018-03-16 16:07:37.710542509 UTC

.section .data.rel.ro
.align 8
.align 1
lvl74_rcHqU_info:
	.quad	lvl74_rcHqU_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.712276484 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl75_rcHqV_bytes:
	.asciz "allocated_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.715006894 UTC

.section .data
.align 8
.align 1
lvl76_rcHqW_closure:
	.quad	lvl76_rcHqW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.715935829 UTC

.section .text
.align 8
lvl76_rcHqW_entry:
_ccL23:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL24
_ccL25:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL22
_ccL21:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl75_rcHqV_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL24:
	jmp *-16(%r13)
_ccL22:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl76_rcHqW_entry, .-lvl76_rcHqW_entry


==================== Asm code ====================
2018-03-16 16:07:37.716629343 UTC

.section .data.rel.ro
.align 8
.align 1
lvl76_rcHqW_info:
	.quad	lvl76_rcHqW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.718474975 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl77_rcHqX_bytes:
	.asciz "max_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.721284193 UTC

.section .data
.align 8
.align 1
lvl78_rcHqY_closure:
	.quad	lvl78_rcHqY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.722241375 UTC

.section .text
.align 8
lvl78_rcHqY_entry:
_ccL2k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL2l
_ccL2m:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL2j
_ccL2i:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl77_rcHqX_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL2l:
	jmp *-16(%r13)
_ccL2j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl78_rcHqY_entry, .-lvl78_rcHqY_entry


==================== Asm code ====================
2018-03-16 16:07:37.722955737 UTC

.section .data.rel.ro
.align 8
.align 1
lvl78_rcHqY_info:
	.quad	lvl78_rcHqY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.724821557 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl79_rcHqZ_bytes:
	.asciz "max_large_objects_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.727801217 UTC

.section .data
.align 8
.align 1
lvl80_rcHr0_closure:
	.quad	lvl80_rcHr0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.728792765 UTC

.section .text
.align 8
lvl80_rcHr0_entry:
_ccL2B:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL2C
_ccL2D:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL2A
_ccL2z:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl79_rcHqZ_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL2C:
	jmp *-16(%r13)
_ccL2A:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl80_rcHr0_entry, .-lvl80_rcHr0_entry


==================== Asm code ====================
2018-03-16 16:07:37.729569188 UTC

.section .data.rel.ro
.align 8
.align 1
lvl80_rcHr0_info:
	.quad	lvl80_rcHr0_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.731969979 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl81_rcHr1_bytes:
	.asciz "max_compact_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.735091812 UTC

.section .data
.align 8
.align 1
lvl82_rcHr2_closure:
	.quad	lvl82_rcHr2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.736024097 UTC

.section .text
.align 8
lvl82_rcHr2_entry:
_ccL2S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL2T
_ccL2U:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL2R
_ccL2Q:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl81_rcHr1_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL2T:
	jmp *-16(%r13)
_ccL2R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl82_rcHr2_entry, .-lvl82_rcHr2_entry


==================== Asm code ====================
2018-03-16 16:07:37.736758409 UTC

.section .data.rel.ro
.align 8
.align 1
lvl82_rcHr2_info:
	.quad	lvl82_rcHr2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.738549853 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl83_rcHr3_bytes:
	.asciz "max_slop_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.741352896 UTC

.section .data
.align 8
.align 1
lvl84_rcHr4_closure:
	.quad	lvl84_rcHr4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.74224611 UTC

.section .text
.align 8
lvl84_rcHr4_entry:
_ccL39:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL3a
_ccL3b:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL38
_ccL37:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl83_rcHr3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL3a:
	jmp *-16(%r13)
_ccL38:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl84_rcHr4_entry, .-lvl84_rcHr4_entry


==================== Asm code ====================
2018-03-16 16:07:37.742982879 UTC

.section .data.rel.ro
.align 8
.align 1
lvl84_rcHr4_info:
	.quad	lvl84_rcHr4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.744726999 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl85_rcHr5_bytes:
	.asciz "max_mem_in_use_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.747546923 UTC

.section .data
.align 8
.align 1
lvl86_rcHr6_closure:
	.quad	lvl86_rcHr6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.748454022 UTC

.section .text
.align 8
lvl86_rcHr6_entry:
_ccL3q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL3r
_ccL3s:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL3p
_ccL3o:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl85_rcHr5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL3r:
	jmp *-16(%r13)
_ccL3p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl86_rcHr6_entry, .-lvl86_rcHr6_entry


==================== Asm code ====================
2018-03-16 16:07:37.749130187 UTC

.section .data.rel.ro
.align 8
.align 1
lvl86_rcHr6_info:
	.quad	lvl86_rcHr6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.750929425 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl87_rcHr7_bytes:
	.asciz "cumulative_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.753626508 UTC

.section .data
.align 8
.align 1
lvl88_rcHr8_closure:
	.quad	lvl88_rcHr8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.754549196 UTC

.section .text
.align 8
lvl88_rcHr8_entry:
_ccL3H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL3I
_ccL3J:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL3G
_ccL3F:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl87_rcHr7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL3I:
	jmp *-16(%r13)
_ccL3G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl88_rcHr8_entry, .-lvl88_rcHr8_entry


==================== Asm code ====================
2018-03-16 16:07:37.755284646 UTC

.section .data.rel.ro
.align 8
.align 1
lvl88_rcHr8_info:
	.quad	lvl88_rcHr8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.757168316 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl89_rcHr9_bytes:
	.asciz "copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.760709683 UTC

.section .data
.align 8
.align 1
lvl90_rcHra_closure:
	.quad	lvl90_rcHra_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.761829298 UTC

.section .text
.align 8
lvl90_rcHra_entry:
_ccL3Y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL3Z
_ccL40:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL3X
_ccL3W:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl89_rcHr9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL3Z:
	jmp *-16(%r13)
_ccL3X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl90_rcHra_entry, .-lvl90_rcHra_entry


==================== Asm code ====================
2018-03-16 16:07:37.762519532 UTC

.section .data.rel.ro
.align 8
.align 1
lvl90_rcHra_info:
	.quad	lvl90_rcHra_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.764248283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl91_rcHrb_bytes:
	.asciz "par_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.767479591 UTC

.section .data
.align 8
.align 1
lvl92_rcHrc_closure:
	.quad	lvl92_rcHrc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.76838785 UTC

.section .text
.align 8
lvl92_rcHrc_entry:
_ccL4f:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL4g
_ccL4h:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL4e
_ccL4d:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl91_rcHrb_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL4g:
	jmp *-16(%r13)
_ccL4e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl92_rcHrc_entry, .-lvl92_rcHrc_entry


==================== Asm code ====================
2018-03-16 16:07:37.769077545 UTC

.section .data.rel.ro
.align 8
.align 1
lvl92_rcHrc_info:
	.quad	lvl92_rcHrc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.770911855 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl93_rcHrd_bytes:
	.asciz "cumulative_par_max_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.773824978 UTC

.section .data
.align 8
.align 1
lvl94_rcHre_closure:
	.quad	lvl94_rcHre_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.774800767 UTC

.section .text
.align 8
lvl94_rcHre_entry:
_ccL4w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL4x
_ccL4y:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL4v
_ccL4u:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl93_rcHrd_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL4x:
	jmp *-16(%r13)
_ccL4v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl94_rcHre_entry, .-lvl94_rcHre_entry


==================== Asm code ====================
2018-03-16 16:07:37.775540731 UTC

.section .data.rel.ro
.align 8
.align 1
lvl94_rcHre_info:
	.quad	lvl94_rcHre_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.777763482 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl95_rcHrf_bytes:
	.asciz "cumulative_par_balanced_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:37.780436884 UTC

.section .data
.align 8
.align 1
lvl96_rcHrg_closure:
	.quad	lvl96_rcHrg_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.781433695 UTC

.section .text
.align 8
lvl96_rcHrg_entry:
_ccL4N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL4O
_ccL4P:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL4M
_ccL4L:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl95_rcHrf_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL4O:
	jmp *-16(%r13)
_ccL4M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl96_rcHrg_entry, .-lvl96_rcHrg_entry


==================== Asm code ====================
2018-03-16 16:07:37.782172172 UTC

.section .data.rel.ro
.align 8
.align 1
lvl96_rcHrg_info:
	.quad	lvl96_rcHrg_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.784021688 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl97_rcHrh_bytes:
	.asciz "mutator_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:37.787032246 UTC

.section .data
.align 8
.align 1
lvl98_rcHri_closure:
	.quad	lvl98_rcHri_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.788035636 UTC

.section .text
.align 8
lvl98_rcHri_entry:
_ccL54:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL55
_ccL56:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL53
_ccL52:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl97_rcHrh_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL55:
	jmp *-16(%r13)
_ccL53:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl98_rcHri_entry, .-lvl98_rcHri_entry


==================== Asm code ====================
2018-03-16 16:07:37.788808922 UTC

.section .data.rel.ro
.align 8
.align 1
lvl98_rcHri_info:
	.quad	lvl98_rcHri_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.791334107 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl99_rcHrj_bytes:
	.asciz "mutator_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:37.794614066 UTC

.section .data
.align 8
.align 1
lvl100_rcHrk_closure:
	.quad	lvl100_rcHrk_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.795568358 UTC

.section .text
.align 8
lvl100_rcHrk_entry:
_ccL5l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL5m
_ccL5n:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL5k
_ccL5j:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl99_rcHrj_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL5m:
	jmp *-16(%r13)
_ccL5k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl100_rcHrk_entry, .-lvl100_rcHrk_entry


==================== Asm code ====================
2018-03-16 16:07:37.796291755 UTC

.section .data.rel.ro
.align 8
.align 1
lvl100_rcHrk_info:
	.quad	lvl100_rcHrk_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.798056046 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl101_rcHrl_bytes:
	.asciz "gc_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:37.800794809 UTC

.section .data
.align 8
.align 1
lvl102_rcHrm_closure:
	.quad	lvl102_rcHrm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.801794056 UTC

.section .text
.align 8
lvl102_rcHrm_entry:
_ccL5C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL5D
_ccL5E:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL5B
_ccL5A:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl101_rcHrl_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL5D:
	jmp *-16(%r13)
_ccL5B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl102_rcHrm_entry, .-lvl102_rcHrm_entry


==================== Asm code ====================
2018-03-16 16:07:37.8025038 UTC

.section .data.rel.ro
.align 8
.align 1
lvl102_rcHrm_info:
	.quad	lvl102_rcHrm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.804293241 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl103_rcHrn_bytes:
	.asciz "gc_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:37.807563607 UTC

.section .data
.align 8
.align 1
lvl104_rcHro_closure:
	.quad	lvl104_rcHro_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.808506186 UTC

.section .text
.align 8
lvl104_rcHro_entry:
_ccL5T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL5U
_ccL5V:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL5S
_ccL5R:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl103_rcHrn_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL5U:
	jmp *-16(%r13)
_ccL5S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl104_rcHro_entry, .-lvl104_rcHro_entry


==================== Asm code ====================
2018-03-16 16:07:37.809212429 UTC

.section .data.rel.ro
.align 8
.align 1
lvl104_rcHro_info:
	.quad	lvl104_rcHro_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.811152536 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl105_rcHrp_bytes:
	.asciz "cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:37.814013172 UTC

.section .data
.align 8
.align 1
lvl106_rcHrq_closure:
	.quad	lvl106_rcHrq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.814972316 UTC

.section .text
.align 8
lvl106_rcHrq_entry:
_ccL6a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL6b
_ccL6c:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL69
_ccL68:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl105_rcHrp_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL6b:
	jmp *-16(%r13)
_ccL69:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl106_rcHrq_entry, .-lvl106_rcHrq_entry


==================== Asm code ====================
2018-03-16 16:07:37.81573161 UTC

.section .data.rel.ro
.align 8
.align 1
lvl106_rcHrq_info:
	.quad	lvl106_rcHrq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.817993938 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl107_rcHrr_bytes:
	.asciz "elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:37.820769031 UTC

.section .data
.align 8
.align 1
lvl108_rcHrs_closure:
	.quad	lvl108_rcHrs_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.822310873 UTC

.section .text
.align 8
lvl108_rcHrs_entry:
_ccL6r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL6s
_ccL6t:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL6q
_ccL6p:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl107_rcHrr_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL6s:
	jmp *-16(%r13)
_ccL6q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl108_rcHrs_entry, .-lvl108_rcHrs_entry


==================== Asm code ====================
2018-03-16 16:07:37.823057554 UTC

.section .data.rel.ro
.align 8
.align 1
lvl108_rcHrs_info:
	.quad	lvl108_rcHrs_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.824791886 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl109_rcHrt_bytes:
	.asciz "gc"


==================== Asm code ====================
2018-03-16 16:07:37.827648553 UTC

.section .data
.align 8
.align 1
lvl110_rcHru_closure:
	.quad	lvl110_rcHru_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.828463038 UTC

.section .text
.align 8
lvl110_rcHru_entry:
_ccL6I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccL6J
_ccL6K:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccL6H
_ccL6G:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl109_rcHrt_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccL6J:
	jmp *-16(%r13)
_ccL6H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl110_rcHru_entry, .-lvl110_rcHru_entry


==================== Asm code ====================
2018-03-16 16:07:37.829210715 UTC

.section .data.rel.ro
.align 8
.align 1
lvl110_rcHru_info:
	.quad	lvl110_rcHru_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:37.831508897 UTC

.section .data
.align 8
.align 1
lvl111_rcHrv_closure:
	.quad	lvl111_rcHrv_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.832267117 UTC

.section .text
.align 8
lvl111_rcHrv_entry:
_ccL6W:
	movq %rsi,%rdi
	movl $Text.ParserCombinators.ReadPrec.minPrec_closure,%esi
	movl $GHC.Stats.$fReadGCDetails2_closure+2,%r14d
	jmp GHC.Read.list3_entry
	.size lvl111_rcHrv_entry, .-lvl111_rcHrv_entry


==================== Asm code ====================
2018-03-16 16:07:37.832912952 UTC

.section .data.rel.ro
.align 8
.align 1
lvl111_rcHrv_info:
	.quad	lvl111_rcHrv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScI2G_srt+304


==================== Asm code ====================
2018-03-16 16:07:37.912935329 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec1_closure
.type GHC.Stats.$w$creadPrec1_closure, @object
GHC.Stats.$w$creadPrec1_closure:
	.quad	GHC.Stats.$w$creadPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:37.914239056 UTC

.section .text
.align 8
sat_scHB9_entry:
_ccLaA:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccLaE
_ccLaD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq %r14,136(%rsp)
	movq 159(%rbx),%r14
	movq 167(%rbx),%rbx
	movq $GHC.Stats.RTSStats_con_info,-160(%r12)
	movq %rax,144(%rsp)
	movq 72(%rsp),%rax
	movq %rax,-152(%r12)
	movq 80(%rsp),%rax
	movq %rax,-144(%r12)
	movq 88(%rsp),%rax
	movq %rax,-136(%r12)
	movq 96(%rsp),%rax
	movq %rax,-128(%r12)
	movq 104(%rsp),%rax
	movq %rax,-120(%r12)
	movq 112(%rsp),%rax
	movq %rax,-112(%r12)
	movq 120(%rsp),%rax
	movq %rax,-104(%r12)
	movq 128(%rsp),%rax
	movq %rax,-96(%r12)
	movq 136(%rsp),%rax
	movq %rax,-88(%r12)
	movq 144(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -159(%r12),%r14
	movq 64(%rsp),%rax
	movq %rax,%rbx
	jmp stg_ap_p_fast
_ccLaE:
	movq $168,904(%r13)
	jmp *-8(%r13)
	.size sat_scHB9_entry, .-sat_scHB9_entry


==================== Asm code ====================
2018-03-16 16:07:37.915188434 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHB9_info:
	.quad	sat_scHB9_entry
	.quad	21
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:37.916247118 UTC

.section .text
.align 8
sat_scHBc_entry:
_ccLaI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLaJ
_ccLaK:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccLaM
_ccLaL:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq %rax,136(%rsp)
	movq 151(%rbx),%rax
	movq 159(%rbx),%rbx
	movq $sat_scHB9_info,-168(%r12)
	movq %rcx,144(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-160(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-152(%r12)
	movq 80(%rsp),%rcx
	movq %rcx,-144(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-136(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-128(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-120(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-112(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-104(%r12)
	movq 128(%rsp),%rcx
	movq %rcx,-96(%r12)
	movq 136(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLaF_info,-8(%rbp)
	leaq -167(%r12),%rsi
	movl $lvl72_rcHqO_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLaM:
	movq $176,904(%r13)
_ccLaJ:
	jmp *-8(%r13)
	.size sat_scHBc_entry, .-sat_scHBc_entry


==================== Asm code ====================
2018-03-16 16:07:37.917314832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBc_info:
	.quad	sat_scHBc_entry
	.quad	20
	.quad	12884901896
	.quad	4294967301
	.quad	ScI2G_srt+136


==================== Asm code ====================
2018-03-16 16:07:37.918075895 UTC

.section .text
.align 8
_ccLaF:
_ccLaF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLaP
_ccLaO:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLaP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLaF, .-_ccLaF


==================== Asm code ====================
2018-03-16 16:07:37.91874493 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLaF_info:
	.quad	_ccLaF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.919741617 UTC

.section .text
.align 8
sat_scHBd_entry:
_ccLaQ:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccLaU
_ccLaT:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq 159(%rbx),%rbx
	movq $sat_scHBc_info,-160(%r12)
	movq %r14,136(%rsp)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -159(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl111_rcHrv_closure+2,%esi
	movl $lvl110_rcHru_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLaU:
	movq $168,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBd_entry, .-sat_scHBd_entry


==================== Asm code ====================
2018-03-16 16:07:37.920786498 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBd_info:
	.quad	sat_scHBd_entry
	.quad	20
	.quad	3458764543885312008
	.quad	4294967301
	.quad	ScI2G_srt+136


==================== Asm code ====================
2018-03-16 16:07:37.921855989 UTC

.section .text
.align 8
sat_scHBg_entry:
_ccLaY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLaZ
_ccLb0:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccLb2
_ccLb1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq 151(%rbx),%rbx
	movq $sat_scHBd_info,-160(%r12)
	movq %rax,136(%rsp)
	movq 64(%rsp),%rax
	movq %rax,-152(%r12)
	movq 72(%rsp),%rax
	movq %rax,-144(%r12)
	movq 80(%rsp),%rax
	movq %rax,-136(%r12)
	movq 88(%rsp),%rax
	movq %rax,-128(%r12)
	movq 96(%rsp),%rax
	movq %rax,-120(%r12)
	movq 104(%rsp),%rax
	movq %rax,-112(%r12)
	movq 112(%rsp),%rax
	movq %rax,-104(%r12)
	movq 120(%rsp),%rax
	movq %rax,-96(%r12)
	movq 128(%rsp),%rax
	movq %rax,-88(%r12)
	movq 136(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLaV_info,-8(%rbp)
	leaq -159(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLb2:
	movq $168,904(%r13)
_ccLaZ:
	jmp *-8(%r13)
	.size sat_scHBg_entry, .-sat_scHBg_entry


==================== Asm code ====================
2018-03-16 16:07:37.922883627 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBg_info:
	.quad	sat_scHBg_entry
	.quad	19
	.quad	3458764612604788744
	.quad	4294967301
	.quad	ScI2G_srt+136


==================== Asm code ====================
2018-03-16 16:07:37.92363853 UTC

.section .text
.align 8
_ccLaV:
_ccLaV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLb5
_ccLb4:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLb5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLaV, .-_ccLaV


==================== Asm code ====================
2018-03-16 16:07:37.924314021 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLaV_info:
	.quad	_ccLaV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.925329475 UTC

.section .text
.align 8
sat_scHBh_entry:
_ccLb6:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccLba
_ccLb9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq 151(%rbx),%rbx
	movq $sat_scHBg_info,-152(%r12)
	movq %r11,128(%rsp)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -151(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl108_rcHrs_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLba:
	movq $160,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBh_entry, .-sat_scHBh_entry


==================== Asm code ====================
2018-03-16 16:07:37.926266771 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBh_info:
	.quad	sat_scHBh_entry
	.quad	19
	.quad	-2305842807350231032
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.927307102 UTC

.section .text
.align 8
sat_scHBk_entry:
_ccLbe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLbf
_ccLbg:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccLbi
_ccLbh:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq 143(%rbx),%rbx
	movq $sat_scHBh_info,-152(%r12)
	movq %r11,128(%rsp)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLbb_info,-8(%rbp)
	leaq -151(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLbi:
	movq $160,904(%r13)
_ccLbf:
	jmp *-8(%r13)
	.size sat_scHBk_entry, .-sat_scHBk_entry


==================== Asm code ====================
2018-03-16 16:07:37.928333134 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBk_info:
	.quad	sat_scHBk_entry
	.quad	18
	.quad	-2305842807350231032
	.quad	4294967301
	.quad	ScI2G_srt+128


==================== Asm code ====================
2018-03-16 16:07:37.929115666 UTC

.section .text
.align 8
_ccLbb:
_ccLbb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLbl
_ccLbk:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLbl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLbb, .-_ccLbb


==================== Asm code ====================
2018-03-16 16:07:37.929832141 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLbb_info:
	.quad	_ccLbb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.930425209 UTC

.section .data.rel.ro
.align 8
.align 1
ucLge_srtd:
	.quad	ScI2G_srt+128
	.quad	33
	.quad	8053063727


==================== Asm code ====================
2018-03-16 16:07:37.931427786 UTC

.section .text
.align 8
sat_scHBl_entry:
_ccLbm:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccLbq
_ccLbp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq 143(%rbx),%rbx
	movq $sat_scHBk_info,-144(%r12)
	movq %r10,120(%rsp)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -143(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl106_rcHrq_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLbq:
	movq $152,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBl_entry, .-sat_scHBl_entry


==================== Asm code ====================
2018-03-16 16:07:37.932441652 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBl_info:
	.quad	sat_scHBl_entry
	.quad	18
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLge_srtd


==================== Asm code ====================
2018-03-16 16:07:37.933089021 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgf_srtd:
	.quad	ScI2G_srt+128
	.quad	33
	.quad	8053063727


==================== Asm code ====================
2018-03-16 16:07:37.934266364 UTC

.section .text
.align 8
sat_scHBo_entry:
_ccLbu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLbv
_ccLbw:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccLby
_ccLbx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq 135(%rbx),%rbx
	movq $sat_scHBl_info,-144(%r12)
	movq %r10,120(%rsp)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLbr_info,-8(%rbp)
	leaq -143(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLby:
	movq $152,904(%r13)
_ccLbv:
	jmp *-8(%r13)
	.size sat_scHBo_entry, .-sat_scHBo_entry


==================== Asm code ====================
2018-03-16 16:07:37.935311851 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBo_info:
	.quad	sat_scHBo_entry
	.quad	17
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgf_srtd


==================== Asm code ====================
2018-03-16 16:07:37.936102755 UTC

.section .text
.align 8
_ccLbr:
_ccLbr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLbB
_ccLbA:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLbB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLbr, .-_ccLbr


==================== Asm code ====================
2018-03-16 16:07:37.936830194 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLbr_info:
	.quad	_ccLbr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.937770263 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgg_srtd:
	.quad	ScI2G_srt+128
	.quad	34
	.quad	16642998319


==================== Asm code ====================
2018-03-16 16:07:37.939394224 UTC

.section .text
.align 8
sat_scHBp_entry:
_ccLbC:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccLbG
_ccLbF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 135(%rbx),%rbx
	movq $sat_scHBo_info,-136(%r12)
	movq %r9,112(%rsp)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -135(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl104_rcHro_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLbG:
	movq $144,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBp_entry, .-sat_scHBp_entry


==================== Asm code ====================
2018-03-16 16:07:37.940304951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBp_info:
	.quad	sat_scHBp_entry
	.quad	17
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgg_srtd


==================== Asm code ====================
2018-03-16 16:07:37.940895357 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgh_srtd:
	.quad	ScI2G_srt+128
	.quad	34
	.quad	16642998319


==================== Asm code ====================
2018-03-16 16:07:37.94201817 UTC

.section .text
.align 8
sat_scHBs_entry:
_ccLbK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLbL
_ccLbM:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccLbO
_ccLbN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq 127(%rbx),%rbx
	movq $sat_scHBp_info,-136(%r12)
	movq %r9,112(%rsp)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLbH_info,-8(%rbp)
	leaq -135(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLbO:
	movq $144,904(%r13)
_ccLbL:
	jmp *-8(%r13)
	.size sat_scHBs_entry, .-sat_scHBs_entry


==================== Asm code ====================
2018-03-16 16:07:37.942939568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBs_info:
	.quad	sat_scHBs_entry
	.quad	16
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgh_srtd


==================== Asm code ====================
2018-03-16 16:07:37.943706223 UTC

.section .text
.align 8
_ccLbH:
_ccLbH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLbR
_ccLbQ:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLbR:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLbH, .-_ccLbH


==================== Asm code ====================
2018-03-16 16:07:37.944393882 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLbH_info:
	.quad	_ccLbH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.944988047 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgi_srtd:
	.quad	ScI2G_srt+128
	.quad	35
	.quad	33822867503


==================== Asm code ====================
2018-03-16 16:07:37.946067012 UTC

.section .text
.align 8
sat_scHBt_entry:
_ccLbS:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccLbW
_ccLbV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq 127(%rbx),%rbx
	movq $sat_scHBs_info,-128(%r12)
	movq %r8,104(%rsp)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -127(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl102_rcHrm_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLbW:
	movq $136,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBt_entry, .-sat_scHBt_entry


==================== Asm code ====================
2018-03-16 16:07:37.94701278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBt_info:
	.quad	sat_scHBt_entry
	.quad	16
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgi_srtd


==================== Asm code ====================
2018-03-16 16:07:37.947627566 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgj_srtd:
	.quad	ScI2G_srt+128
	.quad	35
	.quad	33822867503


==================== Asm code ====================
2018-03-16 16:07:37.948681864 UTC

.section .text
.align 8
sat_scHBw_entry:
_ccLc0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLc1
_ccLc2:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccLc4
_ccLc3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq 119(%rbx),%rbx
	movq $sat_scHBt_info,-128(%r12)
	movq %r8,104(%rsp)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLbX_info,-8(%rbp)
	leaq -127(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLc4:
	movq $136,904(%r13)
_ccLc1:
	jmp *-8(%r13)
	.size sat_scHBw_entry, .-sat_scHBw_entry


==================== Asm code ====================
2018-03-16 16:07:37.949769264 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBw_info:
	.quad	sat_scHBw_entry
	.quad	15
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgj_srtd


==================== Asm code ====================
2018-03-16 16:07:37.950517805 UTC

.section .text
.align 8
_ccLbX:
_ccLbX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLc7
_ccLc6:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLc7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLbX, .-_ccLbX


==================== Asm code ====================
2018-03-16 16:07:37.951206496 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLbX_info:
	.quad	_ccLbX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.951823809 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgk_srtd:
	.quad	ScI2G_srt+128
	.quad	36
	.quad	68182605871


==================== Asm code ====================
2018-03-16 16:07:37.952718318 UTC

.section .text
.align 8
sat_scHBx_entry:
_ccLc8:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccLcc
_ccLcb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq 119(%rbx),%rbx
	movq $sat_scHBw_info,-120(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -119(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl100_rcHrk_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLcc:
	movq $128,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBx_entry, .-sat_scHBx_entry


==================== Asm code ====================
2018-03-16 16:07:37.953750063 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBx_info:
	.quad	sat_scHBx_entry
	.quad	15
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgk_srtd


==================== Asm code ====================
2018-03-16 16:07:37.954375673 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgl_srtd:
	.quad	ScI2G_srt+128
	.quad	36
	.quad	68182605871


==================== Asm code ====================
2018-03-16 16:07:37.955449291 UTC

.section .text
.align 8
sat_scHBA_entry:
_ccLcg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLch
_ccLci:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccLck
_ccLcj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq $sat_scHBx_info,-120(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLcd_info,-8(%rbp)
	leaq -119(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLck:
	movq $128,904(%r13)
_ccLch:
	jmp *-8(%r13)
	.size sat_scHBA_entry, .-sat_scHBA_entry


==================== Asm code ====================
2018-03-16 16:07:37.956386591 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBA_info:
	.quad	sat_scHBA_entry
	.quad	14
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgl_srtd


==================== Asm code ====================
2018-03-16 16:07:37.95714841 UTC

.section .text
.align 8
_ccLcd:
_ccLcd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLcn
_ccLcm:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLcn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLcd, .-_ccLcd


==================== Asm code ====================
2018-03-16 16:07:37.957879046 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLcd_info:
	.quad	_ccLcd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.958474215 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgm_srtd:
	.quad	ScI2G_srt+128
	.quad	37
	.quad	136902082607


==================== Asm code ====================
2018-03-16 16:07:37.959409661 UTC

.section .text
.align 8
sat_scHBB_entry:
_ccLco:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccLcs
_ccLcr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq $sat_scHBA_info,-112(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl66_rcHqI_closure+2,%esi
	movl $lvl98_rcHri_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLcs:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBB_entry, .-sat_scHBB_entry


==================== Asm code ====================
2018-03-16 16:07:37.960263642 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBB_info:
	.quad	sat_scHBB_entry
	.quad	14
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgm_srtd


==================== Asm code ====================
2018-03-16 16:07:37.960862592 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgn_srtd:
	.quad	ScI2G_srt+128
	.quad	37
	.quad	136902082607


==================== Asm code ====================
2018-03-16 16:07:37.961928482 UTC

.section .text
.align 8
sat_scHBE_entry:
_ccLcw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLcx
_ccLcy:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccLcA
_ccLcz:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq 103(%rbx),%rbx
	movq $sat_scHBB_info,-112(%r12)
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLct_info,-8(%rbp)
	leaq -111(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLcA:
	movq $120,904(%r13)
_ccLcx:
	jmp *-8(%r13)
	.size sat_scHBE_entry, .-sat_scHBE_entry


==================== Asm code ====================
2018-03-16 16:07:37.962853847 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBE_info:
	.quad	sat_scHBE_entry
	.quad	13
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgn_srtd


==================== Asm code ====================
2018-03-16 16:07:37.963674673 UTC

.section .text
.align 8
_ccLct:
_ccLct:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLcD
_ccLcC:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLcD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLct, .-_ccLct


==================== Asm code ====================
2018-03-16 16:07:37.964358401 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLct_info:
	.quad	_ccLct
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.965010928 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgo_srtd:
	.quad	ScI2G_srt+104
	.quad	41
	.quad	2194728288633


==================== Asm code ====================
2018-03-16 16:07:37.966057499 UTC

.section .text
.align 8
sat_scHBF_entry:
_ccLcE:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccLcI
_ccLcH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 103(%rbx),%rbx
	movq $sat_scHBE_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -103(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl96_rcHrg_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLcI:
	movq $112,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBF_entry, .-sat_scHBF_entry


==================== Asm code ====================
2018-03-16 16:07:37.966965543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBF_info:
	.quad	sat_scHBF_entry
	.quad	13
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgo_srtd


==================== Asm code ====================
2018-03-16 16:07:37.968173839 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgp_srtd:
	.quad	ScI2G_srt+104
	.quad	41
	.quad	2194728288633


==================== Asm code ====================
2018-03-16 16:07:37.969171195 UTC

.section .text
.align 8
sat_scHBI_entry:
_ccLcM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLcN
_ccLcO:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccLcQ
_ccLcP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq $sat_scHBF_info,-104(%r12)
	movq %rdx,80(%rsp)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLcJ_info,-8(%rbp)
	leaq -103(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLcQ:
	movq $112,904(%r13)
_ccLcN:
	jmp *-8(%r13)
	.size sat_scHBI_entry, .-sat_scHBI_entry


==================== Asm code ====================
2018-03-16 16:07:37.970743677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBI_info:
	.quad	sat_scHBI_entry
	.quad	12
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgp_srtd


==================== Asm code ====================
2018-03-16 16:07:37.971483785 UTC

.section .text
.align 8
_ccLcJ:
_ccLcJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLcT
_ccLcS:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLcT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLcJ, .-_ccLcJ


==================== Asm code ====================
2018-03-16 16:07:37.972119074 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLcJ_info:
	.quad	_ccLcJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.972718367 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgq_srtd:
	.quad	ScI2G_srt+104
	.quad	42
	.quad	4393751544185


==================== Asm code ====================
2018-03-16 16:07:37.97370879 UTC

.section .text
.align 8
sat_scHBJ_entry:
_ccLcU:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccLcY
_ccLcX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq $sat_scHBI_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -95(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl94_rcHre_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLcY:
	movq $104,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBJ_entry, .-sat_scHBJ_entry


==================== Asm code ====================
2018-03-16 16:07:37.974532657 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBJ_info:
	.quad	sat_scHBJ_entry
	.quad	12
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgq_srtd


==================== Asm code ====================
2018-03-16 16:07:37.975095782 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgr_srtd:
	.quad	ScI2G_srt+104
	.quad	42
	.quad	4393751544185


==================== Asm code ====================
2018-03-16 16:07:37.97601074 UTC

.section .text
.align 8
sat_scHBM_entry:
_ccLd2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLd3
_ccLd4:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccLd6
_ccLd5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq 87(%rbx),%rbx
	movq $sat_scHBJ_info,-96(%r12)
	movq %rcx,72(%rsp)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLcZ_info,-8(%rbp)
	leaq -95(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLd6:
	movq $104,904(%r13)
_ccLd3:
	jmp *-8(%r13)
	.size sat_scHBM_entry, .-sat_scHBM_entry


==================== Asm code ====================
2018-03-16 16:07:37.976858326 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBM_info:
	.quad	sat_scHBM_entry
	.quad	11
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgr_srtd


==================== Asm code ====================
2018-03-16 16:07:37.977681067 UTC

.section .text
.align 8
_ccLcZ:
_ccLcZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLd9
_ccLd8:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLd9:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLcZ, .-_ccLcZ


==================== Asm code ====================
2018-03-16 16:07:37.978369021 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLcZ_info:
	.quad	_ccLcZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.979003171 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgs_srtd:
	.quad	ScI2G_srt+104
	.quad	43
	.quad	8791798055289


==================== Asm code ====================
2018-03-16 16:07:37.979912244 UTC

.section .text
.align 8
sat_scHBN_entry:
_ccLda:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccLde
_ccLdd:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq 87(%rbx),%rbx
	movq $sat_scHBM_info,-88(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -87(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl92_rcHrc_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLde:
	movq $96,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBN_entry, .-sat_scHBN_entry


==================== Asm code ====================
2018-03-16 16:07:37.980743815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBN_info:
	.quad	sat_scHBN_entry
	.quad	11
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgs_srtd


==================== Asm code ====================
2018-03-16 16:07:37.981426152 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgt_srtd:
	.quad	ScI2G_srt+104
	.quad	43
	.quad	8791798055289


==================== Asm code ====================
2018-03-16 16:07:37.982344611 UTC

.section .text
.align 8
sat_scHBQ_entry:
_ccLdi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLdj
_ccLdk:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccLdm
_ccLdl:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq $sat_scHBN_info,-88(%r12)
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLdf_info,-8(%rbp)
	leaq -87(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLdm:
	movq $96,904(%r13)
_ccLdj:
	jmp *-8(%r13)
	.size sat_scHBQ_entry, .-sat_scHBQ_entry


==================== Asm code ====================
2018-03-16 16:07:37.983159733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBQ_info:
	.quad	sat_scHBQ_entry
	.quad	10
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgt_srtd


==================== Asm code ====================
2018-03-16 16:07:37.983957734 UTC

.section .text
.align 8
_ccLdf:
_ccLdf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLdp
_ccLdo:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLdp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLdf, .-_ccLdf


==================== Asm code ====================
2018-03-16 16:07:37.984630435 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLdf_info:
	.quad	_ccLdf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.98527646 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgu_srtd:
	.quad	ScI2G_srt+104
	.quad	44
	.quad	17587891077497


==================== Asm code ====================
2018-03-16 16:07:37.986177129 UTC

.section .text
.align 8
sat_scHBR_entry:
_ccLdq:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccLdu
_ccLdt:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq $sat_scHBQ_info,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -79(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl90_rcHra_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLdu:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBR_entry, .-sat_scHBR_entry


==================== Asm code ====================
2018-03-16 16:07:37.986977488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBR_info:
	.quad	sat_scHBR_entry
	.quad	10
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgu_srtd


==================== Asm code ====================
2018-03-16 16:07:37.98757733 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgv_srtd:
	.quad	ScI2G_srt+104
	.quad	44
	.quad	17587891077497


==================== Asm code ====================
2018-03-16 16:07:37.988449178 UTC

.section .text
.align 8
sat_scHBU_entry:
_ccLdy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLdz
_ccLdA:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccLdC
_ccLdB:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	movq $sat_scHBR_info,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLdv_info,-8(%rbp)
	leaq -79(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLdC:
	movq $88,904(%r13)
_ccLdz:
	jmp *-8(%r13)
	.size sat_scHBU_entry, .-sat_scHBU_entry


==================== Asm code ====================
2018-03-16 16:07:37.989756945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBU_info:
	.quad	sat_scHBU_entry
	.quad	9
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgv_srtd


==================== Asm code ====================
2018-03-16 16:07:37.990476152 UTC

.section .text
.align 8
_ccLdv:
_ccLdv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLdF
_ccLdE:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLdF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLdv, .-_ccLdv


==================== Asm code ====================
2018-03-16 16:07:37.991099008 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLdv_info:
	.quad	_ccLdv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.991655841 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgw_srtd:
	.quad	ScI2G_srt+104
	.quad	45
	.quad	35180077121913


==================== Asm code ====================
2018-03-16 16:07:37.992543288 UTC

.section .text
.align 8
sat_scHBV_entry:
_ccLdG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccLdK
_ccLdJ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	movq $sat_scHBU_info,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -71(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl88_rcHr8_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLdK:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBV_entry, .-sat_scHBV_entry


==================== Asm code ====================
2018-03-16 16:07:37.993416399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBV_info:
	.quad	sat_scHBV_entry
	.quad	9
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgw_srtd


==================== Asm code ====================
2018-03-16 16:07:37.994070002 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgx_srtd:
	.quad	ScI2G_srt+104
	.quad	45
	.quad	35180077121913


==================== Asm code ====================
2018-03-16 16:07:37.995026904 UTC

.section .text
.align 8
sat_scHBY_entry:
_ccLdO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLdP
_ccLdQ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccLdS
_ccLdR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	movq $sat_scHBV_info,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLdL_info,-8(%rbp)
	leaq -71(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLdS:
	movq $80,904(%r13)
_ccLdP:
	jmp *-8(%r13)
	.size sat_scHBY_entry, .-sat_scHBY_entry


==================== Asm code ====================
2018-03-16 16:07:37.995855958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBY_info:
	.quad	sat_scHBY_entry
	.quad	8
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgx_srtd


==================== Asm code ====================
2018-03-16 16:07:37.996625138 UTC

.section .text
.align 8
_ccLdL:
_ccLdL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLdV
_ccLdU:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLdV:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLdL, .-_ccLdL


==================== Asm code ====================
2018-03-16 16:07:37.997379202 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLdL_info:
	.quad	_ccLdL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:37.998564461 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgy_srtd:
	.quad	ScI2G_srt+104
	.quad	46
	.quad	70364449210745


==================== Asm code ====================
2018-03-16 16:07:37.999504325 UTC

.section .text
.align 8
sat_scHBZ_entry:
_ccLdW:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccLe0
_ccLdZ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	movq $sat_scHBY_info,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -63(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl86_rcHr6_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLe0:
	movq $72,904(%r13)
	jmp *-8(%r13)
	.size sat_scHBZ_entry, .-sat_scHBZ_entry


==================== Asm code ====================
2018-03-16 16:07:38.000224784 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHBZ_info:
	.quad	sat_scHBZ_entry
	.quad	8
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgy_srtd


==================== Asm code ====================
2018-03-16 16:07:38.000747825 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgz_srtd:
	.quad	ScI2G_srt+104
	.quad	46
	.quad	70364449210745


==================== Asm code ====================
2018-03-16 16:07:38.001702137 UTC

.section .text
.align 8
sat_scHC2_entry:
_ccLe4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLe5
_ccLe6:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccLe8
_ccLe7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	movq $sat_scHBZ_info,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLe1_info,-8(%rbp)
	leaq -63(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLe8:
	movq $72,904(%r13)
_ccLe5:
	jmp *-8(%r13)
	.size sat_scHC2_entry, .-sat_scHC2_entry


==================== Asm code ====================
2018-03-16 16:07:38.002435033 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHC2_info:
	.quad	sat_scHC2_entry
	.quad	7
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgz_srtd


==================== Asm code ====================
2018-03-16 16:07:38.003151602 UTC

.section .text
.align 8
_ccLe1:
_ccLe1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLeb
_ccLea:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLeb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLe1, .-_ccLe1


==================== Asm code ====================
2018-03-16 16:07:38.003798822 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLe1_info:
	.quad	_ccLe1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.004374073 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgA_srtd:
	.quad	ScI2G_srt+104
	.quad	47
	.quad	140733193388409


==================== Asm code ====================
2018-03-16 16:07:38.005174146 UTC

.section .text
.align 8
sat_scHC3_entry:
_ccLec:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccLeg
_ccLef:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	movq $sat_scHC2_info,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -55(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl84_rcHr4_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLeg:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_scHC3_entry, .-sat_scHC3_entry


==================== Asm code ====================
2018-03-16 16:07:38.00600158 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHC3_info:
	.quad	sat_scHC3_entry
	.quad	7
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgA_srtd


==================== Asm code ====================
2018-03-16 16:07:38.00660305 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgB_srtd:
	.quad	ScI2G_srt+104
	.quad	47
	.quad	140733193388409


==================== Asm code ====================
2018-03-16 16:07:38.007432522 UTC

.section .text
.align 8
sat_scHC6_entry:
_ccLek:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLel
_ccLem:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccLeo
_ccLen:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_scHC3_info,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLeh_info,-8(%rbp)
	leaq -55(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLeo:
	movq $64,904(%r13)
_ccLel:
	jmp *-8(%r13)
	.size sat_scHC6_entry, .-sat_scHC6_entry


==================== Asm code ====================
2018-03-16 16:07:38.008208252 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHC6_info:
	.quad	sat_scHC6_entry
	.quad	6
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgB_srtd


==================== Asm code ====================
2018-03-16 16:07:38.008910356 UTC

.section .text
.align 8
_ccLeh:
_ccLeh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLer
_ccLeq:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLer:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLeh, .-_ccLeh


==================== Asm code ====================
2018-03-16 16:07:38.010147531 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLeh_info:
	.quad	_ccLeh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.010725963 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgC_srtd:
	.quad	ScI2G_srt+104
	.quad	48
	.quad	281470681743737


==================== Asm code ====================
2018-03-16 16:07:38.011539576 UTC

.section .text
.align 8
sat_scHC7_entry:
_ccLes:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccLew
_ccLev:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_scHC6_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl82_rcHr2_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLew:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scHC7_entry, .-sat_scHC7_entry


==================== Asm code ====================
2018-03-16 16:07:38.012311812 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHC7_info:
	.quad	sat_scHC7_entry
	.quad	6
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgC_srtd


==================== Asm code ====================
2018-03-16 16:07:38.012891458 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgD_srtd:
	.quad	ScI2G_srt+104
	.quad	48
	.quad	281470681743737


==================== Asm code ====================
2018-03-16 16:07:38.013828311 UTC

.section .text
.align 8
sat_scHCa_entry:
_ccLeA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLeB
_ccLeC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccLeE
_ccLeD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_scHC7_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLex_info,-8(%rbp)
	leaq -47(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLeE:
	movq $56,904(%r13)
_ccLeB:
	jmp *-8(%r13)
	.size sat_scHCa_entry, .-sat_scHCa_entry


==================== Asm code ====================
2018-03-16 16:07:38.014559991 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCa_info:
	.quad	sat_scHCa_entry
	.quad	5
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgD_srtd


==================== Asm code ====================
2018-03-16 16:07:38.015314134 UTC

.section .text
.align 8
_ccLex:
_ccLex:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLeH
_ccLeG:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLeH:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLex, .-_ccLex


==================== Asm code ====================
2018-03-16 16:07:38.015935595 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLex_info:
	.quad	_ccLex
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.016515515 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgE_srtd:
	.quad	ScI2G_srt+104
	.quad	49
	.quad	562945658454393


==================== Asm code ====================
2018-03-16 16:07:38.017422683 UTC

.section .text
.align 8
sat_scHCb_entry:
_ccLeI:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccLeM
_ccLeL:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_scHCa_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -39(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl80_rcHr0_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLeM:
	movq $48,904(%r13)
	jmp *-8(%r13)
	.size sat_scHCb_entry, .-sat_scHCb_entry


==================== Asm code ====================
2018-03-16 16:07:38.018179568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCb_info:
	.quad	sat_scHCb_entry
	.quad	5
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgE_srtd


==================== Asm code ====================
2018-03-16 16:07:38.018752074 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgF_srtd:
	.quad	ScI2G_srt+104
	.quad	49
	.quad	562945658454393


==================== Asm code ====================
2018-03-16 16:07:38.019566812 UTC

.section .text
.align 8
sat_scHCe_entry:
_ccLeQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLeR
_ccLeS:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccLeU
_ccLeT:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_scHCb_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLeN_info,-8(%rbp)
	leaq -39(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLeU:
	movq $48,904(%r13)
_ccLeR:
	jmp *-8(%r13)
	.size sat_scHCe_entry, .-sat_scHCe_entry


==================== Asm code ====================
2018-03-16 16:07:38.020283051 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCe_info:
	.quad	sat_scHCe_entry
	.quad	4
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgF_srtd


==================== Asm code ====================
2018-03-16 16:07:38.021012348 UTC

.section .text
.align 8
_ccLeN:
_ccLeN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLeX
_ccLeW:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLeX:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLeN, .-_ccLeN


==================== Asm code ====================
2018-03-16 16:07:38.021761951 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLeN_info:
	.quad	_ccLeN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.022372981 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgG_srtd:
	.quad	ScI2G_srt+104
	.quad	50
	.quad	1125895611875705


==================== Asm code ====================
2018-03-16 16:07:38.023231624 UTC

.section .text
.align 8
sat_scHCf_entry:
_ccLeY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccLf2
_ccLf1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_scHCe_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -31(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl78_rcHqY_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLf2:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_scHCf_entry, .-sat_scHCf_entry


==================== Asm code ====================
2018-03-16 16:07:38.023979304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCf_info:
	.quad	sat_scHCf_entry
	.quad	4
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgG_srtd


==================== Asm code ====================
2018-03-16 16:07:38.024586107 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgH_srtd:
	.quad	ScI2G_srt+104
	.quad	50
	.quad	1125895611875705


==================== Asm code ====================
2018-03-16 16:07:38.027272152 UTC

.section .text
.align 8
sat_scHCi_entry:
_ccLf6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLf7
_ccLf8:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccLfa
_ccLf9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_scHCf_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLf3_info,-8(%rbp)
	leaq -31(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLfa:
	movq $40,904(%r13)
_ccLf7:
	jmp *-8(%r13)
	.size sat_scHCi_entry, .-sat_scHCi_entry


==================== Asm code ====================
2018-03-16 16:07:38.028038358 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCi_info:
	.quad	sat_scHCi_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgH_srtd


==================== Asm code ====================
2018-03-16 16:07:38.028809202 UTC

.section .text
.align 8
_ccLf3:
_ccLf3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLfd
_ccLfc:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLfd:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLf3, .-_ccLf3


==================== Asm code ====================
2018-03-16 16:07:38.030335064 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLf3_info:
	.quad	_ccLf3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.030926532 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgI_srtd:
	.quad	ScI2G_srt+104
	.quad	51
	.quad	2251795518718329


==================== Asm code ====================
2018-03-16 16:07:38.031818888 UTC

.section .text
.align 8
sat_scHCj_entry:
_ccLfe:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccLfi
_ccLfh:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_scHCi_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $lvl46_rcHqo_closure+2,%esi
	movl $lvl76_rcHqW_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLfi:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_scHCj_entry, .-sat_scHCj_entry


==================== Asm code ====================
2018-03-16 16:07:38.032551407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCj_info:
	.quad	sat_scHCj_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967301
	.quad	ucLgI_srtd


==================== Asm code ====================
2018-03-16 16:07:38.033226546 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgJ_srtd:
	.quad	ScI2G_srt+104
	.quad	51
	.quad	2251795518718329


==================== Asm code ====================
2018-03-16 16:07:38.034179477 UTC

.section .text
.align 8
sat_scHCm_entry:
_ccLfm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLfn
_ccLfo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccLfq
_ccLfp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_scHCj_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLfj_info,-8(%rbp)
	leaq -23(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLfq:
	movq $32,904(%r13)
_ccLfn:
	jmp *-8(%r13)
	.size sat_scHCm_entry, .-sat_scHCm_entry


==================== Asm code ====================
2018-03-16 16:07:38.034901899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCm_info:
	.quad	sat_scHCm_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967301
	.quad	ucLgJ_srtd


==================== Asm code ====================
2018-03-16 16:07:38.035658888 UTC

.section .text
.align 8
_ccLfj:
_ccLfj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLft
_ccLfs:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLft:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLfj, .-_ccLfj


==================== Asm code ====================
2018-03-16 16:07:38.036292703 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLfj_info:
	.quad	_ccLfj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.036891572 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgK_srtd:
	.quad	ScI2G_srt+80
	.quad	55
	.quad	36028762659228617


==================== Asm code ====================
2018-03-16 16:07:38.037811031 UTC

.section .text
.align 8
sat_scHCn_entry:
_ccLfu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccLfy
_ccLfx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_scHCm_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $ds2_rcHqe_closure+2,%esi
	movl $lvl74_rcHqU_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLfy:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_scHCn_entry, .-sat_scHCn_entry


==================== Asm code ====================
2018-03-16 16:07:38.038523507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCn_info:
	.quad	sat_scHCn_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967301
	.quad	ucLgK_srtd


==================== Asm code ====================
2018-03-16 16:07:38.039165851 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgL_srtd:
	.quad	ScI2G_srt+80
	.quad	55
	.quad	36028762659228617


==================== Asm code ====================
2018-03-16 16:07:38.039983535 UTC

.section .text
.align 8
sat_scHCq_entry:
_ccLfC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLfD
_ccLfE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccLfG
_ccLfF:
	movq 7(%rbx),%rax
	movq $sat_scHCn_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq $block_ccLfz_info,-8(%rbp)
	leaq -15(%r12),%rsi
	movl $lvl40_rcHqi_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLfG:
	movq $24,904(%r13)
_ccLfD:
	jmp *-8(%r13)
	.size sat_scHCq_entry, .-sat_scHCq_entry


==================== Asm code ====================
2018-03-16 16:07:38.040730266 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCq_info:
	.quad	sat_scHCq_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucLgL_srtd


==================== Asm code ====================
2018-03-16 16:07:38.04161077 UTC

.section .text
.align 8
_ccLfz:
_ccLfz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLfJ
_ccLfI:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLfJ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLfz, .-_ccLfz


==================== Asm code ====================
2018-03-16 16:07:38.042276577 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLfz_info:
	.quad	_ccLfz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.042879639 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgM_srtd:
	.quad	ScI2G_srt+80
	.quad	56
	.quad	72057559678192585


==================== Asm code ====================
2018-03-16 16:07:38.043634099 UTC

.section .text
.align 8
sat_scHCr_entry:
_ccLfK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLfO
_ccLfN:
	movq 7(%rbx),%rax
	movq $sat_scHCq_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	movl $n_rcHqf_closure+1,%edi
	movl $ds2_rcHqe_closure+2,%esi
	movl $ds4_rcHqS_closure,%r14d
	jmp GHC.Read.readField_entry
_ccLfO:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_scHCr_entry, .-sat_scHCr_entry


==================== Asm code ====================
2018-03-16 16:07:38.044350986 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCr_info:
	.quad	sat_scHCr_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucLgM_srtd


==================== Asm code ====================
2018-03-16 16:07:38.044966584 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgN_srtd:
	.quad	ScI2G_srt+80
	.quad	56
	.quad	72057559711747017


==================== Asm code ====================
2018-03-16 16:07:38.04590299 UTC

.section .text
.align 8
sat_scHCu_entry:
_ccLfS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLfT
_ccLfU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLfW
_ccLfV:
	movq 7(%rbx),%rax
	movq $sat_scHCr_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_ccLfP_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $lexeme4_rcHqa_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLfW:
	movq $16,904(%r13)
_ccLfT:
	jmp *-8(%r13)
	.size sat_scHCu_entry, .-sat_scHCu_entry


==================== Asm code ====================
2018-03-16 16:07:38.046628201 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCu_info:
	.quad	sat_scHCu_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucLgN_srtd


==================== Asm code ====================
2018-03-16 16:07:38.047400785 UTC

.section .text
.align 8
_ccLfP:
_ccLfP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLfZ
_ccLfY:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLfZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLfP, .-_ccLfP


==================== Asm code ====================
2018-03-16 16:07:38.048060578 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLfP_info:
	.quad	_ccLfP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.048609093 UTC

.section .data.rel.ro
.align 8
.align 1
ucLgO_srtd:
	.quad	ScI2G_srt+80
	.quad	58
	.quad	288230341825530825


==================== Asm code ====================
2018-03-16 16:07:38.049621408 UTC

.section .text
.align 8
.globl GHC.Stats.$w$creadPrec1_entry
.type GHC.Stats.$w$creadPrec1_entry, @object
GHC.Stats.$w$creadPrec1_entry:
_ccLg3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLg4
_ccLg5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLg7
_ccLg6:
	cmpq $11,%r14
	jg _ccLg1
_ccLg2:
	movq $sat_scHCu_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_ccLg8_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $lexeme6_rcHqQ_closure+4,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_ccLg7:
	movq $16,904(%r13)
_ccLg4:
	movl $GHC.Stats.$w$creadPrec1_closure,%ebx
	jmp *-8(%r13)
_ccLg1:
	addq $-16,%r12
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.$w$creadPrec1_entry, .-GHC.Stats.$w$creadPrec1_entry


==================== Asm code ====================
2018-03-16 16:07:38.050363767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec1_info
.type GHC.Stats.$w$creadPrec1_info, @object
GHC.Stats.$w$creadPrec1_info:
	.quad	GHC.Stats.$w$creadPrec1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934605
	.quad	ucLgO_srtd


==================== Asm code ====================
2018-03-16 16:07:38.051093525 UTC

.section .text
.align 8
_ccLg8:
_ccLg8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccLgd
_ccLgc:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLgd:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccLg8, .-_ccLg8


==================== Asm code ====================
2018-03-16 16:07:38.051763829 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLg8_info:
	.quad	_ccLg8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.05522189 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats2_closure
.type GHC.Stats.$fReadRTSStats2_closure, @object
GHC.Stats.$fReadRTSStats2_closure:
	.quad	GHC.Stats.$fReadRTSStats2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.056021342 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats2_entry
.type GHC.Stats.$fReadRTSStats2_entry, @object
GHC.Stats.$fReadRTSStats2_entry:
_ccLlq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLlr
_ccLls:
	movq $block_ccLln_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccLln
_ccLlo:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLlr:
	movl $GHC.Stats.$fReadRTSStats2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadRTSStats2_entry, .-GHC.Stats.$fReadRTSStats2_entry


==================== Asm code ====================
2018-03-16 16:07:38.056781784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats2_info
.type GHC.Stats.$fReadRTSStats2_info, @object
GHC.Stats.$fReadRTSStats2_info:
	.quad	GHC.Stats.$fReadRTSStats2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	ScI2G_srt+528


==================== Asm code ====================
2018-03-16 16:07:38.057649583 UTC

.section .text
.align 8
_ccLln:
_ccLln:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Stats.$w$creadPrec1_entry
	.size _ccLln, .-_ccLln


==================== Asm code ====================
2018-03-16 16:07:38.058300984 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLln_info:
	.quad	_ccLln
	.quad	1
	.quad	4294967326
	.quad	ScI2G_srt+528


==================== Asm code ====================
2018-03-16 16:07:38.061135584 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats1_closure
.type GHC.Stats.$fReadRTSStats1_closure, @object
GHC.Stats.$fReadRTSStats1_closure:
	.quad	GHC.Stats.$fReadRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.061900723 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats1_entry
.type GHC.Stats.$fReadRTSStats1_entry, @object
GHC.Stats.$fReadRTSStats1_entry:
_ccLlK:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Stats.$fReadRTSStats2_closure+2,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.Stats.$fReadRTSStats1_entry, .-GHC.Stats.$fReadRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:38.062551204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats1_info
.type GHC.Stats.$fReadRTSStats1_info, @object
GHC.Stats.$fReadRTSStats1_info:
	.quad	GHC.Stats.$fReadRTSStats1_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	ScI2G_srt+312


==================== Asm code ====================
2018-03-16 16:07:38.065820199 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_closure
.type GHC.Stats.$fReadRTSStats_$creadsPrec_closure, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.066586161 UTC

.section .text
.align 8
sat_scHCC_entry:
_ccLlZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLm0
_ccLm1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.Stats.$fReadRTSStats2_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_ccLm0:
	jmp *-16(%r13)
	.size sat_scHCC_entry, .-sat_scHCC_entry


==================== Asm code ====================
2018-03-16 16:07:38.067262509 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHCC_info:
	.quad	sat_scHCC_entry
	.quad	1
	.quad	2305843013508661264
	.quad	ScI2G_srt+312


==================== Asm code ====================
2018-03-16 16:07:38.067979068 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_entry
.type GHC.Stats.$fReadRTSStats_$creadsPrec_entry, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_entry:
_ccLm2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccLm6
_ccLm5:
	movq $sat_scHCC_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_ccLm6:
	movq $24,904(%r13)
	movl $GHC.Stats.$fReadRTSStats_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadRTSStats_$creadsPrec_entry, .-GHC.Stats.$fReadRTSStats_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:38.068647648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_info
.type GHC.Stats.$fReadRTSStats_$creadsPrec_info, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_entry
	.quad	0
	.quad	6917529031936049166
	.quad	4294967301
	.quad	ScI2G_srt+312


==================== Asm code ====================
2018-03-16 16:07:38.071393103 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_closure
.type GHC.Stats.$fReadRTSStats_$creadListPrec_closure, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.072226962 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_entry
.type GHC.Stats.$fReadRTSStats_$creadListPrec_entry, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_entry:
_ccLml:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLmm
_ccLmn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccLmk
_ccLmj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.$fReadRTSStats1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_ccLmm:
	jmp *-16(%r13)
_ccLmk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadRTSStats_$creadListPrec_entry, .-GHC.Stats.$fReadRTSStats_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:38.072979484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_info
.type GHC.Stats.$fReadRTSStats_$creadListPrec_info, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_entry
	.quad	0
	.quad	2305843013508661269
	.quad	ScI2G_srt+328


==================== Asm code ====================
2018-03-16 16:07:38.076130101 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats3_closure
.type GHC.Stats.$fReadRTSStats3_closure, @object
GHC.Stats.$fReadRTSStats3_closure:
	.quad	GHC.Stats.$fReadRTSStats3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.07698006 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats3_entry
.type GHC.Stats.$fReadRTSStats3_entry, @object
GHC.Stats.$fReadRTSStats3_entry:
_ccLmB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLmC
_ccLmD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccLmA
_ccLmz:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.Stats.$fReadRTSStats_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_ccLmC:
	jmp *-16(%r13)
_ccLmA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadRTSStats3_entry, .-GHC.Stats.$fReadRTSStats3_entry


==================== Asm code ====================
2018-03-16 16:07:38.077752929 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats3_info
.type GHC.Stats.$fReadRTSStats3_info, @object
GHC.Stats.$fReadRTSStats3_info:
	.quad	GHC.Stats.$fReadRTSStats3_entry
	.quad	0
	.quad	4294967317
	.quad	ScI2G_srt+568


==================== Asm code ====================
2018-03-16 16:07:38.080000299 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadList_closure
.type GHC.Stats.$fReadRTSStats_$creadList_closure, @object
GHC.Stats.$fReadRTSStats_$creadList_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.080633957 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadList_entry
.type GHC.Stats.$fReadRTSStats_$creadList_entry, @object
GHC.Stats.$fReadRTSStats_$creadList_entry:
_ccLmP:
	movq %r14,%rsi
	movl $GHC.Stats.$fReadRTSStats3_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.Stats.$fReadRTSStats_$creadList_entry, .-GHC.Stats.$fReadRTSStats_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:38.081352962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadList_info
.type GHC.Stats.$fReadRTSStats_$creadList_info, @object
GHC.Stats.$fReadRTSStats_$creadList_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScI2G_srt+576


==================== Asm code ====================
2018-03-16 16:07:38.083275767 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_closure
.type GHC.Stats.$fReadRTSStats_closure, @object
GHC.Stats.$fReadRTSStats_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_closure+1
	.quad	GHC.Stats.$fReadRTSStats_$creadList_closure+1
	.quad	GHC.Stats.$fReadRTSStats1_closure+2
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.086557026 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_elapsed_ns_closure
.type GHC.Stats.gcdetails_elapsed_ns_closure, @object
GHC.Stats.gcdetails_elapsed_ns_closure:
	.quad	GHC.Stats.gcdetails_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.087394805 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_elapsed_ns_entry
.type GHC.Stats.gcdetails_elapsed_ns_entry, @object
GHC.Stats.gcdetails_elapsed_ns_entry:
_ccLn4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLn5
_ccLn6:
	movq $block_ccLn1_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLn1
_ccLn2:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLn5:
	movl $GHC.Stats.gcdetails_elapsed_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_elapsed_ns_entry, .-GHC.Stats.gcdetails_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.088122125 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_elapsed_ns_info
.type GHC.Stats.gcdetails_elapsed_ns_info, @object
GHC.Stats.gcdetails_elapsed_ns_info:
	.quad	GHC.Stats.gcdetails_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.08880248 UTC

.section .text
.align 8
_ccLn1:
_ccLn1:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLn1, .-_ccLn1


==================== Asm code ====================
2018-03-16 16:07:38.089978062 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLn1_info:
	.quad	_ccLn1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.092685211 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_cpu_ns_closure
.type GHC.Stats.gcdetails_cpu_ns_closure, @object
GHC.Stats.gcdetails_cpu_ns_closure:
	.quad	GHC.Stats.gcdetails_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.094269248 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_cpu_ns_entry
.type GHC.Stats.gcdetails_cpu_ns_entry, @object
GHC.Stats.gcdetails_cpu_ns_entry:
_ccLnt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLnu
_ccLnv:
	movq $block_ccLnq_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLnq
_ccLnr:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLnu:
	movl $GHC.Stats.gcdetails_cpu_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_cpu_ns_entry, .-GHC.Stats.gcdetails_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.094905223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_cpu_ns_info
.type GHC.Stats.gcdetails_cpu_ns_info, @object
GHC.Stats.gcdetails_cpu_ns_info:
	.quad	GHC.Stats.gcdetails_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.095563692 UTC

.section .text
.align 8
_ccLnq:
_ccLnq:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLnq, .-_ccLnq


==================== Asm code ====================
2018-03-16 16:07:38.096133325 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLnq_info:
	.quad	_ccLnq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.098868245 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_sync_elapsed_ns_closure
.type GHC.Stats.gcdetails_sync_elapsed_ns_closure, @object
GHC.Stats.gcdetails_sync_elapsed_ns_closure:
	.quad	GHC.Stats.gcdetails_sync_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.099609084 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_sync_elapsed_ns_entry
.type GHC.Stats.gcdetails_sync_elapsed_ns_entry, @object
GHC.Stats.gcdetails_sync_elapsed_ns_entry:
_ccLnS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLnT
_ccLnU:
	movq $block_ccLnP_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLnP
_ccLnQ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLnT:
	movl $GHC.Stats.gcdetails_sync_elapsed_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_sync_elapsed_ns_entry, .-GHC.Stats.gcdetails_sync_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.100347027 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_sync_elapsed_ns_info
.type GHC.Stats.gcdetails_sync_elapsed_ns_info, @object
GHC.Stats.gcdetails_sync_elapsed_ns_info:
	.quad	GHC.Stats.gcdetails_sync_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.101032283 UTC

.section .text
.align 8
_ccLnP:
_ccLnP:
	movq 95(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLnP, .-_ccLnP


==================== Asm code ====================
2018-03-16 16:07:38.101744538 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLnP_info:
	.quad	_ccLnP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.104498503 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_closure
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_closure, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_par_balanced_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.105364153 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_entry
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_entry, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_entry:
_ccLoh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLoi
_ccLoj:
	movq $block_ccLoe_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLoe
_ccLof:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLoi:
	movl $GHC.Stats.gcdetails_par_balanced_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_par_balanced_copied_bytes_entry, .-GHC.Stats.gcdetails_par_balanced_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.10608203 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_info
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_info, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_par_balanced_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.106772158 UTC

.section .text
.align 8
_ccLoe:
_ccLoe:
	movq 87(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLoe, .-_ccLoe


==================== Asm code ====================
2018-03-16 16:07:38.107384815 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLoe_info:
	.quad	_ccLoe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.110161568 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_max_copied_bytes_closure
.type GHC.Stats.gcdetails_par_max_copied_bytes_closure, @object
GHC.Stats.gcdetails_par_max_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_par_max_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.110900082 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_par_max_copied_bytes_entry
.type GHC.Stats.gcdetails_par_max_copied_bytes_entry, @object
GHC.Stats.gcdetails_par_max_copied_bytes_entry:
_ccLoG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLoH
_ccLoI:
	movq $block_ccLoD_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLoD
_ccLoE:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLoH:
	movl $GHC.Stats.gcdetails_par_max_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_par_max_copied_bytes_entry, .-GHC.Stats.gcdetails_par_max_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.111590493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_max_copied_bytes_info
.type GHC.Stats.gcdetails_par_max_copied_bytes_info, @object
GHC.Stats.gcdetails_par_max_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_par_max_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.112287056 UTC

.section .text
.align 8
_ccLoD:
_ccLoD:
	movq 79(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLoD, .-_ccLoD


==================== Asm code ====================
2018-03-16 16:07:38.112945527 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLoD_info:
	.quad	_ccLoD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.116243849 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_copied_bytes_closure
.type GHC.Stats.gcdetails_copied_bytes_closure, @object
GHC.Stats.gcdetails_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.117013335 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_copied_bytes_entry
.type GHC.Stats.gcdetails_copied_bytes_entry, @object
GHC.Stats.gcdetails_copied_bytes_entry:
_ccLp5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLp6
_ccLp7:
	movq $block_ccLp2_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLp2
_ccLp3:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLp6:
	movl $GHC.Stats.gcdetails_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_copied_bytes_entry, .-GHC.Stats.gcdetails_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.117753678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_copied_bytes_info
.type GHC.Stats.gcdetails_copied_bytes_info, @object
GHC.Stats.gcdetails_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.118437144 UTC

.section .text
.align 8
_ccLp2:
_ccLp2:
	movq 71(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLp2, .-_ccLp2


==================== Asm code ====================
2018-03-16 16:07:38.119606473 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLp2_info:
	.quad	_ccLp2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.122348032 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_mem_in_use_bytes_closure
.type GHC.Stats.gcdetails_mem_in_use_bytes_closure, @object
GHC.Stats.gcdetails_mem_in_use_bytes_closure:
	.quad	GHC.Stats.gcdetails_mem_in_use_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.123064599 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_mem_in_use_bytes_entry
.type GHC.Stats.gcdetails_mem_in_use_bytes_entry, @object
GHC.Stats.gcdetails_mem_in_use_bytes_entry:
_ccLpu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLpv
_ccLpw:
	movq $block_ccLpr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLpr
_ccLps:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLpv:
	movl $GHC.Stats.gcdetails_mem_in_use_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_mem_in_use_bytes_entry, .-GHC.Stats.gcdetails_mem_in_use_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.123742391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_mem_in_use_bytes_info
.type GHC.Stats.gcdetails_mem_in_use_bytes_info, @object
GHC.Stats.gcdetails_mem_in_use_bytes_info:
	.quad	GHC.Stats.gcdetails_mem_in_use_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.124391588 UTC

.section .text
.align 8
_ccLpr:
_ccLpr:
	movq 63(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLpr, .-_ccLpr


==================== Asm code ====================
2018-03-16 16:07:38.124960949 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLpr_info:
	.quad	_ccLpr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.12808274 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_slop_bytes_closure
.type GHC.Stats.gcdetails_slop_bytes_closure, @object
GHC.Stats.gcdetails_slop_bytes_closure:
	.quad	GHC.Stats.gcdetails_slop_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.128821399 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_slop_bytes_entry
.type GHC.Stats.gcdetails_slop_bytes_entry, @object
GHC.Stats.gcdetails_slop_bytes_entry:
_ccLpT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLpU
_ccLpV:
	movq $block_ccLpQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLpQ
_ccLpR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLpU:
	movl $GHC.Stats.gcdetails_slop_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_slop_bytes_entry, .-GHC.Stats.gcdetails_slop_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.129544378 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_slop_bytes_info
.type GHC.Stats.gcdetails_slop_bytes_info, @object
GHC.Stats.gcdetails_slop_bytes_info:
	.quad	GHC.Stats.gcdetails_slop_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.130233517 UTC

.section .text
.align 8
_ccLpQ:
_ccLpQ:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLpQ, .-_ccLpQ


==================== Asm code ====================
2018-03-16 16:07:38.130820622 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLpQ_info:
	.quad	_ccLpQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.133630772 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_compact_bytes_closure
.type GHC.Stats.gcdetails_compact_bytes_closure, @object
GHC.Stats.gcdetails_compact_bytes_closure:
	.quad	GHC.Stats.gcdetails_compact_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.134393008 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_compact_bytes_entry
.type GHC.Stats.gcdetails_compact_bytes_entry, @object
GHC.Stats.gcdetails_compact_bytes_entry:
_ccLqi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLqj
_ccLqk:
	movq $block_ccLqf_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLqf
_ccLqg:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLqj:
	movl $GHC.Stats.gcdetails_compact_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_compact_bytes_entry, .-GHC.Stats.gcdetails_compact_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.135083377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_compact_bytes_info
.type GHC.Stats.gcdetails_compact_bytes_info, @object
GHC.Stats.gcdetails_compact_bytes_info:
	.quad	GHC.Stats.gcdetails_compact_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.135748783 UTC

.section .text
.align 8
_ccLqf:
_ccLqf:
	movq 47(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLqf, .-_ccLqf


==================== Asm code ====================
2018-03-16 16:07:38.136348504 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLqf_info:
	.quad	_ccLqf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.139374932 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_large_objects_bytes_closure
.type GHC.Stats.gcdetails_large_objects_bytes_closure, @object
GHC.Stats.gcdetails_large_objects_bytes_closure:
	.quad	GHC.Stats.gcdetails_large_objects_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.14018166 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_large_objects_bytes_entry
.type GHC.Stats.gcdetails_large_objects_bytes_entry, @object
GHC.Stats.gcdetails_large_objects_bytes_entry:
_ccLqH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLqI
_ccLqJ:
	movq $block_ccLqE_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLqE
_ccLqF:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLqI:
	movl $GHC.Stats.gcdetails_large_objects_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_large_objects_bytes_entry, .-GHC.Stats.gcdetails_large_objects_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.140835076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_large_objects_bytes_info
.type GHC.Stats.gcdetails_large_objects_bytes_info, @object
GHC.Stats.gcdetails_large_objects_bytes_info:
	.quad	GHC.Stats.gcdetails_large_objects_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.141510853 UTC

.section .text
.align 8
_ccLqE:
_ccLqE:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLqE, .-_ccLqE


==================== Asm code ====================
2018-03-16 16:07:38.142140143 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLqE_info:
	.quad	_ccLqE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.145047488 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_live_bytes_closure
.type GHC.Stats.gcdetails_live_bytes_closure, @object
GHC.Stats.gcdetails_live_bytes_closure:
	.quad	GHC.Stats.gcdetails_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.145828839 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_live_bytes_entry
.type GHC.Stats.gcdetails_live_bytes_entry, @object
GHC.Stats.gcdetails_live_bytes_entry:
_ccLr6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLr7
_ccLr8:
	movq $block_ccLr3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLr3
_ccLr4:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLr7:
	movl $GHC.Stats.gcdetails_live_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_live_bytes_entry, .-GHC.Stats.gcdetails_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.146548306 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_live_bytes_info
.type GHC.Stats.gcdetails_live_bytes_info, @object
GHC.Stats.gcdetails_live_bytes_info:
	.quad	GHC.Stats.gcdetails_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.147271472 UTC

.section .text
.align 8
_ccLr3:
_ccLr3:
	movq 31(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLr3, .-_ccLr3


==================== Asm code ====================
2018-03-16 16:07:38.148480654 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLr3_info:
	.quad	_ccLr3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.151238492 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_allocated_bytes_closure
.type GHC.Stats.gcdetails_allocated_bytes_closure, @object
GHC.Stats.gcdetails_allocated_bytes_closure:
	.quad	GHC.Stats.gcdetails_allocated_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.152026603 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_allocated_bytes_entry
.type GHC.Stats.gcdetails_allocated_bytes_entry, @object
GHC.Stats.gcdetails_allocated_bytes_entry:
_ccLrv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLrw
_ccLrx:
	movq $block_ccLrs_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLrs
_ccLrt:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLrw:
	movl $GHC.Stats.gcdetails_allocated_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_allocated_bytes_entry, .-GHC.Stats.gcdetails_allocated_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.152706782 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_allocated_bytes_info
.type GHC.Stats.gcdetails_allocated_bytes_info, @object
GHC.Stats.gcdetails_allocated_bytes_info:
	.quad	GHC.Stats.gcdetails_allocated_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.15364117 UTC

.section .text
.align 8
_ccLrs:
_ccLrs:
	movq 23(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLrs, .-_ccLrs


==================== Asm code ====================
2018-03-16 16:07:38.154213079 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLrs_info:
	.quad	_ccLrs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.1568875 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_threads_closure
.type GHC.Stats.gcdetails_threads_closure, @object
GHC.Stats.gcdetails_threads_closure:
	.quad	GHC.Stats.gcdetails_threads_info


==================== Asm code ====================
2018-03-16 16:07:38.157607319 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_threads_entry
.type GHC.Stats.gcdetails_threads_entry, @object
GHC.Stats.gcdetails_threads_entry:
_ccLrU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLrV
_ccLrW:
	movq $block_ccLrR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLrR
_ccLrS:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLrV:
	movl $GHC.Stats.gcdetails_threads_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_threads_entry, .-GHC.Stats.gcdetails_threads_entry


==================== Asm code ====================
2018-03-16 16:07:38.158297482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_threads_info
.type GHC.Stats.gcdetails_threads_info, @object
GHC.Stats.gcdetails_threads_info:
	.quad	GHC.Stats.gcdetails_threads_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.158975062 UTC

.section .text
.align 8
_ccLrR:
_ccLrR:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLrR, .-_ccLrR


==================== Asm code ====================
2018-03-16 16:07:38.159538327 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLrR_info:
	.quad	_ccLrR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.162337236 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_gen_closure
.type GHC.Stats.gcdetails_gen_closure, @object
GHC.Stats.gcdetails_gen_closure:
	.quad	GHC.Stats.gcdetails_gen_info


==================== Asm code ====================
2018-03-16 16:07:38.163087379 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_gen_entry
.type GHC.Stats.gcdetails_gen_entry, @object
GHC.Stats.gcdetails_gen_entry:
_ccLsj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLsk
_ccLsl:
	movq $block_ccLsg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLsg
_ccLsh:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLsk:
	movl $GHC.Stats.gcdetails_gen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_gen_entry, .-GHC.Stats.gcdetails_gen_entry


==================== Asm code ====================
2018-03-16 16:07:38.163789968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_gen_info
.type GHC.Stats.gcdetails_gen_info, @object
GHC.Stats.gcdetails_gen_info:
	.quad	GHC.Stats.gcdetails_gen_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.164435126 UTC

.section .text
.align 8
_ccLsg:
_ccLsg:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLsg, .-_ccLsg


==================== Asm code ====================
2018-03-16 16:07:38.165025943 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLsg_info:
	.quad	_ccLsg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.167746916 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_closure
.type GHC.Stats.gc_closure, @object
GHC.Stats.gc_closure:
	.quad	GHC.Stats.gc_info


==================== Asm code ====================
2018-03-16 16:07:38.168506833 UTC

.section .text
.align 8
.globl GHC.Stats.gc_entry
.type GHC.Stats.gc_entry, @object
GHC.Stats.gc_entry:
_ccLsI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLsJ
_ccLsK:
	movq $block_ccLsF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLsF
_ccLsG:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLsJ:
	movl $GHC.Stats.gc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gc_entry, .-GHC.Stats.gc_entry


==================== Asm code ====================
2018-03-16 16:07:38.169194934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_info
.type GHC.Stats.gc_info, @object
GHC.Stats.gc_info:
	.quad	GHC.Stats.gc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.170179854 UTC

.section .text
.align 8
_ccLsF:
_ccLsF:
	movq 159(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLsF, .-_ccLsF


==================== Asm code ====================
2018-03-16 16:07:38.1708236 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLsF_info:
	.quad	_ccLsF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.173698852 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.elapsed_ns_closure
.type GHC.Stats.elapsed_ns_closure, @object
GHC.Stats.elapsed_ns_closure:
	.quad	GHC.Stats.elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.174490034 UTC

.section .text
.align 8
.globl GHC.Stats.elapsed_ns_entry
.type GHC.Stats.elapsed_ns_entry, @object
GHC.Stats.elapsed_ns_entry:
_ccLt7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLt8
_ccLt9:
	movq $block_ccLt4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLt4
_ccLt5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLt8:
	movl $GHC.Stats.elapsed_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.elapsed_ns_entry, .-GHC.Stats.elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.175222618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.elapsed_ns_info
.type GHC.Stats.elapsed_ns_info, @object
GHC.Stats.elapsed_ns_info:
	.quad	GHC.Stats.elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.175905847 UTC

.section .text
.align 8
_ccLt4:
_ccLt4:
	movq 151(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLt4, .-_ccLt4


==================== Asm code ====================
2018-03-16 16:07:38.177088933 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLt4_info:
	.quad	_ccLt4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.179826483 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cpu_ns_closure
.type GHC.Stats.cpu_ns_closure, @object
GHC.Stats.cpu_ns_closure:
	.quad	GHC.Stats.cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.180597633 UTC

.section .text
.align 8
.globl GHC.Stats.cpu_ns_entry
.type GHC.Stats.cpu_ns_entry, @object
GHC.Stats.cpu_ns_entry:
_ccLtw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLtx
_ccLty:
	movq $block_ccLtt_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLtt
_ccLtu:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLtx:
	movl $GHC.Stats.cpu_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.cpu_ns_entry, .-GHC.Stats.cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.181267557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cpu_ns_info
.type GHC.Stats.cpu_ns_info, @object
GHC.Stats.cpu_ns_info:
	.quad	GHC.Stats.cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.181911384 UTC

.section .text
.align 8
_ccLtt:
_ccLtt:
	movq 143(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLtt, .-_ccLtt


==================== Asm code ====================
2018-03-16 16:07:38.182469736 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLtt_info:
	.quad	_ccLtt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.185101769 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_elapsed_ns_closure
.type GHC.Stats.gc_elapsed_ns_closure, @object
GHC.Stats.gc_elapsed_ns_closure:
	.quad	GHC.Stats.gc_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.185851664 UTC

.section .text
.align 8
.globl GHC.Stats.gc_elapsed_ns_entry
.type GHC.Stats.gc_elapsed_ns_entry, @object
GHC.Stats.gc_elapsed_ns_entry:
_ccLtV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLtW
_ccLtX:
	movq $block_ccLtS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLtS
_ccLtT:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLtW:
	movl $GHC.Stats.gc_elapsed_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gc_elapsed_ns_entry, .-GHC.Stats.gc_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.186537437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_elapsed_ns_info
.type GHC.Stats.gc_elapsed_ns_info, @object
GHC.Stats.gc_elapsed_ns_info:
	.quad	GHC.Stats.gc_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.187224778 UTC

.section .text
.align 8
_ccLtS:
_ccLtS:
	movq 135(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLtS, .-_ccLtS


==================== Asm code ====================
2018-03-16 16:07:38.187818733 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLtS_info:
	.quad	_ccLtS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.190958985 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_cpu_ns_closure
.type GHC.Stats.gc_cpu_ns_closure, @object
GHC.Stats.gc_cpu_ns_closure:
	.quad	GHC.Stats.gc_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.191690532 UTC

.section .text
.align 8
.globl GHC.Stats.gc_cpu_ns_entry
.type GHC.Stats.gc_cpu_ns_entry, @object
GHC.Stats.gc_cpu_ns_entry:
_ccLuk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLul
_ccLum:
	movq $block_ccLuh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLuh
_ccLui:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLul:
	movl $GHC.Stats.gc_cpu_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gc_cpu_ns_entry, .-GHC.Stats.gc_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.192374267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_cpu_ns_info
.type GHC.Stats.gc_cpu_ns_info, @object
GHC.Stats.gc_cpu_ns_info:
	.quad	GHC.Stats.gc_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.193019836 UTC

.section .text
.align 8
_ccLuh:
_ccLuh:
	movq 127(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLuh, .-_ccLuh


==================== Asm code ====================
2018-03-16 16:07:38.193639737 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLuh_info:
	.quad	_ccLuh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.196346722 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.mutator_elapsed_ns_closure
.type GHC.Stats.mutator_elapsed_ns_closure, @object
GHC.Stats.mutator_elapsed_ns_closure:
	.quad	GHC.Stats.mutator_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.197098058 UTC

.section .text
.align 8
.globl GHC.Stats.mutator_elapsed_ns_entry
.type GHC.Stats.mutator_elapsed_ns_entry, @object
GHC.Stats.mutator_elapsed_ns_entry:
_ccLuJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLuK
_ccLuL:
	movq $block_ccLuG_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLuG
_ccLuH:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLuK:
	movl $GHC.Stats.mutator_elapsed_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.mutator_elapsed_ns_entry, .-GHC.Stats.mutator_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.197827243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.mutator_elapsed_ns_info
.type GHC.Stats.mutator_elapsed_ns_info, @object
GHC.Stats.mutator_elapsed_ns_info:
	.quad	GHC.Stats.mutator_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.198498209 UTC

.section .text
.align 8
_ccLuG:
_ccLuG:
	movq 119(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLuG, .-_ccLuG


==================== Asm code ====================
2018-03-16 16:07:38.19910576 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLuG_info:
	.quad	_ccLuG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.20236458 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.mutator_cpu_ns_closure
.type GHC.Stats.mutator_cpu_ns_closure, @object
GHC.Stats.mutator_cpu_ns_closure:
	.quad	GHC.Stats.mutator_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:38.203165865 UTC

.section .text
.align 8
.globl GHC.Stats.mutator_cpu_ns_entry
.type GHC.Stats.mutator_cpu_ns_entry, @object
GHC.Stats.mutator_cpu_ns_entry:
_ccLv8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLv9
_ccLva:
	movq $block_ccLv5_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLv5
_ccLv6:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLv9:
	movl $GHC.Stats.mutator_cpu_ns_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.mutator_cpu_ns_entry, .-GHC.Stats.mutator_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:38.203885669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.mutator_cpu_ns_info
.type GHC.Stats.mutator_cpu_ns_info, @object
GHC.Stats.mutator_cpu_ns_info:
	.quad	GHC.Stats.mutator_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.20459606 UTC

.section .text
.align 8
_ccLv5:
_ccLv5:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLv5, .-_ccLv5


==================== Asm code ====================
2018-03-16 16:07:38.205165566 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLv5_info:
	.quad	_ccLv5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.20865936 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_closure
.type GHC.Stats.cumulative_par_balanced_copied_bytes_closure, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_closure:
	.quad	GHC.Stats.cumulative_par_balanced_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.209452501 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_entry
.type GHC.Stats.cumulative_par_balanced_copied_bytes_entry, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_entry:
_ccLvx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLvy
_ccLvz:
	movq $block_ccLvu_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLvu
_ccLvv:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLvy:
	movl $GHC.Stats.cumulative_par_balanced_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_par_balanced_copied_bytes_entry, .-GHC.Stats.cumulative_par_balanced_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.21015445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_info
.type GHC.Stats.cumulative_par_balanced_copied_bytes_info, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_info:
	.quad	GHC.Stats.cumulative_par_balanced_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.210791522 UTC

.section .text
.align 8
_ccLvu:
_ccLvu:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLvu, .-_ccLvu


==================== Asm code ====================
2018-03-16 16:07:38.211424497 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLvu_info:
	.quad	_ccLvu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.21446349 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_par_max_copied_bytes_closure
.type GHC.Stats.cumulative_par_max_copied_bytes_closure, @object
GHC.Stats.cumulative_par_max_copied_bytes_closure:
	.quad	GHC.Stats.cumulative_par_max_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.215185147 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_par_max_copied_bytes_entry
.type GHC.Stats.cumulative_par_max_copied_bytes_entry, @object
GHC.Stats.cumulative_par_max_copied_bytes_entry:
_ccLvW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLvX
_ccLvY:
	movq $block_ccLvT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLvT
_ccLvU:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLvX:
	movl $GHC.Stats.cumulative_par_max_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_par_max_copied_bytes_entry, .-GHC.Stats.cumulative_par_max_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.215884093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_par_max_copied_bytes_info
.type GHC.Stats.cumulative_par_max_copied_bytes_info, @object
GHC.Stats.cumulative_par_max_copied_bytes_info:
	.quad	GHC.Stats.cumulative_par_max_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.216566938 UTC

.section .text
.align 8
_ccLvT:
_ccLvT:
	movq 95(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLvT, .-_ccLvT


==================== Asm code ====================
2018-03-16 16:07:38.217162473 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLvT_info:
	.quad	_ccLvT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.219976235 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.par_copied_bytes_closure
.type GHC.Stats.par_copied_bytes_closure, @object
GHC.Stats.par_copied_bytes_closure:
	.quad	GHC.Stats.par_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.220719011 UTC

.section .text
.align 8
.globl GHC.Stats.par_copied_bytes_entry
.type GHC.Stats.par_copied_bytes_entry, @object
GHC.Stats.par_copied_bytes_entry:
_ccLwl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLwm
_ccLwn:
	movq $block_ccLwi_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLwi
_ccLwj:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLwm:
	movl $GHC.Stats.par_copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.par_copied_bytes_entry, .-GHC.Stats.par_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.221429826 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.par_copied_bytes_info
.type GHC.Stats.par_copied_bytes_info, @object
GHC.Stats.par_copied_bytes_info:
	.quad	GHC.Stats.par_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.222106255 UTC

.section .text
.align 8
_ccLwi:
_ccLwi:
	movq 87(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLwi, .-_ccLwi


==================== Asm code ====================
2018-03-16 16:07:38.222680516 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLwi_info:
	.quad	_ccLwi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.225459959 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.copied_bytes_closure
.type GHC.Stats.copied_bytes_closure, @object
GHC.Stats.copied_bytes_closure:
	.quad	GHC.Stats.copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.226211047 UTC

.section .text
.align 8
.globl GHC.Stats.copied_bytes_entry
.type GHC.Stats.copied_bytes_entry, @object
GHC.Stats.copied_bytes_entry:
_ccLwK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLwL
_ccLwM:
	movq $block_ccLwH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLwH
_ccLwI:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLwL:
	movl $GHC.Stats.copied_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.copied_bytes_entry, .-GHC.Stats.copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.226916254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.copied_bytes_info
.type GHC.Stats.copied_bytes_info, @object
GHC.Stats.copied_bytes_info:
	.quad	GHC.Stats.copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.227611451 UTC

.section .text
.align 8
_ccLwH:
_ccLwH:
	movq 79(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLwH, .-_ccLwH


==================== Asm code ====================
2018-03-16 16:07:38.228248116 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLwH_info:
	.quad	_ccLwH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.231146204 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_live_bytes_closure
.type GHC.Stats.cumulative_live_bytes_closure, @object
GHC.Stats.cumulative_live_bytes_closure:
	.quad	GHC.Stats.cumulative_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.231959628 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_live_bytes_entry
.type GHC.Stats.cumulative_live_bytes_entry, @object
GHC.Stats.cumulative_live_bytes_entry:
_ccLx9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLxa
_ccLxb:
	movq $block_ccLx6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLx6
_ccLx7:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLxa:
	movl $GHC.Stats.cumulative_live_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_live_bytes_entry, .-GHC.Stats.cumulative_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.232676651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_live_bytes_info
.type GHC.Stats.cumulative_live_bytes_info, @object
GHC.Stats.cumulative_live_bytes_info:
	.quad	GHC.Stats.cumulative_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.233642694 UTC

.section .text
.align 8
_ccLx6:
_ccLx6:
	movq 71(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLx6, .-_ccLx6


==================== Asm code ====================
2018-03-16 16:07:38.234270722 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLx6_info:
	.quad	_ccLx6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.237928119 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_mem_in_use_bytes_closure
.type GHC.Stats.max_mem_in_use_bytes_closure, @object
GHC.Stats.max_mem_in_use_bytes_closure:
	.quad	GHC.Stats.max_mem_in_use_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.238711115 UTC

.section .text
.align 8
.globl GHC.Stats.max_mem_in_use_bytes_entry
.type GHC.Stats.max_mem_in_use_bytes_entry, @object
GHC.Stats.max_mem_in_use_bytes_entry:
_ccLxy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLxz
_ccLxA:
	movq $block_ccLxv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLxv
_ccLxw:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLxz:
	movl $GHC.Stats.max_mem_in_use_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.max_mem_in_use_bytes_entry, .-GHC.Stats.max_mem_in_use_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.239362093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_mem_in_use_bytes_info
.type GHC.Stats.max_mem_in_use_bytes_info, @object
GHC.Stats.max_mem_in_use_bytes_info:
	.quad	GHC.Stats.max_mem_in_use_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.240029911 UTC

.section .text
.align 8
_ccLxv:
_ccLxv:
	movq 63(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLxv, .-_ccLxv


==================== Asm code ====================
2018-03-16 16:07:38.240593301 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLxv_info:
	.quad	_ccLxv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.243312274 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_slop_bytes_closure
.type GHC.Stats.max_slop_bytes_closure, @object
GHC.Stats.max_slop_bytes_closure:
	.quad	GHC.Stats.max_slop_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.244073635 UTC

.section .text
.align 8
.globl GHC.Stats.max_slop_bytes_entry
.type GHC.Stats.max_slop_bytes_entry, @object
GHC.Stats.max_slop_bytes_entry:
_ccLxX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLxY
_ccLxZ:
	movq $block_ccLxU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLxU
_ccLxV:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLxY:
	movl $GHC.Stats.max_slop_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.max_slop_bytes_entry, .-GHC.Stats.max_slop_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.244734293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_slop_bytes_info
.type GHC.Stats.max_slop_bytes_info, @object
GHC.Stats.max_slop_bytes_info:
	.quad	GHC.Stats.max_slop_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.245490677 UTC

.section .text
.align 8
_ccLxU:
_ccLxU:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLxU, .-_ccLxU


==================== Asm code ====================
2018-03-16 16:07:38.246092287 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLxU_info:
	.quad	_ccLxU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.248860504 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_compact_bytes_closure
.type GHC.Stats.max_compact_bytes_closure, @object
GHC.Stats.max_compact_bytes_closure:
	.quad	GHC.Stats.max_compact_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.249608572 UTC

.section .text
.align 8
.globl GHC.Stats.max_compact_bytes_entry
.type GHC.Stats.max_compact_bytes_entry, @object
GHC.Stats.max_compact_bytes_entry:
_ccLym:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLyn
_ccLyo:
	movq $block_ccLyj_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLyj
_ccLyk:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLyn:
	movl $GHC.Stats.max_compact_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.max_compact_bytes_entry, .-GHC.Stats.max_compact_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.250288034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_compact_bytes_info
.type GHC.Stats.max_compact_bytes_info, @object
GHC.Stats.max_compact_bytes_info:
	.quad	GHC.Stats.max_compact_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.250950803 UTC

.section .text
.align 8
_ccLyj:
_ccLyj:
	movq 47(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLyj, .-_ccLyj


==================== Asm code ====================
2018-03-16 16:07:38.251538873 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLyj_info:
	.quad	_ccLyj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.254583622 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_large_objects_bytes_closure
.type GHC.Stats.max_large_objects_bytes_closure, @object
GHC.Stats.max_large_objects_bytes_closure:
	.quad	GHC.Stats.max_large_objects_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.255351334 UTC

.section .text
.align 8
.globl GHC.Stats.max_large_objects_bytes_entry
.type GHC.Stats.max_large_objects_bytes_entry, @object
GHC.Stats.max_large_objects_bytes_entry:
_ccLyL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLyM
_ccLyN:
	movq $block_ccLyI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLyI
_ccLyJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLyM:
	movl $GHC.Stats.max_large_objects_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.max_large_objects_bytes_entry, .-GHC.Stats.max_large_objects_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.256022443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_large_objects_bytes_info
.type GHC.Stats.max_large_objects_bytes_info, @object
GHC.Stats.max_large_objects_bytes_info:
	.quad	GHC.Stats.max_large_objects_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.256727291 UTC

.section .text
.align 8
_ccLyI:
_ccLyI:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLyI, .-_ccLyI


==================== Asm code ====================
2018-03-16 16:07:38.257353773 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLyI_info:
	.quad	_ccLyI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.260230007 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_live_bytes_closure
.type GHC.Stats.max_live_bytes_closure, @object
GHC.Stats.max_live_bytes_closure:
	.quad	GHC.Stats.max_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.261021184 UTC

.section .text
.align 8
.globl GHC.Stats.max_live_bytes_entry
.type GHC.Stats.max_live_bytes_entry, @object
GHC.Stats.max_live_bytes_entry:
_ccLza:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLzb
_ccLzc:
	movq $block_ccLz7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLz7
_ccLz8:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLzb:
	movl $GHC.Stats.max_live_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.max_live_bytes_entry, .-GHC.Stats.max_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.261735974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_live_bytes_info
.type GHC.Stats.max_live_bytes_info, @object
GHC.Stats.max_live_bytes_info:
	.quad	GHC.Stats.max_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.262487666 UTC

.section .text
.align 8
_ccLz7:
_ccLz7:
	movq 31(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLz7, .-_ccLz7


==================== Asm code ====================
2018-03-16 16:07:38.263141286 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLz7_info:
	.quad	_ccLz7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.266876053 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.allocated_bytes_closure
.type GHC.Stats.allocated_bytes_closure, @object
GHC.Stats.allocated_bytes_closure:
	.quad	GHC.Stats.allocated_bytes_info


==================== Asm code ====================
2018-03-16 16:07:38.267662274 UTC

.section .text
.align 8
.globl GHC.Stats.allocated_bytes_entry
.type GHC.Stats.allocated_bytes_entry, @object
GHC.Stats.allocated_bytes_entry:
_ccLzz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLzA
_ccLzB:
	movq $block_ccLzw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLzw
_ccLzx:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLzA:
	movl $GHC.Stats.allocated_bytes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.allocated_bytes_entry, .-GHC.Stats.allocated_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:38.26833578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.allocated_bytes_info
.type GHC.Stats.allocated_bytes_info, @object
GHC.Stats.allocated_bytes_info:
	.quad	GHC.Stats.allocated_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.269002192 UTC

.section .text
.align 8
_ccLzw:
_ccLzw:
	movq 23(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLzw, .-_ccLzw


==================== Asm code ====================
2018-03-16 16:07:38.269611788 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLzw_info:
	.quad	_ccLzw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.272385447 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.major_gcs_closure
.type GHC.Stats.major_gcs_closure, @object
GHC.Stats.major_gcs_closure:
	.quad	GHC.Stats.major_gcs_info


==================== Asm code ====================
2018-03-16 16:07:38.273154764 UTC

.section .text
.align 8
.globl GHC.Stats.major_gcs_entry
.type GHC.Stats.major_gcs_entry, @object
GHC.Stats.major_gcs_entry:
_ccLzY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLzZ
_ccLA0:
	movq $block_ccLzV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLzV
_ccLzW:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLzZ:
	movl $GHC.Stats.major_gcs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.major_gcs_entry, .-GHC.Stats.major_gcs_entry


==================== Asm code ====================
2018-03-16 16:07:38.273884279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.major_gcs_info
.type GHC.Stats.major_gcs_info, @object
GHC.Stats.major_gcs_info:
	.quad	GHC.Stats.major_gcs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.274551466 UTC

.section .text
.align 8
_ccLzV:
_ccLzV:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLzV, .-_ccLzV


==================== Asm code ====================
2018-03-16 16:07:38.275168606 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLzV_info:
	.quad	_ccLzV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.278160966 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcs_closure
.type GHC.Stats.gcs_closure, @object
GHC.Stats.gcs_closure:
	.quad	GHC.Stats.gcs_info


==================== Asm code ====================
2018-03-16 16:07:38.278903786 UTC

.section .text
.align 8
.globl GHC.Stats.gcs_entry
.type GHC.Stats.gcs_entry, @object
GHC.Stats.gcs_entry:
_ccLAn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLAo
_ccLAp:
	movq $block_ccLAk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccLAk
_ccLAl:
	movq (%rbx),%rax
	jmp *(%rax)
_ccLAo:
	movl $GHC.Stats.gcs_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.gcs_entry, .-GHC.Stats.gcs_entry


==================== Asm code ====================
2018-03-16 16:07:38.27960412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcs_info
.type GHC.Stats.gcs_info, @object
GHC.Stats.gcs_info:
	.quad	GHC.Stats.gcs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:38.280266026 UTC

.section .text
.align 8
_ccLAk:
_ccLAk:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccLAk, .-_ccLAk


==================== Asm code ====================
2018-03-16 16:07:38.280896894 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLAk_info:
	.quad	_ccLAk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.282615826 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$trModule4_bytes
.type GHC.Stats.$trModule4_bytes, @object
GHC.Stats.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:38.284379332 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule3_closure
.type GHC.Stats.$trModule3_closure, @object
GHC.Stats.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:38.286195581 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$trModule2_bytes
.type GHC.Stats.$trModule2_bytes, @object
GHC.Stats.$trModule2_bytes:
	.asciz "GHC.Stats"


==================== Asm code ====================
2018-03-16 16:07:38.288076664 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule1_closure
.type GHC.Stats.$trModule1_closure, @object
GHC.Stats.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:38.290334659 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule_closure
.type GHC.Stats.$trModule_closure, @object
GHC.Stats.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Stats.$trModule3_closure+1
	.quad	GHC.Stats.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.292831386 UTC

.section .data
.align 8
.align 1
$krep_rcHrw_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt64_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.294662861 UTC

.section .data
.align 8
.align 1
$krep1_rcHrx_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord64_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.29639545 UTC

.section .data
.align 8
.align 1
$krep2_rcHry_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord32_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.298232092 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcGCDetails1_closure
.type GHC.Stats.$tcGCDetails1_closure, @object
GHC.Stats.$tcGCDetails1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tcGCDetails2_bytes


==================== Asm code ====================
2018-03-16 16:07:38.300051251 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcGCDetails_closure
.type GHC.Stats.$tcGCDetails_closure, @object
GHC.Stats.$tcGCDetails_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tcGCDetails1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1853976479346877039
	.quad	-6011229574275674074
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.302207732 UTC

.section .data
.align 8
.align 1
$krep3_rcHrz_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Stats.$tcGCDetails_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.304021893 UTC

.section .data
.align 8
.align 1
$krep4_rcHrA_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep3_rcHrz_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.306004847 UTC

.section .data
.align 8
.align 1
$krep5_rcHrB_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep4_rcHrA_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.307869171 UTC

.section .data
.align 8
.align 1
$krep6_rcHrC_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep5_rcHrB_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.30971277 UTC

.section .data
.align 8
.align 1
$krep7_rcHrD_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep6_rcHrC_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.311514183 UTC

.section .data
.align 8
.align 1
$krep8_rcHrE_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep7_rcHrD_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.31368267 UTC

.section .data
.align 8
.align 1
$krep9_rcHrF_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep8_rcHrE_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.31552374 UTC

.section .data
.align 8
.align 1
$krep10_rcHrG_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep9_rcHrF_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.317516656 UTC

.section .data
.align 8
.align 1
$krep11_rcHrH_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep10_rcHrG_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.319885416 UTC

.section .data
.align 8
.align 1
$krep12_rcHrI_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep11_rcHrH_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.321740203 UTC

.section .data
.align 8
.align 1
$krep13_rcHrJ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep12_rcHrI_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.323461739 UTC

.section .data
.align 8
.align 1
$krep14_rcHrK_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep13_rcHrJ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.325510762 UTC

.section .data
.align 8
.align 1
$krep15_rcHrL_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep14_rcHrK_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.32727873 UTC

.section .data
.align 8
.align 1
$krep16_rcHrM_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep15_rcHrL_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.329023121 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails1_closure
.type GHC.Stats.$tc'GCDetails1_closure, @object
GHC.Stats.$tc'GCDetails1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep16_rcHrM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.330875463 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tc'GCDetails3_bytes
.type GHC.Stats.$tc'GCDetails3_bytes, @object
GHC.Stats.$tc'GCDetails3_bytes:
	.asciz "'GCDetails"


==================== Asm code ====================
2018-03-16 16:07:38.332637308 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails2_closure
.type GHC.Stats.$tc'GCDetails2_closure, @object
GHC.Stats.$tc'GCDetails2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tc'GCDetails3_bytes


==================== Asm code ====================
2018-03-16 16:07:38.33454249 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails_closure
.type GHC.Stats.$tc'GCDetails_closure, @object
GHC.Stats.$tc'GCDetails_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tc'GCDetails2_closure+1
	.quad	GHC.Stats.$tc'GCDetails1_closure+4
	.quad	5964953867232766897
	.quad	8889994537819840032
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.336338902 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcRTSStats1_closure
.type GHC.Stats.$tcRTSStats1_closure, @object
GHC.Stats.$tcRTSStats1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tcRTSStats2_bytes


==================== Asm code ====================
2018-03-16 16:07:38.33846013 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcRTSStats_closure
.type GHC.Stats.$tcRTSStats_closure, @object
GHC.Stats.$tcRTSStats_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tcRTSStats1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1006825398788898151
	.quad	9122067856566178937
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.340239692 UTC

.section .data
.align 8
.align 1
$krep17_rcHrN_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Stats.$tcRTSStats_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.342220591 UTC

.section .data
.align 8
.align 1
$krep18_rcHrO_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_rcHrz_closure+1
	.quad	$krep17_rcHrN_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.344124307 UTC

.section .data
.align 8
.align 1
$krep19_rcHrP_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep18_rcHrO_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.346495235 UTC

.section .data
.align 8
.align 1
$krep20_rcHrQ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep19_rcHrP_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.348303904 UTC

.section .data
.align 8
.align 1
$krep21_rcHrR_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep20_rcHrQ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.350434262 UTC

.section .data
.align 8
.align 1
$krep22_rcHrS_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep21_rcHrR_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.352279568 UTC

.section .data
.align 8
.align 1
$krep23_rcHrT_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep22_rcHrS_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.354084163 UTC

.section .data
.align 8
.align 1
$krep24_rcHrU_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep23_rcHrT_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.355981794 UTC

.section .data
.align 8
.align 1
$krep25_rcHrV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep24_rcHrU_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.357865711 UTC

.section .data
.align 8
.align 1
$krep26_rcHrW_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep25_rcHrV_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.359672859 UTC

.section .data
.align 8
.align 1
$krep27_rcHrX_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep26_rcHrW_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.361644124 UTC

.section .data
.align 8
.align 1
$krep28_rcHrY_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep27_rcHrX_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.363407819 UTC

.section .data
.align 8
.align 1
$krep29_rcHrZ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep28_rcHrY_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.365207339 UTC

.section .data
.align 8
.align 1
$krep30_rcHs0_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep29_rcHrZ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.367682819 UTC

.section .data
.align 8
.align 1
$krep31_rcHs1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep30_rcHs0_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.369636043 UTC

.section .data
.align 8
.align 1
$krep32_rcHs2_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep31_rcHs1_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.372079696 UTC

.section .data
.align 8
.align 1
$krep33_rcHs3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep32_rcHs2_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.3738518 UTC

.section .data
.align 8
.align 1
$krep34_rcHs4_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep33_rcHs3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.375596026 UTC

.section .data
.align 8
.align 1
$krep35_rcHs5_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep34_rcHs4_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.377796931 UTC

.section .data
.align 8
.align 1
$krep36_rcHs6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep35_rcHs5_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.379571032 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats1_closure
.type GHC.Stats.$tc'RTSStats1_closure, @object
GHC.Stats.$tc'RTSStats1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep36_rcHs6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.381393296 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tc'RTSStats3_bytes
.type GHC.Stats.$tc'RTSStats3_bytes, @object
GHC.Stats.$tc'RTSStats3_bytes:
	.asciz "'RTSStats"


==================== Asm code ====================
2018-03-16 16:07:38.383202768 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats2_closure
.type GHC.Stats.$tc'RTSStats2_closure, @object
GHC.Stats.$tc'RTSStats2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tc'RTSStats3_bytes


==================== Asm code ====================
2018-03-16 16:07:38.385155952 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats_closure
.type GHC.Stats.$tc'RTSStats_closure, @object
GHC.Stats.$tc'RTSStats_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tc'RTSStats2_closure+1
	.quad	GHC.Stats.$tc'RTSStats1_closure+4
	.quad	-7727843836876239108
	.quad	-2112014695216917554
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:38.389915766 UTC

.section .data
.align 8
.align 1
getRTSStatsEnabled1_rcHs7_closure:
	.quad	getRTSStatsEnabled1_rcHs7_info


==================== Asm code ====================
2018-03-16 16:07:38.390791094 UTC

.section .text
.align 8
sat_scHNr_entry:
_ccLBM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLBN
_ccLBO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	cmpq $0,16(%rbx)
	je _ccLBL
_ccLBK:
	movl $GHC.Types.True_closure+2,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLBN:
	jmp *-16(%r13)
_ccLBL:
	movl $GHC.Types.False_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_scHNr_entry, .-sat_scHNr_entry


==================== Asm code ====================
2018-03-16 16:07:38.391460805 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scHNr_info:
	.quad	sat_scHNr_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:38.392469883 UTC

.section .text
.align 8
getRTSStatsEnabled1_rcHs7_entry:
_ccLBP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLBQ
_ccLBR:
	movq $block_ccLBC_info,-8(%rbp)
	addq $-8,%rbp
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq %rbp,16(%rbx)
	movq 888(%r13),%rbx
	leaq 8(%r12),%rcx
	movq %rcx,8(%rbx)
	leaq 8(%r12),%rcx
	subq (%rbx),%rcx
	movq 104(%rax),%rbx
	subq %rcx,%rbx
	movq %rbx,104(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStatsEnabled
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_ccLBQ:
	movl $getRTSStatsEnabled1_rcHs7_closure,%ebx
	jmp *-8(%r13)
	.size getRTSStatsEnabled1_rcHs7_entry, .-getRTSStatsEnabled1_rcHs7_entry


==================== Asm code ====================
2018-03-16 16:07:38.393759704 UTC

.section .data.rel.ro
.align 8
.align 1
getRTSStatsEnabled1_rcHs7_info:
	.quad	getRTSStatsEnabled1_rcHs7_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:38.394538957 UTC

.section .text
.align 8
_ccLBC:
_ccLBC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccLBU
_ccLBT:
	movq $sat_scHNr_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLBU:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _ccLBC, .-_ccLBC


==================== Asm code ====================
2018-03-16 16:07:38.395250542 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLBC_info:
	.quad	_ccLBC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.39741286 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStatsEnabled_closure
.type GHC.Stats.getRTSStatsEnabled_closure, @object
GHC.Stats.getRTSStatsEnabled_closure:
	.quad	GHC.Stats.getRTSStatsEnabled_info


==================== Asm code ====================
2018-03-16 16:07:38.398044736 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStatsEnabled_entry
.type GHC.Stats.getRTSStatsEnabled_entry, @object
GHC.Stats.getRTSStatsEnabled_entry:
_ccLCD:
	jmp getRTSStatsEnabled1_rcHs7_entry
	.size GHC.Stats.getRTSStatsEnabled_entry, .-GHC.Stats.getRTSStatsEnabled_entry


==================== Asm code ====================
2018-03-16 16:07:38.398622263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStatsEnabled_info
.type GHC.Stats.getRTSStatsEnabled_info, @object
GHC.Stats.getRTSStatsEnabled_info:
	.quad	GHC.Stats.getRTSStatsEnabled_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:38.400926915 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.getRTSStats5_bytes
.type GHC.Stats.getRTSStats5_bytes, @object
GHC.Stats.getRTSStats5_bytes:
	.asciz "GHC.Stats.getRTSStats: GC stats not enabled. Use `+RTS -T -RTS' to enable them."


==================== Asm code ====================
2018-03-16 16:07:38.403621084 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats4_closure
.type GHC.Stats.getRTSStats4_closure, @object
GHC.Stats.getRTSStats4_closure:
	.quad	GHC.Stats.getRTSStats4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.404507816 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats4_entry
.type GHC.Stats.getRTSStats4_entry, @object
GHC.Stats.getRTSStats4_entry:
_ccLCR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLCS
_ccLCT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccLCQ
_ccLCP:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.getRTSStats5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_ccLCS:
	jmp *-16(%r13)
_ccLCQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.getRTSStats4_entry, .-GHC.Stats.getRTSStats4_entry


==================== Asm code ====================
2018-03-16 16:07:38.405268451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats4_info
.type GHC.Stats.getRTSStats4_info, @object
GHC.Stats.getRTSStats4_info:
	.quad	GHC.Stats.getRTSStats4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:38.407243725 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats3_closure
.type GHC.Stats.getRTSStats3_closure, @object
GHC.Stats.getRTSStats3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.UnsupportedOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Stats.getRTSStats4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.409916992 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats2_closure
.type GHC.Stats.getRTSStats2_closure, @object
GHC.Stats.getRTSStats2_closure:
	.quad	GHC.Stats.getRTSStats2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.41075326 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats2_entry
.type GHC.Stats.getRTSStats2_entry, @object
GHC.Stats.getRTSStats2_entry:
_ccLD8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLD9
_ccLDa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _ccLD7
_ccLD6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Stats.getRTSStats3_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_ccLD9:
	jmp *-16(%r13)
_ccLD7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.getRTSStats2_entry, .-GHC.Stats.getRTSStats2_entry


==================== Asm code ====================
2018-03-16 16:07:38.411481875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats2_info
.type GHC.Stats.getRTSStats2_info, @object
GHC.Stats.getRTSStats2_info:
	.quad	GHC.Stats.getRTSStats2_entry
	.quad	0
	.quad	12884901909
	.quad	ScI2G_srt+584


==================== Asm code ====================
2018-03-16 16:07:38.42200434 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats1_closure
.type GHC.Stats.getRTSStats1_closure, @object
GHC.Stats.getRTSStats1_closure:
	.quad	GHC.Stats.getRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.423178919 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats1_entry
.type GHC.Stats.getRTSStats1_entry, @object
GHC.Stats.getRTSStats1_entry:
_ccLDt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccLDu
_ccLDv:
	movq $block_ccLDn_info,-8(%rbp)
	addq $-8,%rbp
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq %rbp,16(%rbx)
	movq 888(%r13),%rbx
	leaq 8(%r12),%rcx
	movq %rcx,8(%rbx)
	leaq 8(%r12),%rcx
	subq (%rbx),%rcx
	movq 104(%rax),%rbx
	subq %rcx,%rbx
	movq %rbx,104(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStatsEnabled
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_ccLDu:
	movl $GHC.Stats.getRTSStats1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Stats.getRTSStats1_entry, .-GHC.Stats.getRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:38.42417257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats1_info
.type GHC.Stats.getRTSStats1_info, @object
GHC.Stats.getRTSStats1_info:
	.quad	GHC.Stats.getRTSStats1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	ScI2G_srt+600


==================== Asm code ====================
2018-03-16 16:07:38.424961619 UTC

.section .text
.align 8
_ccLDn:
_ccLDn:
	testq %rbx,%rbx
	je _ccLDs
_ccLDr:
	movq $block_ccLDy_info,(%rbp)
	movl $248,%ebx
	jmp stg_newPinnedByteArray#
_ccLDs:
	movl $GHC.Stats.getRTSStats2_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
	.size _ccLDn, .-_ccLDn


==================== Asm code ====================
2018-03-16 16:07:38.425950463 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLDn_info:
	.quad	_ccLDn
	.quad	0
	.quad	4294967326
	.quad	ScI2G_srt+608


==================== Asm code ====================
2018-03-16 16:07:38.426951209 UTC

.section .text
.align 8
_ccLDy:
_ccLDy:
	movq $block_ccLDF_info,-16(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	movq 872(%r13),%rbx
	movq 24(%rbx),%rcx
	movq %rbp,16(%rcx)
	movq 888(%r13),%rcx
	leaq 8(%r12),%rdx
	movq %rdx,8(%rcx)
	leaq 8(%r12),%rdx
	subq (%rcx),%rdx
	movq 104(%rbx),%rcx
	subq %rdx,%rcx
	movq %rcx,104(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rbx
	xorl %eax,%eax
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStats
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq 16(%rbx),%rbp
	leaq 192(%rbx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rbx
	movq 8(%rbx),%rcx
	leaq -8(%rcx),%r12
	movq (%rbx),%rdx
	movslq 48(%rbx),%rbx
	shlq $12,%rbx
	decq %rbx
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rsi,856(%r13)
	subq %rdx,%rcx
	movq 104(%rax),%rbx
	addq %rcx,%rbx
	movq %rbx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccLDy, .-_ccLDy


==================== Asm code ====================
2018-03-16 16:07:38.428425579 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLDy_info:
	.quad	_ccLDy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.430224607 UTC

.section .text
.align 8
_ccLDF:
_ccLDF:
	addq $816,%r12
	cmpq 856(%r13),%r12
	ja _ccLFS
_ccLFR:
	movq 8(%rbp),%rax
	movl (%rax),%ebx
	movl 4(%rax),%ecx
	movq 8(%rax),%rdx
	movq 16(%rax),%rsi
	movq 24(%rax),%rdi
	movq 32(%rax),%r8
	movq 40(%rax),%r9
	movq 48(%rax),%r10
	movq 56(%rax),%r11
	movq 64(%rax),%r14
	movq %rax,64(%rsp)
	movq 72(%rax),%rax
	movq %rbx,72(%rsp)
	movq 64(%rsp),%rbx
	movq 80(%rbx),%rbx
	movq %rcx,80(%rsp)
	movq 64(%rsp),%rcx
	movq 88(%rcx),%rcx
	movq %rdx,88(%rsp)
	movq 64(%rsp),%rdx
	movq 96(%rdx),%rdx
	movq %rsi,96(%rsp)
	movq 64(%rsp),%rsi
	movq 104(%rsi),%rsi
	movq %rdi,104(%rsp)
	movq 64(%rsp),%rdi
	movq 112(%rdi),%rdi
	movq %r8,112(%rsp)
	movq 64(%rsp),%r8
	movq 120(%r8),%r8
	movq %r9,120(%rsp)
	movq 64(%rsp),%r9
	movq 128(%r9),%r9
	movq %r10,128(%rsp)
	movq 64(%rsp),%r10
	movq 136(%r10),%r10
	movq %r11,136(%rsp)
	movq 64(%rsp),%r11
	addq $144,%r11
	movq %r14,144(%rsp)
	movl (%r11),%r14d
	movq %rax,152(%rsp)
	movl 4(%r11),%eax
	movq %rbx,160(%rsp)
	movq 8(%r11),%rbx
	movq %rcx,168(%rsp)
	movq 16(%r11),%rcx
	movq %rdx,176(%rsp)
	movq 24(%r11),%rdx
	movq %rsi,184(%rsp)
	movq 32(%r11),%rsi
	movq %rdi,192(%rsp)
	movq 40(%r11),%rdi
	movq %r8,200(%rsp)
	movq 48(%r11),%r8
	movq %r9,208(%rsp)
	movq 56(%r11),%r9
	movq %r10,216(%rsp)
	movq 64(%r11),%r10
	movq %r11,224(%rsp)
	movq 72(%r11),%r11
	movq %r14,232(%rsp)
	movq 224(%rsp),%r14
	movq 80(%r14),%r14
	movq %rax,240(%rsp)
	movq 224(%rsp),%rax
	movq 88(%rax),%rax
	movq %rbx,248(%rsp)
	movq 224(%rsp),%rbx
	movq 96(%rbx),%rbx
	movq $GHC.Int.I64#_con_info,-808(%r12)
	movq %rbx,-800(%r12)
	movq $GHC.Int.I64#_con_info,-792(%r12)
	movq %rax,-784(%r12)
	movq $GHC.Int.I64#_con_info,-776(%r12)
	movq %r14,-768(%r12)
	movq $GHC.Word.W64#_con_info,-760(%r12)
	movq %r11,-752(%r12)
	movq $GHC.Word.W64#_con_info,-744(%r12)
	movq %r10,-736(%r12)
	movq $GHC.Word.W64#_con_info,-728(%r12)
	movq %r9,-720(%r12)
	movq $GHC.Word.W64#_con_info,-712(%r12)
	movq %r8,-704(%r12)
	movq $GHC.Word.W64#_con_info,-696(%r12)
	movq %rdi,-688(%r12)
	movq $GHC.Word.W64#_con_info,-680(%r12)
	movq %rsi,-672(%r12)
	movq $GHC.Word.W64#_con_info,-664(%r12)
	movq %rdx,-656(%r12)
	movq $GHC.Word.W64#_con_info,-648(%r12)
	movq %rcx,-640(%r12)
	movq $GHC.Word.W64#_con_info,-632(%r12)
	movq 248(%rsp),%rax
	movq %rax,-624(%r12)
	movq $GHC.Word.W32#_con_info,-616(%r12)
	movq 240(%rsp),%rax
	movq %rax,-608(%r12)
	movq $GHC.Word.W32#_con_info,-600(%r12)
	movq 232(%rsp),%rax
	movq %rax,-592(%r12)
	movq $GHC.Stats.GCDetails_con_info,-584(%r12)
	leaq -599(%r12),%rax
	movq %rax,-576(%r12)
	leaq -615(%r12),%rax
	movq %rax,-568(%r12)
	leaq -631(%r12),%rax
	movq %rax,-560(%r12)
	leaq -647(%r12),%rax
	movq %rax,-552(%r12)
	leaq -663(%r12),%rax
	movq %rax,-544(%r12)
	leaq -679(%r12),%rax
	movq %rax,-536(%r12)
	leaq -695(%r12),%rax
	movq %rax,-528(%r12)
	leaq -711(%r12),%rax
	movq %rax,-520(%r12)
	leaq -727(%r12),%rax
	movq %rax,-512(%r12)
	leaq -743(%r12),%rax
	movq %rax,-504(%r12)
	leaq -759(%r12),%rax
	movq %rax,-496(%r12)
	leaq -775(%r12),%rax
	movq %rax,-488(%r12)
	leaq -791(%r12),%rax
	movq %rax,-480(%r12)
	leaq -807(%r12),%rax
	movq %rax,-472(%r12)
	movq $GHC.Int.I64#_con_info,-464(%r12)
	movq 216(%rsp),%rax
	movq %rax,-456(%r12)
	movq $GHC.Int.I64#_con_info,-448(%r12)
	movq 208(%rsp),%rax
	movq %rax,-440(%r12)
	movq $GHC.Int.I64#_con_info,-432(%r12)
	movq 200(%rsp),%rax
	movq %rax,-424(%r12)
	movq $GHC.Int.I64#_con_info,-416(%r12)
	movq 192(%rsp),%rax
	movq %rax,-408(%r12)
	movq $GHC.Int.I64#_con_info,-400(%r12)
	movq 184(%rsp),%rax
	movq %rax,-392(%r12)
	movq $GHC.Int.I64#_con_info,-384(%r12)
	movq 176(%rsp),%rax
	movq %rax,-376(%r12)
	movq $GHC.Word.W64#_con_info,-368(%r12)
	movq 168(%rsp),%rax
	movq %rax,-360(%r12)
	movq $GHC.Word.W64#_con_info,-352(%r12)
	movq 160(%rsp),%rax
	movq %rax,-344(%r12)
	movq $GHC.Word.W64#_con_info,-336(%r12)
	movq 152(%rsp),%rax
	movq %rax,-328(%r12)
	movq $GHC.Word.W64#_con_info,-320(%r12)
	movq 144(%rsp),%rax
	movq %rax,-312(%r12)
	movq $GHC.Word.W64#_con_info,-304(%r12)
	movq 136(%rsp),%rax
	movq %rax,-296(%r12)
	movq $GHC.Word.W64#_con_info,-288(%r12)
	movq 128(%rsp),%rax
	movq %rax,-280(%r12)
	movq $GHC.Word.W64#_con_info,-272(%r12)
	movq 120(%rsp),%rax
	movq %rax,-264(%r12)
	movq $GHC.Word.W64#_con_info,-256(%r12)
	movq 112(%rsp),%rax
	movq %rax,-248(%r12)
	movq $GHC.Word.W64#_con_info,-240(%r12)
	movq 104(%rsp),%rax
	movq %rax,-232(%r12)
	movq $GHC.Word.W64#_con_info,-224(%r12)
	movq 96(%rsp),%rax
	movq %rax,-216(%r12)
	movq $GHC.Word.W64#_con_info,-208(%r12)
	movq 88(%rsp),%rax
	movq %rax,-200(%r12)
	movq $GHC.Word.W32#_con_info,-192(%r12)
	movq 80(%rsp),%rax
	movq %rax,-184(%r12)
	movq $GHC.Word.W32#_con_info,-176(%r12)
	movq 72(%rsp),%rax
	movq %rax,-168(%r12)
	movq $GHC.Stats.RTSStats_con_info,-160(%r12)
	leaq -175(%r12),%rax
	movq %rax,-152(%r12)
	leaq -191(%r12),%rax
	movq %rax,-144(%r12)
	leaq -207(%r12),%rax
	movq %rax,-136(%r12)
	leaq -223(%r12),%rax
	movq %rax,-128(%r12)
	leaq -239(%r12),%rax
	movq %rax,-120(%r12)
	leaq -255(%r12),%rax
	movq %rax,-112(%r12)
	leaq -271(%r12),%rax
	movq %rax,-104(%r12)
	leaq -287(%r12),%rax
	movq %rax,-96(%r12)
	leaq -303(%r12),%rax
	movq %rax,-88(%r12)
	leaq -319(%r12),%rax
	movq %rax,-80(%r12)
	leaq -335(%r12),%rax
	movq %rax,-72(%r12)
	leaq -351(%r12),%rax
	movq %rax,-64(%r12)
	leaq -367(%r12),%rax
	movq %rax,-56(%r12)
	leaq -383(%r12),%rax
	movq %rax,-48(%r12)
	leaq -399(%r12),%rax
	movq %rax,-40(%r12)
	leaq -415(%r12),%rax
	movq %rax,-32(%r12)
	leaq -431(%r12),%rax
	movq %rax,-24(%r12)
	leaq -447(%r12),%rax
	movq %rax,-16(%r12)
	leaq -463(%r12),%rax
	movq %rax,-8(%r12)
	leaq -583(%r12),%rax
	movq %rax,(%r12)
	leaq -159(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLFS:
	movq $816,904(%r13)
	jmp stg_gc_noregs
	.size _ccLDF, .-_ccLDF


==================== Asm code ====================
2018-03-16 16:07:38.432167434 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccLDF_info:
	.quad	_ccLDF
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:38.434453104 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats_closure
.type GHC.Stats.getRTSStats_closure, @object
GHC.Stats.getRTSStats_closure:
	.quad	GHC.Stats.getRTSStats_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:38.435065889 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats_entry
.type GHC.Stats.getRTSStats_entry, @object
GHC.Stats.getRTSStats_entry:
_ccLHy:
	jmp GHC.Stats.getRTSStats1_entry
	.size GHC.Stats.getRTSStats_entry, .-GHC.Stats.getRTSStats_entry


==================== Asm code ====================
2018-03-16 16:07:38.435669417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats_info
.type GHC.Stats.getRTSStats_info, @object
GHC.Stats.getRTSStats_info:
	.quad	GHC.Stats.getRTSStats_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	ScI2G_srt+600


==================== Asm code ====================
2018-03-16 16:07:38.439319375 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.GCDetails_closure
.type GHC.Stats.GCDetails_closure, @object
GHC.Stats.GCDetails_closure:
	.quad	GHC.Stats.GCDetails_info


==================== Asm code ====================
2018-03-16 16:07:38.43999547 UTC

.section .text
.align 8
.globl GHC.Stats.GCDetails_slow
.type GHC.Stats.GCDetails_slow, @object
GHC.Stats.GCDetails_slow:
_ccLHG:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Stats.GCDetails_entry
	.size GHC.Stats.GCDetails_slow, .-GHC.Stats.GCDetails_slow


==================== Asm code ====================
2018-03-16 16:07:38.440943118 UTC

.section .text
.align 8
GHC.Stats.GCDetails_entry:
_ccLHL:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccLHP
_ccLHO:
	movq $GHC.Stats.GCDetails_con_info,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	movq %rdi,-88(%r12)
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq (%rbp),%rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,-8(%r12)
	movq 64(%rbp),%rax
	movq %rax,(%r12)
	leaq -111(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLHP:
	movq $120,904(%r13)
	movl $GHC.Stats.GCDetails_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Stats.GCDetails_entry, .-GHC.Stats.GCDetails_entry


==================== Asm code ====================
2018-03-16 16:07:38.442059627 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Stats.GCDetails_info:
	.quad	GHC.Stats.GCDetails_entry
	.quad	0
	.quad	14
	.quad	60129542144
	.quad	0
	.quad	14
	.quad	GHC.Stats.GCDetails_slow


==================== Asm code ====================
2018-03-16 16:07:38.445985531 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.RTSStats_closure
.type GHC.Stats.RTSStats_closure, @object
GHC.Stats.RTSStats_closure:
	.quad	GHC.Stats.RTSStats_info


==================== Asm code ====================
2018-03-16 16:07:38.446721213 UTC

.section .text
.align 8
.globl GHC.Stats.RTSStats_slow
.type GHC.Stats.RTSStats_slow, @object
GHC.Stats.RTSStats_slow:
_ccLI7:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Stats.RTSStats_entry
	.size GHC.Stats.RTSStats_slow, .-GHC.Stats.RTSStats_slow


==================== Asm code ====================
2018-03-16 16:07:38.447687235 UTC

.section .text
.align 8
GHC.Stats.RTSStats_entry:
_ccLIc:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccLIg
_ccLIf:
	movq $GHC.Stats.RTSStats_con_info,-160(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	movq %rdi,-136(%r12)
	movq %r8,-128(%r12)
	movq %r9,-120(%r12)
	movq (%rbp),%rax
	movq %rax,-112(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-96(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	movq 32(%rbp),%rax
	movq %rax,-80(%r12)
	movq 40(%rbp),%rax
	movq %rax,-72(%r12)
	movq 48(%rbp),%rax
	movq %rax,-64(%r12)
	movq 56(%rbp),%rax
	movq %rax,-56(%r12)
	movq 64(%rbp),%rax
	movq %rax,-48(%r12)
	movq 72(%rbp),%rax
	movq %rax,-40(%r12)
	movq 80(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -159(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccLIg:
	movq $168,904(%r13)
	movl $GHC.Stats.RTSStats_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Stats.RTSStats_entry, .-GHC.Stats.RTSStats_entry


==================== Asm code ====================
2018-03-16 16:07:38.448583435 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Stats.RTSStats_info:
	.quad	GHC.Stats.RTSStats_entry
	.quad	0
	.quad	14
	.quad	85899345920
	.quad	0
	.quad	20
	.quad	GHC.Stats.RTSStats_slow


==================== Asm code ====================
2018-03-16 16:07:38.450813555 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icJZM_str:
	.asciz "base:GHC.Stats.GCDetails"


==================== Asm code ====================
2018-03-16 16:07:38.451519685 UTC

.section .text
.align 8
.globl GHC.Stats.GCDetails_con_entry
.type GHC.Stats.GCDetails_con_entry, @object
GHC.Stats.GCDetails_con_entry:
_ccLID:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.GCDetails_con_entry, .-GHC.Stats.GCDetails_con_entry


==================== Asm code ====================
2018-03-16 16:07:38.452194877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.GCDetails_con_info
.type GHC.Stats.GCDetails_con_info, @object
GHC.Stats.GCDetails_con_info:
	.quad	GHC.Stats.GCDetails_con_entry
	.quad	14
	.quad	1
	.quad	icJZM_str


==================== Asm code ====================
2018-03-16 16:07:38.45468197 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icJZO_str:
	.asciz "base:GHC.Stats.RTSStats"


==================== Asm code ====================
2018-03-16 16:07:38.455361683 UTC

.section .text
.align 8
.globl GHC.Stats.RTSStats_con_entry
.type GHC.Stats.RTSStats_con_entry, @object
GHC.Stats.RTSStats_con_entry:
_ccLIJ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.RTSStats_con_entry, .-GHC.Stats.RTSStats_con_entry


==================== Asm code ====================
2018-03-16 16:07:38.456545579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.RTSStats_con_info
.type GHC.Stats.RTSStats_con_info, @object
GHC.Stats.RTSStats_con_info:
	.quad	GHC.Stats.RTSStats_con_entry
	.quad	20
	.quad	1
	.quad	icJZO_str


==================== Asm code ====================
2018-03-16 16:07:38.45939455 UTC

.section .data.rel.ro
.align 8
.align 1
ScI2G_srt:
	.quad	GHC.Show.showCommaSpace1_closure
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_closure
	.quad	GHC.Stats.$fShowGCDetails_$cshow_closure
	.quad	GHC.Stats.$fShowGCDetails1_closure
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_closure
	.quad	GHC.Stats.$fShowRTSStats_$cshow_closure
	.quad	GHC.Stats.$fShowRTSStats1_closure
	.quad	GHC.Read.$fReadWord32_$creadsPrec_closure
	.quad	lvl37_rcHqd_closure
	.quad	ds2_rcHqe_closure
	.quad	GHC.Read.$fReadWord64_$creadsPrec_closure
	.quad	lvl45_rcHqn_closure
	.quad	lvl46_rcHqo_closure
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure
	.quad	lvl65_rcHqH_closure
	.quad	lvl66_rcHqI_closure
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	lvl72_rcHqO_closure
	.quad	GHC.Read.readField_closure
	.quad	lvl70_rcHqM_closure
	.quad	lvl40_rcHqi_closure
	.quad	lvl68_rcHqK_closure
	.quad	lvl64_rcHqG_closure
	.quad	lvl62_rcHqE_closure
	.quad	lvl60_rcHqC_closure
	.quad	lvl58_rcHqA_closure
	.quad	lvl56_rcHqy_closure
	.quad	lvl54_rcHqw_closure
	.quad	lvl52_rcHqu_closure
	.quad	lvl50_rcHqs_closure
	.quad	lvl48_rcHqq_closure
	.quad	lvl44_rcHqm_closure
	.quad	lvl42_rcHqk_closure
	.quad	ds1_rcHqc_closure
	.quad	lexeme4_rcHqa_closure
	.quad	GHC.Stats.$w$creadPrec_closure
	.quad	lexeme1_rcHq7_closure
	.quad	GHC.Stats.$fReadGCDetails2_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.Stats.$fReadGCDetails1_closure
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_closure
	.quad	GHC.Stats.$fReadGCDetails3_closure
	.quad	lvl110_rcHru_closure
	.quad	lvl111_rcHrv_closure
	.quad	lvl108_rcHrs_closure
	.quad	lvl106_rcHrq_closure
	.quad	lvl104_rcHro_closure
	.quad	lvl102_rcHrm_closure
	.quad	lvl100_rcHrk_closure
	.quad	lvl98_rcHri_closure
	.quad	lvl96_rcHrg_closure
	.quad	lvl94_rcHre_closure
	.quad	lvl92_rcHrc_closure
	.quad	lvl90_rcHra_closure
	.quad	lvl88_rcHr8_closure
	.quad	lvl86_rcHr6_closure
	.quad	lvl84_rcHr4_closure
	.quad	lvl82_rcHr2_closure
	.quad	lvl80_rcHr0_closure
	.quad	lvl78_rcHqY_closure
	.quad	lvl76_rcHqW_closure
	.quad	lvl74_rcHqU_closure
	.quad	ds4_rcHqS_closure
	.quad	GHC.Stats.$w$creadPrec1_closure
	.quad	lexeme6_rcHqQ_closure
	.quad	GHC.Stats.$fReadRTSStats2_closure
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_closure
	.quad	GHC.Stats.$fReadRTSStats1_closure
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_closure
	.quad	GHC.Stats.$fReadRTSStats3_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.Stats.getRTSStats3_closure
	.quad	GHC.Stats.getRTSStats1_closure
	.quad	GHC.Stats.getRTSStats2_closure


==================== Asm code ====================
2018-03-16 16:07:47.070671068 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rcHpv_bytes:
	.asciz "GCDetails {"


==================== Asm code ====================
2018-03-16 16:07:47.072316252 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rcHpw_bytes:
	.asciz "gcdetails_gen = "


==================== Asm code ====================
2018-03-16 16:07:47.07417585 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rcHpx_bytes:
	.asciz "gcdetails_threads = "


==================== Asm code ====================
2018-03-16 16:07:47.075811517 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rcHpy_bytes:
	.asciz "gcdetails_allocated_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.077536371 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rcHpz_bytes:
	.asciz "gcdetails_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.079261318 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_rcHpA_bytes:
	.asciz "gcdetails_large_objects_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.080932635 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rcHpB_bytes:
	.asciz "gcdetails_compact_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.082783013 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl7_rcHpC_bytes:
	.asciz "gcdetails_slop_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.084479812 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rcHpD_bytes:
	.asciz "gcdetails_mem_in_use_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.086329979 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl9_rcHpE_bytes:
	.asciz "gcdetails_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.088065442 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rcHpF_bytes:
	.asciz "gcdetails_par_max_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.089805872 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl11_rcHpG_bytes:
	.asciz "gcdetails_par_balanced_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.091582817 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rcHpH_bytes:
	.asciz "gcdetails_sync_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.095064858 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rcHpI_bytes:
	.asciz "gcdetails_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.096754258 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rcHpJ_bytes:
	.asciz "gcdetails_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.098371767 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rcHpK_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:07:47.175668839 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_closure
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_closure, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.176610631 UTC

.section .text
.align 8
w1_scLJ9_entry:
_ccM7I:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM7J
_ccM7K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM7F_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM7F
_ccM7G:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM7J:
	jmp *-16(%r13)
	.size w1_scLJ9_entry, .-w1_scLJ9_entry


==================== Asm code ====================
2018-03-16 16:07:47.177355092 UTC

.section .data.rel.ro
.align 8
.align 1
w1_scLJ9_info:
	.quad	w1_scLJ9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.17806853 UTC

.section .text
.align 8
_ccM7F:
_ccM7F:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM7U
_ccM7V:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM7U:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM7F, .-_ccM7F


==================== Asm code ====================
2018-03-16 16:07:47.178693338 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM7F_info:
	.quad	_ccM7F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.179430666 UTC

.section .text
.align 8
w2_scLJe_entry:
_ccM84:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM85
_ccM86:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM81_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM81
_ccM82:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM85:
	jmp *-16(%r13)
	.size w2_scLJe_entry, .-w2_scLJe_entry


==================== Asm code ====================
2018-03-16 16:07:47.180136938 UTC

.section .data.rel.ro
.align 8
.align 1
w2_scLJe_info:
	.quad	w2_scLJe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.180836894 UTC

.section .text
.align 8
_ccM81:
_ccM81:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM8g
_ccM8h:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM8g:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM81, .-_ccM81


==================== Asm code ====================
2018-03-16 16:07:47.181607637 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM81_info:
	.quad	_ccM81
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.182387945 UTC

.section .text
.align 8
w3_scLJj_entry:
_ccM8q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM8r
_ccM8s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM8n_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM8n
_ccM8o:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM8r:
	jmp *-16(%r13)
	.size w3_scLJj_entry, .-w3_scLJj_entry


==================== Asm code ====================
2018-03-16 16:07:47.183053544 UTC

.section .data.rel.ro
.align 8
.align 1
w3_scLJj_info:
	.quad	w3_scLJj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.1837549 UTC

.section .text
.align 8
_ccM8n:
_ccM8n:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM8C
_ccM8D:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM8C:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM8n, .-_ccM8n


==================== Asm code ====================
2018-03-16 16:07:47.184362207 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM8n_info:
	.quad	_ccM8n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.185095161 UTC

.section .text
.align 8
w4_scLJo_entry:
_ccM8M:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM8N
_ccM8O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM8J_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM8J
_ccM8K:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM8N:
	jmp *-16(%r13)
	.size w4_scLJo_entry, .-w4_scLJo_entry


==================== Asm code ====================
2018-03-16 16:07:47.185859849 UTC

.section .data.rel.ro
.align 8
.align 1
w4_scLJo_info:
	.quad	w4_scLJo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.186600526 UTC

.section .text
.align 8
_ccM8J:
_ccM8J:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM8Y
_ccM8Z:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM8Y:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM8J, .-_ccM8J


==================== Asm code ====================
2018-03-16 16:07:47.187237259 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM8J_info:
	.quad	_ccM8J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.188027248 UTC

.section .text
.align 8
w5_scLJt_entry:
_ccM98:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM99
_ccM9a:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM95_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM95
_ccM96:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM99:
	jmp *-16(%r13)
	.size w5_scLJt_entry, .-w5_scLJt_entry


==================== Asm code ====================
2018-03-16 16:07:47.188732863 UTC

.section .data.rel.ro
.align 8
.align 1
w5_scLJt_info:
	.quad	w5_scLJt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.189534662 UTC

.section .text
.align 8
_ccM95:
_ccM95:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM9k
_ccM9l:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM9k:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM95, .-_ccM95


==================== Asm code ====================
2018-03-16 16:07:47.190197604 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM95_info:
	.quad	_ccM95
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.190955872 UTC

.section .text
.align 8
w6_scLJy_entry:
_ccM9u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM9v
_ccM9w:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM9r_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM9r
_ccM9s:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM9v:
	jmp *-16(%r13)
	.size w6_scLJy_entry, .-w6_scLJy_entry


==================== Asm code ====================
2018-03-16 16:07:47.191604885 UTC

.section .data.rel.ro
.align 8
.align 1
w6_scLJy_info:
	.quad	w6_scLJy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.192315876 UTC

.section .text
.align 8
_ccM9r:
_ccM9r:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccM9G
_ccM9H:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccM9G:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM9r, .-_ccM9r


==================== Asm code ====================
2018-03-16 16:07:47.192933527 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM9r_info:
	.quad	_ccM9r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.19375854 UTC

.section .text
.align 8
w7_scLJD_entry:
_ccM9Q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccM9R
_ccM9S:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccM9N_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccM9N
_ccM9O:
	movq (%rbx),%rax
	jmp *(%rax)
_ccM9R:
	jmp *-16(%r13)
	.size w7_scLJD_entry, .-w7_scLJD_entry


==================== Asm code ====================
2018-03-16 16:07:47.194453779 UTC

.section .data.rel.ro
.align 8
.align 1
w7_scLJD_info:
	.quad	w7_scLJD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.195195079 UTC

.section .text
.align 8
_ccM9N:
_ccM9N:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMa2
_ccMa3:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMa2:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccM9N, .-_ccM9N


==================== Asm code ====================
2018-03-16 16:07:47.195788904 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM9N_info:
	.quad	_ccM9N
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.196539163 UTC

.section .text
.align 8
w8_scLJI_entry:
_ccMac:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMad
_ccMae:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMa9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMa9
_ccMaa:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMad:
	jmp *-16(%r13)
	.size w8_scLJI_entry, .-w8_scLJI_entry


==================== Asm code ====================
2018-03-16 16:07:47.197270732 UTC

.section .data.rel.ro
.align 8
.align 1
w8_scLJI_info:
	.quad	w8_scLJI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.19801315 UTC

.section .text
.align 8
_ccMa9:
_ccMa9:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMao
_ccMap:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMao:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMa9, .-_ccMa9


==================== Asm code ====================
2018-03-16 16:07:47.200275999 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMa9_info:
	.quad	_ccMa9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.201074999 UTC

.section .text
.align 8
w9_scLJN_entry:
_ccMay:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMaz
_ccMaA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMav_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMav
_ccMaw:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMaz:
	jmp *-16(%r13)
	.size w9_scLJN_entry, .-w9_scLJN_entry


==================== Asm code ====================
2018-03-16 16:07:47.201801931 UTC

.section .data.rel.ro
.align 8
.align 1
w9_scLJN_info:
	.quad	w9_scLJN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.202496914 UTC

.section .text
.align 8
_ccMav:
_ccMav:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMaK
_ccMaL:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMaK:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMav, .-_ccMav


==================== Asm code ====================
2018-03-16 16:07:47.203136266 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMav_info:
	.quad	_ccMav
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.203857052 UTC

.section .text
.align 8
sat_scLK6_entry:
_ccMdZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMe0
_ccMe1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq lvl15_rcHpK_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMe0:
	jmp *-16(%r13)
	.size sat_scLK6_entry, .-sat_scLK6_entry


==================== Asm code ====================
2018-03-16 16:07:47.204491929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLK6_info:
	.quad	sat_scLK6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.205471128 UTC

.section .text
.align 8
sat_scLKa_entry:
_ccMe2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMe6
_ccMe7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMdQ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ccMdQ
_ccMdR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMe6:
	jmp *-16(%r13)
	.size sat_scLKa_entry, .-sat_scLKa_entry


==================== Asm code ====================
2018-03-16 16:07:47.206110368 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKa_info:
	.quad	sat_scLKa_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:47.206859754 UTC

.section .text
.align 8
_ccMdQ:
_ccMdQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMea
_ccMe9:
	movq 7(%rbx),%rax
	leaq sat_scLK6_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMe3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq -16(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMea:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMdQ, .-_ccMdQ


==================== Asm code ====================
2018-03-16 16:07:47.2075343 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMdQ_info:
	.quad	_ccMdQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.208220857 UTC

.section .text
.align 8
_ccMe3:
_ccMe3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMed
_ccMec:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMed:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMe3, .-_ccMe3


==================== Asm code ====================
2018-03-16 16:07:47.208831438 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMe3_info:
	.quad	_ccMe3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.209661035 UTC

.section .text
.align 8
sat_scLKb_entry:
_ccMef:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMej
_ccMei:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_scLKa_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl14_rcHpJ_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMej:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKb_entry, .-sat_scLKb_entry


==================== Asm code ====================
2018-03-16 16:07:47.210337514 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKb_info:
	.quad	sat_scLKb_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:47.211148721 UTC

.section .text
.align 8
sat_scLKc_entry:
_ccMek:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMel
_ccMem:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMeo
_ccMen:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_scLKb_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMeo:
	movq $32,904(%r13)
_ccMel:
	jmp *-16(%r13)
	.size sat_scLKc_entry, .-sat_scLKc_entry


==================== Asm code ====================
2018-03-16 16:07:47.211866581 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKc_info:
	.quad	sat_scLKc_entry
	.quad	2
	.quad	4294967314
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.212665098 UTC

.section .text
.align 8
sat_scLKg_entry:
_ccMep:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMet
_ccMeu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMdz_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ccMdz
_ccMdA:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMet:
	jmp *-16(%r13)
	.size sat_scLKg_entry, .-sat_scLKg_entry


==================== Asm code ====================
2018-03-16 16:07:47.213432947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKg_info:
	.quad	sat_scLKg_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.21424778 UTC

.section .text
.align 8
_ccMdz:
_ccMdz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMex
_ccMew:
	movq 7(%rbx),%rax
	leaq sat_scLKc_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMeq_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMex:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMdz, .-_ccMdz


==================== Asm code ====================
2018-03-16 16:07:47.214909495 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMdz_info:
	.quad	_ccMdz
	.quad	2
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.215638743 UTC

.section .text
.align 8
_ccMeq:
_ccMeq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMeA
_ccMez:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMeA:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMeq, .-_ccMeq


==================== Asm code ====================
2018-03-16 16:07:47.216349383 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMeq_info:
	.quad	_ccMeq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.217117357 UTC

.section .text
.align 8
sat_scLKh_entry:
_ccMeC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMeG
_ccMeF:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_scLKg_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	leaq lvl13_rcHpI_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMeG:
	movq $40,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKh_entry, .-sat_scLKh_entry


==================== Asm code ====================
2018-03-16 16:07:47.218526196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKh_info:
	.quad	sat_scLKh_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.219387206 UTC

.section .text
.align 8
sat_scLKi_entry:
_ccMeH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMeI
_ccMeJ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMeL
_ccMeK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_scLKh_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMeL:
	movq $40,904(%r13)
_ccMeI:
	jmp *-16(%r13)
	.size sat_scLKi_entry, .-sat_scLKi_entry


==================== Asm code ====================
2018-03-16 16:07:47.22014841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKi_info:
	.quad	sat_scLKi_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.220948284 UTC

.section .text
.align 8
sat_scLKm_entry:
_ccMeM:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMeQ
_ccMeR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMdi_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ccMdi
_ccMdj:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMeQ:
	jmp *-16(%r13)
	.size sat_scLKm_entry, .-sat_scLKm_entry


==================== Asm code ====================
2018-03-16 16:07:47.2217542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKm_info:
	.quad	sat_scLKm_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.222522548 UTC

.section .text
.align 8
_ccMdi:
_ccMdi:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMeU
_ccMeT:
	movq 7(%rbx),%rax
	leaq sat_scLKi_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMeN_info(%rip),%rbx
	movq %rbx,24(%rbp)
	leaq -32(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMeU:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMdi, .-_ccMdi


==================== Asm code ====================
2018-03-16 16:07:47.223214695 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMdi_info:
	.quad	_ccMdi
	.quad	3
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.223896521 UTC

.section .text
.align 8
_ccMeN:
_ccMeN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMeX
_ccMeW:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMeX:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMeN, .-_ccMeN


==================== Asm code ====================
2018-03-16 16:07:47.224536415 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMeN_info:
	.quad	_ccMeN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.225294102 UTC

.section .text
.align 8
sat_scLKn_entry:
_ccMeZ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMf3
_ccMf2:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_scLKm_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	leaq lvl12_rcHpH_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMf3:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKn_entry, .-sat_scLKn_entry


==================== Asm code ====================
2018-03-16 16:07:47.226007799 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKn_info:
	.quad	sat_scLKn_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.226839375 UTC

.section .text
.align 8
sat_scLKo_entry:
_ccMf4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMf5
_ccMf6:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMf8
_ccMf7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_scLKn_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMf8:
	movq $48,904(%r13)
_ccMf5:
	jmp *-16(%r13)
	.size sat_scLKo_entry, .-sat_scLKo_entry


==================== Asm code ====================
2018-03-16 16:07:47.227565947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKo_info:
	.quad	sat_scLKo_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.228404141 UTC

.section .text
.align 8
sat_scLKs_entry:
_ccMfc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMfd
_ccMfe:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMfg
_ccMff:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_scLKo_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMf9_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -40(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMfg:
	movq $48,904(%r13)
_ccMfd:
	jmp *-16(%r13)
	.size sat_scLKs_entry, .-sat_scLKs_entry


==================== Asm code ====================
2018-03-16 16:07:47.229165782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKs_info:
	.quad	sat_scLKs_entry
	.quad	5
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.230295675 UTC

.section .text
.align 8
_ccMf9:
_ccMf9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMfj
_ccMfi:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMfj:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMf9, .-_ccMf9


==================== Asm code ====================
2018-03-16 16:07:47.230932227 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMf9_info:
	.quad	_ccMf9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.231642583 UTC

.section .text
.align 8
sat_scLKt_entry:
_ccMfk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMfo
_ccMfn:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_scLKs_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	leaq lvl11_rcHpG_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMfo:
	movq $56,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKt_entry, .-sat_scLKt_entry


==================== Asm code ====================
2018-03-16 16:07:47.232301002 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKt_info:
	.quad	sat_scLKt_entry
	.quad	5
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.234020194 UTC

.section .text
.align 8
sat_scLKu_entry:
_ccMfp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMfq
_ccMfr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMft
_ccMfs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_scLKt_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMft:
	movq $56,904(%r13)
_ccMfq:
	jmp *-16(%r13)
	.size sat_scLKu_entry, .-sat_scLKu_entry


==================== Asm code ====================
2018-03-16 16:07:47.234751579 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKu_info:
	.quad	sat_scLKu_entry
	.quad	5
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.235608542 UTC

.section .text
.align 8
sat_scLKy_entry:
_ccMfx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMfy
_ccMfz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMfB
_ccMfA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_scLKu_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMfu_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -48(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMfB:
	movq $56,904(%r13)
_ccMfy:
	jmp *-16(%r13)
	.size sat_scLKy_entry, .-sat_scLKy_entry


==================== Asm code ====================
2018-03-16 16:07:47.236386773 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKy_info:
	.quad	sat_scLKy_entry
	.quad	6
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.237125009 UTC

.section .text
.align 8
_ccMfu:
_ccMfu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMfE
_ccMfD:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMfE:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMfu, .-_ccMfu


==================== Asm code ====================
2018-03-16 16:07:47.237884115 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMfu_info:
	.quad	_ccMfu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.238615279 UTC

.section .text
.align 8
sat_scLKz_entry:
_ccMfF:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMfJ
_ccMfI:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_scLKy_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	leaq lvl10_rcHpF_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMfJ:
	movq $64,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKz_entry, .-sat_scLKz_entry


==================== Asm code ====================
2018-03-16 16:07:47.239349688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKz_info:
	.quad	sat_scLKz_entry
	.quad	6
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.240188488 UTC

.section .text
.align 8
sat_scLKA_entry:
_ccMfK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMfL
_ccMfM:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMfO
_ccMfN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_scLKz_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMfO:
	movq $64,904(%r13)
_ccMfL:
	jmp *-16(%r13)
	.size sat_scLKA_entry, .-sat_scLKA_entry


==================== Asm code ====================
2018-03-16 16:07:47.240904027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKA_info:
	.quad	sat_scLKA_entry
	.quad	6
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.241820622 UTC

.section .text
.align 8
sat_scLKE_entry:
_ccMfS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMfT
_ccMfU:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMfW
_ccMfV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	leaq sat_scLKA_info(%rip),%r9
	movq %r9,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMfP_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -56(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMfW:
	movq $64,904(%r13)
_ccMfT:
	jmp *-16(%r13)
	.size sat_scLKE_entry, .-sat_scLKE_entry


==================== Asm code ====================
2018-03-16 16:07:47.242592436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKE_info:
	.quad	sat_scLKE_entry
	.quad	7
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.243311337 UTC

.section .text
.align 8
_ccMfP:
_ccMfP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMfZ
_ccMfY:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMfZ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMfP, .-_ccMfP


==================== Asm code ====================
2018-03-16 16:07:47.243971882 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMfP_info:
	.quad	_ccMfP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.244721316 UTC

.section .text
.align 8
sat_scLKF_entry:
_ccMg0:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccMg4
_ccMg3:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	leaq sat_scLKE_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	leaq lvl9_rcHpE_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMg4:
	movq $72,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKF_entry, .-sat_scLKF_entry


==================== Asm code ====================
2018-03-16 16:07:47.245524421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKF_info:
	.quad	sat_scLKF_entry
	.quad	7
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.246392519 UTC

.section .text
.align 8
sat_scLKG_entry:
_ccMg5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMg6
_ccMg7:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccMg9
_ccMg8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	leaq sat_scLKF_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMg9:
	movq $72,904(%r13)
_ccMg6:
	jmp *-16(%r13)
	.size sat_scLKG_entry, .-sat_scLKG_entry


==================== Asm code ====================
2018-03-16 16:07:47.247160803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKG_info:
	.quad	sat_scLKG_entry
	.quad	7
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.248028133 UTC

.section .text
.align 8
sat_scLKK_entry:
_ccMgd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMge
_ccMgf:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccMgh
_ccMgg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	leaq sat_scLKG_info(%rip),%r10
	movq %r10,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMga_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -64(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMgh:
	movq $72,904(%r13)
_ccMge:
	jmp *-16(%r13)
	.size sat_scLKK_entry, .-sat_scLKK_entry


==================== Asm code ====================
2018-03-16 16:07:47.248777573 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKK_info:
	.quad	sat_scLKK_entry
	.quad	8
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.249550514 UTC

.section .text
.align 8
_ccMga:
_ccMga:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMgk
_ccMgj:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMgk:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMga, .-_ccMga


==================== Asm code ====================
2018-03-16 16:07:47.250184713 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMga_info:
	.quad	_ccMga
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.250962282 UTC

.section .text
.align 8
sat_scLKL_entry:
_ccMgl:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMgp
_ccMgo:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	leaq sat_scLKK_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	leaq lvl8_rcHpD_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMgp:
	movq $80,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKL_entry, .-sat_scLKL_entry


==================== Asm code ====================
2018-03-16 16:07:47.251629318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKL_info:
	.quad	sat_scLKL_entry
	.quad	8
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.252478479 UTC

.section .text
.align 8
sat_scLKM_entry:
_ccMgq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMgr
_ccMgs:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMgu
_ccMgt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	leaq sat_scLKL_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMgu:
	movq $80,904(%r13)
_ccMgr:
	jmp *-16(%r13)
	.size sat_scLKM_entry, .-sat_scLKM_entry


==================== Asm code ====================
2018-03-16 16:07:47.253674715 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKM_info:
	.quad	sat_scLKM_entry
	.quad	8
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.254555956 UTC

.section .text
.align 8
sat_scLKQ_entry:
_ccMgy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMgz
_ccMgA:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMgC
_ccMgB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLKM_info(%rip),%r11
	movq %r11,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMgv_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -72(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMgC:
	movq $80,904(%r13)
_ccMgz:
	jmp *-16(%r13)
	.size sat_scLKQ_entry, .-sat_scLKQ_entry


==================== Asm code ====================
2018-03-16 16:07:47.255326845 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKQ_info:
	.quad	sat_scLKQ_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.256023965 UTC

.section .text
.align 8
_ccMgv:
_ccMgv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMgF
_ccMgE:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMgF:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMgv, .-_ccMgv


==================== Asm code ====================
2018-03-16 16:07:47.25664883 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMgv_info:
	.quad	_ccMgv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.25751411 UTC

.section .text
.align 8
sat_scLKR_entry:
_ccMgG:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMgK
_ccMgJ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLKQ_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	leaq lvl7_rcHpC_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMgK:
	movq $88,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKR_entry, .-sat_scLKR_entry


==================== Asm code ====================
2018-03-16 16:07:47.258230005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKR_info:
	.quad	sat_scLKR_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.25910406 UTC

.section .text
.align 8
sat_scLKS_entry:
_ccMgL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMgM
_ccMgN:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMgP
_ccMgO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLKR_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMgP:
	movq $88,904(%r13)
_ccMgM:
	jmp *-16(%r13)
	.size sat_scLKS_entry, .-sat_scLKS_entry


==================== Asm code ====================
2018-03-16 16:07:47.259919096 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKS_info:
	.quad	sat_scLKS_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.260813368 UTC

.section .text
.align 8
sat_scLKW_entry:
_ccMgT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMgU
_ccMgV:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMgX
_ccMgW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLKS_info(%rip),%r14
	movq %r14,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMgQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -80(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMgX:
	movq $88,904(%r13)
_ccMgU:
	jmp *-16(%r13)
	.size sat_scLKW_entry, .-sat_scLKW_entry


==================== Asm code ====================
2018-03-16 16:07:47.262028287 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKW_info:
	.quad	sat_scLKW_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.262771595 UTC

.section .text
.align 8
_ccMgQ:
_ccMgQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMh0
_ccMgZ:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMh0:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMgQ, .-_ccMgQ


==================== Asm code ====================
2018-03-16 16:07:47.26340265 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMgQ_info:
	.quad	_ccMgQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.264191428 UTC

.section .text
.align 8
sat_scLKX_entry:
_ccMh1:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMh5
_ccMh4:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLKW_info(%rip),%r14
	movq %r14,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	leaq lvl6_rcHpB_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMh5:
	movq $96,904(%r13)
	jmp *-16(%r13)
	.size sat_scLKX_entry, .-sat_scLKX_entry


==================== Asm code ====================
2018-03-16 16:07:47.264942305 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKX_info:
	.quad	sat_scLKX_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.265911472 UTC

.section .text
.align 8
sat_scLKY_entry:
_ccMh6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMh7
_ccMh8:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMha
_ccMh9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLKX_info(%rip),%r14
	movq %r14,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMha:
	movq $96,904(%r13)
_ccMh7:
	jmp *-16(%r13)
	.size sat_scLKY_entry, .-sat_scLKY_entry


==================== Asm code ====================
2018-03-16 16:07:47.266698673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLKY_info:
	.quad	sat_scLKY_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.267598335 UTC

.section .text
.align 8
sat_scLL2_entry:
_ccMhe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMhf
_ccMhg:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMhi
_ccMhh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLKY_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMhb_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -88(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMhi:
	movq $96,904(%r13)
_ccMhf:
	jmp *-16(%r13)
	.size sat_scLL2_entry, .-sat_scLL2_entry


==================== Asm code ====================
2018-03-16 16:07:47.269023573 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLL2_info:
	.quad	sat_scLL2_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.269837481 UTC

.section .text
.align 8
_ccMhb:
_ccMhb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMhl
_ccMhk:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMhl:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMhb, .-_ccMhb


==================== Asm code ====================
2018-03-16 16:07:47.27050446 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMhb_info:
	.quad	_ccMhb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.271327564 UTC

.section .text
.align 8
sat_scLL3_entry:
_ccMhm:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMhq
_ccMhp:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLL2_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	leaq lvl5_rcHpA_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMhq:
	movq $104,904(%r13)
	jmp *-16(%r13)
	.size sat_scLL3_entry, .-sat_scLL3_entry


==================== Asm code ====================
2018-03-16 16:07:47.272116745 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLL3_info:
	.quad	sat_scLL3_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.27303827 UTC

.section .text
.align 8
sat_scLL4_entry:
_ccMhr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMhs
_ccMht:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMhv
_ccMhu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLL3_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMhv:
	movq $104,904(%r13)
_ccMhs:
	jmp *-16(%r13)
	.size sat_scLL4_entry, .-sat_scLL4_entry


==================== Asm code ====================
2018-03-16 16:07:47.273923638 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLL4_info:
	.quad	sat_scLL4_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.274839816 UTC

.section .text
.align 8
sat_scLL8_entry:
_ccMhz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMhA
_ccMhB:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMhD
_ccMhC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLL4_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMhw_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -96(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMhD:
	movq $104,904(%r13)
_ccMhA:
	jmp *-16(%r13)
	.size sat_scLL8_entry, .-sat_scLL8_entry


==================== Asm code ====================
2018-03-16 16:07:47.27566312 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLL8_info:
	.quad	sat_scLL8_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.276361443 UTC

.section .text
.align 8
_ccMhw:
_ccMhw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMhG
_ccMhF:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMhG:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMhw, .-_ccMhw


==================== Asm code ====================
2018-03-16 16:07:47.276989219 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMhw_info:
	.quad	_ccMhw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.278142893 UTC

.section .text
.align 8
sat_scLL9_entry:
_ccMhH:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMhL
_ccMhK:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLL8_info(%rip),%rcx
	movq %rcx,-104(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	leaq lvl4_rcHpz_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMhL:
	movq $112,904(%r13)
	jmp *-16(%r13)
	.size sat_scLL9_entry, .-sat_scLL9_entry


==================== Asm code ====================
2018-03-16 16:07:47.278948584 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLL9_info:
	.quad	sat_scLL9_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.279873815 UTC

.section .text
.align 8
sat_scLLa_entry:
_ccMhM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMhN
_ccMhO:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMhQ
_ccMhP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLL9_info(%rip),%rcx
	movq %rcx,-104(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMhQ:
	movq $112,904(%r13)
_ccMhN:
	jmp *-16(%r13)
	.size sat_scLLa_entry, .-sat_scLLa_entry


==================== Asm code ====================
2018-03-16 16:07:47.28070559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLa_info:
	.quad	sat_scLLa_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.281727262 UTC

.section .text
.align 8
sat_scLLe_entry:
_ccMhU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMhV
_ccMhW:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMhY
_ccMhX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLLa_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMhR_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -104(%r12),%rdi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMhY:
	movq $112,904(%r13)
_ccMhV:
	jmp *-16(%r13)
	.size sat_scLLe_entry, .-sat_scLLe_entry


==================== Asm code ====================
2018-03-16 16:07:47.28260206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLe_info:
	.quad	sat_scLLe_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.283331376 UTC

.section .text
.align 8
_ccMhR:
_ccMhR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMi1
_ccMi0:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMi1:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMhR, .-_ccMhR


==================== Asm code ====================
2018-03-16 16:07:47.283955 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMhR_info:
	.quad	_ccMhR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.284755142 UTC

.section .text
.align 8
sat_scLLf_entry:
_ccMi2:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMi6
_ccMi5:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLLe_info(%rip),%rdx
	movq %rdx,-112(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	leaq lvl3_rcHpy_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMi6:
	movq $120,904(%r13)
	jmp *-16(%r13)
	.size sat_scLLf_entry, .-sat_scLLf_entry


==================== Asm code ====================
2018-03-16 16:07:47.285675171 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLf_info:
	.quad	sat_scLLf_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.286631965 UTC

.section .text
.align 8
sat_scLLg_entry:
_ccMi7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMi8
_ccMi9:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMib
_ccMia:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLLf_info(%rip),%rdx
	movq %rdx,-112(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMib:
	movq $120,904(%r13)
_ccMi8:
	jmp *-16(%r13)
	.size sat_scLLg_entry, .-sat_scLLg_entry


==================== Asm code ====================
2018-03-16 16:07:47.287498517 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLg_info:
	.quad	sat_scLLg_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.288409267 UTC

.section .text
.align 8
sat_scLLk_entry:
_ccMic:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMij
_ccMik:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMbh_info(%rip),%rax
	movq %rax,-128(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rsi,88(%rsp)
	movq 64(%rsp),%rsi
	movq %rsi,-120(%rbp)
	movq 72(%rsp),%rsi
	movq %rsi,-112(%rbp)
	movq 80(%rsp),%rsi
	movq %rsi,-104(%rbp)
	movq 88(%rsp),%rsi
	movq %rsi,-96(%rbp)
	movq %rdi,-88(%rbp)
	movq %r8,-80(%rbp)
	movq %r9,-72(%rbp)
	movq %r10,-64(%rbp)
	movq %r11,-56(%rbp)
	movq %r14,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _ccMbh
_ccMbi:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMij:
	jmp *-16(%r13)
	.size sat_scLLk_entry, .-sat_scLLk_entry


==================== Asm code ====================
2018-03-16 16:07:47.289533054 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLk_info:
	.quad	sat_scLLk_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.290401043 UTC

.section .text
.align 8
_ccMbh:
_ccMbh:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMin
_ccMim:
	movq 7(%rbx),%rax
	leaq sat_scLLg_info(%rip),%rbx
	movq %rbx,-112(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMig_info(%rip),%rbx
	movq %rbx,104(%rbp)
	leaq -112(%r12),%rsi
	movq %rax,%r14
	addq $104,%rbp
	jmp *GHC.Show.$witos_entry@gotpcrel(%rip)
_ccMin:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMbh, .-_ccMbh


==================== Asm code ====================
2018-03-16 16:07:47.291209812 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMbh_info:
	.quad	_ccMbh
	.quad	13
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.291905242 UTC

.section .text
.align 8
_ccMig:
_ccMig:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMiq
_ccMip:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMiq:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMig, .-_ccMig


==================== Asm code ====================
2018-03-16 16:07:47.292567445 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMig_info:
	.quad	_ccMig
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.293517878 UTC

.section .text
.align 8
sat_scLLl_entry:
_ccMis:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMiw
_ccMiv:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLLk_info(%rip),%rsi
	movq %rsi,-120(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	leaq lvl2_rcHpx_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMiw:
	movq $128,904(%r13)
	jmp *-16(%r13)
	.size sat_scLLl_entry, .-sat_scLLl_entry


==================== Asm code ====================
2018-03-16 16:07:47.29438224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLl_info:
	.quad	sat_scLLl_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.295300268 UTC

.section .text
.align 8
sat_scLLm_entry:
_ccMix:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMiy
_ccMiz:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMiB
_ccMiA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLLl_info(%rip),%rsi
	movq %rsi,-120(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMiB:
	movq $128,904(%r13)
_ccMiy:
	jmp *-16(%r13)
	.size sat_scLLm_entry, .-sat_scLLm_entry


==================== Asm code ====================
2018-03-16 16:07:47.296182357 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLm_info:
	.quad	sat_scLLm_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.297142506 UTC

.section .text
.align 8
sat_scLLq_entry:
_ccMiC:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMiJ
_ccMiK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMb0_info(%rip),%rax
	movq %rax,-136(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq 16(%rbx),%rbx
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-128(%rbp)
	movq 72(%rsp),%rdi
	movq %rdi,-120(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 96(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq %r8,-88(%rbp)
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-136,%rbp
	testb $7,%bl
	jne _ccMb0
_ccMb1:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMiJ:
	jmp *-16(%r13)
	.size sat_scLLq_entry, .-sat_scLLq_entry


==================== Asm code ====================
2018-03-16 16:07:47.298085332 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLq_info:
	.quad	sat_scLLq_entry
	.quad	15
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.298980813 UTC

.section .text
.align 8
_ccMb0:
_ccMb0:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMiN
_ccMiM:
	movq 7(%rbx),%rax
	leaq sat_scLLm_info(%rip),%rbx
	movq %rbx,-120(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMiG_info(%rip),%rbx
	movq %rbx,112(%rbp)
	leaq -120(%r12),%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp *GHC.Show.$witos_entry@gotpcrel(%rip)
_ccMiN:
	movq $128,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMb0, .-_ccMb0


==================== Asm code ====================
2018-03-16 16:07:47.299831494 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMb0_info:
	.quad	_ccMb0
	.quad	14
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.300569176 UTC

.section .text
.align 8
_ccMiG:
_ccMiG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMiQ
_ccMiP:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMiQ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMiG, .-_ccMiG


==================== Asm code ====================
2018-03-16 16:07:47.301189311 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMiG_info:
	.quad	_ccMiG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.302259975 UTC

.section .text
.align 8
sat_scLLr_entry:
_ccMiS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMiT
_ccMiU:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccMiW
_ccMiV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLLq_info(%rip),%rdi
	movq %rdi,-128(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	leaq lvl1_rcHpw_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMiW:
	movq $136,904(%r13)
_ccMiT:
	jmp *-16(%r13)
	.size sat_scLLr_entry, .-sat_scLLr_entry


==================== Asm code ====================
2018-03-16 16:07:47.303160303 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLr_info:
	.quad	sat_scLLr_entry
	.quad	15
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.304066125 UTC

.section .text
.align 8
p_scLJS_entry:
_ccMiX:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccMj1
_ccMj0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLLr_info(%rip),%rdi
	movq %rdi,-128(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -128(%r12),%rsi
	leaq lvl_rcHpv_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMj1:
	movq $136,904(%r13)
	jmp *-8(%r13)
	.size p_scLJS_entry, .-p_scLJS_entry


==================== Asm code ====================
2018-03-16 16:07:47.30553113 UTC

.section .data.rel.ro
.align 8
.align 1
p_scLJS_info:
	.quad	p_scLJS_entry
	.quad	14
	.quad	12884901896
	.quad	4294967301
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.306408202 UTC

.section .text
.align 8
sat_scLLv_entry:
_ccMjg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMjh
_ccMji:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMjk
_ccMjj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp p_scLJS_entry
_ccMjk:
	movq $24,904(%r13)
_ccMjh:
	jmp *-16(%r13)
	.size sat_scLLv_entry, .-sat_scLLv_entry


==================== Asm code ====================
2018-03-16 16:07:47.307135709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLv_info:
	.quad	sat_scLLv_entry
	.quad	2
	.quad	12884901906
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.307907075 UTC

.section .text
.align 8
sat_scLLw_entry:
_ccMjm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMjq
_ccMjp:
	movq 7(%rbx),%rax
	leaq sat_scLLv_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccMjq:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scLLw_entry, .-sat_scLLw_entry


==================== Asm code ====================
2018-03-16 16:07:47.308552523 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLLw_info:
	.quad	sat_scLLw_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.309774091 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_entry, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_entry:
_ccMjr:
	leaq -120(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMjs
_ccMjt:
	leaq block_ccM7r_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccM7r
_ccM7s:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMjs:
	leaq GHC.Stats.$fShowGCDetails_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowGCDetails_$cshowsPrec_entry, .-GHC.Stats.$fShowGCDetails_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:47.310463874 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowsPrec_info
.type GHC.Stats.$fShowGCDetails_$cshowsPrec_info, @object
GHC.Stats.$fShowGCDetails_$cshowsPrec_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.311384643 UTC

.section .text
.align 8
_ccM7r:
_ccM7r:
	leaq block_ccM7w_info(%rip),%rax
	movq %rax,-104(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq %rbx,88(%rsp)
	movq 8(%rbp),%rbx
	movq %rsi,96(%rsp)
	movq 80(%rsp),%rsi
	movq %rsi,-96(%rbp)
	movq 96(%rsp),%rsi
	movq %rsi,-88(%rbp)
	movq %rdi,-80(%rbp)
	movq %r8,-72(%rbp)
	movq %r9,-64(%rbp)
	movq %r10,-56(%rbp)
	movq %r11,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq 88(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 72(%rsp),%rax
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,8(%rbp)
	addq $-104,%rbp
	testb $7,%bl
	jne _ccM7w
_ccM7x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccM7r, .-_ccM7r


==================== Asm code ====================
2018-03-16 16:07:47.312217208 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM7r_info:
	.quad	_ccM7r
	.quad	1
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.313222003 UTC

.section .text
.align 8
_ccM7w:
_ccM7w:
	addq $352,%r12
	cmpq 856(%r13),%r12
	ja _ccMjx
_ccMjw:
	movq 7(%rbx),%rax
	leaq w1_scLJ9_info(%rip),%rbx
	movq %rbx,-344(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-328(%r12)
	leaq w2_scLJe_info(%rip),%rbx
	movq %rbx,-320(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-304(%r12)
	leaq w3_scLJj_info(%rip),%rbx
	movq %rbx,-296(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-280(%r12)
	leaq w4_scLJo_info(%rip),%rbx
	movq %rbx,-272(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-256(%r12)
	leaq w5_scLJt_info(%rip),%rbx
	movq %rbx,-248(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-232(%r12)
	leaq w6_scLJy_info(%rip),%rbx
	movq %rbx,-224(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-208(%r12)
	leaq w7_scLJD_info(%rip),%rbx
	movq %rbx,-200(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-184(%r12)
	leaq w8_scLJI_info(%rip),%rbx
	movq %rbx,-176(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-160(%r12)
	leaq w9_scLJN_info(%rip),%rbx
	movq %rbx,-152(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-136(%r12)
	leaq p_scLJS_info(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-88(%r12)
	leaq -344(%r12),%rbx
	movq %rbx,-80(%r12)
	leaq -320(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-64(%r12)
	leaq -272(%r12),%rbx
	movq %rbx,-56(%r12)
	leaq -248(%r12),%rbx
	movq %rbx,-48(%r12)
	leaq -224(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq -200(%r12),%rbx
	movq %rbx,-32(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -152(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -127(%r12),%rbx
	cmpq $11,%rax
	jl _ccMjz
_ccMjA:
	leaq sat_scLLw_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMjz:
	addq $-16,%r12
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMjx:
	movq $352,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccM7w, .-_ccM7w


==================== Asm code ====================
2018-03-16 16:07:47.314351676 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccM7w_info:
	.quad	_ccM7w
	.quad	14
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.316011276 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails2_closure
.type GHC.Stats.$fShowGCDetails2_closure, @object
GHC.Stats.$fShowGCDetails2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.318882224 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshow_closure
.type GHC.Stats.$fShowGCDetails_$cshow_closure, @object
GHC.Stats.$fShowGCDetails_$cshow_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.319657141 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshow_entry
.type GHC.Stats.$fShowGCDetails_$cshow_entry, @object
GHC.Stats.$fShowGCDetails_$cshow_entry:
_ccMse:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMsf
_ccMsg:
	movq %r14,%rsi
	leaq GHC.Stats.$fShowGCDetails2_closure+1(%rip),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
_ccMsf:
	leaq GHC.Stats.$fShowGCDetails_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowGCDetails_$cshow_entry, .-GHC.Stats.$fShowGCDetails_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:47.320340492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshow_info
.type GHC.Stats.$fShowGCDetails_$cshow_info, @object
GHC.Stats.$fShowGCDetails_$cshow_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScMjD_srt+16


==================== Asm code ====================
2018-03-16 16:07:47.322602066 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails1_closure
.type GHC.Stats.$fShowGCDetails1_closure, @object
GHC.Stats.$fShowGCDetails1_closure:
	.quad	GHC.Stats.$fShowGCDetails1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.323236065 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails1_entry
.type GHC.Stats.$fShowGCDetails1_entry, @object
GHC.Stats.$fShowGCDetails1_entry:
_ccMst:
	movq %r14,%rsi
	leaq GHC.Stats.$fShowGCDetails2_closure+1(%rip),%r14
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
	.size GHC.Stats.$fShowGCDetails1_entry, .-GHC.Stats.$fShowGCDetails1_entry


==================== Asm code ====================
2018-03-16 16:07:47.323803139 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails1_info
.type GHC.Stats.$fShowGCDetails1_info, @object
GHC.Stats.$fShowGCDetails1_info:
	.quad	GHC.Stats.$fShowGCDetails1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+16


==================== Asm code ====================
2018-03-16 16:07:47.325995792 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowList_closure
.type GHC.Stats.$fShowGCDetails_$cshowList_closure, @object
GHC.Stats.$fShowGCDetails_$cshowList_closure:
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.326646554 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowGCDetails_$cshowList_entry
.type GHC.Stats.$fShowGCDetails_$cshowList_entry, @object
GHC.Stats.$fShowGCDetails_$cshowList_entry:
_ccMsE:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Stats.$fShowGCDetails1_closure+1(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Stats.$fShowGCDetails_$cshowList_entry, .-GHC.Stats.$fShowGCDetails_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:47.327298354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_$cshowList_info
.type GHC.Stats.$fShowGCDetails_$cshowList_info, @object
GHC.Stats.$fShowGCDetails_$cshowList_info:
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScMjD_srt+32


==================== Asm code ====================
2018-03-16 16:07:47.32912318 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowGCDetails_closure
.type GHC.Stats.$fShowGCDetails_closure, @object
GHC.Stats.$fShowGCDetails_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_closure+2
	.quad	GHC.Stats.$fShowGCDetails_$cshow_closure+1
	.quad	GHC.Stats.$fShowGCDetails_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.33146981 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl16_rcHpL_bytes:
	.asciz "RTSStats {"


==================== Asm code ====================
2018-03-16 16:07:47.333099407 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_rcHpM_bytes:
	.asciz "gcs = "


==================== Asm code ====================
2018-03-16 16:07:47.334750198 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl18_rcHpN_bytes:
	.asciz "major_gcs = "


==================== Asm code ====================
2018-03-16 16:07:47.336888967 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl19_rcHpO_bytes:
	.asciz "allocated_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.339162269 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_rcHpP_bytes:
	.asciz "max_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.340769694 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_rcHpQ_bytes:
	.asciz "max_large_objects_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.342429846 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_rcHpR_bytes:
	.asciz "max_compact_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.344137885 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl23_rcHpS_bytes:
	.asciz "max_slop_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.346205428 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_rcHpT_bytes:
	.asciz "max_mem_in_use_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.347830293 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl25_rcHpU_bytes:
	.asciz "cumulative_live_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.34950076 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_rcHpV_bytes:
	.asciz "copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.351087542 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl27_rcHpW_bytes:
	.asciz "par_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.35271925 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl28_rcHpX_bytes:
	.asciz "cumulative_par_max_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.354438572 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl29_rcHpY_bytes:
	.asciz "cumulative_par_balanced_copied_bytes = "


==================== Asm code ====================
2018-03-16 16:07:47.356006906 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_rcHpZ_bytes:
	.asciz "mutator_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.357684337 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl31_rcHq0_bytes:
	.asciz "mutator_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.359342928 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_rcHq1_bytes:
	.asciz "gc_cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.360986524 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_rcHq2_bytes:
	.asciz "gc_elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.363238237 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl34_rcHq3_bytes:
	.asciz "cpu_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.364765708 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl35_rcHq4_bytes:
	.asciz "elapsed_ns = "


==================== Asm code ====================
2018-03-16 16:07:47.366443689 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_rcHq5_bytes:
	.asciz "gc = "


==================== Asm code ====================
2018-03-16 16:07:47.486374816 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_closure
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_closure, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.487286272 UTC

.section .text
.align 8
w1_scLLZ_entry:
_ccMts:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMtt
_ccMtu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMtp_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMtp
_ccMtq:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMtt:
	jmp *-16(%r13)
	.size w1_scLLZ_entry, .-w1_scLLZ_entry


==================== Asm code ====================
2018-03-16 16:07:47.48788787 UTC

.section .data.rel.ro
.align 8
.align 1
w1_scLLZ_info:
	.quad	w1_scLLZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.488598376 UTC

.section .text
.align 8
_ccMtp:
_ccMtp:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMtE
_ccMtF:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMtE:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMtp, .-_ccMtp


==================== Asm code ====================
2018-03-16 16:07:47.489190192 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMtp_info:
	.quad	_ccMtp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.490003114 UTC

.section .text
.align 8
w2_scLM4_entry:
_ccMtO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMtP
_ccMtQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMtL_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMtL
_ccMtM:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMtP:
	jmp *-16(%r13)
	.size w2_scLM4_entry, .-w2_scLM4_entry


==================== Asm code ====================
2018-03-16 16:07:47.490703934 UTC

.section .data.rel.ro
.align 8
.align 1
w2_scLM4_info:
	.quad	w2_scLM4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.491400029 UTC

.section .text
.align 8
_ccMtL:
_ccMtL:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMu0
_ccMu1:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMu0:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMtL, .-_ccMtL


==================== Asm code ====================
2018-03-16 16:07:47.492029784 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMtL_info:
	.quad	_ccMtL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.492742722 UTC

.section .text
.align 8
w3_scLM9_entry:
_ccMua:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMub
_ccMuc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMu7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMu7
_ccMu8:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMub:
	jmp *-16(%r13)
	.size w3_scLM9_entry, .-w3_scLM9_entry


==================== Asm code ====================
2018-03-16 16:07:47.493508299 UTC

.section .data.rel.ro
.align 8
.align 1
w3_scLM9_info:
	.quad	w3_scLM9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.494222644 UTC

.section .text
.align 8
_ccMu7:
_ccMu7:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMum
_ccMun:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMum:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMu7, .-_ccMu7


==================== Asm code ====================
2018-03-16 16:07:47.494820186 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMu7_info:
	.quad	_ccMu7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.495549469 UTC

.section .text
.align 8
w4_scLMe_entry:
_ccMuw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMux
_ccMuy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMut_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMut
_ccMuu:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMux:
	jmp *-16(%r13)
	.size w4_scLMe_entry, .-w4_scLMe_entry


==================== Asm code ====================
2018-03-16 16:07:47.496207003 UTC

.section .data.rel.ro
.align 8
.align 1
w4_scLMe_info:
	.quad	w4_scLMe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.496881002 UTC

.section .text
.align 8
_ccMut:
_ccMut:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMuI
_ccMuJ:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMuI:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMut, .-_ccMut


==================== Asm code ====================
2018-03-16 16:07:47.497583596 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMut_info:
	.quad	_ccMut
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.4983045 UTC

.section .text
.align 8
w5_scLMj_entry:
_ccMuS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMuT
_ccMuU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMuP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMuP
_ccMuQ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMuT:
	jmp *-16(%r13)
	.size w5_scLMj_entry, .-w5_scLMj_entry


==================== Asm code ====================
2018-03-16 16:07:47.498928523 UTC

.section .data.rel.ro
.align 8
.align 1
w5_scLMj_info:
	.quad	w5_scLMj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.499578552 UTC

.section .text
.align 8
_ccMuP:
_ccMuP:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMv4
_ccMv5:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMv4:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMuP, .-_ccMuP


==================== Asm code ====================
2018-03-16 16:07:47.500185461 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMuP_info:
	.quad	_ccMuP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.500867098 UTC

.section .text
.align 8
w6_scLMo_entry:
_ccMve:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMvf
_ccMvg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMvb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMvb
_ccMvc:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMvf:
	jmp *-16(%r13)
	.size w6_scLMo_entry, .-w6_scLMo_entry


==================== Asm code ====================
2018-03-16 16:07:47.501610292 UTC

.section .data.rel.ro
.align 8
.align 1
w6_scLMo_info:
	.quad	w6_scLMo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.502270019 UTC

.section .text
.align 8
_ccMvb:
_ccMvb:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMvq
_ccMvr:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMvq:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMvb, .-_ccMvb


==================== Asm code ====================
2018-03-16 16:07:47.502877523 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMvb_info:
	.quad	_ccMvb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.503614718 UTC

.section .text
.align 8
w7_scLMt_entry:
_ccMvA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMvB
_ccMvC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMvx_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMvx
_ccMvy:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMvB:
	jmp *-16(%r13)
	.size w7_scLMt_entry, .-w7_scLMt_entry


==================== Asm code ====================
2018-03-16 16:07:47.504283777 UTC

.section .data.rel.ro
.align 8
.align 1
w7_scLMt_info:
	.quad	w7_scLMt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.504962136 UTC

.section .text
.align 8
_ccMvx:
_ccMvx:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMvM
_ccMvN:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMvM:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMvx, .-_ccMvx


==================== Asm code ====================
2018-03-16 16:07:47.505700191 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMvx_info:
	.quad	_ccMvx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.506457561 UTC

.section .text
.align 8
w8_scLMy_entry:
_ccMvW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMvX
_ccMvY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMvT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMvT
_ccMvU:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMvX:
	jmp *-16(%r13)
	.size w8_scLMy_entry, .-w8_scLMy_entry


==================== Asm code ====================
2018-03-16 16:07:47.507110138 UTC

.section .data.rel.ro
.align 8
.align 1
w8_scLMy_info:
	.quad	w8_scLMy_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.507788836 UTC

.section .text
.align 8
_ccMvT:
_ccMvT:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMw8
_ccMw9:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMw8:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMvT, .-_ccMvT


==================== Asm code ====================
2018-03-16 16:07:47.508345806 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMvT_info:
	.quad	_ccMvT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.509074155 UTC

.section .text
.align 8
w9_scLMD_entry:
_ccMwi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMwj
_ccMwk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMwf_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMwf
_ccMwg:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMwj:
	jmp *-16(%r13)
	.size w9_scLMD_entry, .-w9_scLMD_entry


==================== Asm code ====================
2018-03-16 16:07:47.510039216 UTC

.section .data.rel.ro
.align 8
.align 1
w9_scLMD_info:
	.quad	w9_scLMD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.510725429 UTC

.section .text
.align 8
_ccMwf:
_ccMwf:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMwu
_ccMwv:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMwu:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMwf, .-_ccMwf


==================== Asm code ====================
2018-03-16 16:07:47.511312864 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMwf_info:
	.quad	_ccMwf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.512011965 UTC

.section .text
.align 8
w10_scLMI_entry:
_ccMwE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMwF
_ccMwG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMwB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMwB
_ccMwC:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMwF:
	jmp *-16(%r13)
	.size w10_scLMI_entry, .-w10_scLMI_entry


==================== Asm code ====================
2018-03-16 16:07:47.512645778 UTC

.section .data.rel.ro
.align 8
.align 1
w10_scLMI_info:
	.quad	w10_scLMI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.513448539 UTC

.section .text
.align 8
_ccMwB:
_ccMwB:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMwQ
_ccMwR:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMwQ:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMwB, .-_ccMwB


==================== Asm code ====================
2018-03-16 16:07:47.514083921 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMwB_info:
	.quad	_ccMwB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.514834592 UTC

.section .text
.align 8
w11_scLMN_entry:
_ccMx0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMx1
_ccMx2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMwX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _ccMwX
_ccMwY:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMx1:
	jmp *-16(%r13)
	.size w11_scLMN_entry, .-w11_scLMN_entry


==================== Asm code ====================
2018-03-16 16:07:47.516658743 UTC

.section .data.rel.ro
.align 8
.align 1
w11_scLMN_info:
	.quad	w11_scLMN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.517430536 UTC

.section .text
.align 8
_ccMwX:
_ccMwX:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _ccMxc
_ccMxd:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_ccMxc:
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
	.size _ccMwX, .-_ccMwX


==================== Asm code ====================
2018-03-16 16:07:47.518051796 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMwX_info:
	.quad	_ccMwX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.518786191 UTC

.section .text
.align 8
f_scLMS_entry:
_ccMxj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMxk
_ccMxl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq GHC.Stats.$fShowGCDetails2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Stats.$fShowGCDetails_$cshowsPrec_entry
_ccMxk:
	jmp *-16(%r13)
	.size f_scLMS_entry, .-f_scLMS_entry


==================== Asm code ====================
2018-03-16 16:07:47.519411425 UTC

.section .data.rel.ro
.align 8
.align 1
f_scLMS_info:
	.quad	f_scLMS_entry
	.quad	1
	.quad	4294967312
	.quad	ScMjD_srt+16


==================== Asm code ====================
2018-03-16 16:07:47.520112038 UTC

.section .text
.align 8
sat_scLNd_entry:
_ccMBX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMBY
_ccMBZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq lvl15_rcHpK_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMBY:
	jmp *-16(%r13)
	.size sat_scLNd_entry, .-sat_scLNd_entry


==================== Asm code ====================
2018-03-16 16:07:47.520753977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNd_info:
	.quad	sat_scLNd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:07:47.521645894 UTC

.section .text
.align 8
sat_scLNe_entry:
_ccMC0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMC1
_ccMC2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMC4
_ccMC3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_scLNd_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccMC4:
	movq $24,904(%r13)
_ccMC1:
	jmp *-16(%r13)
	.size sat_scLNe_entry, .-sat_scLNe_entry


==================== Asm code ====================
2018-03-16 16:07:47.522331852 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNe_info:
	.quad	sat_scLNe_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:47.523045008 UTC

.section .text
.align 8
sat_scLNf_entry:
_ccMC5:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMC9
_ccMC8:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_scLNe_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl36_rcHq5_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMC9:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNf_entry, .-sat_scLNf_entry


==================== Asm code ====================
2018-03-16 16:07:47.523705438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNf_info:
	.quad	sat_scLNf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:47.524498163 UTC

.section .text
.align 8
sat_scLNg_entry:
_ccMCa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMCb
_ccMCc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMCe
_ccMCd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_scLNf_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMCe:
	movq $32,904(%r13)
_ccMCb:
	jmp *-16(%r13)
	.size sat_scLNg_entry, .-sat_scLNg_entry


==================== Asm code ====================
2018-03-16 16:07:47.525230541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNg_info:
	.quad	sat_scLNg_entry
	.quad	2
	.quad	4294967314
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.526103439 UTC

.section .text
.align 8
sat_scLNk_entry:
_ccMCf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMCj
_ccMCk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMBC_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ccMBC
_ccMBD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMCj:
	jmp *-16(%r13)
	.size sat_scLNk_entry, .-sat_scLNk_entry


==================== Asm code ====================
2018-03-16 16:07:47.52680459 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNk_info:
	.quad	sat_scLNk_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.527592466 UTC

.section .text
.align 8
_ccMBC:
_ccMBC:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccMCn
_ccMCm:
	movq 7(%rbx),%rax
	leaq sat_scLNg_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMCg_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -24(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMCn:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMBC, .-_ccMBC


==================== Asm code ====================
2018-03-16 16:07:47.528280929 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMBC_info:
	.quad	_ccMBC
	.quad	2
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.529003794 UTC

.section .text
.align 8
_ccMCg:
_ccMCg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMCq
_ccMCp:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMCq:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMCg, .-_ccMCg


==================== Asm code ====================
2018-03-16 16:07:47.530228282 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMCg_info:
	.quad	_ccMCg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.530991696 UTC

.section .text
.align 8
sat_scLNl_entry:
_ccMCs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMCw
_ccMCv:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_scLNk_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	leaq lvl35_rcHq4_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMCw:
	movq $40,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNl_entry, .-sat_scLNl_entry


==================== Asm code ====================
2018-03-16 16:07:47.531663637 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNl_info:
	.quad	sat_scLNl_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.532489317 UTC

.section .text
.align 8
sat_scLNm_entry:
_ccMCx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMCy
_ccMCz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMCB
_ccMCA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_scLNl_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMCB:
	movq $40,904(%r13)
_ccMCy:
	jmp *-16(%r13)
	.size sat_scLNm_entry, .-sat_scLNm_entry


==================== Asm code ====================
2018-03-16 16:07:47.533200535 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNm_info:
	.quad	sat_scLNm_entry
	.quad	3
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.534042594 UTC

.section .text
.align 8
sat_scLNq_entry:
_ccMCC:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMCG
_ccMCH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMBl_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 16(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ccMBl
_ccMBm:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMCG:
	jmp *-16(%r13)
	.size sat_scLNq_entry, .-sat_scLNq_entry


==================== Asm code ====================
2018-03-16 16:07:47.534764433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNq_info:
	.quad	sat_scLNq_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.535592652 UTC

.section .text
.align 8
_ccMBl:
_ccMBl:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccMCK
_ccMCJ:
	movq 7(%rbx),%rax
	leaq sat_scLNm_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMCD_info(%rip),%rbx
	movq %rbx,24(%rbp)
	leaq -32(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMCK:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMBl, .-_ccMBl


==================== Asm code ====================
2018-03-16 16:07:47.536290381 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMBl_info:
	.quad	_ccMBl
	.quad	3
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.537036511 UTC

.section .text
.align 8
_ccMCD:
_ccMCD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMCN
_ccMCM:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMCN:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMCD, .-_ccMCD


==================== Asm code ====================
2018-03-16 16:07:47.537730208 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMCD_info:
	.quad	_ccMCD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.538465361 UTC

.section .text
.align 8
sat_scLNr_entry:
_ccMCP:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMCT
_ccMCS:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_scLNq_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	leaq lvl34_rcHq3_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMCT:
	movq $48,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNr_entry, .-sat_scLNr_entry


==================== Asm code ====================
2018-03-16 16:07:47.53912916 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNr_info:
	.quad	sat_scLNr_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.539927431 UTC

.section .text
.align 8
sat_scLNs_entry:
_ccMCU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMCV
_ccMCW:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMCY
_ccMCX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_scLNr_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMCY:
	movq $48,904(%r13)
_ccMCV:
	jmp *-16(%r13)
	.size sat_scLNs_entry, .-sat_scLNs_entry


==================== Asm code ====================
2018-03-16 16:07:47.540665738 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNs_info:
	.quad	sat_scLNs_entry
	.quad	4
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.54155276 UTC

.section .text
.align 8
sat_scLNw_entry:
_ccMCZ:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMD3
_ccMD4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMB4_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 16(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _ccMB4
_ccMB5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMD3:
	jmp *-16(%r13)
	.size sat_scLNw_entry, .-sat_scLNw_entry


==================== Asm code ====================
2018-03-16 16:07:47.542247737 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNw_info:
	.quad	sat_scLNw_entry
	.quad	5
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.54304398 UTC

.section .text
.align 8
_ccMB4:
_ccMB4:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccMD7
_ccMD6:
	movq 7(%rbx),%rax
	leaq sat_scLNs_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMD0_info(%rip),%rbx
	movq %rbx,32(%rbp)
	leaq -40(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $32,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMD7:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMB4, .-_ccMB4


==================== Asm code ====================
2018-03-16 16:07:47.543751116 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMB4_info:
	.quad	_ccMB4
	.quad	4
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.544477449 UTC

.section .text
.align 8
_ccMD0:
_ccMD0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMDa
_ccMD9:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMDa:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMD0, .-_ccMD0


==================== Asm code ====================
2018-03-16 16:07:47.545144601 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMD0_info:
	.quad	_ccMD0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.546510904 UTC

.section .text
.align 8
sat_scLNx_entry:
_ccMDc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMDg
_ccMDf:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_scLNw_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	leaq lvl33_rcHq2_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMDg:
	movq $56,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNx_entry, .-sat_scLNx_entry


==================== Asm code ====================
2018-03-16 16:07:47.54716309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNx_info:
	.quad	sat_scLNx_entry
	.quad	5
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.547940455 UTC

.section .text
.align 8
sat_scLNy_entry:
_ccMDh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMDi
_ccMDj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMDl
_ccMDk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_scLNx_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMDl:
	movq $56,904(%r13)
_ccMDi:
	jmp *-16(%r13)
	.size sat_scLNy_entry, .-sat_scLNy_entry


==================== Asm code ====================
2018-03-16 16:07:47.548652976 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNy_info:
	.quad	sat_scLNy_entry
	.quad	5
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.550119131 UTC

.section .text
.align 8
sat_scLNC_entry:
_ccMDm:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMDq
_ccMDr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMAN_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 16(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _ccMAN
_ccMAO:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMDq:
	jmp *-16(%r13)
	.size sat_scLNC_entry, .-sat_scLNC_entry


==================== Asm code ====================
2018-03-16 16:07:47.550900011 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNC_info:
	.quad	sat_scLNC_entry
	.quad	6
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.551694788 UTC

.section .text
.align 8
_ccMAN:
_ccMAN:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMDu
_ccMDt:
	movq 7(%rbx),%rax
	leaq sat_scLNy_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMDn_info(%rip),%rbx
	movq %rbx,40(%rbp)
	leaq -48(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $40,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMDu:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMAN, .-_ccMAN


==================== Asm code ====================
2018-03-16 16:07:47.552396497 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMAN_info:
	.quad	_ccMAN
	.quad	5
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.553143502 UTC

.section .text
.align 8
_ccMDn:
_ccMDn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMDx
_ccMDw:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMDx:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMDn, .-_ccMDn


==================== Asm code ====================
2018-03-16 16:07:47.553852749 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMDn_info:
	.quad	_ccMDn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.554639485 UTC

.section .text
.align 8
sat_scLND_entry:
_ccMDz:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMDD
_ccMDC:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_scLNC_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	leaq lvl32_rcHq1_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMDD:
	movq $64,904(%r13)
	jmp *-16(%r13)
	.size sat_scLND_entry, .-sat_scLND_entry


==================== Asm code ====================
2018-03-16 16:07:47.555367208 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLND_info:
	.quad	sat_scLND_entry
	.quad	6
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.556194076 UTC

.section .text
.align 8
sat_scLNE_entry:
_ccMDE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMDF
_ccMDG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMDI
_ccMDH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_scLND_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMDI:
	movq $64,904(%r13)
_ccMDF:
	jmp *-16(%r13)
	.size sat_scLNE_entry, .-sat_scLNE_entry


==================== Asm code ====================
2018-03-16 16:07:47.556991708 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNE_info:
	.quad	sat_scLNE_entry
	.quad	6
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.55834429 UTC

.section .text
.align 8
sat_scLNI_entry:
_ccMDJ:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMDN
_ccMDO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMAw_info(%rip),%rax
	movq %rax,-72(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 16(%rbx),%rbx
	movq %rax,-64(%rbp)
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _ccMAw
_ccMAx:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMDN:
	jmp *-16(%r13)
	.size sat_scLNI_entry, .-sat_scLNI_entry


==================== Asm code ====================
2018-03-16 16:07:47.55909133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNI_info:
	.quad	sat_scLNI_entry
	.quad	7
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.559872543 UTC

.section .text
.align 8
_ccMAw:
_ccMAw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccMDR
_ccMDQ:
	movq 7(%rbx),%rax
	leaq sat_scLNE_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMDK_info(%rip),%rbx
	movq %rbx,48(%rbp)
	leaq -56(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $48,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMDR:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMAw, .-_ccMAw


==================== Asm code ====================
2018-03-16 16:07:47.560618723 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMAw_info:
	.quad	_ccMAw
	.quad	6
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.561487169 UTC

.section .text
.align 8
_ccMDK:
_ccMDK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMDU
_ccMDT:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMDU:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMDK, .-_ccMDK


==================== Asm code ====================
2018-03-16 16:07:47.562126503 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMDK_info:
	.quad	_ccMDK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.562936826 UTC

.section .text
.align 8
sat_scLNJ_entry:
_ccMDW:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccME0
_ccMDZ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	leaq sat_scLNI_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	leaq lvl31_rcHq0_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccME0:
	movq $72,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNJ_entry, .-sat_scLNJ_entry


==================== Asm code ====================
2018-03-16 16:07:47.563635542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNJ_info:
	.quad	sat_scLNJ_entry
	.quad	7
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.564452848 UTC

.section .text
.align 8
sat_scLNK_entry:
_ccME1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccME2
_ccME3:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccME5
_ccME4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%rbx
	leaq sat_scLNJ_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -64(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccME5:
	movq $72,904(%r13)
_ccME2:
	jmp *-16(%r13)
	.size sat_scLNK_entry, .-sat_scLNK_entry


==================== Asm code ====================
2018-03-16 16:07:47.565202922 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNK_info:
	.quad	sat_scLNK_entry
	.quad	7
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.566105571 UTC

.section .text
.align 8
sat_scLNO_entry:
_ccME6:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMEa
_ccMEb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMAf_info(%rip),%rax
	movq %rax,-80(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 16(%rbx),%rbx
	movq %rax,-72(%rbp)
	movq %rcx,-64(%rbp)
	movq %rdx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %rdi,-40(%rbp)
	movq %r8,-32(%rbp)
	movq %r9,-24(%rbp)
	addq $-80,%rbp
	testb $7,%bl
	jne _ccMAf
_ccMAg:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMEa:
	jmp *-16(%r13)
	.size sat_scLNO_entry, .-sat_scLNO_entry


==================== Asm code ====================
2018-03-16 16:07:47.566868815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNO_info:
	.quad	sat_scLNO_entry
	.quad	8
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.567651095 UTC

.section .text
.align 8
_ccMAf:
_ccMAf:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccMEe
_ccMEd:
	movq 7(%rbx),%rax
	leaq sat_scLNK_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccME7_info(%rip),%rbx
	movq %rbx,56(%rbp)
	leaq -64(%r12),%rdi
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $56,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_ccMEe:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMAf, .-_ccMAf


==================== Asm code ====================
2018-03-16 16:07:47.568383213 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMAf_info:
	.quad	_ccMAf
	.quad	7
	.quad	4294967326
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.569128594 UTC

.section .text
.align 8
_ccME7:
_ccME7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMEh
_ccMEg:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMEh:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccME7, .-_ccME7


==================== Asm code ====================
2018-03-16 16:07:47.569851055 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccME7_info:
	.quad	_ccME7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.570651202 UTC

.section .text
.align 8
sat_scLNP_entry:
_ccMEj:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMEn
_ccMEm:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	leaq sat_scLNO_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	leaq lvl30_rcHpZ_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMEn:
	movq $80,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNP_entry, .-sat_scLNP_entry


==================== Asm code ====================
2018-03-16 16:07:47.571375182 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNP_info:
	.quad	sat_scLNP_entry
	.quad	8
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.572240988 UTC

.section .text
.align 8
sat_scLNQ_entry:
_ccMEo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMEp
_ccMEq:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMEs
_ccMEr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%rbx
	leaq sat_scLNP_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMEs:
	movq $80,904(%r13)
_ccMEp:
	jmp *-16(%r13)
	.size sat_scLNQ_entry, .-sat_scLNQ_entry


==================== Asm code ====================
2018-03-16 16:07:47.573041819 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNQ_info:
	.quad	sat_scLNQ_entry
	.quad	8
	.quad	4294967311
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.574320386 UTC

.section .text
.align 8
sat_scLNU_entry:
_ccMEw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMEx
_ccMEy:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccMEA
_ccMEz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLNQ_info(%rip),%r11
	movq %r11,-72(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMEt_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -72(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMEA:
	movq $80,904(%r13)
_ccMEx:
	jmp *-16(%r13)
	.size sat_scLNU_entry, .-sat_scLNU_entry


==================== Asm code ====================
2018-03-16 16:07:47.57514106 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNU_info:
	.quad	sat_scLNU_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.575903427 UTC

.section .text
.align 8
_ccMEt:
_ccMEt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMED
_ccMEC:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMED:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMEt, .-_ccMEt


==================== Asm code ====================
2018-03-16 16:07:47.576560532 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMEt_info:
	.quad	_ccMEt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.577470501 UTC

.section .text
.align 8
sat_scLNV_entry:
_ccMEE:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMEI
_ccMEH:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLNU_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	leaq lvl29_rcHpY_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMEI:
	movq $88,904(%r13)
	jmp *-16(%r13)
	.size sat_scLNV_entry, .-sat_scLNV_entry


==================== Asm code ====================
2018-03-16 16:07:47.578205238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNV_info:
	.quad	sat_scLNV_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.579074077 UTC

.section .text
.align 8
sat_scLNW_entry:
_ccMEJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMEK
_ccMEL:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMEN
_ccMEM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%rbx
	leaq sat_scLNV_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -80(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMEN:
	movq $88,904(%r13)
_ccMEK:
	jmp *-16(%r13)
	.size sat_scLNW_entry, .-sat_scLNW_entry


==================== Asm code ====================
2018-03-16 16:07:47.579848538 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLNW_info:
	.quad	sat_scLNW_entry
	.quad	9
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.580761455 UTC

.section .text
.align 8
sat_scLO0_entry:
_ccMER:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMES
_ccMET:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccMEV
_ccMEU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLNW_info(%rip),%r14
	movq %r14,-80(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMEO_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -80(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMEV:
	movq $88,904(%r13)
_ccMES:
	jmp *-16(%r13)
	.size sat_scLO0_entry, .-sat_scLO0_entry


==================== Asm code ====================
2018-03-16 16:07:47.581681713 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO0_info:
	.quad	sat_scLO0_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.582456379 UTC

.section .text
.align 8
_ccMEO:
_ccMEO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMEY
_ccMEX:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMEY:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMEO, .-_ccMEO


==================== Asm code ====================
2018-03-16 16:07:47.583099909 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMEO_info:
	.quad	_ccMEO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.583896625 UTC

.section .text
.align 8
sat_scLO1_entry:
_ccMEZ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMF3
_ccMF2:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLO0_info(%rip),%r14
	movq %r14,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	leaq lvl28_rcHpX_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMF3:
	movq $96,904(%r13)
	jmp *-16(%r13)
	.size sat_scLO1_entry, .-sat_scLO1_entry


==================== Asm code ====================
2018-03-16 16:07:47.585169159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO1_info:
	.quad	sat_scLO1_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.586155839 UTC

.section .text
.align 8
sat_scLO2_entry:
_ccMF4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMF5
_ccMF6:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMF8
_ccMF7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%rbx
	leaq sat_scLO1_info(%rip),%r14
	movq %r14,-88(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -88(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMF8:
	movq $96,904(%r13)
_ccMF5:
	jmp *-16(%r13)
	.size sat_scLO2_entry, .-sat_scLO2_entry


==================== Asm code ====================
2018-03-16 16:07:47.586934791 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO2_info:
	.quad	sat_scLO2_entry
	.quad	10
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.587832742 UTC

.section .text
.align 8
sat_scLO6_entry:
_ccMFc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMFd
_ccMFe:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccMFg
_ccMFf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLO2_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMF9_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -88(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMFg:
	movq $96,904(%r13)
_ccMFd:
	jmp *-16(%r13)
	.size sat_scLO6_entry, .-sat_scLO6_entry


==================== Asm code ====================
2018-03-16 16:07:47.58866583 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO6_info:
	.quad	sat_scLO6_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.589503193 UTC

.section .text
.align 8
_ccMF9:
_ccMF9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMFj
_ccMFi:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMFj:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMF9, .-_ccMF9


==================== Asm code ====================
2018-03-16 16:07:47.590156994 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMF9_info:
	.quad	_ccMF9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.590951482 UTC

.section .text
.align 8
sat_scLO7_entry:
_ccMFk:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMFo
_ccMFn:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLO6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	leaq lvl27_rcHpW_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMFo:
	movq $104,904(%r13)
	jmp *-16(%r13)
	.size sat_scLO7_entry, .-sat_scLO7_entry


==================== Asm code ====================
2018-03-16 16:07:47.591703183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO7_info:
	.quad	sat_scLO7_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.592600151 UTC

.section .text
.align 8
sat_scLO8_entry:
_ccMFp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMFq
_ccMFr:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMFt
_ccMFs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq 96(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLO7_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -96(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMFt:
	movq $104,904(%r13)
_ccMFq:
	jmp *-16(%r13)
	.size sat_scLO8_entry, .-sat_scLO8_entry


==================== Asm code ====================
2018-03-16 16:07:47.593510118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLO8_info:
	.quad	sat_scLO8_entry
	.quad	11
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.594465133 UTC

.section .text
.align 8
sat_scLOc_entry:
_ccMFx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMFy
_ccMFz:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccMFB
_ccMFA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLO8_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMFu_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -96(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMFB:
	movq $104,904(%r13)
_ccMFy:
	jmp *-16(%r13)
	.size sat_scLOc_entry, .-sat_scLOc_entry


==================== Asm code ====================
2018-03-16 16:07:47.595318813 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOc_info:
	.quad	sat_scLOc_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.596046204 UTC

.section .text
.align 8
_ccMFu:
_ccMFu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMFE
_ccMFD:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMFE:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMFu, .-_ccMFu


==================== Asm code ====================
2018-03-16 16:07:47.596700655 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMFu_info:
	.quad	_ccMFu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.598205604 UTC

.section .text
.align 8
sat_scLOd_entry:
_ccMFF:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMFJ
_ccMFI:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLOc_info(%rip),%rcx
	movq %rcx,-104(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	leaq lvl26_rcHpV_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMFJ:
	movq $112,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOd_entry, .-sat_scLOd_entry


==================== Asm code ====================
2018-03-16 16:07:47.598996005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOd_info:
	.quad	sat_scLOd_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.599942064 UTC

.section .text
.align 8
sat_scLOe_entry:
_ccMFK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMFL
_ccMFM:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMFO
_ccMFN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq 104(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLOd_info(%rip),%rcx
	movq %rcx,-104(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -104(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMFO:
	movq $112,904(%r13)
_ccMFL:
	jmp *-16(%r13)
	.size sat_scLOe_entry, .-sat_scLOe_entry


==================== Asm code ====================
2018-03-16 16:07:47.600725617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOe_info:
	.quad	sat_scLOe_entry
	.quad	12
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.601785446 UTC

.section .text
.align 8
sat_scLOi_entry:
_ccMFS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMFT
_ccMFU:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccMFW
_ccMFV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLOe_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMFP_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -104(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMFW:
	movq $112,904(%r13)
_ccMFT:
	jmp *-16(%r13)
	.size sat_scLOi_entry, .-sat_scLOi_entry


==================== Asm code ====================
2018-03-16 16:07:47.602657568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOi_info:
	.quad	sat_scLOi_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.603383748 UTC

.section .text
.align 8
_ccMFP:
_ccMFP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMFZ
_ccMFY:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMFZ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMFP, .-_ccMFP


==================== Asm code ====================
2018-03-16 16:07:47.604031442 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMFP_info:
	.quad	_ccMFP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.604919201 UTC

.section .text
.align 8
sat_scLOj_entry:
_ccMG0:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMG4
_ccMG3:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLOi_info(%rip),%rdx
	movq %rdx,-112(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	leaq lvl25_rcHpU_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMG4:
	movq $120,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOj_entry, .-sat_scLOj_entry


==================== Asm code ====================
2018-03-16 16:07:47.606127424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOj_info:
	.quad	sat_scLOj_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.607024119 UTC

.section .text
.align 8
sat_scLOk_entry:
_ccMG5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMG6
_ccMG7:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMG9
_ccMG8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq 112(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLOj_info(%rip),%rdx
	movq %rdx,-112(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMG9:
	movq $120,904(%r13)
_ccMG6:
	jmp *-16(%r13)
	.size sat_scLOk_entry, .-sat_scLOk_entry


==================== Asm code ====================
2018-03-16 16:07:47.60787596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOk_info:
	.quad	sat_scLOk_entry
	.quad	13
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.608810367 UTC

.section .text
.align 8
sat_scLOo_entry:
_ccMGd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMGe
_ccMGf:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccMGh
_ccMGg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLOk_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMGa_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -112(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMGh:
	movq $120,904(%r13)
_ccMGe:
	jmp *-16(%r13)
	.size sat_scLOo_entry, .-sat_scLOo_entry


==================== Asm code ====================
2018-03-16 16:07:47.609836051 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOo_info:
	.quad	sat_scLOo_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.610546617 UTC

.section .text
.align 8
_ccMGa:
_ccMGa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMGk
_ccMGj:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMGk:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMGa, .-_ccMGa


==================== Asm code ====================
2018-03-16 16:07:47.611213148 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMGa_info:
	.quad	_ccMGa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.612143048 UTC

.section .text
.align 8
sat_scLOp_entry:
_ccMGl:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMGp
_ccMGo:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLOo_info(%rip),%rsi
	movq %rsi,-120(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	leaq lvl24_rcHpT_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMGp:
	movq $128,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOp_entry, .-sat_scLOp_entry


==================== Asm code ====================
2018-03-16 16:07:47.612987857 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOp_info:
	.quad	sat_scLOp_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.614163431 UTC

.section .text
.align 8
sat_scLOq_entry:
_ccMGq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMGr
_ccMGs:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMGu
_ccMGt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq 120(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLOp_info(%rip),%rsi
	movq %rsi,-120(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -120(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMGu:
	movq $128,904(%r13)
_ccMGr:
	jmp *-16(%r13)
	.size sat_scLOq_entry, .-sat_scLOq_entry


==================== Asm code ====================
2018-03-16 16:07:47.615074993 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOq_info:
	.quad	sat_scLOq_entry
	.quad	14
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.616087053 UTC

.section .text
.align 8
sat_scLOu_entry:
_ccMGy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMGz
_ccMGA:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccMGC
_ccMGB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLOq_info(%rip),%rdi
	movq %rdi,-120(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMGv_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -120(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMGC:
	movq $128,904(%r13)
_ccMGz:
	jmp *-16(%r13)
	.size sat_scLOu_entry, .-sat_scLOu_entry


==================== Asm code ====================
2018-03-16 16:07:47.617046405 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOu_info:
	.quad	sat_scLOu_entry
	.quad	15
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.617888487 UTC

.section .text
.align 8
_ccMGv:
_ccMGv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMGF
_ccMGE:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMGF:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMGv, .-_ccMGv


==================== Asm code ====================
2018-03-16 16:07:47.618592187 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMGv_info:
	.quad	_ccMGv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.619497452 UTC

.section .text
.align 8
sat_scLOv_entry:
_ccMGG:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccMGK
_ccMGJ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLOu_info(%rip),%rdi
	movq %rdi,-128(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	leaq lvl23_rcHpS_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMGK:
	movq $136,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOv_entry, .-sat_scLOv_entry


==================== Asm code ====================
2018-03-16 16:07:47.620359454 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOv_info:
	.quad	sat_scLOv_entry
	.quad	15
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.621403637 UTC

.section .text
.align 8
sat_scLOw_entry:
_ccMGL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMGM
_ccMGN:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccMGP
_ccMGO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq 128(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLOv_info(%rip),%rdi
	movq %rdi,-128(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -128(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMGP:
	movq $136,904(%r13)
_ccMGM:
	jmp *-16(%r13)
	.size sat_scLOw_entry, .-sat_scLOw_entry


==================== Asm code ====================
2018-03-16 16:07:47.622866299 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOw_info:
	.quad	sat_scLOw_entry
	.quad	15
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.623963358 UTC

.section .text
.align 8
sat_scLOA_entry:
_ccMGT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMGU
_ccMGV:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccMGX
_ccMGW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq %r8,104(%rsp)
	leaq sat_scLOw_info(%rip),%r8
	movq %r8,-128(%r12)
	movq 64(%rsp),%r8
	movq %r8,-112(%r12)
	movq 72(%rsp),%r8
	movq %r8,-104(%r12)
	movq 80(%rsp),%r8
	movq %r8,-96(%r12)
	movq 88(%rsp),%r8
	movq %r8,-88(%r12)
	movq 96(%rsp),%r8
	movq %r8,-80(%r12)
	movq 104(%rsp),%r8
	movq %r8,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMGQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -128(%r12),%rdi
	movq %r9,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMGX:
	movq $136,904(%r13)
_ccMGU:
	jmp *-16(%r13)
	.size sat_scLOA_entry, .-sat_scLOA_entry


==================== Asm code ====================
2018-03-16 16:07:47.624943477 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOA_info:
	.quad	sat_scLOA_entry
	.quad	16
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.625935918 UTC

.section .text
.align 8
_ccMGQ:
_ccMGQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMH0
_ccMGZ:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMH0:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMGQ, .-_ccMGQ


==================== Asm code ====================
2018-03-16 16:07:47.626580882 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMGQ_info:
	.quad	_ccMGQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.627482828 UTC

.section .text
.align 8
sat_scLOB_entry:
_ccMH1:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccMH5
_ccMH4:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq %r8,104(%rsp)
	leaq sat_scLOA_info(%rip),%r8
	movq %r8,-136(%r12)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -136(%r12),%rsi
	leaq lvl22_rcHpR_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMH5:
	movq $144,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOB_entry, .-sat_scLOB_entry


==================== Asm code ====================
2018-03-16 16:07:47.628356778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOB_info:
	.quad	sat_scLOB_entry
	.quad	16
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.62944424 UTC

.section .text
.align 8
sat_scLOC_entry:
_ccMH6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMH7
_ccMH8:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccMHa
_ccMH9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq 136(%rbx),%rbx
	movq %r8,104(%rsp)
	leaq sat_scLOB_info(%rip),%r8
	movq %r8,-136(%r12)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -136(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMHa:
	movq $144,904(%r13)
_ccMH7:
	jmp *-16(%r13)
	.size sat_scLOC_entry, .-sat_scLOC_entry


==================== Asm code ====================
2018-03-16 16:07:47.630359459 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOC_info:
	.quad	sat_scLOC_entry
	.quad	16
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.63139142 UTC

.section .text
.align 8
sat_scLOG_entry:
_ccMHe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMHf
_ccMHg:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccMHi
_ccMHh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq %r9,112(%rsp)
	leaq sat_scLOC_info(%rip),%r9
	movq %r9,-136(%r12)
	movq 64(%rsp),%r9
	movq %r9,-120(%r12)
	movq 72(%rsp),%r9
	movq %r9,-112(%r12)
	movq 80(%rsp),%r9
	movq %r9,-104(%r12)
	movq 88(%rsp),%r9
	movq %r9,-96(%r12)
	movq 96(%rsp),%r9
	movq %r9,-88(%r12)
	movq 104(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMHb_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -136(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMHi:
	movq $144,904(%r13)
_ccMHf:
	jmp *-16(%r13)
	.size sat_scLOG_entry, .-sat_scLOG_entry


==================== Asm code ====================
2018-03-16 16:07:47.632356951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOG_info:
	.quad	sat_scLOG_entry
	.quad	17
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.633103108 UTC

.section .text
.align 8
_ccMHb:
_ccMHb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMHl
_ccMHk:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMHl:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMHb, .-_ccMHb


==================== Asm code ====================
2018-03-16 16:07:47.633837993 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMHb_info:
	.quad	_ccMHb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.634766049 UTC

.section .text
.align 8
sat_scLOH_entry:
_ccMHm:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccMHq
_ccMHp:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq %r9,112(%rsp)
	leaq sat_scLOG_info(%rip),%r9
	movq %r9,-144(%r12)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -144(%r12),%rsi
	leaq lvl21_rcHpQ_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMHq:
	movq $152,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOH_entry, .-sat_scLOH_entry


==================== Asm code ====================
2018-03-16 16:07:47.635692706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOH_info:
	.quad	sat_scLOH_entry
	.quad	17
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.636705816 UTC

.section .text
.align 8
sat_scLOI_entry:
_ccMHr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMHs
_ccMHt:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccMHv
_ccMHu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq 144(%rbx),%rbx
	movq %r9,112(%rsp)
	leaq sat_scLOH_info(%rip),%r9
	movq %r9,-144(%r12)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -144(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMHv:
	movq $152,904(%r13)
_ccMHs:
	jmp *-16(%r13)
	.size sat_scLOI_entry, .-sat_scLOI_entry


==================== Asm code ====================
2018-03-16 16:07:47.63776881 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOI_info:
	.quad	sat_scLOI_entry
	.quad	17
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.638774712 UTC

.section .text
.align 8
sat_scLOM_entry:
_ccMHz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMHA
_ccMHB:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccMHD
_ccMHC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq %r10,120(%rsp)
	leaq sat_scLOI_info(%rip),%r10
	movq %r10,-144(%r12)
	movq 64(%rsp),%r10
	movq %r10,-128(%r12)
	movq 72(%rsp),%r10
	movq %r10,-120(%r12)
	movq 80(%rsp),%r10
	movq %r10,-112(%r12)
	movq 88(%rsp),%r10
	movq %r10,-104(%r12)
	movq 96(%rsp),%r10
	movq %r10,-96(%r12)
	movq 104(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMHw_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -144(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMHD:
	movq $152,904(%r13)
_ccMHA:
	jmp *-16(%r13)
	.size sat_scLOM_entry, .-sat_scLOM_entry


==================== Asm code ====================
2018-03-16 16:07:47.639734222 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOM_info:
	.quad	sat_scLOM_entry
	.quad	18
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.640470942 UTC

.section .text
.align 8
_ccMHw:
_ccMHw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMHG
_ccMHF:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMHG:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMHw, .-_ccMHw


==================== Asm code ====================
2018-03-16 16:07:47.641129915 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMHw_info:
	.quad	_ccMHw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.642663795 UTC

.section .text
.align 8
sat_scLON_entry:
_ccMHH:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccMHL
_ccMHK:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq %r10,120(%rsp)
	leaq sat_scLOM_info(%rip),%r10
	movq %r10,-152(%r12)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rsi
	leaq lvl20_rcHpP_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMHL:
	movq $160,904(%r13)
	jmp *-16(%r13)
	.size sat_scLON_entry, .-sat_scLON_entry


==================== Asm code ====================
2018-03-16 16:07:47.643576866 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLON_info:
	.quad	sat_scLON_entry
	.quad	18
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.644562959 UTC

.section .text
.align 8
sat_scLOO_entry:
_ccMHM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMHN
_ccMHO:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccMHQ
_ccMHP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq 152(%rbx),%rbx
	movq %r10,120(%rsp)
	leaq sat_scLON_info(%rip),%r10
	movq %r10,-152(%r12)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMHQ:
	movq $160,904(%r13)
_ccMHN:
	jmp *-16(%r13)
	.size sat_scLOO_entry, .-sat_scLOO_entry


==================== Asm code ====================
2018-03-16 16:07:47.645634947 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOO_info:
	.quad	sat_scLOO_entry
	.quad	18
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.646650397 UTC

.section .text
.align 8
sat_scLOS_entry:
_ccMHU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMHV
_ccMHW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccMHY
_ccMHX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq %r11,128(%rsp)
	leaq sat_scLOO_info(%rip),%r11
	movq %r11,-152(%r12)
	movq 64(%rsp),%r11
	movq %r11,-136(%r12)
	movq 72(%rsp),%r11
	movq %r11,-128(%r12)
	movq 80(%rsp),%r11
	movq %r11,-120(%r12)
	movq 88(%rsp),%r11
	movq %r11,-112(%r12)
	movq 96(%rsp),%r11
	movq %r11,-104(%r12)
	movq 104(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq block_ccMHR_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -152(%r12),%rdi
	movq 112(%rsp),%rax
	movq %rax,%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_ccMHY:
	movq $160,904(%r13)
_ccMHV:
	jmp *-16(%r13)
	.size sat_scLOS_entry, .-sat_scLOS_entry


==================== Asm code ====================
2018-03-16 16:07:47.647616923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOS_info:
	.quad	sat_scLOS_entry
	.quad	19
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.648311398 UTC

.section .text
.align 8
_ccMHR:
_ccMHR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMI1
_ccMI0:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMI1:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMHR, .-_ccMHR


==================== Asm code ====================
2018-03-16 16:07:47.64894812 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMHR_info:
	.quad	_ccMHR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.649963014 UTC

.section .text
.align 8
sat_scLOT_entry:
_ccMI2:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccMI6
_ccMI5:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq %r11,128(%rsp)
	leaq sat_scLOS_info(%rip),%r11
	movq %r11,-160(%r12)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -160(%r12),%rsi
	leaq lvl19_rcHpO_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMI6:
	movq $168,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOT_entry, .-sat_scLOT_entry


==================== Asm code ====================
2018-03-16 16:07:47.650920562 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOT_info:
	.quad	sat_scLOT_entry
	.quad	19
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.651972912 UTC

.section .text
.align 8
sat_scLOU_entry:
_ccMI7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMI8
_ccMI9:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccMIb
_ccMIa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq 160(%rbx),%rbx
	movq %r11,128(%rsp)
	leaq sat_scLOT_info(%rip),%r11
	movq %r11,-160(%r12)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -160(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMIb:
	movq $168,904(%r13)
_ccMI8:
	jmp *-16(%r13)
	.size sat_scLOU_entry, .-sat_scLOU_entry


==================== Asm code ====================
2018-03-16 16:07:47.652942144 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOU_info:
	.quad	sat_scLOU_entry
	.quad	19
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.654034352 UTC

.section .text
.align 8
sat_scLOY_entry:
_ccMIc:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMIj
_ccMIk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMxQ_info(%rip),%rax
	movq %rax,-176(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 136(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 144(%rbx),%r8
	movq %r9,112(%rsp)
	movq 152(%rbx),%r9
	movq %r10,120(%rsp)
	movq 160(%rbx),%r10
	movq %r11,128(%rsp)
	movq 168(%rbx),%r11
	movq 16(%rbx),%rbx
	movq %r14,136(%rsp)
	movq 64(%rsp),%r14
	movq %r14,-168(%rbp)
	movq 72(%rsp),%r14
	movq %r14,-160(%rbp)
	movq 80(%rsp),%r14
	movq %r14,-152(%rbp)
	movq 88(%rsp),%r14
	movq %r14,-144(%rbp)
	movq 96(%rsp),%r14
	movq %r14,-136(%rbp)
	movq 104(%rsp),%r14
	movq %r14,-128(%rbp)
	movq 112(%rsp),%r14
	movq %r14,-120(%rbp)
	movq 120(%rsp),%r14
	movq %r14,-112(%rbp)
	movq 128(%rsp),%r14
	movq %r14,-104(%rbp)
	movq 136(%rsp),%r14
	movq %r14,-96(%rbp)
	movq %rax,-88(%rbp)
	movq %rcx,-80(%rbp)
	movq %rdx,-72(%rbp)
	movq %rsi,-64(%rbp)
	movq %rdi,-56(%rbp)
	movq %r8,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %r10,-32(%rbp)
	movq %r11,-24(%rbp)
	addq $-176,%rbp
	testb $7,%bl
	jne _ccMxQ
_ccMxR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMIj:
	jmp *-16(%r13)
	.size sat_scLOY_entry, .-sat_scLOY_entry


==================== Asm code ====================
2018-03-16 16:07:47.654986888 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOY_info:
	.quad	sat_scLOY_entry
	.quad	20
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.655874196 UTC

.section .text
.align 8
_ccMxQ:
_ccMxQ:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccMIn
_ccMIm:
	movq 7(%rbx),%rax
	leaq sat_scLOU_info(%rip),%rbx
	movq %rbx,-160(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMIg_info(%rip),%rbx
	movq %rbx,152(%rbp)
	leaq -160(%r12),%rsi
	movq %rax,%r14
	addq $152,%rbp
	jmp *GHC.Show.$witos_entry@gotpcrel(%rip)
_ccMIn:
	movq $168,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMxQ, .-_ccMxQ


==================== Asm code ====================
2018-03-16 16:07:47.656748448 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMxQ_info:
	.quad	_ccMxQ
	.quad	19
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.657909431 UTC

.section .text
.align 8
_ccMIg:
_ccMIg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMIq
_ccMIp:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMIq:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMIg, .-_ccMIg


==================== Asm code ====================
2018-03-16 16:07:47.65851169 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMIg_info:
	.quad	_ccMIg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.659448258 UTC

.section .text
.align 8
sat_scLOZ_entry:
_ccMIs:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccMIw
_ccMIv:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq 168(%rbx),%rbx
	movq %r14,136(%rsp)
	leaq sat_scLOY_info(%rip),%r14
	movq %r14,-168(%r12)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -168(%r12),%rsi
	leaq lvl18_rcHpN_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMIw:
	movq $176,904(%r13)
	jmp *-16(%r13)
	.size sat_scLOZ_entry, .-sat_scLOZ_entry


==================== Asm code ====================
2018-03-16 16:07:47.660388163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLOZ_info:
	.quad	sat_scLOZ_entry
	.quad	20
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.661490079 UTC

.section .text
.align 8
sat_scLP0_entry:
_ccMIx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMIy
_ccMIz:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccMIB
_ccMIA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq 168(%rbx),%rbx
	movq %r14,136(%rsp)
	leaq sat_scLOZ_info(%rip),%r14
	movq %r14,-168(%r12)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -168(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ccMIB:
	movq $176,904(%r13)
_ccMIy:
	jmp *-16(%r13)
	.size sat_scLP0_entry, .-sat_scLP0_entry


==================== Asm code ====================
2018-03-16 16:07:47.662521353 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLP0_info:
	.quad	sat_scLP0_entry
	.quad	20
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.664091076 UTC

.section .text
.align 8
sat_scLP4_entry:
_ccMIC:
	leaq -184(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMIJ
_ccMIK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccMxz_info(%rip),%rax
	movq %rax,-184(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 136(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 144(%rbx),%r8
	movq %r9,112(%rsp)
	movq 152(%rbx),%r9
	movq %r10,120(%rsp)
	movq 160(%rbx),%r10
	movq %r11,128(%rsp)
	movq 168(%rbx),%r11
	movq %r14,136(%rsp)
	movq 176(%rbx),%r14
	movq 16(%rbx),%rbx
	movq %rax,144(%rsp)
	movq 64(%rsp),%rax
	movq %rax,-176(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-168(%rbp)
	movq 80(%rsp),%rax
	movq %rax,-160(%rbp)
	movq 88(%rsp),%rax
	movq %rax,-152(%rbp)
	movq 96(%rsp),%rax
	movq %rax,-144(%rbp)
	movq 104(%rsp),%rax
	movq %rax,-136(%rbp)
	movq 112(%rsp),%rax
	movq %rax,-128(%rbp)
	movq 120(%rsp),%rax
	movq %rax,-120(%rbp)
	movq 128(%rsp),%rax
	movq %rax,-112(%rbp)
	movq 136(%rsp),%rax
	movq %rax,-104(%rbp)
	movq 144(%rsp),%rax
	movq %rax,-96(%rbp)
	movq %rcx,-88(%rbp)
	movq %rdx,-80(%rbp)
	movq %rsi,-72(%rbp)
	movq %rdi,-64(%rbp)
	movq %r8,-56(%rbp)
	movq %r9,-48(%rbp)
	movq %r10,-40(%rbp)
	movq %r11,-32(%rbp)
	movq %r14,-24(%rbp)
	addq $-184,%rbp
	testb $7,%bl
	jne _ccMxz
_ccMxA:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMIJ:
	jmp *-16(%r13)
	.size sat_scLP4_entry, .-sat_scLP4_entry


==================== Asm code ====================
2018-03-16 16:07:47.665084139 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLP4_info:
	.quad	sat_scLP4_entry
	.quad	21
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.666063312 UTC

.section .text
.align 8
_ccMxz:
_ccMxz:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccMIN
_ccMIM:
	movq 7(%rbx),%rax
	leaq sat_scLP0_info(%rip),%rbx
	movq %rbx,-168(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-152(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 160(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_ccMIG_info(%rip),%rbx
	movq %rbx,160(%rbp)
	leaq -168(%r12),%rsi
	movq %rax,%r14
	addq $160,%rbp
	jmp *GHC.Show.$witos_entry@gotpcrel(%rip)
_ccMIN:
	movq $176,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMxz, .-_ccMxz


==================== Asm code ====================
2018-03-16 16:07:47.66689716 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMxz_info:
	.quad	_ccMxz
	.quad	20
	.quad	12884901918
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.667603379 UTC

.section .text
.align 8
_ccMIG:
_ccMIG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMIQ
_ccMIP:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMIQ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccMIG, .-_ccMIG


==================== Asm code ====================
2018-03-16 16:07:47.668230091 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMIG_info:
	.quad	_ccMIG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.669294381 UTC

.section .text
.align 8
sat_scLP5_entry:
_ccMIS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMIT
_ccMIU:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _ccMIW
_ccMIV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%r8
	movq 64(%rbx),%r9
	movq 72(%rbx),%r10
	movq 80(%rbx),%r11
	movq 88(%rbx),%r14
	movq %rax,64(%rsp)
	movq 96(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 136(%rbx),%r8
	movq %r9,112(%rsp)
	movq 144(%rbx),%r9
	movq %r10,120(%rsp)
	movq 152(%rbx),%r10
	movq %r11,128(%rsp)
	movq 160(%rbx),%r11
	movq %r14,136(%rsp)
	movq 168(%rbx),%r14
	movq 176(%rbx),%rbx
	movq %rax,144(%rsp)
	leaq sat_scLP4_info(%rip),%rax
	movq %rax,-176(%r12)
	movq 64(%rsp),%rax
	movq %rax,-160(%r12)
	movq 72(%rsp),%rax
	movq %rax,-152(%r12)
	movq 80(%rsp),%rax
	movq %rax,-144(%r12)
	movq 88(%rsp),%rax
	movq %rax,-136(%r12)
	movq 96(%rsp),%rax
	movq %rax,-128(%r12)
	movq 104(%rsp),%rax
	movq %rax,-120(%r12)
	movq 112(%rsp),%rax
	movq %rax,-112(%r12)
	movq 120(%rsp),%rax
	movq %rax,-104(%r12)
	movq 128(%rsp),%rax
	movq %rax,-96(%r12)
	movq 136(%rsp),%rax
	movq %rax,-88(%r12)
	movq 144(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -176(%r12),%rsi
	leaq lvl17_rcHpM_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMIW:
	movq $184,904(%r13)
_ccMIT:
	jmp *-16(%r13)
	.size sat_scLP5_entry, .-sat_scLP5_entry


==================== Asm code ====================
2018-03-16 16:07:47.670354249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLP5_info:
	.quad	sat_scLP5_entry
	.quad	21
	.quad	12884901903
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.67132655 UTC

.section .text
.align 8
p_scLMT_entry:
_ccMIX:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _ccMJ1
_ccMJ0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq %rax,136(%rsp)
	movq 151(%rbx),%rax
	movq 159(%rbx),%rbx
	movq %rcx,144(%rsp)
	leaq sat_scLP5_info(%rip),%rcx
	movq %rcx,-176(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-160(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-152(%r12)
	movq 80(%rsp),%rcx
	movq %rcx,-144(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-136(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-128(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-120(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-112(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-104(%r12)
	movq 128(%rsp),%rcx
	movq %rcx,-96(%r12)
	movq 136(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -176(%r12),%rsi
	leaq lvl16_rcHpL_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_ccMJ1:
	movq $184,904(%r13)
	jmp *-8(%r13)
	.size p_scLMT_entry, .-p_scLMT_entry


==================== Asm code ====================
2018-03-16 16:07:47.672252633 UTC

.section .data.rel.ro
.align 8
.align 1
p_scLMT_info:
	.quad	p_scLMT_entry
	.quad	20
	.quad	12884901896
	.quad	4294967301
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.673077128 UTC

.section .text
.align 8
sat_scLP9_entry:
_ccMJg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMJh
_ccMJi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccMJk
_ccMJj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp p_scLMT_entry
_ccMJk:
	movq $24,904(%r13)
_ccMJh:
	jmp *-16(%r13)
	.size sat_scLP9_entry, .-sat_scLP9_entry


==================== Asm code ====================
2018-03-16 16:07:47.674166412 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLP9_info:
	.quad	sat_scLP9_entry
	.quad	2
	.quad	12884901906
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.674916394 UTC

.section .text
.align 8
sat_scLPa_entry:
_ccMJm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccMJq
_ccMJp:
	movq 7(%rbx),%rax
	leaq sat_scLP9_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccMJq:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scLPa_entry, .-sat_scLPa_entry


==================== Asm code ====================
2018-03-16 16:07:47.675582498 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLPa_info:
	.quad	sat_scLPa_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.67636482 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_entry, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_entry:
_ccMJr:
	leaq -168(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMJs
_ccMJt:
	leaq block_ccMtb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccMtb
_ccMtc:
	movq (%rbx),%rax
	jmp *(%rax)
_ccMJs:
	leaq GHC.Stats.$fShowRTSStats_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowRTSStats_$cshowsPrec_entry, .-GHC.Stats.$fShowRTSStats_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:47.677019596 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowsPrec_info
.type GHC.Stats.$fShowRTSStats_$cshowsPrec_info, @object
GHC.Stats.$fShowRTSStats_$cshowsPrec_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
	.quad	0
	.quad	167503724558
	.quad	8589934607
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.678069437 UTC

.section .text
.align 8
_ccMtb:
_ccMtb:
	leaq block_ccMtg_info(%rip),%rax
	movq %rax,-152(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq 159(%rbx),%rbx
	movq %rbx,136(%rsp)
	movq 8(%rbp),%rbx
	movq %r14,144(%rsp)
	movq 80(%rsp),%r14
	movq %r14,-144(%rbp)
	movq 88(%rsp),%r14
	movq %r14,-136(%rbp)
	movq 96(%rsp),%r14
	movq %r14,-128(%rbp)
	movq 104(%rsp),%r14
	movq %r14,-120(%rbp)
	movq 112(%rsp),%r14
	movq %r14,-112(%rbp)
	movq 120(%rsp),%r14
	movq %r14,-104(%rbp)
	movq 128(%rsp),%r14
	movq %r14,-96(%rbp)
	movq 144(%rsp),%r14
	movq %r14,-88(%rbp)
	movq %rax,-80(%rbp)
	movq %rcx,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %rsi,-56(%rbp)
	movq %rdi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %r9,-32(%rbp)
	movq %r10,-24(%rbp)
	movq %r11,-16(%rbp)
	movq 136(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 72(%rsp),%rax
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,8(%rbp)
	addq $-152,%rbp
	testb $7,%bl
	jne _ccMtg
_ccMth:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccMtb, .-_ccMtb


==================== Asm code ====================
2018-03-16 16:07:47.678978708 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMtb_info:
	.quad	_ccMtb
	.quad	1
	.quad	30064771102
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.680124485 UTC

.section .text
.align 8
_ccMtg:
_ccMtg:
	addq $472,%r12
	cmpq 856(%r13),%r12
	ja _ccMJx
_ccMJw:
	movq 7(%rbx),%rax
	leaq w1_scLLZ_info(%rip),%rbx
	movq %rbx,-464(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-448(%r12)
	leaq w2_scLM4_info(%rip),%rbx
	movq %rbx,-440(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-424(%r12)
	leaq w3_scLM9_info(%rip),%rbx
	movq %rbx,-416(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-400(%r12)
	leaq w4_scLMe_info(%rip),%rbx
	movq %rbx,-392(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-376(%r12)
	leaq w5_scLMj_info(%rip),%rbx
	movq %rbx,-368(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-352(%r12)
	leaq w6_scLMo_info(%rip),%rbx
	movq %rbx,-344(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-328(%r12)
	leaq w7_scLMt_info(%rip),%rbx
	movq %rbx,-320(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-304(%r12)
	leaq w8_scLMy_info(%rip),%rbx
	movq %rbx,-296(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-280(%r12)
	leaq w9_scLMD_info(%rip),%rbx
	movq %rbx,-272(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-256(%r12)
	leaq w10_scLMI_info(%rip),%rbx
	movq %rbx,-248(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-232(%r12)
	leaq w11_scLMN_info(%rip),%rbx
	movq %rbx,-224(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-208(%r12)
	leaq f_scLMS_info(%rip),%rbx
	movq %rbx,-200(%r12)
	movq 144(%rbp),%rbx
	movq %rbx,-184(%r12)
	leaq p_scLMT_info(%rip),%rbx
	movq %rbx,-176(%r12)
	movq 160(%rbp),%rbx
	movq %rbx,-168(%r12)
	movq 152(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-152(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 112(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 120(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq 128(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 136(%rbp),%rbx
	movq %rbx,-112(%r12)
	leaq -464(%r12),%rbx
	movq %rbx,-104(%r12)
	leaq -440(%r12),%rbx
	movq %rbx,-96(%r12)
	leaq -416(%r12),%rbx
	movq %rbx,-88(%r12)
	leaq -392(%r12),%rbx
	movq %rbx,-80(%r12)
	leaq -368(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -344(%r12),%rbx
	movq %rbx,-64(%r12)
	leaq -320(%r12),%rbx
	movq %rbx,-56(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-48(%r12)
	leaq -272(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq -248(%r12),%rbx
	movq %rbx,-32(%r12)
	leaq -224(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -200(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -175(%r12),%rbx
	cmpq $11,%rax
	jl _ccMJz
_ccMJA:
	leaq sat_scLPa_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $168,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMJz:
	addq $-16,%r12
	addq $168,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMJx:
	movq $472,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMtg, .-_ccMtg


==================== Asm code ====================
2018-03-16 16:07:47.68139268 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMtg_info:
	.quad	_ccMtg
	.quad	20
	.quad	30064771102
	.quad	ScMjD_srt


==================== Asm code ====================
2018-03-16 16:07:47.683982977 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshow_closure
.type GHC.Stats.$fShowRTSStats_$cshow_closure, @object
GHC.Stats.$fShowRTSStats_$cshow_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.684755652 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshow_entry
.type GHC.Stats.$fShowRTSStats_$cshow_entry, @object
GHC.Stats.$fShowRTSStats_$cshow_entry:
_ccMVB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMVC
_ccMVD:
	movq %r14,%rsi
	leaq GHC.Stats.$fShowGCDetails2_closure+1(%rip),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
_ccMVC:
	leaq GHC.Stats.$fShowRTSStats_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fShowRTSStats_$cshow_entry, .-GHC.Stats.$fShowRTSStats_$cshow_entry


==================== Asm code ====================
2018-03-16 16:07:47.68551042 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshow_info
.type GHC.Stats.$fShowRTSStats_$cshow_info, @object
GHC.Stats.$fShowRTSStats_$cshow_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	ScMjD_srt+40


==================== Asm code ====================
2018-03-16 16:07:47.687659563 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats1_closure
.type GHC.Stats.$fShowRTSStats1_closure, @object
GHC.Stats.$fShowRTSStats1_closure:
	.quad	GHC.Stats.$fShowRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.688314915 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats1_entry
.type GHC.Stats.$fShowRTSStats1_entry, @object
GHC.Stats.$fShowRTSStats1_entry:
_ccMVQ:
	movq %r14,%rsi
	leaq GHC.Stats.$fShowGCDetails2_closure+1(%rip),%r14
	jmp GHC.Stats.$fShowRTSStats_$cshowsPrec_entry
	.size GHC.Stats.$fShowRTSStats1_entry, .-GHC.Stats.$fShowRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:47.688883494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats1_info
.type GHC.Stats.$fShowRTSStats1_info, @object
GHC.Stats.$fShowRTSStats1_info:
	.quad	GHC.Stats.$fShowRTSStats1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+40


==================== Asm code ====================
2018-03-16 16:07:47.691372867 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowList_closure
.type GHC.Stats.$fShowRTSStats_$cshowList_closure, @object
GHC.Stats.$fShowRTSStats_$cshowList_closure:
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.692025964 UTC

.section .text
.align 8
.globl GHC.Stats.$fShowRTSStats_$cshowList_entry
.type GHC.Stats.$fShowRTSStats_$cshowList_entry, @object
GHC.Stats.$fShowRTSStats_$cshowList_entry:
_ccMW1:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Stats.$fShowRTSStats1_closure+1(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Stats.$fShowRTSStats_$cshowList_entry, .-GHC.Stats.$fShowRTSStats_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:07:47.692650375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_$cshowList_info
.type GHC.Stats.$fShowRTSStats_$cshowList_info, @object
GHC.Stats.$fShowRTSStats_$cshowList_info:
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	ScMjD_srt+56


==================== Asm code ====================
2018-03-16 16:07:47.69442261 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fShowRTSStats_closure
.type GHC.Stats.$fShowRTSStats_closure, @object
GHC.Stats.$fShowRTSStats_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_closure+2
	.quad	GHC.Stats.$fShowRTSStats_$cshow_closure+1
	.quad	GHC.Stats.$fShowRTSStats_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.696063661 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tcGCDetails2_bytes
.type GHC.Stats.$tcGCDetails2_bytes, @object
GHC.Stats.$tcGCDetails2_bytes:
	.asciz "GCDetails"


==================== Asm code ====================
2018-03-16 16:07:47.699197532 UTC

.section .data
.align 8
.align 1
lexeme_rcHq6_closure:
	.quad	lexeme_rcHq6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.70007581 UTC

.section .text
.align 8
lexeme_rcHq6_entry:
_ccMWg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMWh
_ccMWi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMWf
_ccMWe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.$tcGCDetails2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMWh:
	jmp *-16(%r13)
_ccMWf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme_rcHq6_entry, .-lexeme_rcHq6_entry


==================== Asm code ====================
2018-03-16 16:07:47.700741264 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme_rcHq6_info:
	.quad	lexeme_rcHq6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.702553948 UTC

.section .data
.align 8
.align 1
lexeme1_rcHq7_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	lexeme_rcHq6_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.704221054 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lexeme2_rcHq8_bytes:
	.asciz "{"


==================== Asm code ====================
2018-03-16 16:07:47.706800485 UTC

.section .data
.align 8
.align 1
lexeme3_rcHq9_closure:
	.quad	lexeme3_rcHq9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.707625574 UTC

.section .text
.align 8
lexeme3_rcHq9_entry:
_ccMWz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMWA
_ccMWB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMWy
_ccMWx:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lexeme2_rcHq8_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMWA:
	jmp *-16(%r13)
_ccMWy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme3_rcHq9_entry, .-lexeme3_rcHq9_entry


==================== Asm code ====================
2018-03-16 16:07:47.708341887 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme3_rcHq9_info:
	.quad	lexeme3_rcHq9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.710052984 UTC

.section .data
.align 8
.align 1
lexeme4_rcHqa_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lexeme3_rcHq9_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.711626641 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ds_rcHqb_bytes:
	.asciz "gcdetails_gen"


==================== Asm code ====================
2018-03-16 16:07:47.714567521 UTC

.section .data
.align 8
.align 1
ds1_rcHqc_closure:
	.quad	ds1_rcHqc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.715427686 UTC

.section .text
.align 8
ds1_rcHqc_entry:
_ccMWS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMWT
_ccMWU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMWR
_ccMWQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq ds_rcHqb_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMWT:
	jmp *-16(%r13)
_ccMWR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size ds1_rcHqc_entry, .-ds1_rcHqc_entry


==================== Asm code ====================
2018-03-16 16:07:47.716111283 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_rcHqc_info:
	.quad	ds1_rcHqc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.718418796 UTC

.section .data
.align 8
.align 1
lvl37_rcHqd_closure:
	.quad	lvl37_rcHqd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.719099067 UTC

.section .text
.align 8
lvl37_rcHqd_entry:
_ccMX7:
	movq %r14,%rsi
	movq Text.ParserCombinators.ReadPrec.minPrec_closure@gotpcrel(%rip),%r14
	jmp *GHC.Read.$fReadWord32_$creadsPrec_entry@gotpcrel(%rip)
	.size lvl37_rcHqd_entry, .-lvl37_rcHqd_entry


==================== Asm code ====================
2018-03-16 16:07:47.719715239 UTC

.section .data.rel.ro
.align 8
.align 1
lvl37_rcHqd_info:
	.quad	lvl37_rcHqd_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+64


==================== Asm code ====================
2018-03-16 16:07:47.722758514 UTC

.section .data
.align 8
.align 1
ds2_rcHqe_closure:
	.quad	ds2_rcHqe_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.723515661 UTC

.section .text
.align 8
ds2_rcHqe_entry:
_ccMXl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMXm
_ccMXn:
	leaq block_ccMXi_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl37_rcHqd_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_ccMXm:
	leaq ds2_rcHqe_closure(%rip),%rbx
	jmp *-8(%r13)
	.size ds2_rcHqe_entry, .-ds2_rcHqe_entry


==================== Asm code ====================
2018-03-16 16:07:47.724200517 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_rcHqe_info:
	.quad	ds2_rcHqe_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScMjD_srt+72


==================== Asm code ====================
2018-03-16 16:07:47.724955478 UTC

.section .text
.align 8
_ccMXi:
_ccMXi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccMXq
_ccMXp:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMXq:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMXi, .-_ccMXi


==================== Asm code ====================
2018-03-16 16:07:47.726375743 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMXi_info:
	.quad	_ccMXi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.728075732 UTC

.section .data
.align 8
.align 1
n_rcHqf_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:07:47.730222494 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl38_rcHqg_bytes:
	.asciz ","


==================== Asm code ====================
2018-03-16 16:07:47.732703371 UTC

.section .data
.align 8
.align 1
lvl39_rcHqh_closure:
	.quad	lvl39_rcHqh_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.733661601 UTC

.section .text
.align 8
lvl39_rcHqh_entry:
_ccMXK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMXL
_ccMXM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMXJ
_ccMXI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl38_rcHqg_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMXL:
	jmp *-16(%r13)
_ccMXJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl39_rcHqh_entry, .-lvl39_rcHqh_entry


==================== Asm code ====================
2018-03-16 16:07:47.734373424 UTC

.section .data.rel.ro
.align 8
.align 1
lvl39_rcHqh_info:
	.quad	lvl39_rcHqh_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.736085161 UTC

.section .data
.align 8
.align 1
lvl40_rcHqi_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lvl39_rcHqh_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.738107774 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl41_rcHqj_bytes:
	.asciz "gcdetails_threads"


==================== Asm code ====================
2018-03-16 16:07:47.740969072 UTC

.section .data
.align 8
.align 1
lvl42_rcHqk_closure:
	.quad	lvl42_rcHqk_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.741911629 UTC

.section .text
.align 8
lvl42_rcHqk_entry:
_ccMY3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMY4
_ccMY5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMY2
_ccMY1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl41_rcHqj_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMY4:
	jmp *-16(%r13)
_ccMY2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl42_rcHqk_entry, .-lvl42_rcHqk_entry


==================== Asm code ====================
2018-03-16 16:07:47.742567653 UTC

.section .data.rel.ro
.align 8
.align 1
lvl42_rcHqk_info:
	.quad	lvl42_rcHqk_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.744244908 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl43_rcHql_bytes:
	.asciz "gcdetails_allocated_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.746785472 UTC

.section .data
.align 8
.align 1
lvl44_rcHqm_closure:
	.quad	lvl44_rcHqm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.747606436 UTC

.section .text
.align 8
lvl44_rcHqm_entry:
_ccMYl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMYm
_ccMYn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMYk
_ccMYj:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl43_rcHql_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMYm:
	jmp *-16(%r13)
_ccMYk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl44_rcHqm_entry, .-lvl44_rcHqm_entry


==================== Asm code ====================
2018-03-16 16:07:47.748292628 UTC

.section .data.rel.ro
.align 8
.align 1
lvl44_rcHqm_info:
	.quad	lvl44_rcHqm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.750482055 UTC

.section .data
.align 8
.align 1
lvl45_rcHqn_closure:
	.quad	lvl45_rcHqn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.751102267 UTC

.section .text
.align 8
lvl45_rcHqn_entry:
_ccMYA:
	movq %r14,%rsi
	movq Text.ParserCombinators.ReadPrec.minPrec_closure@gotpcrel(%rip),%r14
	jmp *GHC.Read.$fReadWord64_$creadsPrec_entry@gotpcrel(%rip)
	.size lvl45_rcHqn_entry, .-lvl45_rcHqn_entry


==================== Asm code ====================
2018-03-16 16:07:47.751689581 UTC

.section .data.rel.ro
.align 8
.align 1
lvl45_rcHqn_info:
	.quad	lvl45_rcHqn_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+88


==================== Asm code ====================
2018-03-16 16:07:47.754699846 UTC

.section .data
.align 8
.align 1
lvl46_rcHqo_closure:
	.quad	lvl46_rcHqo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.755427526 UTC

.section .text
.align 8
lvl46_rcHqo_entry:
_ccMYO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMYP
_ccMYQ:
	leaq block_ccMYL_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl45_rcHqn_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_ccMYP:
	leaq lvl46_rcHqo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl46_rcHqo_entry, .-lvl46_rcHqo_entry


==================== Asm code ====================
2018-03-16 16:07:47.756102656 UTC

.section .data.rel.ro
.align 8
.align 1
lvl46_rcHqo_info:
	.quad	lvl46_rcHqo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScMjD_srt+96


==================== Asm code ====================
2018-03-16 16:07:47.756767587 UTC

.section .text
.align 8
_ccMYL:
_ccMYL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccMYT
_ccMYS:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccMYT:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccMYL, .-_ccMYL


==================== Asm code ====================
2018-03-16 16:07:47.757480948 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccMYL_info:
	.quad	_ccMYL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.759133825 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl47_rcHqp_bytes:
	.asciz "gcdetails_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.761689667 UTC

.section .data
.align 8
.align 1
lvl48_rcHqq_closure:
	.quad	lvl48_rcHqq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.763021977 UTC

.section .text
.align 8
lvl48_rcHqq_entry:
_ccMZc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMZd
_ccMZe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMZb
_ccMZa:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl47_rcHqp_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMZd:
	jmp *-16(%r13)
_ccMZb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl48_rcHqq_entry, .-lvl48_rcHqq_entry


==================== Asm code ====================
2018-03-16 16:07:47.76380284 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_rcHqq_info:
	.quad	lvl48_rcHqq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.765854196 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl49_rcHqr_bytes:
	.asciz "gcdetails_large_objects_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.768271741 UTC

.section .data
.align 8
.align 1
lvl50_rcHqs_closure:
	.quad	lvl50_rcHqs_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.769082781 UTC

.section .text
.align 8
lvl50_rcHqs_entry:
_ccMZu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMZv
_ccMZw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMZt
_ccMZs:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl49_rcHqr_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMZv:
	jmp *-16(%r13)
_ccMZt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl50_rcHqs_entry, .-lvl50_rcHqs_entry


==================== Asm code ====================
2018-03-16 16:07:47.769848166 UTC

.section .data.rel.ro
.align 8
.align 1
lvl50_rcHqs_info:
	.quad	lvl50_rcHqs_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.771505196 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl51_rcHqt_bytes:
	.asciz "gcdetails_compact_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.77395996 UTC

.section .data
.align 8
.align 1
lvl52_rcHqu_closure:
	.quad	lvl52_rcHqu_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.774739284 UTC

.section .text
.align 8
lvl52_rcHqu_entry:
_ccMZM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccMZN
_ccMZO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccMZL
_ccMZK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl51_rcHqt_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccMZN:
	jmp *-16(%r13)
_ccMZL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl52_rcHqu_entry, .-lvl52_rcHqu_entry


==================== Asm code ====================
2018-03-16 16:07:47.775431991 UTC

.section .data.rel.ro
.align 8
.align 1
lvl52_rcHqu_info:
	.quad	lvl52_rcHqu_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.777129921 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl53_rcHqv_bytes:
	.asciz "gcdetails_slop_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.780375887 UTC

.section .data
.align 8
.align 1
lvl54_rcHqw_closure:
	.quad	lvl54_rcHqw_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.78120963 UTC

.section .text
.align 8
lvl54_rcHqw_entry:
_ccN04:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN05
_ccN06:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN03
_ccN02:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl53_rcHqv_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN05:
	jmp *-16(%r13)
_ccN03:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl54_rcHqw_entry, .-lvl54_rcHqw_entry


==================== Asm code ====================
2018-03-16 16:07:47.781966391 UTC

.section .data.rel.ro
.align 8
.align 1
lvl54_rcHqw_info:
	.quad	lvl54_rcHqw_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.783667133 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl55_rcHqx_bytes:
	.asciz "gcdetails_mem_in_use_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.786198988 UTC

.section .data
.align 8
.align 1
lvl56_rcHqy_closure:
	.quad	lvl56_rcHqy_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.786991403 UTC

.section .text
.align 8
lvl56_rcHqy_entry:
_ccN0m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN0n
_ccN0o:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN0l
_ccN0k:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl55_rcHqx_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN0n:
	jmp *-16(%r13)
_ccN0l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl56_rcHqy_entry, .-lvl56_rcHqy_entry


==================== Asm code ====================
2018-03-16 16:07:47.787686011 UTC

.section .data.rel.ro
.align 8
.align 1
lvl56_rcHqy_info:
	.quad	lvl56_rcHqy_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.789382671 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl57_rcHqz_bytes:
	.asciz "gcdetails_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.791848062 UTC

.section .data
.align 8
.align 1
lvl58_rcHqA_closure:
	.quad	lvl58_rcHqA_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.792689958 UTC

.section .text
.align 8
lvl58_rcHqA_entry:
_ccN0E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN0F
_ccN0G:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN0D
_ccN0C:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl57_rcHqz_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN0F:
	jmp *-16(%r13)
_ccN0D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl58_rcHqA_entry, .-lvl58_rcHqA_entry


==================== Asm code ====================
2018-03-16 16:07:47.793784976 UTC

.section .data.rel.ro
.align 8
.align 1
lvl58_rcHqA_info:
	.quad	lvl58_rcHqA_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.79600568 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl59_rcHqB_bytes:
	.asciz "gcdetails_par_max_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.79841951 UTC

.section .data
.align 8
.align 1
lvl60_rcHqC_closure:
	.quad	lvl60_rcHqC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.799244743 UTC

.section .text
.align 8
lvl60_rcHqC_entry:
_ccN0W:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN0X
_ccN0Y:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN0V
_ccN0U:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl59_rcHqB_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN0X:
	jmp *-16(%r13)
_ccN0V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl60_rcHqC_entry, .-lvl60_rcHqC_entry


==================== Asm code ====================
2018-03-16 16:07:47.799926561 UTC

.section .data.rel.ro
.align 8
.align 1
lvl60_rcHqC_info:
	.quad	lvl60_rcHqC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.801577351 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl61_rcHqD_bytes:
	.asciz "gcdetails_par_balanced_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:47.803974549 UTC

.section .data
.align 8
.align 1
lvl62_rcHqE_closure:
	.quad	lvl62_rcHqE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.804725307 UTC

.section .text
.align 8
lvl62_rcHqE_entry:
_ccN1e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN1f
_ccN1g:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN1d
_ccN1c:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl61_rcHqD_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN1f:
	jmp *-16(%r13)
_ccN1d:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl62_rcHqE_entry, .-lvl62_rcHqE_entry


==================== Asm code ====================
2018-03-16 16:07:47.805461645 UTC

.section .data.rel.ro
.align 8
.align 1
lvl62_rcHqE_info:
	.quad	lvl62_rcHqE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.807073839 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl63_rcHqF_bytes:
	.asciz "gcdetails_sync_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:47.809877974 UTC

.section .data
.align 8
.align 1
lvl64_rcHqG_closure:
	.quad	lvl64_rcHqG_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.810714321 UTC

.section .text
.align 8
lvl64_rcHqG_entry:
_ccN1w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN1x
_ccN1y:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN1v
_ccN1u:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl63_rcHqF_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN1x:
	jmp *-16(%r13)
_ccN1v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl64_rcHqG_entry, .-lvl64_rcHqG_entry


==================== Asm code ====================
2018-03-16 16:07:47.811394285 UTC

.section .data.rel.ro
.align 8
.align 1
lvl64_rcHqG_info:
	.quad	lvl64_rcHqG_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.813600712 UTC

.section .data
.align 8
.align 1
lvl65_rcHqH_closure:
	.quad	lvl65_rcHqH_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.814233007 UTC

.section .text
.align 8
lvl65_rcHqH_entry:
_ccN1L:
	movq %r14,%rsi
	movq Text.ParserCombinators.ReadPrec.minPrec_closure@gotpcrel(%rip),%r14
	jmp *GHC.Int.$fReadInt64_$creadsPrec_entry@gotpcrel(%rip)
	.size lvl65_rcHqH_entry, .-lvl65_rcHqH_entry


==================== Asm code ====================
2018-03-16 16:07:47.814820795 UTC

.section .data.rel.ro
.align 8
.align 1
lvl65_rcHqH_info:
	.quad	lvl65_rcHqH_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+112


==================== Asm code ====================
2018-03-16 16:07:47.817710732 UTC

.section .data
.align 8
.align 1
lvl66_rcHqI_closure:
	.quad	lvl66_rcHqI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.818503989 UTC

.section .text
.align 8
lvl66_rcHqI_entry:
_ccN1Z:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN20
_ccN21:
	leaq block_ccN1W_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl65_rcHqH_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Text.ParserCombinators.ReadP.$wreadS_to_P_entry@gotpcrel(%rip)
_ccN20:
	leaq lvl66_rcHqI_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl66_rcHqI_entry, .-lvl66_rcHqI_entry


==================== Asm code ====================
2018-03-16 16:07:47.819152981 UTC

.section .data.rel.ro
.align 8
.align 1
lvl66_rcHqI_info:
	.quad	lvl66_rcHqI_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScMjD_srt+120


==================== Asm code ====================
2018-03-16 16:07:47.819840024 UTC

.section .text
.align 8
_ccN1W:
_ccN1W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN24
_ccN23:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN24:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN1W, .-_ccN1W


==================== Asm code ====================
2018-03-16 16:07:47.820517743 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN1W_info:
	.quad	_ccN1W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.824062515 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl67_rcHqJ_bytes:
	.asciz "gcdetails_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:47.8268414 UTC

.section .data
.align 8
.align 1
lvl68_rcHqK_closure:
	.quad	lvl68_rcHqK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.82770518 UTC

.section .text
.align 8
lvl68_rcHqK_entry:
_ccN2n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN2o
_ccN2p:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN2m
_ccN2l:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl67_rcHqJ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN2o:
	jmp *-16(%r13)
_ccN2m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl68_rcHqK_entry, .-lvl68_rcHqK_entry


==================== Asm code ====================
2018-03-16 16:07:47.829139528 UTC

.section .data.rel.ro
.align 8
.align 1
lvl68_rcHqK_info:
	.quad	lvl68_rcHqK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.830983767 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl69_rcHqL_bytes:
	.asciz "gcdetails_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:47.834150624 UTC

.section .data
.align 8
.align 1
lvl70_rcHqM_closure:
	.quad	lvl70_rcHqM_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.835122339 UTC

.section .text
.align 8
lvl70_rcHqM_entry:
_ccN2F:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN2G
_ccN2H:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN2E
_ccN2D:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl69_rcHqL_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN2G:
	jmp *-16(%r13)
_ccN2E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl70_rcHqM_entry, .-lvl70_rcHqM_entry


==================== Asm code ====================
2018-03-16 16:07:47.835792632 UTC

.section .data.rel.ro
.align 8
.align 1
lvl70_rcHqM_info:
	.quad	lvl70_rcHqM_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.838272092 UTC

.section .data
.align 8
.align 1
lvl71_rcHqN_closure:
	.quad	lvl71_rcHqN_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.839179554 UTC

.section .text
.align 8
lvl71_rcHqN_entry:
_ccN2W:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN2X
_ccN2Y:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccN2V
_ccN2U:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl15_rcHpK_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccN2X:
	jmp *-16(%r13)
_ccN2V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl71_rcHqN_entry, .-lvl71_rcHqN_entry


==================== Asm code ====================
2018-03-16 16:07:47.839944284 UTC

.section .data.rel.ro
.align 8
.align 1
lvl71_rcHqN_info:
	.quad	lvl71_rcHqN_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:47.841855761 UTC

.section .data
.align 8
.align 1
lvl72_rcHqO_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	lvl71_rcHqN_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.889137612 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec_closure
.type GHC.Stats.$w$creadPrec_closure, @object
GHC.Stats.$w$creadPrec_closure:
	.quad	GHC.Stats.$w$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.890307337 UTC

.section .text
.align 8
sat_scLPY_entry:
_ccN5H:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccN5L
_ccN5K:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq 119(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq GHC.Stats.GCDetails_con_info(%rip),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r14
	movq 64(%rsp),%rax
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccN5L:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scLPY_entry, .-sat_scLPY_entry


==================== Asm code ====================
2018-03-16 16:07:47.89118048 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLPY_info:
	.quad	sat_scLPY_entry
	.quad	15
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:47.892175318 UTC

.section .text
.align 8
sat_scLQ1_entry:
_ccN5P:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN5Q
_ccN5R:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccN5T
_ccN5S:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLPY_info(%rip),%rdi
	movq %rdi,-120(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN5M_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -119(%r12),%rsi
	leaq lvl72_rcHqO_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN5T:
	movq $128,904(%r13)
_ccN5Q:
	jmp *-8(%r13)
	.size sat_scLQ1_entry, .-sat_scLQ1_entry


==================== Asm code ====================
2018-03-16 16:07:47.893132842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQ1_info:
	.quad	sat_scLQ1_entry
	.quad	14
	.quad	12884901896
	.quad	4294967301
	.quad	ScMjD_srt+136


==================== Asm code ====================
2018-03-16 16:07:47.894006102 UTC

.section .text
.align 8
_ccN5M:
_ccN5M:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN5W
_ccN5V:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN5W:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN5M, .-_ccN5M


==================== Asm code ====================
2018-03-16 16:07:47.894671303 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN5M_info:
	.quad	_ccN5M
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.895599797 UTC

.section .text
.align 8
sat_scLQ2_entry:
_ccN5X:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccN61
_ccN60:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLQ1_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl70_rcHqM_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN61:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQ2_entry, .-sat_scLQ2_entry


==================== Asm code ====================
2018-03-16 16:07:47.896503486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQ2_info:
	.quad	sat_scLQ2_entry
	.quad	14
	.quad	133143986184
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.897540767 UTC

.section .text
.align 8
sat_scLQ5_entry:
_ccN65:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN66
_ccN67:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccN69
_ccN68:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq 103(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLQ2_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN62_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -111(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN69:
	movq $120,904(%r13)
_ccN66:
	jmp *-8(%r13)
	.size sat_scLQ5_entry, .-sat_scLQ5_entry


==================== Asm code ====================
2018-03-16 16:07:47.898468699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQ5_info:
	.quad	sat_scLQ5_entry
	.quad	13
	.quad	270582939656
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.899273697 UTC

.section .text
.align 8
_ccN62:
_ccN62:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN6c
_ccN6b:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN6c:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN62, .-_ccN62


==================== Asm code ====================
2018-03-16 16:07:47.89996303 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN62_info:
	.quad	_ccN62
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.900891833 UTC

.section .text
.align 8
sat_scLQ6_entry:
_ccN6d:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccN6h
_ccN6g:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 103(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLQ5_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -103(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl68_rcHqK_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN6h:
	movq $112,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQ6_entry, .-sat_scLQ6_entry


==================== Asm code ====================
2018-03-16 16:07:47.901812566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQ6_info:
	.quad	sat_scLQ6_entry
	.quad	13
	.quad	545460846600
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.902771692 UTC

.section .text
.align 8
sat_scLQ9_entry:
_ccN6l:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN6m
_ccN6n:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccN6p
_ccN6o:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLQ6_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN6i_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -103(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN6p:
	movq $112,904(%r13)
_ccN6m:
	jmp *-8(%r13)
	.size sat_scLQ9_entry, .-sat_scLQ9_entry


==================== Asm code ====================
2018-03-16 16:07:47.903672687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQ9_info:
	.quad	sat_scLQ9_entry
	.quad	12
	.quad	545460846600
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.904434991 UTC

.section .text
.align 8
_ccN6i:
_ccN6i:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN6s
_ccN6r:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN6s:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN6i, .-_ccN6i


==================== Asm code ====================
2018-03-16 16:07:47.905121488 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN6i_info:
	.quad	_ccN6i
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.906097868 UTC

.section .text
.align 8
sat_scLQa_entry:
_ccN6t:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccN6x
_ccN6w:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLQ9_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -95(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl64_rcHqG_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN6x:
	movq $104,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQa_entry, .-sat_scLQa_entry


==================== Asm code ====================
2018-03-16 16:07:47.906923609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQa_info:
	.quad	sat_scLQa_entry
	.quad	12
	.quad	1095216660488
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.907889771 UTC

.section .text
.align 8
sat_scLQd_entry:
_ccN6B:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN6C
_ccN6D:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccN6F
_ccN6E:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq 87(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLQa_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN6y_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -95(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN6F:
	movq $104,904(%r13)
_ccN6C:
	jmp *-8(%r13)
	.size sat_scLQd_entry, .-sat_scLQd_entry


==================== Asm code ====================
2018-03-16 16:07:47.908747972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQd_info:
	.quad	sat_scLQd_entry
	.quad	11
	.quad	1095216660488
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:47.909557493 UTC

.section .text
.align 8
_ccN6y:
_ccN6y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN6I
_ccN6H:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN6I:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN6y, .-_ccN6y


==================== Asm code ====================
2018-03-16 16:07:47.911360389 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN6y_info:
	.quad	_ccN6y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.912331789 UTC

.section .text
.align 8
sat_scLQe_entry:
_ccN6J:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccN6N
_ccN6M:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq 87(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLQd_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -87(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl62_rcHqE_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN6N:
	movq $96,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQe_entry, .-sat_scLQe_entry


==================== Asm code ====================
2018-03-16 16:07:47.913114715 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQe_info:
	.quad	sat_scLQe_entry
	.quad	11
	.quad	17562121273352
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.914238064 UTC

.section .text
.align 8
sat_scLQh_entry:
_ccN6R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN6S
_ccN6T:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccN6V
_ccN6U:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLQe_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN6O_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -87(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN6V:
	movq $96,904(%r13)
_ccN6S:
	jmp *-8(%r13)
	.size sat_scLQh_entry, .-sat_scLQh_entry


==================== Asm code ====================
2018-03-16 16:07:47.915036397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQh_info:
	.quad	sat_scLQh_entry
	.quad	10
	.quad	17562121273352
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.915737445 UTC

.section .text
.align 8
_ccN6O:
_ccN6O:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN6Y
_ccN6X:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN6Y:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN6O, .-_ccN6O


==================== Asm code ====================
2018-03-16 16:07:47.916384723 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN6O_info:
	.quad	_ccN6O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.917192541 UTC

.section .text
.align 8
sat_scLQi_entry:
_ccN6Z:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccN73
_ccN72:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	leaq sat_scLQh_info(%rip),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -79(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl60_rcHqC_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN73:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQi_entry, .-sat_scLQi_entry


==================== Asm code ====================
2018-03-16 16:07:47.918032269 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQi_info:
	.quad	sat_scLQi_entry
	.quad	10
	.quad	35154307317768
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.918901527 UTC

.section .text
.align 8
sat_scLQl_entry:
_ccN77:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN78
_ccN79:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccN7b
_ccN7a:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	leaq sat_scLQi_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN74_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -79(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN7b:
	movq $88,904(%r13)
_ccN78:
	jmp *-8(%r13)
	.size sat_scLQl_entry, .-sat_scLQl_entry


==================== Asm code ====================
2018-03-16 16:07:47.919654133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQl_info:
	.quad	sat_scLQl_entry
	.quad	9
	.quad	35154307317768
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.920365814 UTC

.section .text
.align 8
_ccN74:
_ccN74:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN7e
_ccN7d:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN7e:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN74, .-_ccN74


==================== Asm code ====================
2018-03-16 16:07:47.921042347 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN74_info:
	.quad	_ccN74
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.922025178 UTC

.section .text
.align 8
sat_scLQm_entry:
_ccN7f:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccN7j
_ccN7i:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	leaq sat_scLQl_info(%rip),%r11
	movq %r11,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -71(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl58_rcHqA_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN7j:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQm_entry, .-sat_scLQm_entry


==================== Asm code ====================
2018-03-16 16:07:47.922736841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQm_info:
	.quad	sat_scLQm_entry
	.quad	9
	.quad	70338679406600
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.923588678 UTC

.section .text
.align 8
sat_scLQp_entry:
_ccN7n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN7o
_ccN7p:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccN7r
_ccN7q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	leaq sat_scLQm_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN7k_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -71(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN7r:
	movq $80,904(%r13)
_ccN7o:
	jmp *-8(%r13)
	.size sat_scLQp_entry, .-sat_scLQp_entry


==================== Asm code ====================
2018-03-16 16:07:47.924351012 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQp_info:
	.quad	sat_scLQp_entry
	.quad	8
	.quad	70338679406600
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.925041584 UTC

.section .text
.align 8
_ccN7k:
_ccN7k:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN7u
_ccN7t:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN7u:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN7k, .-_ccN7k


==================== Asm code ====================
2018-03-16 16:07:47.92574632 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN7k_info:
	.quad	_ccN7k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.926501845 UTC

.section .text
.align 8
sat_scLQq_entry:
_ccN7v:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccN7z
_ccN7y:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	leaq sat_scLQp_info(%rip),%r10
	movq %r10,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -63(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl56_rcHqy_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN7z:
	movq $72,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQq_entry, .-sat_scLQq_entry


==================== Asm code ====================
2018-03-16 16:07:47.927207274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQq_info:
	.quad	sat_scLQq_entry
	.quad	8
	.quad	140707423584264
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.928105759 UTC

.section .text
.align 8
sat_scLQt_entry:
_ccN7D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN7E
_ccN7F:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccN7H
_ccN7G:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	leaq sat_scLQq_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN7A_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -63(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN7H:
	movq $72,904(%r13)
_ccN7E:
	jmp *-8(%r13)
	.size sat_scLQt_entry, .-sat_scLQt_entry


==================== Asm code ====================
2018-03-16 16:07:47.928882627 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQt_info:
	.quad	sat_scLQt_entry
	.quad	7
	.quad	140707423584264
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.929644494 UTC

.section .text
.align 8
_ccN7A:
_ccN7A:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN7K
_ccN7J:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN7K:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN7A, .-_ccN7A


==================== Asm code ====================
2018-03-16 16:07:47.930290578 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN7A_info:
	.quad	_ccN7A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.93106224 UTC

.section .text
.align 8
sat_scLQu_entry:
_ccN7L:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccN7P
_ccN7O:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	leaq sat_scLQt_info(%rip),%r9
	movq %r9,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -55(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl54_rcHqw_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN7P:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQu_entry, .-sat_scLQu_entry


==================== Asm code ====================
2018-03-16 16:07:47.931741186 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQu_info:
	.quad	sat_scLQu_entry
	.quad	7
	.quad	281444911939592
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.93256575 UTC

.section .text
.align 8
sat_scLQx_entry:
_ccN7T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN7U
_ccN7V:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccN7X
_ccN7W:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_scLQu_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN7Q_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -55(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN7X:
	movq $64,904(%r13)
_ccN7U:
	jmp *-8(%r13)
	.size sat_scLQx_entry, .-sat_scLQx_entry


==================== Asm code ====================
2018-03-16 16:07:47.933607466 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQx_info:
	.quad	sat_scLQx_entry
	.quad	6
	.quad	281444911939592
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.934286223 UTC

.section .text
.align 8
_ccN7Q:
_ccN7Q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN80
_ccN7Z:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN80:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN7Q, .-_ccN7Q


==================== Asm code ====================
2018-03-16 16:07:47.934924476 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN7Q_info:
	.quad	_ccN7Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.935719245 UTC

.section .text
.align 8
sat_scLQy_entry:
_ccN81:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccN85
_ccN84:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_scLQx_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl52_rcHqu_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN85:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQy_entry, .-sat_scLQy_entry


==================== Asm code ====================
2018-03-16 16:07:47.936430868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQy_info:
	.quad	sat_scLQy_entry
	.quad	6
	.quad	562919888650248
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.937315133 UTC

.section .text
.align 8
sat_scLQB_entry:
_ccN89:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN8a
_ccN8b:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccN8d
_ccN8c:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_scLQy_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN86_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -47(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN8d:
	movq $56,904(%r13)
_ccN8a:
	jmp *-8(%r13)
	.size sat_scLQB_entry, .-sat_scLQB_entry


==================== Asm code ====================
2018-03-16 16:07:47.938070249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQB_info:
	.quad	sat_scLQB_entry
	.quad	5
	.quad	562919888650248
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.938787063 UTC

.section .text
.align 8
_ccN86:
_ccN86:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN8g
_ccN8f:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN8g:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN86, .-_ccN86


==================== Asm code ====================
2018-03-16 16:07:47.939410969 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN86_info:
	.quad	_ccN86
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.940170078 UTC

.section .text
.align 8
sat_scLQC_entry:
_ccN8h:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccN8l
_ccN8k:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_scLQB_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -39(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl50_rcHqs_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN8l:
	movq $48,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQC_entry, .-sat_scLQC_entry


==================== Asm code ====================
2018-03-16 16:07:47.940855935 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQC_info:
	.quad	sat_scLQC_entry
	.quad	5
	.quad	1125869842071560
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.941705449 UTC

.section .text
.align 8
sat_scLQF_entry:
_ccN8p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN8q
_ccN8r:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccN8t
_ccN8s:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_scLQC_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN8m_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -39(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN8t:
	movq $48,904(%r13)
_ccN8q:
	jmp *-8(%r13)
	.size sat_scLQF_entry, .-sat_scLQF_entry


==================== Asm code ====================
2018-03-16 16:07:47.942428879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQF_info:
	.quad	sat_scLQF_entry
	.quad	4
	.quad	1125869842071560
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.943180957 UTC

.section .text
.align 8
_ccN8m:
_ccN8m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN8w
_ccN8v:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN8w:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN8m, .-_ccN8m


==================== Asm code ====================
2018-03-16 16:07:47.943818976 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN8m_info:
	.quad	_ccN8m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.945200856 UTC

.section .text
.align 8
sat_scLQG_entry:
_ccN8x:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccN8B
_ccN8A:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_scLQF_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -31(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl48_rcHqq_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN8B:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQG_entry, .-sat_scLQG_entry


==================== Asm code ====================
2018-03-16 16:07:47.946486977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQG_info:
	.quad	sat_scLQG_entry
	.quad	4
	.quad	2251769748914184
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.947298765 UTC

.section .text
.align 8
sat_scLQJ_entry:
_ccN8F:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN8G
_ccN8H:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccN8J
_ccN8I:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_scLQG_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN8C_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -31(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN8J:
	movq $40,904(%r13)
_ccN8G:
	jmp *-8(%r13)
	.size sat_scLQJ_entry, .-sat_scLQJ_entry


==================== Asm code ====================
2018-03-16 16:07:47.948017376 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQJ_info:
	.quad	sat_scLQJ_entry
	.quad	3
	.quad	2251769748914184
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.948739225 UTC

.section .text
.align 8
_ccN8C:
_ccN8C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN8M
_ccN8L:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN8M:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN8C, .-_ccN8C


==================== Asm code ====================
2018-03-16 16:07:47.949401057 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN8C_info:
	.quad	_ccN8C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.950160598 UTC

.section .text
.align 8
sat_scLQK_entry:
_ccN8N:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccN8R
_ccN8Q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_scLQJ_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl44_rcHqm_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN8R:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQK_entry, .-sat_scLQK_entry


==================== Asm code ====================
2018-03-16 16:07:47.950835978 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQK_info:
	.quad	sat_scLQK_entry
	.quad	3
	.quad	4503569562599432
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.951581057 UTC

.section .text
.align 8
sat_scLQN_entry:
_ccN8V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN8W
_ccN8X:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccN8Z
_ccN8Y:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_scLQK_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN8S_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -23(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN8Z:
	movq $32,904(%r13)
_ccN8W:
	jmp *-8(%r13)
	.size sat_scLQN_entry, .-sat_scLQN_entry


==================== Asm code ====================
2018-03-16 16:07:47.952283127 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQN_info:
	.quad	sat_scLQN_entry
	.quad	2
	.quad	4503569562599435
	.quad	4294967301
	.quad	ScMjD_srt+104


==================== Asm code ====================
2018-03-16 16:07:47.9529665 UTC

.section .text
.align 8
_ccN8S:
_ccN8S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN92
_ccN91:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN92:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN8S, .-_ccN8S


==================== Asm code ====================
2018-03-16 16:07:47.953629988 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN8S_info:
	.quad	_ccN8S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.954359709 UTC

.section .text
.align 8
sat_scLQO_entry:
_ccN93:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccN97
_ccN96:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_scLQN_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq ds2_rcHqe_closure+2(%rip),%rsi
	leaq lvl42_rcHqk_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN97:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQO_entry, .-sat_scLQO_entry


==================== Asm code ====================
2018-03-16 16:07:47.955030211 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQO_info:
	.quad	sat_scLQO_entry
	.quad	2
	.quad	72057357814726667
	.quad	4294967301
	.quad	ScMjD_srt+80


==================== Asm code ====================
2018-03-16 16:07:47.955812659 UTC

.section .text
.align 8
sat_scLQR_entry:
_ccN9b:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN9c
_ccN9d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccN9f
_ccN9e:
	movq 7(%rbx),%rax
	leaq sat_scLQO_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccN98_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN9f:
	movq $24,904(%r13)
_ccN9c:
	jmp *-8(%r13)
	.size sat_scLQR_entry, .-sat_scLQR_entry


==================== Asm code ====================
2018-03-16 16:07:47.956523623 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQR_info:
	.quad	sat_scLQR_entry
	.quad	1
	.quad	72057357814726665
	.quad	4294967301
	.quad	ScMjD_srt+80


==================== Asm code ====================
2018-03-16 16:07:47.957186418 UTC

.section .text
.align 8
_ccN98:
_ccN98:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9i
_ccN9h:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN9i:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN98, .-_ccN98


==================== Asm code ====================
2018-03-16 16:07:47.957881956 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN98_info:
	.quad	_ccN98
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.958589867 UTC

.section .text
.align 8
sat_scLQS_entry:
_ccN9j:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9n
_ccN9m:
	movq 7(%rbx),%rax
	leaq sat_scLQR_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq ds2_rcHqe_closure+2(%rip),%rsi
	leaq ds1_rcHqc_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccN9n:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_scLQS_entry, .-sat_scLQS_entry


==================== Asm code ====================
2018-03-16 16:07:47.959295273 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQS_info:
	.quad	sat_scLQS_entry
	.quad	1
	.quad	144114951852654601
	.quad	4294967301
	.quad	ScMjD_srt+80


==================== Asm code ====================
2018-03-16 16:07:47.960073773 UTC

.section .text
.align 8
sat_scLQV_entry:
_ccN9r:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN9s
_ccN9t:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9v
_ccN9u:
	movq 7(%rbx),%rax
	leaq sat_scLQS_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_ccN9o_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq lexeme4_rcHqa_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN9v:
	movq $16,904(%r13)
_ccN9s:
	jmp *-8(%r13)
	.size sat_scLQV_entry, .-sat_scLQV_entry


==================== Asm code ====================
2018-03-16 16:07:47.960753016 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLQV_info:
	.quad	sat_scLQV_entry
	.quad	1
	.quad	288230139928510473
	.quad	4294967301
	.quad	ScMjD_srt+80


==================== Asm code ====================
2018-03-16 16:07:47.961514413 UTC

.section .text
.align 8
_ccN9o:
_ccN9o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9y
_ccN9x:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN9y:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN9o, .-_ccN9o


==================== Asm code ====================
2018-03-16 16:07:47.962146466 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN9o_info:
	.quad	_ccN9o
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.962966151 UTC

.section .text
.align 8
.globl GHC.Stats.$w$creadPrec_entry
.type GHC.Stats.$w$creadPrec_entry, @object
GHC.Stats.$w$creadPrec_entry:
_ccN9C:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccN9D
_ccN9E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9G
_ccN9F:
	cmpq $11,%r14
	jg _ccN9A
_ccN9B:
	leaq sat_scLQV_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_ccN9H_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq lexeme1_rcHq7_closure+4(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccN9G:
	movq $16,904(%r13)
_ccN9D:
	leaq GHC.Stats.$w$creadPrec_closure(%rip),%rbx
	jmp *-8(%r13)
_ccN9A:
	addq $-16,%r12
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.$w$creadPrec_entry, .-GHC.Stats.$w$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:07:47.963687706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec_info
.type GHC.Stats.$w$creadPrec_info, @object
GHC.Stats.$w$creadPrec_info:
	.quad	GHC.Stats.$w$creadPrec_entry
	.quad	0
	.quad	1152921268383645710
	.quad	8589934605
	.quad	ScMjD_srt+80


==================== Asm code ====================
2018-03-16 16:07:47.964381483 UTC

.section .text
.align 8
_ccN9H:
_ccN9H:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccN9M
_ccN9L:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccN9M:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccN9H, .-_ccN9H


==================== Asm code ====================
2018-03-16 16:07:47.965008789 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccN9H_info:
	.quad	_ccN9H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:47.968440466 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails2_closure
.type GHC.Stats.$fReadGCDetails2_closure, @object
GHC.Stats.$fReadGCDetails2_closure:
	.quad	GHC.Stats.$fReadGCDetails2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.96922308 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails2_entry
.type GHC.Stats.$fReadGCDetails2_entry, @object
GHC.Stats.$fReadGCDetails2_entry:
_ccNdL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNdM
_ccNdN:
	leaq block_ccNdI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccNdI
_ccNdJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNdM:
	leaq GHC.Stats.$fReadGCDetails2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadGCDetails2_entry, .-GHC.Stats.$fReadGCDetails2_entry


==================== Asm code ====================
2018-03-16 16:07:47.969967461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails2_info
.type GHC.Stats.$fReadGCDetails2_info, @object
GHC.Stats.$fReadGCDetails2_info:
	.quad	GHC.Stats.$fReadGCDetails2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	ScMjD_srt+288


==================== Asm code ====================
2018-03-16 16:07:47.970606329 UTC

.section .text
.align 8
_ccNdI:
_ccNdI:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Stats.$w$creadPrec_entry
	.size _ccNdI, .-_ccNdI


==================== Asm code ====================
2018-03-16 16:07:47.971179397 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNdI_info:
	.quad	_ccNdI
	.quad	1
	.quad	4294967326
	.quad	ScMjD_srt+288


==================== Asm code ====================
2018-03-16 16:07:47.973272989 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails1_closure
.type GHC.Stats.$fReadGCDetails1_closure, @object
GHC.Stats.$fReadGCDetails1_closure:
	.quad	GHC.Stats.$fReadGCDetails1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.973982832 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails1_entry
.type GHC.Stats.$fReadGCDetails1_entry, @object
GHC.Stats.$fReadGCDetails1_entry:
_ccNe6:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Stats.$fReadGCDetails2_closure+2(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.Stats.$fReadGCDetails1_entry, .-GHC.Stats.$fReadGCDetails1_entry


==================== Asm code ====================
2018-03-16 16:07:47.97456583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails1_info
.type GHC.Stats.$fReadGCDetails1_info, @object
GHC.Stats.$fReadGCDetails1_info:
	.quad	GHC.Stats.$fReadGCDetails1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScMjD_srt+304


==================== Asm code ====================
2018-03-16 16:07:47.978649528 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_closure
.type GHC.Stats.$fReadGCDetails_$creadsPrec_closure, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.979467187 UTC

.section .text
.align 8
sat_scLR3_entry:
_ccNel:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNem
_ccNen:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.Stats.$fReadGCDetails2_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_ccNem:
	jmp *-16(%r13)
	.size sat_scLR3_entry, .-sat_scLR3_entry


==================== Asm code ====================
2018-03-16 16:07:47.980138678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLR3_info:
	.quad	sat_scLR3_entry
	.quad	1
	.quad	12884901904
	.quad	ScMjD_srt+304


==================== Asm code ====================
2018-03-16 16:07:47.980849708 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_entry
.type GHC.Stats.$fReadGCDetails_$creadsPrec_entry, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_entry:
_ccNeo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccNes
_ccNer:
	leaq sat_scLR3_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccNes:
	movq $24,904(%r13)
	leaq GHC.Stats.$fReadGCDetails_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadGCDetails_$creadsPrec_entry, .-GHC.Stats.$fReadGCDetails_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:47.981635163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadsPrec_info
.type GHC.Stats.$fReadGCDetails_$creadsPrec_info, @object
GHC.Stats.$fReadGCDetails_$creadsPrec_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	ScMjD_srt+304


==================== Asm code ====================
2018-03-16 16:07:47.984147054 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_closure
.type GHC.Stats.$fReadGCDetails_$creadListPrec_closure, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.984983324 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_entry
.type GHC.Stats.$fReadGCDetails_$creadListPrec_entry, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_entry:
_ccNeL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNeM
_ccNeN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNeK
_ccNeJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.$fReadGCDetails1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_ccNeM:
	jmp *-16(%r13)
_ccNeK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadGCDetails_$creadListPrec_entry, .-GHC.Stats.$fReadGCDetails_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:47.985709089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadListPrec_info
.type GHC.Stats.$fReadGCDetails_$creadListPrec_info, @object
GHC.Stats.$fReadGCDetails_$creadListPrec_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	ScMjD_srt+328


==================== Asm code ====================
2018-03-16 16:07:47.988121073 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails3_closure
.type GHC.Stats.$fReadGCDetails3_closure, @object
GHC.Stats.$fReadGCDetails3_closure:
	.quad	GHC.Stats.$fReadGCDetails3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.988905483 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails3_entry
.type GHC.Stats.$fReadGCDetails3_entry, @object
GHC.Stats.$fReadGCDetails3_entry:
_ccNf2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNf3
_ccNf4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNf1
_ccNf0:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.Stats.$fReadGCDetails_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccNf3:
	jmp *-16(%r13)
_ccNf1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadGCDetails3_entry, .-GHC.Stats.$fReadGCDetails3_entry


==================== Asm code ====================
2018-03-16 16:07:47.989972608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails3_info
.type GHC.Stats.$fReadGCDetails3_info, @object
GHC.Stats.$fReadGCDetails3_info:
	.quad	GHC.Stats.$fReadGCDetails3_entry
	.quad	0
	.quad	4294967317
	.quad	ScMjD_srt+344


==================== Asm code ====================
2018-03-16 16:07:47.991952334 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadList_closure
.type GHC.Stats.$fReadGCDetails_$creadList_closure, @object
GHC.Stats.$fReadGCDetails_$creadList_closure:
	.quad	GHC.Stats.$fReadGCDetails_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.992554328 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadGCDetails_$creadList_entry
.type GHC.Stats.$fReadGCDetails_$creadList_entry, @object
GHC.Stats.$fReadGCDetails_$creadList_entry:
_ccNfi:
	movq %r14,%rsi
	leaq GHC.Stats.$fReadGCDetails3_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Stats.$fReadGCDetails_$creadList_entry, .-GHC.Stats.$fReadGCDetails_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:47.993123192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_$creadList_info
.type GHC.Stats.$fReadGCDetails_$creadList_info, @object
GHC.Stats.$fReadGCDetails_$creadList_info:
	.quad	GHC.Stats.$fReadGCDetails_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+352


==================== Asm code ====================
2018-03-16 16:07:47.994918234 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadGCDetails_closure
.type GHC.Stats.$fReadGCDetails_closure, @object
GHC.Stats.$fReadGCDetails_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_closure+1
	.quad	GHC.Stats.$fReadGCDetails_$creadList_closure+1
	.quad	GHC.Stats.$fReadGCDetails1_closure+2
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.996480732 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tcRTSStats2_bytes
.type GHC.Stats.$tcRTSStats2_bytes, @object
GHC.Stats.$tcRTSStats2_bytes:
	.asciz "RTSStats"


==================== Asm code ====================
2018-03-16 16:07:47.998884954 UTC

.section .data
.align 8
.align 1
lexeme5_rcHqP_closure:
	.quad	lexeme5_rcHqP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:47.999684165 UTC

.section .text
.align 8
lexeme5_rcHqP_entry:
_ccNfx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNfy
_ccNfz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNfw
_ccNfv:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.$tcRTSStats2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNfy:
	jmp *-16(%r13)
_ccNfw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lexeme5_rcHqP_entry, .-lexeme5_rcHqP_entry


==================== Asm code ====================
2018-03-16 16:07:48.000303032 UTC

.section .data.rel.ro
.align 8
.align 1
lexeme5_rcHqP_info:
	.quad	lexeme5_rcHqP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.00220844 UTC

.section .data
.align 8
.align 1
lexeme6_rcHqQ_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	lexeme5_rcHqP_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.00367365 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ds3_rcHqR_bytes:
	.asciz "gcs"


==================== Asm code ====================
2018-03-16 16:07:48.006112717 UTC

.section .data
.align 8
.align 1
ds4_rcHqS_closure:
	.quad	ds4_rcHqS_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.006958111 UTC

.section .text
.align 8
ds4_rcHqS_entry:
_ccNfQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNfR
_ccNfS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNfP
_ccNfO:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq ds3_rcHqR_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNfR:
	jmp *-16(%r13)
_ccNfP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size ds4_rcHqS_entry, .-ds4_rcHqS_entry


==================== Asm code ====================
2018-03-16 16:07:48.007680929 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_rcHqS_info:
	.quad	ds4_rcHqS_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.00988451 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl73_rcHqT_bytes:
	.asciz "major_gcs"


==================== Asm code ====================
2018-03-16 16:07:48.012212187 UTC

.section .data
.align 8
.align 1
lvl74_rcHqU_closure:
	.quad	lvl74_rcHqU_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.01297543 UTC

.section .text
.align 8
lvl74_rcHqU_entry:
_ccNg8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNg9
_ccNga:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNg7
_ccNg6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl73_rcHqT_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNg9:
	jmp *-16(%r13)
_ccNg7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl74_rcHqU_entry, .-lvl74_rcHqU_entry


==================== Asm code ====================
2018-03-16 16:07:48.013741095 UTC

.section .data.rel.ro
.align 8
.align 1
lvl74_rcHqU_info:
	.quad	lvl74_rcHqU_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.015292393 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl75_rcHqV_bytes:
	.asciz "allocated_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.01807123 UTC

.section .data
.align 8
.align 1
lvl76_rcHqW_closure:
	.quad	lvl76_rcHqW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.01884009 UTC

.section .text
.align 8
lvl76_rcHqW_entry:
_ccNgq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNgr
_ccNgs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNgp
_ccNgo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl75_rcHqV_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNgr:
	jmp *-16(%r13)
_ccNgp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl76_rcHqW_entry, .-lvl76_rcHqW_entry


==================== Asm code ====================
2018-03-16 16:07:48.019479588 UTC

.section .data.rel.ro
.align 8
.align 1
lvl76_rcHqW_info:
	.quad	lvl76_rcHqW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.020985283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl77_rcHqX_bytes:
	.asciz "max_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.02346258 UTC

.section .data
.align 8
.align 1
lvl78_rcHqY_closure:
	.quad	lvl78_rcHqY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.024224676 UTC

.section .text
.align 8
lvl78_rcHqY_entry:
_ccNgI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNgJ
_ccNgK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNgH
_ccNgG:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl77_rcHqX_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNgJ:
	jmp *-16(%r13)
_ccNgH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl78_rcHqY_entry, .-lvl78_rcHqY_entry


==================== Asm code ====================
2018-03-16 16:07:48.024880169 UTC

.section .data.rel.ro
.align 8
.align 1
lvl78_rcHqY_info:
	.quad	lvl78_rcHqY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.02651408 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl79_rcHqZ_bytes:
	.asciz "max_large_objects_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.028861538 UTC

.section .data
.align 8
.align 1
lvl80_rcHr0_closure:
	.quad	lvl80_rcHr0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.029722067 UTC

.section .text
.align 8
lvl80_rcHr0_entry:
_ccNh0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNh1
_ccNh2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNgZ
_ccNgY:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl79_rcHqZ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNh1:
	jmp *-16(%r13)
_ccNgZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl80_rcHr0_entry, .-lvl80_rcHr0_entry


==================== Asm code ====================
2018-03-16 16:07:48.030422972 UTC

.section .data.rel.ro
.align 8
.align 1
lvl80_rcHr0_info:
	.quad	lvl80_rcHr0_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.031958848 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl81_rcHr1_bytes:
	.asciz "max_compact_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.034452091 UTC

.section .data
.align 8
.align 1
lvl82_rcHr2_closure:
	.quad	lvl82_rcHr2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.035229874 UTC

.section .text
.align 8
lvl82_rcHr2_entry:
_ccNhi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNhj
_ccNhk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNhh
_ccNhg:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl81_rcHr1_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNhj:
	jmp *-16(%r13)
_ccNhh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl82_rcHr2_entry, .-lvl82_rcHr2_entry


==================== Asm code ====================
2018-03-16 16:07:48.035892635 UTC

.section .data.rel.ro
.align 8
.align 1
lvl82_rcHr2_info:
	.quad	lvl82_rcHr2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.037487301 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl83_rcHr3_bytes:
	.asciz "max_slop_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.040491984 UTC

.section .data
.align 8
.align 1
lvl84_rcHr4_closure:
	.quad	lvl84_rcHr4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.04129526 UTC

.section .text
.align 8
lvl84_rcHr4_entry:
_ccNhA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNhB
_ccNhC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNhz
_ccNhy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl83_rcHr3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNhB:
	jmp *-16(%r13)
_ccNhz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl84_rcHr4_entry, .-lvl84_rcHr4_entry


==================== Asm code ====================
2018-03-16 16:07:48.041992599 UTC

.section .data.rel.ro
.align 8
.align 1
lvl84_rcHr4_info:
	.quad	lvl84_rcHr4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.043589346 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl85_rcHr5_bytes:
	.asciz "max_mem_in_use_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.046482119 UTC

.section .data
.align 8
.align 1
lvl86_rcHr6_closure:
	.quad	lvl86_rcHr6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.047283518 UTC

.section .text
.align 8
lvl86_rcHr6_entry:
_ccNhS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNhT
_ccNhU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNhR
_ccNhQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl85_rcHr5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNhT:
	jmp *-16(%r13)
_ccNhR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl86_rcHr6_entry, .-lvl86_rcHr6_entry


==================== Asm code ====================
2018-03-16 16:07:48.047961062 UTC

.section .data.rel.ro
.align 8
.align 1
lvl86_rcHr6_info:
	.quad	lvl86_rcHr6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.049623678 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl87_rcHr7_bytes:
	.asciz "cumulative_live_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.052005752 UTC

.section .data
.align 8
.align 1
lvl88_rcHr8_closure:
	.quad	lvl88_rcHr8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.052825467 UTC

.section .text
.align 8
lvl88_rcHr8_entry:
_ccNia:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNib
_ccNic:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNi9
_ccNi8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl87_rcHr7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNib:
	jmp *-16(%r13)
_ccNi9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl88_rcHr8_entry, .-lvl88_rcHr8_entry


==================== Asm code ====================
2018-03-16 16:07:48.053577507 UTC

.section .data.rel.ro
.align 8
.align 1
lvl88_rcHr8_info:
	.quad	lvl88_rcHr8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.055244351 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl89_rcHr9_bytes:
	.asciz "copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.057867435 UTC

.section .data
.align 8
.align 1
lvl90_rcHra_closure:
	.quad	lvl90_rcHra_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.058653451 UTC

.section .text
.align 8
lvl90_rcHra_entry:
_ccNis:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNit
_ccNiu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNir
_ccNiq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl89_rcHr9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNit:
	jmp *-16(%r13)
_ccNir:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl90_rcHra_entry, .-lvl90_rcHra_entry


==================== Asm code ====================
2018-03-16 16:07:48.059319286 UTC

.section .data.rel.ro
.align 8
.align 1
lvl90_rcHra_info:
	.quad	lvl90_rcHra_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.060942958 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl91_rcHrb_bytes:
	.asciz "par_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.063393932 UTC

.section .data
.align 8
.align 1
lvl92_rcHrc_closure:
	.quad	lvl92_rcHrc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.064171554 UTC

.section .text
.align 8
lvl92_rcHrc_entry:
_ccNiK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNiL
_ccNiM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNiJ
_ccNiI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl91_rcHrb_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNiL:
	jmp *-16(%r13)
_ccNiJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl92_rcHrc_entry, .-lvl92_rcHrc_entry


==================== Asm code ====================
2018-03-16 16:07:48.064835487 UTC

.section .data.rel.ro
.align 8
.align 1
lvl92_rcHrc_info:
	.quad	lvl92_rcHrc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.066540766 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl93_rcHrd_bytes:
	.asciz "cumulative_par_max_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.068896737 UTC

.section .data
.align 8
.align 1
lvl94_rcHre_closure:
	.quad	lvl94_rcHre_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.070849773 UTC

.section .text
.align 8
lvl94_rcHre_entry:
_ccNj2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNj3
_ccNj4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNj1
_ccNj0:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl93_rcHrd_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNj3:
	jmp *-16(%r13)
_ccNj1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl94_rcHre_entry, .-lvl94_rcHre_entry


==================== Asm code ====================
2018-03-16 16:07:48.071586581 UTC

.section .data.rel.ro
.align 8
.align 1
lvl94_rcHre_info:
	.quad	lvl94_rcHre_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.073172101 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl95_rcHrf_bytes:
	.asciz "cumulative_par_balanced_copied_bytes"


==================== Asm code ====================
2018-03-16 16:07:48.075667103 UTC

.section .data
.align 8
.align 1
lvl96_rcHrg_closure:
	.quad	lvl96_rcHrg_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.076497309 UTC

.section .text
.align 8
lvl96_rcHrg_entry:
_ccNjk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNjl
_ccNjm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNjj
_ccNji:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl95_rcHrf_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNjl:
	jmp *-16(%r13)
_ccNjj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl96_rcHrg_entry, .-lvl96_rcHrg_entry


==================== Asm code ====================
2018-03-16 16:07:48.077135284 UTC

.section .data.rel.ro
.align 8
.align 1
lvl96_rcHrg_info:
	.quad	lvl96_rcHrg_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.078866655 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl97_rcHrh_bytes:
	.asciz "mutator_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:48.081286195 UTC

.section .data
.align 8
.align 1
lvl98_rcHri_closure:
	.quad	lvl98_rcHri_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.082114842 UTC

.section .text
.align 8
lvl98_rcHri_entry:
_ccNjC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNjD
_ccNjE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNjB
_ccNjA:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl97_rcHrh_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNjD:
	jmp *-16(%r13)
_ccNjB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl98_rcHri_entry, .-lvl98_rcHri_entry


==================== Asm code ====================
2018-03-16 16:07:48.082803801 UTC

.section .data.rel.ro
.align 8
.align 1
lvl98_rcHri_info:
	.quad	lvl98_rcHri_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.084401931 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl99_rcHrj_bytes:
	.asciz "mutator_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:48.086894808 UTC

.section .data
.align 8
.align 1
lvl100_rcHrk_closure:
	.quad	lvl100_rcHrk_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.087682915 UTC

.section .text
.align 8
lvl100_rcHrk_entry:
_ccNjU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNjV
_ccNjW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNjT
_ccNjS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl99_rcHrj_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNjV:
	jmp *-16(%r13)
_ccNjT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl100_rcHrk_entry, .-lvl100_rcHrk_entry


==================== Asm code ====================
2018-03-16 16:07:48.088336562 UTC

.section .data.rel.ro
.align 8
.align 1
lvl100_rcHrk_info:
	.quad	lvl100_rcHrk_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.089947154 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl101_rcHrl_bytes:
	.asciz "gc_cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:48.092366723 UTC

.section .data
.align 8
.align 1
lvl102_rcHrm_closure:
	.quad	lvl102_rcHrm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.093217407 UTC

.section .text
.align 8
lvl102_rcHrm_entry:
_ccNkc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNkd
_ccNke:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNkb
_ccNka:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl101_rcHrl_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNkd:
	jmp *-16(%r13)
_ccNkb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl102_rcHrm_entry, .-lvl102_rcHrm_entry


==================== Asm code ====================
2018-03-16 16:07:48.094271549 UTC

.section .data.rel.ro
.align 8
.align 1
lvl102_rcHrm_info:
	.quad	lvl102_rcHrm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.095845512 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl103_rcHrn_bytes:
	.asciz "gc_elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:48.098355119 UTC

.section .data
.align 8
.align 1
lvl104_rcHro_closure:
	.quad	lvl104_rcHro_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.099151828 UTC

.section .text
.align 8
lvl104_rcHro_entry:
_ccNku:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNkv
_ccNkw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNkt
_ccNks:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl103_rcHrn_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNkv:
	jmp *-16(%r13)
_ccNkt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl104_rcHro_entry, .-lvl104_rcHro_entry


==================== Asm code ====================
2018-03-16 16:07:48.099827599 UTC

.section .data.rel.ro
.align 8
.align 1
lvl104_rcHro_info:
	.quad	lvl104_rcHro_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.102016415 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl105_rcHrp_bytes:
	.asciz "cpu_ns"


==================== Asm code ====================
2018-03-16 16:07:48.104426855 UTC

.section .data
.align 8
.align 1
lvl106_rcHrq_closure:
	.quad	lvl106_rcHrq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.105293168 UTC

.section .text
.align 8
lvl106_rcHrq_entry:
_ccNkM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNkN
_ccNkO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNkL
_ccNkK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl105_rcHrp_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNkN:
	jmp *-16(%r13)
_ccNkL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl106_rcHrq_entry, .-lvl106_rcHrq_entry


==================== Asm code ====================
2018-03-16 16:07:48.106002417 UTC

.section .data.rel.ro
.align 8
.align 1
lvl106_rcHrq_info:
	.quad	lvl106_rcHrq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.107579379 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl107_rcHrr_bytes:
	.asciz "elapsed_ns"


==================== Asm code ====================
2018-03-16 16:07:48.110351651 UTC

.section .data
.align 8
.align 1
lvl108_rcHrs_closure:
	.quad	lvl108_rcHrs_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.111143302 UTC

.section .text
.align 8
lvl108_rcHrs_entry:
_ccNl4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNl5
_ccNl6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNl3
_ccNl2:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl107_rcHrr_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNl5:
	jmp *-16(%r13)
_ccNl3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl108_rcHrs_entry, .-lvl108_rcHrs_entry


==================== Asm code ====================
2018-03-16 16:07:48.111839393 UTC

.section .data.rel.ro
.align 8
.align 1
lvl108_rcHrs_info:
	.quad	lvl108_rcHrs_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.113486588 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl109_rcHrt_bytes:
	.asciz "gc"


==================== Asm code ====================
2018-03-16 16:07:48.115943561 UTC

.section .data
.align 8
.align 1
lvl110_rcHru_closure:
	.quad	lvl110_rcHru_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.116740165 UTC

.section .text
.align 8
lvl110_rcHru_entry:
_ccNlm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNln
_ccNlo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNll
_ccNlk:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl109_rcHrt_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNln:
	jmp *-16(%r13)
_ccNll:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl110_rcHru_entry, .-lvl110_rcHru_entry


==================== Asm code ====================
2018-03-16 16:07:48.117492597 UTC

.section .data.rel.ro
.align 8
.align 1
lvl110_rcHru_info:
	.quad	lvl110_rcHru_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.119547084 UTC

.section .data
.align 8
.align 1
lvl111_rcHrv_closure:
	.quad	lvl111_rcHrv_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.120169824 UTC

.section .text
.align 8
lvl111_rcHrv_entry:
_ccNlB:
	movq %rsi,%rdi
	movq Text.ParserCombinators.ReadPrec.minPrec_closure@gotpcrel(%rip),%rsi
	leaq GHC.Stats.$fReadGCDetails2_closure+2(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size lvl111_rcHrv_entry, .-lvl111_rcHrv_entry


==================== Asm code ====================
2018-03-16 16:07:48.1207426 UTC

.section .data.rel.ro
.align 8
.align 1
lvl111_rcHrv_info:
	.quad	lvl111_rcHrv_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	ScMjD_srt+304


==================== Asm code ====================
2018-03-16 16:07:48.193150887 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec1_closure
.type GHC.Stats.$w$creadPrec1_closure, @object
GHC.Stats.$w$creadPrec1_closure:
	.quad	GHC.Stats.$w$creadPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.194433783 UTC

.section .text
.align 8
sat_scLRQ_entry:
_ccNpf:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccNpj
_ccNpi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq %r14,136(%rsp)
	movq 159(%rbx),%r14
	movq 167(%rbx),%rbx
	movq %rax,144(%rsp)
	leaq GHC.Stats.RTSStats_con_info(%rip),%rax
	movq %rax,-160(%r12)
	movq 72(%rsp),%rax
	movq %rax,-152(%r12)
	movq 80(%rsp),%rax
	movq %rax,-144(%r12)
	movq 88(%rsp),%rax
	movq %rax,-136(%r12)
	movq 96(%rsp),%rax
	movq %rax,-128(%r12)
	movq 104(%rsp),%rax
	movq %rax,-120(%r12)
	movq 112(%rsp),%rax
	movq %rax,-112(%r12)
	movq 120(%rsp),%rax
	movq %rax,-104(%r12)
	movq 128(%rsp),%rax
	movq %rax,-96(%r12)
	movq 136(%rsp),%rax
	movq %rax,-88(%r12)
	movq 144(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -159(%r12),%r14
	movq 64(%rsp),%rax
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccNpj:
	movq $168,904(%r13)
	jmp *-8(%r13)
	.size sat_scLRQ_entry, .-sat_scLRQ_entry


==================== Asm code ====================
2018-03-16 16:07:48.195468092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLRQ_info:
	.quad	sat_scLRQ_entry
	.quad	21
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.196803285 UTC

.section .text
.align 8
sat_scLRT_entry:
_ccNpn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNpo
_ccNpp:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ccNpr
_ccNpq:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq %rax,136(%rsp)
	movq 151(%rbx),%rax
	movq 159(%rbx),%rbx
	movq %rcx,144(%rsp)
	leaq sat_scLRQ_info(%rip),%rcx
	movq %rcx,-168(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-160(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-152(%r12)
	movq 80(%rsp),%rcx
	movq %rcx,-144(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-136(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-128(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-120(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-112(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-104(%r12)
	movq 128(%rsp),%rcx
	movq %rcx,-96(%r12)
	movq 136(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNpk_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -167(%r12),%rsi
	leaq lvl72_rcHqO_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNpr:
	movq $176,904(%r13)
_ccNpo:
	jmp *-8(%r13)
	.size sat_scLRT_entry, .-sat_scLRT_entry


==================== Asm code ====================
2018-03-16 16:07:48.198104017 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLRT_info:
	.quad	sat_scLRT_entry
	.quad	20
	.quad	12884901896
	.quad	4294967301
	.quad	ScMjD_srt+136


==================== Asm code ====================
2018-03-16 16:07:48.198979947 UTC

.section .text
.align 8
_ccNpk:
_ccNpk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNpu
_ccNpt:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNpu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNpk, .-_ccNpk


==================== Asm code ====================
2018-03-16 16:07:48.199703405 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNpk_info:
	.quad	_ccNpk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.200850385 UTC

.section .text
.align 8
sat_scLRU_entry:
_ccNpv:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccNpz
_ccNpy:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq %r11,128(%rsp)
	movq 151(%rbx),%r11
	movq 159(%rbx),%rbx
	movq %r14,136(%rsp)
	leaq sat_scLRT_info(%rip),%r14
	movq %r14,-160(%r12)
	movq 64(%rsp),%r14
	movq %r14,-152(%r12)
	movq 72(%rsp),%r14
	movq %r14,-144(%r12)
	movq 80(%rsp),%r14
	movq %r14,-136(%r12)
	movq 88(%rsp),%r14
	movq %r14,-128(%r12)
	movq 96(%rsp),%r14
	movq %r14,-120(%r12)
	movq 104(%rsp),%r14
	movq %r14,-112(%r12)
	movq 112(%rsp),%r14
	movq %r14,-104(%r12)
	movq 120(%rsp),%r14
	movq %r14,-96(%r12)
	movq 128(%rsp),%r14
	movq %r14,-88(%r12)
	movq 136(%rsp),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -159(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl111_rcHrv_closure+2(%rip),%rsi
	leaq lvl110_rcHru_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNpz:
	movq $168,904(%r13)
	jmp *-8(%r13)
	.size sat_scLRU_entry, .-sat_scLRU_entry


==================== Asm code ====================
2018-03-16 16:07:48.20206169 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLRU_info:
	.quad	sat_scLRU_entry
	.quad	20
	.quad	3458764543885312008
	.quad	4294967301
	.quad	ScMjD_srt+136


==================== Asm code ====================
2018-03-16 16:07:48.20326875 UTC

.section .text
.align 8
sat_scLRX_entry:
_ccNpD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNpE
_ccNpF:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccNpH
_ccNpG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq %r11,128(%rsp)
	movq 143(%rbx),%r11
	movq 151(%rbx),%rbx
	movq %rax,136(%rsp)
	leaq sat_scLRU_info(%rip),%rax
	movq %rax,-160(%r12)
	movq 64(%rsp),%rax
	movq %rax,-152(%r12)
	movq 72(%rsp),%rax
	movq %rax,-144(%r12)
	movq 80(%rsp),%rax
	movq %rax,-136(%r12)
	movq 88(%rsp),%rax
	movq %rax,-128(%r12)
	movq 96(%rsp),%rax
	movq %rax,-120(%r12)
	movq 104(%rsp),%rax
	movq %rax,-112(%r12)
	movq 112(%rsp),%rax
	movq %rax,-104(%r12)
	movq 120(%rsp),%rax
	movq %rax,-96(%r12)
	movq 128(%rsp),%rax
	movq %rax,-88(%r12)
	movq 136(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNpA_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -159(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNpH:
	movq $168,904(%r13)
_ccNpE:
	jmp *-8(%r13)
	.size sat_scLRX_entry, .-sat_scLRX_entry


==================== Asm code ====================
2018-03-16 16:07:48.204473085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLRX_info:
	.quad	sat_scLRX_entry
	.quad	19
	.quad	3458764612604788744
	.quad	4294967301
	.quad	ScMjD_srt+136


==================== Asm code ====================
2018-03-16 16:07:48.205218727 UTC

.section .text
.align 8
_ccNpA:
_ccNpA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNpK
_ccNpJ:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNpK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNpA, .-_ccNpA


==================== Asm code ====================
2018-03-16 16:07:48.205991632 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNpA_info:
	.quad	_ccNpA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.208670145 UTC

.section .text
.align 8
sat_scLRY_entry:
_ccNpL:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccNpP
_ccNpO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq %r10,120(%rsp)
	movq 143(%rbx),%r10
	movq 151(%rbx),%rbx
	movq %r11,128(%rsp)
	leaq sat_scLRX_info(%rip),%r11
	movq %r11,-152(%r12)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %r14,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -151(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl108_rcHrs_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNpP:
	movq $160,904(%r13)
	jmp *-8(%r13)
	.size sat_scLRY_entry, .-sat_scLRY_entry


==================== Asm code ====================
2018-03-16 16:07:48.20973712 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLRY_info:
	.quad	sat_scLRY_entry
	.quad	19
	.quad	-2305842807350231032
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:48.210720436 UTC

.section .text
.align 8
sat_scLS1_entry:
_ccNpT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNpU
_ccNpV:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ccNpX
_ccNpW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq %r10,120(%rsp)
	movq 135(%rbx),%r10
	movq 143(%rbx),%rbx
	movq %r11,128(%rsp)
	leaq sat_scLRY_info(%rip),%r11
	movq %r11,-152(%r12)
	movq 64(%rsp),%r11
	movq %r11,-144(%r12)
	movq 72(%rsp),%r11
	movq %r11,-136(%r12)
	movq 80(%rsp),%r11
	movq %r11,-128(%r12)
	movq 88(%rsp),%r11
	movq %r11,-120(%r12)
	movq 96(%rsp),%r11
	movq %r11,-112(%r12)
	movq 104(%rsp),%r11
	movq %r11,-104(%r12)
	movq 112(%rsp),%r11
	movq %r11,-96(%r12)
	movq 120(%rsp),%r11
	movq %r11,-88(%r12)
	movq 128(%rsp),%r11
	movq %r11,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNpQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -151(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNpX:
	movq $160,904(%r13)
_ccNpU:
	jmp *-8(%r13)
	.size sat_scLS1_entry, .-sat_scLS1_entry


==================== Asm code ====================
2018-03-16 16:07:48.211706774 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLS1_info:
	.quad	sat_scLS1_entry
	.quad	18
	.quad	-2305842807350231032
	.quad	4294967301
	.quad	ScMjD_srt+128


==================== Asm code ====================
2018-03-16 16:07:48.212418809 UTC

.section .text
.align 8
_ccNpQ:
_ccNpQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNq0
_ccNpZ:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNq0:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNpQ, .-_ccNpQ


==================== Asm code ====================
2018-03-16 16:07:48.213067485 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNpQ_info:
	.quad	_ccNpQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.213742215 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuT_srtd:
	.quad	ScMjD_srt+128
	.quad	33
	.quad	8053063727


==================== Asm code ====================
2018-03-16 16:07:48.214674677 UTC

.section .text
.align 8
sat_scLS2_entry:
_ccNq1:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccNq5
_ccNq4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq %r9,112(%rsp)
	movq 135(%rbx),%r9
	movq 143(%rbx),%rbx
	movq %r10,120(%rsp)
	leaq sat_scLS1_info(%rip),%r10
	movq %r10,-144(%r12)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %r14,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -143(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl106_rcHrq_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNq5:
	movq $152,904(%r13)
	jmp *-8(%r13)
	.size sat_scLS2_entry, .-sat_scLS2_entry


==================== Asm code ====================
2018-03-16 16:07:48.215625932 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLS2_info:
	.quad	sat_scLS2_entry
	.quad	18
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuT_srtd


==================== Asm code ====================
2018-03-16 16:07:48.216170917 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuU_srtd:
	.quad	ScMjD_srt+128
	.quad	33
	.quad	8053063727


==================== Asm code ====================
2018-03-16 16:07:48.21716702 UTC

.section .text
.align 8
sat_scLS5_entry:
_ccNq9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNqa
_ccNqb:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ccNqd
_ccNqc:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq %r9,112(%rsp)
	movq 127(%rbx),%r9
	movq 135(%rbx),%rbx
	movq %r10,120(%rsp)
	leaq sat_scLS2_info(%rip),%r10
	movq %r10,-144(%r12)
	movq 64(%rsp),%r10
	movq %r10,-136(%r12)
	movq 72(%rsp),%r10
	movq %r10,-128(%r12)
	movq 80(%rsp),%r10
	movq %r10,-120(%r12)
	movq 88(%rsp),%r10
	movq %r10,-112(%r12)
	movq 96(%rsp),%r10
	movq %r10,-104(%r12)
	movq 104(%rsp),%r10
	movq %r10,-96(%r12)
	movq 112(%rsp),%r10
	movq %r10,-88(%r12)
	movq 120(%rsp),%r10
	movq %r10,-80(%r12)
	movq %r11,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNq6_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -143(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNqd:
	movq $152,904(%r13)
_ccNqa:
	jmp *-8(%r13)
	.size sat_scLS5_entry, .-sat_scLS5_entry


==================== Asm code ====================
2018-03-16 16:07:48.218178747 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLS5_info:
	.quad	sat_scLS5_entry
	.quad	17
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuU_srtd


==================== Asm code ====================
2018-03-16 16:07:48.218838963 UTC

.section .text
.align 8
_ccNq6:
_ccNq6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNqg
_ccNqf:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNqg:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNq6, .-_ccNq6


==================== Asm code ====================
2018-03-16 16:07:48.219463123 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNq6_info:
	.quad	_ccNq6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.220041961 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuV_srtd:
	.quad	ScMjD_srt+128
	.quad	34
	.quad	16642998319


==================== Asm code ====================
2018-03-16 16:07:48.220970029 UTC

.section .text
.align 8
sat_scLS6_entry:
_ccNqh:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccNql
_ccNqk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 135(%rbx),%rbx
	movq %r9,112(%rsp)
	leaq sat_scLS5_info(%rip),%r9
	movq %r9,-136(%r12)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %r14,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -135(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl104_rcHro_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNql:
	movq $144,904(%r13)
	jmp *-8(%r13)
	.size sat_scLS6_entry, .-sat_scLS6_entry


==================== Asm code ====================
2018-03-16 16:07:48.222075703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLS6_info:
	.quad	sat_scLS6_entry
	.quad	17
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuV_srtd


==================== Asm code ====================
2018-03-16 16:07:48.223005417 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuW_srtd:
	.quad	ScMjD_srt+128
	.quad	34
	.quad	16642998319


==================== Asm code ====================
2018-03-16 16:07:48.224580006 UTC

.section .text
.align 8
sat_scLS9_entry:
_ccNqp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNqq
_ccNqr:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _ccNqt
_ccNqs:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 119(%rbx),%r8
	movq 127(%rbx),%rbx
	movq %r9,112(%rsp)
	leaq sat_scLS6_info(%rip),%r9
	movq %r9,-136(%r12)
	movq 64(%rsp),%r9
	movq %r9,-128(%r12)
	movq 72(%rsp),%r9
	movq %r9,-120(%r12)
	movq 80(%rsp),%r9
	movq %r9,-112(%r12)
	movq 88(%rsp),%r9
	movq %r9,-104(%r12)
	movq 96(%rsp),%r9
	movq %r9,-96(%r12)
	movq 104(%rsp),%r9
	movq %r9,-88(%r12)
	movq 112(%rsp),%r9
	movq %r9,-80(%r12)
	movq %r10,-72(%r12)
	movq %r11,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNqm_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -135(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNqt:
	movq $144,904(%r13)
_ccNqq:
	jmp *-8(%r13)
	.size sat_scLS9_entry, .-sat_scLS9_entry


==================== Asm code ====================
2018-03-16 16:07:48.225644156 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLS9_info:
	.quad	sat_scLS9_entry
	.quad	16
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuW_srtd


==================== Asm code ====================
2018-03-16 16:07:48.226359732 UTC

.section .text
.align 8
_ccNqm:
_ccNqm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNqw
_ccNqv:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNqw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNqm, .-_ccNqm


==================== Asm code ====================
2018-03-16 16:07:48.226988134 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNqm_info:
	.quad	_ccNqm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.227552937 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuX_srtd:
	.quad	ScMjD_srt+128
	.quad	35
	.quad	33822867503


==================== Asm code ====================
2018-03-16 16:07:48.22844943 UTC

.section .text
.align 8
sat_scLSa_entry:
_ccNqx:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccNqB
_ccNqA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq 127(%rbx),%rbx
	movq %r8,104(%rsp)
	leaq sat_scLS9_info(%rip),%r8
	movq %r8,-128(%r12)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %r14,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -127(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl102_rcHrm_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNqB:
	movq $136,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSa_entry, .-sat_scLSa_entry


==================== Asm code ====================
2018-03-16 16:07:48.229524147 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSa_info:
	.quad	sat_scLSa_entry
	.quad	16
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuX_srtd


==================== Asm code ====================
2018-03-16 16:07:48.230098102 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuY_srtd:
	.quad	ScMjD_srt+128
	.quad	35
	.quad	33822867503


==================== Asm code ====================
2018-03-16 16:07:48.2310598 UTC

.section .text
.align 8
sat_scLSd_entry:
_ccNqF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNqG
_ccNqH:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ccNqJ
_ccNqI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 111(%rbx),%rdi
	movq 119(%rbx),%rbx
	movq %r8,104(%rsp)
	leaq sat_scLSa_info(%rip),%r8
	movq %r8,-128(%r12)
	movq 64(%rsp),%r8
	movq %r8,-120(%r12)
	movq 72(%rsp),%r8
	movq %r8,-112(%r12)
	movq 80(%rsp),%r8
	movq %r8,-104(%r12)
	movq 88(%rsp),%r8
	movq %r8,-96(%r12)
	movq 96(%rsp),%r8
	movq %r8,-88(%r12)
	movq 104(%rsp),%r8
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq %r10,-64(%r12)
	movq %r11,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNqC_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -127(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNqJ:
	movq $136,904(%r13)
_ccNqG:
	jmp *-8(%r13)
	.size sat_scLSd_entry, .-sat_scLSd_entry


==================== Asm code ====================
2018-03-16 16:07:48.231897296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSd_info:
	.quad	sat_scLSd_entry
	.quad	15
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuY_srtd


==================== Asm code ====================
2018-03-16 16:07:48.232577008 UTC

.section .text
.align 8
_ccNqC:
_ccNqC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNqM
_ccNqL:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNqM:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNqC, .-_ccNqC


==================== Asm code ====================
2018-03-16 16:07:48.233185488 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNqC_info:
	.quad	_ccNqC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.233749717 UTC

.section .data.rel.ro
.align 8
.align 1
ucNuZ_srtd:
	.quad	ScMjD_srt+128
	.quad	36
	.quad	68182605871


==================== Asm code ====================
2018-03-16 16:07:48.234648414 UTC

.section .text
.align 8
sat_scLSe_entry:
_ccNqN:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccNqR
_ccNqQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq 119(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLSd_info(%rip),%rdi
	movq %rdi,-120(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -119(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl100_rcHrk_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNqR:
	movq $128,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSe_entry, .-sat_scLSe_entry


==================== Asm code ====================
2018-03-16 16:07:48.235531599 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSe_info:
	.quad	sat_scLSe_entry
	.quad	15
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNuZ_srtd


==================== Asm code ====================
2018-03-16 16:07:48.236086783 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv0_srtd:
	.quad	ScMjD_srt+128
	.quad	36
	.quad	68182605871


==================== Asm code ====================
2018-03-16 16:07:48.237009122 UTC

.section .text
.align 8
sat_scLSh_entry:
_ccNqV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNqW
_ccNqX:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccNqZ
_ccNqY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 103(%rbx),%rsi
	movq 111(%rbx),%rbx
	movq %rdi,96(%rsp)
	leaq sat_scLSe_info(%rip),%rdi
	movq %rdi,-120(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNqS_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -119(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNqZ:
	movq $128,904(%r13)
_ccNqW:
	jmp *-8(%r13)
	.size sat_scLSh_entry, .-sat_scLSh_entry


==================== Asm code ====================
2018-03-16 16:07:48.237944103 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSh_info:
	.quad	sat_scLSh_entry
	.quad	14
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv0_srtd


==================== Asm code ====================
2018-03-16 16:07:48.23866428 UTC

.section .text
.align 8
_ccNqS:
_ccNqS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNr2
_ccNr1:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNr2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNqS, .-_ccNqS


==================== Asm code ====================
2018-03-16 16:07:48.239277006 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNqS_info:
	.quad	_ccNqS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.239825047 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv1_srtd:
	.quad	ScMjD_srt+128
	.quad	37
	.quad	136902082607


==================== Asm code ====================
2018-03-16 16:07:48.240712813 UTC

.section .text
.align 8
sat_scLSi_entry:
_ccNr3:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccNr7
_ccNr6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq 111(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLSh_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -111(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl66_rcHqI_closure+2(%rip),%rsi
	leaq lvl98_rcHri_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNr7:
	movq $120,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSi_entry, .-sat_scLSi_entry


==================== Asm code ====================
2018-03-16 16:07:48.241644443 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSi_info:
	.quad	sat_scLSi_entry
	.quad	14
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv1_srtd


==================== Asm code ====================
2018-03-16 16:07:48.242248249 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv2_srtd:
	.quad	ScMjD_srt+128
	.quad	37
	.quad	136902082607


==================== Asm code ====================
2018-03-16 16:07:48.24397818 UTC

.section .text
.align 8
sat_scLSl_entry:
_ccNrb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNrc
_ccNrd:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccNrf
_ccNre:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 95(%rbx),%rdx
	movq 103(%rbx),%rbx
	movq %rsi,88(%rsp)
	leaq sat_scLSi_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq 64(%rsp),%rsi
	movq %rsi,-104(%r12)
	movq 72(%rsp),%rsi
	movq %rsi,-96(%r12)
	movq 80(%rsp),%rsi
	movq %rsi,-88(%r12)
	movq 88(%rsp),%rsi
	movq %rsi,-80(%r12)
	movq %rdi,-72(%r12)
	movq %r8,-64(%r12)
	movq %r9,-56(%r12)
	movq %r10,-48(%r12)
	movq %r11,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNr8_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -111(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNrf:
	movq $120,904(%r13)
_ccNrc:
	jmp *-8(%r13)
	.size sat_scLSl_entry, .-sat_scLSl_entry


==================== Asm code ====================
2018-03-16 16:07:48.244883833 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSl_info:
	.quad	sat_scLSl_entry
	.quad	13
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv2_srtd


==================== Asm code ====================
2018-03-16 16:07:48.246143018 UTC

.section .text
.align 8
_ccNr8:
_ccNr8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNri
_ccNrh:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNri:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNr8, .-_ccNr8


==================== Asm code ====================
2018-03-16 16:07:48.246760139 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNr8_info:
	.quad	_ccNr8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.24727552 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv3_srtd:
	.quad	ScMjD_srt+104
	.quad	41
	.quad	2194728288633


==================== Asm code ====================
2018-03-16 16:07:48.248082254 UTC

.section .text
.align 8
sat_scLSm_entry:
_ccNrj:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccNrn
_ccNrm:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 103(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLSl_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %r14,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -103(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl96_rcHrg_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNrn:
	movq $112,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSm_entry, .-sat_scLSm_entry


==================== Asm code ====================
2018-03-16 16:07:48.24887826 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSm_info:
	.quad	sat_scLSm_entry
	.quad	13
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv3_srtd


==================== Asm code ====================
2018-03-16 16:07:48.249476584 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv4_srtd:
	.quad	ScMjD_srt+104
	.quad	41
	.quad	2194728288633


==================== Asm code ====================
2018-03-16 16:07:48.250338921 UTC

.section .text
.align 8
sat_scLSp_entry:
_ccNrr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNrs
_ccNrt:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccNrv
_ccNru:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 87(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq %rdx,80(%rsp)
	leaq sat_scLSm_info(%rip),%rdx
	movq %rdx,-104(%r12)
	movq 64(%rsp),%rdx
	movq %rdx,-96(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-88(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %r9,-48(%r12)
	movq %r10,-40(%r12)
	movq %r11,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNro_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -103(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNrv:
	movq $112,904(%r13)
_ccNrs:
	jmp *-8(%r13)
	.size sat_scLSp_entry, .-sat_scLSp_entry


==================== Asm code ====================
2018-03-16 16:07:48.251187876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSp_info:
	.quad	sat_scLSp_entry
	.quad	12
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv4_srtd


==================== Asm code ====================
2018-03-16 16:07:48.251866762 UTC

.section .text
.align 8
_ccNro:
_ccNro:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNry
_ccNrx:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNry:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNro, .-_ccNro


==================== Asm code ====================
2018-03-16 16:07:48.252498928 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNro_info:
	.quad	_ccNro
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.253015891 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv5_srtd:
	.quad	ScMjD_srt+104
	.quad	42
	.quad	4393751544185


==================== Asm code ====================
2018-03-16 16:07:48.253937948 UTC

.section .text
.align 8
sat_scLSq_entry:
_ccNrz:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccNrD
_ccNrC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLSp_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -95(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl94_rcHre_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNrD:
	movq $104,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSq_entry, .-sat_scLSq_entry


==================== Asm code ====================
2018-03-16 16:07:48.254703827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSq_info:
	.quad	sat_scLSq_entry
	.quad	12
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv5_srtd


==================== Asm code ====================
2018-03-16 16:07:48.255269386 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv6_srtd:
	.quad	ScMjD_srt+104
	.quad	42
	.quad	4393751544185


==================== Asm code ====================
2018-03-16 16:07:48.256135414 UTC

.section .text
.align 8
sat_scLSt_entry:
_ccNrH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNrI
_ccNrJ:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ccNrL
_ccNrK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq %rax,64(%rsp)
	movq 79(%rbx),%rax
	movq 87(%rbx),%rbx
	movq %rcx,72(%rsp)
	leaq sat_scLSq_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq %r10,-32(%r12)
	movq %r11,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNrE_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -95(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNrL:
	movq $104,904(%r13)
_ccNrI:
	jmp *-8(%r13)
	.size sat_scLSt_entry, .-sat_scLSt_entry


==================== Asm code ====================
2018-03-16 16:07:48.256976913 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSt_info:
	.quad	sat_scLSt_entry
	.quad	11
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv6_srtd


==================== Asm code ====================
2018-03-16 16:07:48.258010252 UTC

.section .text
.align 8
_ccNrE:
_ccNrE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNrO
_ccNrN:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNrO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNrE, .-_ccNrE


==================== Asm code ====================
2018-03-16 16:07:48.258636184 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNrE_info:
	.quad	_ccNrE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.259181659 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv7_srtd:
	.quad	ScMjD_srt+104
	.quad	43
	.quad	8791798055289


==================== Asm code ====================
2018-03-16 16:07:48.260005412 UTC

.section .text
.align 8
sat_scLSu_entry:
_ccNrP:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccNrT
_ccNrS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq 87(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLSt_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -87(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl92_rcHrc_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNrT:
	movq $96,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSu_entry, .-sat_scLSu_entry


==================== Asm code ====================
2018-03-16 16:07:48.260754188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSu_info:
	.quad	sat_scLSu_entry
	.quad	11
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv7_srtd


==================== Asm code ====================
2018-03-16 16:07:48.261336367 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv8_srtd:
	.quad	ScMjD_srt+104
	.quad	43
	.quad	8791798055289


==================== Asm code ====================
2018-03-16 16:07:48.262206499 UTC

.section .text
.align 8
sat_scLSx_entry:
_ccNrX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNrY
_ccNrZ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ccNs1
_ccNs0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	movq %rax,64(%rsp)
	leaq sat_scLSu_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 64(%rsp),%rax
	movq %rax,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq %r10,-24(%r12)
	movq %r11,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNrU_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -87(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNs1:
	movq $96,904(%r13)
_ccNrY:
	jmp *-8(%r13)
	.size sat_scLSx_entry, .-sat_scLSx_entry


==================== Asm code ====================
2018-03-16 16:07:48.263047346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSx_info:
	.quad	sat_scLSx_entry
	.quad	10
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv8_srtd


==================== Asm code ====================
2018-03-16 16:07:48.263748954 UTC

.section .text
.align 8
_ccNrU:
_ccNrU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNs4
_ccNs3:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNs4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNrU, .-_ccNrU


==================== Asm code ====================
2018-03-16 16:07:48.264386804 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNrU_info:
	.quad	_ccNrU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.264952318 UTC

.section .data.rel.ro
.align 8
.align 1
ucNv9_srtd:
	.quad	ScMjD_srt+104
	.quad	44
	.quad	17587891077497


==================== Asm code ====================
2018-03-16 16:07:48.265823139 UTC

.section .text
.align 8
sat_scLSy_entry:
_ccNs5:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccNs9
_ccNs8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%rbx
	leaq sat_scLSx_info(%rip),%r14
	movq %r14,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %r11,-8(%r12)
	movq %rbx,(%r12)
	leaq -79(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl90_rcHra_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNs9:
	movq $88,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSy_entry, .-sat_scLSy_entry


==================== Asm code ====================
2018-03-16 16:07:48.266554822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSy_info:
	.quad	sat_scLSy_entry
	.quad	10
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNv9_srtd


==================== Asm code ====================
2018-03-16 16:07:48.267117116 UTC

.section .data.rel.ro
.align 8
.align 1
ucNva_srtd:
	.quad	ScMjD_srt+104
	.quad	44
	.quad	17587891077497


==================== Asm code ====================
2018-03-16 16:07:48.267950923 UTC

.section .text
.align 8
sat_scLSB_entry:
_ccNsd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNse
_ccNsf:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccNsh
_ccNsg:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	leaq sat_scLSy_info(%rip),%r11
	movq %r11,-80(%r12)
	movq %rax,-72(%r12)
	movq %rcx,-64(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq %r9,-24(%r12)
	movq %r10,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNsa_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -79(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNsh:
	movq $88,904(%r13)
_ccNse:
	jmp *-8(%r13)
	.size sat_scLSB_entry, .-sat_scLSB_entry


==================== Asm code ====================
2018-03-16 16:07:48.268732363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSB_info:
	.quad	sat_scLSB_entry
	.quad	9
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNva_srtd


==================== Asm code ====================
2018-03-16 16:07:48.269513727 UTC

.section .text
.align 8
_ccNsa:
_ccNsa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNsk
_ccNsj:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNsk:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNsa, .-_ccNsa


==================== Asm code ====================
2018-03-16 16:07:48.270143356 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNsa_info:
	.quad	_ccNsa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.270674632 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvb_srtd:
	.quad	ScMjD_srt+104
	.quad	45
	.quad	35180077121913


==================== Asm code ====================
2018-03-16 16:07:48.27144205 UTC

.section .text
.align 8
sat_scLSC_entry:
_ccNsl:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccNsp
_ccNso:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%rbx
	leaq sat_scLSB_info(%rip),%r11
	movq %r11,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %r10,-8(%r12)
	movq %rbx,(%r12)
	leaq -71(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl88_rcHr8_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNsp:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSC_entry, .-sat_scLSC_entry


==================== Asm code ====================
2018-03-16 16:07:48.2721616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSC_info:
	.quad	sat_scLSC_entry
	.quad	9
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvb_srtd


==================== Asm code ====================
2018-03-16 16:07:48.272684971 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvc_srtd:
	.quad	ScMjD_srt+104
	.quad	45
	.quad	35180077121913


==================== Asm code ====================
2018-03-16 16:07:48.273575736 UTC

.section .text
.align 8
sat_scLSF_entry:
_ccNst:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNsu
_ccNsv:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccNsx
_ccNsw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	leaq sat_scLSC_info(%rip),%r10
	movq %r10,-72(%r12)
	movq %rax,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNsq_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -71(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNsx:
	movq $80,904(%r13)
_ccNsu:
	jmp *-8(%r13)
	.size sat_scLSF_entry, .-sat_scLSF_entry


==================== Asm code ====================
2018-03-16 16:07:48.274345774 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSF_info:
	.quad	sat_scLSF_entry
	.quad	8
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvc_srtd


==================== Asm code ====================
2018-03-16 16:07:48.275045435 UTC

.section .text
.align 8
_ccNsq:
_ccNsq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNsA
_ccNsz:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNsA:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNsq, .-_ccNsq


==================== Asm code ====================
2018-03-16 16:07:48.276160904 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNsq_info:
	.quad	_ccNsq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.276781899 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvd_srtd:
	.quad	ScMjD_srt+104
	.quad	46
	.quad	70364449210745


==================== Asm code ====================
2018-03-16 16:07:48.277640721 UTC

.section .text
.align 8
sat_scLSG_entry:
_ccNsB:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccNsF
_ccNsE:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%rbx
	leaq sat_scLSF_info(%rip),%r10
	movq %r10,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq %rbx,(%r12)
	leaq -63(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl86_rcHr6_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNsF:
	movq $72,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSG_entry, .-sat_scLSG_entry


==================== Asm code ====================
2018-03-16 16:07:48.278352678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSG_info:
	.quad	sat_scLSG_entry
	.quad	8
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvd_srtd


==================== Asm code ====================
2018-03-16 16:07:48.278888881 UTC

.section .data.rel.ro
.align 8
.align 1
ucNve_srtd:
	.quad	ScMjD_srt+104
	.quad	46
	.quad	70364449210745


==================== Asm code ====================
2018-03-16 16:07:48.279740301 UTC

.section .text
.align 8
sat_scLSJ_entry:
_ccNsJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNsK
_ccNsL:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ccNsN
_ccNsM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	leaq sat_scLSG_info(%rip),%r9
	movq %r9,-64(%r12)
	movq %rax,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNsG_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -63(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNsN:
	movq $72,904(%r13)
_ccNsK:
	jmp *-8(%r13)
	.size sat_scLSJ_entry, .-sat_scLSJ_entry


==================== Asm code ====================
2018-03-16 16:07:48.280514115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSJ_info:
	.quad	sat_scLSJ_entry
	.quad	7
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNve_srtd


==================== Asm code ====================
2018-03-16 16:07:48.28122655 UTC

.section .text
.align 8
_ccNsG:
_ccNsG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNsQ
_ccNsP:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNsQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNsG, .-_ccNsG


==================== Asm code ====================
2018-03-16 16:07:48.281866917 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNsG_info:
	.quad	_ccNsG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.282454909 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvf_srtd:
	.quad	ScMjD_srt+104
	.quad	47
	.quad	140733193388409


==================== Asm code ====================
2018-03-16 16:07:48.283254439 UTC

.section .text
.align 8
sat_scLSK_entry:
_ccNsR:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccNsV
_ccNsU:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%rbx
	leaq sat_scLSJ_info(%rip),%r9
	movq %r9,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rbx,(%r12)
	leaq -55(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl84_rcHr4_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNsV:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSK_entry, .-sat_scLSK_entry


==================== Asm code ====================
2018-03-16 16:07:48.284003323 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSK_info:
	.quad	sat_scLSK_entry
	.quad	7
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvf_srtd


==================== Asm code ====================
2018-03-16 16:07:48.284558072 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvg_srtd:
	.quad	ScMjD_srt+104
	.quad	47
	.quad	140733193388409


==================== Asm code ====================
2018-03-16 16:07:48.285447993 UTC

.section .text
.align 8
sat_scLSN_entry:
_ccNsZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNt0
_ccNt1:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ccNt3
_ccNt2:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_scLSK_info(%rip),%r8
	movq %r8,-56(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNsW_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -55(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNt3:
	movq $64,904(%r13)
_ccNt0:
	jmp *-8(%r13)
	.size sat_scLSN_entry, .-sat_scLSN_entry


==================== Asm code ====================
2018-03-16 16:07:48.286245073 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSN_info:
	.quad	sat_scLSN_entry
	.quad	6
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvg_srtd


==================== Asm code ====================
2018-03-16 16:07:48.286926932 UTC

.section .text
.align 8
_ccNsW:
_ccNsW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNt6
_ccNt5:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNt6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNsW, .-_ccNsW


==================== Asm code ====================
2018-03-16 16:07:48.287566427 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNsW_info:
	.quad	_ccNsW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.288118844 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvh_srtd:
	.quad	ScMjD_srt+104
	.quad	48
	.quad	281470681743737


==================== Asm code ====================
2018-03-16 16:07:48.288869335 UTC

.section .text
.align 8
sat_scLSO_entry:
_ccNt7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccNtb
_ccNta:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_scLSN_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl82_rcHr2_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNtb:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSO_entry, .-sat_scLSO_entry


==================== Asm code ====================
2018-03-16 16:07:48.289613634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSO_info:
	.quad	sat_scLSO_entry
	.quad	6
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvh_srtd


==================== Asm code ====================
2018-03-16 16:07:48.29016386 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvi_srtd:
	.quad	ScMjD_srt+104
	.quad	48
	.quad	281470681743737


==================== Asm code ====================
2018-03-16 16:07:48.290959824 UTC

.section .text
.align 8
sat_scLSR_entry:
_ccNtf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNtg
_ccNth:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccNtj
_ccNti:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_scLSO_info(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNtc_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -47(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNtj:
	movq $56,904(%r13)
_ccNtg:
	jmp *-8(%r13)
	.size sat_scLSR_entry, .-sat_scLSR_entry


==================== Asm code ====================
2018-03-16 16:07:48.291663939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSR_info:
	.quad	sat_scLSR_entry
	.quad	5
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvi_srtd


==================== Asm code ====================
2018-03-16 16:07:48.292320123 UTC

.section .text
.align 8
_ccNtc:
_ccNtc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNtm
_ccNtl:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNtm:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNtc, .-_ccNtc


==================== Asm code ====================
2018-03-16 16:07:48.292952657 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNtc_info:
	.quad	_ccNtc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.293558348 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvj_srtd:
	.quad	ScMjD_srt+104
	.quad	49
	.quad	562945658454393


==================== Asm code ====================
2018-03-16 16:07:48.294285977 UTC

.section .text
.align 8
sat_scLSS_entry:
_ccNtn:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccNtr
_ccNtq:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_scLSR_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -39(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl80_rcHr0_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNtr:
	movq $48,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSS_entry, .-sat_scLSS_entry


==================== Asm code ====================
2018-03-16 16:07:48.295004038 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSS_info:
	.quad	sat_scLSS_entry
	.quad	5
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvj_srtd


==================== Asm code ====================
2018-03-16 16:07:48.295526911 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvk_srtd:
	.quad	ScMjD_srt+104
	.quad	49
	.quad	562945658454393


==================== Asm code ====================
2018-03-16 16:07:48.296305323 UTC

.section .text
.align 8
sat_scLSV_entry:
_ccNtv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNtw
_ccNtx:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccNtz
_ccNty:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_scLSS_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNts_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -39(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNtz:
	movq $48,904(%r13)
_ccNtw:
	jmp *-8(%r13)
	.size sat_scLSV_entry, .-sat_scLSV_entry


==================== Asm code ====================
2018-03-16 16:07:48.29703118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSV_info:
	.quad	sat_scLSV_entry
	.quad	4
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvk_srtd


==================== Asm code ====================
2018-03-16 16:07:48.297721953 UTC

.section .text
.align 8
_ccNts:
_ccNts:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNtC
_ccNtB:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNtC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNts, .-_ccNts


==================== Asm code ====================
2018-03-16 16:07:48.298359933 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNts_info:
	.quad	_ccNts
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.29890548 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvl_srtd:
	.quad	ScMjD_srt+104
	.quad	50
	.quad	1125895611875705


==================== Asm code ====================
2018-03-16 16:07:48.299636283 UTC

.section .text
.align 8
sat_scLSW_entry:
_ccNtD:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccNtH
_ccNtG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_scLSV_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -31(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl78_rcHqY_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNtH:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size sat_scLSW_entry, .-sat_scLSW_entry


==================== Asm code ====================
2018-03-16 16:07:48.300340906 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSW_info:
	.quad	sat_scLSW_entry
	.quad	4
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvl_srtd


==================== Asm code ====================
2018-03-16 16:07:48.30091839 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvm_srtd:
	.quad	ScMjD_srt+104
	.quad	50
	.quad	1125895611875705


==================== Asm code ====================
2018-03-16 16:07:48.301747358 UTC

.section .text
.align 8
sat_scLSZ_entry:
_ccNtL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNtM
_ccNtN:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccNtP
_ccNtO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_scLSW_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNtI_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -31(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNtP:
	movq $40,904(%r13)
_ccNtM:
	jmp *-8(%r13)
	.size sat_scLSZ_entry, .-sat_scLSZ_entry


==================== Asm code ====================
2018-03-16 16:07:48.302480154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLSZ_info:
	.quad	sat_scLSZ_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvm_srtd


==================== Asm code ====================
2018-03-16 16:07:48.303220046 UTC

.section .text
.align 8
_ccNtI:
_ccNtI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNtS
_ccNtR:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNtS:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNtI, .-_ccNtI


==================== Asm code ====================
2018-03-16 16:07:48.30384878 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNtI_info:
	.quad	_ccNtI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.30436849 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvn_srtd:
	.quad	ScMjD_srt+104
	.quad	51
	.quad	2251795518718329


==================== Asm code ====================
2018-03-16 16:07:48.305113591 UTC

.section .text
.align 8
sat_scLT0_entry:
_ccNtT:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccNtX
_ccNtW:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_scLSZ_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq lvl46_rcHqo_closure+2(%rip),%rsi
	leaq lvl76_rcHqW_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNtX:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_scLT0_entry, .-sat_scLT0_entry


==================== Asm code ====================
2018-03-16 16:07:48.307031126 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLT0_info:
	.quad	sat_scLT0_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967301
	.quad	ucNvn_srtd


==================== Asm code ====================
2018-03-16 16:07:48.307662367 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvo_srtd:
	.quad	ScMjD_srt+104
	.quad	51
	.quad	2251795518718329


==================== Asm code ====================
2018-03-16 16:07:48.308430931 UTC

.section .text
.align 8
sat_scLT3_entry:
_ccNu1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNu2
_ccNu3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccNu5
_ccNu4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_scLT0_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNtY_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -23(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNu5:
	movq $32,904(%r13)
_ccNu2:
	jmp *-8(%r13)
	.size sat_scLT3_entry, .-sat_scLT3_entry


==================== Asm code ====================
2018-03-16 16:07:48.309192162 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLT3_info:
	.quad	sat_scLT3_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967301
	.quad	ucNvo_srtd


==================== Asm code ====================
2018-03-16 16:07:48.309933066 UTC

.section .text
.align 8
_ccNtY:
_ccNtY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNu8
_ccNu7:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNu8:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNtY, .-_ccNtY


==================== Asm code ====================
2018-03-16 16:07:48.310612793 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNtY_info:
	.quad	_ccNtY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.311171529 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvp_srtd:
	.quad	ScMjD_srt+80
	.quad	55
	.quad	36028762659228617


==================== Asm code ====================
2018-03-16 16:07:48.311873875 UTC

.section .text
.align 8
sat_scLT4_entry:
_ccNu9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccNud
_ccNuc:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_scLT3_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq ds2_rcHqe_closure+2(%rip),%rsi
	leaq lvl74_rcHqU_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNud:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_scLT4_entry, .-sat_scLT4_entry


==================== Asm code ====================
2018-03-16 16:07:48.312488309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLT4_info:
	.quad	sat_scLT4_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967301
	.quad	ucNvp_srtd


==================== Asm code ====================
2018-03-16 16:07:48.313023071 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvq_srtd:
	.quad	ScMjD_srt+80
	.quad	55
	.quad	36028762659228617


==================== Asm code ====================
2018-03-16 16:07:48.313826963 UTC

.section .text
.align 8
sat_scLT7_entry:
_ccNuh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNui
_ccNuj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccNul
_ccNuk:
	movq 7(%rbx),%rax
	leaq sat_scLT4_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_ccNue_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rsi
	leaq lvl40_rcHqi_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNul:
	movq $24,904(%r13)
_ccNui:
	jmp *-8(%r13)
	.size sat_scLT7_entry, .-sat_scLT7_entry


==================== Asm code ====================
2018-03-16 16:07:48.314532473 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLT7_info:
	.quad	sat_scLT7_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucNvq_srtd


==================== Asm code ====================
2018-03-16 16:07:48.315247415 UTC

.section .text
.align 8
_ccNue:
_ccNue:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNuo
_ccNun:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNuo:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNue, .-_ccNue


==================== Asm code ====================
2018-03-16 16:07:48.315887379 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNue_info:
	.quad	_ccNue
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.316419615 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvr_srtd:
	.quad	ScMjD_srt+80
	.quad	56
	.quad	72057559678192585


==================== Asm code ====================
2018-03-16 16:07:48.317109861 UTC

.section .text
.align 8
sat_scLT8_entry:
_ccNup:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNut
_ccNus:
	movq 7(%rbx),%rax
	leaq sat_scLT7_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	leaq n_rcHqf_closure+1(%rip),%rdi
	leaq ds2_rcHqe_closure+2(%rip),%rsi
	leaq ds4_rcHqS_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_ccNut:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_scLT8_entry, .-sat_scLT8_entry


==================== Asm code ====================
2018-03-16 16:07:48.317798851 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLT8_info:
	.quad	sat_scLT8_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucNvr_srtd


==================== Asm code ====================
2018-03-16 16:07:48.318364424 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvs_srtd:
	.quad	ScMjD_srt+80
	.quad	56
	.quad	72057559711747017


==================== Asm code ====================
2018-03-16 16:07:48.319116827 UTC

.section .text
.align 8
sat_scLTb_entry:
_ccNux:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNuy
_ccNuz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNuB
_ccNuA:
	movq 7(%rbx),%rax
	leaq sat_scLT8_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_ccNuu_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq lexeme4_rcHqa_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNuB:
	movq $16,904(%r13)
_ccNuy:
	jmp *-8(%r13)
	.size sat_scLTb_entry, .-sat_scLTb_entry


==================== Asm code ====================
2018-03-16 16:07:48.319789927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLTb_info:
	.quad	sat_scLTb_entry
	.quad	1
	.quad	-4294967287
	.quad	4294967301
	.quad	ucNvs_srtd


==================== Asm code ====================
2018-03-16 16:07:48.320520514 UTC

.section .text
.align 8
_ccNuu:
_ccNuu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNuE
_ccNuD:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNuE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNuu, .-_ccNuu


==================== Asm code ====================
2018-03-16 16:07:48.321161228 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNuu_info:
	.quad	_ccNuu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.32175011 UTC

.section .data.rel.ro
.align 8
.align 1
ucNvt_srtd:
	.quad	ScMjD_srt+80
	.quad	58
	.quad	288230341825530825


==================== Asm code ====================
2018-03-16 16:07:48.322550768 UTC

.section .text
.align 8
.globl GHC.Stats.$w$creadPrec1_entry
.type GHC.Stats.$w$creadPrec1_entry, @object
GHC.Stats.$w$creadPrec1_entry:
_ccNuI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNuJ
_ccNuK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNuM
_ccNuL:
	cmpq $11,%r14
	jg _ccNuG
_ccNuH:
	leaq sat_scLTb_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_ccNuN_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq lexeme6_rcHqQ_closure+4(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_ccNuM:
	movq $16,904(%r13)
_ccNuJ:
	leaq GHC.Stats.$w$creadPrec1_closure(%rip),%rbx
	jmp *-8(%r13)
_ccNuG:
	addq $-16,%r12
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.$w$creadPrec1_entry, .-GHC.Stats.$w$creadPrec1_entry


==================== Asm code ====================
2018-03-16 16:07:48.323284023 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$w$creadPrec1_info
.type GHC.Stats.$w$creadPrec1_info, @object
GHC.Stats.$w$creadPrec1_info:
	.quad	GHC.Stats.$w$creadPrec1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934605
	.quad	ucNvt_srtd


==================== Asm code ====================
2018-03-16 16:07:48.323995317 UTC

.section .text
.align 8
_ccNuN:
_ccNuN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccNuS
_ccNuR:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNuS:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccNuN, .-_ccNuN


==================== Asm code ====================
2018-03-16 16:07:48.324654227 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNuN_info:
	.quad	_ccNuN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.328143251 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats2_closure
.type GHC.Stats.$fReadRTSStats2_closure, @object
GHC.Stats.$fReadRTSStats2_closure:
	.quad	GHC.Stats.$fReadRTSStats2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.328905275 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats2_entry
.type GHC.Stats.$fReadRTSStats2_entry, @object
GHC.Stats.$fReadRTSStats2_entry:
_ccNBv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNBw
_ccNBx:
	leaq block_ccNBs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccNBs
_ccNBt:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNBw:
	leaq GHC.Stats.$fReadRTSStats2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadRTSStats2_entry, .-GHC.Stats.$fReadRTSStats2_entry


==================== Asm code ====================
2018-03-16 16:07:48.329565943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats2_info
.type GHC.Stats.$fReadRTSStats2_info, @object
GHC.Stats.$fReadRTSStats2_info:
	.quad	GHC.Stats.$fReadRTSStats2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	ScMjD_srt+528


==================== Asm code ====================
2018-03-16 16:07:48.330209891 UTC

.section .text
.align 8
_ccNBs:
_ccNBs:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Stats.$w$creadPrec1_entry
	.size _ccNBs, .-_ccNBs


==================== Asm code ====================
2018-03-16 16:07:48.330795044 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNBs_info:
	.quad	_ccNBs
	.quad	1
	.quad	4294967326
	.quad	ScMjD_srt+528


==================== Asm code ====================
2018-03-16 16:07:48.332815106 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats1_closure
.type GHC.Stats.$fReadRTSStats1_closure, @object
GHC.Stats.$fReadRTSStats1_closure:
	.quad	GHC.Stats.$fReadRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.333447869 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats1_entry
.type GHC.Stats.$fReadRTSStats1_entry, @object
GHC.Stats.$fReadRTSStats1_entry:
_ccNBQ:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Stats.$fReadRTSStats2_closure+2(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.Stats.$fReadRTSStats1_entry, .-GHC.Stats.$fReadRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:48.334032524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats1_info
.type GHC.Stats.$fReadRTSStats1_info, @object
GHC.Stats.$fReadRTSStats1_info:
	.quad	GHC.Stats.$fReadRTSStats1_entry
	.quad	0
	.quad	2305843013508661262
	.quad	8589934607
	.quad	ScMjD_srt+312


==================== Asm code ====================
2018-03-16 16:07:48.337041924 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_closure
.type GHC.Stats.$fReadRTSStats_$creadsPrec_closure, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.338326227 UTC

.section .text
.align 8
sat_scLTj_entry:
_ccNC5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNC6
_ccNC7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.Stats.$fReadRTSStats2_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_ccNC6:
	jmp *-16(%r13)
	.size sat_scLTj_entry, .-sat_scLTj_entry


==================== Asm code ====================
2018-03-16 16:07:48.339096348 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scLTj_info:
	.quad	sat_scLTj_entry
	.quad	1
	.quad	2305843013508661264
	.quad	ScMjD_srt+312


==================== Asm code ====================
2018-03-16 16:07:48.339836799 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_entry
.type GHC.Stats.$fReadRTSStats_$creadsPrec_entry, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_entry:
_ccNC8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccNCc
_ccNCb:
	leaq sat_scLTj_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccNCc:
	movq $24,904(%r13)
	leaq GHC.Stats.$fReadRTSStats_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.$fReadRTSStats_$creadsPrec_entry, .-GHC.Stats.$fReadRTSStats_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:07:48.340530759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadsPrec_info
.type GHC.Stats.$fReadRTSStats_$creadsPrec_info, @object
GHC.Stats.$fReadRTSStats_$creadsPrec_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_entry
	.quad	0
	.quad	6917529031936049166
	.quad	4294967301
	.quad	ScMjD_srt+312


==================== Asm code ====================
2018-03-16 16:07:48.343157512 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_closure
.type GHC.Stats.$fReadRTSStats_$creadListPrec_closure, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.343978354 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_entry
.type GHC.Stats.$fReadRTSStats_$creadListPrec_entry, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_entry:
_ccNCv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNCw
_ccNCx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNCu
_ccNCt:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.$fReadRTSStats1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_ccNCw:
	jmp *-16(%r13)
_ccNCu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadRTSStats_$creadListPrec_entry, .-GHC.Stats.$fReadRTSStats_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:07:48.344672761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadListPrec_info
.type GHC.Stats.$fReadRTSStats_$creadListPrec_info, @object
GHC.Stats.$fReadRTSStats_$creadListPrec_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_entry
	.quad	0
	.quad	2305843013508661269
	.quad	ScMjD_srt+328


==================== Asm code ====================
2018-03-16 16:07:48.347179918 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats3_closure
.type GHC.Stats.$fReadRTSStats3_closure, @object
GHC.Stats.$fReadRTSStats3_closure:
	.quad	GHC.Stats.$fReadRTSStats3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.348006661 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats3_entry
.type GHC.Stats.$fReadRTSStats3_entry, @object
GHC.Stats.$fReadRTSStats3_entry:
_ccNCM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNCN
_ccNCO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNCL
_ccNCK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.Stats.$fReadRTSStats_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccNCN:
	jmp *-16(%r13)
_ccNCL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.$fReadRTSStats3_entry, .-GHC.Stats.$fReadRTSStats3_entry


==================== Asm code ====================
2018-03-16 16:07:48.348770335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats3_info
.type GHC.Stats.$fReadRTSStats3_info, @object
GHC.Stats.$fReadRTSStats3_info:
	.quad	GHC.Stats.$fReadRTSStats3_entry
	.quad	0
	.quad	4294967317
	.quad	ScMjD_srt+568


==================== Asm code ====================
2018-03-16 16:07:48.351406429 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadList_closure
.type GHC.Stats.$fReadRTSStats_$creadList_closure, @object
GHC.Stats.$fReadRTSStats_$creadList_closure:
	.quad	GHC.Stats.$fReadRTSStats_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.352050502 UTC

.section .text
.align 8
.globl GHC.Stats.$fReadRTSStats_$creadList_entry
.type GHC.Stats.$fReadRTSStats_$creadList_entry, @object
GHC.Stats.$fReadRTSStats_$creadList_entry:
_ccND2:
	movq %r14,%rsi
	leaq GHC.Stats.$fReadRTSStats3_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.Stats.$fReadRTSStats_$creadList_entry, .-GHC.Stats.$fReadRTSStats_$creadList_entry


==================== Asm code ====================
2018-03-16 16:07:48.352660999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_$creadList_info
.type GHC.Stats.$fReadRTSStats_$creadList_info, @object
GHC.Stats.$fReadRTSStats_$creadList_info:
	.quad	GHC.Stats.$fReadRTSStats_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScMjD_srt+576


==================== Asm code ====================
2018-03-16 16:07:48.354514588 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$fReadRTSStats_closure
.type GHC.Stats.$fReadRTSStats_closure, @object
GHC.Stats.$fReadRTSStats_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_closure+1
	.quad	GHC.Stats.$fReadRTSStats_$creadList_closure+1
	.quad	GHC.Stats.$fReadRTSStats1_closure+2
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.35748892 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_elapsed_ns_closure
.type GHC.Stats.gcdetails_elapsed_ns_closure, @object
GHC.Stats.gcdetails_elapsed_ns_closure:
	.quad	GHC.Stats.gcdetails_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.358215285 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_elapsed_ns_entry
.type GHC.Stats.gcdetails_elapsed_ns_entry, @object
GHC.Stats.gcdetails_elapsed_ns_entry:
_ccNDh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNDi
_ccNDj:
	leaq block_ccNDe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNDe
_ccNDf:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNDi:
	leaq GHC.Stats.gcdetails_elapsed_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_elapsed_ns_entry, .-GHC.Stats.gcdetails_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.358818062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_elapsed_ns_info
.type GHC.Stats.gcdetails_elapsed_ns_info, @object
GHC.Stats.gcdetails_elapsed_ns_info:
	.quad	GHC.Stats.gcdetails_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.359476041 UTC

.section .text
.align 8
_ccNDe:
_ccNDe:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNDe, .-_ccNDe


==================== Asm code ====================
2018-03-16 16:07:48.360027953 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNDe_info:
	.quad	_ccNDe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.362625827 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_cpu_ns_closure
.type GHC.Stats.gcdetails_cpu_ns_closure, @object
GHC.Stats.gcdetails_cpu_ns_closure:
	.quad	GHC.Stats.gcdetails_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.363416937 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_cpu_ns_entry
.type GHC.Stats.gcdetails_cpu_ns_entry, @object
GHC.Stats.gcdetails_cpu_ns_entry:
_ccNDH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNDI
_ccNDJ:
	leaq block_ccNDE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNDE
_ccNDF:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNDI:
	leaq GHC.Stats.gcdetails_cpu_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_cpu_ns_entry, .-GHC.Stats.gcdetails_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.364099113 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_cpu_ns_info
.type GHC.Stats.gcdetails_cpu_ns_info, @object
GHC.Stats.gcdetails_cpu_ns_info:
	.quad	GHC.Stats.gcdetails_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.364768524 UTC

.section .text
.align 8
_ccNDE:
_ccNDE:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNDE, .-_ccNDE


==================== Asm code ====================
2018-03-16 16:07:48.365372704 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNDE_info:
	.quad	_ccNDE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.368010337 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_sync_elapsed_ns_closure
.type GHC.Stats.gcdetails_sync_elapsed_ns_closure, @object
GHC.Stats.gcdetails_sync_elapsed_ns_closure:
	.quad	GHC.Stats.gcdetails_sync_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.368749934 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_sync_elapsed_ns_entry
.type GHC.Stats.gcdetails_sync_elapsed_ns_entry, @object
GHC.Stats.gcdetails_sync_elapsed_ns_entry:
_ccNE7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNE8
_ccNE9:
	leaq block_ccNE4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNE4
_ccNE5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNE8:
	leaq GHC.Stats.gcdetails_sync_elapsed_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_sync_elapsed_ns_entry, .-GHC.Stats.gcdetails_sync_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.369874914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_sync_elapsed_ns_info
.type GHC.Stats.gcdetails_sync_elapsed_ns_info, @object
GHC.Stats.gcdetails_sync_elapsed_ns_info:
	.quad	GHC.Stats.gcdetails_sync_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.370526601 UTC

.section .text
.align 8
_ccNE4:
_ccNE4:
	movq 95(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNE4, .-_ccNE4


==================== Asm code ====================
2018-03-16 16:07:48.371138107 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNE4_info:
	.quad	_ccNE4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.374419035 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_closure
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_closure, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_par_balanced_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.375162067 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_entry
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_entry, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_entry:
_ccNEx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNEy
_ccNEz:
	leaq block_ccNEu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNEu
_ccNEv:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNEy:
	leaq GHC.Stats.gcdetails_par_balanced_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_par_balanced_copied_bytes_entry, .-GHC.Stats.gcdetails_par_balanced_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.375816397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_balanced_copied_bytes_info
.type GHC.Stats.gcdetails_par_balanced_copied_bytes_info, @object
GHC.Stats.gcdetails_par_balanced_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_par_balanced_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.376476125 UTC

.section .text
.align 8
_ccNEu:
_ccNEu:
	movq 87(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNEu, .-_ccNEu


==================== Asm code ====================
2018-03-16 16:07:48.377021665 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNEu_info:
	.quad	_ccNEu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.379695667 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_max_copied_bytes_closure
.type GHC.Stats.gcdetails_par_max_copied_bytes_closure, @object
GHC.Stats.gcdetails_par_max_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_par_max_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.380472536 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_par_max_copied_bytes_entry
.type GHC.Stats.gcdetails_par_max_copied_bytes_entry, @object
GHC.Stats.gcdetails_par_max_copied_bytes_entry:
_ccNEX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNEY
_ccNEZ:
	leaq block_ccNEU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNEU
_ccNEV:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNEY:
	leaq GHC.Stats.gcdetails_par_max_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_par_max_copied_bytes_entry, .-GHC.Stats.gcdetails_par_max_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.381119083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_par_max_copied_bytes_info
.type GHC.Stats.gcdetails_par_max_copied_bytes_info, @object
GHC.Stats.gcdetails_par_max_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_par_max_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.381793383 UTC

.section .text
.align 8
_ccNEU:
_ccNEU:
	movq 79(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNEU, .-_ccNEU


==================== Asm code ====================
2018-03-16 16:07:48.382388089 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNEU_info:
	.quad	_ccNEU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.385020879 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_copied_bytes_closure
.type GHC.Stats.gcdetails_copied_bytes_closure, @object
GHC.Stats.gcdetails_copied_bytes_closure:
	.quad	GHC.Stats.gcdetails_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.385822101 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_copied_bytes_entry
.type GHC.Stats.gcdetails_copied_bytes_entry, @object
GHC.Stats.gcdetails_copied_bytes_entry:
_ccNFn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNFo
_ccNFp:
	leaq block_ccNFk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNFk
_ccNFl:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNFo:
	leaq GHC.Stats.gcdetails_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_copied_bytes_entry, .-GHC.Stats.gcdetails_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.386517189 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_copied_bytes_info
.type GHC.Stats.gcdetails_copied_bytes_info, @object
GHC.Stats.gcdetails_copied_bytes_info:
	.quad	GHC.Stats.gcdetails_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.387188668 UTC

.section .text
.align 8
_ccNFk:
_ccNFk:
	movq 71(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNFk, .-_ccNFk


==================== Asm code ====================
2018-03-16 16:07:48.387798732 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNFk_info:
	.quad	_ccNFk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.390821201 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_mem_in_use_bytes_closure
.type GHC.Stats.gcdetails_mem_in_use_bytes_closure, @object
GHC.Stats.gcdetails_mem_in_use_bytes_closure:
	.quad	GHC.Stats.gcdetails_mem_in_use_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.391572732 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_mem_in_use_bytes_entry
.type GHC.Stats.gcdetails_mem_in_use_bytes_entry, @object
GHC.Stats.gcdetails_mem_in_use_bytes_entry:
_ccNFN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNFO
_ccNFP:
	leaq block_ccNFK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNFK
_ccNFL:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNFO:
	leaq GHC.Stats.gcdetails_mem_in_use_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_mem_in_use_bytes_entry, .-GHC.Stats.gcdetails_mem_in_use_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.392195829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_mem_in_use_bytes_info
.type GHC.Stats.gcdetails_mem_in_use_bytes_info, @object
GHC.Stats.gcdetails_mem_in_use_bytes_info:
	.quad	GHC.Stats.gcdetails_mem_in_use_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.392849136 UTC

.section .text
.align 8
_ccNFK:
_ccNFK:
	movq 63(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNFK, .-_ccNFK


==================== Asm code ====================
2018-03-16 16:07:48.393412922 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNFK_info:
	.quad	_ccNFK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.396080009 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_slop_bytes_closure
.type GHC.Stats.gcdetails_slop_bytes_closure, @object
GHC.Stats.gcdetails_slop_bytes_closure:
	.quad	GHC.Stats.gcdetails_slop_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.396810254 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_slop_bytes_entry
.type GHC.Stats.gcdetails_slop_bytes_entry, @object
GHC.Stats.gcdetails_slop_bytes_entry:
_ccNGd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNGe
_ccNGf:
	leaq block_ccNGa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNGa
_ccNGb:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNGe:
	leaq GHC.Stats.gcdetails_slop_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_slop_bytes_entry, .-GHC.Stats.gcdetails_slop_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.397500162 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_slop_bytes_info
.type GHC.Stats.gcdetails_slop_bytes_info, @object
GHC.Stats.gcdetails_slop_bytes_info:
	.quad	GHC.Stats.gcdetails_slop_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.398156834 UTC

.section .text
.align 8
_ccNGa:
_ccNGa:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNGa, .-_ccNGa


==================== Asm code ====================
2018-03-16 16:07:48.398736681 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNGa_info:
	.quad	_ccNGa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.401383592 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_compact_bytes_closure
.type GHC.Stats.gcdetails_compact_bytes_closure, @object
GHC.Stats.gcdetails_compact_bytes_closure:
	.quad	GHC.Stats.gcdetails_compact_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.402106891 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_compact_bytes_entry
.type GHC.Stats.gcdetails_compact_bytes_entry, @object
GHC.Stats.gcdetails_compact_bytes_entry:
_ccNGD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNGE
_ccNGF:
	leaq block_ccNGA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNGA
_ccNGB:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNGE:
	leaq GHC.Stats.gcdetails_compact_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_compact_bytes_entry, .-GHC.Stats.gcdetails_compact_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.402778169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_compact_bytes_info
.type GHC.Stats.gcdetails_compact_bytes_info, @object
GHC.Stats.gcdetails_compact_bytes_info:
	.quad	GHC.Stats.gcdetails_compact_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.403380397 UTC

.section .text
.align 8
_ccNGA:
_ccNGA:
	movq 47(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNGA, .-_ccNGA


==================== Asm code ====================
2018-03-16 16:07:48.403968742 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNGA_info:
	.quad	_ccNGA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.407406196 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_large_objects_bytes_closure
.type GHC.Stats.gcdetails_large_objects_bytes_closure, @object
GHC.Stats.gcdetails_large_objects_bytes_closure:
	.quad	GHC.Stats.gcdetails_large_objects_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.408112488 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_large_objects_bytes_entry
.type GHC.Stats.gcdetails_large_objects_bytes_entry, @object
GHC.Stats.gcdetails_large_objects_bytes_entry:
_ccNH3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNH4
_ccNH5:
	leaq block_ccNH0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNH0
_ccNH1:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNH4:
	leaq GHC.Stats.gcdetails_large_objects_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_large_objects_bytes_entry, .-GHC.Stats.gcdetails_large_objects_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.408779897 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_large_objects_bytes_info
.type GHC.Stats.gcdetails_large_objects_bytes_info, @object
GHC.Stats.gcdetails_large_objects_bytes_info:
	.quad	GHC.Stats.gcdetails_large_objects_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.409467857 UTC

.section .text
.align 8
_ccNH0:
_ccNH0:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNH0, .-_ccNH0


==================== Asm code ====================
2018-03-16 16:07:48.41006815 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNH0_info:
	.quad	_ccNH0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.412676199 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_live_bytes_closure
.type GHC.Stats.gcdetails_live_bytes_closure, @object
GHC.Stats.gcdetails_live_bytes_closure:
	.quad	GHC.Stats.gcdetails_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.413482051 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_live_bytes_entry
.type GHC.Stats.gcdetails_live_bytes_entry, @object
GHC.Stats.gcdetails_live_bytes_entry:
_ccNHt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNHu
_ccNHv:
	leaq block_ccNHq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNHq
_ccNHr:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNHu:
	leaq GHC.Stats.gcdetails_live_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_live_bytes_entry, .-GHC.Stats.gcdetails_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.414182846 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_live_bytes_info
.type GHC.Stats.gcdetails_live_bytes_info, @object
GHC.Stats.gcdetails_live_bytes_info:
	.quad	GHC.Stats.gcdetails_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.414829317 UTC

.section .text
.align 8
_ccNHq:
_ccNHq:
	movq 31(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNHq, .-_ccNHq


==================== Asm code ====================
2018-03-16 16:07:48.41542831 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNHq_info:
	.quad	_ccNHq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.419592687 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_allocated_bytes_closure
.type GHC.Stats.gcdetails_allocated_bytes_closure, @object
GHC.Stats.gcdetails_allocated_bytes_closure:
	.quad	GHC.Stats.gcdetails_allocated_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.420753348 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_allocated_bytes_entry
.type GHC.Stats.gcdetails_allocated_bytes_entry, @object
GHC.Stats.gcdetails_allocated_bytes_entry:
_ccNHT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNHU
_ccNHV:
	leaq block_ccNHQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNHQ
_ccNHR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNHU:
	leaq GHC.Stats.gcdetails_allocated_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_allocated_bytes_entry, .-GHC.Stats.gcdetails_allocated_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.421584447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_allocated_bytes_info
.type GHC.Stats.gcdetails_allocated_bytes_info, @object
GHC.Stats.gcdetails_allocated_bytes_info:
	.quad	GHC.Stats.gcdetails_allocated_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.422370484 UTC

.section .text
.align 8
_ccNHQ:
_ccNHQ:
	movq 23(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNHQ, .-_ccNHQ


==================== Asm code ====================
2018-03-16 16:07:48.42297236 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNHQ_info:
	.quad	_ccNHQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.425869797 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_threads_closure
.type GHC.Stats.gcdetails_threads_closure, @object
GHC.Stats.gcdetails_threads_closure:
	.quad	GHC.Stats.gcdetails_threads_info


==================== Asm code ====================
2018-03-16 16:07:48.42668419 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_threads_entry
.type GHC.Stats.gcdetails_threads_entry, @object
GHC.Stats.gcdetails_threads_entry:
_ccNIj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNIk
_ccNIl:
	leaq block_ccNIg_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNIg
_ccNIh:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNIk:
	leaq GHC.Stats.gcdetails_threads_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_threads_entry, .-GHC.Stats.gcdetails_threads_entry


==================== Asm code ====================
2018-03-16 16:07:48.427350084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_threads_info
.type GHC.Stats.gcdetails_threads_info, @object
GHC.Stats.gcdetails_threads_info:
	.quad	GHC.Stats.gcdetails_threads_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.427994343 UTC

.section .text
.align 8
_ccNIg:
_ccNIg:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNIg, .-_ccNIg


==================== Asm code ====================
2018-03-16 16:07:48.428543723 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNIg_info:
	.quad	_ccNIg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.431561848 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcdetails_gen_closure
.type GHC.Stats.gcdetails_gen_closure, @object
GHC.Stats.gcdetails_gen_closure:
	.quad	GHC.Stats.gcdetails_gen_info


==================== Asm code ====================
2018-03-16 16:07:48.432441129 UTC

.section .text
.align 8
.globl GHC.Stats.gcdetails_gen_entry
.type GHC.Stats.gcdetails_gen_entry, @object
GHC.Stats.gcdetails_gen_entry:
_ccNIJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNIK
_ccNIL:
	leaq block_ccNIG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNIG
_ccNIH:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNIK:
	leaq GHC.Stats.gcdetails_gen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcdetails_gen_entry, .-GHC.Stats.gcdetails_gen_entry


==================== Asm code ====================
2018-03-16 16:07:48.433088922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcdetails_gen_info
.type GHC.Stats.gcdetails_gen_info, @object
GHC.Stats.gcdetails_gen_info:
	.quad	GHC.Stats.gcdetails_gen_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.434076298 UTC

.section .text
.align 8
_ccNIG:
_ccNIG:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNIG, .-_ccNIG


==================== Asm code ====================
2018-03-16 16:07:48.434657363 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNIG_info:
	.quad	_ccNIG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.437461682 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_closure
.type GHC.Stats.gc_closure, @object
GHC.Stats.gc_closure:
	.quad	GHC.Stats.gc_info


==================== Asm code ====================
2018-03-16 16:07:48.438187076 UTC

.section .text
.align 8
.globl GHC.Stats.gc_entry
.type GHC.Stats.gc_entry, @object
GHC.Stats.gc_entry:
_ccNJ9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNJa
_ccNJb:
	leaq block_ccNJ6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNJ6
_ccNJ7:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNJa:
	leaq GHC.Stats.gc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gc_entry, .-GHC.Stats.gc_entry


==================== Asm code ====================
2018-03-16 16:07:48.43882368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_info
.type GHC.Stats.gc_info, @object
GHC.Stats.gc_info:
	.quad	GHC.Stats.gc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.4394463 UTC

.section .text
.align 8
_ccNJ6:
_ccNJ6:
	movq 159(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNJ6, .-_ccNJ6


==================== Asm code ====================
2018-03-16 16:07:48.440024558 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNJ6_info:
	.quad	_ccNJ6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.443263795 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.elapsed_ns_closure
.type GHC.Stats.elapsed_ns_closure, @object
GHC.Stats.elapsed_ns_closure:
	.quad	GHC.Stats.elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.443989264 UTC

.section .text
.align 8
.globl GHC.Stats.elapsed_ns_entry
.type GHC.Stats.elapsed_ns_entry, @object
GHC.Stats.elapsed_ns_entry:
_ccNJz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNJA
_ccNJB:
	leaq block_ccNJw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNJw
_ccNJx:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNJA:
	leaq GHC.Stats.elapsed_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.elapsed_ns_entry, .-GHC.Stats.elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.444585683 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.elapsed_ns_info
.type GHC.Stats.elapsed_ns_info, @object
GHC.Stats.elapsed_ns_info:
	.quad	GHC.Stats.elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.445216369 UTC

.section .text
.align 8
_ccNJw:
_ccNJw:
	movq 151(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNJw, .-_ccNJw


==================== Asm code ====================
2018-03-16 16:07:48.449420094 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNJw_info:
	.quad	_ccNJw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.452503739 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cpu_ns_closure
.type GHC.Stats.cpu_ns_closure, @object
GHC.Stats.cpu_ns_closure:
	.quad	GHC.Stats.cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.453822717 UTC

.section .text
.align 8
.globl GHC.Stats.cpu_ns_entry
.type GHC.Stats.cpu_ns_entry, @object
GHC.Stats.cpu_ns_entry:
_ccNJZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNK0
_ccNK1:
	leaq block_ccNJW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNJW
_ccNJX:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNK0:
	leaq GHC.Stats.cpu_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.cpu_ns_entry, .-GHC.Stats.cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.45447552 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cpu_ns_info
.type GHC.Stats.cpu_ns_info, @object
GHC.Stats.cpu_ns_info:
	.quad	GHC.Stats.cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.455154915 UTC

.section .text
.align 8
_ccNJW:
_ccNJW:
	movq 143(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNJW, .-_ccNJW


==================== Asm code ====================
2018-03-16 16:07:48.455924812 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNJW_info:
	.quad	_ccNJW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.458887475 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_elapsed_ns_closure
.type GHC.Stats.gc_elapsed_ns_closure, @object
GHC.Stats.gc_elapsed_ns_closure:
	.quad	GHC.Stats.gc_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.459615407 UTC

.section .text
.align 8
.globl GHC.Stats.gc_elapsed_ns_entry
.type GHC.Stats.gc_elapsed_ns_entry, @object
GHC.Stats.gc_elapsed_ns_entry:
_ccNKp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNKq
_ccNKr:
	leaq block_ccNKm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNKm
_ccNKn:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNKq:
	leaq GHC.Stats.gc_elapsed_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gc_elapsed_ns_entry, .-GHC.Stats.gc_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.460365213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_elapsed_ns_info
.type GHC.Stats.gc_elapsed_ns_info, @object
GHC.Stats.gc_elapsed_ns_info:
	.quad	GHC.Stats.gc_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.461014389 UTC

.section .text
.align 8
_ccNKm:
_ccNKm:
	movq 135(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNKm, .-_ccNKm


==================== Asm code ====================
2018-03-16 16:07:48.461585374 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNKm_info:
	.quad	_ccNKm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.464220594 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gc_cpu_ns_closure
.type GHC.Stats.gc_cpu_ns_closure, @object
GHC.Stats.gc_cpu_ns_closure:
	.quad	GHC.Stats.gc_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.465040391 UTC

.section .text
.align 8
.globl GHC.Stats.gc_cpu_ns_entry
.type GHC.Stats.gc_cpu_ns_entry, @object
GHC.Stats.gc_cpu_ns_entry:
_ccNKP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNKQ
_ccNKR:
	leaq block_ccNKM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNKM
_ccNKN:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNKQ:
	leaq GHC.Stats.gc_cpu_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gc_cpu_ns_entry, .-GHC.Stats.gc_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.465964712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gc_cpu_ns_info
.type GHC.Stats.gc_cpu_ns_info, @object
GHC.Stats.gc_cpu_ns_info:
	.quad	GHC.Stats.gc_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.466661565 UTC

.section .text
.align 8
_ccNKM:
_ccNKM:
	movq 127(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNKM, .-_ccNKM


==================== Asm code ====================
2018-03-16 16:07:48.467179327 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNKM_info:
	.quad	_ccNKM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.469912715 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.mutator_elapsed_ns_closure
.type GHC.Stats.mutator_elapsed_ns_closure, @object
GHC.Stats.mutator_elapsed_ns_closure:
	.quad	GHC.Stats.mutator_elapsed_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.47078515 UTC

.section .text
.align 8
.globl GHC.Stats.mutator_elapsed_ns_entry
.type GHC.Stats.mutator_elapsed_ns_entry, @object
GHC.Stats.mutator_elapsed_ns_entry:
_ccNLf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNLg
_ccNLh:
	leaq block_ccNLc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNLc
_ccNLd:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNLg:
	leaq GHC.Stats.mutator_elapsed_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.mutator_elapsed_ns_entry, .-GHC.Stats.mutator_elapsed_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.4714835 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.mutator_elapsed_ns_info
.type GHC.Stats.mutator_elapsed_ns_info, @object
GHC.Stats.mutator_elapsed_ns_info:
	.quad	GHC.Stats.mutator_elapsed_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.47210779 UTC

.section .text
.align 8
_ccNLc:
_ccNLc:
	movq 119(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNLc, .-_ccNLc


==================== Asm code ====================
2018-03-16 16:07:48.472782397 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNLc_info:
	.quad	_ccNLc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.476126122 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.mutator_cpu_ns_closure
.type GHC.Stats.mutator_cpu_ns_closure, @object
GHC.Stats.mutator_cpu_ns_closure:
	.quad	GHC.Stats.mutator_cpu_ns_info


==================== Asm code ====================
2018-03-16 16:07:48.476952501 UTC

.section .text
.align 8
.globl GHC.Stats.mutator_cpu_ns_entry
.type GHC.Stats.mutator_cpu_ns_entry, @object
GHC.Stats.mutator_cpu_ns_entry:
_ccNLF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNLG
_ccNLH:
	leaq block_ccNLC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNLC
_ccNLD:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNLG:
	leaq GHC.Stats.mutator_cpu_ns_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.mutator_cpu_ns_entry, .-GHC.Stats.mutator_cpu_ns_entry


==================== Asm code ====================
2018-03-16 16:07:48.477702149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.mutator_cpu_ns_info
.type GHC.Stats.mutator_cpu_ns_info, @object
GHC.Stats.mutator_cpu_ns_info:
	.quad	GHC.Stats.mutator_cpu_ns_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.478430186 UTC

.section .text
.align 8
_ccNLC:
_ccNLC:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNLC, .-_ccNLC


==================== Asm code ====================
2018-03-16 16:07:48.479078259 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNLC_info:
	.quad	_ccNLC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.482854145 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_closure
.type GHC.Stats.cumulative_par_balanced_copied_bytes_closure, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_closure:
	.quad	GHC.Stats.cumulative_par_balanced_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.48380795 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_entry
.type GHC.Stats.cumulative_par_balanced_copied_bytes_entry, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_entry:
_ccNM5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNM6
_ccNM7:
	leaq block_ccNM2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNM2
_ccNM3:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNM6:
	leaq GHC.Stats.cumulative_par_balanced_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_par_balanced_copied_bytes_entry, .-GHC.Stats.cumulative_par_balanced_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.484467016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_par_balanced_copied_bytes_info
.type GHC.Stats.cumulative_par_balanced_copied_bytes_info, @object
GHC.Stats.cumulative_par_balanced_copied_bytes_info:
	.quad	GHC.Stats.cumulative_par_balanced_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.485200172 UTC

.section .text
.align 8
_ccNM2:
_ccNM2:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNM2, .-_ccNM2


==================== Asm code ====================
2018-03-16 16:07:48.485948627 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNM2_info:
	.quad	_ccNM2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.488678528 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_par_max_copied_bytes_closure
.type GHC.Stats.cumulative_par_max_copied_bytes_closure, @object
GHC.Stats.cumulative_par_max_copied_bytes_closure:
	.quad	GHC.Stats.cumulative_par_max_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.489433482 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_par_max_copied_bytes_entry
.type GHC.Stats.cumulative_par_max_copied_bytes_entry, @object
GHC.Stats.cumulative_par_max_copied_bytes_entry:
_ccNMv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNMw
_ccNMx:
	leaq block_ccNMs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNMs
_ccNMt:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNMw:
	leaq GHC.Stats.cumulative_par_max_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_par_max_copied_bytes_entry, .-GHC.Stats.cumulative_par_max_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.490093133 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_par_max_copied_bytes_info
.type GHC.Stats.cumulative_par_max_copied_bytes_info, @object
GHC.Stats.cumulative_par_max_copied_bytes_info:
	.quad	GHC.Stats.cumulative_par_max_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.490751172 UTC

.section .text
.align 8
_ccNMs:
_ccNMs:
	movq 95(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNMs, .-_ccNMs


==================== Asm code ====================
2018-03-16 16:07:48.491268156 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNMs_info:
	.quad	_ccNMs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.494186588 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.par_copied_bytes_closure
.type GHC.Stats.par_copied_bytes_closure, @object
GHC.Stats.par_copied_bytes_closure:
	.quad	GHC.Stats.par_copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.494931795 UTC

.section .text
.align 8
.globl GHC.Stats.par_copied_bytes_entry
.type GHC.Stats.par_copied_bytes_entry, @object
GHC.Stats.par_copied_bytes_entry:
_ccNMV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNMW
_ccNMX:
	leaq block_ccNMS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNMS
_ccNMT:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNMW:
	leaq GHC.Stats.par_copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.par_copied_bytes_entry, .-GHC.Stats.par_copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.495539271 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.par_copied_bytes_info
.type GHC.Stats.par_copied_bytes_info, @object
GHC.Stats.par_copied_bytes_info:
	.quad	GHC.Stats.par_copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.496180976 UTC

.section .text
.align 8
_ccNMS:
_ccNMS:
	movq 87(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNMS, .-_ccNMS


==================== Asm code ====================
2018-03-16 16:07:48.496741111 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNMS_info:
	.quad	_ccNMS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.499335765 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.copied_bytes_closure
.type GHC.Stats.copied_bytes_closure, @object
GHC.Stats.copied_bytes_closure:
	.quad	GHC.Stats.copied_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.500098899 UTC

.section .text
.align 8
.globl GHC.Stats.copied_bytes_entry
.type GHC.Stats.copied_bytes_entry, @object
GHC.Stats.copied_bytes_entry:
_ccNNl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNNm
_ccNNn:
	leaq block_ccNNi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNNi
_ccNNj:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNNm:
	leaq GHC.Stats.copied_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.copied_bytes_entry, .-GHC.Stats.copied_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.500718751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.copied_bytes_info
.type GHC.Stats.copied_bytes_info, @object
GHC.Stats.copied_bytes_info:
	.quad	GHC.Stats.copied_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.501365467 UTC

.section .text
.align 8
_ccNNi:
_ccNNi:
	movq 79(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNNi, .-_ccNNi


==================== Asm code ====================
2018-03-16 16:07:48.50194001 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNNi_info:
	.quad	_ccNNi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.504512571 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.cumulative_live_bytes_closure
.type GHC.Stats.cumulative_live_bytes_closure, @object
GHC.Stats.cumulative_live_bytes_closure:
	.quad	GHC.Stats.cumulative_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.505294761 UTC

.section .text
.align 8
.globl GHC.Stats.cumulative_live_bytes_entry
.type GHC.Stats.cumulative_live_bytes_entry, @object
GHC.Stats.cumulative_live_bytes_entry:
_ccNNL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNNM
_ccNNN:
	leaq block_ccNNI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNNI
_ccNNJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNNM:
	leaq GHC.Stats.cumulative_live_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.cumulative_live_bytes_entry, .-GHC.Stats.cumulative_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.505978856 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.cumulative_live_bytes_info
.type GHC.Stats.cumulative_live_bytes_info, @object
GHC.Stats.cumulative_live_bytes_info:
	.quad	GHC.Stats.cumulative_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.506650951 UTC

.section .text
.align 8
_ccNNI:
_ccNNI:
	movq 71(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNNI, .-_ccNNI


==================== Asm code ====================
2018-03-16 16:07:48.507224082 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNNI_info:
	.quad	_ccNNI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.510180347 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_mem_in_use_bytes_closure
.type GHC.Stats.max_mem_in_use_bytes_closure, @object
GHC.Stats.max_mem_in_use_bytes_closure:
	.quad	GHC.Stats.max_mem_in_use_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.510910445 UTC

.section .text
.align 8
.globl GHC.Stats.max_mem_in_use_bytes_entry
.type GHC.Stats.max_mem_in_use_bytes_entry, @object
GHC.Stats.max_mem_in_use_bytes_entry:
_ccNOb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNOc
_ccNOd:
	leaq block_ccNO8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNO8
_ccNO9:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNOc:
	leaq GHC.Stats.max_mem_in_use_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.max_mem_in_use_bytes_entry, .-GHC.Stats.max_mem_in_use_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.511558912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_mem_in_use_bytes_info
.type GHC.Stats.max_mem_in_use_bytes_info, @object
GHC.Stats.max_mem_in_use_bytes_info:
	.quad	GHC.Stats.max_mem_in_use_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.51215139 UTC

.section .text
.align 8
_ccNO8:
_ccNO8:
	movq 63(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNO8, .-_ccNO8


==================== Asm code ====================
2018-03-16 16:07:48.512698927 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNO8_info:
	.quad	_ccNO8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.515428625 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_slop_bytes_closure
.type GHC.Stats.max_slop_bytes_closure, @object
GHC.Stats.max_slop_bytes_closure:
	.quad	GHC.Stats.max_slop_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.516708474 UTC

.section .text
.align 8
.globl GHC.Stats.max_slop_bytes_entry
.type GHC.Stats.max_slop_bytes_entry, @object
GHC.Stats.max_slop_bytes_entry:
_ccNOB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNOC
_ccNOD:
	leaq block_ccNOy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNOy
_ccNOz:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNOC:
	leaq GHC.Stats.max_slop_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.max_slop_bytes_entry, .-GHC.Stats.max_slop_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.51740288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_slop_bytes_info
.type GHC.Stats.max_slop_bytes_info, @object
GHC.Stats.max_slop_bytes_info:
	.quad	GHC.Stats.max_slop_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.518021765 UTC

.section .text
.align 8
_ccNOy:
_ccNOy:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNOy, .-_ccNOy


==================== Asm code ====================
2018-03-16 16:07:48.518575676 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNOy_info:
	.quad	_ccNOy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.521219816 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_compact_bytes_closure
.type GHC.Stats.max_compact_bytes_closure, @object
GHC.Stats.max_compact_bytes_closure:
	.quad	GHC.Stats.max_compact_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.521985039 UTC

.section .text
.align 8
.globl GHC.Stats.max_compact_bytes_entry
.type GHC.Stats.max_compact_bytes_entry, @object
GHC.Stats.max_compact_bytes_entry:
_ccNP1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNP2
_ccNP3:
	leaq block_ccNOY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNOY
_ccNOZ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNP2:
	leaq GHC.Stats.max_compact_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.max_compact_bytes_entry, .-GHC.Stats.max_compact_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.52263384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_compact_bytes_info
.type GHC.Stats.max_compact_bytes_info, @object
GHC.Stats.max_compact_bytes_info:
	.quad	GHC.Stats.max_compact_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.523255604 UTC

.section .text
.align 8
_ccNOY:
_ccNOY:
	movq 47(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNOY, .-_ccNOY


==================== Asm code ====================
2018-03-16 16:07:48.523792606 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNOY_info:
	.quad	_ccNOY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.526511751 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_large_objects_bytes_closure
.type GHC.Stats.max_large_objects_bytes_closure, @object
GHC.Stats.max_large_objects_bytes_closure:
	.quad	GHC.Stats.max_large_objects_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.527292347 UTC

.section .text
.align 8
.globl GHC.Stats.max_large_objects_bytes_entry
.type GHC.Stats.max_large_objects_bytes_entry, @object
GHC.Stats.max_large_objects_bytes_entry:
_ccNPr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNPs
_ccNPt:
	leaq block_ccNPo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNPo
_ccNPp:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNPs:
	leaq GHC.Stats.max_large_objects_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.max_large_objects_bytes_entry, .-GHC.Stats.max_large_objects_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.527970774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_large_objects_bytes_info
.type GHC.Stats.max_large_objects_bytes_info, @object
GHC.Stats.max_large_objects_bytes_info:
	.quad	GHC.Stats.max_large_objects_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.528623881 UTC

.section .text
.align 8
_ccNPo:
_ccNPo:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNPo, .-_ccNPo


==================== Asm code ====================
2018-03-16 16:07:48.529210248 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNPo_info:
	.quad	_ccNPo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.532214396 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.max_live_bytes_closure
.type GHC.Stats.max_live_bytes_closure, @object
GHC.Stats.max_live_bytes_closure:
	.quad	GHC.Stats.max_live_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.532964515 UTC

.section .text
.align 8
.globl GHC.Stats.max_live_bytes_entry
.type GHC.Stats.max_live_bytes_entry, @object
GHC.Stats.max_live_bytes_entry:
_ccNPR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNPS
_ccNPT:
	leaq block_ccNPO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNPO
_ccNPP:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNPS:
	leaq GHC.Stats.max_live_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.max_live_bytes_entry, .-GHC.Stats.max_live_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.53369179 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.max_live_bytes_info
.type GHC.Stats.max_live_bytes_info, @object
GHC.Stats.max_live_bytes_info:
	.quad	GHC.Stats.max_live_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.53436703 UTC

.section .text
.align 8
_ccNPO:
_ccNPO:
	movq 31(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNPO, .-_ccNPO


==================== Asm code ====================
2018-03-16 16:07:48.534973931 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNPO_info:
	.quad	_ccNPO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.537773586 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.allocated_bytes_closure
.type GHC.Stats.allocated_bytes_closure, @object
GHC.Stats.allocated_bytes_closure:
	.quad	GHC.Stats.allocated_bytes_info


==================== Asm code ====================
2018-03-16 16:07:48.538507188 UTC

.section .text
.align 8
.globl GHC.Stats.allocated_bytes_entry
.type GHC.Stats.allocated_bytes_entry, @object
GHC.Stats.allocated_bytes_entry:
_ccNQh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNQi
_ccNQj:
	leaq block_ccNQe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNQe
_ccNQf:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNQi:
	leaq GHC.Stats.allocated_bytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.allocated_bytes_entry, .-GHC.Stats.allocated_bytes_entry


==================== Asm code ====================
2018-03-16 16:07:48.539166999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.allocated_bytes_info
.type GHC.Stats.allocated_bytes_info, @object
GHC.Stats.allocated_bytes_info:
	.quad	GHC.Stats.allocated_bytes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.539817841 UTC

.section .text
.align 8
_ccNQe:
_ccNQe:
	movq 23(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNQe, .-_ccNQe


==================== Asm code ====================
2018-03-16 16:07:48.540365649 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNQe_info:
	.quad	_ccNQe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.54307997 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.major_gcs_closure
.type GHC.Stats.major_gcs_closure, @object
GHC.Stats.major_gcs_closure:
	.quad	GHC.Stats.major_gcs_info


==================== Asm code ====================
2018-03-16 16:07:48.543854011 UTC

.section .text
.align 8
.globl GHC.Stats.major_gcs_entry
.type GHC.Stats.major_gcs_entry, @object
GHC.Stats.major_gcs_entry:
_ccNQH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNQI
_ccNQJ:
	leaq block_ccNQE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNQE
_ccNQF:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNQI:
	leaq GHC.Stats.major_gcs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.major_gcs_entry, .-GHC.Stats.major_gcs_entry


==================== Asm code ====================
2018-03-16 16:07:48.544537221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.major_gcs_info
.type GHC.Stats.major_gcs_info, @object
GHC.Stats.major_gcs_info:
	.quad	GHC.Stats.major_gcs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.545148331 UTC

.section .text
.align 8
_ccNQE:
_ccNQE:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNQE, .-_ccNQE


==================== Asm code ====================
2018-03-16 16:07:48.545798297 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNQE_info:
	.quad	_ccNQE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.548455323 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.gcs_closure
.type GHC.Stats.gcs_closure, @object
GHC.Stats.gcs_closure:
	.quad	GHC.Stats.gcs_info


==================== Asm code ====================
2018-03-16 16:07:48.549902533 UTC

.section .text
.align 8
.globl GHC.Stats.gcs_entry
.type GHC.Stats.gcs_entry, @object
GHC.Stats.gcs_entry:
_ccNR7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNR8
_ccNR9:
	leaq block_ccNR4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccNR4
_ccNR5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccNR8:
	leaq GHC.Stats.gcs_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.gcs_entry, .-GHC.Stats.gcs_entry


==================== Asm code ====================
2018-03-16 16:07:48.550639745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.gcs_info
.type GHC.Stats.gcs_info, @object
GHC.Stats.gcs_info:
	.quad	GHC.Stats.gcs_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:48.551255471 UTC

.section .text
.align 8
_ccNR4:
_ccNR4:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccNR4, .-_ccNR4


==================== Asm code ====================
2018-03-16 16:07:48.551842672 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNR4_info:
	.quad	_ccNR4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.553514492 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$trModule4_bytes
.type GHC.Stats.$trModule4_bytes, @object
GHC.Stats.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:48.555173277 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule3_closure
.type GHC.Stats.$trModule3_closure, @object
GHC.Stats.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:48.556801891 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$trModule2_bytes
.type GHC.Stats.$trModule2_bytes, @object
GHC.Stats.$trModule2_bytes:
	.asciz "GHC.Stats"


==================== Asm code ====================
2018-03-16 16:07:48.558460316 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule1_closure
.type GHC.Stats.$trModule1_closure, @object
GHC.Stats.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:48.560144592 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$trModule_closure
.type GHC.Stats.$trModule_closure, @object
GHC.Stats.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Stats.$trModule3_closure+1
	.quad	GHC.Stats.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.562000548 UTC

.section .data
.align 8
.align 1
$krep_rcHrw_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Int.$tcInt64_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.563719985 UTC

.section .data
.align 8
.align 1
$krep1_rcHrx_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord64_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.56549471 UTC

.section .data
.align 8
.align 1
$krep2_rcHry_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord32_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.567133374 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcGCDetails1_closure
.type GHC.Stats.$tcGCDetails1_closure, @object
GHC.Stats.$tcGCDetails1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tcGCDetails2_bytes


==================== Asm code ====================
2018-03-16 16:07:48.568944022 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcGCDetails_closure
.type GHC.Stats.$tcGCDetails_closure, @object
GHC.Stats.$tcGCDetails_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tcGCDetails1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1853976479346877039
	.quad	-6011229574275674074
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.571057861 UTC

.section .data
.align 8
.align 1
$krep3_rcHrz_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Stats.$tcGCDetails_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.572757499 UTC

.section .data
.align 8
.align 1
$krep4_rcHrA_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep3_rcHrz_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.574535623 UTC

.section .data
.align 8
.align 1
$krep5_rcHrB_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep4_rcHrA_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.576783906 UTC

.section .data
.align 8
.align 1
$krep6_rcHrC_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep5_rcHrB_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.578468155 UTC

.section .data
.align 8
.align 1
$krep7_rcHrD_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep6_rcHrC_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.580169379 UTC

.section .data
.align 8
.align 1
$krep8_rcHrE_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep7_rcHrD_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.582407996 UTC

.section .data
.align 8
.align 1
$krep9_rcHrF_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep8_rcHrE_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.584079426 UTC

.section .data
.align 8
.align 1
$krep10_rcHrG_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep9_rcHrF_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.585849053 UTC

.section .data
.align 8
.align 1
$krep11_rcHrH_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep10_rcHrG_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.587567271 UTC

.section .data
.align 8
.align 1
$krep12_rcHrI_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep11_rcHrH_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.589266334 UTC

.section .data
.align 8
.align 1
$krep13_rcHrJ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep12_rcHrI_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.59103902 UTC

.section .data
.align 8
.align 1
$krep14_rcHrK_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep13_rcHrJ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.592757865 UTC

.section .data
.align 8
.align 1
$krep15_rcHrL_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep14_rcHrK_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.595056335 UTC

.section .data
.align 8
.align 1
$krep16_rcHrM_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep15_rcHrL_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.596800356 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails1_closure
.type GHC.Stats.$tc'GCDetails1_closure, @object
GHC.Stats.$tc'GCDetails1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep16_rcHrM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.598491827 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tc'GCDetails3_bytes
.type GHC.Stats.$tc'GCDetails3_bytes, @object
GHC.Stats.$tc'GCDetails3_bytes:
	.asciz "'GCDetails"


==================== Asm code ====================
2018-03-16 16:07:48.600158443 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails2_closure
.type GHC.Stats.$tc'GCDetails2_closure, @object
GHC.Stats.$tc'GCDetails2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tc'GCDetails3_bytes


==================== Asm code ====================
2018-03-16 16:07:48.60253826 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'GCDetails_closure
.type GHC.Stats.$tc'GCDetails_closure, @object
GHC.Stats.$tc'GCDetails_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tc'GCDetails2_closure+1
	.quad	GHC.Stats.$tc'GCDetails1_closure+4
	.quad	5964953867232766897
	.quad	8889994537819840032
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.604249857 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcRTSStats1_closure
.type GHC.Stats.$tcRTSStats1_closure, @object
GHC.Stats.$tcRTSStats1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tcRTSStats2_bytes


==================== Asm code ====================
2018-03-16 16:07:48.606458372 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tcRTSStats_closure
.type GHC.Stats.$tcRTSStats_closure, @object
GHC.Stats.$tcRTSStats_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tcRTSStats1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1006825398788898151
	.quad	9122067856566178937
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.608171046 UTC

.section .data
.align 8
.align 1
$krep17_rcHrN_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Stats.$tcRTSStats_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.609966901 UTC

.section .data
.align 8
.align 1
$krep18_rcHrO_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_rcHrz_closure+1
	.quad	$krep17_rcHrN_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.611765344 UTC

.section .data
.align 8
.align 1
$krep19_rcHrP_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep18_rcHrO_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.61358018 UTC

.section .data
.align 8
.align 1
$krep20_rcHrQ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep19_rcHrP_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.615332462 UTC

.section .data
.align 8
.align 1
$krep21_rcHrR_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep20_rcHrQ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.6170094 UTC

.section .data
.align 8
.align 1
$krep22_rcHrS_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep21_rcHrR_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.619019907 UTC

.section .data
.align 8
.align 1
$krep23_rcHrT_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep22_rcHrS_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.620792061 UTC

.section .data
.align 8
.align 1
$krep24_rcHrU_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rcHrw_closure+1
	.quad	$krep23_rcHrT_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.62255804 UTC

.section .data
.align 8
.align 1
$krep25_rcHrV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep24_rcHrU_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.624366684 UTC

.section .data
.align 8
.align 1
$krep26_rcHrW_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep25_rcHrV_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.626606809 UTC

.section .data
.align 8
.align 1
$krep27_rcHrX_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep26_rcHrW_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.628980867 UTC

.section .data
.align 8
.align 1
$krep28_rcHrY_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep27_rcHrX_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.630805568 UTC

.section .data
.align 8
.align 1
$krep29_rcHrZ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep28_rcHrY_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.632504774 UTC

.section .data
.align 8
.align 1
$krep30_rcHs0_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep29_rcHrZ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.634368326 UTC

.section .data
.align 8
.align 1
$krep31_rcHs1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep30_rcHs0_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.63616991 UTC

.section .data
.align 8
.align 1
$krep32_rcHs2_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep31_rcHs1_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.63815905 UTC

.section .data
.align 8
.align 1
$krep33_rcHs3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep32_rcHs2_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.63988105 UTC

.section .data
.align 8
.align 1
$krep34_rcHs4_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep33_rcHs3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.641602021 UTC

.section .data
.align 8
.align 1
$krep35_rcHs5_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rcHrx_closure+1
	.quad	$krep34_rcHs4_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.643391945 UTC

.section .data
.align 8
.align 1
$krep36_rcHs6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep35_rcHs5_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.64510138 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats1_closure
.type GHC.Stats.$tc'RTSStats1_closure, @object
GHC.Stats.$tc'RTSStats1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_rcHry_closure+1
	.quad	$krep36_rcHs6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.646849461 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.$tc'RTSStats3_bytes
.type GHC.Stats.$tc'RTSStats3_bytes, @object
GHC.Stats.$tc'RTSStats3_bytes:
	.asciz "'RTSStats"


==================== Asm code ====================
2018-03-16 16:07:48.648562778 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats2_closure
.type GHC.Stats.$tc'RTSStats2_closure, @object
GHC.Stats.$tc'RTSStats2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Stats.$tc'RTSStats3_bytes


==================== Asm code ====================
2018-03-16 16:07:48.650783367 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.$tc'RTSStats_closure
.type GHC.Stats.$tc'RTSStats_closure, @object
GHC.Stats.$tc'RTSStats_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Stats.$trModule_closure+1
	.quad	GHC.Stats.$tc'RTSStats2_closure+1
	.quad	GHC.Stats.$tc'RTSStats1_closure+4
	.quad	-7727843836876239108
	.quad	-2112014695216917554
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:48.655240217 UTC

.section .data
.align 8
.align 1
getRTSStatsEnabled1_rcHs7_closure:
	.quad	getRTSStatsEnabled1_rcHs7_info


==================== Asm code ====================
2018-03-16 16:07:48.656127501 UTC

.section .text
.align 8
sat_scM48_entry:
_ccNSx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNSy
_ccNSz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	cmpq $0,16(%rbx)
	je _ccNSw
_ccNSv:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNSy:
	jmp *-16(%r13)
_ccNSw:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_scM48_entry, .-sat_scM48_entry


==================== Asm code ====================
2018-03-16 16:07:48.656832454 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scM48_info:
	.quad	sat_scM48_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:07:48.658414053 UTC

.section .text
.align 8
getRTSStatsEnabled1_rcHs7_entry:
_ccNSA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNSB
_ccNSC:
	leaq block_ccNSn_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq %rbp,16(%rbx)
	movq 888(%r13),%rbx
	leaq 8(%r12),%rcx
	movq %rcx,8(%rbx)
	leaq 8(%r12),%rcx
	subq (%rbx),%rcx
	movq 104(%rax),%rbx
	subq %rcx,%rbx
	movq %rbx,104(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStatsEnabled@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_ccNSB:
	leaq getRTSStatsEnabled1_rcHs7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size getRTSStatsEnabled1_rcHs7_entry, .-getRTSStatsEnabled1_rcHs7_entry


==================== Asm code ====================
2018-03-16 16:07:48.65937421 UTC

.section .data.rel.ro
.align 8
.align 1
getRTSStatsEnabled1_rcHs7_info:
	.quad	getRTSStatsEnabled1_rcHs7_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:48.660068104 UTC

.section .text
.align 8
_ccNSn:
_ccNSn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccNSF
_ccNSE:
	leaq sat_scM48_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNSF:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ccNSn, .-_ccNSn


==================== Asm code ====================
2018-03-16 16:07:48.660687158 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNSn_info:
	.quad	_ccNSn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.663113317 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStatsEnabled_closure
.type GHC.Stats.getRTSStatsEnabled_closure, @object
GHC.Stats.getRTSStatsEnabled_closure:
	.quad	GHC.Stats.getRTSStatsEnabled_info


==================== Asm code ====================
2018-03-16 16:07:48.663722248 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStatsEnabled_entry
.type GHC.Stats.getRTSStatsEnabled_entry, @object
GHC.Stats.getRTSStatsEnabled_entry:
_ccNTt:
	jmp getRTSStatsEnabled1_rcHs7_entry
	.size GHC.Stats.getRTSStatsEnabled_entry, .-GHC.Stats.getRTSStatsEnabled_entry


==================== Asm code ====================
2018-03-16 16:07:48.664284491 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStatsEnabled_info
.type GHC.Stats.getRTSStatsEnabled_info, @object
GHC.Stats.getRTSStatsEnabled_info:
	.quad	GHC.Stats.getRTSStatsEnabled_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:48.666004446 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Stats.getRTSStats5_bytes
.type GHC.Stats.getRTSStats5_bytes, @object
GHC.Stats.getRTSStats5_bytes:
	.asciz "GHC.Stats.getRTSStats: GC stats not enabled. Use `+RTS -T -RTS' to enable them."


==================== Asm code ====================
2018-03-16 16:07:48.668529538 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats4_closure
.type GHC.Stats.getRTSStats4_closure, @object
GHC.Stats.getRTSStats4_closure:
	.quad	GHC.Stats.getRTSStats4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.669522955 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats4_entry
.type GHC.Stats.getRTSStats4_entry, @object
GHC.Stats.getRTSStats4_entry:
_ccNTH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNTI
_ccNTJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNTG
_ccNTF:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.getRTSStats5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_ccNTI:
	jmp *-16(%r13)
_ccNTG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.getRTSStats4_entry, .-GHC.Stats.getRTSStats4_entry


==================== Asm code ====================
2018-03-16 16:07:48.670191605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats4_info
.type GHC.Stats.getRTSStats4_info, @object
GHC.Stats.getRTSStats4_info:
	.quad	GHC.Stats.getRTSStats4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:07:48.672043129 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats3_closure
.type GHC.Stats.getRTSStats3_closure, @object
GHC.Stats.getRTSStats3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.UnsupportedOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Stats.getRTSStats4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.674740642 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats2_closure
.type GHC.Stats.getRTSStats2_closure, @object
GHC.Stats.getRTSStats2_closure:
	.quad	GHC.Stats.getRTSStats2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.675658014 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats2_entry
.type GHC.Stats.getRTSStats2_entry, @object
GHC.Stats.getRTSStats2_entry:
_ccNTZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNU0
_ccNU1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _ccNTY
_ccNTX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Stats.getRTSStats3_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_ccNU0:
	jmp *-16(%r13)
_ccNTY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Stats.getRTSStats2_entry, .-GHC.Stats.getRTSStats2_entry


==================== Asm code ====================
2018-03-16 16:07:48.676388069 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats2_info
.type GHC.Stats.getRTSStats2_info, @object
GHC.Stats.getRTSStats2_info:
	.quad	GHC.Stats.getRTSStats2_entry
	.quad	0
	.quad	12884901909
	.quad	ScMjD_srt+584


==================== Asm code ====================
2018-03-16 16:07:48.686614246 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats1_closure
.type GHC.Stats.getRTSStats1_closure, @object
GHC.Stats.getRTSStats1_closure:
	.quad	GHC.Stats.getRTSStats1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.68778021 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats1_entry
.type GHC.Stats.getRTSStats1_entry, @object
GHC.Stats.getRTSStats1_entry:
_ccNUl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccNUm
_ccNUn:
	leaq block_ccNUf_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq %rbp,16(%rbx)
	movq 888(%r13),%rbx
	leaq 8(%r12),%rcx
	movq %rcx,8(%rbx)
	leaq 8(%r12),%rcx
	subq (%rbx),%rcx
	movq 104(%rax),%rbx
	subq %rcx,%rbx
	movq %rbx,104(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStatsEnabled@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_ccNUm:
	leaq GHC.Stats.getRTSStats1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Stats.getRTSStats1_entry, .-GHC.Stats.getRTSStats1_entry


==================== Asm code ====================
2018-03-16 16:07:48.68864733 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats1_info
.type GHC.Stats.getRTSStats1_info, @object
GHC.Stats.getRTSStats1_info:
	.quad	GHC.Stats.getRTSStats1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	ScMjD_srt+600


==================== Asm code ====================
2018-03-16 16:07:48.689637164 UTC

.section .text
.align 8
_ccNUf:
_ccNUf:
	testq %rbx,%rbx
	je _ccNUk
_ccNUj:
	leaq block_ccNUq_info(%rip),%rax
	movq %rax,(%rbp)
	movl $248,%ebx
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
_ccNUk:
	leaq GHC.Stats.getRTSStats2_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _ccNUf, .-_ccNUf


==================== Asm code ====================
2018-03-16 16:07:48.690246305 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNUf_info:
	.quad	_ccNUf
	.quad	0
	.quad	4294967326
	.quad	ScMjD_srt+608


==================== Asm code ====================
2018-03-16 16:07:48.691218921 UTC

.section .text
.align 8
_ccNUq:
_ccNUq:
	leaq block_ccNUx_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	movq 872(%r13),%rbx
	movq 24(%rbx),%rcx
	movq %rbp,16(%rcx)
	movq 888(%r13),%rcx
	leaq 8(%r12),%rdx
	movq %rdx,8(%rcx)
	leaq 8(%r12),%rdx
	subq (%rcx),%rdx
	movq 104(%rbx),%rcx
	subq %rdx,%rcx
	movq %rcx,104(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rbx
	xorl %eax,%eax
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call getRTSStats@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rbx
	movq 16(%rbx),%rbp
	leaq 192(%rbx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rbx
	movq 8(%rbx),%rcx
	leaq -8(%rcx),%r12
	movq (%rbx),%rdx
	movslq 48(%rbx),%rbx
	shlq $12,%rbx
	decq %rbx
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rsi,856(%r13)
	subq %rdx,%rcx
	movq 104(%rax),%rbx
	addq %rcx,%rbx
	movq %rbx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccNUq, .-_ccNUq


==================== Asm code ====================
2018-03-16 16:07:48.69217753 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNUq_info:
	.quad	_ccNUq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.694239397 UTC

.section .text
.align 8
_ccNUx:
_ccNUx:
	addq $816,%r12
	cmpq 856(%r13),%r12
	ja _ccNWK
_ccNWJ:
	movq 8(%rbp),%rax
	movl (%rax),%ebx
	movl 4(%rax),%ecx
	movq 8(%rax),%rdx
	movq 16(%rax),%rsi
	movq 24(%rax),%rdi
	movq 32(%rax),%r8
	movq 40(%rax),%r9
	movq 48(%rax),%r10
	movq 56(%rax),%r11
	movq 64(%rax),%r14
	movq %rax,64(%rsp)
	movq 72(%rax),%rax
	movq %rbx,72(%rsp)
	movq 64(%rsp),%rbx
	movq 80(%rbx),%rbx
	movq %rcx,80(%rsp)
	movq 64(%rsp),%rcx
	movq 88(%rcx),%rcx
	movq %rdx,88(%rsp)
	movq 64(%rsp),%rdx
	movq 96(%rdx),%rdx
	movq %rsi,96(%rsp)
	movq 64(%rsp),%rsi
	movq 104(%rsi),%rsi
	movq %rdi,104(%rsp)
	movq 64(%rsp),%rdi
	movq 112(%rdi),%rdi
	movq %r8,112(%rsp)
	movq 64(%rsp),%r8
	movq 120(%r8),%r8
	movq %r9,120(%rsp)
	movq 64(%rsp),%r9
	movq 128(%r9),%r9
	movq %r10,128(%rsp)
	movq 64(%rsp),%r10
	movq 136(%r10),%r10
	movq %r11,136(%rsp)
	movq 64(%rsp),%r11
	addq $144,%r11
	movq %r14,144(%rsp)
	movl (%r11),%r14d
	movq %rax,152(%rsp)
	movl 4(%r11),%eax
	movq %rbx,160(%rsp)
	movq 8(%r11),%rbx
	movq %rcx,168(%rsp)
	movq 16(%r11),%rcx
	movq %rdx,176(%rsp)
	movq 24(%r11),%rdx
	movq %rsi,184(%rsp)
	movq 32(%r11),%rsi
	movq %rdi,192(%rsp)
	movq 40(%r11),%rdi
	movq %r8,200(%rsp)
	movq 48(%r11),%r8
	movq %r9,208(%rsp)
	movq 56(%r11),%r9
	movq %r10,216(%rsp)
	movq 64(%r11),%r10
	movq %r11,224(%rsp)
	movq 72(%r11),%r11
	movq %r14,232(%rsp)
	movq 224(%rsp),%r14
	movq 80(%r14),%r14
	movq %rax,240(%rsp)
	movq 224(%rsp),%rax
	movq 88(%rax),%rax
	movq %rbx,248(%rsp)
	movq 224(%rsp),%rbx
	movq 96(%rbx),%rbx
	movq %rcx,256(%rsp)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-808(%r12)
	movq %rbx,-800(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-792(%r12)
	movq %rax,-784(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-776(%r12)
	movq %r14,-768(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-760(%r12)
	movq %r11,-752(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-744(%r12)
	movq %r10,-736(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-728(%r12)
	movq %r9,-720(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-712(%r12)
	movq %r8,-704(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-696(%r12)
	movq %rdi,-688(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-680(%r12)
	movq %rsi,-672(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-664(%r12)
	movq %rdx,-656(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-648(%r12)
	movq 256(%rsp),%rax
	movq %rax,-640(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-632(%r12)
	movq 248(%rsp),%rax
	movq %rax,-624(%r12)
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-616(%r12)
	movq 240(%rsp),%rax
	movq %rax,-608(%r12)
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-600(%r12)
	movq 232(%rsp),%rax
	movq %rax,-592(%r12)
	leaq GHC.Stats.GCDetails_con_info(%rip),%rax
	movq %rax,-584(%r12)
	leaq -599(%r12),%rax
	movq %rax,-576(%r12)
	leaq -615(%r12),%rax
	movq %rax,-568(%r12)
	leaq -631(%r12),%rax
	movq %rax,-560(%r12)
	leaq -647(%r12),%rax
	movq %rax,-552(%r12)
	leaq -663(%r12),%rax
	movq %rax,-544(%r12)
	leaq -679(%r12),%rax
	movq %rax,-536(%r12)
	leaq -695(%r12),%rax
	movq %rax,-528(%r12)
	leaq -711(%r12),%rax
	movq %rax,-520(%r12)
	leaq -727(%r12),%rax
	movq %rax,-512(%r12)
	leaq -743(%r12),%rax
	movq %rax,-504(%r12)
	leaq -759(%r12),%rax
	movq %rax,-496(%r12)
	leaq -775(%r12),%rax
	movq %rax,-488(%r12)
	leaq -791(%r12),%rax
	movq %rax,-480(%r12)
	leaq -807(%r12),%rax
	movq %rax,-472(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-464(%r12)
	movq 216(%rsp),%rax
	movq %rax,-456(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-448(%r12)
	movq 208(%rsp),%rax
	movq %rax,-440(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-432(%r12)
	movq 200(%rsp),%rax
	movq %rax,-424(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-416(%r12)
	movq 192(%rsp),%rax
	movq %rax,-408(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-400(%r12)
	movq 184(%rsp),%rax
	movq %rax,-392(%r12)
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-384(%r12)
	movq 176(%rsp),%rax
	movq %rax,-376(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-368(%r12)
	movq 168(%rsp),%rax
	movq %rax,-360(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-352(%r12)
	movq 160(%rsp),%rax
	movq %rax,-344(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-336(%r12)
	movq 152(%rsp),%rax
	movq %rax,-328(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-320(%r12)
	movq 144(%rsp),%rax
	movq %rax,-312(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-304(%r12)
	movq 136(%rsp),%rax
	movq %rax,-296(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-288(%r12)
	movq 128(%rsp),%rax
	movq %rax,-280(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-272(%r12)
	movq 120(%rsp),%rax
	movq %rax,-264(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-256(%r12)
	movq 112(%rsp),%rax
	movq %rax,-248(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-240(%r12)
	movq 104(%rsp),%rax
	movq %rax,-232(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-224(%r12)
	movq 96(%rsp),%rax
	movq %rax,-216(%r12)
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-208(%r12)
	movq 88(%rsp),%rax
	movq %rax,-200(%r12)
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-192(%r12)
	movq 80(%rsp),%rax
	movq %rax,-184(%r12)
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-176(%r12)
	movq 72(%rsp),%rax
	movq %rax,-168(%r12)
	leaq GHC.Stats.RTSStats_con_info(%rip),%rax
	movq %rax,-160(%r12)
	leaq -175(%r12),%rax
	movq %rax,-152(%r12)
	leaq -191(%r12),%rax
	movq %rax,-144(%r12)
	leaq -207(%r12),%rax
	movq %rax,-136(%r12)
	leaq -223(%r12),%rax
	movq %rax,-128(%r12)
	leaq -239(%r12),%rax
	movq %rax,-120(%r12)
	leaq -255(%r12),%rax
	movq %rax,-112(%r12)
	leaq -271(%r12),%rax
	movq %rax,-104(%r12)
	leaq -287(%r12),%rax
	movq %rax,-96(%r12)
	leaq -303(%r12),%rax
	movq %rax,-88(%r12)
	leaq -319(%r12),%rax
	movq %rax,-80(%r12)
	leaq -335(%r12),%rax
	movq %rax,-72(%r12)
	leaq -351(%r12),%rax
	movq %rax,-64(%r12)
	leaq -367(%r12),%rax
	movq %rax,-56(%r12)
	leaq -383(%r12),%rax
	movq %rax,-48(%r12)
	leaq -399(%r12),%rax
	movq %rax,-40(%r12)
	leaq -415(%r12),%rax
	movq %rax,-32(%r12)
	leaq -431(%r12),%rax
	movq %rax,-24(%r12)
	leaq -447(%r12),%rax
	movq %rax,-16(%r12)
	leaq -463(%r12),%rax
	movq %rax,-8(%r12)
	leaq -583(%r12),%rax
	movq %rax,(%r12)
	leaq -159(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNWK:
	movq $816,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _ccNUx, .-_ccNUx


==================== Asm code ====================
2018-03-16 16:07:48.696716074 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccNUx_info:
	.quad	_ccNUx
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:48.699168064 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.getRTSStats_closure
.type GHC.Stats.getRTSStats_closure, @object
GHC.Stats.getRTSStats_closure:
	.quad	GHC.Stats.getRTSStats_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:48.699822763 UTC

.section .text
.align 8
.globl GHC.Stats.getRTSStats_entry
.type GHC.Stats.getRTSStats_entry, @object
GHC.Stats.getRTSStats_entry:
_ccNZ2:
	jmp GHC.Stats.getRTSStats1_entry
	.size GHC.Stats.getRTSStats_entry, .-GHC.Stats.getRTSStats_entry


==================== Asm code ====================
2018-03-16 16:07:48.700454178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.getRTSStats_info
.type GHC.Stats.getRTSStats_info, @object
GHC.Stats.getRTSStats_info:
	.quad	GHC.Stats.getRTSStats_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	ScMjD_srt+600


==================== Asm code ====================
2018-03-16 16:07:48.705169648 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.GCDetails_closure
.type GHC.Stats.GCDetails_closure, @object
GHC.Stats.GCDetails_closure:
	.quad	GHC.Stats.GCDetails_info


==================== Asm code ====================
2018-03-16 16:07:48.706258017 UTC

.section .text
.align 8
.globl GHC.Stats.GCDetails_slow
.type GHC.Stats.GCDetails_slow, @object
GHC.Stats.GCDetails_slow:
_ccNZa:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Stats.GCDetails_entry
	.size GHC.Stats.GCDetails_slow, .-GHC.Stats.GCDetails_slow


==================== Asm code ====================
2018-03-16 16:07:48.707154325 UTC

.section .text
.align 8
GHC.Stats.GCDetails_entry:
_ccNZf:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ccNZj
_ccNZi:
	leaq GHC.Stats.GCDetails_con_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-104(%r12)
	movq %rsi,-96(%r12)
	movq %rdi,-88(%r12)
	movq %r8,-80(%r12)
	movq %r9,-72(%r12)
	movq (%rbp),%rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,-8(%r12)
	movq 64(%rbp),%rax
	movq %rax,(%r12)
	leaq -111(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNZj:
	movq $120,904(%r13)
	leaq GHC.Stats.GCDetails_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Stats.GCDetails_entry, .-GHC.Stats.GCDetails_entry


==================== Asm code ====================
2018-03-16 16:07:48.707946601 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Stats.GCDetails_info:
	.quad	GHC.Stats.GCDetails_entry
	.quad	0
	.quad	14
	.quad	60129542144
	.quad	0
	.quad	14
	.quad	GHC.Stats.GCDetails_slow


==================== Asm code ====================
2018-03-16 16:07:48.711746294 UTC

.section .data
.align 8
.align 1
.globl GHC.Stats.RTSStats_closure
.type GHC.Stats.RTSStats_closure, @object
GHC.Stats.RTSStats_closure:
	.quad	GHC.Stats.RTSStats_info


==================== Asm code ====================
2018-03-16 16:07:48.712475891 UTC

.section .text
.align 8
.globl GHC.Stats.RTSStats_slow
.type GHC.Stats.RTSStats_slow, @object
GHC.Stats.RTSStats_slow:
_ccNZC:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Stats.RTSStats_entry
	.size GHC.Stats.RTSStats_slow, .-GHC.Stats.RTSStats_slow


==================== Asm code ====================
2018-03-16 16:07:48.713655364 UTC

.section .text
.align 8
GHC.Stats.RTSStats_entry:
_ccNZH:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _ccNZL
_ccNZK:
	leaq GHC.Stats.RTSStats_con_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r14,-152(%r12)
	movq %rsi,-144(%r12)
	movq %rdi,-136(%r12)
	movq %r8,-128(%r12)
	movq %r9,-120(%r12)
	movq (%rbp),%rax
	movq %rax,-112(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq %rax,-96(%r12)
	movq 24(%rbp),%rax
	movq %rax,-88(%r12)
	movq 32(%rbp),%rax
	movq %rax,-80(%r12)
	movq 40(%rbp),%rax
	movq %rax,-72(%r12)
	movq 48(%rbp),%rax
	movq %rax,-64(%r12)
	movq 56(%rbp),%rax
	movq %rax,-56(%r12)
	movq 64(%rbp),%rax
	movq %rax,-48(%r12)
	movq 72(%rbp),%rax
	movq %rax,-40(%r12)
	movq 80(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -159(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccNZL:
	movq $168,904(%r13)
	leaq GHC.Stats.RTSStats_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Stats.RTSStats_entry, .-GHC.Stats.RTSStats_entry


==================== Asm code ====================
2018-03-16 16:07:48.714491404 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Stats.RTSStats_info:
	.quad	GHC.Stats.RTSStats_entry
	.quad	0
	.quad	14
	.quad	85899345920
	.quad	0
	.quad	20
	.quad	GHC.Stats.RTSStats_slow


==================== Asm code ====================
2018-03-16 16:07:48.716502636 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icO0a_str:
	.asciz "base:GHC.Stats.GCDetails"


==================== Asm code ====================
2018-03-16 16:07:48.717127961 UTC

.section .text
.align 8
.globl GHC.Stats.GCDetails_con_entry
.type GHC.Stats.GCDetails_con_entry, @object
GHC.Stats.GCDetails_con_entry:
_ccO09:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.GCDetails_con_entry, .-GHC.Stats.GCDetails_con_entry


==================== Asm code ====================
2018-03-16 16:07:48.717784704 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.GCDetails_con_info
.type GHC.Stats.GCDetails_con_info, @object
GHC.Stats.GCDetails_con_info:
	.quad	GHC.Stats.GCDetails_con_entry
	.quad	14
	.quad	1
	.quad	icO0a_str


==================== Asm code ====================
2018-03-16 16:07:48.719770925 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icO0h_str:
	.asciz "base:GHC.Stats.RTSStats"


==================== Asm code ====================
2018-03-16 16:07:48.720376225 UTC

.section .text
.align 8
.globl GHC.Stats.RTSStats_con_entry
.type GHC.Stats.RTSStats_con_entry, @object
GHC.Stats.RTSStats_con_entry:
_ccO0g:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Stats.RTSStats_con_entry, .-GHC.Stats.RTSStats_con_entry


==================== Asm code ====================
2018-03-16 16:07:48.720950947 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Stats.RTSStats_con_info
.type GHC.Stats.RTSStats_con_info, @object
GHC.Stats.RTSStats_con_info:
	.quad	GHC.Stats.RTSStats_con_entry
	.quad	20
	.quad	1
	.quad	icO0h_str


==================== Asm code ====================
2018-03-16 16:07:48.723685437 UTC

.section .data.rel.ro
.align 8
.align 1
ScMjD_srt:
	.quad	GHC.Show.showCommaSpace1_closure
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.Stats.$fShowGCDetails_$cshowsPrec_closure
	.quad	GHC.Stats.$fShowGCDetails_$cshow_closure
	.quad	GHC.Stats.$fShowGCDetails1_closure
	.quad	GHC.Stats.$fShowRTSStats_$cshowsPrec_closure
	.quad	GHC.Stats.$fShowRTSStats_$cshow_closure
	.quad	GHC.Stats.$fShowRTSStats1_closure
	.quad	GHC.Read.$fReadWord32_$creadsPrec_closure
	.quad	lvl37_rcHqd_closure
	.quad	ds2_rcHqe_closure
	.quad	GHC.Read.$fReadWord64_$creadsPrec_closure
	.quad	lvl45_rcHqn_closure
	.quad	lvl46_rcHqo_closure
	.quad	GHC.Int.$fReadInt64_$creadsPrec_closure
	.quad	lvl65_rcHqH_closure
	.quad	lvl66_rcHqI_closure
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	lvl72_rcHqO_closure
	.quad	GHC.Read.readField_closure
	.quad	lvl70_rcHqM_closure
	.quad	lvl40_rcHqi_closure
	.quad	lvl68_rcHqK_closure
	.quad	lvl64_rcHqG_closure
	.quad	lvl62_rcHqE_closure
	.quad	lvl60_rcHqC_closure
	.quad	lvl58_rcHqA_closure
	.quad	lvl56_rcHqy_closure
	.quad	lvl54_rcHqw_closure
	.quad	lvl52_rcHqu_closure
	.quad	lvl50_rcHqs_closure
	.quad	lvl48_rcHqq_closure
	.quad	lvl44_rcHqm_closure
	.quad	lvl42_rcHqk_closure
	.quad	ds1_rcHqc_closure
	.quad	lexeme4_rcHqa_closure
	.quad	GHC.Stats.$w$creadPrec_closure
	.quad	lexeme1_rcHq7_closure
	.quad	GHC.Stats.$fReadGCDetails2_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.Stats.$fReadGCDetails_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.Stats.$fReadGCDetails1_closure
	.quad	GHC.Stats.$fReadGCDetails_$creadListPrec_closure
	.quad	GHC.Stats.$fReadGCDetails3_closure
	.quad	lvl110_rcHru_closure
	.quad	lvl111_rcHrv_closure
	.quad	lvl108_rcHrs_closure
	.quad	lvl106_rcHrq_closure
	.quad	lvl104_rcHro_closure
	.quad	lvl102_rcHrm_closure
	.quad	lvl100_rcHrk_closure
	.quad	lvl98_rcHri_closure
	.quad	lvl96_rcHrg_closure
	.quad	lvl94_rcHre_closure
	.quad	lvl92_rcHrc_closure
	.quad	lvl90_rcHra_closure
	.quad	lvl88_rcHr8_closure
	.quad	lvl86_rcHr6_closure
	.quad	lvl84_rcHr4_closure
	.quad	lvl82_rcHr2_closure
	.quad	lvl80_rcHr0_closure
	.quad	lvl78_rcHqY_closure
	.quad	lvl76_rcHqW_closure
	.quad	lvl74_rcHqU_closure
	.quad	ds4_rcHqS_closure
	.quad	GHC.Stats.$w$creadPrec1_closure
	.quad	lexeme6_rcHqQ_closure
	.quad	GHC.Stats.$fReadRTSStats2_closure
	.quad	GHC.Stats.$fReadRTSStats_$creadsPrec_closure
	.quad	GHC.Stats.$fReadRTSStats1_closure
	.quad	GHC.Stats.$fReadRTSStats_$creadListPrec_closure
	.quad	GHC.Stats.$fReadRTSStats3_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.Stats.getRTSStats3_closure
	.quad	GHC.Stats.getRTSStats1_closure
	.quad	GHC.Stats.getRTSStats2_closure

