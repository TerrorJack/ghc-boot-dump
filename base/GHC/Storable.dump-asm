
==================== Asm code ====================
2018-03-16 15:59:27.693381679 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr1_closure
.type GHC.Storable.readWideCharOffPtr1_closure, @object
GHC.Storable.readWideCharOffPtr1_closure:
	.quad	GHC.Storable.readWideCharOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.694343855 UTC

.section .text
.align 8
.globl GHC.Storable.readWideCharOffPtr1_entry
.type GHC.Storable.readWideCharOffPtr1_entry, @object
GHC.Storable.readWideCharOffPtr1_entry:
_c4C5h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C5q
_c4C5r:
	movq $block_c4C5e_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C5e
_c4C5f:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C5q:
	movl $GHC.Storable.readWideCharOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWideCharOffPtr1_entry, .-GHC.Storable.readWideCharOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.695016776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr1_info
.type GHC.Storable.readWideCharOffPtr1_info, @object
GHC.Storable.readWideCharOffPtr1_info:
	.quad	GHC.Storable.readWideCharOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.695748464 UTC

.section .text
.align 8
_c4C5e:
_c4C5e:
	movq $block_c4C5k_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C5k
_c4C5l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C5e, .-_c4C5e


==================== Asm code ====================
2018-03-16 15:59:27.696311898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C5e_info:
	.quad	_c4C5e
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.697083008 UTC

.section .text
.align 8
_c4C5k:
_c4C5k:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C5v
_c4C5u:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movl (%rax,%rbx,4),%eax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C5v:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C5k, .-_c4C5k


==================== Asm code ====================
2018-03-16 15:59:27.697881577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C5k_info:
	.quad	_c4C5k
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.700272716 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr_closure
.type GHC.Storable.readWideCharOffPtr_closure, @object
GHC.Storable.readWideCharOffPtr_closure:
	.quad	GHC.Storable.readWideCharOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.700911793 UTC

.section .text
.align 8
.globl GHC.Storable.readWideCharOffPtr_entry
.type GHC.Storable.readWideCharOffPtr_entry, @object
GHC.Storable.readWideCharOffPtr_entry:
_c4C5S:
	jmp GHC.Storable.readWideCharOffPtr1_entry
	.size GHC.Storable.readWideCharOffPtr_entry, .-GHC.Storable.readWideCharOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.701725341 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr_info
.type GHC.Storable.readWideCharOffPtr_info, @object
GHC.Storable.readWideCharOffPtr_info:
	.quad	GHC.Storable.readWideCharOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.706824893 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr1_closure
.type GHC.Storable.readIntOffPtr1_closure, @object
GHC.Storable.readIntOffPtr1_closure:
	.quad	GHC.Storable.readIntOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.707766872 UTC

.section .text
.align 8
.globl GHC.Storable.readIntOffPtr1_entry
.type GHC.Storable.readIntOffPtr1_entry, @object
GHC.Storable.readIntOffPtr1_entry:
_c4C66:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C6f
_c4C6g:
	movq $block_c4C63_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C63
_c4C64:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C6f:
	movl $GHC.Storable.readIntOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readIntOffPtr1_entry, .-GHC.Storable.readIntOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.708431125 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr1_info
.type GHC.Storable.readIntOffPtr1_info, @object
GHC.Storable.readIntOffPtr1_info:
	.quad	GHC.Storable.readIntOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.709209206 UTC

.section .text
.align 8
_c4C63:
_c4C63:
	movq $block_c4C69_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C69
_c4C6a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C63, .-_c4C63


==================== Asm code ====================
2018-03-16 15:59:27.710155573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C63_info:
	.quad	_c4C63
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.710970307 UTC

.section .text
.align 8
_c4C69:
_c4C69:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C6k
_c4C6j:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C6k:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C69, .-_c4C69


==================== Asm code ====================
2018-03-16 15:59:27.711680138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C69_info:
	.quad	_c4C69
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.714440985 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr_closure
.type GHC.Storable.readIntOffPtr_closure, @object
GHC.Storable.readIntOffPtr_closure:
	.quad	GHC.Storable.readIntOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.715145719 UTC

.section .text
.align 8
.globl GHC.Storable.readIntOffPtr_entry
.type GHC.Storable.readIntOffPtr_entry, @object
GHC.Storable.readIntOffPtr_entry:
_c4C6H:
	jmp GHC.Storable.readIntOffPtr1_entry
	.size GHC.Storable.readIntOffPtr_entry, .-GHC.Storable.readIntOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.715741357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr_info
.type GHC.Storable.readIntOffPtr_info, @object
GHC.Storable.readIntOffPtr_info:
	.quad	GHC.Storable.readIntOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.719841187 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr1_closure
.type GHC.Storable.readWordOffPtr1_closure, @object
GHC.Storable.readWordOffPtr1_closure:
	.quad	GHC.Storable.readWordOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.720820818 UTC

.section .text
.align 8
.globl GHC.Storable.readWordOffPtr1_entry
.type GHC.Storable.readWordOffPtr1_entry, @object
GHC.Storable.readWordOffPtr1_entry:
_c4C6V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C74
_c4C75:
	movq $block_c4C6S_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C6S
_c4C6T:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C74:
	movl $GHC.Storable.readWordOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWordOffPtr1_entry, .-GHC.Storable.readWordOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.721713611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr1_info
.type GHC.Storable.readWordOffPtr1_info, @object
GHC.Storable.readWordOffPtr1_info:
	.quad	GHC.Storable.readWordOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.72245179 UTC

.section .text
.align 8
_c4C6S:
_c4C6S:
	movq $block_c4C6Y_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C6Y
_c4C6Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C6S, .-_c4C6S


==================== Asm code ====================
2018-03-16 15:59:27.723104294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C6S_info:
	.quad	_c4C6S
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.723891345 UTC

.section .text
.align 8
_c4C6Y:
_c4C6Y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C79
_c4C78:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Types.W#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C79:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C6Y, .-_c4C6Y


==================== Asm code ====================
2018-03-16 15:59:27.724806151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C6Y_info:
	.quad	_c4C6Y
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.727896863 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr_closure
.type GHC.Storable.readWordOffPtr_closure, @object
GHC.Storable.readWordOffPtr_closure:
	.quad	GHC.Storable.readWordOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.728689482 UTC

.section .text
.align 8
.globl GHC.Storable.readWordOffPtr_entry
.type GHC.Storable.readWordOffPtr_entry, @object
GHC.Storable.readWordOffPtr_entry:
_c4C7w:
	jmp GHC.Storable.readWordOffPtr1_entry
	.size GHC.Storable.readWordOffPtr_entry, .-GHC.Storable.readWordOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.729327611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr_info
.type GHC.Storable.readWordOffPtr_info, @object
GHC.Storable.readWordOffPtr_info:
	.quad	GHC.Storable.readWordOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.733569496 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr1_closure
.type GHC.Storable.readPtrOffPtr1_closure, @object
GHC.Storable.readPtrOffPtr1_closure:
	.quad	GHC.Storable.readPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.734485554 UTC

.section .text
.align 8
.globl GHC.Storable.readPtrOffPtr1_entry
.type GHC.Storable.readPtrOffPtr1_entry, @object
GHC.Storable.readPtrOffPtr1_entry:
_c4C7K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C7T
_c4C7U:
	movq $block_c4C7H_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C7H
_c4C7I:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C7T:
	movl $GHC.Storable.readPtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readPtrOffPtr1_entry, .-GHC.Storable.readPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.735185797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr1_info
.type GHC.Storable.readPtrOffPtr1_info, @object
GHC.Storable.readPtrOffPtr1_info:
	.quad	GHC.Storable.readPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.73592076 UTC

.section .text
.align 8
_c4C7H:
_c4C7H:
	movq $block_c4C7N_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C7N
_c4C7O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C7H, .-_c4C7H


==================== Asm code ====================
2018-03-16 15:59:27.73653472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C7H_info:
	.quad	_c4C7H
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.7372836 UTC

.section .text
.align 8
_c4C7N:
_c4C7N:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C7Y
_c4C7X:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C7Y:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C7N, .-_c4C7N


==================== Asm code ====================
2018-03-16 15:59:27.737916175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C7N_info:
	.quad	_c4C7N
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.740222212 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr_closure
.type GHC.Storable.readPtrOffPtr_closure, @object
GHC.Storable.readPtrOffPtr_closure:
	.quad	GHC.Storable.readPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.740914806 UTC

.section .text
.align 8
.globl GHC.Storable.readPtrOffPtr_entry
.type GHC.Storable.readPtrOffPtr_entry, @object
GHC.Storable.readPtrOffPtr_entry:
_c4C8l:
	jmp GHC.Storable.readPtrOffPtr1_entry
	.size GHC.Storable.readPtrOffPtr_entry, .-GHC.Storable.readPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.741624882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr_info
.type GHC.Storable.readPtrOffPtr_info, @object
GHC.Storable.readPtrOffPtr_info:
	.quad	GHC.Storable.readPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.746676381 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr1_closure
.type GHC.Storable.readFunPtrOffPtr1_closure, @object
GHC.Storable.readFunPtrOffPtr1_closure:
	.quad	GHC.Storable.readFunPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.747563459 UTC

.section .text
.align 8
.globl GHC.Storable.readFunPtrOffPtr1_entry
.type GHC.Storable.readFunPtrOffPtr1_entry, @object
GHC.Storable.readFunPtrOffPtr1_entry:
_c4C8z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C8I
_c4C8J:
	movq $block_c4C8w_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C8w
_c4C8x:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C8I:
	movl $GHC.Storable.readFunPtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readFunPtrOffPtr1_entry, .-GHC.Storable.readFunPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.748246687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr1_info
.type GHC.Storable.readFunPtrOffPtr1_info, @object
GHC.Storable.readFunPtrOffPtr1_info:
	.quad	GHC.Storable.readFunPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.749027267 UTC

.section .text
.align 8
_c4C8w:
_c4C8w:
	movq $block_c4C8C_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C8C
_c4C8D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C8w, .-_c4C8w


==================== Asm code ====================
2018-03-16 15:59:27.749686288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C8w_info:
	.quad	_c4C8w
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.75040571 UTC

.section .text
.align 8
_c4C8C:
_c4C8C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C8N
_c4C8M:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Ptr.FunPtr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C8N:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C8C, .-_c4C8C


==================== Asm code ====================
2018-03-16 15:59:27.751035353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C8C_info:
	.quad	_c4C8C
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.75339997 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr_closure
.type GHC.Storable.readFunPtrOffPtr_closure, @object
GHC.Storable.readFunPtrOffPtr_closure:
	.quad	GHC.Storable.readFunPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.754088413 UTC

.section .text
.align 8
.globl GHC.Storable.readFunPtrOffPtr_entry
.type GHC.Storable.readFunPtrOffPtr_entry, @object
GHC.Storable.readFunPtrOffPtr_entry:
_c4C9a:
	jmp GHC.Storable.readFunPtrOffPtr1_entry
	.size GHC.Storable.readFunPtrOffPtr_entry, .-GHC.Storable.readFunPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.75468237 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr_info
.type GHC.Storable.readFunPtrOffPtr_info, @object
GHC.Storable.readFunPtrOffPtr_info:
	.quad	GHC.Storable.readFunPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.758694729 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr1_closure
.type GHC.Storable.readFloatOffPtr1_closure, @object
GHC.Storable.readFloatOffPtr1_closure:
	.quad	GHC.Storable.readFloatOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.759567842 UTC

.section .text
.align 8
.globl GHC.Storable.readFloatOffPtr1_entry
.type GHC.Storable.readFloatOffPtr1_entry, @object
GHC.Storable.readFloatOffPtr1_entry:
_c4C9o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4C9x
_c4C9y:
	movq $block_c4C9l_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4C9l
_c4C9m:
	movq (%rbx),%rax
	jmp *(%rax)
_c4C9x:
	movl $GHC.Storable.readFloatOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readFloatOffPtr1_entry, .-GHC.Storable.readFloatOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.760276802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr1_info
.type GHC.Storable.readFloatOffPtr1_info, @object
GHC.Storable.readFloatOffPtr1_info:
	.quad	GHC.Storable.readFloatOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.761069173 UTC

.section .text
.align 8
_c4C9l:
_c4C9l:
	movq $block_c4C9r_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4C9r
_c4C9s:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4C9l, .-_c4C9l


==================== Asm code ====================
2018-03-16 15:59:27.761878691 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C9l_info:
	.quad	_c4C9l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.763136142 UTC

.section .text
.align 8
_c4C9r:
_c4C9r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4C9C
_c4C9B:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movss (%rax,%rbx,4),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4C9C:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4C9r, .-_c4C9r


==================== Asm code ====================
2018-03-16 15:59:27.763807934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4C9r_info:
	.quad	_c4C9r
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.766175146 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr_closure
.type GHC.Storable.readFloatOffPtr_closure, @object
GHC.Storable.readFloatOffPtr_closure:
	.quad	GHC.Storable.readFloatOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.76686185 UTC

.section .text
.align 8
.globl GHC.Storable.readFloatOffPtr_entry
.type GHC.Storable.readFloatOffPtr_entry, @object
GHC.Storable.readFloatOffPtr_entry:
_c4C9Z:
	jmp GHC.Storable.readFloatOffPtr1_entry
	.size GHC.Storable.readFloatOffPtr_entry, .-GHC.Storable.readFloatOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.76743014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr_info
.type GHC.Storable.readFloatOffPtr_info, @object
GHC.Storable.readFloatOffPtr_info:
	.quad	GHC.Storable.readFloatOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.771324194 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr1_closure
.type GHC.Storable.readDoubleOffPtr1_closure, @object
GHC.Storable.readDoubleOffPtr1_closure:
	.quad	GHC.Storable.readDoubleOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.772248916 UTC

.section .text
.align 8
.globl GHC.Storable.readDoubleOffPtr1_entry
.type GHC.Storable.readDoubleOffPtr1_entry, @object
GHC.Storable.readDoubleOffPtr1_entry:
_c4Cad:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cam
_c4Can:
	movq $block_c4Caa_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Caa
_c4Cab:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cam:
	movl $GHC.Storable.readDoubleOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readDoubleOffPtr1_entry, .-GHC.Storable.readDoubleOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.772956403 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr1_info
.type GHC.Storable.readDoubleOffPtr1_info, @object
GHC.Storable.readDoubleOffPtr1_info:
	.quad	GHC.Storable.readDoubleOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.773720352 UTC

.section .text
.align 8
_c4Caa:
_c4Caa:
	movq $block_c4Cag_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cag
_c4Cah:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Caa, .-_c4Caa


==================== Asm code ====================
2018-03-16 15:59:27.774341427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Caa_info:
	.quad	_c4Caa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.775112605 UTC

.section .text
.align 8
_c4Cag:
_c4Cag:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Car
_c4Caq:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movsd (%rax,%rbx,8),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Car:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cag, .-_c4Cag


==================== Asm code ====================
2018-03-16 15:59:27.77580024 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cag_info:
	.quad	_c4Cag
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.778131528 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr_closure
.type GHC.Storable.readDoubleOffPtr_closure, @object
GHC.Storable.readDoubleOffPtr_closure:
	.quad	GHC.Storable.readDoubleOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.778802624 UTC

.section .text
.align 8
.globl GHC.Storable.readDoubleOffPtr_entry
.type GHC.Storable.readDoubleOffPtr_entry, @object
GHC.Storable.readDoubleOffPtr_entry:
_c4CaO:
	jmp GHC.Storable.readDoubleOffPtr1_entry
	.size GHC.Storable.readDoubleOffPtr_entry, .-GHC.Storable.readDoubleOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.779403541 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr_info
.type GHC.Storable.readDoubleOffPtr_info, @object
GHC.Storable.readDoubleOffPtr_info:
	.quad	GHC.Storable.readDoubleOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.78388446 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr1_closure
.type GHC.Storable.readStablePtrOffPtr1_closure, @object
GHC.Storable.readStablePtrOffPtr1_closure:
	.quad	GHC.Storable.readStablePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.784796532 UTC

.section .text
.align 8
.globl GHC.Storable.readStablePtrOffPtr1_entry
.type GHC.Storable.readStablePtrOffPtr1_entry, @object
GHC.Storable.readStablePtrOffPtr1_entry:
_c4Cb2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cbb
_c4Cbc:
	movq $block_c4CaZ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CaZ
_c4Cb0:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cbb:
	movl $GHC.Storable.readStablePtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readStablePtrOffPtr1_entry, .-GHC.Storable.readStablePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.78555328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr1_info
.type GHC.Storable.readStablePtrOffPtr1_info, @object
GHC.Storable.readStablePtrOffPtr1_info:
	.quad	GHC.Storable.readStablePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.786229046 UTC

.section .text
.align 8
_c4CaZ:
_c4CaZ:
	movq $block_c4Cb5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cb5
_c4Cb6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CaZ, .-_c4CaZ


==================== Asm code ====================
2018-03-16 15:59:27.786851594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CaZ_info:
	.quad	_c4CaZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.787599445 UTC

.section .text
.align 8
_c4Cb5:
_c4Cb5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Cbg
_c4Cbf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Stable.StablePtr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Cbg:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cb5, .-_c4Cb5


==================== Asm code ====================
2018-03-16 15:59:27.788216838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cb5_info:
	.quad	_c4Cb5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.790534418 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr_closure
.type GHC.Storable.readStablePtrOffPtr_closure, @object
GHC.Storable.readStablePtrOffPtr_closure:
	.quad	GHC.Storable.readStablePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.791269235 UTC

.section .text
.align 8
.globl GHC.Storable.readStablePtrOffPtr_entry
.type GHC.Storable.readStablePtrOffPtr_entry, @object
GHC.Storable.readStablePtrOffPtr_entry:
_c4CbD:
	jmp GHC.Storable.readStablePtrOffPtr1_entry
	.size GHC.Storable.readStablePtrOffPtr_entry, .-GHC.Storable.readStablePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.791897703 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr_info
.type GHC.Storable.readStablePtrOffPtr_info, @object
GHC.Storable.readStablePtrOffPtr_info:
	.quad	GHC.Storable.readStablePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.796697366 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr1_closure
.type GHC.Storable.readInt8OffPtr1_closure, @object
GHC.Storable.readInt8OffPtr1_closure:
	.quad	GHC.Storable.readInt8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.797667839 UTC

.section .text
.align 8
.globl GHC.Storable.readInt8OffPtr1_entry
.type GHC.Storable.readInt8OffPtr1_entry, @object
GHC.Storable.readInt8OffPtr1_entry:
_c4CbR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cc0
_c4Cc1:
	movq $block_c4CbO_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CbO
_c4CbP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cc0:
	movl $GHC.Storable.readInt8OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readInt8OffPtr1_entry, .-GHC.Storable.readInt8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.798384583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr1_info
.type GHC.Storable.readInt8OffPtr1_info, @object
GHC.Storable.readInt8OffPtr1_info:
	.quad	GHC.Storable.readInt8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.799555657 UTC

.section .text
.align 8
_c4CbO:
_c4CbO:
	movq $block_c4CbU_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CbU
_c4CbV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CbO, .-_c4CbO


==================== Asm code ====================
2018-03-16 15:59:27.800234665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CbO_info:
	.quad	_c4CbO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.800987214 UTC

.section .text
.align 8
_c4CbU:
_c4CbU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Cc5
_c4Cc4:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movsbq (%rax,%rbx,1),%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Cc5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4CbU, .-_c4CbU


==================== Asm code ====================
2018-03-16 15:59:27.801865243 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CbU_info:
	.quad	_c4CbU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.804097823 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr_closure
.type GHC.Storable.readInt8OffPtr_closure, @object
GHC.Storable.readInt8OffPtr_closure:
	.quad	GHC.Storable.readInt8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.804781985 UTC

.section .text
.align 8
.globl GHC.Storable.readInt8OffPtr_entry
.type GHC.Storable.readInt8OffPtr_entry, @object
GHC.Storable.readInt8OffPtr_entry:
_c4Ccs:
	jmp GHC.Storable.readInt8OffPtr1_entry
	.size GHC.Storable.readInt8OffPtr_entry, .-GHC.Storable.readInt8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.805374637 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr_info
.type GHC.Storable.readInt8OffPtr_info, @object
GHC.Storable.readInt8OffPtr_info:
	.quad	GHC.Storable.readInt8OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.809223988 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr1_closure
.type GHC.Storable.readWord8OffPtr1_closure, @object
GHC.Storable.readWord8OffPtr1_closure:
	.quad	GHC.Storable.readWord8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.810179538 UTC

.section .text
.align 8
.globl GHC.Storable.readWord8OffPtr1_entry
.type GHC.Storable.readWord8OffPtr1_entry, @object
GHC.Storable.readWord8OffPtr1_entry:
_c4CcG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CcP
_c4CcQ:
	movq $block_c4CcD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CcD
_c4CcE:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CcP:
	movl $GHC.Storable.readWord8OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWord8OffPtr1_entry, .-GHC.Storable.readWord8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.810864498 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr1_info
.type GHC.Storable.readWord8OffPtr1_info, @object
GHC.Storable.readWord8OffPtr1_info:
	.quad	GHC.Storable.readWord8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.811651129 UTC

.section .text
.align 8
_c4CcD:
_c4CcD:
	movq $block_c4CcJ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CcJ
_c4CcK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CcD, .-_c4CcD


==================== Asm code ====================
2018-03-16 15:59:27.812344475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CcD_info:
	.quad	_c4CcD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.813093548 UTC

.section .text
.align 8
_c4CcJ:
_c4CcJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CcU
_c4CcT:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movzbl (%rax,%rbx,1),%eax
	movq $GHC.Word.W8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CcU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4CcJ, .-_c4CcJ


==================== Asm code ====================
2018-03-16 15:59:27.814039582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CcJ_info:
	.quad	_c4CcJ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.816506638 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr_closure
.type GHC.Storable.readWord8OffPtr_closure, @object
GHC.Storable.readWord8OffPtr_closure:
	.quad	GHC.Storable.readWord8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.817728505 UTC

.section .text
.align 8
.globl GHC.Storable.readWord8OffPtr_entry
.type GHC.Storable.readWord8OffPtr_entry, @object
GHC.Storable.readWord8OffPtr_entry:
_c4Cdh:
	jmp GHC.Storable.readWord8OffPtr1_entry
	.size GHC.Storable.readWord8OffPtr_entry, .-GHC.Storable.readWord8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.818329354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr_info
.type GHC.Storable.readWord8OffPtr_info, @object
GHC.Storable.readWord8OffPtr_info:
	.quad	GHC.Storable.readWord8OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.822239683 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr1_closure
.type GHC.Storable.readInt16OffPtr1_closure, @object
GHC.Storable.readInt16OffPtr1_closure:
	.quad	GHC.Storable.readInt16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.823195136 UTC

.section .text
.align 8
.globl GHC.Storable.readInt16OffPtr1_entry
.type GHC.Storable.readInt16OffPtr1_entry, @object
GHC.Storable.readInt16OffPtr1_entry:
_c4Cdv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CdE
_c4CdF:
	movq $block_c4Cds_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Cds
_c4Cdt:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CdE:
	movl $GHC.Storable.readInt16OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readInt16OffPtr1_entry, .-GHC.Storable.readInt16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.82386184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr1_info
.type GHC.Storable.readInt16OffPtr1_info, @object
GHC.Storable.readInt16OffPtr1_info:
	.quad	GHC.Storable.readInt16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.82452514 UTC

.section .text
.align 8
_c4Cds:
_c4Cds:
	movq $block_c4Cdy_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cdy
_c4Cdz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cds, .-_c4Cds


==================== Asm code ====================
2018-03-16 15:59:27.825128965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cds_info:
	.quad	_c4Cds
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.82591036 UTC

.section .text
.align 8
_c4Cdy:
_c4Cdy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CdJ
_c4CdI:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movswq (%rax,%rbx,2),%rax
	movq $GHC.Int.I16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CdJ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cdy, .-_c4Cdy


==================== Asm code ====================
2018-03-16 15:59:27.826584638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cdy_info:
	.quad	_c4Cdy
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.828934229 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr_closure
.type GHC.Storable.readInt16OffPtr_closure, @object
GHC.Storable.readInt16OffPtr_closure:
	.quad	GHC.Storable.readInt16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.829661162 UTC

.section .text
.align 8
.globl GHC.Storable.readInt16OffPtr_entry
.type GHC.Storable.readInt16OffPtr_entry, @object
GHC.Storable.readInt16OffPtr_entry:
_c4Ce6:
	jmp GHC.Storable.readInt16OffPtr1_entry
	.size GHC.Storable.readInt16OffPtr_entry, .-GHC.Storable.readInt16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.830255174 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr_info
.type GHC.Storable.readInt16OffPtr_info, @object
GHC.Storable.readInt16OffPtr_info:
	.quad	GHC.Storable.readInt16OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.834521897 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr1_closure
.type GHC.Storable.readWord16OffPtr1_closure, @object
GHC.Storable.readWord16OffPtr1_closure:
	.quad	GHC.Storable.readWord16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.835815075 UTC

.section .text
.align 8
.globl GHC.Storable.readWord16OffPtr1_entry
.type GHC.Storable.readWord16OffPtr1_entry, @object
GHC.Storable.readWord16OffPtr1_entry:
_c4Cek:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cet
_c4Ceu:
	movq $block_c4Ceh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Ceh
_c4Cei:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cet:
	movl $GHC.Storable.readWord16OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWord16OffPtr1_entry, .-GHC.Storable.readWord16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.836479674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr1_info
.type GHC.Storable.readWord16OffPtr1_info, @object
GHC.Storable.readWord16OffPtr1_info:
	.quad	GHC.Storable.readWord16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.837173597 UTC

.section .text
.align 8
_c4Ceh:
_c4Ceh:
	movq $block_c4Cen_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cen
_c4Ceo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ceh, .-_c4Ceh


==================== Asm code ====================
2018-03-16 15:59:27.837851808 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ceh_info:
	.quad	_c4Ceh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.838581105 UTC

.section .text
.align 8
_c4Cen:
_c4Cen:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Cey
_c4Cex:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movzwl (%rax,%rbx,2),%eax
	movq $GHC.Word.W16#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Cey:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cen, .-_c4Cen


==================== Asm code ====================
2018-03-16 15:59:27.839192939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cen_info:
	.quad	_c4Cen
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.841621296 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr_closure
.type GHC.Storable.readWord16OffPtr_closure, @object
GHC.Storable.readWord16OffPtr_closure:
	.quad	GHC.Storable.readWord16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.84226004 UTC

.section .text
.align 8
.globl GHC.Storable.readWord16OffPtr_entry
.type GHC.Storable.readWord16OffPtr_entry, @object
GHC.Storable.readWord16OffPtr_entry:
_c4CeV:
	jmp GHC.Storable.readWord16OffPtr1_entry
	.size GHC.Storable.readWord16OffPtr_entry, .-GHC.Storable.readWord16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.842879803 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr_info
.type GHC.Storable.readWord16OffPtr_info, @object
GHC.Storable.readWord16OffPtr_info:
	.quad	GHC.Storable.readWord16OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.847128942 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr1_closure
.type GHC.Storable.readInt32OffPtr1_closure, @object
GHC.Storable.readInt32OffPtr1_closure:
	.quad	GHC.Storable.readInt32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.848046653 UTC

.section .text
.align 8
.globl GHC.Storable.readInt32OffPtr1_entry
.type GHC.Storable.readInt32OffPtr1_entry, @object
GHC.Storable.readInt32OffPtr1_entry:
_c4Cf9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cfi
_c4Cfj:
	movq $block_c4Cf6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Cf6
_c4Cf7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cfi:
	movl $GHC.Storable.readInt32OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readInt32OffPtr1_entry, .-GHC.Storable.readInt32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.848776598 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr1_info
.type GHC.Storable.readInt32OffPtr1_info, @object
GHC.Storable.readInt32OffPtr1_info:
	.quad	GHC.Storable.readInt32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.84990109 UTC

.section .text
.align 8
_c4Cf6:
_c4Cf6:
	movq $block_c4Cfc_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cfc
_c4Cfd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cf6, .-_c4Cf6


==================== Asm code ====================
2018-03-16 15:59:27.85050211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cf6_info:
	.quad	_c4Cf6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.851372048 UTC

.section .text
.align 8
_c4Cfc:
_c4Cfc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Cfn
_c4Cfm:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movslq (%rax,%rbx,4),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Cfn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cfc, .-_c4Cfc


==================== Asm code ====================
2018-03-16 15:59:27.852054638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cfc_info:
	.quad	_c4Cfc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.855026041 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr_closure
.type GHC.Storable.readInt32OffPtr_closure, @object
GHC.Storable.readInt32OffPtr_closure:
	.quad	GHC.Storable.readInt32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.855727555 UTC

.section .text
.align 8
.globl GHC.Storable.readInt32OffPtr_entry
.type GHC.Storable.readInt32OffPtr_entry, @object
GHC.Storable.readInt32OffPtr_entry:
_c4CfK:
	jmp GHC.Storable.readInt32OffPtr1_entry
	.size GHC.Storable.readInt32OffPtr_entry, .-GHC.Storable.readInt32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.85632116 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr_info
.type GHC.Storable.readInt32OffPtr_info, @object
GHC.Storable.readInt32OffPtr_info:
	.quad	GHC.Storable.readInt32OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.860539574 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr1_closure
.type GHC.Storable.readWord32OffPtr1_closure, @object
GHC.Storable.readWord32OffPtr1_closure:
	.quad	GHC.Storable.readWord32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.861505226 UTC

.section .text
.align 8
.globl GHC.Storable.readWord32OffPtr1_entry
.type GHC.Storable.readWord32OffPtr1_entry, @object
GHC.Storable.readWord32OffPtr1_entry:
_c4CfY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cg7
_c4Cg8:
	movq $block_c4CfV_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CfV
_c4CfW:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cg7:
	movl $GHC.Storable.readWord32OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWord32OffPtr1_entry, .-GHC.Storable.readWord32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.862169617 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr1_info
.type GHC.Storable.readWord32OffPtr1_info, @object
GHC.Storable.readWord32OffPtr1_info:
	.quad	GHC.Storable.readWord32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.862915291 UTC

.section .text
.align 8
_c4CfV:
_c4CfV:
	movq $block_c4Cg1_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cg1
_c4Cg2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CfV, .-_c4CfV


==================== Asm code ====================
2018-03-16 15:59:27.863529789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CfV_info:
	.quad	_c4CfV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.864279477 UTC

.section .text
.align 8
_c4Cg1:
_c4Cg1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Cgc
_c4Cgb:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movl (%rax,%rbx,4),%eax
	movq $GHC.Word.W32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Cgc:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4Cg1, .-_c4Cg1


==================== Asm code ====================
2018-03-16 15:59:27.864962596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cg1_info:
	.quad	_c4Cg1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.867805327 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr_closure
.type GHC.Storable.readWord32OffPtr_closure, @object
GHC.Storable.readWord32OffPtr_closure:
	.quad	GHC.Storable.readWord32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.868541819 UTC

.section .text
.align 8
.globl GHC.Storable.readWord32OffPtr_entry
.type GHC.Storable.readWord32OffPtr_entry, @object
GHC.Storable.readWord32OffPtr_entry:
_c4Cgz:
	jmp GHC.Storable.readWord32OffPtr1_entry
	.size GHC.Storable.readWord32OffPtr_entry, .-GHC.Storable.readWord32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.869173888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr_info
.type GHC.Storable.readWord32OffPtr_info, @object
GHC.Storable.readWord32OffPtr_info:
	.quad	GHC.Storable.readWord32OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.87456966 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr1_closure
.type GHC.Storable.readInt64OffPtr1_closure, @object
GHC.Storable.readInt64OffPtr1_closure:
	.quad	GHC.Storable.readInt64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.875420312 UTC

.section .text
.align 8
.globl GHC.Storable.readInt64OffPtr1_entry
.type GHC.Storable.readInt64OffPtr1_entry, @object
GHC.Storable.readInt64OffPtr1_entry:
_c4CgN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CgW
_c4CgX:
	movq $block_c4CgK_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CgK
_c4CgL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CgW:
	movl $GHC.Storable.readInt64OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readInt64OffPtr1_entry, .-GHC.Storable.readInt64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.876093907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr1_info
.type GHC.Storable.readInt64OffPtr1_info, @object
GHC.Storable.readInt64OffPtr1_info:
	.quad	GHC.Storable.readInt64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.876780708 UTC

.section .text
.align 8
_c4CgK:
_c4CgK:
	movq $block_c4CgQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CgQ
_c4CgR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CgK, .-_c4CgK


==================== Asm code ====================
2018-03-16 15:59:27.877428491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CgK_info:
	.quad	_c4CgK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.878209207 UTC

.section .text
.align 8
_c4CgQ:
_c4CgQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4Ch1
_c4Ch0:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4Ch1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4CgQ, .-_c4CgQ


==================== Asm code ====================
2018-03-16 15:59:27.878861917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CgQ_info:
	.quad	_c4CgQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.881227181 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr_closure
.type GHC.Storable.readInt64OffPtr_closure, @object
GHC.Storable.readInt64OffPtr_closure:
	.quad	GHC.Storable.readInt64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.881954203 UTC

.section .text
.align 8
.globl GHC.Storable.readInt64OffPtr_entry
.type GHC.Storable.readInt64OffPtr_entry, @object
GHC.Storable.readInt64OffPtr_entry:
_c4Cho:
	jmp GHC.Storable.readInt64OffPtr1_entry
	.size GHC.Storable.readInt64OffPtr_entry, .-GHC.Storable.readInt64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.882556457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr_info
.type GHC.Storable.readInt64OffPtr_info, @object
GHC.Storable.readInt64OffPtr_info:
	.quad	GHC.Storable.readInt64OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.886830479 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr1_closure
.type GHC.Storable.readWord64OffPtr1_closure, @object
GHC.Storable.readWord64OffPtr1_closure:
	.quad	GHC.Storable.readWord64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.887738375 UTC

.section .text
.align 8
.globl GHC.Storable.readWord64OffPtr1_entry
.type GHC.Storable.readWord64OffPtr1_entry, @object
GHC.Storable.readWord64OffPtr1_entry:
_c4ChC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4ChL
_c4ChM:
	movq $block_c4Chz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4Chz
_c4ChA:
	movq (%rbx),%rax
	jmp *(%rax)
_c4ChL:
	movl $GHC.Storable.readWord64OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.readWord64OffPtr1_entry, .-GHC.Storable.readWord64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.888475455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr1_info
.type GHC.Storable.readWord64OffPtr1_info, @object
GHC.Storable.readWord64OffPtr1_info:
	.quad	GHC.Storable.readWord64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.889232757 UTC

.section .text
.align 8
_c4Chz:
_c4Chz:
	movq $block_c4ChF_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4ChF
_c4ChG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Chz, .-_c4Chz


==================== Asm code ====================
2018-03-16 15:59:27.890355872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Chz_info:
	.quad	_c4Chz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.89116709 UTC

.section .text
.align 8
_c4ChF:
_c4ChF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4ChQ
_c4ChP:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq $GHC.Word.W64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4ChQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c4ChF, .-_c4ChF


==================== Asm code ====================
2018-03-16 15:59:27.891889452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4ChF_info:
	.quad	_c4ChF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.894205991 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr_closure
.type GHC.Storable.readWord64OffPtr_closure, @object
GHC.Storable.readWord64OffPtr_closure:
	.quad	GHC.Storable.readWord64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.894920924 UTC

.section .text
.align 8
.globl GHC.Storable.readWord64OffPtr_entry
.type GHC.Storable.readWord64OffPtr_entry, @object
GHC.Storable.readWord64OffPtr_entry:
_c4Cid:
	jmp GHC.Storable.readWord64OffPtr1_entry
	.size GHC.Storable.readWord64OffPtr_entry, .-GHC.Storable.readWord64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.895546214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr_info
.type GHC.Storable.readWord64OffPtr_info, @object
GHC.Storable.readWord64OffPtr_info:
	.quad	GHC.Storable.readWord64OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:27.899715969 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr1_closure
.type GHC.Storable.writeWideCharOffPtr1_closure, @object
GHC.Storable.writeWideCharOffPtr1_closure:
	.quad	GHC.Storable.writeWideCharOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.900625377 UTC

.section .text
.align 8
.globl GHC.Storable.writeWideCharOffPtr1_entry
.type GHC.Storable.writeWideCharOffPtr1_entry, @object
GHC.Storable.writeWideCharOffPtr1_entry:
_c4Cir:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CiA
_c4CiB:
	movq $block_c4Cio_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cio
_c4Cip:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CiA:
	movl $GHC.Storable.writeWideCharOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWideCharOffPtr1_entry, .-GHC.Storable.writeWideCharOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.901413534 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr1_info
.type GHC.Storable.writeWideCharOffPtr1_info, @object
GHC.Storable.writeWideCharOffPtr1_info:
	.quad	GHC.Storable.writeWideCharOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.902117107 UTC

.section .text
.align 8
_c4Cio:
_c4Cio:
	movq $block_c4Ciu_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Ciu
_c4Civ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cio, .-_c4Cio


==================== Asm code ====================
2018-03-16 15:59:27.902776701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cio_info:
	.quad	_c4Cio
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.903489814 UTC

.section .text
.align 8
_c4Ciu:
_c4Ciu:
	movq $block_c4Ciz_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Ciz
_c4CiE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ciu, .-_c4Ciu


==================== Asm code ====================
2018-03-16 15:59:27.904133981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ciu_info:
	.quad	_c4Ciu
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.904841256 UTC

.section .text
.align 8
_c4Ciz:
_c4Ciz:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Ciz, .-_c4Ciz


==================== Asm code ====================
2018-03-16 15:59:27.905799572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ciz_info:
	.quad	_c4Ciz
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.90863391 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr_closure
.type GHC.Storable.writeWideCharOffPtr_closure, @object
GHC.Storable.writeWideCharOffPtr_closure:
	.quad	GHC.Storable.writeWideCharOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.909339119 UTC

.section .text
.align 8
.globl GHC.Storable.writeWideCharOffPtr_entry
.type GHC.Storable.writeWideCharOffPtr_entry, @object
GHC.Storable.writeWideCharOffPtr_entry:
_c4Cjb:
	jmp GHC.Storable.writeWideCharOffPtr1_entry
	.size GHC.Storable.writeWideCharOffPtr_entry, .-GHC.Storable.writeWideCharOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.909921835 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr_info
.type GHC.Storable.writeWideCharOffPtr_info, @object
GHC.Storable.writeWideCharOffPtr_info:
	.quad	GHC.Storable.writeWideCharOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.913933492 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr1_closure
.type GHC.Storable.writeIntOffPtr1_closure, @object
GHC.Storable.writeIntOffPtr1_closure:
	.quad	GHC.Storable.writeIntOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.91487099 UTC

.section .text
.align 8
.globl GHC.Storable.writeIntOffPtr1_entry
.type GHC.Storable.writeIntOffPtr1_entry, @object
GHC.Storable.writeIntOffPtr1_entry:
_c4Cjp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cjy
_c4Cjz:
	movq $block_c4Cjm_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cjm
_c4Cjn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cjy:
	movl $GHC.Storable.writeIntOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeIntOffPtr1_entry, .-GHC.Storable.writeIntOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.915544015 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr1_info
.type GHC.Storable.writeIntOffPtr1_info, @object
GHC.Storable.writeIntOffPtr1_info:
	.quad	GHC.Storable.writeIntOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.91627223 UTC

.section .text
.align 8
_c4Cjm:
_c4Cjm:
	movq $block_c4Cjs_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cjs
_c4Cjt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cjm, .-_c4Cjm


==================== Asm code ====================
2018-03-16 15:59:27.916878422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cjm_info:
	.quad	_c4Cjm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.91758535 UTC

.section .text
.align 8
_c4Cjs:
_c4Cjs:
	movq $block_c4Cjx_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cjx
_c4CjC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cjs, .-_c4Cjs


==================== Asm code ====================
2018-03-16 15:59:27.918164879 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cjs_info:
	.quad	_c4Cjs
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.918850903 UTC

.section .text
.align 8
_c4Cjx:
_c4Cjx:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cjx, .-_c4Cjx


==================== Asm code ====================
2018-03-16 15:59:27.919497041 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cjx_info:
	.quad	_c4Cjx
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.922037191 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr_closure
.type GHC.Storable.writeIntOffPtr_closure, @object
GHC.Storable.writeIntOffPtr_closure:
	.quad	GHC.Storable.writeIntOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.92274421 UTC

.section .text
.align 8
.globl GHC.Storable.writeIntOffPtr_entry
.type GHC.Storable.writeIntOffPtr_entry, @object
GHC.Storable.writeIntOffPtr_entry:
_c4Ck9:
	jmp GHC.Storable.writeIntOffPtr1_entry
	.size GHC.Storable.writeIntOffPtr_entry, .-GHC.Storable.writeIntOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.923402458 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr_info
.type GHC.Storable.writeIntOffPtr_info, @object
GHC.Storable.writeIntOffPtr_info:
	.quad	GHC.Storable.writeIntOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.929974235 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr1_closure
.type GHC.Storable.writeWordOffPtr1_closure, @object
GHC.Storable.writeWordOffPtr1_closure:
	.quad	GHC.Storable.writeWordOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.931192132 UTC

.section .text
.align 8
.globl GHC.Storable.writeWordOffPtr1_entry
.type GHC.Storable.writeWordOffPtr1_entry, @object
GHC.Storable.writeWordOffPtr1_entry:
_c4Ckn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Ckw
_c4Ckx:
	movq $block_c4Ckk_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Ckk
_c4Ckl:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Ckw:
	movl $GHC.Storable.writeWordOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWordOffPtr1_entry, .-GHC.Storable.writeWordOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.932184059 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr1_info
.type GHC.Storable.writeWordOffPtr1_info, @object
GHC.Storable.writeWordOffPtr1_info:
	.quad	GHC.Storable.writeWordOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.93323276 UTC

.section .text
.align 8
_c4Ckk:
_c4Ckk:
	movq $block_c4Ckq_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Ckq
_c4Ckr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ckk, .-_c4Ckk


==================== Asm code ====================
2018-03-16 15:59:27.934090585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ckk_info:
	.quad	_c4Ckk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.935183513 UTC

.section .text
.align 8
_c4Ckq:
_c4Ckq:
	movq $block_c4Ckv_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Ckv
_c4CkA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ckq, .-_c4Ckq


==================== Asm code ====================
2018-03-16 15:59:27.936065388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ckq_info:
	.quad	_c4Ckq
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.936989486 UTC

.section .text
.align 8
_c4Ckv:
_c4Ckv:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Ckv, .-_c4Ckv


==================== Asm code ====================
2018-03-16 15:59:27.938007944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ckv_info:
	.quad	_c4Ckv
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.941718401 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr_closure
.type GHC.Storable.writeWordOffPtr_closure, @object
GHC.Storable.writeWordOffPtr_closure:
	.quad	GHC.Storable.writeWordOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.942715833 UTC

.section .text
.align 8
.globl GHC.Storable.writeWordOffPtr_entry
.type GHC.Storable.writeWordOffPtr_entry, @object
GHC.Storable.writeWordOffPtr_entry:
_c4Cl7:
	jmp GHC.Storable.writeWordOffPtr1_entry
	.size GHC.Storable.writeWordOffPtr_entry, .-GHC.Storable.writeWordOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.943607001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr_info
.type GHC.Storable.writeWordOffPtr_info, @object
GHC.Storable.writeWordOffPtr_info:
	.quad	GHC.Storable.writeWordOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.949804097 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr1_closure
.type GHC.Storable.writePtrOffPtr1_closure, @object
GHC.Storable.writePtrOffPtr1_closure:
	.quad	GHC.Storable.writePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.951201218 UTC

.section .text
.align 8
.globl GHC.Storable.writePtrOffPtr1_entry
.type GHC.Storable.writePtrOffPtr1_entry, @object
GHC.Storable.writePtrOffPtr1_entry:
_c4Cll:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Clu
_c4Clv:
	movq $block_c4Cli_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cli
_c4Clj:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Clu:
	movl $GHC.Storable.writePtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writePtrOffPtr1_entry, .-GHC.Storable.writePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.951906428 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr1_info
.type GHC.Storable.writePtrOffPtr1_info, @object
GHC.Storable.writePtrOffPtr1_info:
	.quad	GHC.Storable.writePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.952739921 UTC

.section .text
.align 8
_c4Cli:
_c4Cli:
	movq $block_c4Clo_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Clo
_c4Clp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cli, .-_c4Cli


==================== Asm code ====================
2018-03-16 15:59:27.953406203 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cli_info:
	.quad	_c4Cli
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.954162773 UTC

.section .text
.align 8
_c4Clo:
_c4Clo:
	movq $block_c4Clt_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Clt
_c4Cly:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Clo, .-_c4Clo


==================== Asm code ====================
2018-03-16 15:59:27.954754375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Clo_info:
	.quad	_c4Clo
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.955365068 UTC

.section .text
.align 8
_c4Clt:
_c4Clt:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Clt, .-_c4Clt


==================== Asm code ====================
2018-03-16 15:59:27.956129124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Clt_info:
	.quad	_c4Clt
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.958602778 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr_closure
.type GHC.Storable.writePtrOffPtr_closure, @object
GHC.Storable.writePtrOffPtr_closure:
	.quad	GHC.Storable.writePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.959225919 UTC

.section .text
.align 8
.globl GHC.Storable.writePtrOffPtr_entry
.type GHC.Storable.writePtrOffPtr_entry, @object
GHC.Storable.writePtrOffPtr_entry:
_c4Cm5:
	jmp GHC.Storable.writePtrOffPtr1_entry
	.size GHC.Storable.writePtrOffPtr_entry, .-GHC.Storable.writePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.959791008 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr_info
.type GHC.Storable.writePtrOffPtr_info, @object
GHC.Storable.writePtrOffPtr_info:
	.quad	GHC.Storable.writePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.96390292 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr1_closure
.type GHC.Storable.writeFunPtrOffPtr1_closure, @object
GHC.Storable.writeFunPtrOffPtr1_closure:
	.quad	GHC.Storable.writeFunPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.964805293 UTC

.section .text
.align 8
.globl GHC.Storable.writeFunPtrOffPtr1_entry
.type GHC.Storable.writeFunPtrOffPtr1_entry, @object
GHC.Storable.writeFunPtrOffPtr1_entry:
_c4Cmj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cms
_c4Cmt:
	movq $block_c4Cmg_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cmg
_c4Cmh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cms:
	movl $GHC.Storable.writeFunPtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeFunPtrOffPtr1_entry, .-GHC.Storable.writeFunPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.965598842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr1_info
.type GHC.Storable.writeFunPtrOffPtr1_info, @object
GHC.Storable.writeFunPtrOffPtr1_info:
	.quad	GHC.Storable.writeFunPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.966298164 UTC

.section .text
.align 8
_c4Cmg:
_c4Cmg:
	movq $block_c4Cmm_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cmm
_c4Cmn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cmg, .-_c4Cmg


==================== Asm code ====================
2018-03-16 15:59:27.966922618 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cmg_info:
	.quad	_c4Cmg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.967733252 UTC

.section .text
.align 8
_c4Cmm:
_c4Cmm:
	movq $block_c4Cmr_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cmr
_c4Cmw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cmm, .-_c4Cmm


==================== Asm code ====================
2018-03-16 15:59:27.968387556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cmm_info:
	.quad	_c4Cmm
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.97004636 UTC

.section .text
.align 8
_c4Cmr:
_c4Cmr:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cmr, .-_c4Cmr


==================== Asm code ====================
2018-03-16 15:59:27.970650691 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cmr_info:
	.quad	_c4Cmr
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.973083026 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr_closure
.type GHC.Storable.writeFunPtrOffPtr_closure, @object
GHC.Storable.writeFunPtrOffPtr_closure:
	.quad	GHC.Storable.writeFunPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.973913248 UTC

.section .text
.align 8
.globl GHC.Storable.writeFunPtrOffPtr_entry
.type GHC.Storable.writeFunPtrOffPtr_entry, @object
GHC.Storable.writeFunPtrOffPtr_entry:
_c4Cn3:
	jmp GHC.Storable.writeFunPtrOffPtr1_entry
	.size GHC.Storable.writeFunPtrOffPtr_entry, .-GHC.Storable.writeFunPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.974435779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr_info
.type GHC.Storable.writeFunPtrOffPtr_info, @object
GHC.Storable.writeFunPtrOffPtr_info:
	.quad	GHC.Storable.writeFunPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.978610439 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr1_closure
.type GHC.Storable.writeFloatOffPtr1_closure, @object
GHC.Storable.writeFloatOffPtr1_closure:
	.quad	GHC.Storable.writeFloatOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.979544045 UTC

.section .text
.align 8
.globl GHC.Storable.writeFloatOffPtr1_entry
.type GHC.Storable.writeFloatOffPtr1_entry, @object
GHC.Storable.writeFloatOffPtr1_entry:
_c4Cnh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cnq
_c4Cnr:
	movq $block_c4Cne_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cne
_c4Cnf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cnq:
	movl $GHC.Storable.writeFloatOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeFloatOffPtr1_entry, .-GHC.Storable.writeFloatOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.980262354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr1_info
.type GHC.Storable.writeFloatOffPtr1_info, @object
GHC.Storable.writeFloatOffPtr1_info:
	.quad	GHC.Storable.writeFloatOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.980973719 UTC

.section .text
.align 8
_c4Cne:
_c4Cne:
	movq $block_c4Cnk_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cnk
_c4Cnl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cne, .-_c4Cne


==================== Asm code ====================
2018-03-16 15:59:27.981840781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cne_info:
	.quad	_c4Cne
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.982581854 UTC

.section .text
.align 8
_c4Cnk:
_c4Cnk:
	movq $block_c4Cnp_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cnp
_c4Cnu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cnk, .-_c4Cnk


==================== Asm code ====================
2018-03-16 15:59:27.98318281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cnk_info:
	.quad	_c4Cnk
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.983878334 UTC

.section .text
.align 8
_c4Cnp:
_c4Cnp:
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movss %xmm0,(%rax,%rbx,4)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cnp, .-_c4Cnp


==================== Asm code ====================
2018-03-16 15:59:27.984476512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cnp_info:
	.quad	_c4Cnp
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.986949505 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr_closure
.type GHC.Storable.writeFloatOffPtr_closure, @object
GHC.Storable.writeFloatOffPtr_closure:
	.quad	GHC.Storable.writeFloatOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:27.988040527 UTC

.section .text
.align 8
.globl GHC.Storable.writeFloatOffPtr_entry
.type GHC.Storable.writeFloatOffPtr_entry, @object
GHC.Storable.writeFloatOffPtr_entry:
_c4Co1:
	jmp GHC.Storable.writeFloatOffPtr1_entry
	.size GHC.Storable.writeFloatOffPtr_entry, .-GHC.Storable.writeFloatOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:27.988659611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr_info
.type GHC.Storable.writeFloatOffPtr_info, @object
GHC.Storable.writeFloatOffPtr_info:
	.quad	GHC.Storable.writeFloatOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.992569334 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr1_closure
.type GHC.Storable.writeDoubleOffPtr1_closure, @object
GHC.Storable.writeDoubleOffPtr1_closure:
	.quad	GHC.Storable.writeDoubleOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:27.993478871 UTC

.section .text
.align 8
.globl GHC.Storable.writeDoubleOffPtr1_entry
.type GHC.Storable.writeDoubleOffPtr1_entry, @object
GHC.Storable.writeDoubleOffPtr1_entry:
_c4Cof:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Coo
_c4Cop:
	movq $block_c4Coc_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Coc
_c4Cod:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Coo:
	movl $GHC.Storable.writeDoubleOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeDoubleOffPtr1_entry, .-GHC.Storable.writeDoubleOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:27.994270514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr1_info
.type GHC.Storable.writeDoubleOffPtr1_info, @object
GHC.Storable.writeDoubleOffPtr1_info:
	.quad	GHC.Storable.writeDoubleOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:27.995114125 UTC

.section .text
.align 8
_c4Coc:
_c4Coc:
	movq $block_c4Coi_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Coi
_c4Coj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Coc, .-_c4Coc


==================== Asm code ====================
2018-03-16 15:59:27.995703855 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Coc_info:
	.quad	_c4Coc
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.996432357 UTC

.section .text
.align 8
_c4Coi:
_c4Coi:
	movq $block_c4Con_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Con
_c4Cos:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Coi, .-_c4Coi


==================== Asm code ====================
2018-03-16 15:59:27.997323072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Coi_info:
	.quad	_c4Coi
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:27.998196527 UTC

.section .text
.align 8
_c4Con:
_c4Con:
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movsd %xmm0,(%rax,%rbx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Con, .-_c4Con


==================== Asm code ====================
2018-03-16 15:59:27.998779794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Con_info:
	.quad	_c4Con
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.000983092 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr_closure
.type GHC.Storable.writeDoubleOffPtr_closure, @object
GHC.Storable.writeDoubleOffPtr_closure:
	.quad	GHC.Storable.writeDoubleOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.001694667 UTC

.section .text
.align 8
.globl GHC.Storable.writeDoubleOffPtr_entry
.type GHC.Storable.writeDoubleOffPtr_entry, @object
GHC.Storable.writeDoubleOffPtr_entry:
_c4CoZ:
	jmp GHC.Storable.writeDoubleOffPtr1_entry
	.size GHC.Storable.writeDoubleOffPtr_entry, .-GHC.Storable.writeDoubleOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.002304732 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr_info
.type GHC.Storable.writeDoubleOffPtr_info, @object
GHC.Storable.writeDoubleOffPtr_info:
	.quad	GHC.Storable.writeDoubleOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.006863069 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr1_closure
.type GHC.Storable.writeStablePtrOffPtr1_closure, @object
GHC.Storable.writeStablePtrOffPtr1_closure:
	.quad	GHC.Storable.writeStablePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.0077797 UTC

.section .text
.align 8
.globl GHC.Storable.writeStablePtrOffPtr1_entry
.type GHC.Storable.writeStablePtrOffPtr1_entry, @object
GHC.Storable.writeStablePtrOffPtr1_entry:
_c4Cpd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cpm
_c4Cpn:
	movq $block_c4Cpa_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cpa
_c4Cpb:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cpm:
	movl $GHC.Storable.writeStablePtrOffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeStablePtrOffPtr1_entry, .-GHC.Storable.writeStablePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.008447921 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr1_info
.type GHC.Storable.writeStablePtrOffPtr1_info, @object
GHC.Storable.writeStablePtrOffPtr1_info:
	.quad	GHC.Storable.writeStablePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.009105609 UTC

.section .text
.align 8
_c4Cpa:
_c4Cpa:
	movq $block_c4Cpg_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cpg
_c4Cph:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cpa, .-_c4Cpa


==================== Asm code ====================
2018-03-16 15:59:28.009824363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cpa_info:
	.quad	_c4Cpa
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.01051449 UTC

.section .text
.align 8
_c4Cpg:
_c4Cpg:
	movq $block_c4Cpl_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cpl
_c4Cpq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cpg, .-_c4Cpg


==================== Asm code ====================
2018-03-16 15:59:28.011092051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cpg_info:
	.quad	_c4Cpg
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.011742131 UTC

.section .text
.align 8
_c4Cpl:
_c4Cpl:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cpl, .-_c4Cpl


==================== Asm code ====================
2018-03-16 15:59:28.012330431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cpl_info:
	.quad	_c4Cpl
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.014635099 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr_closure
.type GHC.Storable.writeStablePtrOffPtr_closure, @object
GHC.Storable.writeStablePtrOffPtr_closure:
	.quad	GHC.Storable.writeStablePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.015276644 UTC

.section .text
.align 8
.globl GHC.Storable.writeStablePtrOffPtr_entry
.type GHC.Storable.writeStablePtrOffPtr_entry, @object
GHC.Storable.writeStablePtrOffPtr_entry:
_c4CpX:
	jmp GHC.Storable.writeStablePtrOffPtr1_entry
	.size GHC.Storable.writeStablePtrOffPtr_entry, .-GHC.Storable.writeStablePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.015860449 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr_info
.type GHC.Storable.writeStablePtrOffPtr_info, @object
GHC.Storable.writeStablePtrOffPtr_info:
	.quad	GHC.Storable.writeStablePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.019951707 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr1_closure
.type GHC.Storable.writeInt8OffPtr1_closure, @object
GHC.Storable.writeInt8OffPtr1_closure:
	.quad	GHC.Storable.writeInt8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.020787405 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt8OffPtr1_entry
.type GHC.Storable.writeInt8OffPtr1_entry, @object
GHC.Storable.writeInt8OffPtr1_entry:
_c4Cqb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cqk
_c4Cql:
	movq $block_c4Cq8_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cq8
_c4Cq9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cqk:
	movl $GHC.Storable.writeInt8OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt8OffPtr1_entry, .-GHC.Storable.writeInt8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.021963235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr1_info
.type GHC.Storable.writeInt8OffPtr1_info, @object
GHC.Storable.writeInt8OffPtr1_info:
	.quad	GHC.Storable.writeInt8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.022652377 UTC

.section .text
.align 8
_c4Cq8:
_c4Cq8:
	movq $block_c4Cqe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cqe
_c4Cqf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cq8, .-_c4Cq8


==================== Asm code ====================
2018-03-16 15:59:28.023275674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cq8_info:
	.quad	_c4Cq8
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.023957813 UTC

.section .text
.align 8
_c4Cqe:
_c4Cqe:
	movq $block_c4Cqj_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cqj
_c4Cqo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cqe, .-_c4Cqe


==================== Asm code ====================
2018-03-16 15:59:28.025057345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cqe_info:
	.quad	_c4Cqe
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.025794372 UTC

.section .text
.align 8
_c4Cqj:
_c4Cqj:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb %al,(%rbx,%rcx,1)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cqj, .-_c4Cqj


==================== Asm code ====================
2018-03-16 15:59:28.026412062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cqj_info:
	.quad	_c4Cqj
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.028735739 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr_closure
.type GHC.Storable.writeInt8OffPtr_closure, @object
GHC.Storable.writeInt8OffPtr_closure:
	.quad	GHC.Storable.writeInt8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.029442681 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt8OffPtr_entry
.type GHC.Storable.writeInt8OffPtr_entry, @object
GHC.Storable.writeInt8OffPtr_entry:
_c4CqV:
	jmp GHC.Storable.writeInt8OffPtr1_entry
	.size GHC.Storable.writeInt8OffPtr_entry, .-GHC.Storable.writeInt8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.030025731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr_info
.type GHC.Storable.writeInt8OffPtr_info, @object
GHC.Storable.writeInt8OffPtr_info:
	.quad	GHC.Storable.writeInt8OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.034547373 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr1_closure
.type GHC.Storable.writeWord8OffPtr1_closure, @object
GHC.Storable.writeWord8OffPtr1_closure:
	.quad	GHC.Storable.writeWord8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.035427811 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord8OffPtr1_entry
.type GHC.Storable.writeWord8OffPtr1_entry, @object
GHC.Storable.writeWord8OffPtr1_entry:
_c4Cr9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cri
_c4Crj:
	movq $block_c4Cr6_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cr6
_c4Cr7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cri:
	movl $GHC.Storable.writeWord8OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord8OffPtr1_entry, .-GHC.Storable.writeWord8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.036116906 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr1_info
.type GHC.Storable.writeWord8OffPtr1_info, @object
GHC.Storable.writeWord8OffPtr1_info:
	.quad	GHC.Storable.writeWord8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.036906517 UTC

.section .text
.align 8
_c4Cr6:
_c4Cr6:
	movq $block_c4Crc_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Crc
_c4Crd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cr6, .-_c4Cr6


==================== Asm code ====================
2018-03-16 15:59:28.037592245 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cr6_info:
	.quad	_c4Cr6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.038230585 UTC

.section .text
.align 8
_c4Crc:
_c4Crc:
	movq $block_c4Crh_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Crh
_c4Crm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Crc, .-_c4Crc


==================== Asm code ====================
2018-03-16 15:59:28.038830762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Crc_info:
	.quad	_c4Crc
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.03949701 UTC

.section .text
.align 8
_c4Crh:
_c4Crh:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb %al,(%rbx,%rcx,1)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Crh, .-_c4Crh


==================== Asm code ====================
2018-03-16 15:59:28.040143188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Crh_info:
	.quad	_c4Crh
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.043105605 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr_closure
.type GHC.Storable.writeWord8OffPtr_closure, @object
GHC.Storable.writeWord8OffPtr_closure:
	.quad	GHC.Storable.writeWord8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.043749261 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord8OffPtr_entry
.type GHC.Storable.writeWord8OffPtr_entry, @object
GHC.Storable.writeWord8OffPtr_entry:
_c4CrT:
	jmp GHC.Storable.writeWord8OffPtr1_entry
	.size GHC.Storable.writeWord8OffPtr_entry, .-GHC.Storable.writeWord8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.044317902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr_info
.type GHC.Storable.writeWord8OffPtr_info, @object
GHC.Storable.writeWord8OffPtr_info:
	.quad	GHC.Storable.writeWord8OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.048199537 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr1_closure
.type GHC.Storable.writeInt16OffPtr1_closure, @object
GHC.Storable.writeInt16OffPtr1_closure:
	.quad	GHC.Storable.writeInt16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.049074734 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt16OffPtr1_entry
.type GHC.Storable.writeInt16OffPtr1_entry, @object
GHC.Storable.writeInt16OffPtr1_entry:
_c4Cs7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Csg
_c4Csh:
	movq $block_c4Cs4_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cs4
_c4Cs5:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Csg:
	movl $GHC.Storable.writeInt16OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt16OffPtr1_entry, .-GHC.Storable.writeInt16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.049794411 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr1_info
.type GHC.Storable.writeInt16OffPtr1_info, @object
GHC.Storable.writeInt16OffPtr1_info:
	.quad	GHC.Storable.writeInt16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.050475412 UTC

.section .text
.align 8
_c4Cs4:
_c4Cs4:
	movq $block_c4Csa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Csa
_c4Csb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cs4, .-_c4Cs4


==================== Asm code ====================
2018-03-16 15:59:28.051070955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cs4_info:
	.quad	_c4Cs4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.051760853 UTC

.section .text
.align 8
_c4Csa:
_c4Csa:
	movq $block_c4Csf_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Csf
_c4Csk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Csa, .-_c4Csa


==================== Asm code ====================
2018-03-16 15:59:28.052346001 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Csa_info:
	.quad	_c4Csa
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.053026352 UTC

.section .text
.align 8
_c4Csf:
_c4Csf:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movw %ax,(%rbx,%rcx,2)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Csf, .-_c4Csf


==================== Asm code ====================
2018-03-16 15:59:28.053694043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Csf_info:
	.quad	_c4Csf
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.056115767 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr_closure
.type GHC.Storable.writeInt16OffPtr_closure, @object
GHC.Storable.writeInt16OffPtr_closure:
	.quad	GHC.Storable.writeInt16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.056793124 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt16OffPtr_entry
.type GHC.Storable.writeInt16OffPtr_entry, @object
GHC.Storable.writeInt16OffPtr_entry:
_c4CsR:
	jmp GHC.Storable.writeInt16OffPtr1_entry
	.size GHC.Storable.writeInt16OffPtr_entry, .-GHC.Storable.writeInt16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.057482533 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr_info
.type GHC.Storable.writeInt16OffPtr_info, @object
GHC.Storable.writeInt16OffPtr_info:
	.quad	GHC.Storable.writeInt16OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.062489755 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr1_closure
.type GHC.Storable.writeWord16OffPtr1_closure, @object
GHC.Storable.writeWord16OffPtr1_closure:
	.quad	GHC.Storable.writeWord16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.06331299 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord16OffPtr1_entry
.type GHC.Storable.writeWord16OffPtr1_entry, @object
GHC.Storable.writeWord16OffPtr1_entry:
_c4Ct5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cte
_c4Ctf:
	movq $block_c4Ct2_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Ct2
_c4Ct3:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cte:
	movl $GHC.Storable.writeWord16OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord16OffPtr1_entry, .-GHC.Storable.writeWord16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.064077472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr1_info
.type GHC.Storable.writeWord16OffPtr1_info, @object
GHC.Storable.writeWord16OffPtr1_info:
	.quad	GHC.Storable.writeWord16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.064755169 UTC

.section .text
.align 8
_c4Ct2:
_c4Ct2:
	movq $block_c4Ct8_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Ct8
_c4Ct9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ct2, .-_c4Ct2


==================== Asm code ====================
2018-03-16 15:59:28.065421184 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ct2_info:
	.quad	_c4Ct2
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.066043208 UTC

.section .text
.align 8
_c4Ct8:
_c4Ct8:
	movq $block_c4Ctd_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Ctd
_c4Cti:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Ct8, .-_c4Ct8


==================== Asm code ====================
2018-03-16 15:59:28.06664213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ct8_info:
	.quad	_c4Ct8
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.067314518 UTC

.section .text
.align 8
_c4Ctd:
_c4Ctd:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movw %ax,(%rbx,%rcx,2)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Ctd, .-_c4Ctd


==================== Asm code ====================
2018-03-16 15:59:28.067935212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Ctd_info:
	.quad	_c4Ctd
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.070314126 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr_closure
.type GHC.Storable.writeWord16OffPtr_closure, @object
GHC.Storable.writeWord16OffPtr_closure:
	.quad	GHC.Storable.writeWord16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.070989087 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord16OffPtr_entry
.type GHC.Storable.writeWord16OffPtr_entry, @object
GHC.Storable.writeWord16OffPtr_entry:
_c4CtP:
	jmp GHC.Storable.writeWord16OffPtr1_entry
	.size GHC.Storable.writeWord16OffPtr_entry, .-GHC.Storable.writeWord16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.071671885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr_info
.type GHC.Storable.writeWord16OffPtr_info, @object
GHC.Storable.writeWord16OffPtr_info:
	.quad	GHC.Storable.writeWord16OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.075757566 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr1_closure
.type GHC.Storable.writeInt32OffPtr1_closure, @object
GHC.Storable.writeInt32OffPtr1_closure:
	.quad	GHC.Storable.writeInt32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.076661669 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt32OffPtr1_entry
.type GHC.Storable.writeInt32OffPtr1_entry, @object
GHC.Storable.writeInt32OffPtr1_entry:
_c4Cu3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cuc
_c4Cud:
	movq $block_c4Cu0_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4Cu0
_c4Cu1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cuc:
	movl $GHC.Storable.writeInt32OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt32OffPtr1_entry, .-GHC.Storable.writeInt32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.078419579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr1_info
.type GHC.Storable.writeInt32OffPtr1_info, @object
GHC.Storable.writeInt32OffPtr1_info:
	.quad	GHC.Storable.writeInt32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.080078528 UTC

.section .text
.align 8
_c4Cu0:
_c4Cu0:
	movq $block_c4Cu6_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cu6
_c4Cu7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cu0, .-_c4Cu0


==================== Asm code ====================
2018-03-16 15:59:28.080939507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cu0_info:
	.quad	_c4Cu0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.081966024 UTC

.section .text
.align 8
_c4Cu6:
_c4Cu6:
	movq $block_c4Cub_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cub
_c4Cug:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cu6, .-_c4Cu6


==================== Asm code ====================
2018-03-16 15:59:28.082804056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cu6_info:
	.quad	_c4Cu6
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.083738214 UTC

.section .text
.align 8
_c4Cub:
_c4Cub:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cub, .-_c4Cub


==================== Asm code ====================
2018-03-16 15:59:28.084432301 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cub_info:
	.quad	_c4Cub
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.086779139 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr_closure
.type GHC.Storable.writeInt32OffPtr_closure, @object
GHC.Storable.writeInt32OffPtr_closure:
	.quad	GHC.Storable.writeInt32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.087488456 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt32OffPtr_entry
.type GHC.Storable.writeInt32OffPtr_entry, @object
GHC.Storable.writeInt32OffPtr_entry:
_c4CuN:
	jmp GHC.Storable.writeInt32OffPtr1_entry
	.size GHC.Storable.writeInt32OffPtr_entry, .-GHC.Storable.writeInt32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.088051707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr_info
.type GHC.Storable.writeInt32OffPtr_info, @object
GHC.Storable.writeInt32OffPtr_info:
	.quad	GHC.Storable.writeInt32OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.092039134 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr1_closure
.type GHC.Storable.writeWord32OffPtr1_closure, @object
GHC.Storable.writeWord32OffPtr1_closure:
	.quad	GHC.Storable.writeWord32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.092957354 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord32OffPtr1_entry
.type GHC.Storable.writeWord32OffPtr1_entry, @object
GHC.Storable.writeWord32OffPtr1_entry:
_c4Cv1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cva
_c4Cvb:
	movq $block_c4CuY_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CuY
_c4CuZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cva:
	movl $GHC.Storable.writeWord32OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord32OffPtr1_entry, .-GHC.Storable.writeWord32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.09370767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr1_info
.type GHC.Storable.writeWord32OffPtr1_info, @object
GHC.Storable.writeWord32OffPtr1_info:
	.quad	GHC.Storable.writeWord32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.094469956 UTC

.section .text
.align 8
_c4CuY:
_c4CuY:
	movq $block_c4Cv4_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cv4
_c4Cv5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CuY, .-_c4CuY


==================== Asm code ====================
2018-03-16 15:59:28.095126988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CuY_info:
	.quad	_c4CuY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.095922687 UTC

.section .text
.align 8
_c4Cv4:
_c4Cv4:
	movq $block_c4Cv9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cv9
_c4Cve:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cv4, .-_c4Cv4


==================== Asm code ====================
2018-03-16 15:59:28.096594898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cv4_info:
	.quad	_c4Cv4
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.097386641 UTC

.section .text
.align 8
_c4Cv9:
_c4Cv9:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cv9, .-_c4Cv9


==================== Asm code ====================
2018-03-16 15:59:28.098488644 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cv9_info:
	.quad	_c4Cv9
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.100894685 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr_closure
.type GHC.Storable.writeWord32OffPtr_closure, @object
GHC.Storable.writeWord32OffPtr_closure:
	.quad	GHC.Storable.writeWord32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.101625906 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord32OffPtr_entry
.type GHC.Storable.writeWord32OffPtr_entry, @object
GHC.Storable.writeWord32OffPtr_entry:
_c4CvL:
	jmp GHC.Storable.writeWord32OffPtr1_entry
	.size GHC.Storable.writeWord32OffPtr_entry, .-GHC.Storable.writeWord32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.102178441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr_info
.type GHC.Storable.writeWord32OffPtr_info, @object
GHC.Storable.writeWord32OffPtr_info:
	.quad	GHC.Storable.writeWord32OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.106930653 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr1_closure
.type GHC.Storable.writeInt64OffPtr1_closure, @object
GHC.Storable.writeInt64OffPtr1_closure:
	.quad	GHC.Storable.writeInt64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.108319195 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt64OffPtr1_entry
.type GHC.Storable.writeInt64OffPtr1_entry, @object
GHC.Storable.writeInt64OffPtr1_entry:
_c4CvZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cw8
_c4Cw9:
	movq $block_c4CvW_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CvW
_c4CvX:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cw8:
	movl $GHC.Storable.writeInt64OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt64OffPtr1_entry, .-GHC.Storable.writeInt64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.109373661 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr1_info
.type GHC.Storable.writeInt64OffPtr1_info, @object
GHC.Storable.writeInt64OffPtr1_info:
	.quad	GHC.Storable.writeInt64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.110122511 UTC

.section .text
.align 8
_c4CvW:
_c4CvW:
	movq $block_c4Cw2_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cw2
_c4Cw3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CvW, .-_c4CvW


==================== Asm code ====================
2018-03-16 15:59:28.110747276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CvW_info:
	.quad	_c4CvW
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.111444159 UTC

.section .text
.align 8
_c4Cw2:
_c4Cw2:
	movq $block_c4Cw7_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cw7
_c4Cwc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cw2, .-_c4Cw2


==================== Asm code ====================
2018-03-16 15:59:28.112094696 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cw2_info:
	.quad	_c4Cw2
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.112783863 UTC

.section .text
.align 8
_c4Cw7:
_c4Cw7:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cw7, .-_c4Cw7


==================== Asm code ====================
2018-03-16 15:59:28.113452846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cw7_info:
	.quad	_c4Cw7
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.115984243 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr_closure
.type GHC.Storable.writeInt64OffPtr_closure, @object
GHC.Storable.writeInt64OffPtr_closure:
	.quad	GHC.Storable.writeInt64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.117065774 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt64OffPtr_entry
.type GHC.Storable.writeInt64OffPtr_entry, @object
GHC.Storable.writeInt64OffPtr_entry:
_c4CwJ:
	jmp GHC.Storable.writeInt64OffPtr1_entry
	.size GHC.Storable.writeInt64OffPtr_entry, .-GHC.Storable.writeInt64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.11770743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr_info
.type GHC.Storable.writeInt64OffPtr_info, @object
GHC.Storable.writeInt64OffPtr_info:
	.quad	GHC.Storable.writeInt64OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.121761264 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr1_closure
.type GHC.Storable.writeWord64OffPtr1_closure, @object
GHC.Storable.writeWord64OffPtr1_closure:
	.quad	GHC.Storable.writeWord64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:28.122651677 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord64OffPtr1_entry
.type GHC.Storable.writeWord64OffPtr1_entry, @object
GHC.Storable.writeWord64OffPtr1_entry:
_c4CwX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4Cx6
_c4Cx7:
	movq $block_c4CwU_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CwU
_c4CwV:
	movq (%rbx),%rax
	jmp *(%rax)
_c4Cx6:
	movl $GHC.Storable.writeWord64OffPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord64OffPtr1_entry, .-GHC.Storable.writeWord64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:28.123332315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr1_info
.type GHC.Storable.writeWord64OffPtr1_info, @object
GHC.Storable.writeWord64OffPtr1_info:
	.quad	GHC.Storable.writeWord64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.123995935 UTC

.section .text
.align 8
_c4CwU:
_c4CwU:
	movq $block_c4Cx0_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4Cx0
_c4Cx1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CwU, .-_c4CwU


==================== Asm code ====================
2018-03-16 15:59:28.124635212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CwU_info:
	.quad	_c4CwU
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.125354564 UTC

.section .text
.align 8
_c4Cx0:
_c4Cx0:
	movq $block_c4Cx5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4Cx5
_c4Cxa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4Cx0, .-_c4Cx0


==================== Asm code ====================
2018-03-16 15:59:28.125954538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cx0_info:
	.quad	_c4Cx0
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.126612912 UTC

.section .text
.align 8
_c4Cx5:
_c4Cx5:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4Cx5, .-_c4Cx5


==================== Asm code ====================
2018-03-16 15:59:28.127194345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4Cx5_info:
	.quad	_c4Cx5
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:28.12968253 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr_closure
.type GHC.Storable.writeWord64OffPtr_closure, @object
GHC.Storable.writeWord64OffPtr_closure:
	.quad	GHC.Storable.writeWord64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:28.130383779 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord64OffPtr_entry
.type GHC.Storable.writeWord64OffPtr_entry, @object
GHC.Storable.writeWord64OffPtr_entry:
_c4CxH:
	jmp GHC.Storable.writeWord64OffPtr1_entry
	.size GHC.Storable.writeWord64OffPtr_entry, .-GHC.Storable.writeWord64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:28.130985697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr_info
.type GHC.Storable.writeWord64OffPtr_info, @object
GHC.Storable.writeWord64OffPtr_info:
	.quad	GHC.Storable.writeWord64OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:28.132907852 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Storable.$trModule4_bytes
.type GHC.Storable.$trModule4_bytes, @object
GHC.Storable.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:28.136121452 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule3_closure
.type GHC.Storable.$trModule3_closure, @object
GHC.Storable.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Storable.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:28.137938026 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Storable.$trModule2_bytes
.type GHC.Storable.$trModule2_bytes, @object
GHC.Storable.$trModule2_bytes:
	.asciz "GHC.Storable"


==================== Asm code ====================
2018-03-16 15:59:28.139651462 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule1_closure
.type GHC.Storable.$trModule1_closure, @object
GHC.Storable.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Storable.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:28.141607443 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule_closure
.type GHC.Storable.$trModule_closure, @object
GHC.Storable.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Storable.$trModule3_closure+1
	.quad	GHC.Storable.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:28.143251895 UTC

.section .data.rel.ro
.align 8
.align 1
S4BO7_srt:


==================== Asm code ====================
2018-03-16 15:59:29.446945273 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr1_closure
.type GHC.Storable.readWideCharOffPtr1_closure, @object
GHC.Storable.readWideCharOffPtr1_closure:
	.quad	GHC.Storable.readWideCharOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.447833581 UTC

.section .text
.align 8
.globl GHC.Storable.readWideCharOffPtr1_entry
.type GHC.Storable.readWideCharOffPtr1_entry, @object
GHC.Storable.readWideCharOffPtr1_entry:
_c4CDH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CDQ
_c4CDR:
	leaq block_c4CDE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CDE
_c4CDF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CDQ:
	leaq GHC.Storable.readWideCharOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWideCharOffPtr1_entry, .-GHC.Storable.readWideCharOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.448526453 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr1_info
.type GHC.Storable.readWideCharOffPtr1_info, @object
GHC.Storable.readWideCharOffPtr1_info:
	.quad	GHC.Storable.readWideCharOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.449221105 UTC

.section .text
.align 8
_c4CDE:
_c4CDE:
	leaq block_c4CDK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CDK
_c4CDL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CDE, .-_c4CDE


==================== Asm code ====================
2018-03-16 15:59:29.449876438 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CDE_info:
	.quad	_c4CDE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.450617826 UTC

.section .text
.align 8
_c4CDK:
_c4CDK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CDV
_c4CDU:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movl (%rax,%rbx,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CDV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CDK, .-_c4CDK


==================== Asm code ====================
2018-03-16 15:59:29.451265311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CDK_info:
	.quad	_c4CDK
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.453549031 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr_closure
.type GHC.Storable.readWideCharOffPtr_closure, @object
GHC.Storable.readWideCharOffPtr_closure:
	.quad	GHC.Storable.readWideCharOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.454224217 UTC

.section .text
.align 8
.globl GHC.Storable.readWideCharOffPtr_entry
.type GHC.Storable.readWideCharOffPtr_entry, @object
GHC.Storable.readWideCharOffPtr_entry:
_c4CEl:
	jmp GHC.Storable.readWideCharOffPtr1_entry
	.size GHC.Storable.readWideCharOffPtr_entry, .-GHC.Storable.readWideCharOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.454790789 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWideCharOffPtr_info
.type GHC.Storable.readWideCharOffPtr_info, @object
GHC.Storable.readWideCharOffPtr_info:
	.quad	GHC.Storable.readWideCharOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.458440581 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr1_closure
.type GHC.Storable.readIntOffPtr1_closure, @object
GHC.Storable.readIntOffPtr1_closure:
	.quad	GHC.Storable.readIntOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.459304835 UTC

.section .text
.align 8
.globl GHC.Storable.readIntOffPtr1_entry
.type GHC.Storable.readIntOffPtr1_entry, @object
GHC.Storable.readIntOffPtr1_entry:
_c4CEz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CEI
_c4CEJ:
	leaq block_c4CEw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CEw
_c4CEx:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CEI:
	leaq GHC.Storable.readIntOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readIntOffPtr1_entry, .-GHC.Storable.readIntOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.459963998 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr1_info
.type GHC.Storable.readIntOffPtr1_info, @object
GHC.Storable.readIntOffPtr1_info:
	.quad	GHC.Storable.readIntOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.460673458 UTC

.section .text
.align 8
_c4CEw:
_c4CEw:
	leaq block_c4CEC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CEC
_c4CED:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CEw, .-_c4CEw


==================== Asm code ====================
2018-03-16 15:59:29.461318543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CEw_info:
	.quad	_c4CEw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.462066288 UTC

.section .text
.align 8
_c4CEC:
_c4CEC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CEN
_c4CEM:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CEN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CEC, .-_c4CEC


==================== Asm code ====================
2018-03-16 15:59:29.462701832 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CEC_info:
	.quad	_c4CEC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.464991016 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr_closure
.type GHC.Storable.readIntOffPtr_closure, @object
GHC.Storable.readIntOffPtr_closure:
	.quad	GHC.Storable.readIntOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.465711721 UTC

.section .text
.align 8
.globl GHC.Storable.readIntOffPtr_entry
.type GHC.Storable.readIntOffPtr_entry, @object
GHC.Storable.readIntOffPtr_entry:
_c4CFd:
	jmp GHC.Storable.readIntOffPtr1_entry
	.size GHC.Storable.readIntOffPtr_entry, .-GHC.Storable.readIntOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.466359626 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readIntOffPtr_info
.type GHC.Storable.readIntOffPtr_info, @object
GHC.Storable.readIntOffPtr_info:
	.quad	GHC.Storable.readIntOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.470698072 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr1_closure
.type GHC.Storable.readWordOffPtr1_closure, @object
GHC.Storable.readWordOffPtr1_closure:
	.quad	GHC.Storable.readWordOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.471531657 UTC

.section .text
.align 8
.globl GHC.Storable.readWordOffPtr1_entry
.type GHC.Storable.readWordOffPtr1_entry, @object
GHC.Storable.readWordOffPtr1_entry:
_c4CFr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CFA
_c4CFB:
	leaq block_c4CFo_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CFo
_c4CFp:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CFA:
	leaq GHC.Storable.readWordOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWordOffPtr1_entry, .-GHC.Storable.readWordOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.472188328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr1_info
.type GHC.Storable.readWordOffPtr1_info, @object
GHC.Storable.readWordOffPtr1_info:
	.quad	GHC.Storable.readWordOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.472875257 UTC

.section .text
.align 8
_c4CFo:
_c4CFo:
	leaq block_c4CFu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CFu
_c4CFv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CFo, .-_c4CFo


==================== Asm code ====================
2018-03-16 15:59:29.473496564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CFo_info:
	.quad	_c4CFo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.474193483 UTC

.section .text
.align 8
_c4CFu:
_c4CFu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CFF
_c4CFE:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Types.W#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CFF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CFu, .-_c4CFu


==================== Asm code ====================
2018-03-16 15:59:29.474808987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CFu_info:
	.quad	_c4CFu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.477006963 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr_closure
.type GHC.Storable.readWordOffPtr_closure, @object
GHC.Storable.readWordOffPtr_closure:
	.quad	GHC.Storable.readWordOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.477677276 UTC

.section .text
.align 8
.globl GHC.Storable.readWordOffPtr_entry
.type GHC.Storable.readWordOffPtr_entry, @object
GHC.Storable.readWordOffPtr_entry:
_c4CG5:
	jmp GHC.Storable.readWordOffPtr1_entry
	.size GHC.Storable.readWordOffPtr_entry, .-GHC.Storable.readWordOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.478294429 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWordOffPtr_info
.type GHC.Storable.readWordOffPtr_info, @object
GHC.Storable.readWordOffPtr_info:
	.quad	GHC.Storable.readWordOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.481928776 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr1_closure
.type GHC.Storable.readPtrOffPtr1_closure, @object
GHC.Storable.readPtrOffPtr1_closure:
	.quad	GHC.Storable.readPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.482720091 UTC

.section .text
.align 8
.globl GHC.Storable.readPtrOffPtr1_entry
.type GHC.Storable.readPtrOffPtr1_entry, @object
GHC.Storable.readPtrOffPtr1_entry:
_c4CGj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CGs
_c4CGt:
	leaq block_c4CGg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CGg
_c4CGh:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CGs:
	leaq GHC.Storable.readPtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readPtrOffPtr1_entry, .-GHC.Storable.readPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.483374735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr1_info
.type GHC.Storable.readPtrOffPtr1_info, @object
GHC.Storable.readPtrOffPtr1_info:
	.quad	GHC.Storable.readPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.484032845 UTC

.section .text
.align 8
_c4CGg:
_c4CGg:
	leaq block_c4CGm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CGm
_c4CGn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CGg, .-_c4CGg


==================== Asm code ====================
2018-03-16 15:59:29.484595984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CGg_info:
	.quad	_c4CGg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.485378416 UTC

.section .text
.align 8
_c4CGm:
_c4CGm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CGx
_c4CGw:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CGx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CGm, .-_c4CGm


==================== Asm code ====================
2018-03-16 15:59:29.486012894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CGm_info:
	.quad	_c4CGm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.488139568 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr_closure
.type GHC.Storable.readPtrOffPtr_closure, @object
GHC.Storable.readPtrOffPtr_closure:
	.quad	GHC.Storable.readPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.488733788 UTC

.section .text
.align 8
.globl GHC.Storable.readPtrOffPtr_entry
.type GHC.Storable.readPtrOffPtr_entry, @object
GHC.Storable.readPtrOffPtr_entry:
_c4CGX:
	jmp GHC.Storable.readPtrOffPtr1_entry
	.size GHC.Storable.readPtrOffPtr_entry, .-GHC.Storable.readPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.489336084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readPtrOffPtr_info
.type GHC.Storable.readPtrOffPtr_info, @object
GHC.Storable.readPtrOffPtr_info:
	.quad	GHC.Storable.readPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.492805784 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr1_closure
.type GHC.Storable.readFunPtrOffPtr1_closure, @object
GHC.Storable.readFunPtrOffPtr1_closure:
	.quad	GHC.Storable.readFunPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.493621857 UTC

.section .text
.align 8
.globl GHC.Storable.readFunPtrOffPtr1_entry
.type GHC.Storable.readFunPtrOffPtr1_entry, @object
GHC.Storable.readFunPtrOffPtr1_entry:
_c4CHb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CHk
_c4CHl:
	leaq block_c4CH8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CH8
_c4CH9:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CHk:
	leaq GHC.Storable.readFunPtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readFunPtrOffPtr1_entry, .-GHC.Storable.readFunPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.494292735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr1_info
.type GHC.Storable.readFunPtrOffPtr1_info, @object
GHC.Storable.readFunPtrOffPtr1_info:
	.quad	GHC.Storable.readFunPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.494946805 UTC

.section .text
.align 8
_c4CH8:
_c4CH8:
	leaq block_c4CHe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CHe
_c4CHf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CH8, .-_c4CH8


==================== Asm code ====================
2018-03-16 15:59:29.495524452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CH8_info:
	.quad	_c4CH8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.496236505 UTC

.section .text
.align 8
_c4CHe:
_c4CHe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CHp
_c4CHo:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Ptr.FunPtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CHp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CHe, .-_c4CHe


==================== Asm code ====================
2018-03-16 15:59:29.496888035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CHe_info:
	.quad	_c4CHe
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.499118509 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr_closure
.type GHC.Storable.readFunPtrOffPtr_closure, @object
GHC.Storable.readFunPtrOffPtr_closure:
	.quad	GHC.Storable.readFunPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.49971987 UTC

.section .text
.align 8
.globl GHC.Storable.readFunPtrOffPtr_entry
.type GHC.Storable.readFunPtrOffPtr_entry, @object
GHC.Storable.readFunPtrOffPtr_entry:
_c4CHP:
	jmp GHC.Storable.readFunPtrOffPtr1_entry
	.size GHC.Storable.readFunPtrOffPtr_entry, .-GHC.Storable.readFunPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.500264783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFunPtrOffPtr_info
.type GHC.Storable.readFunPtrOffPtr_info, @object
GHC.Storable.readFunPtrOffPtr_info:
	.quad	GHC.Storable.readFunPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.504441866 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr1_closure
.type GHC.Storable.readFloatOffPtr1_closure, @object
GHC.Storable.readFloatOffPtr1_closure:
	.quad	GHC.Storable.readFloatOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.505315339 UTC

.section .text
.align 8
.globl GHC.Storable.readFloatOffPtr1_entry
.type GHC.Storable.readFloatOffPtr1_entry, @object
GHC.Storable.readFloatOffPtr1_entry:
_c4CI3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CIc
_c4CId:
	leaq block_c4CI0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CI0
_c4CI1:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CIc:
	leaq GHC.Storable.readFloatOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readFloatOffPtr1_entry, .-GHC.Storable.readFloatOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.506020322 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr1_info
.type GHC.Storable.readFloatOffPtr1_info, @object
GHC.Storable.readFloatOffPtr1_info:
	.quad	GHC.Storable.readFloatOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.506715541 UTC

.section .text
.align 8
_c4CI0:
_c4CI0:
	leaq block_c4CI6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CI6
_c4CI7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CI0, .-_c4CI0


==================== Asm code ====================
2018-03-16 15:59:29.50732422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CI0_info:
	.quad	_c4CI0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.508036608 UTC

.section .text
.align 8
_c4CI6:
_c4CI6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CIh
_c4CIg:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movss (%rax,%rbx,4),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CIh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CI6, .-_c4CI6


==================== Asm code ====================
2018-03-16 15:59:29.508638154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CI6_info:
	.quad	_c4CI6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.5108083 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr_closure
.type GHC.Storable.readFloatOffPtr_closure, @object
GHC.Storable.readFloatOffPtr_closure:
	.quad	GHC.Storable.readFloatOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.511401033 UTC

.section .text
.align 8
.globl GHC.Storable.readFloatOffPtr_entry
.type GHC.Storable.readFloatOffPtr_entry, @object
GHC.Storable.readFloatOffPtr_entry:
_c4CIH:
	jmp GHC.Storable.readFloatOffPtr1_entry
	.size GHC.Storable.readFloatOffPtr_entry, .-GHC.Storable.readFloatOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.511982281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readFloatOffPtr_info
.type GHC.Storable.readFloatOffPtr_info, @object
GHC.Storable.readFloatOffPtr_info:
	.quad	GHC.Storable.readFloatOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.515616575 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr1_closure
.type GHC.Storable.readDoubleOffPtr1_closure, @object
GHC.Storable.readDoubleOffPtr1_closure:
	.quad	GHC.Storable.readDoubleOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.5164396 UTC

.section .text
.align 8
.globl GHC.Storable.readDoubleOffPtr1_entry
.type GHC.Storable.readDoubleOffPtr1_entry, @object
GHC.Storable.readDoubleOffPtr1_entry:
_c4CIV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CJ4
_c4CJ5:
	leaq block_c4CIS_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CIS
_c4CIT:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CJ4:
	leaq GHC.Storable.readDoubleOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readDoubleOffPtr1_entry, .-GHC.Storable.readDoubleOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.517073631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr1_info
.type GHC.Storable.readDoubleOffPtr1_info, @object
GHC.Storable.readDoubleOffPtr1_info:
	.quad	GHC.Storable.readDoubleOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.518203858 UTC

.section .text
.align 8
_c4CIS:
_c4CIS:
	leaq block_c4CIY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CIY
_c4CIZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CIS, .-_c4CIS


==================== Asm code ====================
2018-03-16 15:59:29.51899758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CIS_info:
	.quad	_c4CIS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.51992357 UTC

.section .text
.align 8
_c4CIY:
_c4CIY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CJ9
_c4CJ8:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movsd (%rax,%rbx,8),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CJ9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CIY, .-_c4CIY


==================== Asm code ====================
2018-03-16 15:59:29.520770023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CIY_info:
	.quad	_c4CIY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.523670533 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr_closure
.type GHC.Storable.readDoubleOffPtr_closure, @object
GHC.Storable.readDoubleOffPtr_closure:
	.quad	GHC.Storable.readDoubleOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.524518931 UTC

.section .text
.align 8
.globl GHC.Storable.readDoubleOffPtr_entry
.type GHC.Storable.readDoubleOffPtr_entry, @object
GHC.Storable.readDoubleOffPtr_entry:
_c4CJz:
	jmp GHC.Storable.readDoubleOffPtr1_entry
	.size GHC.Storable.readDoubleOffPtr_entry, .-GHC.Storable.readDoubleOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.525324571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readDoubleOffPtr_info
.type GHC.Storable.readDoubleOffPtr_info, @object
GHC.Storable.readDoubleOffPtr_info:
	.quad	GHC.Storable.readDoubleOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.531084521 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr1_closure
.type GHC.Storable.readStablePtrOffPtr1_closure, @object
GHC.Storable.readStablePtrOffPtr1_closure:
	.quad	GHC.Storable.readStablePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.531982647 UTC

.section .text
.align 8
.globl GHC.Storable.readStablePtrOffPtr1_entry
.type GHC.Storable.readStablePtrOffPtr1_entry, @object
GHC.Storable.readStablePtrOffPtr1_entry:
_c4CJN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CJW
_c4CJX:
	leaq block_c4CJK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CJK
_c4CJL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CJW:
	leaq GHC.Storable.readStablePtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readStablePtrOffPtr1_entry, .-GHC.Storable.readStablePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.532680538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr1_info
.type GHC.Storable.readStablePtrOffPtr1_info, @object
GHC.Storable.readStablePtrOffPtr1_info:
	.quad	GHC.Storable.readStablePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.533713256 UTC

.section .text
.align 8
_c4CJK:
_c4CJK:
	leaq block_c4CJQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CJQ
_c4CJR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CJK, .-_c4CJK


==================== Asm code ====================
2018-03-16 15:59:29.534563516 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CJK_info:
	.quad	_c4CJK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.535708089 UTC

.section .text
.align 8
_c4CJQ:
_c4CJQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CK1
_c4CK0:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Stable.StablePtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CK1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CJQ, .-_c4CJQ


==================== Asm code ====================
2018-03-16 15:59:29.536720765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CJQ_info:
	.quad	_c4CJQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.540244647 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr_closure
.type GHC.Storable.readStablePtrOffPtr_closure, @object
GHC.Storable.readStablePtrOffPtr_closure:
	.quad	GHC.Storable.readStablePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.541179185 UTC

.section .text
.align 8
.globl GHC.Storable.readStablePtrOffPtr_entry
.type GHC.Storable.readStablePtrOffPtr_entry, @object
GHC.Storable.readStablePtrOffPtr_entry:
_c4CKr:
	jmp GHC.Storable.readStablePtrOffPtr1_entry
	.size GHC.Storable.readStablePtrOffPtr_entry, .-GHC.Storable.readStablePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.542099563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readStablePtrOffPtr_info
.type GHC.Storable.readStablePtrOffPtr_info, @object
GHC.Storable.readStablePtrOffPtr_info:
	.quad	GHC.Storable.readStablePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.549055086 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr1_closure
.type GHC.Storable.readInt8OffPtr1_closure, @object
GHC.Storable.readInt8OffPtr1_closure:
	.quad	GHC.Storable.readInt8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.550238138 UTC

.section .text
.align 8
.globl GHC.Storable.readInt8OffPtr1_entry
.type GHC.Storable.readInt8OffPtr1_entry, @object
GHC.Storable.readInt8OffPtr1_entry:
_c4CKF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CKO
_c4CKP:
	leaq block_c4CKC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CKC
_c4CKD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CKO:
	leaq GHC.Storable.readInt8OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readInt8OffPtr1_entry, .-GHC.Storable.readInt8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.55116471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr1_info
.type GHC.Storable.readInt8OffPtr1_info, @object
GHC.Storable.readInt8OffPtr1_info:
	.quad	GHC.Storable.readInt8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.552074564 UTC

.section .text
.align 8
_c4CKC:
_c4CKC:
	leaq block_c4CKI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CKI
_c4CKJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CKC, .-_c4CKC


==================== Asm code ====================
2018-03-16 15:59:29.552845498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CKC_info:
	.quad	_c4CKC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.55376234 UTC

.section .text
.align 8
_c4CKI:
_c4CKI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CKT
_c4CKS:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movsbq (%rax,%rbx,1),%rax
	movq GHC.Int.I8#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CKT:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CKI, .-_c4CKI


==================== Asm code ====================
2018-03-16 15:59:29.554655005 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CKI_info:
	.quad	_c4CKI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.557765838 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr_closure
.type GHC.Storable.readInt8OffPtr_closure, @object
GHC.Storable.readInt8OffPtr_closure:
	.quad	GHC.Storable.readInt8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.558634827 UTC

.section .text
.align 8
.globl GHC.Storable.readInt8OffPtr_entry
.type GHC.Storable.readInt8OffPtr_entry, @object
GHC.Storable.readInt8OffPtr_entry:
_c4CLj:
	jmp GHC.Storable.readInt8OffPtr1_entry
	.size GHC.Storable.readInt8OffPtr_entry, .-GHC.Storable.readInt8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.55947615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt8OffPtr_info
.type GHC.Storable.readInt8OffPtr_info, @object
GHC.Storable.readInt8OffPtr_info:
	.quad	GHC.Storable.readInt8OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.564383488 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr1_closure
.type GHC.Storable.readWord8OffPtr1_closure, @object
GHC.Storable.readWord8OffPtr1_closure:
	.quad	GHC.Storable.readWord8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.565434893 UTC

.section .text
.align 8
.globl GHC.Storable.readWord8OffPtr1_entry
.type GHC.Storable.readWord8OffPtr1_entry, @object
GHC.Storable.readWord8OffPtr1_entry:
_c4CLx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CLG
_c4CLH:
	leaq block_c4CLu_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CLu
_c4CLv:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CLG:
	leaq GHC.Storable.readWord8OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWord8OffPtr1_entry, .-GHC.Storable.readWord8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.566362345 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr1_info
.type GHC.Storable.readWord8OffPtr1_info, @object
GHC.Storable.readWord8OffPtr1_info:
	.quad	GHC.Storable.readWord8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.567267162 UTC

.section .text
.align 8
_c4CLu:
_c4CLu:
	leaq block_c4CLA_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CLA
_c4CLB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CLu, .-_c4CLu


==================== Asm code ====================
2018-03-16 15:59:29.568099198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CLu_info:
	.quad	_c4CLu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.569075795 UTC

.section .text
.align 8
_c4CLA:
_c4CLA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CLL
_c4CLK:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movzbl (%rax,%rbx,1),%eax
	movq GHC.Word.W8#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CLL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CLA, .-_c4CLA


==================== Asm code ====================
2018-03-16 15:59:29.57004415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CLA_info:
	.quad	_c4CLA
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.572838888 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr_closure
.type GHC.Storable.readWord8OffPtr_closure, @object
GHC.Storable.readWord8OffPtr_closure:
	.quad	GHC.Storable.readWord8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.573737158 UTC

.section .text
.align 8
.globl GHC.Storable.readWord8OffPtr_entry
.type GHC.Storable.readWord8OffPtr_entry, @object
GHC.Storable.readWord8OffPtr_entry:
_c4CMb:
	jmp GHC.Storable.readWord8OffPtr1_entry
	.size GHC.Storable.readWord8OffPtr_entry, .-GHC.Storable.readWord8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.574469142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord8OffPtr_info
.type GHC.Storable.readWord8OffPtr_info, @object
GHC.Storable.readWord8OffPtr_info:
	.quad	GHC.Storable.readWord8OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.579973686 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr1_closure
.type GHC.Storable.readInt16OffPtr1_closure, @object
GHC.Storable.readInt16OffPtr1_closure:
	.quad	GHC.Storable.readInt16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.581046523 UTC

.section .text
.align 8
.globl GHC.Storable.readInt16OffPtr1_entry
.type GHC.Storable.readInt16OffPtr1_entry, @object
GHC.Storable.readInt16OffPtr1_entry:
_c4CMp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CMy
_c4CMz:
	leaq block_c4CMm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CMm
_c4CMn:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CMy:
	leaq GHC.Storable.readInt16OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readInt16OffPtr1_entry, .-GHC.Storable.readInt16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.581920079 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr1_info
.type GHC.Storable.readInt16OffPtr1_info, @object
GHC.Storable.readInt16OffPtr1_info:
	.quad	GHC.Storable.readInt16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.582693635 UTC

.section .text
.align 8
_c4CMm:
_c4CMm:
	leaq block_c4CMs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CMs
_c4CMt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CMm, .-_c4CMm


==================== Asm code ====================
2018-03-16 15:59:29.583303456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CMm_info:
	.quad	_c4CMm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.58401833 UTC

.section .text
.align 8
_c4CMs:
_c4CMs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CMD
_c4CMC:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movswq (%rax,%rbx,2),%rax
	movq GHC.Int.I16#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CMD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CMs, .-_c4CMs


==================== Asm code ====================
2018-03-16 15:59:29.584704352 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CMs_info:
	.quad	_c4CMs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.587068335 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr_closure
.type GHC.Storable.readInt16OffPtr_closure, @object
GHC.Storable.readInt16OffPtr_closure:
	.quad	GHC.Storable.readInt16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.587688404 UTC

.section .text
.align 8
.globl GHC.Storable.readInt16OffPtr_entry
.type GHC.Storable.readInt16OffPtr_entry, @object
GHC.Storable.readInt16OffPtr_entry:
_c4CN3:
	jmp GHC.Storable.readInt16OffPtr1_entry
	.size GHC.Storable.readInt16OffPtr_entry, .-GHC.Storable.readInt16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.588308207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt16OffPtr_info
.type GHC.Storable.readInt16OffPtr_info, @object
GHC.Storable.readInt16OffPtr_info:
	.quad	GHC.Storable.readInt16OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.592091494 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr1_closure
.type GHC.Storable.readWord16OffPtr1_closure, @object
GHC.Storable.readWord16OffPtr1_closure:
	.quad	GHC.Storable.readWord16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.593549984 UTC

.section .text
.align 8
.globl GHC.Storable.readWord16OffPtr1_entry
.type GHC.Storable.readWord16OffPtr1_entry, @object
GHC.Storable.readWord16OffPtr1_entry:
_c4CNh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CNq
_c4CNr:
	leaq block_c4CNe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CNe
_c4CNf:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CNq:
	leaq GHC.Storable.readWord16OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWord16OffPtr1_entry, .-GHC.Storable.readWord16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.594178553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr1_info
.type GHC.Storable.readWord16OffPtr1_info, @object
GHC.Storable.readWord16OffPtr1_info:
	.quad	GHC.Storable.readWord16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.594855662 UTC

.section .text
.align 8
_c4CNe:
_c4CNe:
	leaq block_c4CNk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CNk
_c4CNl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CNe, .-_c4CNe


==================== Asm code ====================
2018-03-16 15:59:29.595450608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CNe_info:
	.quad	_c4CNe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.59621093 UTC

.section .text
.align 8
_c4CNk:
_c4CNk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CNv
_c4CNu:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movzwl (%rax,%rbx,2),%eax
	movq GHC.Word.W16#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CNv:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CNk, .-_c4CNk


==================== Asm code ====================
2018-03-16 15:59:29.596858967 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CNk_info:
	.quad	_c4CNk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.599118421 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr_closure
.type GHC.Storable.readWord16OffPtr_closure, @object
GHC.Storable.readWord16OffPtr_closure:
	.quad	GHC.Storable.readWord16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.599746784 UTC

.section .text
.align 8
.globl GHC.Storable.readWord16OffPtr_entry
.type GHC.Storable.readWord16OffPtr_entry, @object
GHC.Storable.readWord16OffPtr_entry:
_c4CNV:
	jmp GHC.Storable.readWord16OffPtr1_entry
	.size GHC.Storable.readWord16OffPtr_entry, .-GHC.Storable.readWord16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.600286229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord16OffPtr_info
.type GHC.Storable.readWord16OffPtr_info, @object
GHC.Storable.readWord16OffPtr_info:
	.quad	GHC.Storable.readWord16OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.604492581 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr1_closure
.type GHC.Storable.readInt32OffPtr1_closure, @object
GHC.Storable.readInt32OffPtr1_closure:
	.quad	GHC.Storable.readInt32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.605358179 UTC

.section .text
.align 8
.globl GHC.Storable.readInt32OffPtr1_entry
.type GHC.Storable.readInt32OffPtr1_entry, @object
GHC.Storable.readInt32OffPtr1_entry:
_c4CO9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4COi
_c4COj:
	leaq block_c4CO6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CO6
_c4CO7:
	movq (%rbx),%rax
	jmp *(%rax)
_c4COi:
	leaq GHC.Storable.readInt32OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readInt32OffPtr1_entry, .-GHC.Storable.readInt32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.60604148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr1_info
.type GHC.Storable.readInt32OffPtr1_info, @object
GHC.Storable.readInt32OffPtr1_info:
	.quad	GHC.Storable.readInt32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.606737333 UTC

.section .text
.align 8
_c4CO6:
_c4CO6:
	leaq block_c4COc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4COc
_c4COd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CO6, .-_c4CO6


==================== Asm code ====================
2018-03-16 15:59:29.607367352 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CO6_info:
	.quad	_c4CO6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.60807315 UTC

.section .text
.align 8
_c4COc:
_c4COc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4COn
_c4COm:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movslq (%rax,%rbx,4),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4COn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4COc, .-_c4COc


==================== Asm code ====================
2018-03-16 15:59:29.608722002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4COc_info:
	.quad	_c4COc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.61088343 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr_closure
.type GHC.Storable.readInt32OffPtr_closure, @object
GHC.Storable.readInt32OffPtr_closure:
	.quad	GHC.Storable.readInt32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.611493271 UTC

.section .text
.align 8
.globl GHC.Storable.readInt32OffPtr_entry
.type GHC.Storable.readInt32OffPtr_entry, @object
GHC.Storable.readInt32OffPtr_entry:
_c4CON:
	jmp GHC.Storable.readInt32OffPtr1_entry
	.size GHC.Storable.readInt32OffPtr_entry, .-GHC.Storable.readInt32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.612081317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt32OffPtr_info
.type GHC.Storable.readInt32OffPtr_info, @object
GHC.Storable.readInt32OffPtr_info:
	.quad	GHC.Storable.readInt32OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.615879789 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr1_closure
.type GHC.Storable.readWord32OffPtr1_closure, @object
GHC.Storable.readWord32OffPtr1_closure:
	.quad	GHC.Storable.readWord32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.616758546 UTC

.section .text
.align 8
.globl GHC.Storable.readWord32OffPtr1_entry
.type GHC.Storable.readWord32OffPtr1_entry, @object
GHC.Storable.readWord32OffPtr1_entry:
_c4CP1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CPa
_c4CPb:
	leaq block_c4COY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4COY
_c4COZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CPa:
	leaq GHC.Storable.readWord32OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWord32OffPtr1_entry, .-GHC.Storable.readWord32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.617448075 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr1_info
.type GHC.Storable.readWord32OffPtr1_info, @object
GHC.Storable.readWord32OffPtr1_info:
	.quad	GHC.Storable.readWord32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.618171007 UTC

.section .text
.align 8
_c4COY:
_c4COY:
	leaq block_c4CP4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CP4
_c4CP5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4COY, .-_c4COY


==================== Asm code ====================
2018-03-16 15:59:29.618812392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4COY_info:
	.quad	_c4COY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.619542274 UTC

.section .text
.align 8
_c4CP4:
_c4CP4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CPf
_c4CPe:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movl (%rax,%rbx,4),%eax
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CPf:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CP4, .-_c4CP4


==================== Asm code ====================
2018-03-16 15:59:29.620232577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CP4_info:
	.quad	_c4CP4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.62251575 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr_closure
.type GHC.Storable.readWord32OffPtr_closure, @object
GHC.Storable.readWord32OffPtr_closure:
	.quad	GHC.Storable.readWord32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.623115588 UTC

.section .text
.align 8
.globl GHC.Storable.readWord32OffPtr_entry
.type GHC.Storable.readWord32OffPtr_entry, @object
GHC.Storable.readWord32OffPtr_entry:
_c4CPF:
	jmp GHC.Storable.readWord32OffPtr1_entry
	.size GHC.Storable.readWord32OffPtr_entry, .-GHC.Storable.readWord32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.623652009 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord32OffPtr_info
.type GHC.Storable.readWord32OffPtr_info, @object
GHC.Storable.readWord32OffPtr_info:
	.quad	GHC.Storable.readWord32OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.627387319 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr1_closure
.type GHC.Storable.readInt64OffPtr1_closure, @object
GHC.Storable.readInt64OffPtr1_closure:
	.quad	GHC.Storable.readInt64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.628681869 UTC

.section .text
.align 8
.globl GHC.Storable.readInt64OffPtr1_entry
.type GHC.Storable.readInt64OffPtr1_entry, @object
GHC.Storable.readInt64OffPtr1_entry:
_c4CPT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CQ2
_c4CQ3:
	leaq block_c4CPQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CPQ
_c4CPR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CQ2:
	leaq GHC.Storable.readInt64OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readInt64OffPtr1_entry, .-GHC.Storable.readInt64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.629665487 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr1_info
.type GHC.Storable.readInt64OffPtr1_info, @object
GHC.Storable.readInt64OffPtr1_info:
	.quad	GHC.Storable.readInt64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.630411454 UTC

.section .text
.align 8
_c4CPQ:
_c4CPQ:
	leaq block_c4CPW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CPW
_c4CPX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CPQ, .-_c4CPQ


==================== Asm code ====================
2018-03-16 15:59:29.631022302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CPQ_info:
	.quad	_c4CPQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.631749371 UTC

.section .text
.align 8
_c4CPW:
_c4CPW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CQ7
_c4CQ6:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CQ7:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CPW, .-_c4CPW


==================== Asm code ====================
2018-03-16 15:59:29.632409626 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CPW_info:
	.quad	_c4CPW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.634632697 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr_closure
.type GHC.Storable.readInt64OffPtr_closure, @object
GHC.Storable.readInt64OffPtr_closure:
	.quad	GHC.Storable.readInt64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.635280038 UTC

.section .text
.align 8
.globl GHC.Storable.readInt64OffPtr_entry
.type GHC.Storable.readInt64OffPtr_entry, @object
GHC.Storable.readInt64OffPtr_entry:
_c4CQx:
	jmp GHC.Storable.readInt64OffPtr1_entry
	.size GHC.Storable.readInt64OffPtr_entry, .-GHC.Storable.readInt64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.635847721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readInt64OffPtr_info
.type GHC.Storable.readInt64OffPtr_info, @object
GHC.Storable.readInt64OffPtr_info:
	.quad	GHC.Storable.readInt64OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.63941768 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr1_closure
.type GHC.Storable.readWord64OffPtr1_closure, @object
GHC.Storable.readWord64OffPtr1_closure:
	.quad	GHC.Storable.readWord64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.640226 UTC

.section .text
.align 8
.globl GHC.Storable.readWord64OffPtr1_entry
.type GHC.Storable.readWord64OffPtr1_entry, @object
GHC.Storable.readWord64OffPtr1_entry:
_c4CQL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CQU
_c4CQV:
	leaq block_c4CQI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c4CQI
_c4CQJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CQU:
	leaq GHC.Storable.readWord64OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.readWord64OffPtr1_entry, .-GHC.Storable.readWord64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.640845905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr1_info
.type GHC.Storable.readWord64OffPtr1_info, @object
GHC.Storable.readWord64OffPtr1_info:
	.quad	GHC.Storable.readWord64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.641571811 UTC

.section .text
.align 8
_c4CQI:
_c4CQI:
	leaq block_c4CQO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CQO
_c4CQP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CQI, .-_c4CQI


==================== Asm code ====================
2018-03-16 15:59:29.642173621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CQI_info:
	.quad	_c4CQI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.642934132 UTC

.section .text
.align 8
_c4CQO:
_c4CQO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c4CQZ
_c4CQY:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq (%rax,%rbx,8),%rax
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c4CQZ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c4CQO, .-_c4CQO


==================== Asm code ====================
2018-03-16 15:59:29.643537118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CQO_info:
	.quad	_c4CQO
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.646096535 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr_closure
.type GHC.Storable.readWord64OffPtr_closure, @object
GHC.Storable.readWord64OffPtr_closure:
	.quad	GHC.Storable.readWord64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.6467005 UTC

.section .text
.align 8
.globl GHC.Storable.readWord64OffPtr_entry
.type GHC.Storable.readWord64OffPtr_entry, @object
GHC.Storable.readWord64OffPtr_entry:
_c4CRp:
	jmp GHC.Storable.readWord64OffPtr1_entry
	.size GHC.Storable.readWord64OffPtr_entry, .-GHC.Storable.readWord64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.64718621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.readWord64OffPtr_info
.type GHC.Storable.readWord64OffPtr_info, @object
GHC.Storable.readWord64OffPtr_info:
	.quad	GHC.Storable.readWord64OffPtr_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:59:29.651009579 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr1_closure
.type GHC.Storable.writeWideCharOffPtr1_closure, @object
GHC.Storable.writeWideCharOffPtr1_closure:
	.quad	GHC.Storable.writeWideCharOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.651825605 UTC

.section .text
.align 8
.globl GHC.Storable.writeWideCharOffPtr1_entry
.type GHC.Storable.writeWideCharOffPtr1_entry, @object
GHC.Storable.writeWideCharOffPtr1_entry:
_c4CRD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CRM
_c4CRN:
	leaq block_c4CRA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CRA
_c4CRB:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CRM:
	leaq GHC.Storable.writeWideCharOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWideCharOffPtr1_entry, .-GHC.Storable.writeWideCharOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.652495515 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr1_info
.type GHC.Storable.writeWideCharOffPtr1_info, @object
GHC.Storable.writeWideCharOffPtr1_info:
	.quad	GHC.Storable.writeWideCharOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.653203815 UTC

.section .text
.align 8
_c4CRA:
_c4CRA:
	leaq block_c4CRG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CRG
_c4CRH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CRA, .-_c4CRA


==================== Asm code ====================
2018-03-16 15:59:29.653876387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CRA_info:
	.quad	_c4CRA
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.654562847 UTC

.section .text
.align 8
_c4CRG:
_c4CRG:
	leaq block_c4CRL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CRL
_c4CRQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CRG, .-_c4CRG


==================== Asm code ====================
2018-03-16 15:59:29.655152002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CRG_info:
	.quad	_c4CRG
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.655830535 UTC

.section .text
.align 8
_c4CRL:
_c4CRL:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CRL, .-_c4CRL


==================== Asm code ====================
2018-03-16 15:59:29.656431649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CRL_info:
	.quad	_c4CRL
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.658718516 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr_closure
.type GHC.Storable.writeWideCharOffPtr_closure, @object
GHC.Storable.writeWideCharOffPtr_closure:
	.quad	GHC.Storable.writeWideCharOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.659360912 UTC

.section .text
.align 8
.globl GHC.Storable.writeWideCharOffPtr_entry
.type GHC.Storable.writeWideCharOffPtr_entry, @object
GHC.Storable.writeWideCharOffPtr_entry:
_c4CSr:
	jmp GHC.Storable.writeWideCharOffPtr1_entry
	.size GHC.Storable.writeWideCharOffPtr_entry, .-GHC.Storable.writeWideCharOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.659923814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWideCharOffPtr_info
.type GHC.Storable.writeWideCharOffPtr_info, @object
GHC.Storable.writeWideCharOffPtr_info:
	.quad	GHC.Storable.writeWideCharOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.66432961 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr1_closure
.type GHC.Storable.writeIntOffPtr1_closure, @object
GHC.Storable.writeIntOffPtr1_closure:
	.quad	GHC.Storable.writeIntOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.665115523 UTC

.section .text
.align 8
.globl GHC.Storable.writeIntOffPtr1_entry
.type GHC.Storable.writeIntOffPtr1_entry, @object
GHC.Storable.writeIntOffPtr1_entry:
_c4CSF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CSO
_c4CSP:
	leaq block_c4CSC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CSC
_c4CSD:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CSO:
	leaq GHC.Storable.writeIntOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeIntOffPtr1_entry, .-GHC.Storable.writeIntOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.665842634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr1_info
.type GHC.Storable.writeIntOffPtr1_info, @object
GHC.Storable.writeIntOffPtr1_info:
	.quad	GHC.Storable.writeIntOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.666521423 UTC

.section .text
.align 8
_c4CSC:
_c4CSC:
	leaq block_c4CSI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CSI
_c4CSJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CSC, .-_c4CSC


==================== Asm code ====================
2018-03-16 15:59:29.66708655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CSC_info:
	.quad	_c4CSC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.667727474 UTC

.section .text
.align 8
_c4CSI:
_c4CSI:
	leaq block_c4CSN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CSN
_c4CSS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CSI, .-_c4CSI


==================== Asm code ====================
2018-03-16 15:59:29.668298527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CSI_info:
	.quad	_c4CSI
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.668944165 UTC

.section .text
.align 8
_c4CSN:
_c4CSN:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CSN, .-_c4CSN


==================== Asm code ====================
2018-03-16 15:59:29.669601986 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CSN_info:
	.quad	_c4CSN
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.67169995 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr_closure
.type GHC.Storable.writeIntOffPtr_closure, @object
GHC.Storable.writeIntOffPtr_closure:
	.quad	GHC.Storable.writeIntOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.672260239 UTC

.section .text
.align 8
.globl GHC.Storable.writeIntOffPtr_entry
.type GHC.Storable.writeIntOffPtr_entry, @object
GHC.Storable.writeIntOffPtr_entry:
_c4CTt:
	jmp GHC.Storable.writeIntOffPtr1_entry
	.size GHC.Storable.writeIntOffPtr_entry, .-GHC.Storable.writeIntOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.672822209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeIntOffPtr_info
.type GHC.Storable.writeIntOffPtr_info, @object
GHC.Storable.writeIntOffPtr_info:
	.quad	GHC.Storable.writeIntOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.67656318 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr1_closure
.type GHC.Storable.writeWordOffPtr1_closure, @object
GHC.Storable.writeWordOffPtr1_closure:
	.quad	GHC.Storable.writeWordOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.677401973 UTC

.section .text
.align 8
.globl GHC.Storable.writeWordOffPtr1_entry
.type GHC.Storable.writeWordOffPtr1_entry, @object
GHC.Storable.writeWordOffPtr1_entry:
_c4CTH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CTQ
_c4CTR:
	leaq block_c4CTE_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CTE
_c4CTF:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CTQ:
	leaq GHC.Storable.writeWordOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWordOffPtr1_entry, .-GHC.Storable.writeWordOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.678063187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr1_info
.type GHC.Storable.writeWordOffPtr1_info, @object
GHC.Storable.writeWordOffPtr1_info:
	.quad	GHC.Storable.writeWordOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.678758954 UTC

.section .text
.align 8
_c4CTE:
_c4CTE:
	leaq block_c4CTK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CTK
_c4CTL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CTE, .-_c4CTE


==================== Asm code ====================
2018-03-16 15:59:29.679359638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CTE_info:
	.quad	_c4CTE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.680050419 UTC

.section .text
.align 8
_c4CTK:
_c4CTK:
	leaq block_c4CTP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CTP
_c4CTU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CTK, .-_c4CTK


==================== Asm code ====================
2018-03-16 15:59:29.680659698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CTK_info:
	.quad	_c4CTK
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.681390839 UTC

.section .text
.align 8
_c4CTP:
_c4CTP:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CTP, .-_c4CTP


==================== Asm code ====================
2018-03-16 15:59:29.6820165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CTP_info:
	.quad	_c4CTP
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.684249805 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr_closure
.type GHC.Storable.writeWordOffPtr_closure, @object
GHC.Storable.writeWordOffPtr_closure:
	.quad	GHC.Storable.writeWordOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.684818686 UTC

.section .text
.align 8
.globl GHC.Storable.writeWordOffPtr_entry
.type GHC.Storable.writeWordOffPtr_entry, @object
GHC.Storable.writeWordOffPtr_entry:
_c4CUv:
	jmp GHC.Storable.writeWordOffPtr1_entry
	.size GHC.Storable.writeWordOffPtr_entry, .-GHC.Storable.writeWordOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.686132247 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWordOffPtr_info
.type GHC.Storable.writeWordOffPtr_info, @object
GHC.Storable.writeWordOffPtr_info:
	.quad	GHC.Storable.writeWordOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.689986444 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr1_closure
.type GHC.Storable.writePtrOffPtr1_closure, @object
GHC.Storable.writePtrOffPtr1_closure:
	.quad	GHC.Storable.writePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.690795036 UTC

.section .text
.align 8
.globl GHC.Storable.writePtrOffPtr1_entry
.type GHC.Storable.writePtrOffPtr1_entry, @object
GHC.Storable.writePtrOffPtr1_entry:
_c4CUJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CUS
_c4CUT:
	leaq block_c4CUG_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CUG
_c4CUH:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CUS:
	leaq GHC.Storable.writePtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writePtrOffPtr1_entry, .-GHC.Storable.writePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.691454278 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr1_info
.type GHC.Storable.writePtrOffPtr1_info, @object
GHC.Storable.writePtrOffPtr1_info:
	.quad	GHC.Storable.writePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.692167313 UTC

.section .text
.align 8
_c4CUG:
_c4CUG:
	leaq block_c4CUM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CUM
_c4CUN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CUG, .-_c4CUG


==================== Asm code ====================
2018-03-16 15:59:29.692756498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CUG_info:
	.quad	_c4CUG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.693481027 UTC

.section .text
.align 8
_c4CUM:
_c4CUM:
	leaq block_c4CUR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CUR
_c4CUW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CUM, .-_c4CUM


==================== Asm code ====================
2018-03-16 15:59:29.694079805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CUM_info:
	.quad	_c4CUM
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.694743803 UTC

.section .text
.align 8
_c4CUR:
_c4CUR:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CUR, .-_c4CUR


==================== Asm code ====================
2018-03-16 15:59:29.695391802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CUR_info:
	.quad	_c4CUR
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.698212849 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr_closure
.type GHC.Storable.writePtrOffPtr_closure, @object
GHC.Storable.writePtrOffPtr_closure:
	.quad	GHC.Storable.writePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.698855529 UTC

.section .text
.align 8
.globl GHC.Storable.writePtrOffPtr_entry
.type GHC.Storable.writePtrOffPtr_entry, @object
GHC.Storable.writePtrOffPtr_entry:
_c4CVx:
	jmp GHC.Storable.writePtrOffPtr1_entry
	.size GHC.Storable.writePtrOffPtr_entry, .-GHC.Storable.writePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.699425416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writePtrOffPtr_info
.type GHC.Storable.writePtrOffPtr_info, @object
GHC.Storable.writePtrOffPtr_info:
	.quad	GHC.Storable.writePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.703106301 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr1_closure
.type GHC.Storable.writeFunPtrOffPtr1_closure, @object
GHC.Storable.writeFunPtrOffPtr1_closure:
	.quad	GHC.Storable.writeFunPtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.703890735 UTC

.section .text
.align 8
.globl GHC.Storable.writeFunPtrOffPtr1_entry
.type GHC.Storable.writeFunPtrOffPtr1_entry, @object
GHC.Storable.writeFunPtrOffPtr1_entry:
_c4CVL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CVU
_c4CVV:
	leaq block_c4CVI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CVI
_c4CVJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CVU:
	leaq GHC.Storable.writeFunPtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeFunPtrOffPtr1_entry, .-GHC.Storable.writeFunPtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.704552999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr1_info
.type GHC.Storable.writeFunPtrOffPtr1_info, @object
GHC.Storable.writeFunPtrOffPtr1_info:
	.quad	GHC.Storable.writeFunPtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.705821906 UTC

.section .text
.align 8
_c4CVI:
_c4CVI:
	leaq block_c4CVO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CVO
_c4CVP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CVI, .-_c4CVI


==================== Asm code ====================
2018-03-16 15:59:29.70642792 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CVI_info:
	.quad	_c4CVI
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.707063505 UTC

.section .text
.align 8
_c4CVO:
_c4CVO:
	leaq block_c4CVT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CVT
_c4CVY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CVO, .-_c4CVO


==================== Asm code ====================
2018-03-16 15:59:29.707674364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CVO_info:
	.quad	_c4CVO
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.708351385 UTC

.section .text
.align 8
_c4CVT:
_c4CVT:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CVT, .-_c4CVT


==================== Asm code ====================
2018-03-16 15:59:29.70894532 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CVT_info:
	.quad	_c4CVT
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.711089183 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr_closure
.type GHC.Storable.writeFunPtrOffPtr_closure, @object
GHC.Storable.writeFunPtrOffPtr_closure:
	.quad	GHC.Storable.writeFunPtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.711735489 UTC

.section .text
.align 8
.globl GHC.Storable.writeFunPtrOffPtr_entry
.type GHC.Storable.writeFunPtrOffPtr_entry, @object
GHC.Storable.writeFunPtrOffPtr_entry:
_c4CWz:
	jmp GHC.Storable.writeFunPtrOffPtr1_entry
	.size GHC.Storable.writeFunPtrOffPtr_entry, .-GHC.Storable.writeFunPtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.712291009 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFunPtrOffPtr_info
.type GHC.Storable.writeFunPtrOffPtr_info, @object
GHC.Storable.writeFunPtrOffPtr_info:
	.quad	GHC.Storable.writeFunPtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.716081936 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr1_closure
.type GHC.Storable.writeFloatOffPtr1_closure, @object
GHC.Storable.writeFloatOffPtr1_closure:
	.quad	GHC.Storable.writeFloatOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.716860892 UTC

.section .text
.align 8
.globl GHC.Storable.writeFloatOffPtr1_entry
.type GHC.Storable.writeFloatOffPtr1_entry, @object
GHC.Storable.writeFloatOffPtr1_entry:
_c4CWN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CWW
_c4CWX:
	leaq block_c4CWK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CWK
_c4CWL:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CWW:
	leaq GHC.Storable.writeFloatOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeFloatOffPtr1_entry, .-GHC.Storable.writeFloatOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.717561177 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr1_info
.type GHC.Storable.writeFloatOffPtr1_info, @object
GHC.Storable.writeFloatOffPtr1_info:
	.quad	GHC.Storable.writeFloatOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.718261592 UTC

.section .text
.align 8
_c4CWK:
_c4CWK:
	leaq block_c4CWQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CWQ
_c4CWR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CWK, .-_c4CWK


==================== Asm code ====================
2018-03-16 15:59:29.718863801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CWK_info:
	.quad	_c4CWK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.719509355 UTC

.section .text
.align 8
_c4CWQ:
_c4CWQ:
	leaq block_c4CWV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CWV
_c4CX0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CWQ, .-_c4CWQ


==================== Asm code ====================
2018-03-16 15:59:29.720087601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CWQ_info:
	.quad	_c4CWQ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.720777608 UTC

.section .text
.align 8
_c4CWV:
_c4CWV:
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movss %xmm0,(%rax,%rbx,4)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CWV, .-_c4CWV


==================== Asm code ====================
2018-03-16 15:59:29.721579738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CWV_info:
	.quad	_c4CWV
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.723845681 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr_closure
.type GHC.Storable.writeFloatOffPtr_closure, @object
GHC.Storable.writeFloatOffPtr_closure:
	.quad	GHC.Storable.writeFloatOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.724511584 UTC

.section .text
.align 8
.globl GHC.Storable.writeFloatOffPtr_entry
.type GHC.Storable.writeFloatOffPtr_entry, @object
GHC.Storable.writeFloatOffPtr_entry:
_c4CXB:
	jmp GHC.Storable.writeFloatOffPtr1_entry
	.size GHC.Storable.writeFloatOffPtr_entry, .-GHC.Storable.writeFloatOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.725060341 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeFloatOffPtr_info
.type GHC.Storable.writeFloatOffPtr_info, @object
GHC.Storable.writeFloatOffPtr_info:
	.quad	GHC.Storable.writeFloatOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.728862113 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr1_closure
.type GHC.Storable.writeDoubleOffPtr1_closure, @object
GHC.Storable.writeDoubleOffPtr1_closure:
	.quad	GHC.Storable.writeDoubleOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.730158691 UTC

.section .text
.align 8
.globl GHC.Storable.writeDoubleOffPtr1_entry
.type GHC.Storable.writeDoubleOffPtr1_entry, @object
GHC.Storable.writeDoubleOffPtr1_entry:
_c4CXP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CXY
_c4CXZ:
	leaq block_c4CXM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CXM
_c4CXN:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CXY:
	leaq GHC.Storable.writeDoubleOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeDoubleOffPtr1_entry, .-GHC.Storable.writeDoubleOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.730834339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr1_info
.type GHC.Storable.writeDoubleOffPtr1_info, @object
GHC.Storable.writeDoubleOffPtr1_info:
	.quad	GHC.Storable.writeDoubleOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.731545335 UTC

.section .text
.align 8
_c4CXM:
_c4CXM:
	leaq block_c4CXS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CXS
_c4CXT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CXM, .-_c4CXM


==================== Asm code ====================
2018-03-16 15:59:29.73214369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CXM_info:
	.quad	_c4CXM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.733309396 UTC

.section .text
.align 8
_c4CXS:
_c4CXS:
	leaq block_c4CXX_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CXX
_c4CY2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CXS, .-_c4CXS


==================== Asm code ====================
2018-03-16 15:59:29.733946929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CXS_info:
	.quad	_c4CXS
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.734665961 UTC

.section .text
.align 8
_c4CXX:
_c4CXX:
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movsd %xmm0,(%rax,%rbx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CXX, .-_c4CXX


==================== Asm code ====================
2018-03-16 15:59:29.735266683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CXX_info:
	.quad	_c4CXX
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.738136818 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr_closure
.type GHC.Storable.writeDoubleOffPtr_closure, @object
GHC.Storable.writeDoubleOffPtr_closure:
	.quad	GHC.Storable.writeDoubleOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.7388315 UTC

.section .text
.align 8
.globl GHC.Storable.writeDoubleOffPtr_entry
.type GHC.Storable.writeDoubleOffPtr_entry, @object
GHC.Storable.writeDoubleOffPtr_entry:
_c4CYD:
	jmp GHC.Storable.writeDoubleOffPtr1_entry
	.size GHC.Storable.writeDoubleOffPtr_entry, .-GHC.Storable.writeDoubleOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.739355216 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeDoubleOffPtr_info
.type GHC.Storable.writeDoubleOffPtr_info, @object
GHC.Storable.writeDoubleOffPtr_info:
	.quad	GHC.Storable.writeDoubleOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.743392961 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr1_closure
.type GHC.Storable.writeStablePtrOffPtr1_closure, @object
GHC.Storable.writeStablePtrOffPtr1_closure:
	.quad	GHC.Storable.writeStablePtrOffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.744223466 UTC

.section .text
.align 8
.globl GHC.Storable.writeStablePtrOffPtr1_entry
.type GHC.Storable.writeStablePtrOffPtr1_entry, @object
GHC.Storable.writeStablePtrOffPtr1_entry:
_c4CYR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4CZ0
_c4CZ1:
	leaq block_c4CYO_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CYO
_c4CYP:
	movq (%rbx),%rax
	jmp *(%rax)
_c4CZ0:
	leaq GHC.Storable.writeStablePtrOffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeStablePtrOffPtr1_entry, .-GHC.Storable.writeStablePtrOffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.744884861 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr1_info
.type GHC.Storable.writeStablePtrOffPtr1_info, @object
GHC.Storable.writeStablePtrOffPtr1_info:
	.quad	GHC.Storable.writeStablePtrOffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.745673796 UTC

.section .text
.align 8
_c4CYO:
_c4CYO:
	leaq block_c4CYU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CYU
_c4CYV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CYO, .-_c4CYO


==================== Asm code ====================
2018-03-16 15:59:29.746288569 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CYO_info:
	.quad	_c4CYO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.746957021 UTC

.section .text
.align 8
_c4CYU:
_c4CYU:
	leaq block_c4CYZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4CYZ
_c4CZ4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CYU, .-_c4CYU


==================== Asm code ====================
2018-03-16 15:59:29.747606403 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CYU_info:
	.quad	_c4CYU
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.748251059 UTC

.section .text
.align 8
_c4CYZ:
_c4CYZ:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4CYZ, .-_c4CYZ


==================== Asm code ====================
2018-03-16 15:59:29.748840375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CYZ_info:
	.quad	_c4CYZ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.751042734 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr_closure
.type GHC.Storable.writeStablePtrOffPtr_closure, @object
GHC.Storable.writeStablePtrOffPtr_closure:
	.quad	GHC.Storable.writeStablePtrOffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.751666218 UTC

.section .text
.align 8
.globl GHC.Storable.writeStablePtrOffPtr_entry
.type GHC.Storable.writeStablePtrOffPtr_entry, @object
GHC.Storable.writeStablePtrOffPtr_entry:
_c4CZF:
	jmp GHC.Storable.writeStablePtrOffPtr1_entry
	.size GHC.Storable.writeStablePtrOffPtr_entry, .-GHC.Storable.writeStablePtrOffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.752268071 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeStablePtrOffPtr_info
.type GHC.Storable.writeStablePtrOffPtr_info, @object
GHC.Storable.writeStablePtrOffPtr_info:
	.quad	GHC.Storable.writeStablePtrOffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.756196899 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr1_closure
.type GHC.Storable.writeInt8OffPtr1_closure, @object
GHC.Storable.writeInt8OffPtr1_closure:
	.quad	GHC.Storable.writeInt8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.757026138 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt8OffPtr1_entry
.type GHC.Storable.writeInt8OffPtr1_entry, @object
GHC.Storable.writeInt8OffPtr1_entry:
_c4CZT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D02
_c4D03:
	leaq block_c4CZQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4CZQ
_c4CZR:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D02:
	leaq GHC.Storable.writeInt8OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt8OffPtr1_entry, .-GHC.Storable.writeInt8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.757840853 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr1_info
.type GHC.Storable.writeInt8OffPtr1_info, @object
GHC.Storable.writeInt8OffPtr1_info:
	.quad	GHC.Storable.writeInt8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.758562961 UTC

.section .text
.align 8
_c4CZQ:
_c4CZQ:
	leaq block_c4CZW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4CZW
_c4CZX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CZQ, .-_c4CZQ


==================== Asm code ====================
2018-03-16 15:59:29.75914372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CZQ_info:
	.quad	_c4CZQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.759779228 UTC

.section .text
.align 8
_c4CZW:
_c4CZW:
	leaq block_c4D01_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D01
_c4D06:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4CZW, .-_c4CZW


==================== Asm code ====================
2018-03-16 15:59:29.760350179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4CZW_info:
	.quad	_c4CZW
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.761027415 UTC

.section .text
.align 8
_c4D01:
_c4D01:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb %al,(%rbx,%rcx,1)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D01, .-_c4D01


==================== Asm code ====================
2018-03-16 15:59:29.761967367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D01_info:
	.quad	_c4D01
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.764154035 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr_closure
.type GHC.Storable.writeInt8OffPtr_closure, @object
GHC.Storable.writeInt8OffPtr_closure:
	.quad	GHC.Storable.writeInt8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.764734474 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt8OffPtr_entry
.type GHC.Storable.writeInt8OffPtr_entry, @object
GHC.Storable.writeInt8OffPtr_entry:
_c4D0H:
	jmp GHC.Storable.writeInt8OffPtr1_entry
	.size GHC.Storable.writeInt8OffPtr_entry, .-GHC.Storable.writeInt8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.765340739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt8OffPtr_info
.type GHC.Storable.writeInt8OffPtr_info, @object
GHC.Storable.writeInt8OffPtr_info:
	.quad	GHC.Storable.writeInt8OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.769752309 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr1_closure
.type GHC.Storable.writeWord8OffPtr1_closure, @object
GHC.Storable.writeWord8OffPtr1_closure:
	.quad	GHC.Storable.writeWord8OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.770622205 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord8OffPtr1_entry
.type GHC.Storable.writeWord8OffPtr1_entry, @object
GHC.Storable.writeWord8OffPtr1_entry:
_c4D0V:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D14
_c4D15:
	leaq block_c4D0S_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D0S
_c4D0T:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D14:
	leaq GHC.Storable.writeWord8OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord8OffPtr1_entry, .-GHC.Storable.writeWord8OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.771294326 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr1_info
.type GHC.Storable.writeWord8OffPtr1_info, @object
GHC.Storable.writeWord8OffPtr1_info:
	.quad	GHC.Storable.writeWord8OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.771997848 UTC

.section .text
.align 8
_c4D0S:
_c4D0S:
	leaq block_c4D0Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D0Y
_c4D0Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D0S, .-_c4D0S


==================== Asm code ====================
2018-03-16 15:59:29.772563251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D0S_info:
	.quad	_c4D0S
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.773218299 UTC

.section .text
.align 8
_c4D0Y:
_c4D0Y:
	leaq block_c4D13_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D13
_c4D18:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D0Y, .-_c4D0Y


==================== Asm code ====================
2018-03-16 15:59:29.773866219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D0Y_info:
	.quad	_c4D0Y
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.774534749 UTC

.section .text
.align 8
_c4D13:
_c4D13:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movb %al,(%rbx,%rcx,1)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D13, .-_c4D13


==================== Asm code ====================
2018-03-16 15:59:29.77514916 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D13_info:
	.quad	_c4D13
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.777578993 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr_closure
.type GHC.Storable.writeWord8OffPtr_closure, @object
GHC.Storable.writeWord8OffPtr_closure:
	.quad	GHC.Storable.writeWord8OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.778168707 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord8OffPtr_entry
.type GHC.Storable.writeWord8OffPtr_entry, @object
GHC.Storable.writeWord8OffPtr_entry:
_c4D1J:
	jmp GHC.Storable.writeWord8OffPtr1_entry
	.size GHC.Storable.writeWord8OffPtr_entry, .-GHC.Storable.writeWord8OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.778775145 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord8OffPtr_info
.type GHC.Storable.writeWord8OffPtr_info, @object
GHC.Storable.writeWord8OffPtr_info:
	.quad	GHC.Storable.writeWord8OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.782551016 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr1_closure
.type GHC.Storable.writeInt16OffPtr1_closure, @object
GHC.Storable.writeInt16OffPtr1_closure:
	.quad	GHC.Storable.writeInt16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.783364056 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt16OffPtr1_entry
.type GHC.Storable.writeInt16OffPtr1_entry, @object
GHC.Storable.writeInt16OffPtr1_entry:
_c4D1X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D26
_c4D27:
	leaq block_c4D1U_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D1U
_c4D1V:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D26:
	leaq GHC.Storable.writeInt16OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt16OffPtr1_entry, .-GHC.Storable.writeInt16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.784038394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr1_info
.type GHC.Storable.writeInt16OffPtr1_info, @object
GHC.Storable.writeInt16OffPtr1_info:
	.quad	GHC.Storable.writeInt16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.784915737 UTC

.section .text
.align 8
_c4D1U:
_c4D1U:
	leaq block_c4D20_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D20
_c4D21:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D1U, .-_c4D1U


==================== Asm code ====================
2018-03-16 15:59:29.785858805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D1U_info:
	.quad	_c4D1U
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.786555596 UTC

.section .text
.align 8
_c4D20:
_c4D20:
	leaq block_c4D25_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D25
_c4D2a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D20, .-_c4D20


==================== Asm code ====================
2018-03-16 15:59:29.787166922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D20_info:
	.quad	_c4D20
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.787846214 UTC

.section .text
.align 8
_c4D25:
_c4D25:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movw %ax,(%rbx,%rcx,2)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D25, .-_c4D25


==================== Asm code ====================
2018-03-16 15:59:29.788467388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D25_info:
	.quad	_c4D25
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.790900097 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr_closure
.type GHC.Storable.writeInt16OffPtr_closure, @object
GHC.Storable.writeInt16OffPtr_closure:
	.quad	GHC.Storable.writeInt16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.791529556 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt16OffPtr_entry
.type GHC.Storable.writeInt16OffPtr_entry, @object
GHC.Storable.writeInt16OffPtr_entry:
_c4D2L:
	jmp GHC.Storable.writeInt16OffPtr1_entry
	.size GHC.Storable.writeInt16OffPtr_entry, .-GHC.Storable.writeInt16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.792136882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt16OffPtr_info
.type GHC.Storable.writeInt16OffPtr_info, @object
GHC.Storable.writeInt16OffPtr_info:
	.quad	GHC.Storable.writeInt16OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.79632687 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr1_closure
.type GHC.Storable.writeWord16OffPtr1_closure, @object
GHC.Storable.writeWord16OffPtr1_closure:
	.quad	GHC.Storable.writeWord16OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.797119981 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord16OffPtr1_entry
.type GHC.Storable.writeWord16OffPtr1_entry, @object
GHC.Storable.writeWord16OffPtr1_entry:
_c4D2Z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D38
_c4D39:
	leaq block_c4D2W_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D2W
_c4D2X:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D38:
	leaq GHC.Storable.writeWord16OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord16OffPtr1_entry, .-GHC.Storable.writeWord16OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.797873013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr1_info
.type GHC.Storable.writeWord16OffPtr1_info, @object
GHC.Storable.writeWord16OffPtr1_info:
	.quad	GHC.Storable.writeWord16OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.798599822 UTC

.section .text
.align 8
_c4D2W:
_c4D2W:
	leaq block_c4D32_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D32
_c4D33:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D2W, .-_c4D2W


==================== Asm code ====================
2018-03-16 15:59:29.799189097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D2W_info:
	.quad	_c4D2W
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.799875048 UTC

.section .text
.align 8
_c4D32:
_c4D32:
	leaq block_c4D37_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D37
_c4D3c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D32, .-_c4D32


==================== Asm code ====================
2018-03-16 15:59:29.800453547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D32_info:
	.quad	_c4D32
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.801099052 UTC

.section .text
.align 8
_c4D37:
_c4D37:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movw %ax,(%rbx,%rcx,2)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D37, .-_c4D37


==================== Asm code ====================
2018-03-16 15:59:29.801744988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D37_info:
	.quad	_c4D37
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.804454451 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr_closure
.type GHC.Storable.writeWord16OffPtr_closure, @object
GHC.Storable.writeWord16OffPtr_closure:
	.quad	GHC.Storable.writeWord16OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.805135036 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord16OffPtr_entry
.type GHC.Storable.writeWord16OffPtr_entry, @object
GHC.Storable.writeWord16OffPtr_entry:
_c4D3N:
	jmp GHC.Storable.writeWord16OffPtr1_entry
	.size GHC.Storable.writeWord16OffPtr_entry, .-GHC.Storable.writeWord16OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.805750447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord16OffPtr_info
.type GHC.Storable.writeWord16OffPtr_info, @object
GHC.Storable.writeWord16OffPtr_info:
	.quad	GHC.Storable.writeWord16OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.809927577 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr1_closure
.type GHC.Storable.writeInt32OffPtr1_closure, @object
GHC.Storable.writeInt32OffPtr1_closure:
	.quad	GHC.Storable.writeInt32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.81075653 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt32OffPtr1_entry
.type GHC.Storable.writeInt32OffPtr1_entry, @object
GHC.Storable.writeInt32OffPtr1_entry:
_c4D41:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D4a
_c4D4b:
	leaq block_c4D3Y_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D3Y
_c4D3Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D4a:
	leaq GHC.Storable.writeInt32OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt32OffPtr1_entry, .-GHC.Storable.writeInt32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.81142057 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr1_info
.type GHC.Storable.writeInt32OffPtr1_info, @object
GHC.Storable.writeInt32OffPtr1_info:
	.quad	GHC.Storable.writeInt32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.812083214 UTC

.section .text
.align 8
_c4D3Y:
_c4D3Y:
	leaq block_c4D44_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D44
_c4D45:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D3Y, .-_c4D3Y


==================== Asm code ====================
2018-03-16 15:59:29.812656342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D3Y_info:
	.quad	_c4D3Y
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.813378755 UTC

.section .text
.align 8
_c4D44:
_c4D44:
	leaq block_c4D49_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D49
_c4D4e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D44, .-_c4D44


==================== Asm code ====================
2018-03-16 15:59:29.81395999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D44_info:
	.quad	_c4D44
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.814632823 UTC

.section .text
.align 8
_c4D49:
_c4D49:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D49, .-_c4D49


==================== Asm code ====================
2018-03-16 15:59:29.81523119 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D49_info:
	.quad	_c4D49
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.81753612 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr_closure
.type GHC.Storable.writeInt32OffPtr_closure, @object
GHC.Storable.writeInt32OffPtr_closure:
	.quad	GHC.Storable.writeInt32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.818105617 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt32OffPtr_entry
.type GHC.Storable.writeInt32OffPtr_entry, @object
GHC.Storable.writeInt32OffPtr_entry:
_c4D4P:
	jmp GHC.Storable.writeInt32OffPtr1_entry
	.size GHC.Storable.writeInt32OffPtr_entry, .-GHC.Storable.writeInt32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.818606493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt32OffPtr_info
.type GHC.Storable.writeInt32OffPtr_info, @object
GHC.Storable.writeInt32OffPtr_info:
	.quad	GHC.Storable.writeInt32OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.822514739 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr1_closure
.type GHC.Storable.writeWord32OffPtr1_closure, @object
GHC.Storable.writeWord32OffPtr1_closure:
	.quad	GHC.Storable.writeWord32OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.823383444 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord32OffPtr1_entry
.type GHC.Storable.writeWord32OffPtr1_entry, @object
GHC.Storable.writeWord32OffPtr1_entry:
_c4D53:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D5c
_c4D5d:
	leaq block_c4D50_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D50
_c4D51:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D5c:
	leaq GHC.Storable.writeWord32OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord32OffPtr1_entry, .-GHC.Storable.writeWord32OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.824032574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr1_info
.type GHC.Storable.writeWord32OffPtr1_info, @object
GHC.Storable.writeWord32OffPtr1_info:
	.quad	GHC.Storable.writeWord32OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.824727594 UTC

.section .text
.align 8
_c4D50:
_c4D50:
	leaq block_c4D56_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D56
_c4D57:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D50, .-_c4D50


==================== Asm code ====================
2018-03-16 15:59:29.825637301 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D50_info:
	.quad	_c4D50
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.826355793 UTC

.section .text
.align 8
_c4D56:
_c4D56:
	leaq block_c4D5b_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D5b
_c4D5g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D56, .-_c4D56


==================== Asm code ====================
2018-03-16 15:59:29.826933552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D56_info:
	.quad	_c4D56
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.827565874 UTC

.section .text
.align 8
_c4D5b:
_c4D5b:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movl %eax,(%rbx,%rcx,4)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D5b, .-_c4D5b


==================== Asm code ====================
2018-03-16 15:59:29.828158297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D5b_info:
	.quad	_c4D5b
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.830532344 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr_closure
.type GHC.Storable.writeWord32OffPtr_closure, @object
GHC.Storable.writeWord32OffPtr_closure:
	.quad	GHC.Storable.writeWord32OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.831112759 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord32OffPtr_entry
.type GHC.Storable.writeWord32OffPtr_entry, @object
GHC.Storable.writeWord32OffPtr_entry:
_c4D5R:
	jmp GHC.Storable.writeWord32OffPtr1_entry
	.size GHC.Storable.writeWord32OffPtr_entry, .-GHC.Storable.writeWord32OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.831683933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord32OffPtr_info
.type GHC.Storable.writeWord32OffPtr_info, @object
GHC.Storable.writeWord32OffPtr_info:
	.quad	GHC.Storable.writeWord32OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.835490914 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr1_closure
.type GHC.Storable.writeInt64OffPtr1_closure, @object
GHC.Storable.writeInt64OffPtr1_closure:
	.quad	GHC.Storable.writeInt64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.836354166 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt64OffPtr1_entry
.type GHC.Storable.writeInt64OffPtr1_entry, @object
GHC.Storable.writeInt64OffPtr1_entry:
_c4D65:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D6e
_c4D6f:
	leaq block_c4D62_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D62
_c4D63:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D6e:
	leaq GHC.Storable.writeInt64OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeInt64OffPtr1_entry, .-GHC.Storable.writeInt64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.837017923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr1_info
.type GHC.Storable.writeInt64OffPtr1_info, @object
GHC.Storable.writeInt64OffPtr1_info:
	.quad	GHC.Storable.writeInt64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.838162212 UTC

.section .text
.align 8
_c4D62:
_c4D62:
	leaq block_c4D68_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D68
_c4D69:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D62, .-_c4D62


==================== Asm code ====================
2018-03-16 15:59:29.838782261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D62_info:
	.quad	_c4D62
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.839945506 UTC

.section .text
.align 8
_c4D68:
_c4D68:
	leaq block_c4D6d_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D6d
_c4D6i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D68, .-_c4D68


==================== Asm code ====================
2018-03-16 15:59:29.84057174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D68_info:
	.quad	_c4D68
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.841175977 UTC

.section .text
.align 8
_c4D6d:
_c4D6d:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D6d, .-_c4D6d


==================== Asm code ====================
2018-03-16 15:59:29.84179957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D6d_info:
	.quad	_c4D6d
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.843964525 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr_closure
.type GHC.Storable.writeInt64OffPtr_closure, @object
GHC.Storable.writeInt64OffPtr_closure:
	.quad	GHC.Storable.writeInt64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.844585865 UTC

.section .text
.align 8
.globl GHC.Storable.writeInt64OffPtr_entry
.type GHC.Storable.writeInt64OffPtr_entry, @object
GHC.Storable.writeInt64OffPtr_entry:
_c4D6T:
	jmp GHC.Storable.writeInt64OffPtr1_entry
	.size GHC.Storable.writeInt64OffPtr_entry, .-GHC.Storable.writeInt64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.845101392 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeInt64OffPtr_info
.type GHC.Storable.writeInt64OffPtr_info, @object
GHC.Storable.writeInt64OffPtr_info:
	.quad	GHC.Storable.writeInt64OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.848824623 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr1_closure
.type GHC.Storable.writeWord64OffPtr1_closure, @object
GHC.Storable.writeWord64OffPtr1_closure:
	.quad	GHC.Storable.writeWord64OffPtr1_info


==================== Asm code ====================
2018-03-16 15:59:29.849790984 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord64OffPtr1_entry
.type GHC.Storable.writeWord64OffPtr1_entry, @object
GHC.Storable.writeWord64OffPtr1_entry:
_c4D77:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c4D7g
_c4D7h:
	leaq block_c4D74_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c4D74
_c4D75:
	movq (%rbx),%rax
	jmp *(%rax)
_c4D7g:
	leaq GHC.Storable.writeWord64OffPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Storable.writeWord64OffPtr1_entry, .-GHC.Storable.writeWord64OffPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:29.850449489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr1_info
.type GHC.Storable.writeWord64OffPtr1_info, @object
GHC.Storable.writeWord64OffPtr1_info:
	.quad	GHC.Storable.writeWord64OffPtr1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.851169907 UTC

.section .text
.align 8
_c4D74:
_c4D74:
	leaq block_c4D7a_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4D7a
_c4D7b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D74, .-_c4D74


==================== Asm code ====================
2018-03-16 15:59:29.851790437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D74_info:
	.quad	_c4D74
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.852623329 UTC

.section .text
.align 8
_c4D7a:
_c4D7a:
	leaq block_c4D7f_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c4D7f
_c4D7k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c4D7a, .-_c4D7a


==================== Asm code ====================
2018-03-16 15:59:29.853224009 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D7a_info:
	.quad	_c4D7a
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.853969378 UTC

.section .text
.align 8
_c4D7f:
_c4D7f:
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rax,(%rbx,%rcx,8)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4D7f, .-_c4D7f


==================== Asm code ====================
2018-03-16 15:59:29.854566904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4D7f_info:
	.quad	_c4D7f
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:29.856785394 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr_closure
.type GHC.Storable.writeWord64OffPtr_closure, @object
GHC.Storable.writeWord64OffPtr_closure:
	.quad	GHC.Storable.writeWord64OffPtr_info


==================== Asm code ====================
2018-03-16 15:59:29.857963897 UTC

.section .text
.align 8
.globl GHC.Storable.writeWord64OffPtr_entry
.type GHC.Storable.writeWord64OffPtr_entry, @object
GHC.Storable.writeWord64OffPtr_entry:
_c4D7V:
	jmp GHC.Storable.writeWord64OffPtr1_entry
	.size GHC.Storable.writeWord64OffPtr_entry, .-GHC.Storable.writeWord64OffPtr_entry


==================== Asm code ====================
2018-03-16 15:59:29.858497944 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Storable.writeWord64OffPtr_info
.type GHC.Storable.writeWord64OffPtr_info, @object
GHC.Storable.writeWord64OffPtr_info:
	.quad	GHC.Storable.writeWord64OffPtr_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:59:29.860228894 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Storable.$trModule4_bytes
.type GHC.Storable.$trModule4_bytes, @object
GHC.Storable.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:29.861882655 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule3_closure
.type GHC.Storable.$trModule3_closure, @object
GHC.Storable.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Storable.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:29.863475037 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Storable.$trModule2_bytes
.type GHC.Storable.$trModule2_bytes, @object
GHC.Storable.$trModule2_bytes:
	.asciz "GHC.Storable"


==================== Asm code ====================
2018-03-16 15:59:29.865101573 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule1_closure
.type GHC.Storable.$trModule1_closure, @object
GHC.Storable.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Storable.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:29.867273166 UTC

.section .data
.align 8
.align 1
.globl GHC.Storable.$trModule_closure
.type GHC.Storable.$trModule_closure, @object
GHC.Storable.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Storable.$trModule3_closure+1
	.quad	GHC.Storable.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:29.868975362 UTC

.section .data.rel.ro
.align 8
.align 1
S4D87_srt:

