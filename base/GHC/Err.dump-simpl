
==================== Tidy Core ====================
2018-03-16 15:54:40.021677798 UTC

Result size of Tidy Core
  = {terms: 98, types: 77, coercions: 6, joins: 0/0}

-- RHS size: {terms: 8, types: 9, coercions: 3, joins: 0/0}
error :: forall (a :: TYPE r). HasCallStack => [Char] -> a
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
error
  = \ (@ (r_a2QT :: RuntimeRep))
      (@ (a_a2QU :: TYPE r_a2QT))
      ($dIP_a2QW :: HasCallStack)
      (s_a2Q2 :: [Char]) ->
      raise#
        @ GHC.Exception.SomeException
        @ r_a2QT
        @ a_a2QU
        (errorCallWithCallStackException
           s_a2Q2
           ($dIP_a2QW
            `cast` (GHC.Classes.N:IP[0] <"callStack">_N <CallStack>_N
                    :: (?callStack::CallStack :: Constraint) ~R# (CallStack :: *))))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_r2T3 :: CallStack
[GblId, Caf=NoCafRefs, Str=m3, Unf=OtherCon []]
lvl_r2T3
  = GHC.Stack.Types.FreezeCallStack GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
errorWithoutStackTrace :: forall (a :: TYPE r). [Char] -> a
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
errorWithoutStackTrace
  = \ (@ (r_a2R4 :: RuntimeRep))
      (@ (a_a2R5 :: TYPE r_a2R4))
      (s_a2Q3 :: [Char]) ->
      raise#
        @ GHC.Exception.SomeException
        @ r_a2R4
        @ a_a2R5
        (errorCallWithCallStackException s_a2Q3 lvl_r2T3)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_r2T4 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_r2T4
  = "Oops! The program has entered an `absent' argument!\n"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_r2T5 :: [Char]
[GblId]
lvl2_r2T5 = GHC.CString.unpackCString# lvl1_r2T4

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
absentErr :: forall a. a
[GblId, Str=x]
absentErr
  = \ (@ a_a2Rf) ->
      errorWithoutStackTrace @ 'GHC.Types.LiftedRep @ a_a2Rf lvl2_r2T5

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl3_r2T6 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl3_r2T6 = "Prelude.undefined"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl4_r2T7 :: [Char]
[GblId]
lvl4_r2T7 = GHC.CString.unpackCString# lvl3_r2T6

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_r2T8 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_r2T8 = "error"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r2T9 :: [Char]
[GblId]
lvl6_r2T9 = GHC.CString.unpackCString# lvl5_r2T8

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Err.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Err.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r2Ta :: [Char]
[GblId]
lvl7_r2Ta = GHC.CString.unpackCString# GHC.Err.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Err.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Err.$trModule2 = "GHC.Err"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl8_r2Tb :: [Char]
[GblId]
lvl8_r2Tb = GHC.CString.unpackCString# GHC.Err.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl9_r2Tc :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl9_r2Tc = "./GHC/Err.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl10_r2Td :: [Char]
[GblId]
lvl10_r2Td = GHC.CString.unpackCString# lvl9_r2Tc

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl11_r2Te :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl11_r2Te = GHC.Types.I# 79#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl12_r2Tf :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl12_r2Tf = GHC.Types.I# 14#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl13_r2Tg :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl13_r2Tg = GHC.Types.I# 39#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl14_r2Th :: SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl14_r2Th
  = GHC.Stack.Types.SrcLoc
      lvl7_r2Ta
      lvl8_r2Tb
      lvl10_r2Td
      lvl11_r2Te
      lvl12_r2Tf
      lvl11_r2Te
      lvl13_r2Tg

-- RHS size: {terms: 15, types: 9, coercions: 3, joins: 0/0}
undefined :: forall (a :: TYPE r). HasCallStack => a
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []]
undefined
  = \ (@ (r_a2Rj :: RuntimeRep))
      (@ (a_a2Rk :: TYPE r_a2Rj))
      ($dIP_a2Rm :: HasCallStack) ->
      raise#
        @ GHC.Exception.SomeException
        @ r_a2Rj
        @ a_a2Rk
        (errorCallWithCallStackException
           lvl4_r2T7
           (case $dIP_a2Rm
                 `cast` (GHC.Classes.N:IP[0] <"callStack">_N <CallStack>_N
                         :: (?callStack::CallStack :: Constraint) ~R# (CallStack :: *))
            of wild1_X6 {
              __DEFAULT ->
                GHC.Stack.Types.PushCallStack lvl6_r2T9 lvl14_r2Th wild1_X6;
              FreezeCallStack ds1_d20G -> wild1_X6
            }))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Err.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Err.$trModule3 = GHC.Types.TrNameS GHC.Err.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Err.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Err.$trModule1 = GHC.Types.TrNameS GHC.Err.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Err.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Err.$trModule
  = GHC.Types.Module GHC.Err.$trModule3 GHC.Err.$trModule1


