
==================== Raw Cmm ====================
2018-03-16 15:55:01.833586237 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:01.835352053 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { []
         }
     {offset
       cnXi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnXj; else goto cnXk;
       cnXj: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnXk: // global
           I64[Sp - 8] = block_cnXf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unXo; else goto cnXg;
       unXo: // global
           call _cnXf(R1) args: 0, res: 0, upd: 0;
       cnXg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$p1GHCiSandboxIO_info" {
     GHC.GHCi.$p1GHCiSandboxIO_info:
         const GHC.GHCi.$p1GHCiSandboxIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnXf() //  [R1]
         { []
         }
     {offset
       cnXf: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnXf_info" {
     block_cnXf_info:
         const _cnXf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.841226508 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { []
         }
     {offset
       cnXH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnXI; else goto cnXJ;
       cnXI: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnXJ: // global
           I64[Sp - 8] = block_cnXE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unXN; else goto cnXF;
       unXN: // global
           call _cnXE(R1) args: 0, res: 0, upd: 0;
       cnXF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.ghciStepIO_info" {
     GHC.GHCi.ghciStepIO_info:
         const GHC.GHCi.ghciStepIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnXE() //  [R1]
         { []
         }
     {offset
       cnXE: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnXE_info" {
     block_cnXE_info:
         const _cnXE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.846089373 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.848486592 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       cnY4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnY5; else goto cnY6;
       cnY5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnY6: // global
           I64[Sp - 16] = block_cnY2_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fFunctorNoIO1_info" {
     GHC.GHCi.$fFunctorNoIO1_info:
         const GHC.GHCi.$fFunctorNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cnY2() //  []
         { []
         }
     {offset
       cnY2: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnY2_info" {
     block_cnY2_info:
         const _cnY2;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.853512224 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.856217248 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { []
         }
     {offset
       cnYm: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO5_info" {
     GHC.GHCi.$fApplicativeNoIO5_info:
         const GHC.GHCi.$fApplicativeNoIO5_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.859499337 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { []
         }
     {offset
       cnYy: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fGHCiSandboxIONoIO1_info" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_info:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.863992689 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { []
         }
     {offset
       cnYJ: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.noio_info" {
     GHC.GHCi.noio_info:
         const GHC.GHCi.noio_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.868522733 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       cnYW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnYX; else goto cnYY;
       cnYX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnYY: // global
           I64[Sp - 16] = block_cnYU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fMonadNoIO1_info" {
     GHC.GHCi.$fMonadNoIO1_info:
         const GHC.GHCi.$fMonadNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cnYU() //  [R1]
         { []
         }
     {offset
       cnYU: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnYU_info" {
     block_cnYU_info:
         const _cnYU;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.876135555 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { []
         }
     {offset
       cnZh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnZi; else goto cnZj;
       cnZi: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnZj: // global
           I64[Sp - 16] = block_cnZc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO4_info" {
     GHC.GHCi.$fApplicativeNoIO4_info:
         const GHC.GHCi.$fApplicativeNoIO4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cnZc() //  [R1]
         { []
         }
     {offset
       cnZc: // global
           I64[Sp] = block_cnZe_info;
           _snRP::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snRP::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cnZc_info" {
     block_cnZc_info:
         const _cnZc;
         const 1;
         const 30;
 },
 _cnZe() //  [R1]
         { []
         }
     {offset
       cnZe: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cnZn; else goto cnZm;
       cnZn: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnZm: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnZe_info" {
     block_cnZe_info:
         const _cnZe;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.883295269 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { []
         }
     {offset
       cnZH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnZI; else goto cnZJ;
       cnZI: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnZJ: // global
           I64[Sp - 16] = block_cnZF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO2_info" {
     GHC.GHCi.$fApplicativeNoIO2_info:
         const GHC.GHCi.$fApplicativeNoIO2_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cnZF() //  []
         { []
         }
     {offset
       cnZF: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnZF_info" {
     block_cnZF_info:
         const _cnZF;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.88975274 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       co02: // global
           if ((Sp + -24) < SpLim) (likely: False) goto co03; else goto co04;
       co03: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       co04: // global
           I64[Sp - 24] = block_cnZX_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO3_info" {
     GHC.GHCi.$fApplicativeNoIO3_info:
         const GHC.GHCi.$fApplicativeNoIO3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _cnZX() //  [R1]
         { []
         }
     {offset
       cnZX: // global
           I64[Sp] = block_cnZZ_info;
           _snS6::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _snS6::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cnZX_info" {
     block_cnZX_info:
         const _cnZX;
         const 2;
         const 30;
 },
 _cnZZ() //  [R1]
         { []
         }
     {offset
       cnZZ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto co08; else goto co07;
       co08: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co07: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnZZ_info" {
     block_cnZZ_info:
         const _cnZZ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.899328414 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       co0v: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co0w; else goto co0x;
       co0w: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co0x: // global
           I64[Sp - 16] = block_co0r_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO1_info" {
     GHC.GHCi.$fApplicativeNoIO1_info:
         const GHC.GHCi.$fApplicativeNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co0r() //  [R1]
         { []
         }
     {offset
       co0r: // global
           I64[Sp] = block_co0t_info;
           _snSg::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snSg::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_co0r_info" {
     block_co0r_info:
         const _co0r;
         const 1;
         const 30;
 },
 _co0t() //  []
         { []
         }
     {offset
       co0t: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co0t_info" {
     block_co0t_info:
         const _co0t;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.905737876 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       co0Q: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fMonadNoIO_$c>>_info" {
     GHC.GHCi.$fMonadNoIO_$c>>_info:
         const GHC.GHCi.$fMonadNoIO_$c>>_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.908792256 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.910810792 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { []
         }
     {offset
       co12: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_rnRg_info" {
     lvl_rnRg_info:
         const lvl_rnRg_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const SnUz_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.913823659 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.915596317 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.917339637 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.918954847 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.92062228 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.922321067 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.924525009 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.92630714 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.928044154 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.929700879 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.931314932 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.933606534 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.935438542 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.937043981 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.938821172 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.940595854 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.942239898 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.943977697 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.945747482 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.947425364 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.949588276 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.951201335 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.952829665 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.955209648 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { []
         }
     {offset
       co1B: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto co1F; else goto co1E;
       co1F: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co1E: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.C:GHCiSandboxIO_info" {
     GHC.GHCi.C:GHCiSandboxIO_info:
         const GHC.GHCi.C:GHCiSandboxIO_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.95868503 UTC

[section ""cstring" . inXa_str" {
     inXa_str:
         I8[] [98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]
 },
 GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { []
         }
     {offset
       co1L: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.C:GHCiSandboxIO_con_info" {
     GHC.GHCi.C:GHCiSandboxIO_con_info:
         const GHC.GHCi.C:GHCiSandboxIO_con_entry;
         const 2;
         const 4;
         const inXa_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.961727482 UTC

[section ""relreadonly" . SnUz_srt" {
     SnUz_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.150293247 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:02.152453649 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { []
         }
     {offset
       co2X: // global
           if ((Sp + -8) < SpLim) (likely: False) goto co2Y; else goto co2Z;
       co2Y: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       co2Z: // global
           I64[Sp - 8] = block_co2U_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uo33; else goto co2V;
       uo33: // global
           call _co2U(R1) args: 0, res: 0, upd: 0;
       co2V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$p1GHCiSandboxIO_info" {
     GHC.GHCi.$p1GHCiSandboxIO_info:
         const GHC.GHCi.$p1GHCiSandboxIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _co2U() //  [R1]
         { []
         }
     {offset
       co2U: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co2U_info" {
     block_co2U_info:
         const _co2U;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.159300694 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { []
         }
     {offset
       co3n: // global
           if ((Sp + -8) < SpLim) (likely: False) goto co3o; else goto co3p;
       co3o: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       co3p: // global
           I64[Sp - 8] = block_co3k_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uo3t; else goto co3l;
       uo3t: // global
           call _co3k(R1) args: 0, res: 0, upd: 0;
       co3l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.ghciStepIO_info" {
     GHC.GHCi.ghciStepIO_info:
         const GHC.GHCi.ghciStepIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _co3k() //  [R1]
         { []
         }
     {offset
       co3k: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co3k_info" {
     block_co3k_info:
         const _co3k;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.163984492 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.166784673 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       co3L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co3M; else goto co3N;
       co3M: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co3N: // global
           I64[Sp - 16] = block_co3J_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fFunctorNoIO1_info" {
     GHC.GHCi.$fFunctorNoIO1_info:
         const GHC.GHCi.$fFunctorNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co3J() //  []
         { []
         }
     {offset
       co3J: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co3J_info" {
     block_co3J_info:
         const _co3J;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.171525358 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.173617599 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { []
         }
     {offset
       co44: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO5_info" {
     GHC.GHCi.$fApplicativeNoIO5_info:
         const GHC.GHCi.$fApplicativeNoIO5_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.176920102 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { []
         }
     {offset
       co4g: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fGHCiSandboxIONoIO1_info" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_info:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.180266603 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { []
         }
     {offset
       co4r: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.noio_info" {
     GHC.GHCi.noio_info:
         const GHC.GHCi.noio_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.183940761 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       co4E: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co4F; else goto co4G;
       co4F: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co4G: // global
           I64[Sp - 16] = block_co4C_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fMonadNoIO1_info" {
     GHC.GHCi.$fMonadNoIO1_info:
         const GHC.GHCi.$fMonadNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co4C() //  [R1]
         { []
         }
     {offset
       co4C: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co4C_info" {
     block_co4C_info:
         const _co4C;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.191278381 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { []
         }
     {offset
       co50: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co51; else goto co52;
       co51: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co52: // global
           I64[Sp - 16] = block_co4V_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO4_info" {
     GHC.GHCi.$fApplicativeNoIO4_info:
         const GHC.GHCi.$fApplicativeNoIO4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co4V() //  [R1]
         { []
         }
     {offset
       co4V: // global
           I64[Sp] = block_co4X_info;
           _so2k::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _so2k::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_co4V_info" {
     block_co4V_info:
         const _co4V;
         const 1;
         const 30;
 },
 _co4X() //  [R1]
         { []
         }
     {offset
       co4X: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto co56; else goto co55;
       co56: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co55: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co4X_info" {
     block_co4X_info:
         const _co4X;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.198080536 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { []
         }
     {offset
       co5t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co5u; else goto co5v;
       co5u: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co5v: // global
           I64[Sp - 16] = block_co5r_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO2_info" {
     GHC.GHCi.$fApplicativeNoIO2_info:
         const GHC.GHCi.$fApplicativeNoIO2_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co5r() //  []
         { []
         }
     {offset
       co5r: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co5r_info" {
     block_co5r_info:
         const _co5r;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.203491867 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       co5P: // global
           if ((Sp + -24) < SpLim) (likely: False) goto co5Q; else goto co5R;
       co5Q: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       co5R: // global
           I64[Sp - 24] = block_co5K_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO3_info" {
     GHC.GHCi.$fApplicativeNoIO3_info:
         const GHC.GHCi.$fApplicativeNoIO3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _co5K() //  [R1]
         { []
         }
     {offset
       co5K: // global
           I64[Sp] = block_co5M_info;
           _so2B::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _so2B::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_co5K_info" {
     block_co5K_info:
         const _co5K;
         const 2;
         const 30;
 },
 _co5M() //  [R1]
         { []
         }
     {offset
       co5M: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto co5V; else goto co5U;
       co5V: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co5U: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co5M_info" {
     block_co5M_info:
         const _co5M;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.210507928 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { []
         }
     {offset
       co6l: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co6m; else goto co6n;
       co6m: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co6n: // global
           I64[Sp - 16] = block_co6h_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fApplicativeNoIO1_info" {
     GHC.GHCi.$fApplicativeNoIO1_info:
         const GHC.GHCi.$fApplicativeNoIO1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _co6h() //  [R1]
         { []
         }
     {offset
       co6h: // global
           I64[Sp] = block_co6j_info;
           _so2L::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _so2L::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_co6h_info" {
     block_co6h_info:
         const _co6h;
         const 1;
         const 30;
 },
 _co6j() //  []
         { []
         }
     {offset
       co6j: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_co6j_info" {
     block_co6j_info:
         const _co6j;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.216820456 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { []
         }
     {offset
       co6I: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.$fMonadNoIO_$c>>_info" {
     GHC.GHCi.$fMonadNoIO_$c>>_info:
         const GHC.GHCi.$fMonadNoIO_$c>>_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.220427064 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.222454895 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { []
         }
     {offset
       co6U: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_rnRg_info" {
     lvl_rnRg_info:
         const lvl_rnRg_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const So6X_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.225392643 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.227125056 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.228839956 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.230538645 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.232117678 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.233733284 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.235315655 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.236976853 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.239271099 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.240945104 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.242626284 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.244845443 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.246563926 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.248166053 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.249897496 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.251490514 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.253036473 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.25483762 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.256657021 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.258389368 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.26009217 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.261828025 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.263526558 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.265965139 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { []
         }
     {offset
       co7u: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto co7y; else goto co7x;
       co7y: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co7x: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.C:GHCiSandboxIO_info" {
     GHC.GHCi.C:GHCiSandboxIO_info:
         const GHC.GHCi.C:GHCiSandboxIO_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.26969572 UTC

[section ""cstring" . io7G_str" {
     io7G_str:
         I8[] [98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]
 },
 GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { []
         }
     {offset
       co7F: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.GHCi.C:GHCiSandboxIO_con_info" {
     GHC.GHCi.C:GHCiSandboxIO_con_info:
         const GHC.GHCi.C:GHCiSandboxIO_con_entry;
         const 2;
         const 4;
         const io7G_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:02.273111666 UTC

[section ""relreadonly" . So6X_srt" {
     So6X_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]

