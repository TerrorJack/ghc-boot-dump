
==================== Tidy Core ====================
2018-03-16 16:08:32.166517448 UTC

Result size of Tidy Core
  = {terms: 928, types: 1,100, coercions: 38, joins: 3/7}

-- RHS size: {terms: 16, types: 13, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$WChunk [InlPrag=INLINE[2]]
  :: Word -> Ptr Chunk -> Ptr Addr -> Chunk
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_adlj4 [Occ=Once!] :: Word)
                 (dt_adlj5 [Occ=Once!] :: Ptr Chunk)
                 (dt_adlj6 [Occ=Once!] :: Ptr Addr) ->
                 case dt_adlj4 of { GHC.Types.W# dt_adlj7 [Occ=Once] ->
                 case dt_adlj5 of { GHC.Ptr.Ptr dt_adlj8 [Occ=Once] ->
                 case dt_adlj6 of { GHC.Ptr.Ptr dt_adlj9 [Occ=Once] ->
                 GHC.ExecutionStack.Internal.Chunk dt_adlj7 dt_adlj8 dt_adlj9
                 }
                 }
                 }}]
GHC.ExecutionStack.Internal.$WChunk
  = \ (dt_adlj4 [Occ=Once!] :: Word)
      (dt_adlj5 [Occ=Once!] :: Ptr Chunk)
      (dt_adlj6 [Occ=Once!] :: Ptr Addr) ->
      case dt_adlj4 of { GHC.Types.W# dt_adlj7 [Occ=Once] ->
      case dt_adlj5 of { GHC.Ptr.Ptr dt_adlj8 [Occ=Once] ->
      case dt_adlj6 of { GHC.Ptr.Ptr dt_adlj9 [Occ=Once] ->
      GHC.ExecutionStack.Internal.Chunk dt_adlj7 dt_adlj8 dt_adlj9
      }
      }
      }

-- RHS size: {terms: 5, types: 5, coercions: 0, joins: 0/0}
sourceColumn :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U(U))>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxE [Occ=Once!] :: SrcLoc) ->
                 case ds_ddlxE of
                 { SrcLoc _ [Occ=Dead] _ [Occ=Dead] ds3_ddlxH [Occ=Once] ->
                 ds3_ddlxH
                 }}]
sourceColumn
  = \ (ds_ddlxE :: SrcLoc) ->
      case ds_ddlxE of { SrcLoc ds1_ddlxF ds2_ddlxG ds3_ddlxH ->
      ds3_ddlxH
      }

-- RHS size: {terms: 5, types: 5, coercions: 0, joins: 0/0}
sourceLine :: SrcLoc -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,1*U(U),A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxA [Occ=Once!] :: SrcLoc) ->
                 case ds_ddlxA of
                 { SrcLoc _ [Occ=Dead] ds2_ddlxC [Occ=Once] _ [Occ=Dead] ->
                 ds2_ddlxC
                 }}]
sourceLine
  = \ (ds_ddlxA :: SrcLoc) ->
      case ds_ddlxA of { SrcLoc ds1_ddlxB ds2_ddlxC ds3_ddlxD ->
      ds2_ddlxC
      }

-- RHS size: {terms: 5, types: 5, coercions: 0, joins: 0/0}
sourceFile :: SrcLoc -> String
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(1*U,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxw [Occ=Once!] :: SrcLoc) ->
                 case ds_ddlxw of
                 { SrcLoc ds1_ddlxx [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds1_ddlxx
                 }}]
sourceFile
  = \ (ds_ddlxw :: SrcLoc) ->
      case ds_ddlxw of { SrcLoc ds1_ddlxx ds2_ddlxy ds3_ddlxz ->
      ds1_ddlxx
      }

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
srcLoc :: Location -> Maybe SrcLoc
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxs [Occ=Once!] :: Location) ->
                 case ds_ddlxs of
                 { Location _ [Occ=Dead] _ [Occ=Dead] ds3_ddlxv [Occ=Once] ->
                 ds3_ddlxv
                 }}]
srcLoc
  = \ (ds_ddlxs :: Location) ->
      case ds_ddlxs of { Location ds1_ddlxt ds2_ddlxu ds3_ddlxv ->
      ds3_ddlxv
      }

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
functionName :: Location -> String
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,1*U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxo [Occ=Once!] :: Location) ->
                 case ds_ddlxo of
                 { Location _ [Occ=Dead] ds2_ddlxq [Occ=Once] _ [Occ=Dead] ->
                 ds2_ddlxq
                 }}]
functionName
  = \ (ds_ddlxo :: Location) ->
      case ds_ddlxo of { Location ds1_ddlxp ds2_ddlxq ds3_ddlxr ->
      ds2_ddlxq
      }

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
objectName :: Location -> String
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(1*U,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxk [Occ=Once!] :: Location) ->
                 case ds_ddlxk of
                 { Location ds1_ddlxl [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds1_ddlxl
                 }}]
objectName
  = \ (ds_ddlxk :: Location) ->
      case ds_ddlxk of { Location ds1_ddlxl ds2_ddlxm ds3_ddlxn ->
      ds1_ddlxl
      }

-- RHS size: {terms: 6, types: 6, coercions: 0, joins: 0/0}
chunkFirstFrame :: Chunk -> Ptr Addr
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxf [Occ=Once!] :: Chunk) ->
                 case ds_ddlxf of
                 { Chunk _ [Occ=Dead] _ [Occ=Dead] dt2_ddlyl [Occ=Once] ->
                 GHC.Ptr.Ptr @ Addr dt2_ddlyl
                 }}]
chunkFirstFrame
  = \ (ds_ddlxf :: Chunk) ->
      case ds_ddlxf of { Chunk dt_ddlyj dt1_ddlyk dt2_ddlyl ->
      GHC.Ptr.Ptr @ Addr dt2_ddlyl
      }

-- RHS size: {terms: 6, types: 6, coercions: 0, joins: 0/0}
chunkNext :: Chunk -> Ptr Chunk
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlxa [Occ=Once!] :: Chunk) ->
                 case ds_ddlxa of
                 { Chunk _ [Occ=Dead] dt1_ddlyh [Occ=Once] _ [Occ=Dead] ->
                 GHC.Ptr.Ptr @ Chunk dt1_ddlyh
                 }}]
chunkNext
  = \ (ds_ddlxa :: Chunk) ->
      case ds_ddlxa of { Chunk dt_ddlyg dt1_ddlyh dt2_ddlyi ->
      GHC.Ptr.Ptr @ Chunk dt1_ddlyh
      }

-- RHS size: {terms: 6, types: 5, coercions: 0, joins: 0/0}
chunkFrames :: Chunk -> Word
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlx5 [Occ=Once!] :: Chunk) ->
                 case ds_ddlx5 of
                 { Chunk dt_ddlyd [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.W# dt_ddlyd
                 }}]
chunkFrames
  = \ (ds_ddlx5 :: Chunk) ->
      case ds_ddlx5 of { Chunk dt_ddlyd dt1_ddlye dt2_ddlyf ->
      GHC.Types.W# dt_ddlyd
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.ExecutionStack.Internal.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$trModule3
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 80 0}]
GHC.ExecutionStack.Internal.$trModule2
  = "GHC.ExecutionStack.Internal"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$trModule1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.ExecutionStack.Internal.$trModule
  = GHC.Types.Module
      GHC.ExecutionStack.Internal.$trModule3
      GHC.ExecutionStack.Internal.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rdm9l :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_rdm9l
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_rdm9m :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_rdm9m
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcChar (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_rdm9n :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_rdm9n
  = GHC.Types.KindRepTyConApp
      GHC.Tuple.$tc() (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep3_rdm9o :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_rdm9o
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcWord (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep4_rdm9p :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_rdm9p
  = GHC.Types.:
      @ GHC.Types.KindRep $krep1_rdm9m (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_rdm9q :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_rdm9q
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep4_rdm9p

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep6_rdm9r :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_rdm9r
  = GHC.Types.:
      @ GHC.Types.KindRep $krep2_rdm9n (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_rdm9s :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_rdm9s
  = GHC.Types.KindRepTyConApp GHC.Ptr.$tcPtr $krep6_rdm9r

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep8_rdm9t :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep8_rdm9t
  = GHC.Types.:
      @ GHC.Types.KindRep $krep7_rdm9s (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_rdm9u :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep9_rdm9u
  = GHC.Types.KindRepTyConApp GHC.Ptr.$tcPtr $krep8_rdm9t

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSrcLoc2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tcSrcLoc2 = "SrcLoc"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSrcLoc1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tcSrcLoc1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tcSrcLoc2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSrcLoc :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tcSrcLoc
  = GHC.Types.TyCon
      8235067574311587288##
      11106182367596705879##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tcSrcLoc1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep10_rdm9v :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep10_rdm9v
  = GHC.Types.KindRepTyConApp
      GHC.ExecutionStack.Internal.$tcSrcLoc
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_rdm9w :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep11_rdm9w = GHC.Types.KindRepFun $krep_rdm9l $krep10_rdm9v

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep12_rdm9x :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep12_rdm9x = GHC.Types.KindRepFun $krep_rdm9l $krep11_rdm9w

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'SrcLoc1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ExecutionStack.Internal.$tc'SrcLoc1
  = GHC.Types.KindRepFun $krep5_rdm9q $krep12_rdm9x

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'SrcLoc3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tc'SrcLoc3 = "'SrcLoc"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'SrcLoc2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tc'SrcLoc2
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tc'SrcLoc3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'SrcLoc :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tc'SrcLoc
  = GHC.Types.TyCon
      11095721805058681290##
      15266549541595723377##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tc'SrcLoc2
      0#
      GHC.ExecutionStack.Internal.$tc'SrcLoc1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep13_rdm9y :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep13_rdm9y
  = GHC.Types.:
      @ GHC.Types.KindRep
      $krep10_rdm9v
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep14_rdm9z :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep14_rdm9z
  = GHC.Types.KindRepTyConApp GHC.Base.$tcMaybe $krep13_rdm9y

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcLocation2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tcLocation2 = "Location"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcLocation1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tcLocation1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tcLocation2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcLocation :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tcLocation
  = GHC.Types.TyCon
      11638758687983955592##
      6940671496618727587##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tcLocation1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep15_rdm9A :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep15_rdm9A
  = GHC.Types.KindRepTyConApp
      GHC.ExecutionStack.Internal.$tcLocation
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep16_rdm9B :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep16_rdm9B = GHC.Types.KindRepFun $krep14_rdm9z $krep15_rdm9A

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep17_rdm9C :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep17_rdm9C = GHC.Types.KindRepFun $krep5_rdm9q $krep16_rdm9B

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Location1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ExecutionStack.Internal.$tc'Location1
  = GHC.Types.KindRepFun $krep5_rdm9q $krep17_rdm9C

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Location3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ExecutionStack.Internal.$tc'Location3 = "'Location"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Location2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tc'Location2
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tc'Location3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Location :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tc'Location
  = GHC.Types.TyCon
      12834480788254682335##
      10467761170474242090##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tc'Location2
      0#
      GHC.ExecutionStack.Internal.$tc'Location1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcStackTrace2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ExecutionStack.Internal.$tcStackTrace2 = "StackTrace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcStackTrace1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tcStackTrace1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tcStackTrace2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcStackTrace :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tcStackTrace
  = GHC.Types.TyCon
      156026104294967557##
      17600277320898304892##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tcStackTrace1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep18_rdm9D :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep18_rdm9D
  = GHC.Types.KindRepTyConApp
      GHC.ExecutionStack.Internal.$tcStackTrace
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep19_rdm9E :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep19_rdm9E
  = GHC.Types.:
      @ GHC.Types.KindRep
      $krep18_rdm9D
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep20_rdm9F :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep20_rdm9F
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcForeignPtr $krep19_rdm9E

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'StackTrace1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ExecutionStack.Internal.$tc'StackTrace1
  = GHC.Types.KindRepFun $krep20_rdm9F $krep18_rdm9D

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'StackTrace3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ExecutionStack.Internal.$tc'StackTrace3 = "'StackTrace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'StackTrace2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tc'StackTrace2
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tc'StackTrace3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'StackTrace :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tc'StackTrace
  = GHC.Types.TyCon
      8151790971853785814##
      7394195233358636505##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tc'StackTrace2
      0#
      GHC.ExecutionStack.Internal.$tc'StackTrace1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcChunk2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tcChunk2 = "Chunk"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcChunk1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tcChunk1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tcChunk2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcChunk :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tcChunk
  = GHC.Types.TyCon
      1813577326074213410##
      3256155729866972563##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tcChunk1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep21_rdm9G :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep21_rdm9G
  = GHC.Types.KindRepTyConApp
      GHC.ExecutionStack.Internal.$tcChunk
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep22_rdm9H :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep22_rdm9H = GHC.Types.KindRepFun $krep9_rdm9u $krep21_rdm9G

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep23_rdm9I :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep23_rdm9I
  = GHC.Types.:
      @ GHC.Types.KindRep
      $krep21_rdm9G
      (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep24_rdm9J :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep24_rdm9J
  = GHC.Types.KindRepTyConApp GHC.Ptr.$tcPtr $krep23_rdm9I

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep25_rdm9K :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep25_rdm9K = GHC.Types.KindRepFun $krep24_rdm9J $krep22_rdm9H

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Chunk1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ExecutionStack.Internal.$tc'Chunk1
  = GHC.Types.KindRepFun $krep3_rdm9o $krep25_rdm9K

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Chunk3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tc'Chunk3 = "'Chunk"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Chunk2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tc'Chunk2
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tc'Chunk3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tc'Chunk :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tc'Chunk
  = GHC.Types.TyCon
      16594405016023301875##
      5381929581673016432##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tc'Chunk2
      0#
      GHC.ExecutionStack.Internal.$tc'Chunk1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSession2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ExecutionStack.Internal.$tcSession2 = "Session"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSession1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ExecutionStack.Internal.$tcSession1
  = GHC.Types.TrNameS GHC.ExecutionStack.Internal.$tcSession2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.$tcSession :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ExecutionStack.Internal.$tcSession
  = GHC.Types.TyCon
      11168382530978838993##
      7144139957235519240##
      GHC.ExecutionStack.Internal.$trModule
      GHC.ExecutionStack.Internal.$tcSession1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 8, types: 17, coercions: 0, joins: 0/0}
libdw_pool_clear_rdm9L
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []]
libdw_pool_clear_rdm9L
  = \ (ds_ddly5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld #)}_ddly6
             ds_ddly5
      of
      { (# ds1_ddly4 #) ->
      (# ds1_ddly4, GHC.Tuple.() #)
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
invalidateDebugCache :: IO ()
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (ds_XdlAk [Occ=Once]
                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld #)}_ddly6
                         ds_XdlAk
                  of
                  { (# ds1_ddly4 [Occ=Once] #) ->
                  (# ds1_ddly4, GHC.Tuple.() #)
                  })
               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (IO () :: *))}]
invalidateDebugCache
  = libdw_pool_clear_rdm9L
    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (IO () :: *))

-- RHS size: {terms: 29, types: 63, coercions: 1, joins: 0/0}
stackDepth :: StackTrace -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_ddlw0 [Occ=Once] :: StackTrace) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Int #)
                        (\ (s_i91ZD [Occ=Once, OS=OneShot]
                              :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                           case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i91ZD of s'_i91ZE
                           { __DEFAULT ->
                           case ds_ddlw0
                                `cast` (GHC.ExecutionStack.Internal.N:StackTrace[0]
                                        :: (StackTrace :: *) ~R# (ForeignPtr StackTrace :: *))
                           of
                           { GHC.ForeignPtr.ForeignPtr fo_idlzF [Occ=Once]
                                                       ds1_idlzG [Occ=Once] ->
                           case GHC.Prim.readWordOffAddr#
                                  @ GHC.Prim.RealWorld fo_idlzF 0# s'_i91ZE
                           of
                           { (# ipv_icQ2n [Occ=Once], ipv1_icQ2o [Occ=Once] #) ->
                           case GHC.Prim.touch#
                                  @ 'GHC.Types.LiftedRep
                                  @ GHC.ForeignPtr.ForeignPtrContents
                                  ds1_idlzG
                                  ipv_icQ2n
                           of s'1_idlzA
                           { __DEFAULT ->
                           (# s'1_idlzA, GHC.Types.I# (GHC.Prim.word2Int# ipv1_icQ2o) #)
                           }
                           }
                           }
                           })
                 of
                 { (# _ [Occ=Dead], ipv1_i91ZI [Occ=Once] #) ->
                 ipv1_i91ZI
                 }}]
stackDepth
  = \ (ds_ddlw0 :: StackTrace) ->
      case GHC.Magic.runRW#
             @ ('GHC.Types.TupleRep
                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
             @ (# GHC.Prim.State# GHC.Prim.RealWorld, Int #)
             (\ (s_i91ZD [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i91ZD of s'_i91ZE
                { __DEFAULT ->
                case ds_ddlw0
                     `cast` (GHC.ExecutionStack.Internal.N:StackTrace[0]
                             :: (StackTrace :: *) ~R# (ForeignPtr StackTrace :: *))
                of
                { GHC.ForeignPtr.ForeignPtr fo_idlzF ds1_idlzG ->
                case GHC.Prim.readWordOffAddr#
                       @ GHC.Prim.RealWorld fo_idlzF 0# s'_i91ZE
                of
                { (# ipv_icQ2n, ipv1_icQ2o #) ->
                case GHC.Prim.touch#
                       @ 'GHC.Types.LiftedRep
                       @ GHC.ForeignPtr.ForeignPtrContents
                       ds1_idlzG
                       ipv_icQ2n
                of s'1_idlzA
                { __DEFAULT ->
                (# s'1_idlzA, GHC.Types.I# (GHC.Prim.word2Int# ipv1_icQ2o) #)
                }
                }
                }
                })
      of
      { (# ipv_i91ZH, ipv1_i91ZI #) ->
      ipv1_i91ZI
      }

-- RHS size: {terms: 71, types: 116, coercions: 2, joins: 0/0}
GHC.ExecutionStack.Internal.collectStackTrace1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe StackTrace #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 298 90}]
GHC.ExecutionStack.Internal.collectStackTrace1
  = \ (s_i7Vb0 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Addr# #)}_ddlyb
             s_i7Vb0
      of
      { (# ds_ddly9, ds1_ddly8 #) ->
      case GHC.Prim.eqAddr# __NULL ds1_ddly8 of {
        __DEFAULT ->
          case GHC.Prim.newMutVar#
                 @ GHC.ForeignPtr.Finalizers
                 @ GHC.Prim.RealWorld
                 GHC.ForeignPtr.NoFinalizers
                 ds_ddly9
          of
          { (# ipv_idlUE, ipv1_idlUF #) ->
          case GHC.ForeignPtr.$winsertCFinalizer
                 @ ()
                 ipv1_idlUF
                 (__label "libdwPoolRelease" (function))
                 0#
                 __NULL
                 ds1_ddly8
                 GHC.Tuple.()
                 ipv_idlUE
          of
          { (# ipv2_idlUJ, ipv3_idlUK #) ->
          case {__pkg_ccall base-4.11.0.0 Addr#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_ddlxO
                 ds1_ddly8 ipv2_idlUJ
          of
          { (# ds4_ddlxM, ds5_ddlxL #) ->
          case GHC.Prim.touch#
                 @ 'GHC.Types.LiftedRep
                 @ GHC.ForeignPtr.ForeignPtrContents
                 (GHC.ForeignPtr.PlainForeignPtr ipv1_idlUF)
                 ds4_ddlxM
          of s'_idlzA
          { __DEFAULT ->
          case GHC.Prim.eqAddr# ds5_ddlxL __NULL of {
            __DEFAULT ->
              case GHC.Prim.newMutVar#
                     @ GHC.ForeignPtr.Finalizers
                     @ GHC.Prim.RealWorld
                     GHC.ForeignPtr.NoFinalizers
                     s'_idlzA
              of
              { (# ipv4_XdlXU, ipv5_XdlXW #) ->
              case GHC.ForeignPtr.$winsertCFinalizer
                     @ ()
                     ipv5_XdlXW
                     (__label "backtraceFree" (function))
                     0#
                     __NULL
                     ds5_ddlxL
                     GHC.Tuple.()
                     ipv4_XdlXU
              of
              { (# ipv6_XdlY4, ipv7_XdlY6 #) ->
              (# ipv6_XdlY4,
                 GHC.Base.Just
                   @ StackTrace
                   ((GHC.ForeignPtr.ForeignPtr
                       @ StackTrace ds5_ddlxL (GHC.ForeignPtr.PlainForeignPtr ipv5_XdlXW))
                    `cast` (Sym (GHC.ExecutionStack.Internal.N:StackTrace[0])
                            :: (ForeignPtr StackTrace :: *) ~R# (StackTrace :: *))) #)
              }
              };
            1# -> (# s'_idlzA, GHC.Base.Nothing @ StackTrace #)
          }
          }
          }
          }
          };
        1# -> (# ds_ddly9, GHC.Base.Nothing @ StackTrace #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 4, joins: 0/0}
collectStackTrace :: IO (Maybe StackTrace)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ExecutionStack.Internal.collectStackTrace1
               `cast` (Sym (GHC.Types.N:IO[0] <Maybe StackTrace>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe StackTrace #) :: *)
                          ~R# (IO (Maybe StackTrace) :: *))}]
collectStackTrace
  = GHC.ExecutionStack.Internal.collectStackTrace1
    `cast` (Sym (GHC.Types.N:IO[0] <Maybe StackTrace>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe StackTrace #) :: *)
               ~R# (IO (Maybe StackTrace) :: *))

Rec {
-- RHS size: {terms: 37, types: 39, coercions: 0, joins: 0/0}
$wgo_rdm9M
  :: [Chunk]
     -> GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Chunk] #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><S,U><S,U>,
 Unf=OtherCon []]
$wgo_rdm9M
  = \ (w_sdm1H :: [Chunk])
      (ww_sdm1M :: GHC.Prim.Addr#)
      (w1_sdm1J :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.eqAddr# ww_sdm1M __NULL of {
        __DEFAULT ->
          case GHC.Prim.readWordOffAddr#
                 @ GHC.Prim.RealWorld ww_sdm1M 0# w1_sdm1J
          of
          { (# ipv_icQ2n, ipv1_icQ2o #) ->
          case GHC.Prim.readAddrOffAddr#
                 @ GHC.Prim.RealWorld (GHC.Prim.plusAddr# ww_sdm1M 8#) 0# ipv_icQ2n
          of
          { (# ipv2_i9h9N, ipv3_i9h9O #) ->
          $wgo_rdm9M
            (GHC.Types.:
               @ Chunk
               (GHC.ExecutionStack.Internal.Chunk
                  ipv1_icQ2o ipv3_i9h9O (GHC.Prim.plusAddr# ww_sdm1M 16#))
               w_sdm1H)
            ipv3_i9h9O
            ipv2_i9h9N
          }
          };
        1# -> (# w1_sdm1J, w_sdm1H #)
      }
end Rec }

-- RHS size: {terms: 358, types: 573, coercions: 28, joins: 3/6}
stackFrames :: StackTrace -> Maybe [Location]
[GblId, Arity=1, Str=<L,1*U(U,U)>, Unf=OtherCon []]
stackFrames
  = \ (st_adlgZ :: StackTrace) ->
      case GHC.Magic.runRW#
             @ ('GHC.Types.TupleRep
                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
             @ (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe [Location] #)
             (\ (s_i91ZD [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                case GHC.Prim.noDuplicate# @ GHC.Prim.RealWorld s_i91ZD of s'_i91ZE
                { __DEFAULT ->
                case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Addr# #)}_ddlyb
                       s'_i91ZE
                of
                { (# ds_ddly9, ds1_ddly8 #) ->
                case GHC.Prim.eqAddr# __NULL ds1_ddly8 of {
                  __DEFAULT ->
                    case GHC.Prim.newMutVar#
                           @ GHC.ForeignPtr.Finalizers
                           @ GHC.Prim.RealWorld
                           GHC.ForeignPtr.NoFinalizers
                           ds_ddly9
                    of
                    { (# ipv_idlUE, ipv1_idlUF #) ->
                    case GHC.ForeignPtr.$winsertCFinalizer
                           @ ()
                           ipv1_idlUF
                           (__label "libdwPoolRelease" (function))
                           0#
                           __NULL
                           ds1_ddly8
                           GHC.Tuple.()
                           ipv_idlUE
                    of
                    { (# ipv2_idlUJ, ipv3_idlUK #) ->
                    case st_adlgZ
                         `cast` (GHC.ExecutionStack.Internal.N:StackTrace[0]
                                 :: (StackTrace :: *) ~R# (ForeignPtr StackTrace :: *))
                    of
                    { GHC.ForeignPtr.ForeignPtr fo_idlzF ds4_idlzG ->
                    case GHC.Prim.readAddrOffAddr#
                           @ GHC.Prim.RealWorld (GHC.Prim.plusAddr# fo_idlzF 8#) 0# ipv2_idlUJ
                    of
                    { (# ipv4_i9h9N, ipv5_i9h9O #) ->
                    case $wgo_rdm9M (GHC.Types.[] @ Chunk) ipv5_i9h9O ipv4_i9h9N of
                    { (# ipv6_idlzs, ipv7_idlzt #) ->
                    case GHC.Prim.touch#
                           @ 'GHC.Types.LiftedRep
                           @ GHC.ForeignPtr.ForeignPtrContents
                           ds4_idlzG
                           ipv6_idlzs
                    of s'1_idlzA
                    { __DEFAULT ->
                    letrec {
                      go_sdlJ0 [Occ=LoopBreaker]
                        :: ForeignPtr Session
                           -> [Chunk]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Location] #)
                      [LclId, Arity=3, Str=<L,U(U,U)><S,1*U><S,U>, Unf=OtherCon []]
                      go_sdlJ0
                        = \ (ds7_ddlwn :: ForeignPtr Session)
                            (ds8_ddlwo :: [Chunk])
                            (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case ds8_ddlwo of {
                              [] -> (# eta_B1, GHC.Types.[] @ Location #);
                              : chunk_adlh4 chunks_adlh5 ->
                                case chunk_adlh4 of { Chunk dt_ddlyd dt1_ddlye dt2_ddlyf ->
                                letrec {
                                  $witerFrames_sdm22 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                                    :: GHC.Prim.Word#
                                       -> Ptr Addr
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Location] #)
                                  [LclId, Arity=3, Str=<S,1*U><L,1*U(U)><S,U>, Unf=OtherCon []]
                                  $witerFrames_sdm22
                                    = \ (ww_sdm20 :: GHC.Prim.Word#)
                                        (w_sdm1W :: Ptr Addr)
                                        (w1_sdm1X :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                        case ww_sdm20 of ds9_XdlxM {
                                          __DEFAULT ->
                                            case w_sdm1W of { GHC.Ptr.Ptr a1_i9h98 ->
                                            case GHC.Prim.readAddrOffAddr#
                                                   @ GHC.Prim.RealWorld a1_i9h98 0# w1_sdm1X
                                            of
                                            { (# ipv8_i9h9c, ipv9_i9h9d #) ->
                                            case GHC.Prim.newPinnedByteArray#
                                                   @ GHC.Prim.RealWorld 32# ipv8_i9h9c
                                            of
                                            { (# ipv10_icxbT, ipv11_icxbU #) ->
                                            case GHC.Prim.unsafeFreezeByteArray#
                                                   @ GHC.Prim.RealWorld ipv11_icxbU ipv10_icxbT
                                            of
                                            { (# ipv12_icxbY, ipv13_icxbZ #) ->
                                            case ds7_ddlwn of
                                            { GHC.ForeignPtr.ForeignPtr fo1_XdlDC ds13_XdlDE ->
                                            let {
                                              buf_sdlJ8 [Dmd=<S,U>] :: GHC.Prim.Addr#
                                              [LclId]
                                              buf_sdlJ8
                                                = GHC.Prim.byteArrayContents# ipv13_icxbZ } in
                                            case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr#
                           -> Addr#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddly2
                                                   fo1_XdlDC buf_sdlJ8 ipv9_i9h9d ipv12_icxbY
                                            of
                                            { (# ds14_ddly0, ds15_ddlxZ #) ->
                                            case GHC.Prim.touch#
                                                   @ 'GHC.Types.LiftedRep
                                                   @ GHC.ForeignPtr.ForeignPtrContents
                                                   ds13_XdlDE
                                                   ds14_ddly0
                                            of s'2_XdlDI
                                            { __DEFAULT ->
                                            case GHC.Prim.narrow32Int# ds15_ddlxZ of {
                                              __DEFAULT ->
                                                case GHC.Prim.touch#
                                                       @ 'GHC.Types.UnliftedRep
                                                       @ GHC.Prim.ByteArray#
                                                       ipv13_icxbZ
                                                       s'2_XdlDI
                                                of s4_icxc6
                                                { __DEFAULT ->
                                                case GHC.Prim.touch#
                                                       @ 'GHC.Types.LiftedRep
                                                       @ GHC.ForeignPtr.ForeignPtrContents
                                                       ds4_idlzG
                                                       s4_icxc6
                                                of s'3_XdlEe
                                                { __DEFAULT ->
                                                ((GHC.IO.Unsafe.unsafeDupableInterleaveIO
                                                    @ [Location]
                                                    ((\ (s1_ib3kc [OS=OneShot]
                                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                        case GHC.Prim.noDuplicate#
                                                               @ GHC.Prim.RealWorld s1_ib3kc
                                                        of s'4_ib3kd
                                                        { __DEFAULT ->
                                                        $witerFrames_sdm22
                                                          (GHC.Prim.minusWord# ds9_XdlxM 1##)
                                                          (GHC.Ptr.Ptr
                                                             @ Addr
                                                             (GHC.Prim.plusAddr# a1_i9h98 8#))
                                                          s'4_ib3kd
                                                        })
                                                     `cast` (Sym (GHC.Types.N:IO[0] <[Location]>_R)
                                                             :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       [Location] #) :: *)
                                                                ~R# (IO [Location] :: *))))
                                                 `cast` (GHC.Types.N:IO[0] <[Location]>_R
                                                         :: (IO [Location] :: *)
                                                            ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       [Location] #) :: *)))
                                                  s'3_XdlEe
                                                }
                                                };
                                              0# ->
                                                case GHC.Prim.readAddrOffAddr#
                                                       @ GHC.Prim.RealWorld buf_sdlJ8 0# s'2_XdlDI
                                                of
                                                { (# ipv14_X9he3, ipv15_X9he5 #) ->
                                                join {
                                                  $j_sdlLm [Dmd=<L,1*C1(C1(U(U,U)))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> String
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             [Location] #)
                                                  [LclId[JoinId(2)],
                                                   Arity=2,
                                                   Str=<S,U><L,U>,
                                                   Unf=OtherCon []]
                                                  $j_sdlLm (ipv16_X7IIO [OS=OneShot]
                                                              :: GHC.Prim.State# GHC.Prim.RealWorld)
                                                           (ipv17_X7IIR [OS=OneShot] :: String)
                                                    = case GHC.Prim.readAddrOffAddr#
                                                             @ GHC.Prim.RealWorld
                                                             (GHC.Prim.plusAddr# buf_sdlJ8 8#)
                                                             0#
                                                             ipv16_X7IIO
                                                      of
                                                      { (# ipv18_X9hey, ipv19_X9heA #) ->
                                                      join {
                                                        $j1_sdlLi [Dmd=<L,1*C1(C1(U(U,U)))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> String
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   [Location] #)
                                                        [LclId[JoinId(2)],
                                                         Arity=2,
                                                         Str=<S,U><L,U>,
                                                         Unf=OtherCon []]
                                                        $j1_sdlLi (ipv20_X7IJb [OS=OneShot]
                                                                     :: GHC.Prim.State#
                                                                          GHC.Prim.RealWorld)
                                                                  (ipv21_X7IJe [OS=OneShot]
                                                                     :: String)
                                                          = case GHC.Prim.readAddrOffAddr#
                                                                   @ GHC.Prim.RealWorld
                                                                   (GHC.Prim.plusAddr#
                                                                      buf_sdlJ8 16#)
                                                                   0#
                                                                   ipv20_X7IJb
                                                            of
                                                            { (# ipv22_X9heN, ipv23_X9heP #) ->
                                                            join {
                                                              $j2_sdlLe [Dmd=<L,1*C1(C1(U(U,U)))>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> String
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         [Location] #)
                                                              [LclId[JoinId(2)],
                                                               Arity=2,
                                                               Str=<S,U><L,1*U>,
                                                               Unf=OtherCon []]
                                                              $j2_sdlLe (ipv24_X7IJy [OS=OneShot]
                                                                           :: GHC.Prim.State#
                                                                                GHC.Prim.RealWorld)
                                                                        (ipv25_X7IJB [OS=OneShot]
                                                                           :: String)
                                                                = case GHC.Prim.readWord32OffAddr#
                                                                         @ GHC.Prim.RealWorld
                                                                         (GHC.Prim.plusAddr#
                                                                            buf_sdlJ8 24#)
                                                                         0#
                                                                         ipv24_X7IJy
                                                                  of
                                                                  { (# ipv26_i9hi7,
                                                                       ipv27_i9hi8 #) ->
                                                                  case GHC.Prim.readWord32OffAddr#
                                                                         @ GHC.Prim.RealWorld
                                                                         (GHC.Prim.plusAddr#
                                                                            buf_sdlJ8 28#)
                                                                         0#
                                                                         ipv26_i9hi7
                                                                  of
                                                                  { (# ipv28_X9hnt,
                                                                       ipv29_X9hnv #) ->
                                                                  case GHC.Prim.touch#
                                                                         @ 'GHC.Types.UnliftedRep
                                                                         @ GHC.Prim.ByteArray#
                                                                         ipv13_icxbZ
                                                                         ipv28_X9hnt
                                                                  of s4_icxc6
                                                                  { __DEFAULT ->
                                                                  case GHC.Prim.touch#
                                                                         @ 'GHC.Types.LiftedRep
                                                                         @ GHC.ForeignPtr.ForeignPtrContents
                                                                         ds4_idlzG
                                                                         s4_icxc6
                                                                  of s'3_XdlEe
                                                                  { __DEFAULT ->
                                                                  case ((GHC.IO.Unsafe.unsafeDupableInterleaveIO
                                                                           @ [Location]
                                                                           ((\ (s1_ib3kc [OS=OneShot]
                                                                                  :: GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld) ->
                                                                               case GHC.Prim.noDuplicate#
                                                                                      @ GHC.Prim.RealWorld
                                                                                      s1_ib3kc
                                                                               of s'4_ib3kd
                                                                               { __DEFAULT ->
                                                                               $witerFrames_sdm22
                                                                                 (GHC.Prim.minusWord#
                                                                                    ds9_XdlxM 1##)
                                                                                 (GHC.Ptr.Ptr
                                                                                    @ Addr
                                                                                    (GHC.Prim.plusAddr#
                                                                                       a1_i9h98 8#))
                                                                                 s'4_ib3kd
                                                                               })
                                                                            `cast` (Sym (GHC.Types.N:IO[0]
                                                                                             <[Location]>_R)
                                                                                    :: (GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              [Location] #) :: *)
                                                                                       ~R# (IO
                                                                                              [Location] :: *))))
                                                                        `cast` (GHC.Types.N:IO[0]
                                                                                    <[Location]>_R
                                                                                :: (IO
                                                                                      [Location] :: *)
                                                                                   ~R# (GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              [Location] #) :: *)))
                                                                         s'3_XdlEe
                                                                  of
                                                                  { (# ipv30_X7IDM,
                                                                       ipv31_X7IDO #) ->
                                                                  (# ipv30_X7IDM,
                                                                     GHC.Types.:
                                                                       @ Location
                                                                       (GHC.ExecutionStack.Internal.Location
                                                                          ipv17_X7IIR
                                                                          ipv21_X7IJe
                                                                          (case ipv25_X7IJB
                                                                           of wild8_i8hrH {
                                                                             [] ->
                                                                               GHC.Base.Nothing
                                                                                 @ SrcLoc;
                                                                             : ds22_i8hNn
                                                                               ds23_i8hNo ->
                                                                               GHC.Base.Just
                                                                                 @ SrcLoc
                                                                                 (GHC.ExecutionStack.Internal.SrcLoc
                                                                                    wild8_i8hrH
                                                                                    (GHC.Types.I#
                                                                                       (GHC.Prim.word2Int#
                                                                                          ipv27_i9hi8))
                                                                                    (GHC.Types.I#
                                                                                       (GHC.Prim.word2Int#
                                                                                          ipv29_X9hnv)))
                                                                           }))
                                                                       ipv31_X7IDO #)
                                                                  }
                                                                  }
                                                                  }
                                                                  }
                                                                  } } in
                                                            case GHC.Prim.eqAddr# ipv23_X9heP __NULL
                                                            of {
                                                              __DEFAULT ->
                                                                case ((GHC.Magic.noinline
                                                                         @ (IO
                                                                              GHC.IO.Encoding.Types.TextEncoding)
                                                                         GHC.IO.Encoding.getForeignEncoding)
                                                                      `cast` (GHC.Types.N:IO[0]
                                                                                  <GHC.IO.Encoding.Types.TextEncoding>_R
                                                                              :: (IO
                                                                                    GHC.IO.Encoding.Types.TextEncoding :: *)
                                                                                 ~R# (GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.IO.Encoding.Types.TextEncoding #) :: *)))
                                                                       ipv22_X9heN
                                                                of
                                                                { (# ipv24_icPYR, ipv25_icPYS #) ->
                                                                case GHC.Foreign.$wpeekCString
                                                                       ipv25_icPYS
                                                                       ipv23_X9heP
                                                                       ipv24_icPYR
                                                                of
                                                                { (# ipv26_X7IJy, ipv27_X7IJB #) ->
                                                                jump $j2_sdlLe
                                                                  ipv26_X7IJy ipv27_X7IJB
                                                                }
                                                                };
                                                              1# ->
                                                                jump $j2_sdlLe
                                                                  ipv22_X9heN (GHC.Types.[] @ Char)
                                                            }
                                                            } } in
                                                      case GHC.Prim.eqAddr# ipv19_X9heA __NULL of {
                                                        __DEFAULT ->
                                                          case ((GHC.Magic.noinline
                                                                   @ (IO
                                                                        GHC.IO.Encoding.Types.TextEncoding)
                                                                   GHC.IO.Encoding.getForeignEncoding)
                                                                `cast` (GHC.Types.N:IO[0]
                                                                            <GHC.IO.Encoding.Types.TextEncoding>_R
                                                                        :: (IO
                                                                              GHC.IO.Encoding.Types.TextEncoding :: *)
                                                                           ~R# (GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                                -> (# GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld,
                                                                                      GHC.IO.Encoding.Types.TextEncoding #) :: *)))
                                                                 ipv18_X9hey
                                                          of
                                                          { (# ipv20_icPYR, ipv21_icPYS #) ->
                                                          case GHC.Foreign.$wpeekCString
                                                                 ipv21_icPYS ipv19_X9heA ipv20_icPYR
                                                          of
                                                          { (# ipv22_X7IJb, ipv23_X7IJe #) ->
                                                          jump $j1_sdlLi ipv22_X7IJb ipv23_X7IJe
                                                          }
                                                          };
                                                        1# ->
                                                          jump $j1_sdlLi
                                                            ipv18_X9hey (GHC.Types.[] @ Char)
                                                      }
                                                      } } in
                                                case GHC.Prim.eqAddr# ipv15_X9he5 __NULL of {
                                                  __DEFAULT ->
                                                    case ((GHC.Magic.noinline
                                                             @ (IO
                                                                  GHC.IO.Encoding.Types.TextEncoding)
                                                             GHC.IO.Encoding.getForeignEncoding)
                                                          `cast` (GHC.Types.N:IO[0]
                                                                      <GHC.IO.Encoding.Types.TextEncoding>_R
                                                                  :: (IO
                                                                        GHC.IO.Encoding.Types.TextEncoding :: *)
                                                                     ~R# (GHC.Prim.State#
                                                                            GHC.Prim.RealWorld
                                                                          -> (# GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld,
                                                                                GHC.IO.Encoding.Types.TextEncoding #) :: *)))
                                                           ipv14_X9he3
                                                    of
                                                    { (# ipv16_icPYR, ipv17_icPYS #) ->
                                                    case GHC.Foreign.$wpeekCString
                                                           ipv17_icPYS ipv15_X9he5 ipv16_icPYR
                                                    of
                                                    { (# ipv18_X7IIO, ipv19_X7IIR #) ->
                                                    jump $j_sdlLm ipv18_X7IIO ipv19_X7IIR
                                                    }
                                                    };
                                                  1# ->
                                                    jump $j_sdlLm ipv14_X9he3 (GHC.Types.[] @ Char)
                                                }
                                                }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            };
                                          0## -> (# w1_sdm1X, GHC.Types.[] @ Location #)
                                        }; } in
                                case $witerFrames_sdm22
                                       dt_ddlyd (GHC.Ptr.Ptr @ Addr dt2_ddlyf) eta_B1
                                of
                                { (# ipv8_i7IAy, ipv9_i7IAz #) ->
                                case ((GHC.IO.Unsafe.unsafeDupableInterleaveIO
                                         @ [Location]
                                         ((\ (s1_ib3kc [OS=OneShot]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                             case GHC.Prim.noDuplicate#
                                                    @ GHC.Prim.RealWorld s1_ib3kc
                                             of s'2_ib3kd
                                             { __DEFAULT ->
                                             go_sdlJ0 ds7_ddlwn chunks_adlh5 s'2_ib3kd
                                             })
                                          `cast` (Sym (GHC.Types.N:IO[0] <[Location]>_R)
                                                  :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            [Location] #) :: *)
                                                     ~R# (IO [Location] :: *))))
                                      `cast` (GHC.Types.N:IO[0] <[Location]>_R
                                              :: (IO [Location] :: *)
                                                 ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            [Location] #) :: *)))
                                       ipv8_i7IAy
                                of
                                { (# ipv10_X7IDr, ipv11_X7IDt #) ->
                                (# ipv10_X7IDr, ++ @ Location ipv9_i7IAz ipv11_X7IDt #)
                                }
                                }
                                }
                            }; } in
                    case go_sdlJ0
                           (GHC.ForeignPtr.ForeignPtr
                              @ Session ds1_ddly8 (GHC.ForeignPtr.PlainForeignPtr ipv1_idlUF))
                           (GHC.List.reverse1 @ Chunk ipv7_idlzt (GHC.Types.[] @ Chunk))
                           s'1_idlzA
                    of
                    { (# ipv8_X7IDi, ipv9_X7IDk #) ->
                    (# ipv8_X7IDi, GHC.Base.Just @ [Location] ipv9_X7IDk #)
                    }
                    }
                    }
                    }
                    }
                    }
                    };
                  1# -> (# ds_ddly9, GHC.Base.Nothing @ [Location] #)
                }
                }
                })
      of
      { (# ipv_i91ZH, ipv1_i91ZI #) ->
      ipv1_i91ZI
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
g_rdm9N :: Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
g_rdm9N = GHC.Types.C# '\n'#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ExecutionStack.Internal.showStackFrames1 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.ExecutionStack.Internal.showStackFrames1 = "Stack trace:\n"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_rdm9O :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_rdm9O = ")"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_rdm9P :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_rdm9P = "."#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl2_rdm9Q :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl2_rdm9Q = ":"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl3_rdm9R :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl3_rdm9R = " ("#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_rdm9S :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_rdm9S = " in "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_rdm9T :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_rdm9T = "    "#

Rec {
-- RHS size: {terms: 65, types: 50, coercions: 0, joins: 0/1}
GHC.ExecutionStack.Internal.showStackFrames_go [Occ=LoopBreaker]
  :: [Location] -> String -> String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U>,
 Unf=OtherCon []]
GHC.ExecutionStack.Internal.showStackFrames_go
  = \ (ds_i7Jck :: [Location]) (eta_X2G :: String) ->
      case ds_i7Jck of {
        [] -> eta_X2G;
        : y_i7Jcp ys_i7Jcq ->
          GHC.CString.unpackAppendCString#
            lvl5_rdm9T
            (case y_i7Jcp of { Location ds1_ddlxp ds2_ddlxq ds3_ddlxr ->
             ++
               @ Char
               ds2_ddlxq
               (let {
                  karg_sdlLO :: [Char]
                  [LclId]
                  karg_sdlLO
                    = GHC.CString.unpackAppendCString#
                        lvl4_rdm9S
                        (++
                           @ Char
                           ds1_ddlxp
                           (GHC.Types.:
                              @ Char
                              g_rdm9N
                              (GHC.ExecutionStack.Internal.showStackFrames_go
                                 ys_i7Jcq eta_X2G))) } in
                case ds3_ddlxr of {
                  Nothing -> karg_sdlLO;
                  Just x_i8O4S ->
                    GHC.CString.unpackAppendCString#
                      lvl3_rdm9R
                      (case x_i8O4S of { SrcLoc ds4_ddlxx ds5_ddlxy ds6_ddlxz ->
                       ++
                         @ Char
                         ds4_ddlxx
                         (GHC.CString.unpackAppendCString#
                            lvl2_rdm9Q
                            (case ds5_ddlxy of { GHC.Types.I# ww3_i7NVa ->
                             case GHC.Show.$wshowSignedInt
                                    0#
                                    ww3_i7NVa
                                    (GHC.CString.unpackAppendCString#
                                       lvl1_rdm9P
                                       (case ds6_ddlxz of { GHC.Types.I# ww5_X7NYk ->
                                        case GHC.Show.$wshowSignedInt
                                               0#
                                               ww5_X7NYk
                                               (GHC.CString.unpackAppendCString#
                                                  lvl_rdm9O karg_sdlLO)
                                        of
                                        { (# ww6_i7NVe, ww7_i7NVf #) ->
                                        GHC.Types.: @ Char ww6_i7NVe ww7_i7NVf
                                        }
                                        }))
                             of
                             { (# ww5_i7NVe, ww6_i7NVf #) ->
                             GHC.Types.: @ Char ww5_i7NVe ww6_i7NVf
                             }
                             }))
                       })
                })
             })
      }
end Rec }

-- RHS size: {terms: 7, types: 3, coercions: 0, joins: 0/0}
showStackFrames :: [Location] -> ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U><L,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 60 0}]
showStackFrames
  = \ (frames_adlhq :: [Location]) (eta_B1 :: String) ->
      GHC.CString.unpackAppendCString#
        GHC.ExecutionStack.Internal.showStackFrames1
        (GHC.ExecutionStack.Internal.showStackFrames_go
           frames_adlhq eta_B1)


