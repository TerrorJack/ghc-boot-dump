
==================== Tidy Core ====================
2018-03-16 16:02:49.659836342 UTC

Result size of Tidy Core
  = {terms: 1,572, types: 2,347, coercions: 219, joins: 3/16}

-- RHS size: {terms: 6, types: 8, coercions: 2, joins: 0/0}
GHC.ForeignPtr.$WPlainForeignPtr [InlPrag=INLINE[2]]
  :: IORef Finalizers -> ForeignPtrContents
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_a7IMw [Occ=Once] :: IORef Finalizers) ->
                 case dt_a7IMw
                      `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                              :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
                 of
                 { STRef dt_a7IMy [Occ=Once] ->
                 GHC.ForeignPtr.PlainForeignPtr dt_a7IMy
                 }}]
GHC.ForeignPtr.$WPlainForeignPtr
  = \ (dt_a7IMw [Occ=Once] :: IORef Finalizers) ->
      case dt_a7IMw
           `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                   :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
      of
      { STRef dt_a7IMy [Occ=Once] ->
      GHC.ForeignPtr.PlainForeignPtr dt_a7IMy
      }

-- RHS size: {terms: 8, types: 10, coercions: 2, joins: 0/0}
GHC.ForeignPtr.$WMallocPtr [InlPrag=INLINE[2]]
  :: MutableByteArray# RealWorld
     -> IORef Finalizers -> ForeignPtrContents
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,U>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_a7IMB [Occ=Once] :: MutableByteArray# RealWorld)
                 (dt_a7IMC [Occ=Once] :: IORef Finalizers) ->
                 case dt_a7IMC
                      `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                              :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
                 of
                 { STRef dt_a7IME [Occ=Once] ->
                 GHC.ForeignPtr.MallocPtr dt_a7IMB dt_a7IME
                 }}]
GHC.ForeignPtr.$WMallocPtr
  = \ (dt_a7IMB [Occ=Once] :: MutableByteArray# RealWorld)
      (dt_a7IMC [Occ=Once] :: IORef Finalizers) ->
      case dt_a7IMC
           `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                   :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
      of
      { STRef dt_a7IME [Occ=Once] ->
      GHC.ForeignPtr.MallocPtr dt_a7IMB dt_a7IME
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r7KaV :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r7KaV = "undefined"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_r7KaW :: [Char]
[GblId]
lvl1_r7KaW = unpackCString# lvl_r7KaV

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.ForeignPtr.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_r7KaX :: [Char]
[GblId]
lvl2_r7KaX = unpackCString# GHC.ForeignPtr.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.ForeignPtr.$trModule2 = "GHC.ForeignPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r7KaY :: [Char]
[GblId]
lvl3_r7KaY = unpackCString# GHC.ForeignPtr.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r7KaZ :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_r7KaZ = "./GHC/ForeignPtr.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl5_r7Kb0 :: [Char]
[GblId]
lvl5_r7Kb0 = unpackCString# lvl4_r7KaZ

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r7Kb1 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl6_r7Kb1 = GHC.Types.I# 214#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r7Kb2 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl7_r7Kb2 = GHC.Types.I# 34#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl8_r7Kb3 :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl8_r7Kb3 = GHC.Types.I# 43#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl9_r7Kb4 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl9_r7Kb4
  = GHC.Stack.Types.SrcLoc
      lvl2_r7KaX
      lvl3_r7KaY
      lvl5_r7Kb0
      lvl6_r7Kb1
      lvl7_r7Kb2
      lvl6_r7Kb1
      lvl8_r7Kb3

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl10_r7Kb5 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl10_r7Kb5
  = GHC.Stack.Types.PushCallStack
      lvl1_r7KaW lvl9_r7Kb4 GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtr2 :: forall a. a
[GblId, Str=x]
GHC.ForeignPtr.mallocPlainForeignPtr2
  = \ (@ a_a7IZ0) ->
      undefined
        @ 'LiftedRep
        @ a_a7IZ0
        (lvl10_r7Kb5
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl11_r7Kb6 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl11_r7Kb6 = "mallocForeignPtr: size must be >= 0"#

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtr2 :: forall a. IO (ForeignPtr a)
[GblId, Str=x]
GHC.ForeignPtr.mallocForeignPtr2
  = \ (@ a_a7IZ0) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO (ForeignPtr a_a7IZ0))
        (unpackCString# lvl11_r7Kb6)

-- RHS size: {terms: 34, types: 43, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtr1
  :: forall a.
     Storable a =>
     State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))C(S(S))LLLLLL),U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0] 136 30}]
GHC.ForeignPtr.mallocPlainForeignPtr1
  = \ (@ a_a7IZ0)
      ($dStorable_a7IZ2 :: Storable a_a7IZ0)
      (eta_B1 :: State# RealWorld) ->
      case alignment
             @ a_a7IZ0
             $dStorable_a7IZ2
             (GHC.ForeignPtr.mallocPlainForeignPtr2 @ a_a7IZ0)
      of
      { I# align_a7IZp ->
      case sizeOf
             @ a_a7IZ0
             $dStorable_a7IZ2
             (GHC.ForeignPtr.mallocPlainForeignPtr2 @ a_a7IZ0)
      of
      { I# size_a7IZz ->
      case <# size_a7IZz 0# of {
        __DEFAULT ->
          case newAlignedPinnedByteArray#
                 @ RealWorld size_a7IZz align_a7IZp eta_B1
          of
          { (# ipv_s7Jby, ipv1_s7Jbz #) ->
          (# ipv_s7Jby,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7IZ0
               (byteArrayContents#
                  (ipv1_s7Jbz
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.PlainPtr ipv1_s7Jbz) #)
          };
        1# -> case GHC.ForeignPtr.mallocForeignPtr2 of wild2_00 { }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
mallocPlainForeignPtr :: forall a. Storable a => IO (ForeignPtr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))C(S(S))LLLLLL),U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocPlainForeignPtr1
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Storable a =>
                           State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Storable a => IO (ForeignPtr a) :: *))}]
mallocPlainForeignPtr
  = GHC.ForeignPtr.mallocPlainForeignPtr1
    `cast` (forall (a :: <*>_N).
            <Storable a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Storable a =>
                State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Storable a => IO (ForeignPtr a) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl12_r7Kb7 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl12_r7Kb7 = "mallocPlainForeignPtrBytes: size must be >= 0"#

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtrBytes2
  :: forall a. IO (ForeignPtr a)
[GblId, Str=x]
GHC.ForeignPtr.mallocPlainForeignPtrBytes2
  = \ (@ a_a7IYG) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO (ForeignPtr a_a7IYG))
        (unpackCString# lvl12_r7Kb7)

-- RHS size: {terms: 26, types: 36, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtrBytes1
  :: forall a.
     Int -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7IYG)
                 (size_a7IJR [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case size_a7IJR of { I# x_alN9 ->
                 case <# x_alN9 0# of {
                   __DEFAULT ->
                     case newPinnedByteArray# @ RealWorld x_alN9 eta_B1 of
                     { (# ipv_s7JbE [Occ=Once], ipv1_s7JbF #) ->
                     (# ipv_s7JbE,
                        GHC.ForeignPtr.ForeignPtr
                          @ a_a7IYG
                          (byteArrayContents#
                             (ipv1_s7JbF
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.PlainPtr ipv1_s7JbF) #)
                     };
                   1# -> case GHC.ForeignPtr.mallocPlainForeignPtrBytes2 of { }
                 }
                 }}]
GHC.ForeignPtr.mallocPlainForeignPtrBytes1
  = \ (@ a_a7IYG) (size_a7IJR :: Int) (eta_B1 :: State# RealWorld) ->
      case size_a7IJR of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case newPinnedByteArray# @ RealWorld x_alN9 eta_B1 of
          { (# ipv_s7JbE, ipv1_s7JbF #) ->
          (# ipv_s7JbE,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7IYG
               (byteArrayContents#
                  (ipv1_s7JbF
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.PlainPtr ipv1_s7JbF) #)
          };
        1# ->
          case GHC.ForeignPtr.mallocPlainForeignPtrBytes2 of wild1_00 { }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
mallocPlainForeignPtrBytes :: forall a. Int -> IO (ForeignPtr a)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocPlainForeignPtrBytes1
               `cast` (forall (a :: <*>_N).
                       <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Int
                           -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Int -> IO (ForeignPtr a) :: *))}]
mallocPlainForeignPtrBytes
  = GHC.ForeignPtr.mallocPlainForeignPtrBytes1
    `cast` (forall (a :: <*>_N).
            <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Int
                -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Int -> IO (ForeignPtr a) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl13_r7Kb8 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl13_r7Kb8
  = "mallocPlainForeignPtrAlignedBytes: size must be >= 0"#

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes2
  :: forall a. IO (ForeignPtr a)
[GblId, Str=x]
GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes2
  = \ (@ a_a7IYd) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO (ForeignPtr a_a7IYd))
        (unpackCString# lvl13_r7Kb8)

-- RHS size: {terms: 31, types: 39, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes1
  :: forall a.
     Int
     -> Int -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7IYd)
                 (size_a7IJW [Occ=Once!] :: Int)
                 (_align_a7IJX [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case size_a7IJW of { I# x_alN9 ->
                 case <# x_alN9 0# of {
                   __DEFAULT ->
                     case _align_a7IJX of { I# align_a7IJZ [Occ=Once] ->
                     case newAlignedPinnedByteArray#
                            @ RealWorld x_alN9 align_a7IJZ eta_B1
                     of
                     { (# ipv_s7JbL [Occ=Once], ipv1_s7JbM #) ->
                     (# ipv_s7JbL,
                        GHC.ForeignPtr.ForeignPtr
                          @ a_a7IYd
                          (byteArrayContents#
                             (ipv1_s7JbM
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.PlainPtr ipv1_s7JbM) #)
                     }
                     };
                   1# -> case GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes2 of { }
                 }
                 }}]
GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes1
  = \ (@ a_a7IYd)
      (size_a7IJW :: Int)
      (_align_a7IJX :: Int)
      (eta_B1 :: State# RealWorld) ->
      case size_a7IJW of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case _align_a7IJX of { I# align_a7IJZ ->
          case newAlignedPinnedByteArray#
                 @ RealWorld x_alN9 align_a7IJZ eta_B1
          of
          { (# ipv_s7JbL, ipv1_s7JbM #) ->
          (# ipv_s7JbL,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7IYd
               (byteArrayContents#
                  (ipv1_s7JbM
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.PlainPtr ipv1_s7JbM) #)
          }
          };
        1# ->
          case GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes2
          of wild1_00 {
          }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
mallocPlainForeignPtrAlignedBytes
  :: forall a. Int -> Int -> IO (ForeignPtr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes1
               `cast` (forall (a :: <*>_N).
                       <Int>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Int
                           -> Int
                           -> State# RealWorld
                           -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Int -> Int -> IO (ForeignPtr a) :: *))}]
mallocPlainForeignPtrAlignedBytes
  = GHC.ForeignPtr.mallocPlainForeignPtrAlignedBytes1
    `cast` (forall (a :: <*>_N).
            <Int>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Int
                -> Int
                -> State# RealWorld
                -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Int -> Int -> IO (ForeignPtr a) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl14_r7Kb9 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl14_r7Kb9
  = "GHC.ForeignPtr: attempt to mix Haskell and C finalizers in the same ForeignPtr"#

-- RHS size: {terms: 4, types: 4, coercions: 0, joins: 0/0}
noMixingError :: forall a. a
[GblId, Str=x]
noMixingError
  = \ (@ a_a7IVn) ->
      errorWithoutStackTrace
        @ 'LiftedRep @ a_a7IVn (unpackCString# lvl14_r7Kb9)

-- RHS size: {terms: 14, types: 21, coercions: 0, joins: 0/0}
GHC.ForeignPtr.touchForeignPtr1
  :: forall a.
     ForeignPtr a -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(A,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7IU3)
                 (ds_d7J4C [Occ=Once!] :: ForeignPtr a_a7IU3)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case ds_d7J4C of { ForeignPtr _ [Occ=Dead] r_a7ILa [Occ=Once] ->
                 case touch# @ 'LiftedRep @ ForeignPtrContents r_a7ILa eta_B1
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, GHC.Tuple.() #)
                 }
                 }}]
GHC.ForeignPtr.touchForeignPtr1
  = \ (@ a_a7IU3)
      (ds_d7J4C :: ForeignPtr a_a7IU3)
      (eta_B1 :: State# RealWorld) ->
      case ds_d7J4C of { ForeignPtr ds1_d7J4I r_a7ILa ->
      case touch# @ 'LiftedRep @ ForeignPtrContents r_a7ILa eta_B1
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, GHC.Tuple.() #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
touchForeignPtr :: forall a. ForeignPtr a -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(A,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.touchForeignPtr1
               `cast` (forall (a :: <*>_N).
                       <ForeignPtr a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall a.
                           ForeignPtr a
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (forall a. ForeignPtr a -> IO () :: *))}]
touchForeignPtr
  = GHC.ForeignPtr.touchForeignPtr1
    `cast` (forall (a :: <*>_N).
            <ForeignPtr a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall a.
                ForeignPtr a
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (forall a. ForeignPtr a -> IO () :: *))

-- RHS size: {terms: 7, types: 9, coercions: 0, joins: 0/0}
unsafeForeignPtrToPtr :: forall a. ForeignPtr a -> Ptr a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7ITR) (ds_d7J4s [Occ=Once!] :: ForeignPtr a_a7ITR) ->
                 case ds_d7J4s of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 GHC.Ptr.Ptr @ a_a7ITR fo_a7ILe
                 }}]
unsafeForeignPtrToPtr
  = \ (@ a_a7ITR) (ds_d7J4s :: ForeignPtr a_a7ITR) ->
      case ds_d7J4s of { ForeignPtr fo_a7ILe ds1_d7J4y ->
      GHC.Ptr.Ptr @ a_a7ITR fo_a7ILe
      }

-- RHS size: {terms: 15, types: 21, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fShowForeignPtr_$cshowsPrec
  :: forall a. Int -> ForeignPtr a -> ShowS
[GblId,
 Arity=3,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2i)
                 _ [Occ=Dead]
                 (f_a7IIQ [Occ=Once!] :: ForeignPtr a_a7J2i)
                 (eta_B1 [Occ=Once] :: String) ->
                 case f_a7IIQ of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe eta_B1 of
                 { (# ww3_i7JeO [Occ=Once], ww4_i7JeP [Occ=Once] #) ->
                 GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
                 }
                 }}]
GHC.ForeignPtr.$fShowForeignPtr_$cshowsPrec
  = \ (@ a_a7J2i)
      _ [Occ=Dead]
      (f_a7IIQ :: ForeignPtr a_a7J2i)
      (eta_B1 :: String) ->
      case f_a7IIQ of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe eta_B1 of
      { (# ww3_i7JeO, ww4_i7JeP #) ->
      GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
      }
      }

-- RHS size: {terms: 13, types: 20, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fShowForeignPtr_$cshow
  :: forall a. ForeignPtr a -> String
[GblId,
 Arity=1,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2i) (x_i7Jay [Occ=Once!] :: ForeignPtr a_a7J2i) ->
                 case x_i7Jay of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe (GHC.Types.[] @ Char)
                 of
                 { (# ww3_i7JeO [Occ=Once], ww4_i7JeP [Occ=Once] #) ->
                 GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
                 }
                 }}]
GHC.ForeignPtr.$fShowForeignPtr_$cshow
  = \ (@ a_a7J2i) (x_i7Jay :: ForeignPtr a_a7J2i) ->
      case x_i7Jay of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe (GHC.Types.[] @ Char)
      of
      { (# ww3_i7JeO, ww4_i7JeP #) ->
      GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
      }
      }

-- RHS size: {terms: 14, types: 20, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fShowForeignPtr1
  :: forall a. ForeignPtr a -> String -> String
[GblId,
 Arity=2,
 Str=<S(SL),1*U(U,A)><L,1*U>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2i)
                 (f_a7IIQ [Occ=Once!] :: ForeignPtr a_a7J2i)
                 (eta_B1 [Occ=Once, OS=OneShot] :: String) ->
                 case f_a7IIQ of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe eta_B1 of
                 { (# ww3_i7JeO [Occ=Once], ww4_i7JeP [Occ=Once] #) ->
                 GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
                 }
                 }}]
GHC.ForeignPtr.$fShowForeignPtr1
  = \ (@ a_a7J2i)
      (f_a7IIQ :: ForeignPtr a_a7J2i)
      (eta_B1 [OS=OneShot] :: String) ->
      case f_a7IIQ of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case GHC.Ptr.$w$cshowsPrec @ a_a7J2i fo_a7ILe eta_B1 of
      { (# ww3_i7JeO, ww4_i7JeP #) ->
      GHC.Types.: @ Char ww3_i7JeO ww4_i7JeP
      }
      }

-- RHS size: {terms: 7, types: 9, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fShowForeignPtr_$cshowList
  :: forall a. [ForeignPtr a] -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2i)
                 (ls_i7JaB [Occ=Once] :: [ForeignPtr a_a7J2i])
                 (s_i7JaC [Occ=Once] :: String) ->
                 showList__
                   @ (ForeignPtr a_a7J2i)
                   (GHC.ForeignPtr.$fShowForeignPtr1 @ a_a7J2i)
                   ls_i7JaB
                   s_i7JaC}]
GHC.ForeignPtr.$fShowForeignPtr_$cshowList
  = \ (@ a_a7J2i)
      (ls_i7JaB :: [ForeignPtr a_a7J2i])
      (s_i7JaC :: String) ->
      showList__
        @ (ForeignPtr a_a7J2i)
        (GHC.ForeignPtr.$fShowForeignPtr1 @ a_a7J2i)
        ls_i7JaB
        s_i7JaC

-- RHS size: {terms: 5, types: 7, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fShowForeignPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. Show (ForeignPtr a)
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ (@ a_a7IIO) ->
       GHC.Show.C:Show TYPE: ForeignPtr a_a7IIO
                       GHC.ForeignPtr.$fShowForeignPtr_$cshowsPrec @ a_a7IIO
                       GHC.ForeignPtr.$fShowForeignPtr_$cshow @ a_a7IIO
                       GHC.ForeignPtr.$fShowForeignPtr_$cshowList @ a_a7IIO]
GHC.ForeignPtr.$fShowForeignPtr
  = \ (@ a_a7J2i) ->
      GHC.Show.C:Show
        @ (ForeignPtr a_a7J2i)
        (GHC.ForeignPtr.$fShowForeignPtr_$cshowsPrec @ a_a7J2i)
        (GHC.ForeignPtr.$fShowForeignPtr_$cshow @ a_a7J2i)
        (GHC.ForeignPtr.$fShowForeignPtr_$cshowList @ a_a7J2i)

-- RHS size: {terms: 24, types: 16, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$ccompare
  :: forall a. ForeignPtr a -> ForeignPtr a -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (p_a7IIS [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (q_a7IIT [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case p_a7IIS of { ForeignPtr fo_a7ILe _ [Occ=Dead] ->
                 case q_a7IIT of { ForeignPtr fo1_X7IP2 _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT ->
                     case eqAddr# fo_a7ILe fo1_X7IP2 of {
                       __DEFAULT -> GHC.Types.GT;
                       1# -> GHC.Types.EQ
                     };
                   1# -> GHC.Types.LT
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$ccompare
  = \ (@ a_a7J2I)
      (p_a7IIS :: ForeignPtr a_a7J2I)
      (q_a7IIT :: ForeignPtr a_a7J2I) ->
      case p_a7IIS of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case q_a7IIT of { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT ->
          case eqAddr# fo_a7ILe fo1_X7IP2 of {
            __DEFAULT -> GHC.Types.GT;
            1# -> GHC.Types.EQ
          };
        1# -> GHC.Types.LT
      }
      }
      }

-- RHS size: {terms: 13, types: 15, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fEqForeignPtr_$c==
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J3r)
                 (p_a7IIV [Occ=Once!] :: ForeignPtr a_a7J3r)
                 (q_a7IIW [Occ=Once!] :: ForeignPtr a_a7J3r) ->
                 case p_a7IIV of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case q_a7IIW of { ForeignPtr fo1_X7IP3 [Occ=Once] _ [Occ=Dead] ->
                 tagToEnum# @ Bool (eqAddr# fo_a7ILe fo1_X7IP3)
                 }
                 }}]
GHC.ForeignPtr.$fEqForeignPtr_$c==
  = \ (@ a_a7J3r)
      (p_a7IIV :: ForeignPtr a_a7J3r)
      (q_a7IIW :: ForeignPtr a_a7J3r) ->
      case p_a7IIV of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case q_a7IIW of { ForeignPtr fo1_X7IP3 ds1_X7J8o ->
      tagToEnum# @ Bool (eqAddr# fo_a7ILe fo1_X7IP3)
      }
      }

-- RHS size: {terms: 17, types: 15, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fEqForeignPtr_$c/= [InlPrag=INLINE (sat-args=2)]
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a7J3r)
                 (x_a22b [Occ=Once!] :: ForeignPtr a_a7J3r)
                 (y_a22c [Occ=Once!] :: ForeignPtr a_a7J3r) ->
                 case x_a22b of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case y_a22c of { ForeignPtr fo1_X7IP3 [Occ=Once] _ [Occ=Dead] ->
                 case eqAddr# fo_a7ILe fo1_X7IP3 of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }}]
GHC.ForeignPtr.$fEqForeignPtr_$c/=
  = \ (@ a_a7J3r)
      (eta_B2 :: ForeignPtr a_a7J3r)
      (eta1_B1 :: ForeignPtr a_a7J3r) ->
      case eta_B2 of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case eta1_B1 of { ForeignPtr fo1_X7IP3 ds1_X7J8o ->
      case eqAddr# fo_a7ILe fo1_X7IP3 of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fEqForeignPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. Eq (ForeignPtr a)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ a_a7IIU) ->
       GHC.Classes.C:Eq TYPE: ForeignPtr a_a7IIU
                        GHC.ForeignPtr.$fEqForeignPtr_$c== @ a_a7IIU
                        GHC.ForeignPtr.$fEqForeignPtr_$c/= @ a_a7IIU]
GHC.ForeignPtr.$fEqForeignPtr
  = \ (@ a_a7J3r) ->
      GHC.Classes.C:Eq
        @ (ForeignPtr a_a7J3r)
        (GHC.ForeignPtr.$fEqForeignPtr_$c== @ a_a7J3r)
        (GHC.ForeignPtr.$fEqForeignPtr_$c/= @ a_a7J3r)

-- RHS size: {terms: 17, types: 15, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$c<
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a1MiF [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a1MiG [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a1MiF of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case y_a1MiG of { ForeignPtr fo1_X7IP2 [Occ=Once] _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> GHC.Types.True
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$c<
  = \ (@ a_a7J2I)
      (x_a1MiF :: ForeignPtr a_a7J2I)
      (y_a1MiG :: ForeignPtr a_a7J2I) ->
      case x_a1MiF of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a1MiG of { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT -> GHC.Types.False;
        1# -> GHC.Types.True
      }
      }
      }

-- RHS size: {terms: 17, types: 15, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$c>=
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a1fiT [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a1fiU [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a1fiT of { ForeignPtr fo_a7ILe [Occ=Once] _ [Occ=Dead] ->
                 case y_a1fiU of { ForeignPtr fo1_X7IP2 [Occ=Once] _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT -> GHC.Types.True;
                   1# -> GHC.Types.False
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$c>=
  = \ (@ a_a7J2I)
      (x_a1fiT :: ForeignPtr a_a7J2I)
      (y_a1fiU :: ForeignPtr a_a7J2I) ->
      case x_a1fiT of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a1fiU of { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT -> GHC.Types.True;
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 24, types: 16, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$c>
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a1fiM [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a1fiN [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a1fiM of { ForeignPtr fo_a7ILe _ [Occ=Dead] ->
                 case y_a1fiN of { ForeignPtr fo1_X7IP2 _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT ->
                     case eqAddr# fo_a7ILe fo1_X7IP2 of {
                       __DEFAULT -> GHC.Types.True;
                       1# -> GHC.Types.False
                     };
                   1# -> GHC.Types.False
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$c>
  = \ (@ a_a7J2I)
      (x_a1fiM :: ForeignPtr a_a7J2I)
      (y_a1fiN :: ForeignPtr a_a7J2I) ->
      case x_a1fiM of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a1fiN of { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT ->
          case eqAddr# fo_a7ILe fo1_X7IP2 of {
            __DEFAULT -> GHC.Types.True;
            1# -> GHC.Types.False
          };
        1# -> GHC.Types.False
      }
      }
      }

-- RHS size: {terms: 24, types: 16, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$c<=
  :: forall a. ForeignPtr a -> ForeignPtr a -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S(SL),1*U(U,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a1MiL [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a1MiM [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a1MiL of { ForeignPtr fo_a7ILe _ [Occ=Dead] ->
                 case y_a1MiM of { ForeignPtr fo1_X7IP2 _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT ->
                     case eqAddr# fo_a7ILe fo1_X7IP2 of {
                       __DEFAULT -> GHC.Types.False;
                       1# -> GHC.Types.True
                     };
                   1# -> GHC.Types.True
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$c<=
  = \ (@ a_a7J2I)
      (x_a1MiL :: ForeignPtr a_a7J2I)
      (y_a1MiM :: ForeignPtr a_a7J2I) ->
      case x_a1MiL of { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a1MiM of { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT ->
          case eqAddr# fo_a7ILe fo1_X7IP2 of {
            __DEFAULT -> GHC.Types.False;
            1# -> GHC.Types.True
          };
        1# -> GHC.Types.True
      }
      }
      }

-- RHS size: {terms: 24, types: 16, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$cmax
  :: forall a. ForeignPtr a -> ForeignPtr a -> ForeignPtr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(SL),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a55d [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a55e [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a55d of wild_X1l { ForeignPtr fo_a7ILe _ [Occ=Dead] ->
                 case y_a55e of wild1_X57 { ForeignPtr fo1_X7IP2 _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT ->
                     case eqAddr# fo_a7ILe fo1_X7IP2 of {
                       __DEFAULT -> wild_X1l;
                       1# -> wild1_X57
                     };
                   1# -> wild1_X57
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$cmax
  = \ (@ a_a7J2I)
      (x_a55d :: ForeignPtr a_a7J2I)
      (y_a55e :: ForeignPtr a_a7J2I) ->
      case x_a55d of wild_X1l { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a55e of wild1_X57 { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT ->
          case eqAddr# fo_a7ILe fo1_X7IP2 of {
            __DEFAULT -> wild_X1l;
            1# -> wild1_X57
          };
        1# -> wild1_X57
      }
      }
      }

-- RHS size: {terms: 24, types: 16, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr_$cmin
  :: forall a. ForeignPtr a -> ForeignPtr a -> ForeignPtr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(SL),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J2I)
                 (x_a55m [Occ=Once!] :: ForeignPtr a_a7J2I)
                 (y_a55n [Occ=Once!] :: ForeignPtr a_a7J2I) ->
                 case x_a55m of wild_X1l { ForeignPtr fo_a7ILe _ [Occ=Dead] ->
                 case y_a55n of wild1_X57 { ForeignPtr fo1_X7IP2 _ [Occ=Dead] ->
                 case ltAddr# fo_a7ILe fo1_X7IP2 of {
                   __DEFAULT ->
                     case eqAddr# fo_a7ILe fo1_X7IP2 of {
                       __DEFAULT -> wild1_X57;
                       1# -> wild_X1l
                     };
                   1# -> wild_X1l
                 }
                 }
                 }}]
GHC.ForeignPtr.$fOrdForeignPtr_$cmin
  = \ (@ a_a7J2I)
      (x_a55m :: ForeignPtr a_a7J2I)
      (y_a55n :: ForeignPtr a_a7J2I) ->
      case x_a55m of wild_X1l { ForeignPtr fo_a7ILe ds_d7J4y ->
      case y_a55n of wild1_X57 { ForeignPtr fo1_X7IP2 ds1_X7J8n ->
      case ltAddr# fo_a7ILe fo1_X7IP2 of {
        __DEFAULT ->
          case eqAddr# fo_a7ILe fo1_X7IP2 of {
            __DEFAULT -> wild1_X57;
            1# -> wild_X1l
          };
        1# -> wild_X1l
      }
      }
      }

-- RHS size: {terms: 10, types: 12, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$fOrdForeignPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: forall a. Ord (ForeignPtr a)
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ (@ a_a7IIR) ->
       GHC.Classes.C:Ord TYPE: ForeignPtr a_a7IIR
                         GHC.ForeignPtr.$fEqForeignPtr @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$ccompare @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$c< @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$c<= @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$c> @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$c>= @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$cmax @ a_a7IIR
                         GHC.ForeignPtr.$fOrdForeignPtr_$cmin @ a_a7IIR]
GHC.ForeignPtr.$fOrdForeignPtr
  = \ (@ a_a7J2I) ->
      GHC.Classes.C:Ord
        @ (ForeignPtr a_a7J2I)
        (GHC.ForeignPtr.$fEqForeignPtr @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$ccompare @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$c< @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$c<= @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$c> @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$c>= @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$cmax @ a_a7J2I)
        (GHC.ForeignPtr.$fOrdForeignPtr_$cmin @ a_a7J2I)

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.castForeignPtr1
  :: forall a b. ForeignPtr a -> ForeignPtr a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a7ITK)
                 (@ b_a7ITL)
                 (v_B2 [Occ=Once] :: ForeignPtr a_a7ITK) ->
                 v_B2}]
GHC.ForeignPtr.castForeignPtr1
  = \ (@ a_a7ITK) (@ b_a7ITL) (v_B2 :: ForeignPtr a_a7ITK) -> v_B2

-- RHS size: {terms: 1, types: 0, coercions: 16, joins: 0/0}
castForeignPtr :: forall a b. ForeignPtr a -> ForeignPtr b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.castForeignPtr1
               `cast` (forall (a :: <*>_N) (b :: <*>_N).
                       <ForeignPtr a>_R
                       ->_R (ForeignPtr Univ(phantom phantom <*>_N :: a, b))_R
                       :: (forall a b. ForeignPtr a -> ForeignPtr a :: *)
                          ~R# (forall a b. ForeignPtr a -> ForeignPtr b :: *))}]
castForeignPtr
  = GHC.ForeignPtr.castForeignPtr1
    `cast` (forall (a :: <*>_N) (b :: <*>_N).
            <ForeignPtr a>_R
            ->_R (ForeignPtr Univ(phantom phantom <*>_N :: a, b))_R
            :: (forall a b. ForeignPtr a -> ForeignPtr a :: *)
               ~R# (forall a b. ForeignPtr a -> ForeignPtr b :: *))

-- RHS size: {terms: 15, types: 14, coercions: 0, joins: 0/0}
plusForeignPtr :: forall a b. ForeignPtr a -> Int -> ForeignPtr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7ITG)
                 (@ b_a7ITH)
                 (ds_d7J4j [Occ=Once!] :: ForeignPtr a_a7ITG)
                 (ds1_d7J4k [Occ=Once!] :: Int) ->
                 case ds_d7J4j of
                 { ForeignPtr addr_a7ILf [Occ=Once] c_a7ILg [Occ=Once] ->
                 case ds1_d7J4k of { I# d_a7ILh [Occ=Once] ->
                 GHC.ForeignPtr.ForeignPtr
                   @ b_a7ITH (plusAddr# addr_a7ILf d_a7ILh) c_a7ILg
                 }
                 }}]
plusForeignPtr
  = \ (@ a_a7ITG)
      (@ b_a7ITH)
      (ds_d7J4j :: ForeignPtr a_a7ITG)
      (ds1_d7J4k :: Int) ->
      case ds_d7J4j of { ForeignPtr addr_a7ILf c_a7ILg ->
      case ds1_d7J4k of { I# d_a7ILh ->
      GHC.ForeignPtr.ForeignPtr
        @ b_a7ITH (plusAddr# addr_a7ILf d_a7ILh) c_a7ILg
      }
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$trModule3
  = GHC.Types.TrNameS GHC.ForeignPtr.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$trModule1
  = GHC.Types.TrNameS GHC.ForeignPtr.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.ForeignPtr.$trModule
  = GHC.Types.Module
      GHC.ForeignPtr.$trModule3 GHC.ForeignPtr.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r7Kba :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r7Kba
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcRealWorld (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_r7Kbb :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_r7Kbb
  = GHC.Types.KindRepTyConApp
      GHC.Tuple.$tc() (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep2_r7Kbc :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep2_r7Kbc
  = GHC.Types.: @ KindRep $krep1_r7Kbb (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_r7Kbd :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_r7Kbd
  = GHC.Types.KindRepTyConApp GHC.Types.$tcIO $krep2_r7Kbc

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep4_r7Kbe :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_r7Kbe
  = GHC.Types.: @ KindRep $krep3_r7Kbd (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r7Kbf :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_r7Kbf
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep4_r7Kbe

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep6_r7Kbg :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_r7Kbg = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep7_r7Kbh :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep7_r7Kbh
  = GHC.Types.: @ KindRep $krep_r7Kba (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8_r7Kbi :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep8_r7Kbi
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcMutableByteArray# $krep7_r7Kbh

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_r7Kbj :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep9_r7Kbj
  = GHC.Types.KindRepTyConApp GHC.Types.$tcWeak# $krep2_r7Kbc

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep10_r7Kbk :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep10_r7Kbk
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcAddr# (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcFinalizers2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tcFinalizers2 = "Finalizers"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcFinalizers1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tcFinalizers1
  = GHC.Types.TrNameS GHC.ForeignPtr.$tcFinalizers2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcFinalizers :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tcFinalizers
  = GHC.Types.TyCon
      2126386461452460014##
      14391791758474672075##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tcFinalizers1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'NoFinalizers1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.ForeignPtr.$tc'NoFinalizers1
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcFinalizers (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'NoFinalizers3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.ForeignPtr.$tc'NoFinalizers3 = "'NoFinalizers"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'NoFinalizers2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'NoFinalizers2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'NoFinalizers3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'NoFinalizers :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'NoFinalizers
  = GHC.Types.TyCon
      1940741700794708869##
      15606281748314638871##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'NoFinalizers2
      0#
      GHC.ForeignPtr.$tc'NoFinalizers1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'CFinalizers1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'CFinalizers1
  = GHC.Types.KindRepFun
      $krep9_r7Kbj GHC.ForeignPtr.$tc'NoFinalizers1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'CFinalizers3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tc'CFinalizers3 = "'CFinalizers"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'CFinalizers2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'CFinalizers2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'CFinalizers3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'CFinalizers :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'CFinalizers
  = GHC.Types.TyCon
      5471016724267814004##
      11112927960337249170##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'CFinalizers2
      0#
      GHC.ForeignPtr.$tc'CFinalizers1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'HaskellFinalizers1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'HaskellFinalizers1
  = GHC.Types.KindRepFun
      $krep5_r7Kbf GHC.ForeignPtr.$tc'NoFinalizers1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'HaskellFinalizers3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.ForeignPtr.$tc'HaskellFinalizers3 = "'HaskellFinalizers"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'HaskellFinalizers2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'HaskellFinalizers2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'HaskellFinalizers3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'HaskellFinalizers :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'HaskellFinalizers
  = GHC.Types.TyCon
      2766439294378598012##
      9182349323511249767##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'HaskellFinalizers2
      0#
      GHC.ForeignPtr.$tc'HaskellFinalizers1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep11_r7Kbl :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep11_r7Kbl
  = GHC.Types.:
      @ KindRep GHC.ForeignPtr.$tc'NoFinalizers1 (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep12_r7Kbm :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep12_r7Kbm
  = GHC.Types.KindRepTyConApp GHC.IORef.$tcIORef $krep11_r7Kbl

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtrContents2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.ForeignPtr.$tcForeignPtrContents2 = "ForeignPtrContents"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtrContents1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tcForeignPtrContents1
  = GHC.Types.TrNameS GHC.ForeignPtr.$tcForeignPtrContents2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtrContents :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tcForeignPtrContents
  = GHC.Types.TyCon
      2960910307208088010##
      1419315288615932334##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tcForeignPtrContents1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep13_r7Kbn :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep13_r7Kbn
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcForeignPtrContents (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainPtr1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'PlainPtr1
  = GHC.Types.KindRepFun $krep8_r7Kbi $krep13_r7Kbn

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainPtr3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tc'PlainPtr3 = "'PlainPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainPtr2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'PlainPtr2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'PlainPtr3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainPtr :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'PlainPtr
  = GHC.Types.TyCon
      10386497703892305970##
      4483570029522342780##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'PlainPtr2
      0#
      GHC.ForeignPtr.$tc'PlainPtr1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainForeignPtr1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'PlainForeignPtr1
  = GHC.Types.KindRepFun $krep12_r7Kbm $krep13_r7Kbn

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainForeignPtr3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.ForeignPtr.$tc'PlainForeignPtr3 = "'PlainForeignPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainForeignPtr2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'PlainForeignPtr2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'PlainForeignPtr3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'PlainForeignPtr :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'PlainForeignPtr
  = GHC.Types.TyCon
      9658214180323125435##
      4797612916438137994##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'PlainForeignPtr2
      0#
      GHC.ForeignPtr.$tc'PlainForeignPtr1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MallocPtr1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'MallocPtr1
  = GHC.Types.KindRepFun
      $krep8_r7Kbi GHC.ForeignPtr.$tc'PlainForeignPtr1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MallocPtr3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tc'MallocPtr3 = "'MallocPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MallocPtr2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'MallocPtr2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'MallocPtr3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MallocPtr :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'MallocPtr
  = GHC.Types.TyCon
      1358169953258233372##
      15155489453511463859##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'MallocPtr2
      0#
      GHC.ForeignPtr.$tc'MallocPtr1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtr2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tcForeignPtr2 = "ForeignPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtr1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tcForeignPtr1
  = GHC.Types.TrNameS GHC.ForeignPtr.$tcForeignPtr2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcForeignPtr :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tcForeignPtr
  = GHC.Types.TyCon
      13645276010227069957##
      424768606850180054##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tcForeignPtr1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep14_r7Kbo :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep14_r7Kbo
  = GHC.Types.: @ KindRep $krep6_r7Kbg (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep15_r7Kbp :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep15_r7Kbp
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcForeignPtr $krep14_r7Kbo

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep16_r7Kbq :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep16_r7Kbq = GHC.Types.KindRepFun $krep13_r7Kbn $krep15_r7Kbp

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'ForeignPtr1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'ForeignPtr1
  = GHC.Types.KindRepFun $krep10_r7Kbk $krep16_r7Kbq

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'ForeignPtr3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.ForeignPtr.$tc'ForeignPtr3 = "'ForeignPtr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'ForeignPtr2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'ForeignPtr2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'ForeignPtr3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'ForeignPtr :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'ForeignPtr
  = GHC.Types.TyCon
      15066988800190837275##
      12331496810414125071##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'ForeignPtr2
      1#
      GHC.ForeignPtr.$tc'ForeignPtr1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcMyWeak2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ForeignPtr.$tcMyWeak2 = "MyWeak"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcMyWeak1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tcMyWeak1
  = GHC.Types.TrNameS GHC.ForeignPtr.$tcMyWeak2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tcMyWeak :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tcMyWeak
  = GHC.Types.TyCon
      18176044154139657744##
      6003369520845561213##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tcMyWeak1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep17_r7Kbr :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep17_r7Kbr
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcMyWeak (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MyWeak1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.ForeignPtr.$tc'MyWeak1
  = GHC.Types.KindRepFun $krep9_r7Kbj $krep17_r7Kbr

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MyWeak3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.ForeignPtr.$tc'MyWeak3 = "'MyWeak"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MyWeak2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.ForeignPtr.$tc'MyWeak2
  = GHC.Types.TrNameS GHC.ForeignPtr.$tc'MyWeak3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$tc'MyWeak :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.ForeignPtr.$tc'MyWeak
  = GHC.Types.TyCon
      12419514784912020020##
      3312746660203758866##
      GHC.ForeignPtr.$trModule
      GHC.ForeignPtr.$tc'MyWeak2
      0#
      GHC.ForeignPtr.$tc'MyWeak1

-- RHS size: {terms: 17, types: 35, coercions: 0, joins: 0/0}
GHC.ForeignPtr.newForeignPtr_1
  :: forall a.
     Ptr a -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7IU5)
                 (ds_d7J4J [Occ=Once!] :: Ptr a_a7IU5)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case ds_d7J4J of { Ptr obj_a7IL8 [Occ=Once] ->
                 case newMutVar#
                        @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
                 of
                 { (# ipv_i7IAN [Occ=Once], ipv1_i7IAO [Occ=Once] #) ->
                 (# ipv_i7IAN,
                    GHC.ForeignPtr.ForeignPtr
                      @ a_a7IU5 obj_a7IL8 (GHC.ForeignPtr.PlainForeignPtr ipv1_i7IAO) #)
                 }
                 }}]
GHC.ForeignPtr.newForeignPtr_1
  = \ (@ a_a7IU5)
      (ds_d7J4J :: Ptr a_a7IU5)
      (eta_B1 :: State# RealWorld) ->
      case ds_d7J4J of { Ptr obj_a7IL8 ->
      case newMutVar#
             @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
      of
      { (# ipv_i7IAN, ipv1_i7IAO #) ->
      (# ipv_i7IAN,
         GHC.ForeignPtr.ForeignPtr
           @ a_a7IU5 obj_a7IL8 (GHC.ForeignPtr.PlainForeignPtr ipv1_i7IAO) #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
newForeignPtr_ :: forall a. Ptr a -> IO (ForeignPtr a)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.newForeignPtr_1
               `cast` (forall (a :: <*>_N).
                       <Ptr a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Ptr a
                           -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Ptr a -> IO (ForeignPtr a) :: *))}]
newForeignPtr_
  = GHC.ForeignPtr.newForeignPtr_1
    `cast` (forall (a :: <*>_N).
            <Ptr a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Ptr a
                -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Ptr a -> IO (ForeignPtr a) :: *))

Rec {
-- RHS size: {terms: 134, types: 221, coercions: 4, joins: 1/5}
GHC.ForeignPtr.$winsertCFinalizer [InlPrag=NOUSERINLINE[0],
                                   Occ=LoopBreaker]
  :: forall value.
     MutVar# RealWorld Finalizers
     -> Addr#
     -> Int#
     -> Addr#
     -> Addr#
     -> value
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=7,
 Str=<S,U><S,U><S,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []]
GHC.ForeignPtr.$winsertCFinalizer
  = \ (@ value_s7JOb)
      (ww_s7JOl :: MutVar# RealWorld Finalizers)
      (w_s7JOd :: Addr#)
      (w1_s7JOe :: Int#)
      (w2_s7JOf :: Addr#)
      (w3_s7JOg :: Addr#)
      (w4_s7JOh :: value_s7JOb)
      (w5_s7JOi :: State# RealWorld) ->
      case readMutVar# @ RealWorld @ Finalizers ww_s7JOl w5_s7JOi of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of {
        NoFinalizers ->
          case mkWeakNoFinalizer#
                 @ 'UnliftedRep
                 @ (MutVar# RealWorld Finalizers)
                 @ ()
                 ww_s7JOl
                 (w4_s7JOh
                  `cast` (UnsafeCo representational value_s7JOb ()
                          :: (value_s7JOb :: *) ~R# (() :: *)))
                 ipv_i7IAy
          of
          { (# ipv2_s7JgH, ipv3_s7JgI #) ->
          let {
            lvl24_s7JpH :: Finalizers
            [LclId, Unf=OtherCon []]
            lvl24_s7JpH = GHC.ForeignPtr.CFinalizers ipv3_s7JgI } in
          let {
            lvl25_s7JpI :: MyWeak
            [LclId, Unf=OtherCon []]
            lvl25_s7JpI = GHC.ForeignPtr.MyWeak ipv3_s7JgI } in
          let {
            lvl26_s7JpJ :: (MyWeak, Bool)
            [LclId, Unf=OtherCon []]
            lvl26_s7JpJ = (lvl25_s7JpI, GHC.Types.False) } in
          let {
            lvl27_s7JnN :: (Finalizers, (MyWeak, Bool))
            [LclId, Unf=OtherCon []]
            lvl27_s7JnN = (lvl24_s7JpH, lvl26_s7JpJ) } in
          case atomicModifyMutVar#
                 @ RealWorld
                 @ Finalizers
                 @ (Finalizers, (MyWeak, Bool))
                 @ (MyWeak, Bool)
                 ww_s7JOl
                 (\ (fin_a7IKN :: Finalizers) ->
                    case fin_a7IKN of wild1_X4r {
                      NoFinalizers -> lvl27_s7JnN;
                      CFinalizers w6_a7IKO ->
                        (wild1_X4r, (GHC.ForeignPtr.MyWeak w6_a7IKO, GHC.Types.True));
                      HaskellFinalizers ipv4_s7JgL ->
                        noMixingError @ (Finalizers, (MyWeak, Bool))
                    })
                 ipv2_s7JgH
          of
          { (# ipv4_s7JgO, ipv5_s7JgP #) ->
          case ipv5_s7JgP of { (weak_a7IKW, needKill_a7IKX) ->
          join {
            $w$j_s7JOa [InlPrag=NOUSERINLINE[0],
                        Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
              :: State# RealWorld -> Weak# () -> (# State# RealWorld, () #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
            $w$j_s7JOa (w6_s7JO4 [OS=OneShot] :: State# RealWorld)
                       (ww1_s7JO8 [OS=OneShot] :: Weak# ())
              = case addCFinalizerToWeak#
                       @ () w_s7JOd w3_s7JOg w1_s7JOe w2_s7JOf ww1_s7JO8 w6_s7JO4
                of
                { (# ipv6_s7Jh1, ipv7_s7Jh2 #) ->
                case ipv7_s7Jh2 of {
                  __DEFAULT ->
                    GHC.ForeignPtr.$winsertCFinalizer
                      @ value_s7JOb
                      ww_s7JOl
                      w_s7JOd
                      w1_s7JOe
                      w2_s7JOf
                      w3_s7JOg
                      w4_s7JOh
                      ipv6_s7Jh1;
                  1# -> (# ipv6_s7Jh1, GHC.Tuple.() #)
                }
                } } in
          case needKill_a7IKX of {
            False ->
              case weak_a7IKW of { MyWeak ww2_s7JO8 ->
              jump $w$j_s7JOa ipv4_s7JgO ww2_s7JO8
              };
            True ->
              case finalizeWeak# @ () @ Any ipv3_s7JgI ipv4_s7JgO of
              { (# ipv6_s7JgU, ipv7_s7JgV, ipv8_s7JgW #) ->
              case weak_a7IKW of { MyWeak ww2_s7JO8 ->
              jump $w$j_s7JOa ipv6_s7JgU ww2_s7JO8
              }
              }
          }
          }
          }
          };
        CFinalizers weak_a7IKR ->
          case addCFinalizerToWeak#
                 @ () w_s7JOd w3_s7JOg w1_s7JOe w2_s7JOf weak_a7IKR ipv_i7IAy
          of
          { (# ipv2_s7Jh1, ipv3_s7Jh2 #) ->
          case ipv3_s7Jh2 of {
            __DEFAULT ->
              GHC.ForeignPtr.$winsertCFinalizer
                @ value_s7JOb
                ww_s7JOl
                w_s7JOd
                w1_s7JOe
                w2_s7JOf
                w3_s7JOg
                w4_s7JOh
                ipv2_s7Jh1;
            1# -> (# ipv2_s7Jh1, GHC.Tuple.() #)
          }
          };
        HaskellFinalizers ds_d7J6u -> case noMixingError of wild1_00 { }
      }
      }
end Rec }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl15_r7Kbs :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl15_r7Kbs
  = "GHC.ForeignPtr: attempt to add a finalizer to a plain pointer"#

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrFinalizer2 :: IO ()
[GblId, Str=x]
GHC.ForeignPtr.addForeignPtrFinalizer2
  = errorWithoutStackTrace
      @ 'LiftedRep @ (IO ()) (unpackCString# lvl15_r7Kbs)

-- RHS size: {terms: 30, types: 25, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$waddForeignPtrFinalizerEnv [InlPrag=NOUSERINLINE[0]]
  :: forall env a.
     Addr#
     -> Addr#
     -> Addr#
     -> ForeignPtrContents
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,U><S,U><S,U><S,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 110 0] 170 0}]
GHC.ForeignPtr.$waddForeignPtrFinalizerEnv
  = \ (@ env_s7JOo)
      (@ a_s7JOp)
      (ww_s7JOw :: Addr#)
      (ww1_s7JOA :: Addr#)
      (ww2_s7JOE :: Addr#)
      (ww3_s7JOF :: ForeignPtrContents)
      (w_s7JOt :: State# RealWorld) ->
      case ww3_s7JOF of wild_X1c {
        PlainForeignPtr dt_d7JaL ->
          GHC.ForeignPtr.$winsertCFinalizer
            @ () dt_d7JaL ww_s7JOw 1# ww1_s7JOA ww2_s7JOE GHC.Tuple.() w_s7JOt;
        MallocPtr ds_d7J8z dt_d7JaM ->
          GHC.ForeignPtr.$winsertCFinalizer
            @ ForeignPtrContents
            dt_d7JaM
            ww_s7JOw
            1#
            ww1_s7JOA
            ww2_s7JOE
            wild_X1c
            w_s7JOt;
        PlainPtr ipv_s7Jhc ->
          case GHC.ForeignPtr.addForeignPtrFinalizer2 of wild1_00 { }
      }

-- RHS size: {terms: 21, types: 34, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrFinalizerEnv1 [InlPrag=NOUSERINLINE[0]]
  :: forall env a.
     FunPtr (Ptr env -> Ptr a -> IO ())
     -> Ptr env
     -> ForeignPtr a
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SS),1*U(U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ env_s7JOo)
                 (@ a_s7JOp)
                 (w_s7JOq [Occ=Once!]
                    :: FunPtr (Ptr env_s7JOo -> Ptr a_s7JOp -> IO ()))
                 (w1_s7JOr [Occ=Once!] :: Ptr env_s7JOo)
                 (w2_s7JOs [Occ=Once!] :: ForeignPtr a_s7JOp)
                 (w3_s7JOt [Occ=Once] :: State# RealWorld) ->
                 case w_s7JOq of { FunPtr ww1_s7JOw [Occ=Once] ->
                 case w1_s7JOr of { Ptr ww3_s7JOA [Occ=Once] ->
                 case w2_s7JOs of
                 { ForeignPtr ww5_s7JOE [Occ=Once] ww6_s7JOF [Occ=Once] ->
                 GHC.ForeignPtr.$waddForeignPtrFinalizerEnv
                   @ env_s7JOo
                   @ a_s7JOp
                   ww1_s7JOw
                   ww3_s7JOA
                   ww5_s7JOE
                   ww6_s7JOF
                   w3_s7JOt
                 }
                 }
                 }}]
GHC.ForeignPtr.addForeignPtrFinalizerEnv1
  = \ (@ env_s7JOo)
      (@ a_s7JOp)
      (w_s7JOq :: FunPtr (Ptr env_s7JOo -> Ptr a_s7JOp -> IO ()))
      (w1_s7JOr :: Ptr env_s7JOo)
      (w2_s7JOs :: ForeignPtr a_s7JOp)
      (w3_s7JOt :: State# RealWorld) ->
      case w_s7JOq of { FunPtr ww1_s7JOw ->
      case w1_s7JOr of { Ptr ww3_s7JOA ->
      case w2_s7JOs of { ForeignPtr ww5_s7JOE ww6_s7JOF ->
      GHC.ForeignPtr.$waddForeignPtrFinalizerEnv
        @ env_s7JOo
        @ a_s7JOp
        ww1_s7JOw
        ww3_s7JOA
        ww5_s7JOE
        ww6_s7JOF
        w3_s7JOt
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 23, joins: 0/0}
addForeignPtrFinalizerEnv
  :: forall env a.
     FinalizerEnvPtr env a -> Ptr env -> ForeignPtr a -> IO ()
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SS),1*U(U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.addForeignPtrFinalizerEnv1
               `cast` (forall (env :: <*>_N) (a :: <*>_N).
                       <FunPtr (Ptr env -> Ptr a -> IO ())>_R
                       ->_R <Ptr env>_R
                       ->_R <ForeignPtr a>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall env a.
                           FunPtr (Ptr env -> Ptr a -> IO ())
                           -> Ptr env
                           -> ForeignPtr a
                           -> State# RealWorld
                           -> (# State# RealWorld, () #) :: *)
                          ~R# (forall env a.
                               FunPtr (Ptr env -> Ptr a -> IO ())
                               -> Ptr env -> ForeignPtr a -> IO () :: *))}]
addForeignPtrFinalizerEnv
  = GHC.ForeignPtr.addForeignPtrFinalizerEnv1
    `cast` (forall (env :: <*>_N) (a :: <*>_N).
            <FunPtr (Ptr env -> Ptr a -> IO ())>_R
            ->_R <Ptr env>_R
            ->_R <ForeignPtr a>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall env a.
                FunPtr (Ptr env -> Ptr a -> IO ())
                -> Ptr env
                -> ForeignPtr a
                -> State# RealWorld
                -> (# State# RealWorld, () #) :: *)
               ~R# (forall env a.
                    FunPtr (Ptr env -> Ptr a -> IO ())
                    -> Ptr env -> ForeignPtr a -> IO () :: *))

-- RHS size: {terms: 28, types: 22, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$waddForeignPtrFinalizer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Addr#
     -> Addr#
     -> ForeignPtrContents
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S,U><S,U><S,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 110 0] 170 0}]
GHC.ForeignPtr.$waddForeignPtrFinalizer
  = \ (@ a_s7JOI)
      (ww_s7JOO :: Addr#)
      (ww1_s7JOS :: Addr#)
      (ww2_s7JOT :: ForeignPtrContents)
      (w_s7JOL :: State# RealWorld) ->
      case ww2_s7JOT of wild_X19 {
        PlainForeignPtr dt_d7JaN ->
          GHC.ForeignPtr.$winsertCFinalizer
            @ () dt_d7JaN ww_s7JOO 0# __NULL ww1_s7JOS GHC.Tuple.() w_s7JOL;
        MallocPtr ds_d7J91 dt_d7JaO ->
          GHC.ForeignPtr.$winsertCFinalizer
            @ ForeignPtrContents
            dt_d7JaO
            ww_s7JOO
            0#
            __NULL
            ww1_s7JOS
            wild_X19
            w_s7JOL;
        PlainPtr ipv_s7Jhh ->
          case GHC.ForeignPtr.addForeignPtrFinalizer2 of wild1_00 { }
      }

-- RHS size: {terms: 15, types: 22, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrFinalizer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     FunPtr (Ptr a -> IO ())
     -> ForeignPtr a -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SS),1*U(U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s7JOI)
                 (w_s7JOJ [Occ=Once!] :: FunPtr (Ptr a_s7JOI -> IO ()))
                 (w1_s7JOK [Occ=Once!] :: ForeignPtr a_s7JOI)
                 (w2_s7JOL [Occ=Once] :: State# RealWorld) ->
                 case w_s7JOJ of { FunPtr ww1_s7JOO [Occ=Once] ->
                 case w1_s7JOK of
                 { ForeignPtr ww3_s7JOS [Occ=Once] ww4_s7JOT [Occ=Once] ->
                 GHC.ForeignPtr.$waddForeignPtrFinalizer
                   @ a_s7JOI ww1_s7JOO ww3_s7JOS ww4_s7JOT w2_s7JOL
                 }
                 }}]
GHC.ForeignPtr.addForeignPtrFinalizer1
  = \ (@ a_s7JOI)
      (w_s7JOJ :: FunPtr (Ptr a_s7JOI -> IO ()))
      (w1_s7JOK :: ForeignPtr a_s7JOI)
      (w2_s7JOL :: State# RealWorld) ->
      case w_s7JOJ of { FunPtr ww1_s7JOO ->
      case w1_s7JOK of { ForeignPtr ww3_s7JOS ww4_s7JOT ->
      GHC.ForeignPtr.$waddForeignPtrFinalizer
        @ a_s7JOI ww1_s7JOO ww3_s7JOS ww4_s7JOT w2_s7JOL
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
addForeignPtrFinalizer
  :: forall a. FinalizerPtr a -> ForeignPtr a -> IO ()
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SS),1*U(U,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.addForeignPtrFinalizer1
               `cast` (forall (a :: <*>_N).
                       <FunPtr (Ptr a -> IO ())>_R
                       ->_R <ForeignPtr a>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall a.
                           FunPtr (Ptr a -> IO ())
                           -> ForeignPtr a
                           -> State# RealWorld
                           -> (# State# RealWorld, () #) :: *)
                          ~R# (forall a.
                               FunPtr (Ptr a -> IO ()) -> ForeignPtr a -> IO () :: *))}]
addForeignPtrFinalizer
  = GHC.ForeignPtr.addForeignPtrFinalizer1
    `cast` (forall (a :: <*>_N).
            <FunPtr (Ptr a -> IO ())>_R
            ->_R <ForeignPtr a>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall a.
                FunPtr (Ptr a -> IO ())
                -> ForeignPtr a
                -> State# RealWorld
                -> (# State# RealWorld, () #) :: *)
               ~R# (forall a.
                    FunPtr (Ptr a -> IO ()) -> ForeignPtr a -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl16_r7Kbt :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl16_r7Kbt = "mallocForeignPtrAlignedBytes: size must be >= 0"#

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtrAlignedBytes2
  :: forall a. IO (ForeignPtr a)
[GblId, Str=x]
GHC.ForeignPtr.mallocForeignPtrAlignedBytes2
  = \ (@ a_a7J06) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO (ForeignPtr a_a7J06))
        (unpackCString# lvl16_r7Kbt)

-- RHS size: {terms: 37, types: 56, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtrAlignedBytes1
  :: forall a.
     Int
     -> Int -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J06)
                 (size_a7IJB [Occ=Once!] :: Int)
                 (_align_a7IJC [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case size_a7IJB of { I# x_alN9 ->
                 case <# x_alN9 0# of {
                   __DEFAULT ->
                     case _align_a7IJC of { I# align_a7IJE [Occ=Once] ->
                     case newMutVar#
                            @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
                     of
                     { (# ipv_i7IAN [Occ=Once], ipv1_i7IAO [Occ=Once] #) ->
                     case newAlignedPinnedByteArray#
                            @ RealWorld x_alN9 align_a7IJE ipv_i7IAN
                     of
                     { (# ipv2_s7Jhp [Occ=Once], ipv3_s7Jhq #) ->
                     (# ipv2_s7Jhp,
                        GHC.ForeignPtr.ForeignPtr
                          @ a_a7J06
                          (byteArrayContents#
                             (ipv3_s7Jhq
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.MallocPtr ipv3_s7Jhq ipv1_i7IAO) #)
                     }
                     }
                     };
                   1# -> case GHC.ForeignPtr.mallocForeignPtrAlignedBytes2 of { }
                 }
                 }}]
GHC.ForeignPtr.mallocForeignPtrAlignedBytes1
  = \ (@ a_a7J06)
      (size_a7IJB :: Int)
      (_align_a7IJC :: Int)
      (eta_B1 :: State# RealWorld) ->
      case size_a7IJB of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case _align_a7IJC of { I# align_a7IJE ->
          case newMutVar#
                 @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
          of
          { (# ipv_i7IAN, ipv1_i7IAO #) ->
          case newAlignedPinnedByteArray#
                 @ RealWorld x_alN9 align_a7IJE ipv_i7IAN
          of
          { (# ipv2_s7Jhp, ipv3_s7Jhq #) ->
          (# ipv2_s7Jhp,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7J06
               (byteArrayContents#
                  (ipv3_s7Jhq
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.MallocPtr ipv3_s7Jhq ipv1_i7IAO) #)
          }
          }
          };
        1# ->
          case GHC.ForeignPtr.mallocForeignPtrAlignedBytes2 of wild1_00 { }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
mallocForeignPtrAlignedBytes
  :: forall a. Int -> Int -> IO (ForeignPtr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocForeignPtrAlignedBytes1
               `cast` (forall (a :: <*>_N).
                       <Int>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Int
                           -> Int
                           -> State# RealWorld
                           -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Int -> Int -> IO (ForeignPtr a) :: *))}]
mallocForeignPtrAlignedBytes
  = GHC.ForeignPtr.mallocForeignPtrAlignedBytes1
    `cast` (forall (a :: <*>_N).
            <Int>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Int
                -> Int
                -> State# RealWorld
                -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Int -> Int -> IO (ForeignPtr a) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl17_r7Kbu :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl17_r7Kbu = "mallocForeignPtrBytes: size must be >= 0"#

-- RHS size: {terms: 4, types: 6, coercions: 0, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtrBytes2
  :: forall a. IO (ForeignPtr a)
[GblId, Str=x]
GHC.ForeignPtr.mallocForeignPtrBytes2
  = \ (@ a_a7J0v) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO (ForeignPtr a_a7J0v))
        (unpackCString# lvl17_r7Kbu)

-- RHS size: {terms: 32, types: 53, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtrBytes1
  :: forall a.
     Int -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7J0v)
                 (size_a7IJv [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case size_a7IJv of { I# x_alN9 ->
                 case <# x_alN9 0# of {
                   __DEFAULT ->
                     case newMutVar#
                            @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
                     of
                     { (# ipv_i7IAN [Occ=Once], ipv1_i7IAO [Occ=Once] #) ->
                     case newPinnedByteArray# @ RealWorld x_alN9 ipv_i7IAN of
                     { (# ipv2_s7Jhx [Occ=Once], ipv3_s7Jhy #) ->
                     (# ipv2_s7Jhx,
                        GHC.ForeignPtr.ForeignPtr
                          @ a_a7J0v
                          (byteArrayContents#
                             (ipv3_s7Jhy
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO) #)
                     }
                     };
                   1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of { }
                 }
                 }}]
GHC.ForeignPtr.mallocForeignPtrBytes1
  = \ (@ a_a7J0v) (size_a7IJv :: Int) (eta_B1 :: State# RealWorld) ->
      case size_a7IJv of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case newMutVar#
                 @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
          of
          { (# ipv_i7IAN, ipv1_i7IAO #) ->
          case newPinnedByteArray# @ RealWorld x_alN9 ipv_i7IAN of
          { (# ipv2_s7Jhx, ipv3_s7Jhy #) ->
          (# ipv2_s7Jhx,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7J0v
               (byteArrayContents#
                  (ipv3_s7Jhy
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO) #)
          }
          };
        1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of wild1_00 { }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
mallocForeignPtrBytes :: forall a. Int -> IO (ForeignPtr a)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocForeignPtrBytes1
               `cast` (forall (a :: <*>_N).
                       <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Int
                           -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Int -> IO (ForeignPtr a) :: *))}]
mallocForeignPtrBytes
  = GHC.ForeignPtr.mallocForeignPtrBytes1
    `cast` (forall (a :: <*>_N).
            <Int>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Int
                -> State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Int -> IO (ForeignPtr a) :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl18_r7Kbv :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl18_r7Kbv = GHC.Types.I# 159#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl19_r7Kbw :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl19_r7Kbw = GHC.Types.I# 29#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl20_r7Kbx :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl20_r7Kbx = GHC.Types.I# 38#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl21_r7Kby :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl21_r7Kby
  = GHC.Stack.Types.SrcLoc
      lvl2_r7KaX
      lvl3_r7KaY
      lvl5_r7Kb0
      lvl18_r7Kbv
      lvl19_r7Kbw
      lvl18_r7Kbv
      lvl20_r7Kbx

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl22_r7Kbz :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl22_r7Kbz
  = GHC.Stack.Types.PushCallStack
      lvl1_r7KaW lvl21_r7Kby GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtr3 :: forall a. a
[GblId, Str=x]
GHC.ForeignPtr.mallocForeignPtr3
  = \ (@ a_a7J0U) ->
      undefined
        @ 'LiftedRep
        @ a_a7J0U
        (lvl22_r7Kbz
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 40, types: 60, coercions: 5, joins: 0/0}
GHC.ForeignPtr.mallocForeignPtr1
  :: forall a.
     Storable a =>
     State# RealWorld -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))C(S(S))LLLLLL),U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0] 149 30}]
GHC.ForeignPtr.mallocForeignPtr1
  = \ (@ a_a7J0U)
      ($dStorable_a7J0W :: Storable a_a7J0U)
      (eta_B1 :: State# RealWorld) ->
      case alignment
             @ a_a7J0U
             $dStorable_a7J0W
             (GHC.ForeignPtr.mallocForeignPtr3 @ a_a7J0U)
      of
      { I# align_a7J1j ->
      case sizeOf
             @ a_a7J0U
             $dStorable_a7J0W
             (GHC.ForeignPtr.mallocForeignPtr3 @ a_a7J0U)
      of
      { I# size_a7J1t ->
      case <# size_a7J1t 0# of {
        __DEFAULT ->
          case newMutVar#
                 @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers eta_B1
          of
          { (# ipv_i7IAN, ipv1_i7IAO #) ->
          case newAlignedPinnedByteArray#
                 @ RealWorld size_a7J1t align_a7J1j ipv_i7IAN
          of
          { (# ipv2_s7JhN, ipv3_s7JhO #) ->
          (# ipv2_s7JhN,
             GHC.ForeignPtr.ForeignPtr
               @ a_a7J0U
               (byteArrayContents#
                  (ipv3_s7JhO
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.MallocPtr ipv3_s7JhO ipv1_i7IAO) #)
          }
          };
        1# -> case GHC.ForeignPtr.mallocForeignPtr2 of wild2_00 { }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
mallocForeignPtr :: forall a. Storable a => IO (ForeignPtr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))C(S(S))LLLLLL),U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.mallocForeignPtr1
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Storable a =>
                           State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Storable a => IO (ForeignPtr a) :: *))}]
mallocForeignPtr
  = GHC.ForeignPtr.mallocForeignPtr1
    `cast` (forall (a :: <*>_N).
            <Storable a>_R ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Storable a =>
                State# RealWorld -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Storable a => IO (ForeignPtr a) :: *))

-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrConcFinalizer3
  :: Finalizers -> (Finalizers, Finalizers)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fs_a7IL0 [Occ=Once] :: Finalizers) ->
                 (GHC.ForeignPtr.NoFinalizers, fs_a7IL0)}]
GHC.ForeignPtr.addForeignPtrConcFinalizer3
  = \ (fs_a7IL0 :: Finalizers) ->
      (GHC.ForeignPtr.NoFinalizers, fs_a7IL0)

Rec {
-- RHS size: {terms: 16, types: 31, coercions: 2, joins: 0/0}
GHC.ForeignPtr.addForeignPtrConcFinalizer4 [Occ=LoopBreaker]
  :: [IO ()] -> State# RealWorld -> (# State# RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,1*U><S,U>, Unf=OtherCon []]
GHC.ForeignPtr.addForeignPtrConcFinalizer4
  = \ (ds_i7Jck :: [IO ()]) (eta_B1 :: State# RealWorld) ->
      case ds_i7Jck of {
        [] -> (# eta_B1, GHC.Tuple.() #);
        : y_i7Jcp ys_i7Jcq ->
          case (y_i7Jcp
                `cast` (GHC.Types.N:IO[0] <()>_R
                        :: (IO () :: *)
                           ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                 eta_B1
          of
          { (# ipv_i7JiK, ipv1_i7JiL #) ->
          GHC.ForeignPtr.addForeignPtrConcFinalizer4 ys_i7Jcq ipv_i7JiK
          }
      }
end Rec }

-- RHS size: {terms: 33, types: 77, coercions: 0, joins: 0/0}
GHC.ForeignPtr.$wforeignPtrFinalizer [InlPrag=NOUSERINLINE[0]]
  :: MutVar# RealWorld Finalizers
     -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 107 60}]
GHC.ForeignPtr.$wforeignPtrFinalizer
  = \ (ww_s7JP5 :: MutVar# RealWorld Finalizers)
      (w_s7JP2 :: State# RealWorld) ->
      case atomicModifyMutVar#
             @ RealWorld
             @ Finalizers
             @ (Finalizers, Finalizers)
             @ Finalizers
             ww_s7JP5
             GHC.ForeignPtr.addForeignPtrConcFinalizer3
             w_s7JP2
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of {
        NoFinalizers -> (# ipv_i7IAy, GHC.Tuple.() #);
        CFinalizers w1_a7IL2 ->
          case finalizeWeak# @ () @ () w1_a7IL2 ipv_i7IAy of
          { (# ipv2_s7JhU, ipv3_s7JhV, ipv4_s7JhW #) ->
          case ipv3_s7JhV of {
            __DEFAULT -> (# ipv2_s7JhU, GHC.Tuple.() #);
            1# -> ipv4_s7JhW ipv2_s7JhU
          }
          };
        HaskellFinalizers actions_a7IL7 ->
          GHC.ForeignPtr.addForeignPtrConcFinalizer4 actions_a7IL7 ipv_i7IAy
      }
      }

-- RHS size: {terms: 8, types: 10, coercions: 2, joins: 0/0}
GHC.ForeignPtr.finalizeForeignPtr2 [InlPrag=NOUSERINLINE[0]]
  :: IORef Finalizers
     -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s7JP1 [Occ=Once] :: IORef Finalizers)
                 (w1_s7JP2 [Occ=Once] :: State# RealWorld) ->
                 case w_s7JP1
                      `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                              :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
                 of
                 { STRef ww1_s7JP5 [Occ=Once] ->
                 GHC.ForeignPtr.$wforeignPtrFinalizer ww1_s7JP5 w1_s7JP2
                 }}]
GHC.ForeignPtr.finalizeForeignPtr2
  = \ (w_s7JP1 :: IORef Finalizers) (w1_s7JP2 :: State# RealWorld) ->
      case w_s7JP1
           `cast` (GHC.IORef.N:IORef[0] <Finalizers>_N
                   :: (IORef Finalizers :: *) ~R# (STRef RealWorld Finalizers :: *))
      of
      { STRef ww1_s7JP5 ->
      GHC.ForeignPtr.$wforeignPtrFinalizer ww1_s7JP5 w1_s7JP2
      }

-- RHS size: {terms: 20, types: 28, coercions: 0, joins: 0/0}
GHC.ForeignPtr.finalizeForeignPtr1
  :: forall a.
     ForeignPtr a -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a7IV3)
                 (ds_d7J5h [Occ=Once!] :: ForeignPtr a_a7IV3)
                 (eta_B1 [Occ=Once*] :: State# RealWorld) ->
                 case ds_d7J5h of { ForeignPtr _ [Occ=Dead] ds2_d7J5x [Occ=Once!] ->
                 case ds2_d7J5x of {
                   PlainForeignPtr dt_d7JaH [Occ=Once] ->
                     GHC.ForeignPtr.finalizeForeignPtr2
                       ((GHC.STRef.STRef @ RealWorld @ Finalizers dt_d7JaH)
                        `cast` (Sym (GHC.IORef.N:IORef[0]) <Finalizers>_N
                                :: (STRef RealWorld Finalizers :: *) ~R# (IORef Finalizers :: *)))
                       eta_B1;
                   MallocPtr _ [Occ=Dead] dt_d7JaI [Occ=Once] ->
                     GHC.ForeignPtr.finalizeForeignPtr2
                       ((GHC.STRef.STRef @ RealWorld @ Finalizers dt_d7JaI)
                        `cast` (Sym (GHC.IORef.N:IORef[0]) <Finalizers>_N
                                :: (STRef RealWorld Finalizers :: *) ~R# (IORef Finalizers :: *)))
                       eta_B1;
                   PlainPtr _ [Occ=Dead] -> (# eta_B1, GHC.Tuple.() #)
                 }
                 }}]
GHC.ForeignPtr.finalizeForeignPtr1
  = \ (@ a_a7IV3)
      (ds_d7J5h :: ForeignPtr a_a7IV3)
      (eta_B1 :: State# RealWorld) ->
      case ds_d7J5h of { ForeignPtr ds1_d7J5w ds2_d7J5x ->
      case ds2_d7J5x of {
        PlainForeignPtr dt_d7JaH ->
          GHC.ForeignPtr.$wforeignPtrFinalizer dt_d7JaH eta_B1;
        MallocPtr ds3_d7J5M dt_d7JaI ->
          GHC.ForeignPtr.$wforeignPtrFinalizer dt_d7JaI eta_B1;
        PlainPtr ds3_d7J5y -> (# eta_B1, GHC.Tuple.() #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
finalizeForeignPtr :: forall a. ForeignPtr a -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.finalizeForeignPtr1
               `cast` (forall (a :: <*>_N).
                       <ForeignPtr a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall a.
                           ForeignPtr a
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (forall a. ForeignPtr a -> IO () :: *))}]
finalizeForeignPtr
  = GHC.ForeignPtr.finalizeForeignPtr1
    `cast` (forall (a :: <*>_N).
            <ForeignPtr a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall a.
                ForeignPtr a
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (forall a. ForeignPtr a -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl23_r7KbA :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl23_r7KbA
  = "GHC.ForeignPtr: attempt to add a finalizer to plain pointer"#

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrConcFinalizer2 :: IO ()
[GblId, Str=x]
GHC.ForeignPtr.addForeignPtrConcFinalizer2
  = errorWithoutStackTrace
      @ 'LiftedRep @ (IO ()) (unpackCString# lvl23_r7KbA)

-- RHS size: {terms: 185, types: 341, coercions: 2, joins: 2/8}
GHC.ForeignPtr.$waddForeignPtrConcFinalizer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     ForeignPtrContents
     -> IO () -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S,1*U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [239 0 0] 555 120}]
GHC.ForeignPtr.$waddForeignPtrConcFinalizer
  = \ (@ a_s7JPd)
      (ww_s7JPk :: ForeignPtrContents)
      (w_s7JPf :: IO ())
      (w1_s7JPg :: State# RealWorld) ->
      case ww_s7JPk of wild_X3i {
        PlainForeignPtr dt_d7JaJ ->
          let {
            lvl24_s7Jql :: [IO ()]
            [LclId, Unf=OtherCon []]
            lvl24_s7Jql
              = GHC.Types.: @ (IO ()) w_s7JPf (GHC.Types.[] @ (IO ())) } in
          let {
            lvl25_s7Jqm :: Finalizers
            [LclId, Unf=OtherCon []]
            lvl25_s7Jqm = GHC.ForeignPtr.HaskellFinalizers lvl24_s7Jql } in
          let {
            lvl26_s7Jot :: (Finalizers, Bool)
            [LclId, Unf=OtherCon []]
            lvl26_s7Jot = (lvl25_s7Jqm, GHC.Types.True) } in
          case atomicModifyMutVar#
                 @ RealWorld
                 @ Finalizers
                 @ (Finalizers, Bool)
                 @ Bool
                 dt_d7JaJ
                 (\ (finalizers_a7IKw :: Finalizers) ->
                    case finalizers_a7IKw of {
                      NoFinalizers -> lvl26_s7Jot;
                      CFinalizers ipv_s7JiT -> noMixingError @ (Finalizers, Bool);
                      HaskellFinalizers fs_a7IKx ->
                        (GHC.ForeignPtr.HaskellFinalizers
                           (GHC.Types.: @ (IO ()) w_s7JPf fs_a7IKx),
                         GHC.Types.False)
                    })
                 w1_s7JPg
          of
          { (# ipv_i7IAy, ipv1_i7IAz #) ->
          case ipv1_i7IAz of {
            False -> (# ipv_i7IAy, GHC.Tuple.() #);
            True ->
              case mkWeak#
                     @ 'UnliftedRep
                     @ (MutVar# RealWorld Finalizers)
                     @ ()
                     @ ()
                     dt_d7JaJ
                     GHC.Tuple.()
                     (\ (w2_s7JP2 :: State# RealWorld) ->
                        GHC.ForeignPtr.$wforeignPtrFinalizer dt_d7JaJ w2_s7JP2)
                     ipv_i7IAy
              of
              { (# ipv2_s7Jj4, ipv3_s7Jj5 #) ->
              (# ipv2_s7Jj4, GHC.Tuple.() #)
              }
          }
          };
        MallocPtr fo_a7IKn dt_d7JaK ->
          let {
            lvl24_s7Jql :: [IO ()]
            [LclId, Unf=OtherCon []]
            lvl24_s7Jql
              = GHC.Types.: @ (IO ()) w_s7JPf (GHC.Types.[] @ (IO ())) } in
          let {
            lvl25_s7Jqm :: Finalizers
            [LclId, Unf=OtherCon []]
            lvl25_s7Jqm = GHC.ForeignPtr.HaskellFinalizers lvl24_s7Jql } in
          let {
            lvl26_s7Jot :: (Finalizers, Bool)
            [LclId, Unf=OtherCon []]
            lvl26_s7Jot = (lvl25_s7Jqm, GHC.Types.True) } in
          case atomicModifyMutVar#
                 @ RealWorld
                 @ Finalizers
                 @ (Finalizers, Bool)
                 @ Bool
                 dt_d7JaK
                 (\ (finalizers_a7IKw :: Finalizers) ->
                    case finalizers_a7IKw of {
                      NoFinalizers -> lvl26_s7Jot;
                      CFinalizers ipv_s7JiT -> noMixingError @ (Finalizers, Bool);
                      HaskellFinalizers fs_a7IKx ->
                        (GHC.ForeignPtr.HaskellFinalizers
                           (GHC.Types.: @ (IO ()) w_s7JPf fs_a7IKx),
                         GHC.Types.False)
                    })
                 w1_s7JPg
          of
          { (# ipv_i7IAy, ipv1_i7IAz #) ->
          case ipv1_i7IAz of {
            False -> (# ipv_i7IAy, GHC.Tuple.() #);
            True ->
              case mkWeak#
                     @ 'UnliftedRep
                     @ (MutableByteArray# RealWorld)
                     @ ()
                     @ ()
                     fo_a7IKn
                     GHC.Tuple.()
                     (\ (s_i7JiH :: State# RealWorld) ->
                        case atomicModifyMutVar#
                               @ RealWorld
                               @ Finalizers
                               @ (Finalizers, Finalizers)
                               @ Finalizers
                               dt_d7JaK
                               GHC.ForeignPtr.addForeignPtrConcFinalizer3
                               s_i7JiH
                        of
                        { (# ipv2_X7IGw, ipv3_X7IGy #) ->
                        case ipv3_X7IGy of {
                          NoFinalizers ->
                            case touch# @ 'LiftedRep @ ForeignPtrContents wild_X3i ipv2_X7IGw
                            of s'_a7ILd
                            { __DEFAULT ->
                            (# s'_a7ILd, GHC.Tuple.() #)
                            };
                          CFinalizers w2_a7IL2 ->
                            case finalizeWeak# @ () @ () w2_a7IL2 ipv2_X7IGw of
                            { (# ipv4_s7JhU, ipv5_s7JhV, ipv6_s7JhW #) ->
                            case ipv5_s7JhV of {
                              __DEFAULT ->
                                case touch# @ 'LiftedRep @ ForeignPtrContents wild_X3i ipv4_s7JhU
                                of s'_a7ILd
                                { __DEFAULT ->
                                (# s'_a7ILd, GHC.Tuple.() #)
                                };
                              1# ->
                                case ipv6_s7JhW ipv4_s7JhU of { (# ipv7_i7JiK, ipv8_i7JiL #) ->
                                case touch# @ 'LiftedRep @ ForeignPtrContents wild_X3i ipv7_i7JiK
                                of s'_a7ILd
                                { __DEFAULT ->
                                (# s'_a7ILd, GHC.Tuple.() #)
                                }
                                }
                            }
                            };
                          HaskellFinalizers actions_a7IL7 ->
                            join {
                              exit_X2A [Dmd=<L,C(U)>]
                                :: State# RealWorld -> (# State# RealWorld, () #)
                              [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                              exit_X2A (eta_X4S [OS=OneShot] :: State# RealWorld)
                                = case touch# @ 'LiftedRep @ ForeignPtrContents wild_X3i eta_X4S
                                  of s'_a7ILd
                                  { __DEFAULT ->
                                  (# s'_a7ILd, GHC.Tuple.() #)
                                  } } in
                            joinrec {
                              go_s7JFy [Occ=LoopBreaker]
                                :: [IO ()] -> State# RealWorld -> (# State# RealWorld, () #)
                              [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                              go_s7JFy (ds_i7Jck :: [IO ()]) (eta_X4S :: State# RealWorld)
                                = case ds_i7Jck of {
                                    [] -> jump exit_X2A eta_X4S;
                                    : y_i7Jcp ys_i7Jcq ->
                                      case (y_i7Jcp
                                            `cast` (GHC.Types.N:IO[0] <()>_R
                                                    :: (IO () :: *)
                                                       ~R# (State# RealWorld
                                                            -> (# State# RealWorld, () #) :: *)))
                                             eta_X4S
                                      of
                                      { (# ipv4_i7JiK, ipv5_i7JiL #) ->
                                      jump go_s7JFy ys_i7Jcq ipv4_i7JiK
                                      }
                                  }; } in
                            jump go_s7JFy actions_a7IL7 ipv2_X7IGw
                        }
                        })
                     ipv_i7IAy
              of
              { (# ipv2_s7Jjd, ipv3_s7Jje #) ->
              (# ipv2_s7Jjd, GHC.Tuple.() #)
              }
          }
          };
        PlainPtr ipv_s7Jjg ->
          case GHC.ForeignPtr.addForeignPtrConcFinalizer2 of wild1_00 { }
      }

-- RHS size: {terms: 11, types: 13, coercions: 0, joins: 0/0}
GHC.ForeignPtr.addForeignPtrConcFinalizer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     ForeignPtr a
     -> IO () -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s7JPd)
                 (w_s7JPe [Occ=Once!] :: ForeignPtr a_s7JPd)
                 (w1_s7JPf [Occ=Once] :: IO ())
                 (w2_s7JPg [Occ=Once] :: State# RealWorld) ->
                 case w_s7JPe of { ForeignPtr _ [Occ=Dead] ww2_s7JPk [Occ=Once] ->
                 GHC.ForeignPtr.$waddForeignPtrConcFinalizer
                   @ a_s7JPd ww2_s7JPk w1_s7JPf w2_s7JPg
                 }}]
GHC.ForeignPtr.addForeignPtrConcFinalizer1
  = \ (@ a_s7JPd)
      (w_s7JPe :: ForeignPtr a_s7JPd)
      (w1_s7JPf :: IO ())
      (w2_s7JPg :: State# RealWorld) ->
      case w_s7JPe of { ForeignPtr ww1_s7JPj ww2_s7JPk ->
      GHC.ForeignPtr.$waddForeignPtrConcFinalizer
        @ a_s7JPd ww2_s7JPk w1_s7JPf w2_s7JPg
      }

-- RHS size: {terms: 1, types: 0, coercions: 12, joins: 0/0}
addForeignPtrConcFinalizer
  :: forall a. ForeignPtr a -> IO () -> IO ()
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.addForeignPtrConcFinalizer1
               `cast` (forall (a :: <*>_N).
                       <ForeignPtr a>_R ->_R <IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall a.
                           ForeignPtr a
                           -> IO () -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (forall a. ForeignPtr a -> IO () -> IO () :: *))}]
addForeignPtrConcFinalizer
  = GHC.ForeignPtr.addForeignPtrConcFinalizer1
    `cast` (forall (a :: <*>_N).
            <ForeignPtr a>_R ->_R <IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall a.
                ForeignPtr a
                -> IO () -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (forall a. ForeignPtr a -> IO () -> IO () :: *))

-- RHS size: {terms: 65, types: 108, coercions: 0, joins: 0/3}
GHC.ForeignPtr.$wnewConcForeignPtr [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Addr#
     -> IO ()
     -> State# RealWorld
     -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=3,
 Str=<L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 252 60}]
GHC.ForeignPtr.$wnewConcForeignPtr
  = \ (@ a_s7JPn)
      (ww_s7JPt :: Addr#)
      (w_s7JPp :: IO ())
      (w1_s7JPq :: State# RealWorld) ->
      case newMutVar#
             @ Finalizers @ RealWorld GHC.ForeignPtr.NoFinalizers w1_s7JPq
      of
      { (# ipv_i7IAN, ipv1_i7IAO #) ->
      let {
        lvl24_s7Jql :: [IO ()]
        [LclId, Unf=OtherCon []]
        lvl24_s7Jql
          = GHC.Types.: @ (IO ()) w_s7JPp (GHC.Types.[] @ (IO ())) } in
      let {
        lvl25_s7Jqm :: Finalizers
        [LclId, Unf=OtherCon []]
        lvl25_s7Jqm = GHC.ForeignPtr.HaskellFinalizers lvl24_s7Jql } in
      let {
        lvl26_s7Jot :: (Finalizers, Bool)
        [LclId, Unf=OtherCon []]
        lvl26_s7Jot = (lvl25_s7Jqm, GHC.Types.True) } in
      case atomicModifyMutVar#
             @ RealWorld
             @ Finalizers
             @ (Finalizers, Bool)
             @ Bool
             ipv1_i7IAO
             (\ (finalizers_a7IKw :: Finalizers) ->
                case finalizers_a7IKw of {
                  NoFinalizers -> lvl26_s7Jot;
                  CFinalizers ipv2_s7JiT -> noMixingError @ (Finalizers, Bool);
                  HaskellFinalizers fs_a7IKx ->
                    (GHC.ForeignPtr.HaskellFinalizers
                       (GHC.Types.: @ (IO ()) w_s7JPp fs_a7IKx),
                     GHC.Types.False)
                })
             ipv_i7IAN
      of
      { (# ipv2_i7IAy, ipv3_i7IAz #) ->
      case ipv3_i7IAz of {
        False ->
          (# ipv2_i7IAy,
             GHC.ForeignPtr.ForeignPtr
               @ a_s7JPn ww_s7JPt (GHC.ForeignPtr.PlainForeignPtr ipv1_i7IAO) #);
        True ->
          case mkWeak#
                 @ 'UnliftedRep
                 @ (MutVar# RealWorld Finalizers)
                 @ ()
                 @ ()
                 ipv1_i7IAO
                 GHC.Tuple.()
                 (\ (w2_s7JP2 :: State# RealWorld) ->
                    GHC.ForeignPtr.$wforeignPtrFinalizer ipv1_i7IAO w2_s7JP2)
                 ipv2_i7IAy
          of
          { (# ipv4_s7Jj4, ipv5_s7Jj5 #) ->
          (# ipv4_s7Jj4,
             GHC.ForeignPtr.ForeignPtr
               @ a_s7JPn ww_s7JPt (GHC.ForeignPtr.PlainForeignPtr ipv1_i7IAO) #)
          }
      }
      }
      }

-- RHS size: {terms: 11, types: 12, coercions: 0, joins: 0/0}
GHC.ForeignPtr.newConcForeignPtr1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Ptr a
     -> IO ()
     -> State# RealWorld
     -> (# State# RealWorld, ForeignPtr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s7JPn)
                 (w_s7JPo [Occ=Once!] :: Ptr a_s7JPn)
                 (w1_s7JPp [Occ=Once] :: IO ())
                 (w2_s7JPq [Occ=Once] :: State# RealWorld) ->
                 case w_s7JPo of { Ptr ww1_s7JPt [Occ=Once] ->
                 GHC.ForeignPtr.$wnewConcForeignPtr
                   @ a_s7JPn ww1_s7JPt w1_s7JPp w2_s7JPq
                 }}]
GHC.ForeignPtr.newConcForeignPtr1
  = \ (@ a_s7JPn)
      (w_s7JPo :: Ptr a_s7JPn)
      (w1_s7JPp :: IO ())
      (w2_s7JPq :: State# RealWorld) ->
      case w_s7JPo of { Ptr ww1_s7JPt ->
      GHC.ForeignPtr.$wnewConcForeignPtr
        @ a_s7JPn ww1_s7JPt w1_s7JPp w2_s7JPq
      }

-- RHS size: {terms: 1, types: 0, coercions: 13, joins: 0/0}
newConcForeignPtr :: forall a. Ptr a -> IO () -> IO (ForeignPtr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.ForeignPtr.newConcForeignPtr1
               `cast` (forall (a :: <*>_N).
                       <Ptr a>_R
                       ->_R <IO ()>_R
                       ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
                       :: (forall a.
                           Ptr a
                           -> IO ()
                           -> State# RealWorld
                           -> (# State# RealWorld, ForeignPtr a #) :: *)
                          ~R# (forall a. Ptr a -> IO () -> IO (ForeignPtr a) :: *))}]
newConcForeignPtr
  = GHC.ForeignPtr.newConcForeignPtr1
    `cast` (forall (a :: <*>_N).
            <Ptr a>_R
            ->_R <IO ()>_R
            ->_R Sym (GHC.Types.N:IO[0] <ForeignPtr a>_R)
            :: (forall a.
                Ptr a
                -> IO ()
                -> State# RealWorld
                -> (# State# RealWorld, ForeignPtr a #) :: *)
               ~R# (forall a. Ptr a -> IO () -> IO (ForeignPtr a) :: *))


