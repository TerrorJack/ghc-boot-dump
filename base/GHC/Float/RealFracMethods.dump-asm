
==================== Asm code ====================
2018-03-16 15:55:02.561024969 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt3_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt3_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.562953204 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt2_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt2_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt2_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0


==================== Asm code ====================
2018-03-16 15:55:02.564683382 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt1_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt1_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt3_closure+1
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:02.568477888 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:02.569394745 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionFloatInt_entry
.type GHC.Float.RealFracMethods.properFractionFloatInt_entry, @object
GHC.Float.RealFracMethods.properFractionFloatInt_entry:
_cpoW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpoX
_cpoY:
	movq $block_cpoT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpoT
_cpoU:
	movq (%rbx),%rax
	jmp *(%rax)
_cpoX:
	movl $GHC.Float.RealFracMethods.properFractionFloatInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionFloatInt_entry, .-GHC.Float.RealFracMethods.properFractionFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.570079258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt_info
.type GHC.Float.RealFracMethods.properFractionFloatInt_info, @object
GHC.Float.RealFracMethods.properFractionFloatInt_info:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.570986254 UTC

.section .text
.align 8
_cpoT:
_cpoT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cpp3
_cpp2:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _cppk
	je _cppl
_cppk:
	movq $GHC.Types.F#_con_info,-48(%r12)
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	subss %xmm1,%xmm0
	movss %xmm0,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cppl:
	addq $-56,%r12
	movl $GHC.Float.RealFracMethods.properFractionFloatInt1_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpp3:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpoT, .-_cpoT


==================== Asm code ====================
2018-03-16 15:55:02.571718849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpoT_info:
	.quad	_cpoT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.576318592 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInt_closure
.type GHC.Float.RealFracMethods.floorFloatInt_closure, @object
GHC.Float.RealFracMethods.floorFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.floorFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:02.577071545 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorFloatInt_entry
.type GHC.Float.RealFracMethods.floorFloatInt_entry, @object
GHC.Float.RealFracMethods.floorFloatInt_entry:
_cppM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cppN
_cppO:
	movq $block_cppJ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cppJ
_cppK:
	movq (%rbx),%rax
	jmp *(%rax)
_cppN:
	movl $GHC.Float.RealFracMethods.floorFloatInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorFloatInt_entry, .-GHC.Float.RealFracMethods.floorFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.577775815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInt_info
.type GHC.Float.RealFracMethods.floorFloatInt_info, @object
GHC.Float.RealFracMethods.floorFloatInt_info:
	.quad	GHC.Float.RealFracMethods.floorFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.578566063 UTC

.section .text
.align 8
_cppJ:
_cppJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cppT
_cppS:
	movss 7(%rbx),%xmm0
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	ucomiss %xmm1,%xmm0
	jp _cpq5
	jb _cpqb
_cpq5:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpqb:
	movq $GHC.Types.I#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cppT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cppJ, .-_cppJ


==================== Asm code ====================
2018-03-16 15:55:02.579256022 UTC

.section .data.rel.ro
.align 8
.align 1
block_cppJ_info:
	.quad	_cppJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.583263711 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInt_closure
.type GHC.Float.RealFracMethods.ceilingFloatInt_closure, @object
GHC.Float.RealFracMethods.ceilingFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:02.584030623 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingFloatInt_entry
.type GHC.Float.RealFracMethods.ceilingFloatInt_entry, @object
GHC.Float.RealFracMethods.ceilingFloatInt_entry:
_cpqy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpqz
_cpqA:
	movq $block_cpqv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpqv
_cpqw:
	movq (%rbx),%rax
	jmp *(%rax)
_cpqz:
	movl $GHC.Float.RealFracMethods.ceilingFloatInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingFloatInt_entry, .-GHC.Float.RealFracMethods.ceilingFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.584695415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInt_info
.type GHC.Float.RealFracMethods.ceilingFloatInt_info, @object
GHC.Float.RealFracMethods.ceilingFloatInt_info:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.585532719 UTC

.section .text
.align 8
_cpqv:
_cpqv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpqF
_cpqE:
	movss 7(%rbx),%xmm0
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	ucomiss %xmm0,%xmm1
	jp _cpqR
	jb _cpqX
_cpqR:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpqX:
	movq $GHC.Types.I#_con_info,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpqF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpqv, .-_cpqv


==================== Asm code ====================
2018-03-16 15:55:02.586211238 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpqv_info:
	.quad	_cpqv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.588812693 UTC

.section .data
.align 8
.align 1
lvl_roLO_closure:
	.quad	lvl_roLO_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.589688774 UTC

.section .text
.align 8
lvl_roLO_entry:
_cprj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cprk
_cprl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cpri
_cprh:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_cprk:
	jmp *-16(%r13)
_cpri:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_roLO_entry, .-lvl_roLO_entry


==================== Asm code ====================
2018-03-16 15:55:02.590363143 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_roLO_info:
	.quad	lvl_roLO_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:55:02.600692208 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_closure
.type GHC.Float.RealFracMethods.properFractionFloatInteger_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.601578382 UTC

.section .text
.align 8
sat_soMn_entry:
_cprP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cprQ
_cprR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cprN_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cprQ:
	jmp *-16(%r13)
	.size sat_soMn_entry, .-sat_soMn_entry


==================== Asm code ====================
2018-03-16 15:55:02.60219607 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soMn_info:
	.quad	sat_soMn_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:55:02.602848731 UTC

.section .text
.align 8
_cprN:
_cprN:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cprN, .-_cprN


==================== Asm code ====================
2018-03-16 15:55:02.603424509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cprN_info:
	.quad	_cprN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.604153241 UTC

.section .text
.align 8
sat_soMx_entry:
_cpse:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpss
_cpst:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cpsj_info,-32(%rbp)
	movq 40(%rbx),%rax
	movq 32(%rbx),%rcx
	shlq %cl,%rax
	movq 16(%rbx),%r14
	subq %rax,%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpss:
	jmp *-16(%r13)
	.size sat_soMx_entry, .-sat_soMx_entry


==================== Asm code ====================
2018-03-16 15:55:02.604797205 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soMx_info:
	.quad	sat_soMx_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:02.605493111 UTC

.section .text
.align 8
_cpsj:
_cpsj:
	movq 8(%rbp),%rax
	movq $block_cpsn_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _cpsj, .-_cpsj


==================== Asm code ====================
2018-03-16 15:55:02.606816901 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpsj_info:
	.quad	_cpsj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.607525917 UTC

.section .text
.align 8
_cpsn:
_cpsn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpsx
_cpsw:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpsx:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _cpsn, .-_cpsn


==================== Asm code ====================
2018-03-16 15:55:02.608154477 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpsn_info:
	.quad	_cpsn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.608846789 UTC

.section .text
.align 8
sat_soMs_entry:
_cpsC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpsD
_cpsE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpsD:
	jmp *-16(%r13)
	.size sat_soMs_entry, .-sat_soMs_entry


==================== Asm code ====================
2018-03-16 15:55:02.609500727 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soMs_info:
	.quad	sat_soMs_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:02.61025329 UTC

.section .text
.align 8
sat_soMG_entry:
_cpsV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpt9
_cpta:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cpt0_info,-32(%rbp)
	movq 40(%rbx),%rax
	movq 32(%rbx),%rcx
	shlq %cl,%rax
	movq 16(%rbx),%r14
	subq %rax,%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpt9:
	jmp *-16(%r13)
	.size sat_soMG_entry, .-sat_soMG_entry


==================== Asm code ====================
2018-03-16 15:55:02.610863113 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soMG_info:
	.quad	sat_soMG_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:02.611481214 UTC

.section .text
.align 8
_cpt0:
_cpt0:
	movq 8(%rbp),%rax
	movq $block_cpt4_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _cpt0, .-_cpt0


==================== Asm code ====================
2018-03-16 15:55:02.612081344 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpt0_info:
	.quad	_cpt0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.612790375 UTC

.section .text
.align 8
_cpt4:
_cpt4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpte
_cptd:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpte:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _cpt4, .-_cpt4


==================== Asm code ====================
2018-03-16 15:55:02.613747257 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpt4_info:
	.quad	_cpt4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.614457386 UTC

.section .text
.align 8
sat_soMB_entry:
_cptj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cptk
_cptl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cptk:
	jmp *-16(%r13)
	.size sat_soMB_entry, .-sat_soMB_entry


==================== Asm code ====================
2018-03-16 15:55:02.615084817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soMB_info:
	.quad	sat_soMB_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:02.615850895 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_entry
.type GHC.Float.RealFracMethods.properFractionFloatInteger_entry, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_entry:
_cptm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cptn
_cpto:
	movq $block_cprx_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cprx
_cpry:
	movq (%rbx),%rax
	jmp *(%rax)
_cptn:
	movl $GHC.Float.RealFracMethods.properFractionFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionFloatInteger_entry, .-GHC.Float.RealFracMethods.properFractionFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.616501934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_info
.type GHC.Float.RealFracMethods.properFractionFloatInteger_info, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SoU1_srt


==================== Asm code ====================
2018-03-16 15:55:02.61717967 UTC

.section .text
.align 8
_cprx:
_cprx:
	movq $block_cprC_info,-8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_decodeFloat_Int#
	.size _cprx, .-_cprx


==================== Asm code ====================
2018-03-16 15:55:02.617824166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cprx_info:
	.quad	_cprx
	.quad	0
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.618444534 UTC

.section .text
.align 8
_cprC:
_cprC:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cprD
	.size _cprC, .-_cprC


==================== Asm code ====================
2018-03-16 15:55:02.618998369 UTC

.section .data.rel.ro
.align 8
.align 1
block_cprC_info:
	.quad	_cprC
	.quad	1
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.620080126 UTC

.section .text
.align 8
_cprD:
_cprD:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cpts
_cptr:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jge _cptv
_cptG:
	movq %rbx,%rcx
	negq %rcx
	cmpq $23,%rcx
	jle _cptC
_cptF:
	movq $(,)_con_info,-88(%r12)
	movq $lvl_roLO_closure,-80(%r12)
	movq 24(%rbp),%rax
	movq %rax,-72(%r12)
	leaq -87(%r12),%rax
	addq $-72,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cptC:
	testq %rax,%rax
	jge _cpty
_cptA:
	movq $sat_soMG_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %rcx,-56(%r12)
	negq %rax
	sarq %cl,%rax
	negq %rax
	movq %rax,-48(%r12)
	movq $sat_soMB_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpty:
	movq $sat_soMx_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %rcx,-56(%r12)
	shrq %cl,%rax
	movq %rax,-48(%r12)
	movq $sat_soMs_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cptv:
	movq $sat_soMn_info,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq $(,)_con_info,-56(%r12)
	leaq -88(%r12),%rax
	movq %rax,-48(%r12)
	movq $GHC.Float.RealFracMethods.properFractionFloatInt2_closure+1,-40(%r12)
	leaq -55(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpts:
	movq $96,904(%r13)
	movq $block_cprD_info,(%rbp)
	jmp stg_gc_noregs
	.size _cprD, .-_cprD


==================== Asm code ====================
2018-03-16 15:55:02.621071234 UTC

.section .data.rel.ro
.align 8
.align 1
block_cprD_info:
	.quad	_cprD
	.quad	195
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.625405641 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateFloatInteger_closure
.type GHC.Float.RealFracMethods.truncateFloatInteger_closure, @object
GHC.Float.RealFracMethods.truncateFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.626224556 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.truncateFloatInteger_entry
.type GHC.Float.RealFracMethods.truncateFloatInteger_entry, @object
GHC.Float.RealFracMethods.truncateFloatInteger_entry:
_cpv0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpv1
_cpv2:
	movq $block_cpuX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpuX
_cpuY:
	movq (%rbx),%rax
	jmp *(%rax)
_cpv1:
	movl $GHC.Float.RealFracMethods.truncateFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.truncateFloatInteger_entry, .-GHC.Float.RealFracMethods.truncateFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.626882692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateFloatInteger_info
.type GHC.Float.RealFracMethods.truncateFloatInteger_info, @object
GHC.Float.RealFracMethods.truncateFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.627545998 UTC

.section .text
.align 8
_cpuX:
_cpuX:
	movq $block_cpv5_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp stg_decodeFloat_Int#
	.size _cpuX, .-_cpuX


==================== Asm code ====================
2018-03-16 15:55:02.628139483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpuX_info:
	.quad	_cpuX
	.quad	0
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.629009504 UTC

.section .text
.align 8
_cpv5:
_cpv5:
	testq %r14,%r14
	jge _cpvg
_cpvA:
	negq %r14
	cmpq $23,%r14
	jle _cpvy
_cpvz:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpvy:
	testq %rbx,%rbx
	jge _cpvv
_cpvw:
	negq %rbx
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	negq %r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpvv:
	movq %r14,%rcx
	shrq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpvg:
	movq $block_cpve_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpv5, .-_cpv5


==================== Asm code ====================
2018-03-16 15:55:02.630195641 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpv5_info:
	.quad	_cpv5
	.quad	0
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.630868551 UTC

.section .text
.align 8
_cpve:
_cpve:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpve, .-_cpve


==================== Asm code ====================
2018-03-16 15:55:02.631474274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpve_info:
	.quad	_cpve
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.63318936 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt2_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt2_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt2_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0


==================== Asm code ====================
2018-03-16 15:55:02.635095692 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt1_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt1_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt3_closure+1
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:02.639731347 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:02.640585966 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_entry
.type GHC.Float.RealFracMethods.properFractionDoubleInt_entry, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_entry:
_cpwd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpwe
_cpwf:
	movq $block_cpwa_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpwa
_cpwb:
	movq (%rbx),%rax
	jmp *(%rax)
_cpwe:
	movl $GHC.Float.RealFracMethods.properFractionDoubleInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionDoubleInt_entry, .-GHC.Float.RealFracMethods.properFractionDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.641287076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_info
.type GHC.Float.RealFracMethods.properFractionDoubleInt_info, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.6421686 UTC

.section .text
.align 8
_cpwa:
_cpwa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cpwk
_cpwj:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _cpwB
	je _cpwC
_cpwB:
	movq $GHC.Types.D#_con_info,-48(%r12)
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	subsd %xmm1,%xmm0
	movsd %xmm0,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpwC:
	addq $-56,%r12
	movl $GHC.Float.RealFracMethods.properFractionDoubleInt1_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpwk:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpwa, .-_cpwa


==================== Asm code ====================
2018-03-16 15:55:02.642901757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpwa_info:
	.quad	_cpwa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.646313659 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInt_closure
.type GHC.Float.RealFracMethods.floorDoubleInt_closure, @object
GHC.Float.RealFracMethods.floorDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.floorDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:02.647102485 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorDoubleInt_entry
.type GHC.Float.RealFracMethods.floorDoubleInt_entry, @object
GHC.Float.RealFracMethods.floorDoubleInt_entry:
_cpx3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpx4
_cpx5:
	movq $block_cpx0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpx0
_cpx1:
	movq (%rbx),%rax
	jmp *(%rax)
_cpx4:
	movl $GHC.Float.RealFracMethods.floorDoubleInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorDoubleInt_entry, .-GHC.Float.RealFracMethods.floorDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.647733641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInt_info
.type GHC.Float.RealFracMethods.floorDoubleInt_info, @object
GHC.Float.RealFracMethods.floorDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.floorDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.64855151 UTC

.section .text
.align 8
_cpx0:
_cpx0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpxa
_cpx9:
	movsd 7(%rbx),%xmm0
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	ucomisd %xmm1,%xmm0
	jp _cpxm
	jb _cpxs
_cpxm:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpxs:
	movq $GHC.Types.I#_con_info,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpxa:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpx0, .-_cpx0


==================== Asm code ====================
2018-03-16 15:55:02.649287632 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpx0_info:
	.quad	_cpx0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.652587284 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_closure
.type GHC.Float.RealFracMethods.ceilingDoubleInt_closure, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:02.653777312 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_entry
.type GHC.Float.RealFracMethods.ceilingDoubleInt_entry, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_entry:
_cpxP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpxQ
_cpxR:
	movq $block_cpxM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpxM
_cpxN:
	movq (%rbx),%rax
	jmp *(%rax)
_cpxQ:
	movl $GHC.Float.RealFracMethods.ceilingDoubleInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingDoubleInt_entry, .-GHC.Float.RealFracMethods.ceilingDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.654450377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_info
.type GHC.Float.RealFracMethods.ceilingDoubleInt_info, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.655301801 UTC

.section .text
.align 8
_cpxM:
_cpxM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpxW
_cpxV:
	movsd 7(%rbx),%xmm0
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	ucomisd %xmm0,%xmm1
	jp _cpy8
	jb _cpye
_cpy8:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpye:
	movq $GHC.Types.I#_con_info,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpxW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpxM, .-_cpxM


==================== Asm code ====================
2018-03-16 15:55:02.655993664 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpxM_info:
	.quad	_cpxM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.659032901 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.double2Int_closure
.type GHC.Float.RealFracMethods.double2Int_closure, @object
GHC.Float.RealFracMethods.double2Int_closure:
	.quad	GHC.Float.RealFracMethods.double2Int_info


==================== Asm code ====================
2018-03-16 15:55:02.659815226 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.double2Int_entry
.type GHC.Float.RealFracMethods.double2Int_entry, @object
GHC.Float.RealFracMethods.double2Int_entry:
_cpyB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpyI
_cpyJ:
	movq $block_cpyy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpyy
_cpyz:
	movq (%rbx),%rax
	jmp *(%rax)
_cpyI:
	movl $GHC.Float.RealFracMethods.double2Int_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.double2Int_entry, .-GHC.Float.RealFracMethods.double2Int_entry


==================== Asm code ====================
2018-03-16 15:55:02.660475013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.double2Int_info
.type GHC.Float.RealFracMethods.double2Int_info, @object
GHC.Float.RealFracMethods.double2Int_info:
	.quad	GHC.Float.RealFracMethods.double2Int_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.661215768 UTC

.section .text
.align 8
_cpyy:
_cpyy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpyM
_cpyL:
	cvttsd2siq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpyM:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpyy, .-_cpyy


==================== Asm code ====================
2018-03-16 15:55:02.661882486 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpyy_info:
	.quad	_cpyy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.664866669 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Double_closure
.type GHC.Float.RealFracMethods.int2Double_closure, @object
GHC.Float.RealFracMethods.int2Double_closure:
	.quad	GHC.Float.RealFracMethods.int2Double_info


==================== Asm code ====================
2018-03-16 15:55:02.665674054 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.int2Double_entry
.type GHC.Float.RealFracMethods.int2Double_entry, @object
GHC.Float.RealFracMethods.int2Double_entry:
_cpz5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpzc
_cpzd:
	movq $block_cpz2_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpz2
_cpz3:
	movq (%rbx),%rax
	jmp *(%rax)
_cpzc:
	movl $GHC.Float.RealFracMethods.int2Double_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.int2Double_entry, .-GHC.Float.RealFracMethods.int2Double_entry


==================== Asm code ====================
2018-03-16 15:55:02.666345778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Double_info
.type GHC.Float.RealFracMethods.int2Double_info, @object
GHC.Float.RealFracMethods.int2Double_info:
	.quad	GHC.Float.RealFracMethods.int2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.667084516 UTC

.section .text
.align 8
_cpz2:
_cpz2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpzg
_cpzf:
	cvtsi2sdq 7(%rbx),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpzg:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpz2, .-_cpz2


==================== Asm code ====================
2018-03-16 15:55:02.667705315 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpz2_info:
	.quad	_cpz2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.671178079 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.float2Int_closure
.type GHC.Float.RealFracMethods.float2Int_closure, @object
GHC.Float.RealFracMethods.float2Int_closure:
	.quad	GHC.Float.RealFracMethods.float2Int_info


==================== Asm code ====================
2018-03-16 15:55:02.671910202 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.float2Int_entry
.type GHC.Float.RealFracMethods.float2Int_entry, @object
GHC.Float.RealFracMethods.float2Int_entry:
_cpzz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpzG
_cpzH:
	movq $block_cpzw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpzw
_cpzx:
	movq (%rbx),%rax
	jmp *(%rax)
_cpzG:
	movl $GHC.Float.RealFracMethods.float2Int_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.float2Int_entry, .-GHC.Float.RealFracMethods.float2Int_entry


==================== Asm code ====================
2018-03-16 15:55:02.67255819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.float2Int_info
.type GHC.Float.RealFracMethods.float2Int_info, @object
GHC.Float.RealFracMethods.float2Int_info:
	.quad	GHC.Float.RealFracMethods.float2Int_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.67394652 UTC

.section .text
.align 8
_cpzw:
_cpzw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpzK
_cpzJ:
	cvttss2siq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpzK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpzw, .-_cpzw


==================== Asm code ====================
2018-03-16 15:55:02.674553294 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpzw_info:
	.quad	_cpzw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.677624688 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Float_closure
.type GHC.Float.RealFracMethods.int2Float_closure, @object
GHC.Float.RealFracMethods.int2Float_closure:
	.quad	GHC.Float.RealFracMethods.int2Float_info


==================== Asm code ====================
2018-03-16 15:55:02.678368466 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.int2Float_entry
.type GHC.Float.RealFracMethods.int2Float_entry, @object
GHC.Float.RealFracMethods.int2Float_entry:
_cpA3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpAa
_cpAb:
	movq $block_cpA0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpA0
_cpA1:
	movq (%rbx),%rax
	jmp *(%rax)
_cpAa:
	movl $GHC.Float.RealFracMethods.int2Float_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.int2Float_entry, .-GHC.Float.RealFracMethods.int2Float_entry


==================== Asm code ====================
2018-03-16 15:55:02.679019853 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Float_info
.type GHC.Float.RealFracMethods.int2Float_info, @object
GHC.Float.RealFracMethods.int2Float_info:
	.quad	GHC.Float.RealFracMethods.int2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.679780057 UTC

.section .text
.align 8
_cpA0:
_cpA0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpAe
_cpAd:
	cvtsi2ssq 7(%rbx),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpAe:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpA0, .-_cpA0


==================== Asm code ====================
2018-03-16 15:55:02.680448658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpA0_info:
	.quad	_cpA0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.682185166 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.RealFracMethods.$trModule4_bytes
.type GHC.Float.RealFracMethods.$trModule4_bytes, @object
GHC.Float.RealFracMethods.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:02.683946679 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule3_closure
.type GHC.Float.RealFracMethods.$trModule3_closure, @object
GHC.Float.RealFracMethods.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.RealFracMethods.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:02.685653859 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.RealFracMethods.$trModule2_bytes
.type GHC.Float.RealFracMethods.$trModule2_bytes, @object
GHC.Float.RealFracMethods.$trModule2_bytes:
	.asciz "GHC.Float.RealFracMethods"


==================== Asm code ====================
2018-03-16 15:55:02.687278921 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule1_closure
.type GHC.Float.RealFracMethods.$trModule1_closure, @object
GHC.Float.RealFracMethods.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.RealFracMethods.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:02.688941853 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule_closure
.type GHC.Float.RealFracMethods.$trModule_closure, @object
GHC.Float.RealFracMethods.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Float.RealFracMethods.$trModule3_closure+1
	.quad	GHC.Float.RealFracMethods.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:02.692239245 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInt_closure
.type GHC.Float.RealFracMethods.roundDoubleInt_closure, @object
GHC.Float.RealFracMethods.roundDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.roundDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:02.693095038 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundDoubleInt_entry
.type GHC.Float.RealFracMethods.roundDoubleInt_entry, @object
GHC.Float.RealFracMethods.roundDoubleInt_entry:
_cpAC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpAL
_cpAM:
	movq $block_cpAz_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpAz
_cpAA:
	movq (%rbx),%rax
	jmp *(%rax)
_cpAL:
	movl $GHC.Float.RealFracMethods.roundDoubleInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundDoubleInt_entry, .-GHC.Float.RealFracMethods.roundDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.693810379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInt_info
.type GHC.Float.RealFracMethods.roundDoubleInt_info, @object
GHC.Float.RealFracMethods.roundDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.roundDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.694599006 UTC

.section .text
.align 8
_cpAz:
_cpAz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpAP
_cpAO:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call rintDouble
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	cvttsd2siq %xmm0,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpAP:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpAz, .-_cpAz


==================== Asm code ====================
2018-03-16 15:55:02.695270242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpAz_info:
	.quad	_cpAz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.699237792 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInteger_closure
.type GHC.Float.RealFracMethods.roundDoubleInteger_closure, @object
GHC.Float.RealFracMethods.roundDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.700574186 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundDoubleInteger_entry
.type GHC.Float.RealFracMethods.roundDoubleInteger_entry, @object
GHC.Float.RealFracMethods.roundDoubleInteger_entry:
_cpB9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpBa
_cpBb:
	movq $block_cpB6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpB6
_cpB7:
	movq (%rbx),%rax
	jmp *(%rax)
_cpBa:
	movl $GHC.Float.RealFracMethods.roundDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundDoubleInteger_entry, .-GHC.Float.RealFracMethods.roundDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.701278178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInteger_info
.type GHC.Float.RealFracMethods.roundDoubleInteger_info, @object
GHC.Float.RealFracMethods.roundDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SoU1_srt+24


==================== Asm code ====================
2018-03-16 15:55:02.701973832 UTC

.section .text
.align 8
_cpB6:
_cpB6:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call rintDouble
	addq $8,%rsp
	movq $block_cpBg_info,(%rbp)
	movsd %xmm0,%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _cpB6, .-_cpB6


==================== Asm code ====================
2018-03-16 15:55:02.702595197 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpB6_info:
	.quad	_cpB6
	.quad	0
	.quad	4294967326
	.quad	SoU1_srt+24


==================== Asm code ====================
2018-03-16 15:55:02.703292157 UTC

.section .text
.align 8
_cpBg:
_cpBg:
	testq %r14,%r14
	jge _cpBp
_cpBt:
	movq $block_cpBs_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_cpBp:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpBg, .-_cpBg


==================== Asm code ====================
2018-03-16 15:55:02.703916057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpBg_info:
	.quad	_cpBg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.704633787 UTC

.section .text
.align 8
_cpBs:
_cpBs:
	movq 8(%rbp),%rcx
	negq %rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpBs, .-_cpBs


==================== Asm code ====================
2018-03-16 15:55:02.705198093 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpBs_info:
	.quad	_cpBs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.709114291 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInteger_closure
.type GHC.Float.RealFracMethods.roundFloatInteger_closure, @object
GHC.Float.RealFracMethods.roundFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.roundFloatInteger_info


==================== Asm code ====================
2018-03-16 15:55:02.710015907 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundFloatInteger_entry
.type GHC.Float.RealFracMethods.roundFloatInteger_entry, @object
GHC.Float.RealFracMethods.roundFloatInteger_entry:
_cpC0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpC1
_cpC2:
	movq $block_cpBX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpBX
_cpBY:
	movq (%rbx),%rax
	jmp *(%rax)
_cpC1:
	movl $GHC.Float.RealFracMethods.roundFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundFloatInteger_entry, .-GHC.Float.RealFracMethods.roundFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.7106831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInteger_info
.type GHC.Float.RealFracMethods.roundFloatInteger_info, @object
GHC.Float.RealFracMethods.roundFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.roundFloatInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.711365214 UTC

.section .text
.align 8
_cpBX:
_cpBX:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call rintFloat
	addq $8,%rsp
	movq $block_cpC7_info,(%rbp)
	movss %xmm0,%xmm1
	jmp stg_decodeFloat_Int#
	.size _cpBX, .-_cpBX


==================== Asm code ====================
2018-03-16 15:55:02.711945785 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpBX_info:
	.quad	_cpBX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.712673623 UTC

.section .text
.align 8
_cpC7:
_cpC7:
	testq %r14,%r14
	jge _cpCi
_cpCn:
	movq %r14,%rcx
	negq %rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpCi:
	movq $block_cpCg_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpC7, .-_cpC7


==================== Asm code ====================
2018-03-16 15:55:02.713337664 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpC7_info:
	.quad	_cpC7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.713930036 UTC

.section .text
.align 8
_cpCg:
_cpCg:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpCg, .-_cpCg


==================== Asm code ====================
2018-03-16 15:55:02.71448714 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpCg_info:
	.quad	_cpCg
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.717758141 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInt_closure
.type GHC.Float.RealFracMethods.roundFloatInt_closure, @object
GHC.Float.RealFracMethods.roundFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.roundFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:02.718509854 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundFloatInt_entry
.type GHC.Float.RealFracMethods.roundFloatInt_entry, @object
GHC.Float.RealFracMethods.roundFloatInt_entry:
_cpCR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpD0
_cpD1:
	movq $block_cpCO_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpCO
_cpCP:
	movq (%rbx),%rax
	jmp *(%rax)
_cpD0:
	movl $GHC.Float.RealFracMethods.roundFloatInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundFloatInt_entry, .-GHC.Float.RealFracMethods.roundFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:02.719142789 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInt_info
.type GHC.Float.RealFracMethods.roundFloatInt_info, @object
GHC.Float.RealFracMethods.roundFloatInt_info:
	.quad	GHC.Float.RealFracMethods.roundFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:02.719944101 UTC

.section .text
.align 8
_cpCO:
_cpCO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpD4
_cpD3:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call rintFloat
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	cvttss2siq %xmm0,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpD4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cpCO, .-_cpCO


==================== Asm code ====================
2018-03-16 15:55:02.720604835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpCO_info:
	.quad	_cpCO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.732910278 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.733796776 UTC

.section .text
.align 8
sat_soOo_entry:
_cpDB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpDC
_cpDD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_cpDC:
	jmp *-16(%r13)
	.size sat_soOo_entry, .-sat_soOo_entry


==================== Asm code ====================
2018-03-16 15:55:02.734393705 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soOo_info:
	.quad	sat_soOo_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:55:02.735110069 UTC

.section .text
.align 8
sat_soOz_entry:
_cpE2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpEg
_cpEh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cpE7_info,-32(%rbp)
	movq 40(%rbx),%rax
	movq 24(%rbx),%rcx
	shlq %cl,%rax
	movq 32(%rbx),%r14
	subq %rax,%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpEg:
	jmp *-16(%r13)
	.size sat_soOz_entry, .-sat_soOz_entry


==================== Asm code ====================
2018-03-16 15:55:02.735776996 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soOz_info:
	.quad	sat_soOz_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:02.736468475 UTC

.section .text
.align 8
_cpE7:
_cpE7:
	movq 8(%rbp),%rax
	movq $block_cpEb_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _cpE7, .-_cpE7


==================== Asm code ====================
2018-03-16 15:55:02.737045849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpE7_info:
	.quad	_cpE7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.738313845 UTC

.section .text
.align 8
_cpEb:
_cpEb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpEl
_cpEk:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpEl:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _cpEb, .-_cpEb


==================== Asm code ====================
2018-03-16 15:55:02.738956877 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpEb_info:
	.quad	_cpEb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.739660363 UTC

.section .text
.align 8
sat_soOu_entry:
_cpEq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpEr
_cpEs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpEr:
	jmp *-16(%r13)
	.size sat_soOu_entry, .-sat_soOu_entry


==================== Asm code ====================
2018-03-16 15:55:02.740265433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soOu_info:
	.quad	sat_soOu_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:02.74103856 UTC

.section .text
.align 8
sat_soOK_entry:
_cpEM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpF3
_cpF4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cpEU_info,-32(%rbp)
	movq 40(%rbx),%rax
	movq 24(%rbx),%rcx
	shlq %cl,%rax
	movq 32(%rbx),%r14
	subq %rax,%r14
	negq %r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpF3:
	jmp *-16(%r13)
	.size sat_soOK_entry, .-sat_soOK_entry


==================== Asm code ====================
2018-03-16 15:55:02.741713159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soOK_info:
	.quad	sat_soOK_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:02.742395506 UTC

.section .text
.align 8
_cpEU:
_cpEU:
	movq 8(%rbp),%rax
	movq $block_cpEY_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _cpEU, .-_cpEU


==================== Asm code ====================
2018-03-16 15:55:02.742971433 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpEU_info:
	.quad	_cpEU
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.743676731 UTC

.section .text
.align 8
_cpEY:
_cpEY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpF8
_cpF7:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpF8:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _cpEY, .-_cpEY


==================== Asm code ====================
2018-03-16 15:55:02.744316049 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpEY_info:
	.quad	_cpEY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.744985137 UTC

.section .text
.align 8
sat_soOE_entry:
_cpFf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpFg
_cpFh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	negq %r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpFg:
	jmp *-16(%r13)
	.size sat_soOE_entry, .-sat_soOE_entry


==================== Asm code ====================
2018-03-16 15:55:02.746860161 UTC

.section .data.rel.ro
.align 8
.align 1
sat_soOE_info:
	.quad	sat_soOE_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:02.74759436 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_entry
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_entry, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_entry:
_cpFi:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpFj
_cpFk:
	movq $block_cpDl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpDl
_cpDm:
	movq (%rbx),%rax
	jmp *(%rax)
_cpFj:
	movl $GHC.Float.RealFracMethods.properFractionDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionDoubleInteger_entry, .-GHC.Float.RealFracMethods.properFractionDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.748234005 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_info
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_info, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_entry
	.quad	0
	.quad	90194313230
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.748935984 UTC

.section .text
.align 8
_cpDl:
_cpDl:
	movq $block_cpDq_info,-8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _cpDl, .-_cpDl


==================== Asm code ====================
2018-03-16 15:55:02.749546988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpDl_info:
	.quad	_cpDl
	.quad	0
	.quad	21474836510
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.750174409 UTC

.section .text
.align 8
_cpDq:
_cpDq:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cpDr
	.size _cpDq, .-_cpDq


==================== Asm code ====================
2018-03-16 15:55:02.750747526 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpDq_info:
	.quad	_cpDq
	.quad	1
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.75167861 UTC

.section .text
.align 8
_cpDr:
_cpDr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cpFo
_cpFn:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jge _cpFr
_cpFL:
	negq %rbx
	cmpq $52,%rbx
	jle _cpFt
_cpFK:
	movq $(,)_con_info,-48(%r12)
	movq $lvl_roLO_closure,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -47(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpFt:
	addq $-56,%r12
	movq $block_cpDL_info,(%rbp)
	movl $lvl_roLO_closure,%esi
	movq %rax,%r14
	movq %rbx,24(%rbp)
	jmp GHC.Integer.Type.ltInteger#_entry
_cpFr:
	movq $sat_soOo_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq $GHC.Float.RealFracMethods.properFractionDoubleInt2_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpFo:
	movq $56,904(%r13)
	movq $block_cpDr_info,(%rbp)
	jmp stg_gc_noregs
	.size _cpDr, .-_cpDr


==================== Asm code ====================
2018-03-16 15:55:02.752465073 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpDr_info:
	.quad	_cpDr
	.quad	67
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.753164417 UTC

.section .text
.align 8
_cpDL:
_cpDL:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _cpFD
_cpFx:
	movq $block_cpDP_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_cpFD:
	movq $block_cpEv_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpDL, .-_cpDL


==================== Asm code ====================
2018-03-16 15:55:02.753791846 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpDL_info:
	.quad	_cpDL
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.754417418 UTC

.section .text
.align 8
_cpEv:
_cpEv:
	movq $block_cpEz_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _cpEv, .-_cpEv


==================== Asm code ====================
2018-03-16 15:55:02.75501956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpEv_info:
	.quad	_cpEv
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.755794129 UTC

.section .text
.align 8
_cpEz:
_cpEz:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cpFH
_cpFG:
	movq $sat_soOK_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,%rcx
	sarq %cl,%rbx
	movq %rbx,-48(%r12)
	movq $sat_soOE_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpFH:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cpEz, .-_cpEz


==================== Asm code ====================
2018-03-16 15:55:02.756527479 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpEz_info:
	.quad	_cpEz
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.757363777 UTC

.section .text
.align 8
_cpDP:
_cpDP:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cpFA
_cpFz:
	movq $sat_soOz_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,%rcx
	sarq %cl,%rbx
	movq %rbx,-48(%r12)
	movq $sat_soOu_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpFA:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cpDP, .-_cpDP


==================== Asm code ====================
2018-03-16 15:55:02.758066033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpDP_info:
	.quad	_cpDP
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.763332769 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_closure
.type GHC.Float.RealFracMethods.truncateDoubleInteger_closure, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.764969038 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_entry
.type GHC.Float.RealFracMethods.truncateDoubleInteger_entry, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_entry:
_cpHf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cpHg
_cpHh:
	movq $block_cpHc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpHc
_cpHd:
	movq (%rbx),%rax
	jmp *(%rax)
_cpHg:
	movl $GHC.Float.RealFracMethods.truncateDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.truncateDoubleInteger_entry, .-GHC.Float.RealFracMethods.truncateDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.765747504 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_info
.type GHC.Float.RealFracMethods.truncateDoubleInteger_info, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_entry
	.quad	0
	.quad	158913789966
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.76653798 UTC

.section .text
.align 8
_cpHc:
_cpHc:
	movq $block_cpHk_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _cpHc, .-_cpHc


==================== Asm code ====================
2018-03-16 15:55:02.767258839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHc_info:
	.quad	_cpHc
	.quad	0
	.quad	21474836510
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.768082777 UTC

.section .text
.align 8
_cpHk:
_cpHk:
	testq %r14,%r14
	jge _cpHt
_cpI5:
	negq %r14
	cmpq $52,%r14
	jle _cpHE
_cpI4:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpHE:
	movq $block_cpHC_info,-16(%rbp)
	movl $lvl_roLO_closure,%esi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_cpHt:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpHk, .-_cpHk


==================== Asm code ====================
2018-03-16 15:55:02.76877357 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHk_info:
	.quad	_cpHk
	.quad	0
	.quad	4294967326
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.769536786 UTC

.section .text
.align 8
_cpHC:
_cpHC:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _cpHY
_cpHL:
	movq $block_cpHI_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_cpHY:
	movq $block_cpHS_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpHC, .-_cpHC


==================== Asm code ====================
2018-03-16 15:55:02.77015533 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHC_info:
	.quad	_cpHC
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.770777105 UTC

.section .text
.align 8
_cpHS:
_cpHS:
	movq $block_cpHW_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _cpHS, .-_cpHS


==================== Asm code ====================
2018-03-16 15:55:02.771344501 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHS_info:
	.quad	_cpHS
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.771994463 UTC

.section .text
.align 8
_cpHW:
_cpHW:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	negq %r14
	addq $24,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpHW, .-_cpHW


==================== Asm code ====================
2018-03-16 15:55:02.772600061 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHW_info:
	.quad	_cpHW
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.773330994 UTC

.section .text
.align 8
_cpHI:
_cpHI:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpHI, .-_cpHI


==================== Asm code ====================
2018-03-16 15:55:02.773900818 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpHI_info:
	.quad	_cpHI
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.775561349 UTC

.section .data
.align 8
.align 1
sat_soP1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:55:02.777365429 UTC

.section .data
.align 8
.align 1
sat_soP2_closure:
	.quad	:_con_info
	.quad	sat_soP1_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.780058947 UTC

.section .data
.align 8
.align 1
lvl1_roLP_closure:
	.quad	lvl1_roLP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.780974751 UTC

.section .text
.align 8
lvl1_roLP_entry:
_cpIL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpIM
_cpIN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cpIK
_cpIJ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_soP2_closure+2,%esi
	movl $GHC.Types.False_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_cpIM:
	jmp *-16(%r13)
_cpIK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_roLP_entry, .-lvl1_roLP_entry


==================== Asm code ====================
2018-03-16 15:55:02.781720813 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_roLP_info:
	.quad	lvl1_roLP_entry
	.quad	0
	.quad	4294967317
	.quad	SoU1_srt+56


==================== Asm code ====================
2018-03-16 15:55:02.785832772 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInteger_closure
.type GHC.Float.RealFracMethods.floorFloatInteger_closure, @object
GHC.Float.RealFracMethods.floorFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.786651228 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorFloatInteger_entry
.type GHC.Float.RealFracMethods.floorFloatInteger_entry, @object
GHC.Float.RealFracMethods.floorFloatInteger_entry:
_cpJ2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpJ3
_cpJ4:
	movq $block_cpIZ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpIZ
_cpJ0:
	movq (%rbx),%rax
	jmp *(%rax)
_cpJ3:
	movl $GHC.Float.RealFracMethods.floorFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorFloatInteger_entry, .-GHC.Float.RealFracMethods.floorFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.787285888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInteger_info
.type GHC.Float.RealFracMethods.floorFloatInteger_info, @object
GHC.Float.RealFracMethods.floorFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_entry
	.quad	0
	.quad	1653562408974
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.787857015 UTC

.section .text
.align 8
_cpIZ:
_cpIZ:
	movq $block_cpJ7_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp stg_decodeFloat_Int#
	.size _cpIZ, .-_cpIZ


==================== Asm code ====================
2018-03-16 15:55:02.78840347 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpIZ_info:
	.quad	_cpIZ
	.quad	0
	.quad	1103806595102
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.78922836 UTC

.section .text
.align 8
_cpJ7:
_cpJ7:
	testq %r14,%r14
	jge _cpJi
_cpJD:
	negq %r14
	cmpq $23,%r14
	jle _cpJu
_cpJC:
	testq %rbx,%rbx
	jge _cpJA
_cpJB:
	movl $lvl1_roLP_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpJA:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpJu:
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cpJi:
	movq $block_cpJg_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpJ7, .-_cpJ7


==================== Asm code ====================
2018-03-16 15:55:02.789977112 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpJ7_info:
	.quad	_cpJ7
	.quad	0
	.quad	1103806595102
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.790609067 UTC

.section .text
.align 8
_cpJg:
_cpJg:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpJg, .-_cpJg


==================== Asm code ====================
2018-03-16 15:55:02.79119519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpJg_info:
	.quad	_cpJg
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.792926617 UTC

.section .data
.align 8
.align 1
sat_soPf_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:55:02.795329225 UTC

.section .data
.align 8
.align 1
sat_soPg_closure:
	.quad	:_con_info
	.quad	sat_soPf_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.798425736 UTC

.section .data
.align 8
.align 1
lvl2_roLQ_closure:
	.quad	lvl2_roLQ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.79934598 UTC

.section .text
.align 8
lvl2_roLQ_entry:
_cpK6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpK7
_cpK8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cpK5
_cpK4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_soPg_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_cpK7:
	jmp *-16(%r13)
_cpK5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_roLQ_entry, .-lvl2_roLQ_entry


==================== Asm code ====================
2018-03-16 15:55:02.799999509 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_roLQ_info:
	.quad	lvl2_roLQ_entry
	.quad	0
	.quad	4294967317
	.quad	SoU1_srt+80


==================== Asm code ====================
2018-03-16 15:55:02.80461297 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_closure
.type GHC.Float.RealFracMethods.ceilingFloatInteger_closure, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.805472807 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_entry
.type GHC.Float.RealFracMethods.ceilingFloatInteger_entry, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_entry:
_cpKn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpKo
_cpKp:
	movq $block_cpKk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpKk
_cpKl:
	movq (%rbx),%rax
	jmp *(%rax)
_cpKo:
	movl $GHC.Float.RealFracMethods.ceilingFloatInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingFloatInteger_entry, .-GHC.Float.RealFracMethods.ceilingFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.806163134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_info
.type GHC.Float.RealFracMethods.ceilingFloatInteger_info, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_entry
	.quad	0
	.quad	13198434500622
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.806863377 UTC

.section .text
.align 8
_cpKk:
_cpKk:
	movq $block_cpKw_info,(%rbp)
	movss 7(%rbx),%xmm1
	movss _npLn(%rip),%xmm0
	xorps %xmm0,%xmm1
	jmp stg_decodeFloat_Int#
	.size _cpKk, .-_cpKk
.section .rodata
.align 8
.align 4
_npLn:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:55:02.807481437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpKk_info:
	.quad	_cpKk
	.quad	0
	.quad	8800387989534
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.80832744 UTC

.section .text
.align 8
_cpKw:
_cpKw:
	testq %r14,%r14
	jge _cpKK
_cpLe:
	negq %r14
	cmpq $23,%r14
	jle _cpL2
_cpLd:
	testq %rbx,%rbx
	jge _cpLb
_cpLc:
	movl $lvl2_roLQ_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpLb:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpL2:
	movq $block_cpL0_info,(%rbp)
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	jmp GHC.Integer.Type.smallInteger_entry
_cpKK:
	movq $block_cpKE_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpKw, .-_cpKw


==================== Asm code ====================
2018-03-16 15:55:02.809031319 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpKw_info:
	.quad	_cpKw
	.quad	0
	.quad	8800387989534
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.809752498 UTC

.section .text
.align 8
_cpKE:
_cpKE:
	movq 8(%rbp),%rax
	movq $block_cpKI_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpKE, .-_cpKE


==================== Asm code ====================
2018-03-16 15:55:02.810329527 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpKE_info:
	.quad	_cpKE
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.810928046 UTC

.section .text
.align 8
_cpKI:
_cpKI:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpKI, .-_cpKI


==================== Asm code ====================
2018-03-16 15:55:02.811508585 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpKI_info:
	.quad	_cpKI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.812118106 UTC

.section .text
.align 8
_cpL0:
_cpL0:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpL0, .-_cpL0


==================== Asm code ====================
2018-03-16 15:55:02.812677518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpL0_info:
	.quad	_cpL0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.817284068 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInteger_closure
.type GHC.Float.RealFracMethods.floorDoubleInteger_closure, @object
GHC.Float.RealFracMethods.floorDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.818090254 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorDoubleInteger_entry
.type GHC.Float.RealFracMethods.floorDoubleInteger_entry, @object
GHC.Float.RealFracMethods.floorDoubleInteger_entry:
_cpLN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpLO
_cpLP:
	movq $block_cpLK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpLK
_cpLL:
	movq (%rbx),%rax
	jmp *(%rax)
_cpLO:
	movl $GHC.Float.RealFracMethods.floorDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorDoubleInteger_entry, .-GHC.Float.RealFracMethods.floorDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.818765853 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInteger_info
.type GHC.Float.RealFracMethods.floorDoubleInteger_info, @object
GHC.Float.RealFracMethods.floorDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_entry
	.quad	0
	.quad	18713172508686
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.81937564 UTC

.section .text
.align 8
_cpLK:
_cpLK:
	movq $block_cpLS_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _cpLK, .-_cpLK


==================== Asm code ====================
2018-03-16 15:55:02.8199352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpLK_info:
	.quad	_cpLK
	.quad	0
	.quad	1120986464286
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.820675087 UTC

.section .text
.align 8
_cpLS:
_cpLS:
	testq %r14,%r14
	jge _cpM1
_cpMu:
	negq %r14
	cmpq $52,%r14
	jle _cpMc
_cpMj:
	movq $block_cpMi_info,(%rbp)
	movl $lvl_roLO_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_cpMc:
	movq $block_cpMa_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_cpM1:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpLS, .-_cpLS


==================== Asm code ====================
2018-03-16 15:55:02.821581014 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpLS_info:
	.quad	_cpLS
	.quad	0
	.quad	1103806595102
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.822209092 UTC

.section .text
.align 8
_cpMa:
_cpMa:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpMa, .-_cpMa


==================== Asm code ====================
2018-03-16 15:55:02.822770095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpMa_info:
	.quad	_cpMa
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.823487455 UTC

.section .text
.align 8
_cpMi:
_cpMi:
	cmpq $1,%rbx
	je _cpMt
_cpMp:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpMt:
	movl $lvl1_roLP_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cpMi, .-_cpMi


==================== Asm code ====================
2018-03-16 15:55:02.824100024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpMi_info:
	.quad	_cpMi
	.quad	0
	.quad	1103806595102
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.829809095 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_closure
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_closure, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:02.830640694 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_entry
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_entry, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_entry:
_cpMZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpN0
_cpN1:
	movq $block_cpMW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpMW
_cpMX:
	movq (%rbx),%rax
	jmp *(%rax)
_cpN0:
	movl $GHC.Float.RealFracMethods.ceilingDoubleInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingDoubleInteger_entry, .-GHC.Float.RealFracMethods.ceilingDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:02.831288091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_info
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_info, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_entry
	.quad	0
	.quad	44001939947534
	.quad	4294967301
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.83198362 UTC

.section .text
.align 8
_cpMW:
_cpMW:
	movq $block_cpN8_info,(%rbp)
	movsd 7(%rbx),%xmm1
	movsd _npO5(%rip),%xmm0
	xorpd %xmm0,%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _cpMW, .-_cpMW
.section .rodata
.align 8
.align 8
_npO5:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:55:02.832564155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpMW_info:
	.quad	_cpMW
	.quad	0
	.quad	8817567858718
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.833322555 UTC

.section .text
.align 8
_cpN8:
_cpN8:
	testq %r14,%r14
	jge _cpNi
_cpNW:
	negq %r14
	cmpq $52,%r14
	jle _cpND
_cpNL:
	movq $block_cpNK_info,(%rbp)
	movl $lvl_roLO_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_cpND:
	movq $block_cpNu_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_cpNi:
	movq $block_cpNg_info,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _cpN8, .-_cpN8


==================== Asm code ====================
2018-03-16 15:55:02.833980477 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpN8_info:
	.quad	_cpN8
	.quad	0
	.quad	8800387989534
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.834598625 UTC

.section .text
.align 8
_cpNg:
_cpNg:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpNg, .-_cpNg


==================== Asm code ====================
2018-03-16 15:55:02.835131896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpNg_info:
	.quad	_cpNg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.83578135 UTC

.section .text
.align 8
_cpNu:
_cpNu:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq $block_cpNB_info,8(%rbp)
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cpNu, .-_cpNu


==================== Asm code ====================
2018-03-16 15:55:02.836325792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpNu_info:
	.quad	_cpNu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.836886099 UTC

.section .text
.align 8
_cpNB:
_cpNB:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _cpNB, .-_cpNB


==================== Asm code ====================
2018-03-16 15:55:02.837504711 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpNB_info:
	.quad	_cpNB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:02.838217186 UTC

.section .text
.align 8
_cpNK:
_cpNK:
	cmpq $1,%rbx
	je _cpNV
_cpNR:
	movl $lvl_roLO_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpNV:
	movl $lvl2_roLQ_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cpNK, .-_cpNK


==================== Asm code ====================
2018-03-16 15:55:02.838827329 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpNK_info:
	.quad	_cpNK
	.quad	0
	.quad	8800387989534
	.quad	SoU1_srt+8


==================== Asm code ====================
2018-03-16 15:55:02.840651324 UTC

.section .data.rel.ro
.align 8
.align 1
SoU1_srt:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_closure
	.quad	lvl_roLO_closure
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_closure
	.quad	sat_soP2_closure
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_closure
	.quad	lvl1_roLP_closure
	.quad	sat_soPg_closure
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_closure
	.quad	lvl2_roLQ_closure
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_closure


==================== Asm code ====================
2018-03-16 15:55:03.627369931 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt3_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt3_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.629160251 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt2_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt2_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt2_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0


==================== Asm code ====================
2018-03-16 15:55:03.631056303 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt1_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt1_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt3_closure+1
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:03.634715885 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt_closure
.type GHC.Float.RealFracMethods.properFractionFloatInt_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:03.635562894 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionFloatInt_entry
.type GHC.Float.RealFracMethods.properFractionFloatInt_entry, @object
GHC.Float.RealFracMethods.properFractionFloatInt_entry:
_cpSH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpSI
_cpSJ:
	leaq block_cpSE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpSE
_cpSF:
	movq (%rbx),%rax
	jmp *(%rax)
_cpSI:
	leaq GHC.Float.RealFracMethods.properFractionFloatInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionFloatInt_entry, .-GHC.Float.RealFracMethods.properFractionFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.636328388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInt_info
.type GHC.Float.RealFracMethods.properFractionFloatInt_info, @object
GHC.Float.RealFracMethods.properFractionFloatInt_info:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.637150454 UTC

.section .text
.align 8
_cpSE:
_cpSE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cpSO
_cpSN:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _cpT5
	je _cpT6
_cpT5:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	subss %xmm1,%xmm0
	movss %xmm0,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpT6:
	addq $-56,%r12
	leaq GHC.Float.RealFracMethods.properFractionFloatInt1_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpSO:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cpSE, .-_cpSE


==================== Asm code ====================
2018-03-16 15:55:03.63796279 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpSE_info:
	.quad	_cpSE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.641312887 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInt_closure
.type GHC.Float.RealFracMethods.floorFloatInt_closure, @object
GHC.Float.RealFracMethods.floorFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.floorFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:03.642105461 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorFloatInt_entry
.type GHC.Float.RealFracMethods.floorFloatInt_entry, @object
GHC.Float.RealFracMethods.floorFloatInt_entry:
_cpTB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpTC
_cpTD:
	leaq block_cpTy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpTy
_cpTz:
	movq (%rbx),%rax
	jmp *(%rax)
_cpTC:
	leaq GHC.Float.RealFracMethods.floorFloatInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorFloatInt_entry, .-GHC.Float.RealFracMethods.floorFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.642687887 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInt_info
.type GHC.Float.RealFracMethods.floorFloatInt_info, @object
GHC.Float.RealFracMethods.floorFloatInt_info:
	.quad	GHC.Float.RealFracMethods.floorFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.643649496 UTC

.section .text
.align 8
_cpTy:
_cpTy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpTI
_cpTH:
	movss 7(%rbx),%xmm0
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	ucomiss %xmm1,%xmm0
	jp _cpTU
	jb _cpU0
_cpTU:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpU0:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpTI:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cpTy, .-_cpTy


==================== Asm code ====================
2018-03-16 15:55:03.644271352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpTy_info:
	.quad	_cpTy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.647490792 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInt_closure
.type GHC.Float.RealFracMethods.ceilingFloatInt_closure, @object
GHC.Float.RealFracMethods.ceilingFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:03.648290204 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingFloatInt_entry
.type GHC.Float.RealFracMethods.ceilingFloatInt_entry, @object
GHC.Float.RealFracMethods.ceilingFloatInt_entry:
_cpUq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cpUr
_cpUs:
	leaq block_cpUn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpUn
_cpUo:
	movq (%rbx),%rax
	jmp *(%rax)
_cpUr:
	leaq GHC.Float.RealFracMethods.ceilingFloatInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingFloatInt_entry, .-GHC.Float.RealFracMethods.ceilingFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.648930749 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInt_info
.type GHC.Float.RealFracMethods.ceilingFloatInt_info, @object
GHC.Float.RealFracMethods.ceilingFloatInt_info:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.650212518 UTC

.section .text
.align 8
_cpUn:
_cpUn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpUx
_cpUw:
	movss 7(%rbx),%xmm0
	cvttss2siq %xmm0,%rax
	cvtsi2ssq %rax,%xmm1
	ucomiss %xmm0,%xmm1
	jp _cpUJ
	jb _cpUP
_cpUJ:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpUP:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpUx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cpUn, .-_cpUn


==================== Asm code ====================
2018-03-16 15:55:03.651021627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpUn_info:
	.quad	_cpUn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.653633374 UTC

.section .data
.align 8
.align 1
lvl_roLO_closure:
	.quad	lvl_roLO_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.65443853 UTC

.section .text
.align 8
lvl_roLO_entry:
_cpVe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpVf
_cpVg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cpVd
_cpVc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_cpVf:
	jmp *-16(%r13)
_cpVd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl_roLO_entry, .-lvl_roLO_entry


==================== Asm code ====================
2018-03-16 15:55:03.655119323 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_roLO_info:
	.quad	lvl_roLO_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:55:03.665070423 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_closure
.type GHC.Float.RealFracMethods.properFractionFloatInteger_closure, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.665881981 UTC

.section .text
.align 8
sat_spOX_entry:
_cpVN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpVO
_cpVP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cpVL_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpVO:
	jmp *-16(%r13)
	.size sat_spOX_entry, .-sat_spOX_entry


==================== Asm code ====================
2018-03-16 15:55:03.666514603 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spOX_info:
	.quad	sat_spOX_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:55:03.667086786 UTC

.section .text
.align 8
_cpVL:
_cpVL:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cpVL, .-_cpVL


==================== Asm code ====================
2018-03-16 15:55:03.667736737 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpVL_info:
	.quad	_cpVL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.668425675 UTC

.section .text
.align 8
sat_spP7_entry:
_cpWc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpWq
_cpWr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cpWh_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq 32(%rbx),%rcx
	shlq %cl,%rax
	movq 16(%rbx),%r14
	subq %rax,%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpWq:
	jmp *-16(%r13)
	.size sat_spP7_entry, .-sat_spP7_entry


==================== Asm code ====================
2018-03-16 15:55:03.66901132 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spP7_info:
	.quad	sat_spP7_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:03.669819901 UTC

.section .text
.align 8
_cpWh:
_cpWh:
	movq 8(%rbp),%rax
	leaq block_cpWl_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _cpWh, .-_cpWh


==================== Asm code ====================
2018-03-16 15:55:03.670379544 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpWh_info:
	.quad	_cpWh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.671009678 UTC

.section .text
.align 8
_cpWl:
_cpWl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpWv
_cpWu:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpWv:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _cpWl, .-_cpWl


==================== Asm code ====================
2018-03-16 15:55:03.671603747 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpWl_info:
	.quad	_cpWl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.672412753 UTC

.section .text
.align 8
sat_spP2_entry:
_cpWA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpWB
_cpWC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpWB:
	jmp *-16(%r13)
	.size sat_spP2_entry, .-sat_spP2_entry


==================== Asm code ====================
2018-03-16 15:55:03.67298494 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spP2_info:
	.quad	sat_spP2_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:03.6739457 UTC

.section .text
.align 8
sat_spPg_entry:
_cpWT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpX7
_cpX8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cpWY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq 32(%rbx),%rcx
	shlq %cl,%rax
	movq 16(%rbx),%r14
	subq %rax,%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpX7:
	jmp *-16(%r13)
	.size sat_spPg_entry, .-sat_spPg_entry


==================== Asm code ====================
2018-03-16 15:55:03.674703273 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spPg_info:
	.quad	sat_spPg_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:03.675294091 UTC

.section .text
.align 8
_cpWY:
_cpWY:
	movq 8(%rbp),%rax
	leaq block_cpX2_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _cpWY, .-_cpWY


==================== Asm code ====================
2018-03-16 15:55:03.675845476 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpWY_info:
	.quad	_cpWY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.676496097 UTC

.section .text
.align 8
_cpX2:
_cpX2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cpXc
_cpXb:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpXc:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _cpX2, .-_cpX2


==================== Asm code ====================
2018-03-16 15:55:03.677177304 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpX2_info:
	.quad	_cpX2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.677854554 UTC

.section .text
.align 8
sat_spPb_entry:
_cpXh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpXi
_cpXj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpXi:
	jmp *-16(%r13)
	.size sat_spPb_entry, .-sat_spPb_entry


==================== Asm code ====================
2018-03-16 15:55:03.678427469 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spPb_info:
	.quad	sat_spPb_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:03.679236235 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_entry
.type GHC.Float.RealFracMethods.properFractionFloatInteger_entry, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_entry:
_cpXk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cpXl
_cpXm:
	leaq block_cpVv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpVv
_cpVw:
	movq (%rbx),%rax
	jmp *(%rax)
_cpXl:
	leaq GHC.Float.RealFracMethods.properFractionFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionFloatInteger_entry, .-GHC.Float.RealFracMethods.properFractionFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.679826232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionFloatInteger_info
.type GHC.Float.RealFracMethods.properFractionFloatInteger_info, @object
GHC.Float.RealFracMethods.properFractionFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SpXI_srt


==================== Asm code ====================
2018-03-16 15:55:03.680443329 UTC

.section .text
.align 8
_cpVv:
_cpVv:
	leaq block_cpVA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _cpVv, .-_cpVv


==================== Asm code ====================
2018-03-16 15:55:03.68097458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpVv_info:
	.quad	_cpVv
	.quad	0
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.681666201 UTC

.section .text
.align 8
_cpVA:
_cpVA:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cpVB
	.size _cpVA, .-_cpVA


==================== Asm code ====================
2018-03-16 15:55:03.682198574 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpVA_info:
	.quad	_cpVA
	.quad	1
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.683315617 UTC

.section .text
.align 8
_cpVB:
_cpVB:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cpXq
_cpXp:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jge _cpXt
_cpXE:
	movq %rbx,%rcx
	negq %rcx
	cmpq $23,%rcx
	jle _cpXA
_cpXD:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-88(%r12)
	leaq lvl_roLO_closure(%rip),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rax
	movq %rax,-72(%r12)
	leaq -87(%r12),%rax
	addq $-72,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpXA:
	testq %rax,%rax
	jge _cpXw
_cpXy:
	leaq sat_spPg_info(%rip),%rdx
	movq %rdx,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %rcx,-56(%r12)
	negq %rax
	sarq %cl,%rax
	negq %rax
	movq %rax,-48(%r12)
	leaq sat_spPb_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpXw:
	leaq sat_spP7_info(%rip),%rdx
	movq %rdx,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq %rcx,-56(%r12)
	shrq %cl,%rax
	movq %rax,-48(%r12)
	leaq sat_spP2_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpXt:
	leaq sat_spOX_info(%rip),%rcx
	movq %rcx,-88(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -88(%r12),%rax
	movq %rax,-48(%r12)
	leaq GHC.Float.RealFracMethods.properFractionFloatInt2_closure+1(%rip),%rax
	movq %rax,-40(%r12)
	leaq -55(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cpXq:
	movq $96,904(%r13)
	leaq block_cpVB_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cpVB, .-_cpVB


==================== Asm code ====================
2018-03-16 15:55:03.684482406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpVB_info:
	.quad	_cpVB
	.quad	195
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.688692615 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateFloatInteger_closure
.type GHC.Float.RealFracMethods.truncateFloatInteger_closure, @object
GHC.Float.RealFracMethods.truncateFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.689457079 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.truncateFloatInteger_entry
.type GHC.Float.RealFracMethods.truncateFloatInteger_entry, @object
GHC.Float.RealFracMethods.truncateFloatInteger_entry:
_cpZp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cpZq
_cpZr:
	leaq block_cpZm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cpZm
_cpZn:
	movq (%rbx),%rax
	jmp *(%rax)
_cpZq:
	leaq GHC.Float.RealFracMethods.truncateFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.truncateFloatInteger_entry, .-GHC.Float.RealFracMethods.truncateFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.690086141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateFloatInteger_info
.type GHC.Float.RealFracMethods.truncateFloatInteger_info, @object
GHC.Float.RealFracMethods.truncateFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.690884107 UTC

.section .text
.align 8
_cpZm:
_cpZm:
	leaq block_cpZu_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _cpZm, .-_cpZm


==================== Asm code ====================
2018-03-16 15:55:03.691448834 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpZm_info:
	.quad	_cpZm
	.quad	0
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.692248161 UTC

.section .text
.align 8
_cpZu:
_cpZu:
	testq %r14,%r14
	jge _cpZF
_cpZZ:
	negq %r14
	cmpq $23,%r14
	jle _cpZX
_cpZY:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cpZX:
	testq %rbx,%rbx
	jge _cpZU
_cpZV:
	negq %rbx
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	negq %r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpZU:
	movq %r14,%rcx
	shrq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cpZF:
	leaq block_cpZD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cpZu, .-_cpZu


==================== Asm code ====================
2018-03-16 15:55:03.69304265 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpZu_info:
	.quad	_cpZu
	.quad	0
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.693660136 UTC

.section .text
.align 8
_cpZD:
_cpZD:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cpZD, .-_cpZD


==================== Asm code ====================
2018-03-16 15:55:03.694192621 UTC

.section .data.rel.ro
.align 8
.align 1
block_cpZD_info:
	.quad	_cpZD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.695906863 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt2_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt2_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt2_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0


==================== Asm code ====================
2018-03-16 15:55:03.697683367 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt1_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt1_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt3_closure+1
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:03.701036047 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInt_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:03.701971528 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_entry
.type GHC.Float.RealFracMethods.properFractionDoubleInt_entry, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_entry:
_cq0F:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq0G
_cq0H:
	leaq block_cq0C_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq0C
_cq0D:
	movq (%rbx),%rax
	jmp *(%rax)
_cq0G:
	leaq GHC.Float.RealFracMethods.properFractionDoubleInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionDoubleInt_entry, .-GHC.Float.RealFracMethods.properFractionDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.702593378 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInt_info
.type GHC.Float.RealFracMethods.properFractionDoubleInt_info, @object
GHC.Float.RealFracMethods.properFractionDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.703457841 UTC

.section .text
.align 8
_cq0C:
_cq0C:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cq0M
_cq0L:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _cq13
	je _cq14
_cq13:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	subsd %xmm1,%xmm0
	movsd %xmm0,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq14:
	addq $-56,%r12
	leaq GHC.Float.RealFracMethods.properFractionDoubleInt1_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq0M:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq0C, .-_cq0C


==================== Asm code ====================
2018-03-16 15:55:03.704311689 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq0C_info:
	.quad	_cq0C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.707480183 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInt_closure
.type GHC.Float.RealFracMethods.floorDoubleInt_closure, @object
GHC.Float.RealFracMethods.floorDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.floorDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:03.708324735 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorDoubleInt_entry
.type GHC.Float.RealFracMethods.floorDoubleInt_entry, @object
GHC.Float.RealFracMethods.floorDoubleInt_entry:
_cq1z:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq1A
_cq1B:
	leaq block_cq1w_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq1w
_cq1x:
	movq (%rbx),%rax
	jmp *(%rax)
_cq1A:
	leaq GHC.Float.RealFracMethods.floorDoubleInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorDoubleInt_entry, .-GHC.Float.RealFracMethods.floorDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.708902033 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInt_info
.type GHC.Float.RealFracMethods.floorDoubleInt_info, @object
GHC.Float.RealFracMethods.floorDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.floorDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.70973366 UTC

.section .text
.align 8
_cq1w:
_cq1w:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq1G
_cq1F:
	movsd 7(%rbx),%xmm0
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	ucomisd %xmm1,%xmm0
	jp _cq1S
	jb _cq1Y
_cq1S:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq1Y:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	decq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq1G:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq1w, .-_cq1w


==================== Asm code ====================
2018-03-16 15:55:03.71055754 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq1w_info:
	.quad	_cq1w
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.713623167 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_closure
.type GHC.Float.RealFracMethods.ceilingDoubleInt_closure, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:03.714313071 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_entry
.type GHC.Float.RealFracMethods.ceilingDoubleInt_entry, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_entry:
_cq2o:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq2p
_cq2q:
	leaq block_cq2l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq2l
_cq2m:
	movq (%rbx),%rax
	jmp *(%rax)
_cq2p:
	leaq GHC.Float.RealFracMethods.ceilingDoubleInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingDoubleInt_entry, .-GHC.Float.RealFracMethods.ceilingDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.715042598 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInt_info
.type GHC.Float.RealFracMethods.ceilingDoubleInt_info, @object
GHC.Float.RealFracMethods.ceilingDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.715816958 UTC

.section .text
.align 8
_cq2l:
_cq2l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq2v
_cq2u:
	movsd 7(%rbx),%xmm0
	cvttsd2siq %xmm0,%rax
	cvtsi2sdq %rax,%xmm1
	ucomisd %xmm0,%xmm1
	jp _cq2H
	jb _cq2N
_cq2H:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq2N:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	incq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq2v:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq2l, .-_cq2l


==================== Asm code ====================
2018-03-16 15:55:03.716421739 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq2l_info:
	.quad	_cq2l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.719451585 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.double2Int_closure
.type GHC.Float.RealFracMethods.double2Int_closure, @object
GHC.Float.RealFracMethods.double2Int_closure:
	.quad	GHC.Float.RealFracMethods.double2Int_info


==================== Asm code ====================
2018-03-16 15:55:03.720141876 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.double2Int_entry
.type GHC.Float.RealFracMethods.double2Int_entry, @object
GHC.Float.RealFracMethods.double2Int_entry:
_cq3d:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq3k
_cq3l:
	leaq block_cq3a_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq3a
_cq3b:
	movq (%rbx),%rax
	jmp *(%rax)
_cq3k:
	leaq GHC.Float.RealFracMethods.double2Int_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.double2Int_entry, .-GHC.Float.RealFracMethods.double2Int_entry


==================== Asm code ====================
2018-03-16 15:55:03.720757424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.double2Int_info
.type GHC.Float.RealFracMethods.double2Int_info, @object
GHC.Float.RealFracMethods.double2Int_info:
	.quad	GHC.Float.RealFracMethods.double2Int_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.721587029 UTC

.section .text
.align 8
_cq3a:
_cq3a:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq3o
_cq3n:
	cvttsd2siq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq3o:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq3a, .-_cq3a


==================== Asm code ====================
2018-03-16 15:55:03.722202179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq3a_info:
	.quad	_cq3a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.724998002 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Double_closure
.type GHC.Float.RealFracMethods.int2Double_closure, @object
GHC.Float.RealFracMethods.int2Double_closure:
	.quad	GHC.Float.RealFracMethods.int2Double_info


==================== Asm code ====================
2018-03-16 15:55:03.725801202 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.int2Double_entry
.type GHC.Float.RealFracMethods.int2Double_entry, @object
GHC.Float.RealFracMethods.int2Double_entry:
_cq3J:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq3Q
_cq3R:
	leaq block_cq3G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq3G
_cq3H:
	movq (%rbx),%rax
	jmp *(%rax)
_cq3Q:
	leaq GHC.Float.RealFracMethods.int2Double_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.int2Double_entry, .-GHC.Float.RealFracMethods.int2Double_entry


==================== Asm code ====================
2018-03-16 15:55:03.726562819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Double_info
.type GHC.Float.RealFracMethods.int2Double_info, @object
GHC.Float.RealFracMethods.int2Double_info:
	.quad	GHC.Float.RealFracMethods.int2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.727210248 UTC

.section .text
.align 8
_cq3G:
_cq3G:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq3U
_cq3T:
	cvtsi2sdq 7(%rbx),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq3U:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq3G, .-_cq3G


==================== Asm code ====================
2018-03-16 15:55:03.727794855 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq3G_info:
	.quad	_cq3G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.730823054 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.float2Int_closure
.type GHC.Float.RealFracMethods.float2Int_closure, @object
GHC.Float.RealFracMethods.float2Int_closure:
	.quad	GHC.Float.RealFracMethods.float2Int_info


==================== Asm code ====================
2018-03-16 15:55:03.731539023 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.float2Int_entry
.type GHC.Float.RealFracMethods.float2Int_entry, @object
GHC.Float.RealFracMethods.float2Int_entry:
_cq4f:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq4m
_cq4n:
	leaq block_cq4c_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq4c
_cq4d:
	movq (%rbx),%rax
	jmp *(%rax)
_cq4m:
	leaq GHC.Float.RealFracMethods.float2Int_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.float2Int_entry, .-GHC.Float.RealFracMethods.float2Int_entry


==================== Asm code ====================
2018-03-16 15:55:03.732185036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.float2Int_info
.type GHC.Float.RealFracMethods.float2Int_info, @object
GHC.Float.RealFracMethods.float2Int_info:
	.quad	GHC.Float.RealFracMethods.float2Int_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.732971568 UTC

.section .text
.align 8
_cq4c:
_cq4c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq4q
_cq4p:
	cvttss2siq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq4q:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq4c, .-_cq4c


==================== Asm code ====================
2018-03-16 15:55:03.733609736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq4c_info:
	.quad	_cq4c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.736761624 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Float_closure
.type GHC.Float.RealFracMethods.int2Float_closure, @object
GHC.Float.RealFracMethods.int2Float_closure:
	.quad	GHC.Float.RealFracMethods.int2Float_info


==================== Asm code ====================
2018-03-16 15:55:03.737799444 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.int2Float_entry
.type GHC.Float.RealFracMethods.int2Float_entry, @object
GHC.Float.RealFracMethods.int2Float_entry:
_cq4L:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq4S
_cq4T:
	leaq block_cq4I_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq4I
_cq4J:
	movq (%rbx),%rax
	jmp *(%rax)
_cq4S:
	leaq GHC.Float.RealFracMethods.int2Float_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.int2Float_entry, .-GHC.Float.RealFracMethods.int2Float_entry


==================== Asm code ====================
2018-03-16 15:55:03.738452724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.int2Float_info
.type GHC.Float.RealFracMethods.int2Float_info, @object
GHC.Float.RealFracMethods.int2Float_info:
	.quad	GHC.Float.RealFracMethods.int2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.739154495 UTC

.section .text
.align 8
_cq4I:
_cq4I:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq4W
_cq4V:
	cvtsi2ssq 7(%rbx),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq4W:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq4I, .-_cq4I


==================== Asm code ====================
2018-03-16 15:55:03.739926662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq4I_info:
	.quad	_cq4I
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.741509341 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.RealFracMethods.$trModule4_bytes
.type GHC.Float.RealFracMethods.$trModule4_bytes, @object
GHC.Float.RealFracMethods.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:03.743173019 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule3_closure
.type GHC.Float.RealFracMethods.$trModule3_closure, @object
GHC.Float.RealFracMethods.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.RealFracMethods.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:03.7447646 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.RealFracMethods.$trModule2_bytes
.type GHC.Float.RealFracMethods.$trModule2_bytes, @object
GHC.Float.RealFracMethods.$trModule2_bytes:
	.asciz "GHC.Float.RealFracMethods"


==================== Asm code ====================
2018-03-16 15:55:03.746436374 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule1_closure
.type GHC.Float.RealFracMethods.$trModule1_closure, @object
GHC.Float.RealFracMethods.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.RealFracMethods.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:03.748138207 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.$trModule_closure
.type GHC.Float.RealFracMethods.$trModule_closure, @object
GHC.Float.RealFracMethods.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Float.RealFracMethods.$trModule3_closure+1
	.quad	GHC.Float.RealFracMethods.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:03.751271627 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInt_closure
.type GHC.Float.RealFracMethods.roundDoubleInt_closure, @object
GHC.Float.RealFracMethods.roundDoubleInt_closure:
	.quad	GHC.Float.RealFracMethods.roundDoubleInt_info


==================== Asm code ====================
2018-03-16 15:55:03.752050577 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundDoubleInt_entry
.type GHC.Float.RealFracMethods.roundDoubleInt_entry, @object
GHC.Float.RealFracMethods.roundDoubleInt_entry:
_cq5m:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq5v
_cq5w:
	leaq block_cq5j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq5j
_cq5k:
	movq (%rbx),%rax
	jmp *(%rax)
_cq5v:
	leaq GHC.Float.RealFracMethods.roundDoubleInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundDoubleInt_entry, .-GHC.Float.RealFracMethods.roundDoubleInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.752798328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInt_info
.type GHC.Float.RealFracMethods.roundDoubleInt_info, @object
GHC.Float.RealFracMethods.roundDoubleInt_info:
	.quad	GHC.Float.RealFracMethods.roundDoubleInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.754948115 UTC

.section .text
.align 8
_cq5j:
_cq5j:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq5z
_cq5y:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call rintDouble@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	cvttsd2siq %xmm0,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq5z:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq5j, .-_cq5j


==================== Asm code ====================
2018-03-16 15:55:03.755580754 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq5j_info:
	.quad	_cq5j
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.759357817 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInteger_closure
.type GHC.Float.RealFracMethods.roundDoubleInteger_closure, @object
GHC.Float.RealFracMethods.roundDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.760066444 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundDoubleInteger_entry
.type GHC.Float.RealFracMethods.roundDoubleInteger_entry, @object
GHC.Float.RealFracMethods.roundDoubleInteger_entry:
_cq5V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cq5W
_cq5X:
	leaq block_cq5S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq5S
_cq5T:
	movq (%rbx),%rax
	jmp *(%rax)
_cq5W:
	leaq GHC.Float.RealFracMethods.roundDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundDoubleInteger_entry, .-GHC.Float.RealFracMethods.roundDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.76083933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundDoubleInteger_info
.type GHC.Float.RealFracMethods.roundDoubleInteger_info, @object
GHC.Float.RealFracMethods.roundDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	SpXI_srt+24


==================== Asm code ====================
2018-03-16 15:55:03.761493548 UTC

.section .text
.align 8
_cq5S:
_cq5S:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call rintDouble@plt
	addq $8,%rsp
	leaq block_cq62_info(%rip),%rax
	movq %rax,(%rbp)
	movsd %xmm0,%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cq5S, .-_cq5S


==================== Asm code ====================
2018-03-16 15:55:03.76201872 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq5S_info:
	.quad	_cq5S
	.quad	0
	.quad	4294967326
	.quad	SpXI_srt+24


==================== Asm code ====================
2018-03-16 15:55:03.762678491 UTC

.section .text
.align 8
_cq62:
_cq62:
	testq %r14,%r14
	jge _cq6b
_cq6f:
	leaq block_cq6e_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cq6b:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cq62, .-_cq62


==================== Asm code ====================
2018-03-16 15:55:03.763445299 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq62_info:
	.quad	_cq62
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.764055704 UTC

.section .text
.align 8
_cq6e:
_cq6e:
	movq 8(%rbp),%rcx
	negq %rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cq6e, .-_cq6e


==================== Asm code ====================
2018-03-16 15:55:03.764567909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq6e_info:
	.quad	_cq6e
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.768332734 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInteger_closure
.type GHC.Float.RealFracMethods.roundFloatInteger_closure, @object
GHC.Float.RealFracMethods.roundFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.roundFloatInteger_info


==================== Asm code ====================
2018-03-16 15:55:03.76907955 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundFloatInteger_entry
.type GHC.Float.RealFracMethods.roundFloatInteger_entry, @object
GHC.Float.RealFracMethods.roundFloatInteger_entry:
_cq6P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cq6Q
_cq6R:
	leaq block_cq6M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq6M
_cq6N:
	movq (%rbx),%rax
	jmp *(%rax)
_cq6Q:
	leaq GHC.Float.RealFracMethods.roundFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundFloatInteger_entry, .-GHC.Float.RealFracMethods.roundFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.769906319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInteger_info
.type GHC.Float.RealFracMethods.roundFloatInteger_info, @object
GHC.Float.RealFracMethods.roundFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.roundFloatInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.770571952 UTC

.section .text
.align 8
_cq6M:
_cq6M:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call rintFloat@plt
	addq $8,%rsp
	leaq block_cq6W_info(%rip),%rax
	movq %rax,(%rbp)
	movss %xmm0,%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _cq6M, .-_cq6M


==================== Asm code ====================
2018-03-16 15:55:03.771156392 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq6M_info:
	.quad	_cq6M
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.772017247 UTC

.section .text
.align 8
_cq6W:
_cq6W:
	testq %r14,%r14
	jge _cq77
_cq7c:
	movq %r14,%rcx
	negq %rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cq77:
	leaq block_cq75_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cq6W, .-_cq6W


==================== Asm code ====================
2018-03-16 15:55:03.772667745 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq6W_info:
	.quad	_cq6W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.77367087 UTC

.section .text
.align 8
_cq75:
_cq75:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cq75, .-_cq75


==================== Asm code ====================
2018-03-16 15:55:03.774329307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq75_info:
	.quad	_cq75
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.777520307 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInt_closure
.type GHC.Float.RealFracMethods.roundFloatInt_closure, @object
GHC.Float.RealFracMethods.roundFloatInt_closure:
	.quad	GHC.Float.RealFracMethods.roundFloatInt_info


==================== Asm code ====================
2018-03-16 15:55:03.778281992 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.roundFloatInt_entry
.type GHC.Float.RealFracMethods.roundFloatInt_entry, @object
GHC.Float.RealFracMethods.roundFloatInt_entry:
_cq7J:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cq7S
_cq7T:
	leaq block_cq7G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq7G
_cq7H:
	movq (%rbx),%rax
	jmp *(%rax)
_cq7S:
	leaq GHC.Float.RealFracMethods.roundFloatInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.roundFloatInt_entry, .-GHC.Float.RealFracMethods.roundFloatInt_entry


==================== Asm code ====================
2018-03-16 15:55:03.779105482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.roundFloatInt_info
.type GHC.Float.RealFracMethods.roundFloatInt_info, @object
GHC.Float.RealFracMethods.roundFloatInt_info:
	.quad	GHC.Float.RealFracMethods.roundFloatInt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:03.779862638 UTC

.section .text
.align 8
_cq7G:
_cq7G:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq7W
_cq7V:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call rintFloat@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	cvttss2siq %xmm0,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq7W:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cq7G, .-_cq7G


==================== Asm code ====================
2018-03-16 15:55:03.780530258 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq7G_info:
	.quad	_cq7G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.792597728 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_closure
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_closure, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.793527113 UTC

.section .text
.align 8
sat_spQY_entry:
_cq8v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cq8w
_cq8x:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_cq8w:
	jmp *-16(%r13)
	.size sat_spQY_entry, .-sat_spQY_entry


==================== Asm code ====================
2018-03-16 15:55:03.79413921 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spQY_info:
	.quad	sat_spQY_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:55:03.794824217 UTC

.section .text
.align 8
sat_spR9_entry:
_cq8W:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cq9a
_cq9b:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cq91_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq 24(%rbx),%rcx
	shlq %cl,%rax
	movq 32(%rbx),%r14
	subq %rax,%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cq9a:
	jmp *-16(%r13)
	.size sat_spR9_entry, .-sat_spR9_entry


==================== Asm code ====================
2018-03-16 15:55:03.795607719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spR9_info:
	.quad	sat_spR9_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:03.796236687 UTC

.section .text
.align 8
_cq91:
_cq91:
	movq 8(%rbp),%rax
	leaq block_cq95_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cq91, .-_cq91


==================== Asm code ====================
2018-03-16 15:55:03.796804063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq91_info:
	.quad	_cq91
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.797611621 UTC

.section .text
.align 8
_cq95:
_cq95:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cq9f
_cq9e:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cq9f:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _cq95, .-_cq95


==================== Asm code ====================
2018-03-16 15:55:03.798195523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq95_info:
	.quad	_cq95
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.7988902 UTC

.section .text
.align 8
sat_spR4_entry:
_cq9k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cq9l
_cq9m:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cq9l:
	jmp *-16(%r13)
	.size sat_spR4_entry, .-sat_spR4_entry


==================== Asm code ====================
2018-03-16 15:55:03.799601823 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spR4_info:
	.quad	sat_spR4_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:03.800295586 UTC

.section .text
.align 8
sat_spRk_entry:
_cq9G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cq9X
_cq9Y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cq9O_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq 24(%rbx),%rcx
	shlq %cl,%rax
	movq 32(%rbx),%r14
	subq %rax,%r14
	negq %r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cq9X:
	jmp *-16(%r13)
	.size sat_spRk_entry, .-sat_spRk_entry


==================== Asm code ====================
2018-03-16 15:55:03.800935358 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spRk_info:
	.quad	sat_spRk_entry
	.quad	17179869184
	.quad	15


==================== Asm code ====================
2018-03-16 15:55:03.801716223 UTC

.section .text
.align 8
_cq9O:
_cq9O:
	movq 8(%rbp),%rax
	leaq block_cq9S_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cq9O, .-_cq9O


==================== Asm code ====================
2018-03-16 15:55:03.802277634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq9O_info:
	.quad	_cq9O
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.802936917 UTC

.section .text
.align 8
_cq9S:
_cq9S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cqa2
_cqa1:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cqa2:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _cq9S, .-_cq9S


==================== Asm code ====================
2018-03-16 15:55:03.803676659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq9S_info:
	.quad	_cq9S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.804323389 UTC

.section .text
.align 8
sat_spRe_entry:
_cqa9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqaa
_cqab:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	negq %r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cqaa:
	jmp *-16(%r13)
	.size sat_spRe_entry, .-sat_spRe_entry


==================== Asm code ====================
2018-03-16 15:55:03.8049009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_spRe_info:
	.quad	sat_spRe_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:03.805844958 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_entry
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_entry, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_entry:
_cqac:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cqad
_cqae:
	leaq block_cq8f_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cq8f
_cq8g:
	movq (%rbx),%rax
	jmp *(%rax)
_cqad:
	leaq GHC.Float.RealFracMethods.properFractionDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.properFractionDoubleInteger_entry, .-GHC.Float.RealFracMethods.properFractionDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.806475122 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.properFractionDoubleInteger_info
.type GHC.Float.RealFracMethods.properFractionDoubleInteger_info, @object
GHC.Float.RealFracMethods.properFractionDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_entry
	.quad	0
	.quad	90194313230
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.807092016 UTC

.section .text
.align 8
_cq8f:
_cq8f:
	leaq block_cq8k_info(%rip),%rax
	movq %rax,-8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cq8f, .-_cq8f


==================== Asm code ====================
2018-03-16 15:55:03.807753018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq8f_info:
	.quad	_cq8f
	.quad	0
	.quad	21474836510
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.808353624 UTC

.section .text
.align 8
_cq8k:
_cq8k:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cq8l
	.size _cq8k, .-_cq8k


==================== Asm code ====================
2018-03-16 15:55:03.808843016 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq8k_info:
	.quad	_cq8k
	.quad	1
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.809865159 UTC

.section .text
.align 8
_cq8l:
_cq8l:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cqai
_cqah:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jge _cqal
_cqaF:
	negq %rbx
	cmpq $52,%rbx
	jle _cqan
_cqaE:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq lvl_roLO_closure(%rip),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -47(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cqan:
	addq $-56,%r12
	leaq block_cq8F_info(%rip),%rcx
	movq %rcx,(%rbp)
	leaq lvl_roLO_closure(%rip),%rsi
	movq %rax,%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_cqal:
	leaq sat_spQY_info(%rip),%rcx
	movq %rcx,-48(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.RealFracMethods.properFractionDoubleInt2_closure+1(%rip),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cqai:
	movq $56,904(%r13)
	leaq block_cq8l_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cq8l, .-_cq8l


==================== Asm code ====================
2018-03-16 15:55:03.810661059 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq8l_info:
	.quad	_cq8l
	.quad	67
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.811331909 UTC

.section .text
.align 8
_cq8F:
_cq8F:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _cqax
_cqar:
	leaq block_cq8J_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cqax:
	leaq block_cq9p_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cq8F, .-_cq8F


==================== Asm code ====================
2018-03-16 15:55:03.812041883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq8F_info:
	.quad	_cq8F
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.81262989 UTC

.section .text
.align 8
_cq9p:
_cq9p:
	leaq block_cq9t_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _cq9p, .-_cq9p


==================== Asm code ====================
2018-03-16 15:55:03.813179933 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq9p_info:
	.quad	_cq9p
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.814066049 UTC

.section .text
.align 8
_cq9t:
_cq9t:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cqaB
_cqaA:
	leaq sat_spRk_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,%rcx
	sarq %cl,%rbx
	movq %rbx,-48(%r12)
	leaq sat_spRe_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cqaB:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cq9t, .-_cq9t


==================== Asm code ====================
2018-03-16 15:55:03.814752926 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq9t_info:
	.quad	_cq9t
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.815626932 UTC

.section .text
.align 8
_cq8J:
_cq8J:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cqau
_cqat:
	leaq sat_spR9_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,%rcx
	sarq %cl,%rbx
	movq %rbx,-48(%r12)
	leaq sat_spR4_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cqau:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cq8J, .-_cq8J


==================== Asm code ====================
2018-03-16 15:55:03.816267294 UTC

.section .data.rel.ro
.align 8
.align 1
block_cq8J_info:
	.quad	_cq8J
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.82164338 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_closure
.type GHC.Float.RealFracMethods.truncateDoubleInteger_closure, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.822472285 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_entry
.type GHC.Float.RealFracMethods.truncateDoubleInteger_entry, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_entry:
_cqcC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cqcD
_cqcE:
	leaq block_cqcz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cqcz
_cqcA:
	movq (%rbx),%rax
	jmp *(%rax)
_cqcD:
	leaq GHC.Float.RealFracMethods.truncateDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.truncateDoubleInteger_entry, .-GHC.Float.RealFracMethods.truncateDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.82307631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.truncateDoubleInteger_info
.type GHC.Float.RealFracMethods.truncateDoubleInteger_info, @object
GHC.Float.RealFracMethods.truncateDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_entry
	.quad	0
	.quad	158913789966
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.823694046 UTC

.section .text
.align 8
_cqcz:
_cqcz:
	leaq block_cqcH_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cqcz, .-_cqcz


==================== Asm code ====================
2018-03-16 15:55:03.824216364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqcz_info:
	.quad	_cqcz
	.quad	0
	.quad	21474836510
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.825081778 UTC

.section .text
.align 8
_cqcH:
_cqcH:
	testq %r14,%r14
	jge _cqcQ
_cqds:
	negq %r14
	cmpq $52,%r14
	jle _cqd1
_cqdr:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqd1:
	leaq block_cqcZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq lvl_roLO_closure(%rip),%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_cqcQ:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cqcH, .-_cqcH


==================== Asm code ====================
2018-03-16 15:55:03.825750749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqcH_info:
	.quad	_cqcH
	.quad	0
	.quad	4294967326
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.826525296 UTC

.section .text
.align 8
_cqcZ:
_cqcZ:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _cqdl
_cqd8:
	leaq block_cqd5_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cqdl:
	leaq block_cqdf_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cqcZ, .-_cqcZ


==================== Asm code ====================
2018-03-16 15:55:03.827102414 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqcZ_info:
	.quad	_cqcZ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.827686607 UTC

.section .text
.align 8
_cqdf:
_cqdf:
	leaq block_cqdj_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _cqdf, .-_cqdf


==================== Asm code ====================
2018-03-16 15:55:03.828374091 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqdf_info:
	.quad	_cqdf
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.828965931 UTC

.section .text
.align 8
_cqdj:
_cqdj:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	negq %r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqdj, .-_cqdj


==================== Asm code ====================
2018-03-16 15:55:03.829559928 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqdj_info:
	.quad	_cqdj
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.830280901 UTC

.section .text
.align 8
_cqd5:
_cqd5:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqd5, .-_cqd5


==================== Asm code ====================
2018-03-16 15:55:03.830816602 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqd5_info:
	.quad	_cqd5
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.832492518 UTC

.section .data
.align 8
.align 1
sat_spRB_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:55:03.834609798 UTC

.section .data
.align 8
.align 1
sat_spRC_closure:
	.quad	:_con_info
	.quad	sat_spRB_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.837191148 UTC

.section .data
.align 8
.align 1
lvl1_roLP_closure:
	.quad	lvl1_roLP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.838041099 UTC

.section .text
.align 8
lvl1_roLP_entry:
_cqee:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqef
_cqeg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cqed
_cqec:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_spRC_closure+2(%rip),%rsi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_cqef:
	jmp *-16(%r13)
_cqed:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_roLP_entry, .-lvl1_roLP_entry


==================== Asm code ====================
2018-03-16 15:55:03.838882604 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_roLP_info:
	.quad	lvl1_roLP_entry
	.quad	0
	.quad	4294967317
	.quad	SpXI_srt+56


==================== Asm code ====================
2018-03-16 15:55:03.842975909 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInteger_closure
.type GHC.Float.RealFracMethods.floorFloatInteger_closure, @object
GHC.Float.RealFracMethods.floorFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.843713075 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorFloatInteger_entry
.type GHC.Float.RealFracMethods.floorFloatInteger_entry, @object
GHC.Float.RealFracMethods.floorFloatInteger_entry:
_cqex:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqey
_cqez:
	leaq block_cqeu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cqeu
_cqev:
	movq (%rbx),%rax
	jmp *(%rax)
_cqey:
	leaq GHC.Float.RealFracMethods.floorFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorFloatInteger_entry, .-GHC.Float.RealFracMethods.floorFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.844356166 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorFloatInteger_info
.type GHC.Float.RealFracMethods.floorFloatInteger_info, @object
GHC.Float.RealFracMethods.floorFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_entry
	.quad	0
	.quad	1653562408974
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.845136648 UTC

.section .text
.align 8
_cqeu:
_cqeu:
	leaq block_cqeC_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _cqeu, .-_cqeu


==================== Asm code ====================
2018-03-16 15:55:03.845729337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqeu_info:
	.quad	_cqeu
	.quad	0
	.quad	1103806595102
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.846556278 UTC

.section .text
.align 8
_cqeC:
_cqeC:
	testq %r14,%r14
	jge _cqeN
_cqf8:
	negq %r14
	cmpq $23,%r14
	jle _cqeZ
_cqf7:
	testq %rbx,%rbx
	jge _cqf5
_cqf6:
	leaq lvl1_roLP_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqf5:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqeZ:
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cqeN:
	leaq block_cqeL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqeC, .-_cqeC


==================== Asm code ====================
2018-03-16 15:55:03.847347062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqeC_info:
	.quad	_cqeC
	.quad	0
	.quad	1103806595102
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.84798518 UTC

.section .text
.align 8
_cqeL:
_cqeL:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cqeL, .-_cqeL


==================== Asm code ====================
2018-03-16 15:55:03.848598749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqeL_info:
	.quad	_cqeL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.850289451 UTC

.section .data
.align 8
.align 1
sat_spRP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:55:03.852038113 UTC

.section .data
.align 8
.align 1
sat_spRQ_closure:
	.quad	:_con_info
	.quad	sat_spRP_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.855106467 UTC

.section .data
.align 8
.align 1
lvl2_roLQ_closure:
	.quad	lvl2_roLQ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.855899927 UTC

.section .text
.align 8
lvl2_roLQ_entry:
_cqfE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqfF
_cqfG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cqfD
_cqfC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_spRQ_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_cqfF:
	jmp *-16(%r13)
_cqfD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_roLQ_entry, .-lvl2_roLQ_entry


==================== Asm code ====================
2018-03-16 15:55:03.856573077 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_roLQ_info:
	.quad	lvl2_roLQ_entry
	.quad	0
	.quad	4294967317
	.quad	SpXI_srt+80


==================== Asm code ====================
2018-03-16 15:55:03.861206783 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_closure
.type GHC.Float.RealFracMethods.ceilingFloatInteger_closure, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_closure:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.861979236 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_entry
.type GHC.Float.RealFracMethods.ceilingFloatInteger_entry, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_entry:
_cqfX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqfY
_cqfZ:
	leaq block_cqfU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cqfU
_cqfV:
	movq (%rbx),%rax
	jmp *(%rax)
_cqfY:
	leaq GHC.Float.RealFracMethods.ceilingFloatInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingFloatInteger_entry, .-GHC.Float.RealFracMethods.ceilingFloatInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.862560391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingFloatInteger_info
.type GHC.Float.RealFracMethods.ceilingFloatInteger_info, @object
GHC.Float.RealFracMethods.ceilingFloatInteger_info:
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_entry
	.quad	0
	.quad	13198434500622
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.863366229 UTC

.section .text
.align 8
_cqfU:
_cqfU:
	leaq block_cqg6_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	movss _nqgZ(%rip),%xmm0
	xorps %xmm0,%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _cqfU, .-_cqfU
.section .rodata
.align 8
.align 4
_nqgZ:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:55:03.863916115 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqfU_info:
	.quad	_cqfU
	.quad	0
	.quad	8800387989534
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.864681139 UTC

.section .text
.align 8
_cqg6:
_cqg6:
	testq %r14,%r14
	jge _cqgk
_cqgO:
	negq %r14
	cmpq $23,%r14
	jle _cqgC
_cqgN:
	testq %rbx,%rbx
	jge _cqgL
_cqgM:
	leaq lvl2_roLQ_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqgL:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqgC:
	leaq block_cqgA_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cqgk:
	leaq block_cqge_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqg6, .-_cqg6


==================== Asm code ====================
2018-03-16 15:55:03.865551925 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqg6_info:
	.quad	_cqg6
	.quad	0
	.quad	8800387989534
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.866137647 UTC

.section .text
.align 8
_cqge:
_cqge:
	movq 8(%rbp),%rax
	leaq block_cqgi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cqge, .-_cqge


==================== Asm code ====================
2018-03-16 15:55:03.866819956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqge_info:
	.quad	_cqge
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.867393834 UTC

.section .text
.align 8
_cqgi:
_cqgi:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cqgi, .-_cqgi


==================== Asm code ====================
2018-03-16 15:55:03.867943502 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqgi_info:
	.quad	_cqgi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.868508762 UTC

.section .text
.align 8
_cqgA:
_cqgA:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cqgA, .-_cqgA


==================== Asm code ====================
2018-03-16 15:55:03.869170107 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqgA_info:
	.quad	_cqgA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.873660918 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInteger_closure
.type GHC.Float.RealFracMethods.floorDoubleInteger_closure, @object
GHC.Float.RealFracMethods.floorDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.874418784 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.floorDoubleInteger_entry
.type GHC.Float.RealFracMethods.floorDoubleInteger_entry, @object
GHC.Float.RealFracMethods.floorDoubleInteger_entry:
_cqhs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqht
_cqhu:
	leaq block_cqhp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cqhp
_cqhq:
	movq (%rbx),%rax
	jmp *(%rax)
_cqht:
	leaq GHC.Float.RealFracMethods.floorDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.floorDoubleInteger_entry, .-GHC.Float.RealFracMethods.floorDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.875145451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.floorDoubleInteger_info
.type GHC.Float.RealFracMethods.floorDoubleInteger_info, @object
GHC.Float.RealFracMethods.floorDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_entry
	.quad	0
	.quad	18713172508686
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.8757351 UTC

.section .text
.align 8
_cqhp:
_cqhp:
	leaq block_cqhx_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cqhp, .-_cqhp


==================== Asm code ====================
2018-03-16 15:55:03.876263043 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqhp_info:
	.quad	_cqhp
	.quad	0
	.quad	1120986464286
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.877141022 UTC

.section .text
.align 8
_cqhx:
_cqhx:
	testq %r14,%r14
	jge _cqhG
_cqi9:
	negq %r14
	cmpq $52,%r14
	jle _cqhR
_cqhY:
	leaq block_cqhX_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl_roLO_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_cqhR:
	leaq block_cqhP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cqhG:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cqhx, .-_cqhx


==================== Asm code ====================
2018-03-16 15:55:03.877831881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqhx_info:
	.quad	_cqhx
	.quad	0
	.quad	1103806595102
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.878462214 UTC

.section .text
.align 8
_cqhP:
_cqhP:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqhP, .-_cqhP


==================== Asm code ====================
2018-03-16 15:55:03.879144857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqhP_info:
	.quad	_cqhP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.879779157 UTC

.section .text
.align 8
_cqhX:
_cqhX:
	cmpq $1,%rbx
	je _cqi8
_cqi4:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqi8:
	leaq lvl1_roLP_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cqhX, .-_cqhX


==================== Asm code ====================
2018-03-16 15:55:03.880332439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqhX_info:
	.quad	_cqhX
	.quad	0
	.quad	1103806595102
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.885463712 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_closure
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_closure, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_closure:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:03.886182651 UTC

.section .text
.align 8
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_entry
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_entry, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_entry:
_cqiI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cqiJ
_cqiK:
	leaq block_cqiF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cqiF
_cqiG:
	movq (%rbx),%rax
	jmp *(%rax)
_cqiJ:
	leaq GHC.Float.RealFracMethods.ceilingDoubleInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.RealFracMethods.ceilingDoubleInteger_entry, .-GHC.Float.RealFracMethods.ceilingDoubleInteger_entry


==================== Asm code ====================
2018-03-16 15:55:03.886810592 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.RealFracMethods.ceilingDoubleInteger_info
.type GHC.Float.RealFracMethods.ceilingDoubleInteger_info, @object
GHC.Float.RealFracMethods.ceilingDoubleInteger_info:
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_entry
	.quad	0
	.quad	44001939947534
	.quad	4294967301
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.887547772 UTC

.section .text
.align 8
_cqiF:
_cqiF:
	leaq block_cqiR_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	movsd _nqjQ(%rip),%xmm0
	xorpd %xmm0,%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _cqiF, .-_cqiF
.section .rodata
.align 8
.align 8
_nqjQ:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:55:03.888101756 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqiF_info:
	.quad	_cqiF
	.quad	0
	.quad	8817567858718
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.888803214 UTC

.section .text
.align 8
_cqiR:
_cqiR:
	testq %r14,%r14
	jge _cqj1
_cqjF:
	negq %r14
	cmpq $52,%r14
	jle _cqjm
_cqju:
	leaq block_cqjt_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl_roLO_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_cqjm:
	leaq block_cqjd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cqj1:
	leaq block_cqiZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _cqiR, .-_cqiR


==================== Asm code ====================
2018-03-16 15:55:03.889604519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqiR_info:
	.quad	_cqiR
	.quad	0
	.quad	8800387989534
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.890184131 UTC

.section .text
.align 8
_cqiZ:
_cqiZ:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cqiZ, .-_cqiZ


==================== Asm code ====================
2018-03-16 15:55:03.890749166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqiZ_info:
	.quad	_cqiZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.891493646 UTC

.section .text
.align 8
_cqjd:
_cqjd:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	leaq block_cqjk_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cqjd, .-_cqjd


==================== Asm code ====================
2018-03-16 15:55:03.892051743 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqjd_info:
	.quad	_cqjd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.892646324 UTC

.section .text
.align 8
_cqjk:
_cqjk:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _cqjk, .-_cqjk


==================== Asm code ====================
2018-03-16 15:55:03.893371784 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqjk_info:
	.quad	_cqjk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:03.893985954 UTC

.section .text
.align 8
_cqjt:
_cqjt:
	cmpq $1,%rbx
	je _cqjE
_cqjA:
	leaq lvl_roLO_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cqjE:
	leaq lvl2_roLQ_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cqjt, .-_cqjt


==================== Asm code ====================
2018-03-16 15:55:03.894568116 UTC

.section .data.rel.ro
.align 8
.align 1
block_cqjt_info:
	.quad	_cqjt
	.quad	0
	.quad	8800387989534
	.quad	SpXI_srt+8


==================== Asm code ====================
2018-03-16 15:55:03.896395387 UTC

.section .data.rel.ro
.align 8
.align 1
SpXI_srt:
	.quad	GHC.Float.RealFracMethods.properFractionFloatInteger_closure
	.quad	lvl_roLO_closure
	.quad	GHC.Float.RealFracMethods.truncateFloatInteger_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.roundDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.properFractionDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.truncateDoubleInteger_closure
	.quad	sat_spRC_closure
	.quad	GHC.Float.RealFracMethods.floorFloatInteger_closure
	.quad	lvl1_roLP_closure
	.quad	sat_spRQ_closure
	.quad	GHC.Float.RealFracMethods.ceilingFloatInteger_closure
	.quad	lvl2_roLQ_closure
	.quad	GHC.Float.RealFracMethods.floorDoubleInteger_closure
	.quad	GHC.Float.RealFracMethods.ceilingDoubleInteger_closure

