
==================== Raw Cmm ====================
2018-03-16 15:56:32.170353787 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:32.172577816 UTC

[section ""data" . GHC.STRef.$fEqSTRef_$c==_closure" {
     GHC.STRef.$fEqSTRef_$c==_closure:
         const GHC.STRef.$fEqSTRef_$c==_info;
 },
 GHC.STRef.$fEqSTRef_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KHN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KHR; else goto c1KHS;
       c1KHR: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.$fEqSTRef_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KHS: // global
           I64[Sp - 16] = block_c1KHK_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KI1; else goto c1KHL;
       u1KI1: // global
           call _c1KHK(R1) args: 0, res: 0, upd: 0;
       c1KHL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.$fEqSTRef_$c==_info" {
     GHC.STRef.$fEqSTRef_$c==_info:
         const GHC.STRef.$fEqSTRef_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c1KHK() //  [R1]
         { []
         }
     {offset
       c1KHK: // global
           I64[Sp] = block_c1KHQ_info;
           _s1KCR::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s1KCR::P64;
           if (R1 & 7 != 0) goto u1KI0; else goto c1KHU;
       u1KI0: // global
           call _c1KHQ(R1) args: 0, res: 0, upd: 0;
       c1KHU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KHK_info" {
     block_c1KHK_info:
         const _c1KHK;
         const 1;
         const 30;
 },
 _c1KHQ() //  [R1]
         { []
         }
     {offset
       c1KHQ: // global
           R1 = I64[((P64[Sp + 8] == P64[R1 + 7]) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KHQ_info" {
     block_c1KHQ_info:
         const _c1KHQ;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.181204054 UTC

[section ""data" . GHC.STRef.$fEqSTRef_$c/=_closure" {
     GHC.STRef.$fEqSTRef_$c/=_closure:
         const GHC.STRef.$fEqSTRef_$c/=_info;
 },
 GHC.STRef.$fEqSTRef_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KIq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KIu; else goto c1KIv;
       c1KIu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.$fEqSTRef_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KIv: // global
           I64[Sp - 16] = block_c1KIn_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KIS; else goto c1KIo;
       u1KIS: // global
           call _c1KIn(R1) args: 0, res: 0, upd: 0;
       c1KIo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.$fEqSTRef_$c/=_info" {
     GHC.STRef.$fEqSTRef_$c/=_info:
         const GHC.STRef.$fEqSTRef_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c1KIn() //  [R1]
         { []
         }
     {offset
       c1KIn: // global
           I64[Sp] = block_c1KIt_info;
           _s1KCY::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s1KCY::P64;
           if (R1 & 7 != 0) goto u1KIR; else goto c1KIx;
       u1KIR: // global
           call _c1KIt(R1) args: 0, res: 0, upd: 0;
       c1KIx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KIn_info" {
     block_c1KIn_info:
         const _c1KIn;
         const 1;
         const 30;
 },
 _c1KIt() //  [R1]
         { []
         }
     {offset
       c1KIt: // global
           if (P64[Sp + 8] == P64[R1 + 7]) goto c1KIN; else goto c1KIH;
       c1KIN: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c1KIH: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KIt_info" {
     block_c1KIt_info:
         const _c1KIt;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.187864576 UTC

[section ""data" . GHC.STRef.$fEqSTRef_closure" {
     GHC.STRef.$fEqSTRef_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.STRef.$fEqSTRef_$c==_closure+2;
         const GHC.STRef.$fEqSTRef_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.191162418 UTC

[section ""data" . GHC.STRef.newSTRef1_closure" {
     GHC.STRef.newSTRef1_closure:
         const GHC.STRef.newSTRef1_info;
 },
 GHC.STRef.newSTRef1_entry() //  [R2]
         { []
         }
     {offset
       c1KJh: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1KJi; else goto c1KJj;
       c1KJi: // global
           R2 = R2;
           R1 = GHC.STRef.newSTRef1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KJj: // global
           I64[Sp - 8] = block_c1KJe_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.newSTRef1_info" {
     GHC.STRef.newSTRef1_info:
         const GHC.STRef.newSTRef1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c1KJe() //  [R1]
         { []
         }
     {offset
       c1KJe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c1KJm; else goto c1KJl;
       c1KJm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c1KJl: // global
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KJe_info" {
     block_c1KJe_info:
         const _c1KJe;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.19685422 UTC

[section ""data" . GHC.STRef.newSTRef_closure" {
     GHC.STRef.newSTRef_closure:
         const GHC.STRef.newSTRef_info;
 },
 GHC.STRef.newSTRef_entry() //  [R2]
         { []
         }
     {offset
       c1KJA: // global
           R2 = R2;
           call GHC.STRef.newSTRef1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.newSTRef_info" {
     GHC.STRef.newSTRef_info:
         const GHC.STRef.newSTRef_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.200656278 UTC

[section ""data" . GHC.STRef.readSTRef1_closure" {
     GHC.STRef.readSTRef1_closure:
         const GHC.STRef.readSTRef1_info;
 },
 GHC.STRef.readSTRef1_entry() //  [R2]
         { []
         }
     {offset
       c1KJO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1KJS; else goto c1KJT;
       c1KJS: // global
           R2 = R2;
           R1 = GHC.STRef.readSTRef1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KJT: // global
           I64[Sp - 8] = block_c1KJL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1KJV; else goto c1KJM;
       u1KJV: // global
           call _c1KJL(R1) args: 0, res: 0, upd: 0;
       c1KJM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.readSTRef1_info" {
     GHC.STRef.readSTRef1_info:
         const GHC.STRef.readSTRef1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c1KJL() //  [R1]
         { []
         }
     {offset
       c1KJL: // global
           R1 = P64[P64[R1 + 7] + 8];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KJL_info" {
     block_c1KJL_info:
         const _c1KJL;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.206784788 UTC

[section ""data" . GHC.STRef.readSTRef_closure" {
     GHC.STRef.readSTRef_closure:
         const GHC.STRef.readSTRef_info;
 },
 GHC.STRef.readSTRef_entry() //  [R2]
         { []
         }
     {offset
       c1KKb: // global
           R2 = R2;
           call GHC.STRef.readSTRef1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.readSTRef_info" {
     GHC.STRef.readSTRef_info:
         const GHC.STRef.readSTRef_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.210774604 UTC

[section ""data" . GHC.STRef.writeSTRef1_closure" {
     GHC.STRef.writeSTRef1_closure:
         const GHC.STRef.writeSTRef1_info;
 },
 GHC.STRef.writeSTRef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KKp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KKq; else goto c1KKr;
       c1KKq: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.writeSTRef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KKr: // global
           I64[Sp - 16] = block_c1KKm_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KKy; else goto c1KKn;
       u1KKy: // global
           call _c1KKm(R1) args: 0, res: 0, upd: 0;
       c1KKn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.writeSTRef1_info" {
     GHC.STRef.writeSTRef1_info:
         const GHC.STRef.writeSTRef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c1KKm() //  [R1]
         { []
         }
     {offset
       c1KKm: // global
           _s1KDd::P64 = P64[Sp + 8];
           _s1KDg::P64 = P64[R1 + 7];
           call MO_WriteBarrier();
           P64[_s1KDg::P64 + 8] = _s1KDd::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s1KDg::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KKm_info" {
     block_c1KKm_info:
         const _c1KKm;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.217059606 UTC

[section ""data" . GHC.STRef.writeSTRef_closure" {
     GHC.STRef.writeSTRef_closure:
         const GHC.STRef.writeSTRef_info;
 },
 GHC.STRef.writeSTRef_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KKO: // global
           R3 = R3;
           R2 = R2;
           call GHC.STRef.writeSTRef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.writeSTRef_info" {
     GHC.STRef.writeSTRef_info:
         const GHC.STRef.writeSTRef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.22015618 UTC

[section ""cstring" . GHC.STRef.$trModule4_bytes" {
     GHC.STRef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.221880888 UTC

[section ""data" . GHC.STRef.$trModule3_closure" {
     GHC.STRef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.223486132 UTC

[section ""cstring" . GHC.STRef.$trModule2_bytes" {
     GHC.STRef.$trModule2_bytes:
         I8[] [71,72,67,46,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.225154327 UTC

[section ""data" . GHC.STRef.$trModule1_closure" {
     GHC.STRef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.227616032 UTC

[section ""data" . GHC.STRef.$trModule_closure" {
     GHC.STRef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.STRef.$trModule3_closure+1;
         const GHC.STRef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.229425516 UTC

[section ""data" . $krep_r1KCH_closure" {
     $krep_r1KCH_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.231154126 UTC

[section ""data" . $krep1_r1KCI_closure" {
     $krep1_r1KCI_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.232839307 UTC

[section ""data" . $krep2_r1KCJ_closure" {
     $krep2_r1KCJ_closure:
         const :_con_info;
         const $krep_r1KCH_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.234655076 UTC

[section ""data" . $krep3_r1KCK_closure" {
     $krep3_r1KCK_closure:
         const :_con_info;
         const $krep1_r1KCI_closure+2;
         const $krep2_r1KCJ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.23674691 UTC

[section ""data" . $krep4_r1KCL_closure" {
     $krep4_r1KCL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutVar#_closure;
         const $krep3_r1KCK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.238621748 UTC

[section ""cstring" . GHC.STRef.$tcSTRef2_bytes" {
     GHC.STRef.$tcSTRef2_bytes:
         I8[] [83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.240317254 UTC

[section ""data" . GHC.STRef.$tcSTRef1_closure" {
     GHC.STRef.$tcSTRef1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$tcSTRef2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.242121386 UTC

[section ""data" . GHC.STRef.$tcSTRef_closure" {
     GHC.STRef.$tcSTRef_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.STRef.$trModule_closure+1;
         const GHC.STRef.$tcSTRef1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 12301805959212734792;
         const 9407763519371677403;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.243921369 UTC

[section ""data" . $krep5_r1KCM_closure" {
     $krep5_r1KCM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.STRef.$tcSTRef_closure+1;
         const $krep3_r1KCK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.246124598 UTC

[section ""data" . GHC.STRef.$tc'STRef1_closure" {
     GHC.STRef.$tc'STRef1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r1KCL_closure+1;
         const $krep5_r1KCM_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.24817637 UTC

[section ""cstring" . GHC.STRef.$tc'STRef3_bytes" {
     GHC.STRef.$tc'STRef3_bytes:
         I8[] [39,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.249900129 UTC

[section ""data" . GHC.STRef.$tc'STRef2_closure" {
     GHC.STRef.$tc'STRef2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$tc'STRef3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.251537017 UTC

[section ""data" . GHC.STRef.$tc'STRef_closure" {
     GHC.STRef.$tc'STRef_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.STRef.$trModule_closure+1;
         const GHC.STRef.$tc'STRef2_closure+1;
         const GHC.STRef.$tc'STRef1_closure+4;
         const 18008618360073045522;
         const 5182275770463432138;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.253983613 UTC

[section ""data" . GHC.STRef.STRef_closure" {
     GHC.STRef.STRef_closure:
         const GHC.STRef.STRef_info;
 },
 GHC.STRef.STRef_entry() //  [R2]
         { []
         }
     {offset
       c1KLi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c1KLm; else goto c1KLl;
       c1KLm: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.STRef.STRef_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KLl: // global
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.STRef_info" {
     GHC.STRef.STRef_info:
         const GHC.STRef.STRef_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.257951683 UTC

[section ""cstring" . i1KHF_str" {
     i1KHF_str:
         I8[] [98,97,115,101,58,71,72,67,46,83,84,82,101,102,46,83,84,82,101,102]
 },
 GHC.STRef.STRef_con_entry() //  [R1]
         { []
         }
     {offset
       c1KLs: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.STRef_con_info" {
     GHC.STRef.STRef_con_info:
         const GHC.STRef.STRef_con_entry;
         const 1;
         const 2;
         const i1KHF_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.260974811 UTC

[section ""relreadonly" . S1KFt_srt" { S1KFt_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.385013037 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:32.387360208 UTC

[section ""data" . GHC.STRef.$fEqSTRef_$c==_closure" {
     GHC.STRef.$fEqSTRef_$c==_closure:
         const GHC.STRef.$fEqSTRef_$c==_info;
 },
 GHC.STRef.$fEqSTRef_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KMa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KMe; else goto c1KMf;
       c1KMe: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.$fEqSTRef_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KMf: // global
           I64[Sp - 16] = block_c1KM7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KMo; else goto c1KM8;
       u1KMo: // global
           call _c1KM7(R1) args: 0, res: 0, upd: 0;
       c1KM8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.$fEqSTRef_$c==_info" {
     GHC.STRef.$fEqSTRef_$c==_info:
         const GHC.STRef.$fEqSTRef_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c1KM7() //  [R1]
         { []
         }
     {offset
       c1KM7: // global
           I64[Sp] = block_c1KMd_info;
           _s1KLC::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s1KLC::P64;
           if (R1 & 7 != 0) goto u1KMn; else goto c1KMh;
       u1KMn: // global
           call _c1KMd(R1) args: 0, res: 0, upd: 0;
       c1KMh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KM7_info" {
     block_c1KM7_info:
         const _c1KM7;
         const 1;
         const 30;
 },
 _c1KMd() //  [R1]
         { []
         }
     {offset
       c1KMd: // global
           R1 = I64[((P64[Sp + 8] == P64[R1 + 7]) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KMd_info" {
     block_c1KMd_info:
         const _c1KMd;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.395769083 UTC

[section ""data" . GHC.STRef.$fEqSTRef_$c/=_closure" {
     GHC.STRef.$fEqSTRef_$c/=_closure:
         const GHC.STRef.$fEqSTRef_$c/=_info;
 },
 GHC.STRef.$fEqSTRef_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KMQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KMU; else goto c1KMV;
       c1KMU: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.$fEqSTRef_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KMV: // global
           I64[Sp - 16] = block_c1KMN_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KNi; else goto c1KMO;
       u1KNi: // global
           call _c1KMN(R1) args: 0, res: 0, upd: 0;
       c1KMO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.$fEqSTRef_$c/=_info" {
     GHC.STRef.$fEqSTRef_$c/=_info:
         const GHC.STRef.$fEqSTRef_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c1KMN() //  [R1]
         { []
         }
     {offset
       c1KMN: // global
           I64[Sp] = block_c1KMT_info;
           _s1KLJ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s1KLJ::P64;
           if (R1 & 7 != 0) goto u1KNh; else goto c1KMX;
       u1KNh: // global
           call _c1KMT(R1) args: 0, res: 0, upd: 0;
       c1KMX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KMN_info" {
     block_c1KMN_info:
         const _c1KMN;
         const 1;
         const 30;
 },
 _c1KMT() //  [R1]
         { []
         }
     {offset
       c1KMT: // global
           if (P64[Sp + 8] == P64[R1 + 7]) goto c1KNd; else goto c1KN7;
       c1KNd: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c1KN7: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KMT_info" {
     block_c1KMT_info:
         const _c1KMT;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.402855863 UTC

[section ""data" . GHC.STRef.$fEqSTRef_closure" {
     GHC.STRef.$fEqSTRef_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.STRef.$fEqSTRef_$c==_closure+2;
         const GHC.STRef.$fEqSTRef_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.405790467 UTC

[section ""data" . GHC.STRef.newSTRef1_closure" {
     GHC.STRef.newSTRef1_closure:
         const GHC.STRef.newSTRef1_info;
 },
 GHC.STRef.newSTRef1_entry() //  [R2]
         { []
         }
     {offset
       c1KNL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1KNM; else goto c1KNN;
       c1KNM: // global
           R2 = R2;
           R1 = GHC.STRef.newSTRef1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KNN: // global
           I64[Sp - 8] = block_c1KNI_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.newSTRef1_info" {
     GHC.STRef.newSTRef1_info:
         const GHC.STRef.newSTRef1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c1KNI() //  [R1]
         { []
         }
     {offset
       c1KNI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c1KNQ; else goto c1KNP;
       c1KNQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c1KNP: // global
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KNI_info" {
     block_c1KNI_info:
         const _c1KNI;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.411605393 UTC

[section ""data" . GHC.STRef.newSTRef_closure" {
     GHC.STRef.newSTRef_closure:
         const GHC.STRef.newSTRef_info;
 },
 GHC.STRef.newSTRef_entry() //  [R2]
         { []
         }
     {offset
       c1KO6: // global
           R2 = R2;
           call GHC.STRef.newSTRef1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.newSTRef_info" {
     GHC.STRef.newSTRef_info:
         const GHC.STRef.newSTRef_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.41548777 UTC

[section ""data" . GHC.STRef.readSTRef1_closure" {
     GHC.STRef.readSTRef1_closure:
         const GHC.STRef.readSTRef1_info;
 },
 GHC.STRef.readSTRef1_entry() //  [R2]
         { []
         }
     {offset
       c1KOk: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1KOo; else goto c1KOp;
       c1KOo: // global
           R2 = R2;
           R1 = GHC.STRef.readSTRef1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KOp: // global
           I64[Sp - 8] = block_c1KOh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1KOr; else goto c1KOi;
       u1KOr: // global
           call _c1KOh(R1) args: 0, res: 0, upd: 0;
       c1KOi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.readSTRef1_info" {
     GHC.STRef.readSTRef1_info:
         const GHC.STRef.readSTRef1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c1KOh() //  [R1]
         { []
         }
     {offset
       c1KOh: // global
           R1 = P64[P64[R1 + 7] + 8];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KOh_info" {
     block_c1KOh_info:
         const _c1KOh;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.421382409 UTC

[section ""data" . GHC.STRef.readSTRef_closure" {
     GHC.STRef.readSTRef_closure:
         const GHC.STRef.readSTRef_info;
 },
 GHC.STRef.readSTRef_entry() //  [R2]
         { []
         }
     {offset
       c1KOI: // global
           R2 = R2;
           call GHC.STRef.readSTRef1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.readSTRef_info" {
     GHC.STRef.readSTRef_info:
         const GHC.STRef.readSTRef_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.42587419 UTC

[section ""data" . GHC.STRef.writeSTRef1_closure" {
     GHC.STRef.writeSTRef1_closure:
         const GHC.STRef.writeSTRef1_info;
 },
 GHC.STRef.writeSTRef1_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KOW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c1KOX; else goto c1KOY;
       c1KOX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.STRef.writeSTRef1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1KOY: // global
           I64[Sp - 16] = block_c1KOT_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u1KP5; else goto c1KOU;
       u1KP5: // global
           call _c1KOT(R1) args: 0, res: 0, upd: 0;
       c1KOU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.writeSTRef1_info" {
     GHC.STRef.writeSTRef1_info:
         const GHC.STRef.writeSTRef1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c1KOT() //  [R1]
         { []
         }
     {offset
       c1KOT: // global
           _s1KLY::P64 = P64[Sp + 8];
           _s1KM1::P64 = P64[R1 + 7];
           call MO_WriteBarrier();
           P64[_s1KM1::P64 + 8] = _s1KLY::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, _s1KM1::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1KOT_info" {
     block_c1KOT_info:
         const _c1KOT;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.431514747 UTC

[section ""data" . GHC.STRef.writeSTRef_closure" {
     GHC.STRef.writeSTRef_closure:
         const GHC.STRef.writeSTRef_info;
 },
 GHC.STRef.writeSTRef_entry() //  [R2, R3]
         { []
         }
     {offset
       c1KPn: // global
           R3 = R3;
           R2 = R2;
           call GHC.STRef.writeSTRef1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.writeSTRef_info" {
     GHC.STRef.writeSTRef_info:
         const GHC.STRef.writeSTRef_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.435118976 UTC

[section ""cstring" . GHC.STRef.$trModule4_bytes" {
     GHC.STRef.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.436788979 UTC

[section ""data" . GHC.STRef.$trModule3_closure" {
     GHC.STRef.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.441747773 UTC

[section ""cstring" . GHC.STRef.$trModule2_bytes" {
     GHC.STRef.$trModule2_bytes:
         I8[] [71,72,67,46,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.4445314 UTC

[section ""data" . GHC.STRef.$trModule1_closure" {
     GHC.STRef.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.447405836 UTC

[section ""data" . GHC.STRef.$trModule_closure" {
     GHC.STRef.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.STRef.$trModule3_closure+1;
         const GHC.STRef.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.450079889 UTC

[section ""data" . $krep_r1KCH_closure" {
     $krep_r1KCH_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.452046216 UTC

[section ""data" . $krep1_r1KCI_closure" {
     $krep1_r1KCI_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.45466097 UTC

[section ""data" . $krep2_r1KCJ_closure" {
     $krep2_r1KCJ_closure:
         const :_con_info;
         const $krep_r1KCH_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.45640898 UTC

[section ""data" . $krep3_r1KCK_closure" {
     $krep3_r1KCK_closure:
         const :_con_info;
         const $krep1_r1KCI_closure+2;
         const $krep2_r1KCJ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.458166204 UTC

[section ""data" . $krep4_r1KCL_closure" {
     $krep4_r1KCL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutVar#_closure;
         const $krep3_r1KCK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.459929891 UTC

[section ""cstring" . GHC.STRef.$tcSTRef2_bytes" {
     GHC.STRef.$tcSTRef2_bytes:
         I8[] [83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.461999869 UTC

[section ""data" . GHC.STRef.$tcSTRef1_closure" {
     GHC.STRef.$tcSTRef1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$tcSTRef2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.463748651 UTC

[section ""data" . GHC.STRef.$tcSTRef_closure" {
     GHC.STRef.$tcSTRef_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.STRef.$trModule_closure+1;
         const GHC.STRef.$tcSTRef1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 12301805959212734792;
         const 9407763519371677403;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.465585721 UTC

[section ""data" . $krep5_r1KCM_closure" {
     $krep5_r1KCM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.STRef.$tcSTRef_closure+1;
         const $krep3_r1KCK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.467337321 UTC

[section ""data" . GHC.STRef.$tc'STRef1_closure" {
     GHC.STRef.$tc'STRef1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r1KCL_closure+1;
         const $krep5_r1KCM_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.469481746 UTC

[section ""cstring" . GHC.STRef.$tc'STRef3_bytes" {
     GHC.STRef.$tc'STRef3_bytes:
         I8[] [39,83,84,82,101,102]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.471220852 UTC

[section ""data" . GHC.STRef.$tc'STRef2_closure" {
     GHC.STRef.$tc'STRef2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.STRef.$tc'STRef3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.473064553 UTC

[section ""data" . GHC.STRef.$tc'STRef_closure" {
     GHC.STRef.$tc'STRef_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.STRef.$trModule_closure+1;
         const GHC.STRef.$tc'STRef2_closure+1;
         const GHC.STRef.$tc'STRef1_closure+4;
         const 18008618360073045522;
         const 5182275770463432138;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.475795425 UTC

[section ""data" . GHC.STRef.STRef_closure" {
     GHC.STRef.STRef_closure:
         const GHC.STRef.STRef_info;
 },
 GHC.STRef.STRef_entry() //  [R2]
         { []
         }
     {offset
       c1KPR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c1KPV; else goto c1KPU;
       c1KPV: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.STRef.STRef_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1KPU: // global
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.STRef_info" {
     GHC.STRef.STRef_info:
         const GHC.STRef.STRef_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.479686058 UTC

[section ""cstring" . i1KQ3_str" {
     i1KQ3_str:
         I8[] [98,97,115,101,58,71,72,67,46,83,84,82,101,102,46,83,84,82,101,102]
 },
 GHC.STRef.STRef_con_entry() //  [R1]
         { []
         }
     {offset
       c1KQ2: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.STRef.STRef_con_info" {
     GHC.STRef.STRef_con_info:
         const GHC.STRef.STRef_con_entry;
         const 1;
         const 2;
         const i1KQ3_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:32.483264777 UTC

[section ""relreadonly" . S1KQ9_srt" { S1KQ9_srt:
 }]

