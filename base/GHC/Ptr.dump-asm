
==================== Asm code ====================
2018-03-16 15:59:00.393214351 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr4_closure
.type GHC.Ptr.$fShowFunPtr4_closure, @object
GHC.Ptr.$fShowFunPtr4_closure:
	.quad	GHC.Types.C#_con_info
	.quad	48


==================== Asm code ====================
2018-03-16 15:59:00.394896892 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr3_closure
.type GHC.Ptr.$fShowFunPtr3_closure, @object
GHC.Ptr.$fShowFunPtr3_closure:
	.quad	GHC.Types.C#_con_info
	.quad	120


==================== Asm code ====================
2018-03-16 15:59:00.404926845 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$w$cshowsPrec_closure
.type GHC.Ptr.$w$cshowsPrec_closure, @object
GHC.Ptr.$w$cshowsPrec_closure:
	.quad	GHC.Ptr.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.405818104 UTC

.section .text
.align 8
sat_s47xV_entry:
_c483C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c483D
_c483E:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.wordToInteger_entry
_c483D:
	jmp *-16(%r13)
	.size sat_s47xV_entry, .-sat_s47xV_entry


==================== Asm code ====================
2018-03-16 15:59:00.406423721 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s47xV_info:
	.quad	sat_s47xV_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:59:00.407246416 UTC

.section .text
.align 8
ls_s47xS_entry:
_c483H:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c483I
_c483J:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c483L
_c483K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s47xV_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r9
	movl $GHC.Show.intToDigit_closure+1,%r8d
	movl $Numeric.showHex1_closure,%edi
	movl $GHC.Show.$fShowInteger_closure,%esi
	movl $GHC.Real.$fIntegralInteger_closure,%r14d
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-24,%rbp
	jmp Numeric.showIntAtBase_entry
_c483L:
	movq $24,904(%r13)
_c483I:
	jmp *-16(%r13)
	.size ls_s47xS_entry, .-ls_s47xS_entry


==================== Asm code ====================
2018-03-16 15:59:00.407908746 UTC

.section .data.rel.ro
.align 8
.align 1
ls_s47xS_info:
	.quad	ls_s47xS_entry
	.quad	4294967296
	.quad	133143986193
	.quad	S47CQ_srt


==================== Asm code ====================
2018-03-16 15:59:00.408609766 UTC

.section .text
.align 8
n_s47xZ_entry:
_c4845:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4846
_c4847:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c4846:
	jmp *-16(%r13)
	.size n_s47xZ_entry, .-n_s47xZ_entry


==================== Asm code ====================
2018-03-16 15:59:00.409205494 UTC

.section .data.rel.ro
.align 8
.align 1
n_s47xZ_info:
	.quad	n_s47xZ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:59:00.40995237 UTC

.section .text
.align 8
sat_s47y5_entry:
_c484m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c484n
_c484o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs_s47y1_entry
_c484n:
	jmp *-16(%r13)
	.size sat_s47y5_entry, .-sat_s47y5_entry


==================== Asm code ====================
2018-03-16 15:59:00.41057321 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s47y5_info:
	.quad	sat_s47y5_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:59:00.41133864 UTC

.section .text
.align 8
$wxs_s47y1_entry:
_c484s:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c484w
_c484v:
	cmpq $1,%r14
	je _c484r
_c484q:
	movq $sat_s47y5_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Ptr.$fShowFunPtr4_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c484w:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c484r:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs_s47y1_entry, .-$wxs_s47y1_entry


==================== Asm code ====================
2018-03-16 15:59:00.412003263 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs_s47y1_info:
	.quad	$wxs_s47y1_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:00.412726532 UTC

.section .text
.align 8
sat_s47y6_entry:
_c484y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c484z
_c484A:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c483Q_info,-40(%rbp)
	xorl %esi,%esi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.List.$wlenAcc_entry
_c484z:
	jmp *-16(%r13)
	.size sat_s47y6_entry, .-sat_s47y6_entry


==================== Asm code ====================
2018-03-16 15:59:00.413397677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s47y6_info:
	.quad	sat_s47y6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:59:00.414264597 UTC

.section .text
.align 8
_c483Q:
_c483Q:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c484D
_c484C:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movl $16,%edx
	subq %rbx,%rdx
	cmpq $0,%rdx
	jle _c484F
_c484G:
	movq $n_s47xZ_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq $:_con_info,-32(%r12)
	movq $GHC.Ptr.$fShowFunPtr4_closure+1,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	movq $$wxs_s47y1_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rdx,%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp $wxs_s47y1_entry
_c484F:
	addq $-72,%r12
	movq %rax,%rsi
	movq %rcx,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_c484D:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c483Q, .-_c483Q


==================== Asm code ====================
2018-03-16 15:59:00.414975126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c483Q_info:
	.quad	_c483Q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.415765573 UTC

.section .text
.align 8
.globl GHC.Ptr.$w$cshowsPrec_entry
.type GHC.Ptr.$w$cshowsPrec_entry, @object
GHC.Ptr.$w$cshowsPrec_entry:
_c484I:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c484M
_c484L:
	movq $ls_s47xS_info,-72(%r12)
	movq %r14,-56(%r12)
	movq $sat_s47y6_info,-48(%r12)
	movq %rsi,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Ptr.$fShowFunPtr3_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	movl $GHC.Ptr.$fShowFunPtr4_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c484M:
	movq $80,904(%r13)
	movl $GHC.Ptr.$w$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$w$cshowsPrec_entry, .-GHC.Ptr.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:00.416467461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$w$cshowsPrec_info
.type GHC.Ptr.$w$cshowsPrec_info, @object
GHC.Ptr.$w$cshowsPrec_info:
	.quad	GHC.Ptr.$w$cshowsPrec_entry
	.quad	0
	.quad	270582939662
	.quad	8589934605
	.quad	S47CQ_srt


==================== Asm code ====================
2018-03-16 15:59:00.420125064 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.420938453 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry:
_c485z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c485F
_c485G:
	movq $block_c485w_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c485w
_c485x:
	movq (%rbx),%rax
	jmp *(%rax)
_c485F:
	movl $GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry, .-GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:00.422266492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_info
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_info, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.422909011 UTC

.section .text
.align 8
_c485w:
_c485w:
	movq 8(%rbp),%rax
	movq $block_c485C_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c485w, .-_c485w


==================== Asm code ====================
2018-03-16 15:59:00.423503905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c485w_info:
	.quad	_c485w
	.quad	1
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.424203277 UTC

.section .text
.align 8
_c485C:
_c485C:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c485K
_c485J:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c485K:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c485C, .-_c485C


==================== Asm code ====================
2018-03-16 15:59:00.424810133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c485C_info:
	.quad	_c485C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.426740994 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr2_closure
.type GHC.Ptr.$fShowFunPtr2_closure, @object
GHC.Ptr.$fShowFunPtr2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.430291128 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshow_closure
.type GHC.Ptr.$fShowPtr_$cshow_closure, @object
GHC.Ptr.$fShowPtr_$cshow_closure:
	.quad	GHC.Ptr.$fShowPtr_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.431103774 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr_$cshow_entry
.type GHC.Ptr.$fShowPtr_$cshow_entry, @object
GHC.Ptr.$fShowPtr_$cshow_entry:
_c4867:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c486d
_c486e:
	movq $block_c4864_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c4864
_c4865:
	movq (%rbx),%rax
	jmp *(%rax)
_c486d:
	movl $GHC.Ptr.$fShowPtr_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowPtr_$cshow_entry, .-GHC.Ptr.$fShowPtr_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:00.431739407 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshow_info
.type GHC.Ptr.$fShowPtr_$cshow_info, @object
GHC.Ptr.$fShowPtr_$cshow_info:
	.quad	GHC.Ptr.$fShowPtr_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.432382987 UTC

.section .text
.align 8
_c4864:
_c4864:
	movq $block_c486a_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq 7(%rbx),%r14
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c4864, .-_c4864


==================== Asm code ====================
2018-03-16 15:59:00.432977865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4864_info:
	.quad	_c4864
	.quad	0
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.433750244 UTC

.section .text
.align 8
_c486a:
_c486a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c486i
_c486h:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c486i:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c486a, .-_c486a


==================== Asm code ====================
2018-03-16 15:59:00.434342287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c486a_info:
	.quad	_c486a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.438210494 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr1_closure
.type GHC.Ptr.$fShowPtr1_closure, @object
GHC.Ptr.$fShowPtr1_closure:
	.quad	GHC.Ptr.$fShowPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.43909295 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr1_entry
.type GHC.Ptr.$fShowPtr1_entry, @object
GHC.Ptr.$fShowPtr1_entry:
_c486E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c486K
_c486L:
	movq $block_c486B_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c486B
_c486C:
	movq (%rbx),%rax
	jmp *(%rax)
_c486K:
	movl $GHC.Ptr.$fShowPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowPtr1_entry, .-GHC.Ptr.$fShowPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:00.440301434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr1_info
.type GHC.Ptr.$fShowPtr1_info, @object
GHC.Ptr.$fShowPtr1_info:
	.quad	GHC.Ptr.$fShowPtr1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.441012763 UTC

.section .text
.align 8
_c486B:
_c486B:
	movq 8(%rbp),%rax
	movq $block_c486H_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c486B, .-_c486B


==================== Asm code ====================
2018-03-16 15:59:00.441674241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c486B_info:
	.quad	_c486B
	.quad	1
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.442389206 UTC

.section .text
.align 8
_c486H:
_c486H:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c486P
_c486O:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c486P:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c486H, .-_c486H


==================== Asm code ====================
2018-03-16 15:59:00.443012008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c486H_info:
	.quad	_c486H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.445298978 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshowList_closure
.type GHC.Ptr.$fShowPtr_$cshowList_closure, @object
GHC.Ptr.$fShowPtr_$cshowList_closure:
	.quad	GHC.Ptr.$fShowPtr_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.445955102 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr_$cshowList_entry
.type GHC.Ptr.$fShowPtr_$cshowList_entry, @object
GHC.Ptr.$fShowPtr_$cshowList_entry:
_c4878:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Ptr.$fShowPtr1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Ptr.$fShowPtr_$cshowList_entry, .-GHC.Ptr.$fShowPtr_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:00.446535689 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshowList_info
.type GHC.Ptr.$fShowPtr_$cshowList_info, @object
GHC.Ptr.$fShowPtr_$cshowList_info:
	.quad	GHC.Ptr.$fShowPtr_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S47CQ_srt+64


==================== Asm code ====================
2018-03-16 15:59:00.448294093 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_closure
.type GHC.Ptr.$fShowPtr_closure, @object
GHC.Ptr.$fShowPtr_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure+3
	.quad	GHC.Ptr.$fShowPtr_$cshow_closure+1
	.quad	GHC.Ptr.$fShowPtr_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.451703374 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<_closure
.type GHC.Ptr.$fOrdFunPtr_$c<_closure, @object
GHC.Ptr.$fOrdFunPtr_$c<_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_info


==================== Asm code ====================
2018-03-16 15:59:00.452538575 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c<_entry
.type GHC.Ptr.$fOrdFunPtr_$c<_entry, @object
GHC.Ptr.$fOrdFunPtr_$c<_entry:
_c487n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c487r
_c487s:
	movq $block_c487k_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c487k
_c487l:
	movq (%rbx),%rax
	jmp *(%rax)
_c487r:
	movl $GHC.Ptr.$fOrdFunPtr_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c<_entry, .-GHC.Ptr.$fOrdFunPtr_$c<_entry


==================== Asm code ====================
2018-03-16 15:59:00.453177975 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<_info
.type GHC.Ptr.$fOrdFunPtr_$c<_info, @object
GHC.Ptr.$fOrdFunPtr_$c<_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.454224717 UTC

.section .text
.align 8
_c487k:
_c487k:
	movq $block_c487q_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c487q
_c487u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c487k, .-_c487k


==================== Asm code ====================
2018-03-16 15:59:00.454829358 UTC

.section .data.rel.ro
.align 8
.align 1
block_c487k_info:
	.quad	_c487k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.455507013 UTC

.section .text
.align 8
_c487q:
_c487q:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c487q, .-_c487q


==================== Asm code ====================
2018-03-16 15:59:00.456058412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c487q_info:
	.quad	_c487q
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.459931979 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_closure
.type GHC.Ptr.$fOrdFunPtr_$ccompare_closure, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:00.460767464 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_entry
.type GHC.Ptr.$fOrdFunPtr_$ccompare_entry, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_entry:
_c4880:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c4884
_c4885:
	movq $block_c487X_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c487X
_c487Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c4884:
	movl $GHC.Ptr.$fOrdFunPtr_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$ccompare_entry, .-GHC.Ptr.$fOrdFunPtr_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:00.461466262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_info
.type GHC.Ptr.$fOrdFunPtr_$ccompare_info, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.462098605 UTC

.section .text
.align 8
_c487X:
_c487X:
	movq $block_c4883_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c4883
_c4887:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c487X, .-_c487X


==================== Asm code ====================
2018-03-16 15:59:00.462674499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c487X_info:
	.quad	_c487X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.463439521 UTC

.section .text
.align 8
_c4883:
_c4883:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jae _c488l
_c488m:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c488j:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c488l:
	cmpq %rbx,%rax
	je _c488j
_c488i:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c4883, .-_c4883


==================== Asm code ====================
2018-03-16 15:59:00.46407782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c4883_info:
	.quad	_c4883
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.467950981 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c==_closure
.type GHC.Ptr.$fEqFunPtr_$c==_closure, @object
GHC.Ptr.$fEqFunPtr_$c==_closure:
	.quad	GHC.Ptr.$fEqFunPtr_$c==_info


==================== Asm code ====================
2018-03-16 15:59:00.46880768 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqFunPtr_$c==_entry
.type GHC.Ptr.$fEqFunPtr_$c==_entry, @object
GHC.Ptr.$fEqFunPtr_$c==_entry:
_c488M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c488Q
_c488R:
	movq $block_c488J_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c488J
_c488K:
	movq (%rbx),%rax
	jmp *(%rax)
_c488Q:
	movl $GHC.Ptr.$fEqFunPtr_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqFunPtr_$c==_entry, .-GHC.Ptr.$fEqFunPtr_$c==_entry


==================== Asm code ====================
2018-03-16 15:59:00.469418443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c==_info
.type GHC.Ptr.$fEqFunPtr_$c==_info, @object
GHC.Ptr.$fEqFunPtr_$c==_info:
	.quad	GHC.Ptr.$fEqFunPtr_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.470125881 UTC

.section .text
.align 8
_c488J:
_c488J:
	movq $block_c488P_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c488P
_c488T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c488J, .-_c488J


==================== Asm code ====================
2018-03-16 15:59:00.470720382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c488J_info:
	.quad	_c488J
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.471376531 UTC

.section .text
.align 8
_c488P:
_c488P:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c488P, .-_c488P


==================== Asm code ====================
2018-03-16 15:59:00.471978916 UTC

.section .data.rel.ro
.align 8
.align 1
block_c488P_info:
	.quad	_c488P
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.475529213 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c/=_closure
.type GHC.Ptr.$fEqFunPtr_$c/=_closure, @object
GHC.Ptr.$fEqFunPtr_$c/=_closure:
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_info


==================== Asm code ====================
2018-03-16 15:59:00.476890509 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqFunPtr_$c/=_entry
.type GHC.Ptr.$fEqFunPtr_$c/=_entry, @object
GHC.Ptr.$fEqFunPtr_$c/=_entry:
_c489p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c489t
_c489u:
	movq $block_c489m_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c489m
_c489n:
	movq (%rbx),%rax
	jmp *(%rax)
_c489t:
	movl $GHC.Ptr.$fEqFunPtr_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqFunPtr_$c/=_entry, .-GHC.Ptr.$fEqFunPtr_$c/=_entry


==================== Asm code ====================
2018-03-16 15:59:00.47804088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c/=_info
.type GHC.Ptr.$fEqFunPtr_$c/=_info, @object
GHC.Ptr.$fEqFunPtr_$c/=_info:
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.478692139 UTC

.section .text
.align 8
_c489m:
_c489m:
	movq $block_c489s_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c489s
_c489w:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c489m, .-_c489m


==================== Asm code ====================
2018-03-16 15:59:00.479280025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c489m_info:
	.quad	_c489m
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.479919599 UTC

.section .text
.align 8
_c489s:
_c489s:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c489F
_c489E:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c489F:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c489s, .-_c489s


==================== Asm code ====================
2018-03-16 15:59:00.480496525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c489s_info:
	.quad	_c489s
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.482232069 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_closure
.type GHC.Ptr.$fEqFunPtr_closure, @object
GHC.Ptr.$fEqFunPtr_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Ptr.$fEqFunPtr_$c==_closure+2
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.485817933 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<=_closure
.type GHC.Ptr.$fOrdFunPtr_$c<=_closure, @object
GHC.Ptr.$fOrdFunPtr_$c<=_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_info


==================== Asm code ====================
2018-03-16 15:59:00.486672065 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c<=_entry
.type GHC.Ptr.$fOrdFunPtr_$c<=_entry, @object
GHC.Ptr.$fOrdFunPtr_$c<=_entry:
_c48a6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48aa
_c48ab:
	movq $block_c48a3_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48a3
_c48a4:
	movq (%rbx),%rax
	jmp *(%rax)
_c48aa:
	movl $GHC.Ptr.$fOrdFunPtr_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c<=_entry, .-GHC.Ptr.$fOrdFunPtr_$c<=_entry


==================== Asm code ====================
2018-03-16 15:59:00.487323678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<=_info
.type GHC.Ptr.$fOrdFunPtr_$c<=_info, @object
GHC.Ptr.$fOrdFunPtr_$c<=_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.487999912 UTC

.section .text
.align 8
_c48a3:
_c48a3:
	movq $block_c48a9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48a9
_c48ad:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48a3, .-_c48a3


==================== Asm code ====================
2018-03-16 15:59:00.48854244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48a3_info:
	.quad	_c48a3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.489175331 UTC

.section .text
.align 8
_c48a9:
_c48a9:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48al
_c48am:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48al:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48a9, .-_c48a9


==================== Asm code ====================
2018-03-16 15:59:00.490145627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48a9_info:
	.quad	_c48a9
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.493784796 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmax_closure
.type GHC.Ptr.$fOrdFunPtr_$cmax_closure, @object
GHC.Ptr.$fOrdFunPtr_$cmax_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:00.494600231 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$cmax_entry
.type GHC.Ptr.$fOrdFunPtr_$cmax_entry, @object
GHC.Ptr.$fOrdFunPtr_$cmax_entry:
_c48aM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48aQ
_c48aR:
	movq $block_c48aJ_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48aJ
_c48aK:
	movq (%rbx),%rax
	jmp *(%rax)
_c48aQ:
	movl $GHC.Ptr.$fOrdFunPtr_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$cmax_entry, .-GHC.Ptr.$fOrdFunPtr_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:00.495251609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmax_info
.type GHC.Ptr.$fOrdFunPtr_$cmax_info, @object
GHC.Ptr.$fOrdFunPtr_$cmax_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.495925592 UTC

.section .text
.align 8
_c48aJ:
_c48aJ:
	movq $block_c48aP_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48aP
_c48aT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48aJ, .-_c48aJ


==================== Asm code ====================
2018-03-16 15:59:00.496545362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48aJ_info:
	.quad	_c48aJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.497289374 UTC

.section .text
.align 8
_c48aP:
_c48aP:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48b1
_c48b2:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48b1:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48aP, .-_c48aP


==================== Asm code ====================
2018-03-16 15:59:00.497930205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48aP_info:
	.quad	_c48aP
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.501681881 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>=_closure
.type GHC.Ptr.$fOrdFunPtr_$c>=_closure, @object
GHC.Ptr.$fOrdFunPtr_$c>=_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_info


==================== Asm code ====================
2018-03-16 15:59:00.50247567 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c>=_entry
.type GHC.Ptr.$fOrdFunPtr_$c>=_entry, @object
GHC.Ptr.$fOrdFunPtr_$c>=_entry:
_c48bu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48by
_c48bz:
	movq $block_c48br_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48br
_c48bs:
	movq (%rbx),%rax
	jmp *(%rax)
_c48by:
	movl $GHC.Ptr.$fOrdFunPtr_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c>=_entry, .-GHC.Ptr.$fOrdFunPtr_$c>=_entry


==================== Asm code ====================
2018-03-16 15:59:00.503102702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>=_info
.type GHC.Ptr.$fOrdFunPtr_$c>=_info, @object
GHC.Ptr.$fOrdFunPtr_$c>=_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.503789138 UTC

.section .text
.align 8
_c48br:
_c48br:
	movq $block_c48bx_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48bx
_c48bB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48br, .-_c48br


==================== Asm code ====================
2018-03-16 15:59:00.504378026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48br_info:
	.quad	_c48br
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.505066304 UTC

.section .text
.align 8
_c48bx:
_c48bx:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48bJ
_c48bK:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48bJ:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48bx, .-_c48bx


==================== Asm code ====================
2018-03-16 15:59:00.505680806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48bx_info:
	.quad	_c48bx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.509084684 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>_closure
.type GHC.Ptr.$fOrdFunPtr_$c>_closure, @object
GHC.Ptr.$fOrdFunPtr_$c>_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_info


==================== Asm code ====================
2018-03-16 15:59:00.509933007 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c>_entry
.type GHC.Ptr.$fOrdFunPtr_$c>_entry, @object
GHC.Ptr.$fOrdFunPtr_$c>_entry:
_c48ca:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48ce
_c48cf:
	movq $block_c48c7_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48c7
_c48c8:
	movq (%rbx),%rax
	jmp *(%rax)
_c48ce:
	movl $GHC.Ptr.$fOrdFunPtr_$c>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c>_entry, .-GHC.Ptr.$fOrdFunPtr_$c>_entry


==================== Asm code ====================
2018-03-16 15:59:00.510586292 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>_info
.type GHC.Ptr.$fOrdFunPtr_$c>_info, @object
GHC.Ptr.$fOrdFunPtr_$c>_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.511287468 UTC

.section .text
.align 8
_c48c7:
_c48c7:
	movq $block_c48cd_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48cd
_c48ch:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48c7, .-_c48c7


==================== Asm code ====================
2018-03-16 15:59:00.511896003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48c7_info:
	.quad	_c48c7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.51309707 UTC

.section .text
.align 8
_c48cd:
_c48cd:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48cd, .-_c48cd


==================== Asm code ====================
2018-03-16 15:59:00.514061671 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48cd_info:
	.quad	_c48cd
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.517745567 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmin_closure
.type GHC.Ptr.$fOrdFunPtr_$cmin_closure, @object
GHC.Ptr.$fOrdFunPtr_$cmin_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:00.51861977 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$cmin_entry
.type GHC.Ptr.$fOrdFunPtr_$cmin_entry, @object
GHC.Ptr.$fOrdFunPtr_$cmin_entry:
_c48cN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48cR
_c48cS:
	movq $block_c48cK_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48cK
_c48cL:
	movq (%rbx),%rax
	jmp *(%rax)
_c48cR:
	movl $GHC.Ptr.$fOrdFunPtr_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$cmin_entry, .-GHC.Ptr.$fOrdFunPtr_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:00.519259104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmin_info
.type GHC.Ptr.$fOrdFunPtr_$cmin_info, @object
GHC.Ptr.$fOrdFunPtr_$cmin_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.519931551 UTC

.section .text
.align 8
_c48cK:
_c48cK:
	movq $block_c48cQ_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48cQ
_c48cU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48cK, .-_c48cK


==================== Asm code ====================
2018-03-16 15:59:00.520533173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48cK_info:
	.quad	_c48cK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.521205127 UTC

.section .text
.align 8
_c48cQ:
_c48cQ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48d2
_c48d3:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48d2:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48cQ, .-_c48cQ


==================== Asm code ====================
2018-03-16 15:59:00.521851977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48cQ_info:
	.quad	_c48cQ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.523634803 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_closure
.type GHC.Ptr.$fOrdFunPtr_closure, @object
GHC.Ptr.$fOrdFunPtr_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Ptr.$fEqFunPtr_closure+1
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.527139717 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<_closure
.type GHC.Ptr.$fOrdPtr_$c<_closure, @object
GHC.Ptr.$fOrdPtr_$c<_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c<_info


==================== Asm code ====================
2018-03-16 15:59:00.52800823 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c<_entry
.type GHC.Ptr.$fOrdPtr_$c<_entry, @object
GHC.Ptr.$fOrdPtr_$c<_entry:
_c48dw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48dA
_c48dB:
	movq $block_c48dt_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48dt
_c48du:
	movq (%rbx),%rax
	jmp *(%rax)
_c48dA:
	movl $GHC.Ptr.$fOrdPtr_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c<_entry, .-GHC.Ptr.$fOrdPtr_$c<_entry


==================== Asm code ====================
2018-03-16 15:59:00.528650148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<_info
.type GHC.Ptr.$fOrdPtr_$c<_info, @object
GHC.Ptr.$fOrdPtr_$c<_info:
	.quad	GHC.Ptr.$fOrdPtr_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.529637722 UTC

.section .text
.align 8
_c48dt:
_c48dt:
	movq $block_c48dz_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48dz
_c48dD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48dt, .-_c48dt


==================== Asm code ====================
2018-03-16 15:59:00.530201021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48dt_info:
	.quad	_c48dt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.530894752 UTC

.section .text
.align 8
_c48dz:
_c48dz:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48dz, .-_c48dz


==================== Asm code ====================
2018-03-16 15:59:00.531483591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48dz_info:
	.quad	_c48dz
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.535352828 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$ccompare_closure
.type GHC.Ptr.$fOrdPtr_$ccompare_closure, @object
GHC.Ptr.$fOrdPtr_$ccompare_closure:
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:00.536192136 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$ccompare_entry
.type GHC.Ptr.$fOrdPtr_$ccompare_entry, @object
GHC.Ptr.$fOrdPtr_$ccompare_entry:
_c48e9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48ed
_c48ee:
	movq $block_c48e6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48e6
_c48e7:
	movq (%rbx),%rax
	jmp *(%rax)
_c48ed:
	movl $GHC.Ptr.$fOrdPtr_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$ccompare_entry, .-GHC.Ptr.$fOrdPtr_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:00.536837031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$ccompare_info
.type GHC.Ptr.$fOrdPtr_$ccompare_info, @object
GHC.Ptr.$fOrdPtr_$ccompare_info:
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.537556488 UTC

.section .text
.align 8
_c48e6:
_c48e6:
	movq $block_c48ec_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48ec
_c48eg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48e6, .-_c48e6


==================== Asm code ====================
2018-03-16 15:59:00.53815101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48e6_info:
	.quad	_c48e6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.538876068 UTC

.section .text
.align 8
_c48ec:
_c48ec:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jae _c48eu
_c48ev:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48es:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48eu:
	cmpq %rbx,%rax
	je _c48es
_c48er:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48ec, .-_c48ec


==================== Asm code ====================
2018-03-16 15:59:00.539511187 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48ec_info:
	.quad	_c48ec
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.543267428 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c==_closure
.type GHC.Ptr.$fEqPtr_$c==_closure, @object
GHC.Ptr.$fEqPtr_$c==_closure:
	.quad	GHC.Ptr.$fEqPtr_$c==_info


==================== Asm code ====================
2018-03-16 15:59:00.544060479 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqPtr_$c==_entry
.type GHC.Ptr.$fEqPtr_$c==_entry, @object
GHC.Ptr.$fEqPtr_$c==_entry:
_c48eV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48eZ
_c48f0:
	movq $block_c48eS_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48eS
_c48eT:
	movq (%rbx),%rax
	jmp *(%rax)
_c48eZ:
	movl $GHC.Ptr.$fEqPtr_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqPtr_$c==_entry, .-GHC.Ptr.$fEqPtr_$c==_entry


==================== Asm code ====================
2018-03-16 15:59:00.544724195 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c==_info
.type GHC.Ptr.$fEqPtr_$c==_info, @object
GHC.Ptr.$fEqPtr_$c==_info:
	.quad	GHC.Ptr.$fEqPtr_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.545451767 UTC

.section .text
.align 8
_c48eS:
_c48eS:
	movq $block_c48eY_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48eY
_c48f2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48eS, .-_c48eS


==================== Asm code ====================
2018-03-16 15:59:00.54598328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48eS_info:
	.quad	_c48eS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.546601578 UTC

.section .text
.align 8
_c48eY:
_c48eY:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48eY, .-_c48eY


==================== Asm code ====================
2018-03-16 15:59:00.547204322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48eY_info:
	.quad	_c48eY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.55137504 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c/=_closure
.type GHC.Ptr.$fEqPtr_$c/=_closure, @object
GHC.Ptr.$fEqPtr_$c/=_closure:
	.quad	GHC.Ptr.$fEqPtr_$c/=_info


==================== Asm code ====================
2018-03-16 15:59:00.552153986 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqPtr_$c/=_entry
.type GHC.Ptr.$fEqPtr_$c/=_entry, @object
GHC.Ptr.$fEqPtr_$c/=_entry:
_c48fy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48fC
_c48fD:
	movq $block_c48fv_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48fv
_c48fw:
	movq (%rbx),%rax
	jmp *(%rax)
_c48fC:
	movl $GHC.Ptr.$fEqPtr_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqPtr_$c/=_entry, .-GHC.Ptr.$fEqPtr_$c/=_entry


==================== Asm code ====================
2018-03-16 15:59:00.552761601 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c/=_info
.type GHC.Ptr.$fEqPtr_$c/=_info, @object
GHC.Ptr.$fEqPtr_$c/=_info:
	.quad	GHC.Ptr.$fEqPtr_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.553843811 UTC

.section .text
.align 8
_c48fv:
_c48fv:
	movq $block_c48fB_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48fB
_c48fF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48fv, .-_c48fv


==================== Asm code ====================
2018-03-16 15:59:00.554397034 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48fv_info:
	.quad	_c48fv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.555051268 UTC

.section .text
.align 8
_c48fB:
_c48fB:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c48fO
_c48fN:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48fO:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48fB, .-_c48fB


==================== Asm code ====================
2018-03-16 15:59:00.555634045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48fB_info:
	.quad	_c48fB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.557307024 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_closure
.type GHC.Ptr.$fEqPtr_closure, @object
GHC.Ptr.$fEqPtr_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Ptr.$fEqPtr_$c==_closure+2
	.quad	GHC.Ptr.$fEqPtr_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.560771967 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<=_closure
.type GHC.Ptr.$fOrdPtr_$c<=_closure, @object
GHC.Ptr.$fOrdPtr_$c<=_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c<=_info


==================== Asm code ====================
2018-03-16 15:59:00.561643149 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c<=_entry
.type GHC.Ptr.$fOrdPtr_$c<=_entry, @object
GHC.Ptr.$fOrdPtr_$c<=_entry:
_c48gf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48gj
_c48gk:
	movq $block_c48gc_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48gc
_c48gd:
	movq (%rbx),%rax
	jmp *(%rax)
_c48gj:
	movl $GHC.Ptr.$fOrdPtr_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c<=_entry, .-GHC.Ptr.$fOrdPtr_$c<=_entry


==================== Asm code ====================
2018-03-16 15:59:00.562294712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<=_info
.type GHC.Ptr.$fOrdPtr_$c<=_info, @object
GHC.Ptr.$fOrdPtr_$c<=_info:
	.quad	GHC.Ptr.$fOrdPtr_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.562975194 UTC

.section .text
.align 8
_c48gc:
_c48gc:
	movq $block_c48gi_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48gi
_c48gm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48gc, .-_c48gc


==================== Asm code ====================
2018-03-16 15:59:00.563586064 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48gc_info:
	.quad	_c48gc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.564251917 UTC

.section .text
.align 8
_c48gi:
_c48gi:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48gu
_c48gv:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48gu:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48gi, .-_c48gi


==================== Asm code ====================
2018-03-16 15:59:00.564853635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48gi_info:
	.quad	_c48gi
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.568471598 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmax_closure
.type GHC.Ptr.$fOrdPtr_$cmax_closure, @object
GHC.Ptr.$fOrdPtr_$cmax_closure:
	.quad	GHC.Ptr.$fOrdPtr_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:00.569629433 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$cmax_entry
.type GHC.Ptr.$fOrdPtr_$cmax_entry, @object
GHC.Ptr.$fOrdPtr_$cmax_entry:
_c48gV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48gZ
_c48h0:
	movq $block_c48gS_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48gS
_c48gT:
	movq (%rbx),%rax
	jmp *(%rax)
_c48gZ:
	movl $GHC.Ptr.$fOrdPtr_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$cmax_entry, .-GHC.Ptr.$fOrdPtr_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:00.570268093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmax_info
.type GHC.Ptr.$fOrdPtr_$cmax_info, @object
GHC.Ptr.$fOrdPtr_$cmax_info:
	.quad	GHC.Ptr.$fOrdPtr_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.570967875 UTC

.section .text
.align 8
_c48gS:
_c48gS:
	movq $block_c48gY_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48gY
_c48h2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48gS, .-_c48gS


==================== Asm code ====================
2018-03-16 15:59:00.571531362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48gS_info:
	.quad	_c48gS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.572175607 UTC

.section .text
.align 8
_c48gY:
_c48gY:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48ha
_c48hb:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48ha:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48gY, .-_c48gY


==================== Asm code ====================
2018-03-16 15:59:00.572766927 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48gY_info:
	.quad	_c48gY
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.576265771 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>=_closure
.type GHC.Ptr.$fOrdPtr_$c>=_closure, @object
GHC.Ptr.$fOrdPtr_$c>=_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c>=_info


==================== Asm code ====================
2018-03-16 15:59:00.577053587 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c>=_entry
.type GHC.Ptr.$fOrdPtr_$c>=_entry, @object
GHC.Ptr.$fOrdPtr_$c>=_entry:
_c48hD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48hH
_c48hI:
	movq $block_c48hA_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48hA
_c48hB:
	movq (%rbx),%rax
	jmp *(%rax)
_c48hH:
	movl $GHC.Ptr.$fOrdPtr_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c>=_entry, .-GHC.Ptr.$fOrdPtr_$c>=_entry


==================== Asm code ====================
2018-03-16 15:59:00.577781223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>=_info
.type GHC.Ptr.$fOrdPtr_$c>=_info, @object
GHC.Ptr.$fOrdPtr_$c>=_info:
	.quad	GHC.Ptr.$fOrdPtr_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.578478803 UTC

.section .text
.align 8
_c48hA:
_c48hA:
	movq $block_c48hG_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48hG
_c48hK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48hA, .-_c48hA


==================== Asm code ====================
2018-03-16 15:59:00.579045098 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48hA_info:
	.quad	_c48hA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.579765031 UTC

.section .text
.align 8
_c48hG:
_c48hG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48hS
_c48hT:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48hS:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48hG, .-_c48hG


==================== Asm code ====================
2018-03-16 15:59:00.580381319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48hG_info:
	.quad	_c48hG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.58403399 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>_closure
.type GHC.Ptr.$fOrdPtr_$c>_closure, @object
GHC.Ptr.$fOrdPtr_$c>_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c>_info


==================== Asm code ====================
2018-03-16 15:59:00.584804493 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c>_entry
.type GHC.Ptr.$fOrdPtr_$c>_entry, @object
GHC.Ptr.$fOrdPtr_$c>_entry:
_c48ij:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48in
_c48io:
	movq $block_c48ig_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48ig
_c48ih:
	movq (%rbx),%rax
	jmp *(%rax)
_c48in:
	movl $GHC.Ptr.$fOrdPtr_$c>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c>_entry, .-GHC.Ptr.$fOrdPtr_$c>_entry


==================== Asm code ====================
2018-03-16 15:59:00.585536406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>_info
.type GHC.Ptr.$fOrdPtr_$c>_info, @object
GHC.Ptr.$fOrdPtr_$c>_info:
	.quad	GHC.Ptr.$fOrdPtr_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.586747015 UTC

.section .text
.align 8
_c48ig:
_c48ig:
	movq $block_c48im_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48im
_c48iq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48ig, .-_c48ig


==================== Asm code ====================
2018-03-16 15:59:00.587347241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48ig_info:
	.quad	_c48ig
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.588009338 UTC

.section .text
.align 8
_c48im:
_c48im:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48im, .-_c48im


==================== Asm code ====================
2018-03-16 15:59:00.588604878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48im_info:
	.quad	_c48im
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.594196271 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmin_closure
.type GHC.Ptr.$fOrdPtr_$cmin_closure, @object
GHC.Ptr.$fOrdPtr_$cmin_closure:
	.quad	GHC.Ptr.$fOrdPtr_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:00.595068808 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$cmin_entry
.type GHC.Ptr.$fOrdPtr_$cmin_entry, @object
GHC.Ptr.$fOrdPtr_$cmin_entry:
_c48iW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48j0
_c48j1:
	movq $block_c48iT_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48iT
_c48iU:
	movq (%rbx),%rax
	jmp *(%rax)
_c48j0:
	movl $GHC.Ptr.$fOrdPtr_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$cmin_entry, .-GHC.Ptr.$fOrdPtr_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:00.59590259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmin_info
.type GHC.Ptr.$fOrdPtr_$cmin_info, @object
GHC.Ptr.$fOrdPtr_$cmin_info:
	.quad	GHC.Ptr.$fOrdPtr_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.596674904 UTC

.section .text
.align 8
_c48iT:
_c48iT:
	movq $block_c48iZ_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48iZ
_c48j3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48iT, .-_c48iT


==================== Asm code ====================
2018-03-16 15:59:00.597475472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48iT_info:
	.quad	_c48iT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.598292069 UTC

.section .text
.align 8
_c48iZ:
_c48iZ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48jb
_c48jc:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48jb:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48iZ, .-_c48iZ


==================== Asm code ====================
2018-03-16 15:59:00.598973667 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48iZ_info:
	.quad	_c48iZ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.600987723 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_closure
.type GHC.Ptr.$fOrdPtr_closure, @object
GHC.Ptr.$fOrdPtr_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Ptr.$fEqPtr_closure+1
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c<_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c<=_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c>_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c>=_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$cmax_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.60300319 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.nullPtr_closure
.type GHC.Ptr.nullPtr_closure, @object
GHC.Ptr.nullPtr_closure:
	.quad	GHC.Ptr.Ptr_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.605738606 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtr1_closure
.type GHC.Ptr.castPtr1_closure, @object
GHC.Ptr.castPtr1_closure:
	.quad	GHC.Ptr.castPtr1_info


==================== Asm code ====================
2018-03-16 15:59:00.606484474 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtr1_entry
.type GHC.Ptr.castPtr1_entry, @object
GHC.Ptr.castPtr1_entry:
_c48jD:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Ptr.castPtr1_entry, .-GHC.Ptr.castPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:00.607079131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtr1_info
.type GHC.Ptr.castPtr1_info, @object
GHC.Ptr.castPtr1_info:
	.quad	GHC.Ptr.castPtr1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.609408639 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtr_closure
.type GHC.Ptr.castPtr_closure, @object
GHC.Ptr.castPtr_closure:
	.quad	GHC.Ptr.castPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.610060915 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtr_entry
.type GHC.Ptr.castPtr_entry, @object
GHC.Ptr.castPtr_entry:
_c48jQ:
	jmp GHC.Ptr.castPtr1_entry
	.size GHC.Ptr.castPtr_entry, .-GHC.Ptr.castPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.610755599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtr_info
.type GHC.Ptr.castPtr_info, @object
GHC.Ptr.castPtr_info:
	.quad	GHC.Ptr.castPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.614548883 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.plusPtr_closure
.type GHC.Ptr.plusPtr_closure, @object
GHC.Ptr.plusPtr_closure:
	.quad	GHC.Ptr.plusPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.615431095 UTC

.section .text
.align 8
.globl GHC.Ptr.plusPtr_entry
.type GHC.Ptr.plusPtr_entry, @object
GHC.Ptr.plusPtr_entry:
_c48k4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48kg
_c48kh:
	movq $block_c48k1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48k1
_c48k2:
	movq (%rbx),%rax
	jmp *(%rax)
_c48kg:
	movl $GHC.Ptr.plusPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.plusPtr_entry, .-GHC.Ptr.plusPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.616079441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.plusPtr_info
.type GHC.Ptr.plusPtr_info, @object
GHC.Ptr.plusPtr_info:
	.quad	GHC.Ptr.plusPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.616832258 UTC

.section .text
.align 8
_c48k1:
_c48k1:
	movq $block_c48k7_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48k7
_c48k8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48k1, .-_c48k1


==================== Asm code ====================
2018-03-16 15:59:00.617524267 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48k1_info:
	.quad	_c48k1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.618228623 UTC

.section .text
.align 8
_c48k7:
_c48k7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48kl
_c48kk:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48kl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c48k7, .-_c48k7


==================== Asm code ====================
2018-03-16 15:59:00.61895746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48k7_info:
	.quad	_c48k7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.624308602 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.alignPtr_closure
.type GHC.Ptr.alignPtr_closure, @object
GHC.Ptr.alignPtr_closure:
	.quad	GHC.Ptr.alignPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.625159026 UTC

.section .text
.align 8
.globl GHC.Ptr.alignPtr_entry
.type GHC.Ptr.alignPtr_entry, @object
GHC.Ptr.alignPtr_entry:
_c48kL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48kP
_c48kQ:
	movq $block_c48kI_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48kI
_c48kJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c48kP:
	movl $GHC.Ptr.alignPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.alignPtr_entry, .-GHC.Ptr.alignPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.625900155 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.alignPtr_info
.type GHC.Ptr.alignPtr_info, @object
GHC.Ptr.alignPtr_info:
	.quad	GHC.Ptr.alignPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.627199596 UTC

.section .text
.align 8
_c48kI:
_c48kI:
	movq $block_c48kO_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48kO
_c48kS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48kI, .-_c48kI


==================== Asm code ====================
2018-03-16 15:59:00.627902952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48kI_info:
	.quad	_c48kI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.628778238 UTC

.section .text
.align 8
_c48kO:
_c48kO:
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	testq %rdx,%rdx
	jne _u48ll
_c48lh:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u48ll:
	movq %rdx,(%rbp)
	movq %rbx,16(%rbp)
	jmp _c48l1
	.size _c48kO, .-_c48kO


==================== Asm code ====================
2018-03-16 15:59:00.629542437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48kO_info:
	.quad	_c48kO
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.630283583 UTC

.section .text
.align 8
_c48l1:
_c48l1:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c48le
_c48ld:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq 16(%rbp),%rbx
	subq %rax,%rbx
	movq 8(%rbp),%rax
	addq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48le:
	movq $16,904(%r13)
	movq $block_c48l0_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c48l1, .-_c48l1


==================== Asm code ====================
2018-03-16 15:59:00.630989221 UTC

.section .text
.align 8
_c48l0:
_c48l0:
	movq %rbx,(%rbp)
	jmp _c48l1
	.size _c48l0, .-_c48l0


==================== Asm code ====================
2018-03-16 15:59:00.631572268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48l0_info:
	.quad	_c48l0
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.635222892 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.minusPtr_closure
.type GHC.Ptr.minusPtr_closure, @object
GHC.Ptr.minusPtr_closure:
	.quad	GHC.Ptr.minusPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.635974635 UTC

.section .text
.align 8
.globl GHC.Ptr.minusPtr_entry
.type GHC.Ptr.minusPtr_entry, @object
GHC.Ptr.minusPtr_entry:
_c48lX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48m9
_c48ma:
	movq $block_c48lU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48lU
_c48lV:
	movq (%rbx),%rax
	jmp *(%rax)
_c48m9:
	movl $GHC.Ptr.minusPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.minusPtr_entry, .-GHC.Ptr.minusPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.636611267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.minusPtr_info
.type GHC.Ptr.minusPtr_info, @object
GHC.Ptr.minusPtr_info:
	.quad	GHC.Ptr.minusPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:00.63775005 UTC

.section .text
.align 8
_c48lU:
_c48lU:
	movq $block_c48m0_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48m0
_c48m1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48lU, .-_c48lU


==================== Asm code ====================
2018-03-16 15:59:00.638297867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48lU_info:
	.quad	_c48lU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.638941873 UTC

.section .text
.align 8
_c48m0:
_c48m0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48me
_c48md:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48me:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c48m0, .-_c48m0


==================== Asm code ====================
2018-03-16 15:59:00.639571192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48m0_info:
	.quad	_c48m0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.641338606 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.nullFunPtr_closure
.type GHC.Ptr.nullFunPtr_closure, @object
GHC.Ptr.nullFunPtr_closure:
	.quad	GHC.Ptr.FunPtr_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.643510985 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtr1_closure
.type GHC.Ptr.castFunPtr1_closure, @object
GHC.Ptr.castFunPtr1_closure:
	.quad	GHC.Ptr.castFunPtr1_info


==================== Asm code ====================
2018-03-16 15:59:00.644163467 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtr1_entry
.type GHC.Ptr.castFunPtr1_entry, @object
GHC.Ptr.castFunPtr1_entry:
_c48mC:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Ptr.castFunPtr1_entry, .-GHC.Ptr.castFunPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:00.644723171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtr1_info
.type GHC.Ptr.castFunPtr1_info, @object
GHC.Ptr.castFunPtr1_info:
	.quad	GHC.Ptr.castFunPtr1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.646791569 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtr_closure
.type GHC.Ptr.castFunPtr_closure, @object
GHC.Ptr.castFunPtr_closure:
	.quad	GHC.Ptr.castFunPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.64738437 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtr_entry
.type GHC.Ptr.castFunPtr_entry, @object
GHC.Ptr.castFunPtr_entry:
_c48mP:
	jmp GHC.Ptr.castFunPtr1_entry
	.size GHC.Ptr.castFunPtr_entry, .-GHC.Ptr.castFunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.64797921 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtr_info
.type GHC.Ptr.castFunPtr_info, @object
GHC.Ptr.castFunPtr_info:
	.quad	GHC.Ptr.castFunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.651029381 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtrToPtr_closure
.type GHC.Ptr.castFunPtrToPtr_closure, @object
GHC.Ptr.castFunPtrToPtr_closure:
	.quad	GHC.Ptr.castFunPtrToPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.651839954 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtrToPtr_entry
.type GHC.Ptr.castFunPtrToPtr_entry, @object
GHC.Ptr.castFunPtrToPtr_entry:
_c48n3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48n7
_c48n8:
	movq $block_c48n0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48n0
_c48n1:
	movq (%rbx),%rax
	jmp *(%rax)
_c48n7:
	movl $GHC.Ptr.castFunPtrToPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.castFunPtrToPtr_entry, .-GHC.Ptr.castFunPtrToPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.652511878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtrToPtr_info
.type GHC.Ptr.castFunPtrToPtr_info, @object
GHC.Ptr.castFunPtrToPtr_info:
	.quad	GHC.Ptr.castFunPtrToPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.653199945 UTC

.section .text
.align 8
_c48n0:
_c48n0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48nb
_c48na:
	movq 7(%rbx),%rax
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48nb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c48n0, .-_c48n0


==================== Asm code ====================
2018-03-16 15:59:00.654226179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48n0_info:
	.quad	_c48n0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.657911915 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.658695517 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry:
_c48nu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48nA
_c48nB:
	movq $block_c48nr_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48nr
_c48ns:
	movq (%rbx),%rax
	jmp *(%rax)
_c48nA:
	movl $GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry, .-GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry


==================== Asm code ====================
2018-03-16 15:59:00.65936699 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.660060736 UTC

.section .text
.align 8
_c48nr:
_c48nr:
	movq 8(%rbp),%rax
	movq $block_c48nx_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48nr, .-_c48nr


==================== Asm code ====================
2018-03-16 15:59:00.66112434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48nr_info:
	.quad	_c48nr
	.quad	1
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.661925334 UTC

.section .text
.align 8
_c48nx:
_c48nx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48nF
_c48nE:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48nF:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c48nx, .-_c48nx


==================== Asm code ====================
2018-03-16 15:59:00.662545182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48nx_info:
	.quad	_c48nx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.666041659 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshow_closure
.type GHC.Ptr.$fShowFunPtr_$cshow_closure, @object
GHC.Ptr.$fShowFunPtr_$cshow_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.66686695 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshow_entry
.type GHC.Ptr.$fShowFunPtr_$cshow_entry, @object
GHC.Ptr.$fShowFunPtr_$cshow_entry:
_c48o1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48o7
_c48o8:
	movq $block_c48nY_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48nY
_c48nZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c48o7:
	movl $GHC.Ptr.$fShowFunPtr_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshow_entry, .-GHC.Ptr.$fShowFunPtr_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:00.667471559 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshow_info
.type GHC.Ptr.$fShowFunPtr_$cshow_info, @object
GHC.Ptr.$fShowFunPtr_$cshow_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.668086242 UTC

.section .text
.align 8
_c48nY:
_c48nY:
	movq $block_c48o4_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq 7(%rbx),%r14
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48nY, .-_c48nY


==================== Asm code ====================
2018-03-16 15:59:00.668659521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48nY_info:
	.quad	_c48nY
	.quad	0
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.669395086 UTC

.section .text
.align 8
_c48o4:
_c48o4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48oc
_c48ob:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48oc:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c48o4, .-_c48o4


==================== Asm code ====================
2018-03-16 15:59:00.670032897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48o4_info:
	.quad	_c48o4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.673597727 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr1_closure
.type GHC.Ptr.$fShowFunPtr1_closure, @object
GHC.Ptr.$fShowFunPtr1_closure:
	.quad	GHC.Ptr.$fShowFunPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.674421778 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr1_entry
.type GHC.Ptr.$fShowFunPtr1_entry, @object
GHC.Ptr.$fShowFunPtr1_entry:
_c48oy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48oE
_c48oF:
	movq $block_c48ov_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48ov
_c48ow:
	movq (%rbx),%rax
	jmp *(%rax)
_c48oE:
	movl $GHC.Ptr.$fShowFunPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr1_entry, .-GHC.Ptr.$fShowFunPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:00.675039293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr1_info
.type GHC.Ptr.$fShowFunPtr1_info, @object
GHC.Ptr.$fShowFunPtr1_info:
	.quad	GHC.Ptr.$fShowFunPtr1_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.67568671 UTC

.section .text
.align 8
_c48ov:
_c48ov:
	movq 8(%rbp),%rax
	movq $block_c48oB_info,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48ov, .-_c48ov


==================== Asm code ====================
2018-03-16 15:59:00.676255347 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48ov_info:
	.quad	_c48ov
	.quad	1
	.quad	4294967326
	.quad	S47CQ_srt+40


==================== Asm code ====================
2018-03-16 15:59:00.676999136 UTC

.section .text
.align 8
_c48oB:
_c48oB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48oJ
_c48oI:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48oJ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c48oB, .-_c48oB


==================== Asm code ====================
2018-03-16 15:59:00.677685789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48oB_info:
	.quad	_c48oB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.679981711 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowList_closure
.type GHC.Ptr.$fShowFunPtr_$cshowList_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowList_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.680604058 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowList_entry
.type GHC.Ptr.$fShowFunPtr_$cshowList_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowList_entry:
_c48p2:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Ptr.$fShowFunPtr1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Ptr.$fShowFunPtr_$cshowList_entry, .-GHC.Ptr.$fShowFunPtr_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:00.681204097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowList_info
.type GHC.Ptr.$fShowFunPtr_$cshowList_info, @object
GHC.Ptr.$fShowFunPtr_$cshowList_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S47CQ_srt+88


==================== Asm code ====================
2018-03-16 15:59:00.68288071 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_closure
.type GHC.Ptr.$fShowFunPtr_closure, @object
GHC.Ptr.$fShowFunPtr_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure+3
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_closure+1
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.686275858 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtrToFunPtr_closure
.type GHC.Ptr.castPtrToFunPtr_closure, @object
GHC.Ptr.castPtrToFunPtr_closure:
	.quad	GHC.Ptr.castPtrToFunPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.68702745 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtrToFunPtr_entry
.type GHC.Ptr.castPtrToFunPtr_entry, @object
GHC.Ptr.castPtrToFunPtr_entry:
_c48ph:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48pl
_c48pm:
	movq $block_c48pe_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48pe
_c48pf:
	movq (%rbx),%rax
	jmp *(%rax)
_c48pl:
	movl $GHC.Ptr.castPtrToFunPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.castPtrToFunPtr_entry, .-GHC.Ptr.castPtrToFunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.687631493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtrToFunPtr_info
.type GHC.Ptr.castPtrToFunPtr_info, @object
GHC.Ptr.castPtrToFunPtr_info:
	.quad	GHC.Ptr.castPtrToFunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:00.688375001 UTC

.section .text
.align 8
_c48pe:
_c48pe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48pp
_c48po:
	movq 7(%rbx),%rax
	movq $GHC.Ptr.FunPtr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48pp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c48pe, .-_c48pe


==================== Asm code ====================
2018-03-16 15:59:00.689008557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48pe_info:
	.quad	_c48pe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:00.690637751 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$trModule4_bytes
.type GHC.Ptr.$trModule4_bytes, @object
GHC.Ptr.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:00.692252729 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule3_closure
.type GHC.Ptr.$trModule3_closure, @object
GHC.Ptr.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:00.694857561 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$trModule2_bytes
.type GHC.Ptr.$trModule2_bytes, @object
GHC.Ptr.$trModule2_bytes:
	.asciz "GHC.Ptr"


==================== Asm code ====================
2018-03-16 15:59:00.696491489 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule1_closure
.type GHC.Ptr.$trModule1_closure, @object
GHC.Ptr.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:00.698205584 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule_closure
.type GHC.Ptr.$trModule_closure, @object
GHC.Ptr.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Ptr.$trModule3_closure+1
	.quad	GHC.Ptr.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.699823409 UTC

.section .data
.align 8
.align 1
$krep_r47xK_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:00.701549269 UTC

.section .data
.align 8
.align 1
$krep1_r47xL_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcAddr#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.70315265 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tcPtr2_bytes
.type GHC.Ptr.$tcPtr2_bytes, @object
GHC.Ptr.$tcPtr2_bytes:
	.asciz "Ptr"


==================== Asm code ====================
2018-03-16 15:59:00.704792281 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcPtr1_closure
.type GHC.Ptr.$tcPtr1_closure, @object
GHC.Ptr.$tcPtr1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tcPtr2_bytes


==================== Asm code ====================
2018-03-16 15:59:00.706925877 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcPtr_closure
.type GHC.Ptr.$tcPtr_closure, @object
GHC.Ptr.$tcPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tcPtr1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-4507244349285990301
	.quad	-2130070396560899400
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.708620439 UTC

.section .data
.align 8
.align 1
$krep2_r47xM_closure:
	.quad	:_con_info
	.quad	$krep_r47xK_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.710308823 UTC

.section .data
.align 8
.align 1
$krep3_r47xN_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcPtr_closure+1
	.quad	$krep2_r47xM_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.711983088 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr1_closure
.type GHC.Ptr.$tc'Ptr1_closure, @object
GHC.Ptr.$tc'Ptr1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r47xL_closure+1
	.quad	$krep3_r47xN_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.71360165 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tc'Ptr3_bytes
.type GHC.Ptr.$tc'Ptr3_bytes, @object
GHC.Ptr.$tc'Ptr3_bytes:
	.asciz "'Ptr"


==================== Asm code ====================
2018-03-16 15:59:00.715189777 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr2_closure
.type GHC.Ptr.$tc'Ptr2_closure, @object
GHC.Ptr.$tc'Ptr2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tc'Ptr3_bytes


==================== Asm code ====================
2018-03-16 15:59:00.716851868 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr_closure
.type GHC.Ptr.$tc'Ptr_closure, @object
GHC.Ptr.$tc'Ptr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tc'Ptr2_closure+1
	.quad	GHC.Ptr.$tc'Ptr1_closure+4
	.quad	2332306090346040376
	.quad	-4955015885741560319
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.719054717 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tcFunPtr2_bytes
.type GHC.Ptr.$tcFunPtr2_bytes, @object
GHC.Ptr.$tcFunPtr2_bytes:
	.asciz "FunPtr"


==================== Asm code ====================
2018-03-16 15:59:00.720716519 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcFunPtr1_closure
.type GHC.Ptr.$tcFunPtr1_closure, @object
GHC.Ptr.$tcFunPtr1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tcFunPtr2_bytes


==================== Asm code ====================
2018-03-16 15:59:00.72308469 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcFunPtr_closure
.type GHC.Ptr.$tcFunPtr_closure, @object
GHC.Ptr.$tcFunPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tcFunPtr1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	38956960673620606
	.quad	4307950889093819770
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.72477113 UTC

.section .data
.align 8
.align 1
$krep4_r47xO_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcFunPtr_closure+1
	.quad	$krep2_r47xM_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.726521902 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr1_closure
.type GHC.Ptr.$tc'FunPtr1_closure, @object
GHC.Ptr.$tc'FunPtr1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r47xL_closure+1
	.quad	$krep4_r47xO_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.72822612 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tc'FunPtr3_bytes
.type GHC.Ptr.$tc'FunPtr3_bytes, @object
GHC.Ptr.$tc'FunPtr3_bytes:
	.asciz "'FunPtr"


==================== Asm code ====================
2018-03-16 15:59:00.729920744 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr2_closure
.type GHC.Ptr.$tc'FunPtr2_closure, @object
GHC.Ptr.$tc'FunPtr2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tc'FunPtr3_bytes


==================== Asm code ====================
2018-03-16 15:59:00.731702333 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr_closure
.type GHC.Ptr.$tc'FunPtr_closure, @object
GHC.Ptr.$tc'FunPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tc'FunPtr2_closure+1
	.quad	GHC.Ptr.$tc'FunPtr1_closure+4
	.quad	-2724410509106313028
	.quad	-6345878765852112429
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:00.734406763 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.Ptr_closure
.type GHC.Ptr.Ptr_closure, @object
GHC.Ptr.Ptr_closure:
	.quad	GHC.Ptr.Ptr_info


==================== Asm code ====================
2018-03-16 15:59:00.735244015 UTC

.section .text
.align 8
GHC.Ptr.Ptr_entry:
_c48q4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48q8
_c48q7:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48q8:
	movq $16,904(%r13)
	movl $GHC.Ptr.Ptr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.Ptr_entry, .-GHC.Ptr.Ptr_entry


==================== Asm code ====================
2018-03-16 15:59:00.735865105 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Ptr.Ptr_info:
	.quad	GHC.Ptr.Ptr_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:00.738287764 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.FunPtr_closure
.type GHC.Ptr.FunPtr_closure, @object
GHC.Ptr.FunPtr_closure:
	.quad	GHC.Ptr.FunPtr_info


==================== Asm code ====================
2018-03-16 15:59:00.73903089 UTC

.section .text
.align 8
GHC.Ptr.FunPtr_entry:
_c48qj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48qn
_c48qm:
	movq $GHC.Ptr.FunPtr_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48qn:
	movq $16,904(%r13)
	movl $GHC.Ptr.FunPtr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Ptr.FunPtr_entry, .-GHC.Ptr.FunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:00.739626031 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Ptr.FunPtr_info:
	.quad	GHC.Ptr.FunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:00.741584332 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i483j_str:
	.asciz "base:GHC.Ptr.Ptr"


==================== Asm code ====================
2018-03-16 15:59:00.742238122 UTC

.section .text
.align 8
.globl GHC.Ptr.Ptr_con_entry
.type GHC.Ptr.Ptr_con_entry, @object
GHC.Ptr.Ptr_con_entry:
_c48qt:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Ptr.Ptr_con_entry, .-GHC.Ptr.Ptr_con_entry


==================== Asm code ====================
2018-03-16 15:59:00.742825097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.Ptr_con_info
.type GHC.Ptr.Ptr_con_info, @object
GHC.Ptr.Ptr_con_info:
	.quad	GHC.Ptr.Ptr_con_entry
	.quad	4294967296
	.quad	3
	.quad	i483j_str


==================== Asm code ====================
2018-03-16 15:59:00.744776588 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i483l_str:
	.asciz "base:GHC.Ptr.FunPtr"


==================== Asm code ====================
2018-03-16 15:59:00.745969948 UTC

.section .text
.align 8
.globl GHC.Ptr.FunPtr_con_entry
.type GHC.Ptr.FunPtr_con_entry, @object
GHC.Ptr.FunPtr_con_entry:
_c48qz:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Ptr.FunPtr_con_entry, .-GHC.Ptr.FunPtr_con_entry


==================== Asm code ====================
2018-03-16 15:59:00.746531407 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.FunPtr_con_info
.type GHC.Ptr.FunPtr_con_info, @object
GHC.Ptr.FunPtr_con_info:
	.quad	GHC.Ptr.FunPtr_con_entry
	.quad	4294967296
	.quad	3
	.quad	i483l_str


==================== Asm code ====================
2018-03-16 15:59:00.748827393 UTC

.section .data.rel.ro
.align 8
.align 1
S47CQ_srt:
	.quad	GHC.Show.intToDigit_closure
	.quad	GHC.Show.$fShowInteger_closure
	.quad	GHC.Real.$fIntegralInteger_closure
	.quad	Numeric.showIntAtBase_closure
	.quad	Numeric.showHex1_closure
	.quad	GHC.Ptr.$w$cshowsPrec_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure
	.quad	GHC.Ptr.$fShowPtr_$cshow_closure
	.quad	GHC.Ptr.$fShowPtr1_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_closure
	.quad	GHC.Ptr.$fShowFunPtr1_closure


==================== Asm code ====================
2018-03-16 15:59:01.373644618 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr4_closure
.type GHC.Ptr.$fShowFunPtr4_closure, @object
GHC.Ptr.$fShowFunPtr4_closure:
	.quad	GHC.Types.C#_con_info
	.quad	48


==================== Asm code ====================
2018-03-16 15:59:01.37532713 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr3_closure
.type GHC.Ptr.$fShowFunPtr3_closure, @object
GHC.Ptr.$fShowFunPtr3_closure:
	.quad	GHC.Types.C#_con_info
	.quad	120


==================== Asm code ====================
2018-03-16 15:59:01.384468074 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$w$cshowsPrec_closure
.type GHC.Ptr.$w$cshowsPrec_closure, @object
GHC.Ptr.$w$cshowsPrec_closure:
	.quad	GHC.Ptr.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.385401767 UTC

.section .text
.align 8
sat_s48qL_entry:
_c48ux:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48uy
_c48uz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.wordToInteger_entry@gotpcrel(%rip)
_c48uy:
	jmp *-16(%r13)
	.size sat_s48qL_entry, .-sat_s48qL_entry


==================== Asm code ====================
2018-03-16 15:59:01.386040679 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s48qL_info:
	.quad	sat_s48qL_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:59:01.386913837 UTC

.section .text
.align 8
ls_s48qI_entry:
_c48uC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48uD
_c48uE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48uG
_c48uF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s48qL_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r9
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq Numeric.showHex1_closure@gotpcrel(%rip),%rdi
	movq GHC.Show.$fShowInteger_closure@gotpcrel(%rip),%rsi
	movq GHC.Real.$fIntegralInteger_closure@gotpcrel(%rip),%r14
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp *Numeric.showIntAtBase_entry@gotpcrel(%rip)
_c48uG:
	movq $24,904(%r13)
_c48uD:
	jmp *-16(%r13)
	.size ls_s48qI_entry, .-ls_s48qI_entry


==================== Asm code ====================
2018-03-16 15:59:01.387694064 UTC

.section .data.rel.ro
.align 8
.align 1
ls_s48qI_info:
	.quad	ls_s48qI_entry
	.quad	4294967296
	.quad	133143986193
	.quad	S48vI_srt


==================== Asm code ====================
2018-03-16 15:59:01.388434005 UTC

.section .text
.align 8
n_s48qP_entry:
_c48v0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48v1
_c48v2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c48v1:
	jmp *-16(%r13)
	.size n_s48qP_entry, .-n_s48qP_entry


==================== Asm code ====================
2018-03-16 15:59:01.38905645 UTC

.section .data.rel.ro
.align 8
.align 1
n_s48qP_info:
	.quad	n_s48qP_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:59:01.389818809 UTC

.section .text
.align 8
sat_s48qV_entry:
_c48vh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48vi
_c48vj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs_s48qR_entry
_c48vi:
	jmp *-16(%r13)
	.size sat_s48qV_entry, .-sat_s48qV_entry


==================== Asm code ====================
2018-03-16 15:59:01.390487843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s48qV_info:
	.quad	sat_s48qV_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:59:01.391363167 UTC

.section .text
.align 8
$wxs_s48qR_entry:
_c48vn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c48vr
_c48vq:
	cmpq $1,%r14
	je _c48vm
_c48vl:
	leaq sat_s48qV_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Ptr.$fShowFunPtr4_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48vr:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c48vm:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs_s48qR_entry, .-$wxs_s48qR_entry


==================== Asm code ====================
2018-03-16 15:59:01.392130012 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs_s48qR_info:
	.quad	$wxs_s48qR_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:01.392921521 UTC

.section .text
.align 8
sat_s48qW_entry:
_c48vt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c48vu
_c48vv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c48uL_info(%rip),%rax
	movq %rax,-40(%rbp)
	xorl %esi,%esi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c48vu:
	jmp *-16(%r13)
	.size sat_s48qW_entry, .-sat_s48qW_entry


==================== Asm code ====================
2018-03-16 15:59:01.394116365 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s48qW_info:
	.quad	sat_s48qW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:59:01.394971231 UTC

.section .text
.align 8
_c48uL:
_c48uL:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c48vy
_c48vx:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movl $16,%edx
	subq %rbx,%rdx
	cmpq $0,%rdx
	jle _c48vA
_c48vB:
	leaq n_s48qP_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq GHC.Ptr.$fShowFunPtr4_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq $wxs_s48qR_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rdx,%r14
	leaq -7(%r12),%rbx
	addq $24,%rbp
	jmp $wxs_s48qR_entry
_c48vA:
	addq $-72,%r12
	movq %rax,%rsi
	movq %rcx,%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c48vy:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c48uL, .-_c48uL


==================== Asm code ====================
2018-03-16 15:59:01.395765323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48uL_info:
	.quad	_c48uL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.396587524 UTC

.section .text
.align 8
.globl GHC.Ptr.$w$cshowsPrec_entry
.type GHC.Ptr.$w$cshowsPrec_entry, @object
GHC.Ptr.$w$cshowsPrec_entry:
_c48vD:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c48vH
_c48vG:
	leaq ls_s48qI_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq sat_s48qW_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rsi,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Ptr.$fShowFunPtr3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	leaq GHC.Ptr.$fShowFunPtr4_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48vH:
	movq $80,904(%r13)
	leaq GHC.Ptr.$w$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$w$cshowsPrec_entry, .-GHC.Ptr.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:01.397600224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$w$cshowsPrec_info
.type GHC.Ptr.$w$cshowsPrec_info, @object
GHC.Ptr.$w$cshowsPrec_info:
	.quad	GHC.Ptr.$w$cshowsPrec_entry
	.quad	0
	.quad	270582939662
	.quad	8589934605
	.quad	S48vI_srt


==================== Asm code ====================
2018-03-16 15:59:01.401369902 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.402215488 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry:
_c48wQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48wW
_c48wX:
	leaq block_c48wN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48wN
_c48wO:
	movq (%rbx),%rax
	jmp *(%rax)
_c48wW:
	leaq GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry, .-GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:59:01.402873472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec_info
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec_info, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.40355182 UTC

.section .text
.align 8
_c48wN:
_c48wN:
	movq 8(%rbp),%rax
	leaq block_c48wT_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48wN, .-_c48wN


==================== Asm code ====================
2018-03-16 15:59:01.404172173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48wN_info:
	.quad	_c48wN
	.quad	1
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.404942299 UTC

.section .text
.align 8
_c48wT:
_c48wT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48x1
_c48x0:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48x1:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48wT, .-_c48wT


==================== Asm code ====================
2018-03-16 15:59:01.406045558 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48wT_info:
	.quad	_c48wT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.407760951 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr2_closure
.type GHC.Ptr.$fShowFunPtr2_closure, @object
GHC.Ptr.$fShowFunPtr2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.411359264 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshow_closure
.type GHC.Ptr.$fShowPtr_$cshow_closure, @object
GHC.Ptr.$fShowPtr_$cshow_closure:
	.quad	GHC.Ptr.$fShowPtr_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.412201656 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr_$cshow_entry
.type GHC.Ptr.$fShowPtr_$cshow_entry, @object
GHC.Ptr.$fShowPtr_$cshow_entry:
_c48xr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48xx
_c48xy:
	leaq block_c48xo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48xo
_c48xp:
	movq (%rbx),%rax
	jmp *(%rax)
_c48xx:
	leaq GHC.Ptr.$fShowPtr_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowPtr_$cshow_entry, .-GHC.Ptr.$fShowPtr_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:01.412868143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshow_info
.type GHC.Ptr.$fShowPtr_$cshow_info, @object
GHC.Ptr.$fShowPtr_$cshow_info:
	.quad	GHC.Ptr.$fShowPtr_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.413993815 UTC

.section .text
.align 8
_c48xo:
_c48xo:
	leaq block_c48xu_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48xo, .-_c48xo


==================== Asm code ====================
2018-03-16 15:59:01.414593178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48xo_info:
	.quad	_c48xo
	.quad	0
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.415352025 UTC

.section .text
.align 8
_c48xu:
_c48xu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48xC
_c48xB:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48xC:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48xu, .-_c48xu


==================== Asm code ====================
2018-03-16 15:59:01.416040974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48xu_info:
	.quad	_c48xu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.420237351 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr1_closure
.type GHC.Ptr.$fShowPtr1_closure, @object
GHC.Ptr.$fShowPtr1_closure:
	.quad	GHC.Ptr.$fShowPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.421120917 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr1_entry
.type GHC.Ptr.$fShowPtr1_entry, @object
GHC.Ptr.$fShowPtr1_entry:
_c48y2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48y8
_c48y9:
	leaq block_c48xZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48xZ
_c48y0:
	movq (%rbx),%rax
	jmp *(%rax)
_c48y8:
	leaq GHC.Ptr.$fShowPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowPtr1_entry, .-GHC.Ptr.$fShowPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:01.421828044 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr1_info
.type GHC.Ptr.$fShowPtr1_info, @object
GHC.Ptr.$fShowPtr1_info:
	.quad	GHC.Ptr.$fShowPtr1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.422473205 UTC

.section .text
.align 8
_c48xZ:
_c48xZ:
	movq 8(%rbp),%rax
	leaq block_c48y5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48xZ, .-_c48xZ


==================== Asm code ====================
2018-03-16 15:59:01.423081798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48xZ_info:
	.quad	_c48xZ
	.quad	1
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.423817089 UTC

.section .text
.align 8
_c48y5:
_c48y5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48yd
_c48yc:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48yd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48y5, .-_c48y5


==================== Asm code ====================
2018-03-16 15:59:01.424487738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48y5_info:
	.quad	_c48y5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.426876327 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshowList_closure
.type GHC.Ptr.$fShowPtr_$cshowList_closure, @object
GHC.Ptr.$fShowPtr_$cshowList_closure:
	.quad	GHC.Ptr.$fShowPtr_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.427578013 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowPtr_$cshowList_entry
.type GHC.Ptr.$fShowPtr_$cshowList_entry, @object
GHC.Ptr.$fShowPtr_$cshowList_entry:
_c48yz:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Ptr.$fShowPtr1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Ptr.$fShowPtr_$cshowList_entry, .-GHC.Ptr.$fShowPtr_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:01.428587061 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_$cshowList_info
.type GHC.Ptr.$fShowPtr_$cshowList_info, @object
GHC.Ptr.$fShowPtr_$cshowList_info:
	.quad	GHC.Ptr.$fShowPtr_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S48vI_srt+64


==================== Asm code ====================
2018-03-16 15:59:01.430668252 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowPtr_closure
.type GHC.Ptr.$fShowPtr_closure, @object
GHC.Ptr.$fShowPtr_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure+3
	.quad	GHC.Ptr.$fShowPtr_$cshow_closure+1
	.quad	GHC.Ptr.$fShowPtr_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.434107574 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<_closure
.type GHC.Ptr.$fOrdFunPtr_$c<_closure, @object
GHC.Ptr.$fOrdFunPtr_$c<_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_info


==================== Asm code ====================
2018-03-16 15:59:01.434954825 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c<_entry
.type GHC.Ptr.$fOrdFunPtr_$c<_entry, @object
GHC.Ptr.$fOrdFunPtr_$c<_entry:
_c48yO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48yS
_c48yT:
	leaq block_c48yL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48yL
_c48yM:
	movq (%rbx),%rax
	jmp *(%rax)
_c48yS:
	leaq GHC.Ptr.$fOrdFunPtr_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c<_entry, .-GHC.Ptr.$fOrdFunPtr_$c<_entry


==================== Asm code ====================
2018-03-16 15:59:01.435640229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<_info
.type GHC.Ptr.$fOrdFunPtr_$c<_info, @object
GHC.Ptr.$fOrdFunPtr_$c<_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.436352494 UTC

.section .text
.align 8
_c48yL:
_c48yL:
	leaq block_c48yR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48yR
_c48yV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48yL, .-_c48yL


==================== Asm code ====================
2018-03-16 15:59:01.436996364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48yL_info:
	.quad	_c48yL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.437732206 UTC

.section .text
.align 8
_c48yR:
_c48yR:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48yR, .-_c48yR


==================== Asm code ====================
2018-03-16 15:59:01.438414901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48yR_info:
	.quad	_c48yR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.442726129 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_closure
.type GHC.Ptr.$fOrdFunPtr_$ccompare_closure, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:01.443592841 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_entry
.type GHC.Ptr.$fOrdFunPtr_$ccompare_entry, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_entry:
_c48zu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48zy
_c48zz:
	leaq block_c48zr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48zr
_c48zs:
	movq (%rbx),%rax
	jmp *(%rax)
_c48zy:
	leaq GHC.Ptr.$fOrdFunPtr_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$ccompare_entry, .-GHC.Ptr.$fOrdFunPtr_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:01.444325817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$ccompare_info
.type GHC.Ptr.$fOrdFunPtr_$ccompare_info, @object
GHC.Ptr.$fOrdFunPtr_$ccompare_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.445048858 UTC

.section .text
.align 8
_c48zr:
_c48zr:
	leaq block_c48zx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48zx
_c48zB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48zr, .-_c48zr


==================== Asm code ====================
2018-03-16 15:59:01.445686431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48zr_info:
	.quad	_c48zr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.446471399 UTC

.section .text
.align 8
_c48zx:
_c48zx:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jae _c48zP
_c48zQ:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48zN:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48zP:
	cmpq %rbx,%rax
	je _c48zN
_c48zM:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48zx, .-_c48zx


==================== Asm code ====================
2018-03-16 15:59:01.447182634 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48zx_info:
	.quad	_c48zx
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.450822234 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c==_closure
.type GHC.Ptr.$fEqFunPtr_$c==_closure, @object
GHC.Ptr.$fEqFunPtr_$c==_closure:
	.quad	GHC.Ptr.$fEqFunPtr_$c==_info


==================== Asm code ====================
2018-03-16 15:59:01.452037416 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqFunPtr_$c==_entry
.type GHC.Ptr.$fEqFunPtr_$c==_entry, @object
GHC.Ptr.$fEqFunPtr_$c==_entry:
_c48Al:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Ap
_c48Aq:
	leaq block_c48Ai_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Ai
_c48Aj:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Ap:
	leaq GHC.Ptr.$fEqFunPtr_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqFunPtr_$c==_entry, .-GHC.Ptr.$fEqFunPtr_$c==_entry


==================== Asm code ====================
2018-03-16 15:59:01.452708817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c==_info
.type GHC.Ptr.$fEqFunPtr_$c==_info, @object
GHC.Ptr.$fEqFunPtr_$c==_info:
	.quad	GHC.Ptr.$fEqFunPtr_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.453445588 UTC

.section .text
.align 8
_c48Ai:
_c48Ai:
	leaq block_c48Ao_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Ao
_c48As:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Ai, .-_c48Ai


==================== Asm code ====================
2018-03-16 15:59:01.454049437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ai_info:
	.quad	_c48Ai
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.45476571 UTC

.section .text
.align 8
_c48Ao:
_c48Ao:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48Ao, .-_c48Ao


==================== Asm code ====================
2018-03-16 15:59:01.455336434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ao_info:
	.quad	_c48Ao
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.458926778 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c/=_closure
.type GHC.Ptr.$fEqFunPtr_$c/=_closure, @object
GHC.Ptr.$fEqFunPtr_$c/=_closure:
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_info


==================== Asm code ====================
2018-03-16 15:59:01.459825786 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqFunPtr_$c/=_entry
.type GHC.Ptr.$fEqFunPtr_$c/=_entry, @object
GHC.Ptr.$fEqFunPtr_$c/=_entry:
_c48B1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48B5
_c48B6:
	leaq block_c48AY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48AY
_c48AZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c48B5:
	leaq GHC.Ptr.$fEqFunPtr_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqFunPtr_$c/=_entry, .-GHC.Ptr.$fEqFunPtr_$c/=_entry


==================== Asm code ====================
2018-03-16 15:59:01.460549227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_$c/=_info
.type GHC.Ptr.$fEqFunPtr_$c/=_info, @object
GHC.Ptr.$fEqFunPtr_$c/=_info:
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.461325226 UTC

.section .text
.align 8
_c48AY:
_c48AY:
	leaq block_c48B4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48B4
_c48B8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48AY, .-_c48AY


==================== Asm code ====================
2018-03-16 15:59:01.461959798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48AY_info:
	.quad	_c48AY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.463177996 UTC

.section .text
.align 8
_c48B4:
_c48B4:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c48Bh
_c48Bg:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Bh:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48B4, .-_c48B4


==================== Asm code ====================
2018-03-16 15:59:01.463804341 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48B4_info:
	.quad	_c48B4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.466167422 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqFunPtr_closure
.type GHC.Ptr.$fEqFunPtr_closure, @object
GHC.Ptr.$fEqFunPtr_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Ptr.$fEqFunPtr_$c==_closure+2
	.quad	GHC.Ptr.$fEqFunPtr_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.46976234 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<=_closure
.type GHC.Ptr.$fOrdFunPtr_$c<=_closure, @object
GHC.Ptr.$fOrdFunPtr_$c<=_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_info


==================== Asm code ====================
2018-03-16 15:59:01.470606699 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c<=_entry
.type GHC.Ptr.$fOrdFunPtr_$c<=_entry, @object
GHC.Ptr.$fOrdFunPtr_$c<=_entry:
_c48BM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48BQ
_c48BR:
	leaq block_c48BJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48BJ
_c48BK:
	movq (%rbx),%rax
	jmp *(%rax)
_c48BQ:
	leaq GHC.Ptr.$fOrdFunPtr_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c<=_entry, .-GHC.Ptr.$fOrdFunPtr_$c<=_entry


==================== Asm code ====================
2018-03-16 15:59:01.471345646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c<=_info
.type GHC.Ptr.$fOrdFunPtr_$c<=_info, @object
GHC.Ptr.$fOrdFunPtr_$c<=_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.472082239 UTC

.section .text
.align 8
_c48BJ:
_c48BJ:
	leaq block_c48BP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48BP
_c48BT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48BJ, .-_c48BJ


==================== Asm code ====================
2018-03-16 15:59:01.472674274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48BJ_info:
	.quad	_c48BJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.473475559 UTC

.section .text
.align 8
_c48BP:
_c48BP:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48C1
_c48C2:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48C1:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48BP, .-_c48BP


==================== Asm code ====================
2018-03-16 15:59:01.474584548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48BP_info:
	.quad	_c48BP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.478468731 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmax_closure
.type GHC.Ptr.$fOrdFunPtr_$cmax_closure, @object
GHC.Ptr.$fOrdFunPtr_$cmax_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:01.479294186 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$cmax_entry
.type GHC.Ptr.$fOrdFunPtr_$cmax_entry, @object
GHC.Ptr.$fOrdFunPtr_$cmax_entry:
_c48Cw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48CA
_c48CB:
	leaq block_c48Ct_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Ct
_c48Cu:
	movq (%rbx),%rax
	jmp *(%rax)
_c48CA:
	leaq GHC.Ptr.$fOrdFunPtr_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$cmax_entry, .-GHC.Ptr.$fOrdFunPtr_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:01.479986909 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmax_info
.type GHC.Ptr.$fOrdFunPtr_$cmax_info, @object
GHC.Ptr.$fOrdFunPtr_$cmax_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.480751159 UTC

.section .text
.align 8
_c48Ct:
_c48Ct:
	leaq block_c48Cz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48Cz
_c48CD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Ct, .-_c48Ct


==================== Asm code ====================
2018-03-16 15:59:01.481366999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ct_info:
	.quad	_c48Ct
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.482055087 UTC

.section .text
.align 8
_c48Cz:
_c48Cz:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48CL
_c48CM:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48CL:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Cz, .-_c48Cz


==================== Asm code ====================
2018-03-16 15:59:01.48267073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Cz_info:
	.quad	_c48Cz
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.486703371 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>=_closure
.type GHC.Ptr.$fOrdFunPtr_$c>=_closure, @object
GHC.Ptr.$fOrdFunPtr_$c>=_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_info


==================== Asm code ====================
2018-03-16 15:59:01.487531314 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c>=_entry
.type GHC.Ptr.$fOrdFunPtr_$c>=_entry, @object
GHC.Ptr.$fOrdFunPtr_$c>=_entry:
_c48Dg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Dk
_c48Dl:
	leaq block_c48Dd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Dd
_c48De:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Dk:
	leaq GHC.Ptr.$fOrdFunPtr_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c>=_entry, .-GHC.Ptr.$fOrdFunPtr_$c>=_entry


==================== Asm code ====================
2018-03-16 15:59:01.488177585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>=_info
.type GHC.Ptr.$fOrdFunPtr_$c>=_info, @object
GHC.Ptr.$fOrdFunPtr_$c>=_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.488866603 UTC

.section .text
.align 8
_c48Dd:
_c48Dd:
	leaq block_c48Dj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Dj
_c48Dn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Dd, .-_c48Dd


==================== Asm code ====================
2018-03-16 15:59:01.48986461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Dd_info:
	.quad	_c48Dd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.490624533 UTC

.section .text
.align 8
_c48Dj:
_c48Dj:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48Dv
_c48Dw:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Dv:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48Dj, .-_c48Dj


==================== Asm code ====================
2018-03-16 15:59:01.491274337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Dj_info:
	.quad	_c48Dj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.49536608 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>_closure
.type GHC.Ptr.$fOrdFunPtr_$c>_closure, @object
GHC.Ptr.$fOrdFunPtr_$c>_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_info


==================== Asm code ====================
2018-03-16 15:59:01.496164367 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$c>_entry
.type GHC.Ptr.$fOrdFunPtr_$c>_entry, @object
GHC.Ptr.$fOrdFunPtr_$c>_entry:
_c48E0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48E4
_c48E5:
	leaq block_c48DX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48DX
_c48DY:
	movq (%rbx),%rax
	jmp *(%rax)
_c48E4:
	leaq GHC.Ptr.$fOrdFunPtr_$c>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$c>_entry, .-GHC.Ptr.$fOrdFunPtr_$c>_entry


==================== Asm code ====================
2018-03-16 15:59:01.496870903 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$c>_info
.type GHC.Ptr.$fOrdFunPtr_$c>_info, @object
GHC.Ptr.$fOrdFunPtr_$c>_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.497671829 UTC

.section .text
.align 8
_c48DX:
_c48DX:
	leaq block_c48E3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48E3
_c48E7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48DX, .-_c48DX


==================== Asm code ====================
2018-03-16 15:59:01.498895855 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48DX_info:
	.quad	_c48DX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.499533801 UTC

.section .text
.align 8
_c48E3:
_c48E3:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48E3, .-_c48E3


==================== Asm code ====================
2018-03-16 15:59:01.5001251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48E3_info:
	.quad	_c48E3
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.503778626 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmin_closure
.type GHC.Ptr.$fOrdFunPtr_$cmin_closure, @object
GHC.Ptr.$fOrdFunPtr_$cmin_closure:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:01.504596514 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdFunPtr_$cmin_entry
.type GHC.Ptr.$fOrdFunPtr_$cmin_entry, @object
GHC.Ptr.$fOrdFunPtr_$cmin_entry:
_c48EG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48EK
_c48EL:
	leaq block_c48ED_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48ED
_c48EE:
	movq (%rbx),%rax
	jmp *(%rax)
_c48EK:
	leaq GHC.Ptr.$fOrdFunPtr_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdFunPtr_$cmin_entry, .-GHC.Ptr.$fOrdFunPtr_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:01.505462593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_$cmin_info
.type GHC.Ptr.$fOrdFunPtr_$cmin_info, @object
GHC.Ptr.$fOrdFunPtr_$cmin_info:
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.506182447 UTC

.section .text
.align 8
_c48ED:
_c48ED:
	leaq block_c48EJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48EJ
_c48EN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48ED, .-_c48ED


==================== Asm code ====================
2018-03-16 15:59:01.506799662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48ED_info:
	.quad	_c48ED
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.507483417 UTC

.section .text
.align 8
_c48EJ:
_c48EJ:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48EV
_c48EW:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48EV:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48EJ, .-_c48EJ


==================== Asm code ====================
2018-03-16 15:59:01.508150208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48EJ_info:
	.quad	_c48EJ
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.510385629 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdFunPtr_closure
.type GHC.Ptr.$fOrdFunPtr_closure, @object
GHC.Ptr.$fOrdFunPtr_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Ptr.$fEqFunPtr_closure+1
	.quad	GHC.Ptr.$fOrdFunPtr_$ccompare_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c<_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c<=_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c>_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$c>=_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$cmax_closure+2
	.quad	GHC.Ptr.$fOrdFunPtr_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.513925933 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<_closure
.type GHC.Ptr.$fOrdPtr_$c<_closure, @object
GHC.Ptr.$fOrdPtr_$c<_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c<_info


==================== Asm code ====================
2018-03-16 15:59:01.514766389 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c<_entry
.type GHC.Ptr.$fOrdPtr_$c<_entry, @object
GHC.Ptr.$fOrdPtr_$c<_entry:
_c48Fr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Fv
_c48Fw:
	leaq block_c48Fo_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Fo
_c48Fp:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Fv:
	leaq GHC.Ptr.$fOrdPtr_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c<_entry, .-GHC.Ptr.$fOrdPtr_$c<_entry


==================== Asm code ====================
2018-03-16 15:59:01.515410295 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<_info
.type GHC.Ptr.$fOrdPtr_$c<_info, @object
GHC.Ptr.$fOrdPtr_$c<_info:
	.quad	GHC.Ptr.$fOrdPtr_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.516110208 UTC

.section .text
.align 8
_c48Fo:
_c48Fo:
	leaq block_c48Fu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Fu
_c48Fy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Fo, .-_c48Fo


==================== Asm code ====================
2018-03-16 15:59:01.516695293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Fo_info:
	.quad	_c48Fo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.517845987 UTC

.section .text
.align 8
_c48Fu:
_c48Fu:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48Fu, .-_c48Fu


==================== Asm code ====================
2018-03-16 15:59:01.518453938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Fu_info:
	.quad	_c48Fu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.522830007 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$ccompare_closure
.type GHC.Ptr.$fOrdPtr_$ccompare_closure, @object
GHC.Ptr.$fOrdPtr_$ccompare_closure:
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_info


==================== Asm code ====================
2018-03-16 15:59:01.523709303 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$ccompare_entry
.type GHC.Ptr.$fOrdPtr_$ccompare_entry, @object
GHC.Ptr.$fOrdPtr_$ccompare_entry:
_c48G7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Gb
_c48Gc:
	leaq block_c48G4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48G4
_c48G5:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Gb:
	leaq GHC.Ptr.$fOrdPtr_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$ccompare_entry, .-GHC.Ptr.$fOrdPtr_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:59:01.524397876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$ccompare_info
.type GHC.Ptr.$fOrdPtr_$ccompare_info, @object
GHC.Ptr.$fOrdPtr_$ccompare_info:
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.52514959 UTC

.section .text
.align 8
_c48G4:
_c48G4:
	leaq block_c48Ga_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Ga
_c48Ge:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48G4, .-_c48G4


==================== Asm code ====================
2018-03-16 15:59:01.525967868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48G4_info:
	.quad	_c48G4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.526728991 UTC

.section .text
.align 8
_c48Ga:
_c48Ga:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	jae _c48Gs
_c48Gt:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Gq:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Gs:
	cmpq %rbx,%rax
	je _c48Gq
_c48Gp:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48Ga, .-_c48Ga


==================== Asm code ====================
2018-03-16 15:59:01.527439561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ga_info:
	.quad	_c48Ga
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.531065384 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c==_closure
.type GHC.Ptr.$fEqPtr_$c==_closure, @object
GHC.Ptr.$fEqPtr_$c==_closure:
	.quad	GHC.Ptr.$fEqPtr_$c==_info


==================== Asm code ====================
2018-03-16 15:59:01.531909737 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqPtr_$c==_entry
.type GHC.Ptr.$fEqPtr_$c==_entry, @object
GHC.Ptr.$fEqPtr_$c==_entry:
_c48GY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48H2
_c48H3:
	leaq block_c48GV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48GV
_c48GW:
	movq (%rbx),%rax
	jmp *(%rax)
_c48H2:
	leaq GHC.Ptr.$fEqPtr_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqPtr_$c==_entry, .-GHC.Ptr.$fEqPtr_$c==_entry


==================== Asm code ====================
2018-03-16 15:59:01.532979934 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c==_info
.type GHC.Ptr.$fEqPtr_$c==_info, @object
GHC.Ptr.$fEqPtr_$c==_info:
	.quad	GHC.Ptr.$fEqPtr_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.533733919 UTC

.section .text
.align 8
_c48GV:
_c48GV:
	leaq block_c48H1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48H1
_c48H5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48GV, .-_c48GV


==================== Asm code ====================
2018-03-16 15:59:01.534350607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48GV_info:
	.quad	_c48GV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.535030033 UTC

.section .text
.align 8
_c48H1:
_c48H1:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48H1, .-_c48H1


==================== Asm code ====================
2018-03-16 15:59:01.535628603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48H1_info:
	.quad	_c48H1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.53926572 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c/=_closure
.type GHC.Ptr.$fEqPtr_$c/=_closure, @object
GHC.Ptr.$fEqPtr_$c/=_closure:
	.quad	GHC.Ptr.$fEqPtr_$c/=_info


==================== Asm code ====================
2018-03-16 15:59:01.540109137 UTC

.section .text
.align 8
.globl GHC.Ptr.$fEqPtr_$c/=_entry
.type GHC.Ptr.$fEqPtr_$c/=_entry, @object
GHC.Ptr.$fEqPtr_$c/=_entry:
_c48HE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48HI
_c48HJ:
	leaq block_c48HB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48HB
_c48HC:
	movq (%rbx),%rax
	jmp *(%rax)
_c48HI:
	leaq GHC.Ptr.$fEqPtr_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fEqPtr_$c/=_entry, .-GHC.Ptr.$fEqPtr_$c/=_entry


==================== Asm code ====================
2018-03-16 15:59:01.540823982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_$c/=_info
.type GHC.Ptr.$fEqPtr_$c/=_info, @object
GHC.Ptr.$fEqPtr_$c/=_info:
	.quad	GHC.Ptr.$fEqPtr_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.541828519 UTC

.section .text
.align 8
_c48HB:
_c48HB:
	leaq block_c48HH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48HH
_c48HL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48HB, .-_c48HB


==================== Asm code ====================
2018-03-16 15:59:01.542485823 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48HB_info:
	.quad	_c48HB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.543265995 UTC

.section .text
.align 8
_c48HH:
_c48HH:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _c48HU
_c48HT:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48HU:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48HH, .-_c48HH


==================== Asm code ====================
2018-03-16 15:59:01.544375727 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48HH_info:
	.quad	_c48HH
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.54720212 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fEqPtr_closure
.type GHC.Ptr.$fEqPtr_closure, @object
GHC.Ptr.$fEqPtr_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.Ptr.$fEqPtr_$c==_closure+2
	.quad	GHC.Ptr.$fEqPtr_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.55177744 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<=_closure
.type GHC.Ptr.$fOrdPtr_$c<=_closure, @object
GHC.Ptr.$fOrdPtr_$c<=_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c<=_info


==================== Asm code ====================
2018-03-16 15:59:01.552588082 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c<=_entry
.type GHC.Ptr.$fOrdPtr_$c<=_entry, @object
GHC.Ptr.$fOrdPtr_$c<=_entry:
_c48Ip:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48It
_c48Iu:
	leaq block_c48Im_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Im
_c48In:
	movq (%rbx),%rax
	jmp *(%rax)
_c48It:
	leaq GHC.Ptr.$fOrdPtr_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c<=_entry, .-GHC.Ptr.$fOrdPtr_$c<=_entry


==================== Asm code ====================
2018-03-16 15:59:01.553295128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c<=_info
.type GHC.Ptr.$fOrdPtr_$c<=_info, @object
GHC.Ptr.$fOrdPtr_$c<=_info:
	.quad	GHC.Ptr.$fOrdPtr_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.55400121 UTC

.section .text
.align 8
_c48Im:
_c48Im:
	leaq block_c48Is_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Is
_c48Iw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Im, .-_c48Im


==================== Asm code ====================
2018-03-16 15:59:01.554668337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Im_info:
	.quad	_c48Im
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.555438275 UTC

.section .text
.align 8
_c48Is:
_c48Is:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48IE
_c48IF:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48IE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48Is, .-_c48Is


==================== Asm code ====================
2018-03-16 15:59:01.556069283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Is_info:
	.quad	_c48Is
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.560210484 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmax_closure
.type GHC.Ptr.$fOrdPtr_$cmax_closure, @object
GHC.Ptr.$fOrdPtr_$cmax_closure:
	.quad	GHC.Ptr.$fOrdPtr_$cmax_info


==================== Asm code ====================
2018-03-16 15:59:01.561016643 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$cmax_entry
.type GHC.Ptr.$fOrdPtr_$cmax_entry, @object
GHC.Ptr.$fOrdPtr_$cmax_entry:
_c48J9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Jd
_c48Je:
	leaq block_c48J6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48J6
_c48J7:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Jd:
	leaq GHC.Ptr.$fOrdPtr_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$cmax_entry, .-GHC.Ptr.$fOrdPtr_$cmax_entry


==================== Asm code ====================
2018-03-16 15:59:01.561978651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmax_info
.type GHC.Ptr.$fOrdPtr_$cmax_info, @object
GHC.Ptr.$fOrdPtr_$cmax_info:
	.quad	GHC.Ptr.$fOrdPtr_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.562733755 UTC

.section .text
.align 8
_c48J6:
_c48J6:
	leaq block_c48Jc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48Jc
_c48Jg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48J6, .-_c48J6


==================== Asm code ====================
2018-03-16 15:59:01.563331607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48J6_info:
	.quad	_c48J6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.564057703 UTC

.section .text
.align 8
_c48Jc:
_c48Jc:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48Jo
_c48Jp:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48Jo:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Jc, .-_c48Jc


==================== Asm code ====================
2018-03-16 15:59:01.564658861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Jc_info:
	.quad	_c48Jc
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.568399513 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>=_closure
.type GHC.Ptr.$fOrdPtr_$c>=_closure, @object
GHC.Ptr.$fOrdPtr_$c>=_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c>=_info


==================== Asm code ====================
2018-03-16 15:59:01.569614807 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c>=_entry
.type GHC.Ptr.$fOrdPtr_$c>=_entry, @object
GHC.Ptr.$fOrdPtr_$c>=_entry:
_c48JT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48JX
_c48JY:
	leaq block_c48JQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48JQ
_c48JR:
	movq (%rbx),%rax
	jmp *(%rax)
_c48JX:
	leaq GHC.Ptr.$fOrdPtr_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c>=_entry, .-GHC.Ptr.$fOrdPtr_$c>=_entry


==================== Asm code ====================
2018-03-16 15:59:01.570277323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>=_info
.type GHC.Ptr.$fOrdPtr_$c>=_info, @object
GHC.Ptr.$fOrdPtr_$c>=_info:
	.quad	GHC.Ptr.$fOrdPtr_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.57098739 UTC

.section .text
.align 8
_c48JQ:
_c48JQ:
	leaq block_c48JW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48JW
_c48K0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48JQ, .-_c48JQ


==================== Asm code ====================
2018-03-16 15:59:01.571531979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48JQ_info:
	.quad	_c48JQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.572245683 UTC

.section .text
.align 8
_c48JW:
_c48JW:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48K8
_c48K9:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48K8:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48JW, .-_c48JW


==================== Asm code ====================
2018-03-16 15:59:01.572879749 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48JW_info:
	.quad	_c48JW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.576620707 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>_closure
.type GHC.Ptr.$fOrdPtr_$c>_closure, @object
GHC.Ptr.$fOrdPtr_$c>_closure:
	.quad	GHC.Ptr.$fOrdPtr_$c>_info


==================== Asm code ====================
2018-03-16 15:59:01.577478116 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$c>_entry
.type GHC.Ptr.$fOrdPtr_$c>_entry, @object
GHC.Ptr.$fOrdPtr_$c>_entry:
_c48KD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48KH
_c48KI:
	leaq block_c48KA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48KA
_c48KB:
	movq (%rbx),%rax
	jmp *(%rax)
_c48KH:
	leaq GHC.Ptr.$fOrdPtr_$c>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$c>_entry, .-GHC.Ptr.$fOrdPtr_$c>_entry


==================== Asm code ====================
2018-03-16 15:59:01.578186709 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$c>_info
.type GHC.Ptr.$fOrdPtr_$c>_info, @object
GHC.Ptr.$fOrdPtr_$c>_info:
	.quad	GHC.Ptr.$fOrdPtr_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.578945348 UTC

.section .text
.align 8
_c48KA:
_c48KA:
	leaq block_c48KG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48KG
_c48KK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48KA, .-_c48KA


==================== Asm code ====================
2018-03-16 15:59:01.579547534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48KA_info:
	.quad	_c48KA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.580570069 UTC

.section .text
.align 8
_c48KG:
_c48KG:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	setb %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c48KG, .-_c48KG


==================== Asm code ====================
2018-03-16 15:59:01.581210784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48KG_info:
	.quad	_c48KG
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.584750971 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmin_closure
.type GHC.Ptr.$fOrdPtr_$cmin_closure, @object
GHC.Ptr.$fOrdPtr_$cmin_closure:
	.quad	GHC.Ptr.$fOrdPtr_$cmin_info


==================== Asm code ====================
2018-03-16 15:59:01.585618491 UTC

.section .text
.align 8
.globl GHC.Ptr.$fOrdPtr_$cmin_entry
.type GHC.Ptr.$fOrdPtr_$cmin_entry, @object
GHC.Ptr.$fOrdPtr_$cmin_entry:
_c48Lj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Ln
_c48Lo:
	leaq block_c48Lg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Lg
_c48Lh:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Ln:
	leaq GHC.Ptr.$fOrdPtr_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fOrdPtr_$cmin_entry, .-GHC.Ptr.$fOrdPtr_$cmin_entry


==================== Asm code ====================
2018-03-16 15:59:01.586297633 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_$cmin_info
.type GHC.Ptr.$fOrdPtr_$cmin_info, @object
GHC.Ptr.$fOrdPtr_$cmin_info:
	.quad	GHC.Ptr.$fOrdPtr_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.587032445 UTC

.section .text
.align 8
_c48Lg:
_c48Lg:
	leaq block_c48Lm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48Lm
_c48Lq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Lg, .-_c48Lg


==================== Asm code ====================
2018-03-16 15:59:01.587652222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Lg_info:
	.quad	_c48Lg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.588362635 UTC

.section .text
.align 8
_c48Lm:
_c48Lm:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jae _c48Ly
_c48Lz:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c48Ly:
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Lm, .-_c48Lm


==================== Asm code ====================
2018-03-16 15:59:01.589006195 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Lm_info:
	.quad	_c48Lm
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.591263222 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fOrdPtr_closure
.type GHC.Ptr.$fOrdPtr_closure, @object
GHC.Ptr.$fOrdPtr_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.Ptr.$fEqPtr_closure+1
	.quad	GHC.Ptr.$fOrdPtr_$ccompare_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c<_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c<=_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c>_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$c>=_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$cmax_closure+2
	.quad	GHC.Ptr.$fOrdPtr_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.592956123 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.nullPtr_closure
.type GHC.Ptr.nullPtr_closure, @object
GHC.Ptr.nullPtr_closure:
	.quad	GHC.Ptr.Ptr_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.595190675 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtr1_closure
.type GHC.Ptr.castPtr1_closure, @object
GHC.Ptr.castPtr1_closure:
	.quad	GHC.Ptr.castPtr1_info


==================== Asm code ====================
2018-03-16 15:59:01.595895062 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtr1_entry
.type GHC.Ptr.castPtr1_entry, @object
GHC.Ptr.castPtr1_entry:
_c48M2:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Ptr.castPtr1_entry, .-GHC.Ptr.castPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:01.596494696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtr1_info
.type GHC.Ptr.castPtr1_info, @object
GHC.Ptr.castPtr1_info:
	.quad	GHC.Ptr.castPtr1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.598646642 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtr_closure
.type GHC.Ptr.castPtr_closure, @object
GHC.Ptr.castPtr_closure:
	.quad	GHC.Ptr.castPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.599272714 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtr_entry
.type GHC.Ptr.castPtr_entry, @object
GHC.Ptr.castPtr_entry:
_c48Mf:
	jmp GHC.Ptr.castPtr1_entry
	.size GHC.Ptr.castPtr_entry, .-GHC.Ptr.castPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.599878396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtr_info
.type GHC.Ptr.castPtr_info, @object
GHC.Ptr.castPtr_info:
	.quad	GHC.Ptr.castPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.604184644 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.plusPtr_closure
.type GHC.Ptr.plusPtr_closure, @object
GHC.Ptr.plusPtr_closure:
	.quad	GHC.Ptr.plusPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.604989285 UTC

.section .text
.align 8
.globl GHC.Ptr.plusPtr_entry
.type GHC.Ptr.plusPtr_entry, @object
GHC.Ptr.plusPtr_entry:
_c48Mt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48MF
_c48MG:
	leaq block_c48Mq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Mq
_c48Mr:
	movq (%rbx),%rax
	jmp *(%rax)
_c48MF:
	leaq GHC.Ptr.plusPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.plusPtr_entry, .-GHC.Ptr.plusPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.605708026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.plusPtr_info
.type GHC.Ptr.plusPtr_info, @object
GHC.Ptr.plusPtr_info:
	.quad	GHC.Ptr.plusPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.606417166 UTC

.section .text
.align 8
_c48Mq:
_c48Mq:
	leaq block_c48Mw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Mw
_c48Mx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Mq, .-_c48Mq


==================== Asm code ====================
2018-03-16 15:59:01.607063796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Mq_info:
	.quad	_c48Mq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.607811543 UTC

.section .text
.align 8
_c48Mw:
_c48Mw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48MK
_c48MJ:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	leaq GHC.Ptr.Ptr_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48MK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c48Mw, .-_c48Mw


==================== Asm code ====================
2018-03-16 15:59:01.608520405 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Mw_info:
	.quad	_c48Mw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.613640412 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.alignPtr_closure
.type GHC.Ptr.alignPtr_closure, @object
GHC.Ptr.alignPtr_closure:
	.quad	GHC.Ptr.alignPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.61447466 UTC

.section .text
.align 8
.globl GHC.Ptr.alignPtr_entry
.type GHC.Ptr.alignPtr_entry, @object
GHC.Ptr.alignPtr_entry:
_c48Nd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Nh
_c48Ni:
	leaq block_c48Na_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Na
_c48Nb:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Nh:
	leaq GHC.Ptr.alignPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.alignPtr_entry, .-GHC.Ptr.alignPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.615129135 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.alignPtr_info
.type GHC.Ptr.alignPtr_info, @object
GHC.Ptr.alignPtr_info:
	.quad	GHC.Ptr.alignPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.615872822 UTC

.section .text
.align 8
_c48Na:
_c48Na:
	leaq block_c48Ng_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c48Ng
_c48Nk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Na, .-_c48Na


==================== Asm code ====================
2018-03-16 15:59:01.616481761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Na_info:
	.quad	_c48Na
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.617207514 UTC

.section .text
.align 8
_c48Ng:
_c48Ng:
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq 8(%rbp),%rax
	xorq %rdx,%rdx
	divq %rbx
	testq %rdx,%rdx
	jne _u48NN
_c48NJ:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_u48NN:
	movq %rdx,(%rbp)
	movq %rbx,16(%rbp)
	jmp _c48Nt
	.size _c48Ng, .-_c48Ng


==================== Asm code ====================
2018-03-16 15:59:01.618025118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ng_info:
	.quad	_c48Ng
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.618755256 UTC

.section .text
.align 8
_c48Nt:
_c48Nt:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c48NG
_c48NF:
	leaq GHC.Ptr.Ptr_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	subq %rax,%rbx
	movq 8(%rbp),%rax
	addq %rbx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48NG:
	movq $16,904(%r13)
	leaq block_c48Ns_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c48Nt, .-_c48Nt


==================== Asm code ====================
2018-03-16 15:59:01.619455084 UTC

.section .text
.align 8
_c48Ns:
_c48Ns:
	movq %rbx,(%rbp)
	jmp _c48Nt
	.size _c48Ns, .-_c48Ns


==================== Asm code ====================
2018-03-16 15:59:01.620011374 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ns_info:
	.quad	_c48Ns
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.624449087 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.minusPtr_closure
.type GHC.Ptr.minusPtr_closure, @object
GHC.Ptr.minusPtr_closure:
	.quad	GHC.Ptr.minusPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.625397258 UTC

.section .text
.align 8
.globl GHC.Ptr.minusPtr_entry
.type GHC.Ptr.minusPtr_entry, @object
GHC.Ptr.minusPtr_entry:
_c48Ot:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48OF
_c48OG:
	leaq block_c48Oq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Oq
_c48Or:
	movq (%rbx),%rax
	jmp *(%rax)
_c48OF:
	leaq GHC.Ptr.minusPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.minusPtr_entry, .-GHC.Ptr.minusPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.626081609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.minusPtr_info
.type GHC.Ptr.minusPtr_info, @object
GHC.Ptr.minusPtr_info:
	.quad	GHC.Ptr.minusPtr_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:59:01.626827858 UTC

.section .text
.align 8
_c48Oq:
_c48Oq:
	leaq block_c48Ow_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c48Ow
_c48Ox:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c48Oq, .-_c48Oq


==================== Asm code ====================
2018-03-16 15:59:01.627465782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Oq_info:
	.quad	_c48Oq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.62818816 UTC

.section .text
.align 8
_c48Ow:
_c48Ow:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48OK
_c48OJ:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48OK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c48Ow, .-_c48Ow


==================== Asm code ====================
2018-03-16 15:59:01.628811156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Ow_info:
	.quad	_c48Ow
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.630698963 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.nullFunPtr_closure
.type GHC.Ptr.nullFunPtr_closure, @object
GHC.Ptr.nullFunPtr_closure:
	.quad	GHC.Ptr.FunPtr_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.633075337 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtr1_closure
.type GHC.Ptr.castFunPtr1_closure, @object
GHC.Ptr.castFunPtr1_closure:
	.quad	GHC.Ptr.castFunPtr1_info


==================== Asm code ====================
2018-03-16 15:59:01.634632829 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtr1_entry
.type GHC.Ptr.castFunPtr1_entry, @object
GHC.Ptr.castFunPtr1_entry:
_c48Pb:
	movq %r14,%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Ptr.castFunPtr1_entry, .-GHC.Ptr.castFunPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:01.635611319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtr1_info
.type GHC.Ptr.castFunPtr1_info, @object
GHC.Ptr.castFunPtr1_info:
	.quad	GHC.Ptr.castFunPtr1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.637665484 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtr_closure
.type GHC.Ptr.castFunPtr_closure, @object
GHC.Ptr.castFunPtr_closure:
	.quad	GHC.Ptr.castFunPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.638288258 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtr_entry
.type GHC.Ptr.castFunPtr_entry, @object
GHC.Ptr.castFunPtr_entry:
_c48Po:
	jmp GHC.Ptr.castFunPtr1_entry
	.size GHC.Ptr.castFunPtr_entry, .-GHC.Ptr.castFunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.638854482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtr_info
.type GHC.Ptr.castFunPtr_info, @object
GHC.Ptr.castFunPtr_info:
	.quad	GHC.Ptr.castFunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.641916081 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castFunPtrToPtr_closure
.type GHC.Ptr.castFunPtrToPtr_closure, @object
GHC.Ptr.castFunPtrToPtr_closure:
	.quad	GHC.Ptr.castFunPtrToPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.642747899 UTC

.section .text
.align 8
.globl GHC.Ptr.castFunPtrToPtr_entry
.type GHC.Ptr.castFunPtrToPtr_entry, @object
GHC.Ptr.castFunPtrToPtr_entry:
_c48PC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48PG
_c48PH:
	leaq block_c48Pz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48Pz
_c48PA:
	movq (%rbx),%rax
	jmp *(%rax)
_c48PG:
	leaq GHC.Ptr.castFunPtrToPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.castFunPtrToPtr_entry, .-GHC.Ptr.castFunPtrToPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.643431573 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castFunPtrToPtr_info
.type GHC.Ptr.castFunPtrToPtr_info, @object
GHC.Ptr.castFunPtrToPtr_info:
	.quad	GHC.Ptr.castFunPtrToPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.644189852 UTC

.section .text
.align 8
_c48Pz:
_c48Pz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48PK
_c48PJ:
	movq 7(%rbx),%rax
	leaq GHC.Ptr.Ptr_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48PK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c48Pz, .-_c48Pz


==================== Asm code ====================
2018-03-16 15:59:01.644855599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Pz_info:
	.quad	_c48Pz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.649032057 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.64991428 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry:
_c48Q5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Qb
_c48Qc:
	leaq block_c48Q2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Q2
_c48Q3:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Qb:
	leaq GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry, .-GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry


==================== Asm code ====================
2018-03-16 15:59:01.650571349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info
.type GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info, @object
GHC.Ptr.$fShowFunPtr_$cshowsPrec1_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_entry
	.quad	0
	.quad	73014444046
	.quad	12884901911
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.65128131 UTC

.section .text
.align 8
_c48Q2:
_c48Q2:
	movq 8(%rbp),%rax
	leaq block_c48Q8_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48Q2, .-_c48Q2


==================== Asm code ====================
2018-03-16 15:59:01.651891878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Q2_info:
	.quad	_c48Q2
	.quad	1
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.652608691 UTC

.section .text
.align 8
_c48Q8:
_c48Q8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48Qg
_c48Qf:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Qg:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48Q8, .-_c48Q8


==================== Asm code ====================
2018-03-16 15:59:01.653313506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Q8_info:
	.quad	_c48Q8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.6569857 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshow_closure
.type GHC.Ptr.$fShowFunPtr_$cshow_closure, @object
GHC.Ptr.$fShowFunPtr_$cshow_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.658227686 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshow_entry
.type GHC.Ptr.$fShowFunPtr_$cshow_entry, @object
GHC.Ptr.$fShowFunPtr_$cshow_entry:
_c48QF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48QL
_c48QM:
	leaq block_c48QC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48QC
_c48QD:
	movq (%rbx),%rax
	jmp *(%rax)
_c48QL:
	leaq GHC.Ptr.$fShowFunPtr_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr_$cshow_entry, .-GHC.Ptr.$fShowFunPtr_$cshow_entry


==================== Asm code ====================
2018-03-16 15:59:01.658831445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshow_info
.type GHC.Ptr.$fShowFunPtr_$cshow_info, @object
GHC.Ptr.$fShowFunPtr_$cshow_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.659470791 UTC

.section .text
.align 8
_c48QC:
_c48QC:
	leaq block_c48QI_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48QC, .-_c48QC


==================== Asm code ====================
2018-03-16 15:59:01.660090282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48QC_info:
	.quad	_c48QC
	.quad	0
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.660783428 UTC

.section .text
.align 8
_c48QI:
_c48QI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48QQ
_c48QP:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48QQ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48QI, .-_c48QI


==================== Asm code ====================
2018-03-16 15:59:01.661444274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48QI_info:
	.quad	_c48QI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.665053983 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr1_closure
.type GHC.Ptr.$fShowFunPtr1_closure, @object
GHC.Ptr.$fShowFunPtr1_closure:
	.quad	GHC.Ptr.$fShowFunPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.666373433 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr1_entry
.type GHC.Ptr.$fShowFunPtr1_entry, @object
GHC.Ptr.$fShowFunPtr1_entry:
_c48Rg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c48Rm
_c48Rn:
	leaq block_c48Rd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c48Rd
_c48Re:
	movq (%rbx),%rax
	jmp *(%rax)
_c48Rm:
	leaq GHC.Ptr.$fShowFunPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.$fShowFunPtr1_entry, .-GHC.Ptr.$fShowFunPtr1_entry


==================== Asm code ====================
2018-03-16 15:59:01.667008357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr1_info
.type GHC.Ptr.$fShowFunPtr1_info, @object
GHC.Ptr.$fShowFunPtr1_info:
	.quad	GHC.Ptr.$fShowFunPtr1_entry
	.quad	0
	.quad	279172874254
	.quad	8589934607
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.667706052 UTC

.section .text
.align 8
_c48Rd:
_c48Rd:
	movq 8(%rbp),%rax
	leaq block_c48Rj_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Ptr.$w$cshowsPrec_entry
	.size _c48Rd, .-_c48Rd


==================== Asm code ====================
2018-03-16 15:59:01.668316761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Rd_info:
	.quad	_c48Rd
	.quad	1
	.quad	4294967326
	.quad	S48vI_srt+40


==================== Asm code ====================
2018-03-16 15:59:01.669430631 UTC

.section .text
.align 8
_c48Rj:
_c48Rj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c48Rr
_c48Rq:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Rr:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c48Rj, .-_c48Rj


==================== Asm code ====================
2018-03-16 15:59:01.670044596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48Rj_info:
	.quad	_c48Rj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.672230062 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowList_closure
.type GHC.Ptr.$fShowFunPtr_$cshowList_closure, @object
GHC.Ptr.$fShowFunPtr_$cshowList_closure:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.672920446 UTC

.section .text
.align 8
.globl GHC.Ptr.$fShowFunPtr_$cshowList_entry
.type GHC.Ptr.$fShowFunPtr_$cshowList_entry, @object
GHC.Ptr.$fShowFunPtr_$cshowList_entry:
_c48RN:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Ptr.$fShowFunPtr1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Ptr.$fShowFunPtr_$cshowList_entry, .-GHC.Ptr.$fShowFunPtr_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:59:01.673598488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_$cshowList_info
.type GHC.Ptr.$fShowFunPtr_$cshowList_info, @object
GHC.Ptr.$fShowFunPtr_$cshowList_info:
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S48vI_srt+88


==================== Asm code ====================
2018-03-16 15:59:01.675314042 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$fShowFunPtr_closure
.type GHC.Ptr.$fShowFunPtr_closure, @object
GHC.Ptr.$fShowFunPtr_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure+3
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_closure+1
	.quad	GHC.Ptr.$fShowFunPtr_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.678454477 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.castPtrToFunPtr_closure
.type GHC.Ptr.castPtrToFunPtr_closure, @object
GHC.Ptr.castPtrToFunPtr_closure:
	.quad	GHC.Ptr.castPtrToFunPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.679285243 UTC

.section .text
.align 8
.globl GHC.Ptr.castPtrToFunPtr_entry
.type GHC.Ptr.castPtrToFunPtr_entry, @object
GHC.Ptr.castPtrToFunPtr_entry:
_c48S2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c48S6
_c48S7:
	leaq block_c48RZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c48RZ
_c48S0:
	movq (%rbx),%rax
	jmp *(%rax)
_c48S6:
	leaq GHC.Ptr.castPtrToFunPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.castPtrToFunPtr_entry, .-GHC.Ptr.castPtrToFunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.680354567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.castPtrToFunPtr_info
.type GHC.Ptr.castPtrToFunPtr_info, @object
GHC.Ptr.castPtrToFunPtr_info:
	.quad	GHC.Ptr.castPtrToFunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:59:01.681102128 UTC

.section .text
.align 8
_c48RZ:
_c48RZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48Sa
_c48S9:
	movq 7(%rbx),%rax
	leaq GHC.Ptr.FunPtr_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c48Sa:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c48RZ, .-_c48RZ


==================== Asm code ====================
2018-03-16 15:59:01.681741283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c48RZ_info:
	.quad	_c48RZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:59:01.683423658 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$trModule4_bytes
.type GHC.Ptr.$trModule4_bytes, @object
GHC.Ptr.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:59:01.685167624 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule3_closure
.type GHC.Ptr.$trModule3_closure, @object
GHC.Ptr.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:59:01.686874703 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$trModule2_bytes
.type GHC.Ptr.$trModule2_bytes, @object
GHC.Ptr.$trModule2_bytes:
	.asciz "GHC.Ptr"


==================== Asm code ====================
2018-03-16 15:59:01.688644607 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule1_closure
.type GHC.Ptr.$trModule1_closure, @object
GHC.Ptr.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:59:01.691060595 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$trModule_closure
.type GHC.Ptr.$trModule_closure, @object
GHC.Ptr.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Ptr.$trModule3_closure+1
	.quad	GHC.Ptr.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.692733735 UTC

.section .data
.align 8
.align 1
$krep_r47xK_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:59:01.694402819 UTC

.section .data
.align 8
.align 1
$krep1_r47xL_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcAddr#_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.696064193 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tcPtr2_bytes
.type GHC.Ptr.$tcPtr2_bytes, @object
GHC.Ptr.$tcPtr2_bytes:
	.asciz "Ptr"


==================== Asm code ====================
2018-03-16 15:59:01.697855456 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcPtr1_closure
.type GHC.Ptr.$tcPtr1_closure, @object
GHC.Ptr.$tcPtr1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tcPtr2_bytes


==================== Asm code ====================
2018-03-16 15:59:01.700023259 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcPtr_closure
.type GHC.Ptr.$tcPtr_closure, @object
GHC.Ptr.$tcPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tcPtr1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-4507244349285990301
	.quad	-2130070396560899400
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.70183368 UTC

.section .data
.align 8
.align 1
$krep2_r47xM_closure:
	.quad	:_con_info
	.quad	$krep_r47xK_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.703523808 UTC

.section .data
.align 8
.align 1
$krep3_r47xN_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcPtr_closure+1
	.quad	$krep2_r47xM_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.70519757 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr1_closure
.type GHC.Ptr.$tc'Ptr1_closure, @object
GHC.Ptr.$tc'Ptr1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r47xL_closure+1
	.quad	$krep3_r47xN_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.707509692 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tc'Ptr3_bytes
.type GHC.Ptr.$tc'Ptr3_bytes, @object
GHC.Ptr.$tc'Ptr3_bytes:
	.asciz "'Ptr"


==================== Asm code ====================
2018-03-16 15:59:01.709604547 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr2_closure
.type GHC.Ptr.$tc'Ptr2_closure, @object
GHC.Ptr.$tc'Ptr2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tc'Ptr3_bytes


==================== Asm code ====================
2018-03-16 15:59:01.711395204 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'Ptr_closure
.type GHC.Ptr.$tc'Ptr_closure, @object
GHC.Ptr.$tc'Ptr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tc'Ptr2_closure+1
	.quad	GHC.Ptr.$tc'Ptr1_closure+4
	.quad	2332306090346040376
	.quad	-4955015885741560319
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.713031816 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tcFunPtr2_bytes
.type GHC.Ptr.$tcFunPtr2_bytes, @object
GHC.Ptr.$tcFunPtr2_bytes:
	.asciz "FunPtr"


==================== Asm code ====================
2018-03-16 15:59:01.714701579 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcFunPtr1_closure
.type GHC.Ptr.$tcFunPtr1_closure, @object
GHC.Ptr.$tcFunPtr1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tcFunPtr2_bytes


==================== Asm code ====================
2018-03-16 15:59:01.716515538 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tcFunPtr_closure
.type GHC.Ptr.$tcFunPtr_closure, @object
GHC.Ptr.$tcFunPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tcFunPtr1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	38956960673620606
	.quad	4307950889093819770
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.718387887 UTC

.section .data
.align 8
.align 1
$krep4_r47xO_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcFunPtr_closure+1
	.quad	$krep2_r47xM_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.720388417 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr1_closure
.type GHC.Ptr.$tc'FunPtr1_closure, @object
GHC.Ptr.$tc'FunPtr1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r47xL_closure+1
	.quad	$krep4_r47xO_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.722088273 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Ptr.$tc'FunPtr3_bytes
.type GHC.Ptr.$tc'FunPtr3_bytes, @object
GHC.Ptr.$tc'FunPtr3_bytes:
	.asciz "'FunPtr"


==================== Asm code ====================
2018-03-16 15:59:01.723805901 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr2_closure
.type GHC.Ptr.$tc'FunPtr2_closure, @object
GHC.Ptr.$tc'FunPtr2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Ptr.$tc'FunPtr3_bytes


==================== Asm code ====================
2018-03-16 15:59:01.725744935 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.$tc'FunPtr_closure
.type GHC.Ptr.$tc'FunPtr_closure, @object
GHC.Ptr.$tc'FunPtr_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Ptr.$trModule_closure+1
	.quad	GHC.Ptr.$tc'FunPtr2_closure+1
	.quad	GHC.Ptr.$tc'FunPtr1_closure+4
	.quad	-2724410509106313028
	.quad	-6345878765852112429
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:59:01.728436168 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.Ptr_closure
.type GHC.Ptr.Ptr_closure, @object
GHC.Ptr.Ptr_closure:
	.quad	GHC.Ptr.Ptr_info


==================== Asm code ====================
2018-03-16 15:59:01.729733383 UTC

.section .text
.align 8
GHC.Ptr.Ptr_entry:
_c48SR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48SV
_c48SU:
	leaq GHC.Ptr.Ptr_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48SV:
	movq $16,904(%r13)
	leaq GHC.Ptr.Ptr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.Ptr_entry, .-GHC.Ptr.Ptr_entry


==================== Asm code ====================
2018-03-16 15:59:01.730385155 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Ptr.Ptr_info:
	.quad	GHC.Ptr.Ptr_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:01.732744715 UTC

.section .data
.align 8
.align 1
.globl GHC.Ptr.FunPtr_closure
.type GHC.Ptr.FunPtr_closure, @object
GHC.Ptr.FunPtr_closure:
	.quad	GHC.Ptr.FunPtr_info


==================== Asm code ====================
2018-03-16 15:59:01.733771513 UTC

.section .text
.align 8
GHC.Ptr.FunPtr_entry:
_c48T7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c48Tb
_c48Ta:
	leaq GHC.Ptr.FunPtr_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c48Tb:
	movq $16,904(%r13)
	leaq GHC.Ptr.FunPtr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Ptr.FunPtr_entry, .-GHC.Ptr.FunPtr_entry


==================== Asm code ====================
2018-03-16 15:59:01.734411707 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Ptr.FunPtr_info:
	.quad	GHC.Ptr.FunPtr_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:59:01.73650347 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i48Tj_str:
	.asciz "base:GHC.Ptr.Ptr"


==================== Asm code ====================
2018-03-16 15:59:01.737133102 UTC

.section .text
.align 8
.globl GHC.Ptr.Ptr_con_entry
.type GHC.Ptr.Ptr_con_entry, @object
GHC.Ptr.Ptr_con_entry:
_c48Ti:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Ptr.Ptr_con_entry, .-GHC.Ptr.Ptr_con_entry


==================== Asm code ====================
2018-03-16 15:59:01.737788577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.Ptr_con_info
.type GHC.Ptr.Ptr_con_info, @object
GHC.Ptr.Ptr_con_info:
	.quad	GHC.Ptr.Ptr_con_entry
	.quad	4294967296
	.quad	3
	.quad	i48Tj_str


==================== Asm code ====================
2018-03-16 15:59:01.740147232 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i48Tq_str:
	.asciz "base:GHC.Ptr.FunPtr"


==================== Asm code ====================
2018-03-16 15:59:01.740757035 UTC

.section .text
.align 8
.globl GHC.Ptr.FunPtr_con_entry
.type GHC.Ptr.FunPtr_con_entry, @object
GHC.Ptr.FunPtr_con_entry:
_c48Tp:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Ptr.FunPtr_con_entry, .-GHC.Ptr.FunPtr_con_entry


==================== Asm code ====================
2018-03-16 15:59:01.741659663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Ptr.FunPtr_con_info
.type GHC.Ptr.FunPtr_con_info, @object
GHC.Ptr.FunPtr_con_info:
	.quad	GHC.Ptr.FunPtr_con_entry
	.quad	4294967296
	.quad	3
	.quad	i48Tq_str


==================== Asm code ====================
2018-03-16 15:59:01.743478591 UTC

.section .data.rel.ro
.align 8
.align 1
S48vI_srt:
	.quad	GHC.Show.intToDigit_closure
	.quad	GHC.Show.$fShowInteger_closure
	.quad	GHC.Real.$fIntegralInteger_closure
	.quad	Numeric.showIntAtBase_closure
	.quad	Numeric.showHex1_closure
	.quad	GHC.Ptr.$w$cshowsPrec_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec_closure
	.quad	GHC.Ptr.$fShowPtr_$cshow_closure
	.quad	GHC.Ptr.$fShowPtr1_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshowsPrec1_closure
	.quad	GHC.Ptr.$fShowFunPtr_$cshow_closure
	.quad	GHC.Ptr.$fShowFunPtr1_closure

