
==================== Output Cmm ====================
2018-03-16 15:59:01.799760902 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:59:01.800858037 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c==_closure" {
     GHC.Stable.$fEqStablePtr_$c==_closure:
         const GHC.Stable.$fEqStablePtr_$c==_info;
 },
 GHC.Stable.$fEqStablePtr_$c==_entry() //  [R2, R3]
         { info_tbl: [(c4919,
                       label: GHC.Stable.$fEqStablePtr_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4919: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c491d; else goto c491e;
       c491d: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c491e: // global
           I64[Sp - 16] = block_c4916_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u491B; else goto c4917;
       u491B: // global
           call _c4916(R1) args: 0, res: 0, upd: 0;
       c4917: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c4916() //  [R1]
         { info_tbl: [(c4916,
                       label: block_c4916_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4916: // global
           I64[Sp] = block_c491c_info;
           _s490u::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490u::I64;
           if (R1 & 7 != 0) goto u491A; else goto c491g;
       u491A: // global
           call _c491c(R1) args: 0, res: 0, upd: 0;
       c491g: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c491c() //  [R1]
         { info_tbl: [(c491c,
                       label: block_c491c_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c491c: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c491q; else goto c491w;
       c491q: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c491w: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.802630407 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c/=_closure" {
     GHC.Stable.$fEqStablePtr_$c/=_closure:
         const GHC.Stable.$fEqStablePtr_$c/=_info;
 },
 GHC.Stable.$fEqStablePtr_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c491J,
                       label: GHC.Stable.$fEqStablePtr_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c491J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c491N; else goto c491O;
       c491N: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c491O: // global
           I64[Sp - 16] = block_c491G_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u492b; else goto c491H;
       u492b: // global
           call _c491G(R1) args: 0, res: 0, upd: 0;
       c491H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c491G() //  [R1]
         { info_tbl: [(c491G,
                       label: block_c491G_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c491G: // global
           I64[Sp] = block_c491M_info;
           _s490B::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490B::I64;
           if (R1 & 7 != 0) goto u492a; else goto c491Q;
       u492a: // global
           call _c491M(R1) args: 0, res: 0, upd: 0;
       c491Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c491M() //  [R1]
         { info_tbl: [(c491M,
                       label: block_c491M_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c491M: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c4920; else goto c4926;
       c4920: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4926: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.804424661 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_closure" {
     GHC.Stable.$fEqStablePtr_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Stable.$fEqStablePtr_$c==_closure+2;
         const GHC.Stable.$fEqStablePtr_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.805226641 UTC

[section ""data" . GHC.Stable.newStablePtr1_closure" {
     GHC.Stable.newStablePtr1_closure:
         const GHC.Stable.newStablePtr1_info;
 },
 GHC.Stable.newStablePtr1_entry() //  [R2]
         { info_tbl: [(c492j,
                       label: GHC.Stable.newStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492j: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c492k; else goto c492l;
       c492k: // global
           R2 = R2;
           R1 = GHC.Stable.newStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c492l: // global
           I64[Sp - 8] = block_c492g_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStablePtr#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c492g() //  [R1]
         { info_tbl: [(c492g,
                       label: block_c492g_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492g: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c492o; else goto c492n;
       c492o: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c492n: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.806382888 UTC

[section ""data" . GHC.Stable.newStablePtr_closure" {
     GHC.Stable.newStablePtr_closure:
         const GHC.Stable.newStablePtr_info;
 },
 GHC.Stable.newStablePtr_entry() //  [R2]
         { info_tbl: [(c492t,
                       label: GHC.Stable.newStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492t: // global
           R2 = R2;
           call GHC.Stable.newStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.807245339 UTC

[section ""data" . GHC.Stable.deRefStablePtr1_closure" {
     GHC.Stable.deRefStablePtr1_closure:
         const GHC.Stable.deRefStablePtr1_info;
 },
 GHC.Stable.deRefStablePtr1_entry() //  [R2]
         { info_tbl: [(c492D,
                       label: GHC.Stable.deRefStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c492E; else goto c492F;
       c492E: // global
           R2 = R2;
           R1 = GHC.Stable.deRefStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c492F: // global
           I64[Sp - 8] = block_c492A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u492J; else goto c492B;
       u492J: // global
           call _c492A(R1) args: 0, res: 0, upd: 0;
       c492B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c492A() //  [R1]
         { info_tbl: [(c492A,
                       label: block_c492A_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492A: // global
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.808323963 UTC

[section ""data" . GHC.Stable.deRefStablePtr_closure" {
     GHC.Stable.deRefStablePtr_closure:
         const GHC.Stable.deRefStablePtr_info;
 },
 GHC.Stable.deRefStablePtr_entry() //  [R2]
         { info_tbl: [(c492O,
                       label: GHC.Stable.deRefStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492O: // global
           R2 = R2;
           call GHC.Stable.deRefStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.809327503 UTC

[section ""data" . GHC.Stable.castStablePtrToPtr_closure" {
     GHC.Stable.castStablePtrToPtr_closure:
         const GHC.Stable.castStablePtrToPtr_info;
 },
 GHC.Stable.castStablePtrToPtr_entry() //  [R2]
         { info_tbl: [(c492Y,
                       label: GHC.Stable.castStablePtrToPtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492Y: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4932; else goto c4933;
       c4932: // global
           R2 = R2;
           R1 = GHC.Stable.castStablePtrToPtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4933: // global
           I64[Sp - 8] = block_c492V_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4937; else goto c492W;
       u4937: // global
           call _c492V(R1) args: 0, res: 0, upd: 0;
       c492W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c492V() //  [R1]
         { info_tbl: [(c492V,
                       label: block_c492V_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c492V: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4936; else goto c4935;
       c4936: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4935: // global
           _s490R::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s490R::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.810623665 UTC

[section ""data" . GHC.Stable.castPtrToStablePtr_closure" {
     GHC.Stable.castPtrToStablePtr_closure:
         const GHC.Stable.castPtrToStablePtr_info;
 },
 GHC.Stable.castPtrToStablePtr_entry() //  [R2]
         { info_tbl: [(c493f,
                       label: GHC.Stable.castPtrToStablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493f: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c493j; else goto c493k;
       c493j: // global
           R2 = R2;
           R1 = GHC.Stable.castPtrToStablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c493k: // global
           I64[Sp - 8] = block_c493c_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u493o; else goto c493d;
       u493o: // global
           call _c493c(R1) args: 0, res: 0, upd: 0;
       c493d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c493c() //  [R1]
         { info_tbl: [(c493c,
                       label: block_c493c_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493c: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c493n; else goto c493m;
       c493n: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c493m: // global
           _s490U::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s490U::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.811663866 UTC

[section ""cstring" . GHC.Stable.$trModule4_bytes" {
     GHC.Stable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.812249699 UTC

[section ""data" . GHC.Stable.$trModule3_closure" {
     GHC.Stable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.812825344 UTC

[section ""cstring" . GHC.Stable.$trModule2_bytes" {
     GHC.Stable.$trModule2_bytes:
         I8[] [71,72,67,46,83,116,97,98,108,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.813388153 UTC

[section ""data" . GHC.Stable.$trModule1_closure" {
     GHC.Stable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.813980196 UTC

[section ""data" . GHC.Stable.$trModule_closure" {
     GHC.Stable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Stable.$trModule3_closure+1;
         const GHC.Stable.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.815046123 UTC

[section ""data" . $krep_r490l_closure" {
     $krep_r490l_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.815619271 UTC

[section ""data" . $krep1_r490m_closure" {
     $krep1_r490m_closure:
         const :_con_info;
         const $krep_r490l_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.816249203 UTC

[section ""data" . $krep2_r490n_closure" {
     $krep2_r490n_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStablePtr#_closure;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.816806277 UTC

[section ""cstring" . GHC.Stable.$tcStablePtr2_bytes" {
     GHC.Stable.$tcStablePtr2_bytes:
         I8[] [83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.81736947 UTC

[section ""data" . GHC.Stable.$tcStablePtr1_closure" {
     GHC.Stable.$tcStablePtr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tcStablePtr2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.817938826 UTC

[section ""data" . GHC.Stable.$tcStablePtr_closure" {
     GHC.Stable.$tcStablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tcStablePtr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 2212012310673685839;
         const 12855461380626358372;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.818540846 UTC

[section ""data" . $krep3_r490o_closure" {
     $krep3_r490o_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Stable.$tcStablePtr_closure+1;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.819086253 UTC

[section ""data" . GHC.Stable.$tc'StablePtr1_closure" {
     GHC.Stable.$tc'StablePtr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r490n_closure+1;
         const $krep3_r490o_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.819675433 UTC

[section ""cstring" . GHC.Stable.$tc'StablePtr3_bytes" {
     GHC.Stable.$tc'StablePtr3_bytes:
         I8[] [39,83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.820212901 UTC

[section ""data" . GHC.Stable.$tc'StablePtr2_closure" {
     GHC.Stable.$tc'StablePtr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tc'StablePtr3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.820758356 UTC

[section ""data" . GHC.Stable.$tc'StablePtr_closure" {
     GHC.Stable.$tc'StablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tc'StablePtr2_closure+1;
         const GHC.Stable.$tc'StablePtr1_closure+4;
         const 2898738257036715821;
         const 1170603501179803931;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.822073628 UTC

[section ""data" . freeStablePtr1_r490p_closure" {
     freeStablePtr1_r490p_closure:
         const freeStablePtr1_r490p_info;
 },
 freeStablePtr1_r490p_entry() //  [R2]
         { info_tbl: [(c493w,
                       label: freeStablePtr1_r490p_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493w: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c493x; else goto c493y;
       c493x: // global
           R2 = R2;
           R1 = freeStablePtr1_r490p_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c493y: // global
           I64[Sp - 8] = block_c493t_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u493E; else goto c493u;
       u493E: // global
           call _c493t(R1) args: 0, res: 0, upd: 0;
       c493u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c493t() //  [R1]
         { info_tbl: [(c493t,
                       label: block_c493t_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493t: // global
           call "ccall" arg hints:  [PtrHint]  result hints:  [] hs_free_stable_ptr(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.823300254 UTC

[section ""data" . GHC.Stable.freeStablePtr_closure" {
     GHC.Stable.freeStablePtr_closure:
         const GHC.Stable.freeStablePtr_info;
 },
 GHC.Stable.freeStablePtr_entry() //  [R2]
         { info_tbl: [(c493J,
                       label: GHC.Stable.freeStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493J: // global
           R2 = R2;
           call freeStablePtr1_r490p_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.824242693 UTC

[section ""data" . GHC.Stable.StablePtr_closure" {
     GHC.Stable.StablePtr_closure:
         const GHC.Stable.StablePtr_info;
 },
 GHC.Stable.StablePtr_entry() //  [R2]
         { info_tbl: [(c493R,
                       label: GHC.Stable.StablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c493V; else goto c493U;
       c493V: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Stable.StablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c493U: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.825616601 UTC

[GHC.Stable.StablePtr_con_entry() //  [R1]
         { info_tbl: [(c493W,
                       label: GHC.Stable.StablePtr_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,83,116,97,98,108,101,46,83,116,97,98,108,101,80,116,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c493W: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.826336371 UTC

[section ""relreadonly" . S493X_srt" { S493X_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.826866285 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:59:01.827778847 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c==_closure" {
     GHC.Stable.$fEqStablePtr_$c==_closure:
         const GHC.Stable.$fEqStablePtr_$c==_info;
 },
 GHC.Stable.$fEqStablePtr_$c==_entry() //  [R2, R3]
         { info_tbl: [(c4945,
                       label: GHC.Stable.$fEqStablePtr_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4945: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4949; else goto c494a;
       c4949: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c494a: // global
           I64[Sp - 16] = block_c4942_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u494x; else goto c4943;
       u494x: // global
           call _c4942(R1) args: 0, res: 0, upd: 0;
       c4943: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c4942() //  [R1]
         { info_tbl: [(c4942,
                       label: block_c4942_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4942: // global
           I64[Sp] = block_c4948_info;
           _s490u::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490u::I64;
           if (R1 & 7 != 0) goto u494w; else goto c494c;
       u494w: // global
           call _c4948(R1) args: 0, res: 0, upd: 0;
       c494c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c4948() //  [R1]
         { info_tbl: [(c4948,
                       label: block_c4948_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4948: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c494m; else goto c494s;
       c494m: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c494s: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.82948278 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c/=_closure" {
     GHC.Stable.$fEqStablePtr_$c/=_closure:
         const GHC.Stable.$fEqStablePtr_$c/=_info;
 },
 GHC.Stable.$fEqStablePtr_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c494F,
                       label: GHC.Stable.$fEqStablePtr_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c494F: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c494J; else goto c494K;
       c494J: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c494K: // global
           I64[Sp - 16] = block_c494C_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4957; else goto c494D;
       u4957: // global
           call _c494C(R1) args: 0, res: 0, upd: 0;
       c494D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c494C() //  [R1]
         { info_tbl: [(c494C,
                       label: block_c494C_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c494C: // global
           I64[Sp] = block_c494I_info;
           _s490B::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490B::I64;
           if (R1 & 7 != 0) goto u4956; else goto c494M;
       u4956: // global
           call _c494I(R1) args: 0, res: 0, upd: 0;
       c494M: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c494I() //  [R1]
         { info_tbl: [(c494I,
                       label: block_c494I_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c494I: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c494W; else goto c4952;
       c494W: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4952: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.830747119 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_closure" {
     GHC.Stable.$fEqStablePtr_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Stable.$fEqStablePtr_$c==_closure+2;
         const GHC.Stable.$fEqStablePtr_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.831579917 UTC

[section ""data" . GHC.Stable.newStablePtr1_closure" {
     GHC.Stable.newStablePtr1_closure:
         const GHC.Stable.newStablePtr1_info;
 },
 GHC.Stable.newStablePtr1_entry() //  [R2]
         { info_tbl: [(c495f,
                       label: GHC.Stable.newStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495f: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c495g; else goto c495h;
       c495g: // global
           R2 = R2;
           R1 = GHC.Stable.newStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c495h: // global
           I64[Sp - 8] = block_c495c_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStablePtr#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c495c() //  [R1]
         { info_tbl: [(c495c,
                       label: block_c495c_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495c: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c495k; else goto c495j;
       c495k: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c495j: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.832694807 UTC

[section ""data" . GHC.Stable.newStablePtr_closure" {
     GHC.Stable.newStablePtr_closure:
         const GHC.Stable.newStablePtr_info;
 },
 GHC.Stable.newStablePtr_entry() //  [R2]
         { info_tbl: [(c495p,
                       label: GHC.Stable.newStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495p: // global
           R2 = R2;
           call GHC.Stable.newStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.834128632 UTC

[section ""data" . GHC.Stable.deRefStablePtr1_closure" {
     GHC.Stable.deRefStablePtr1_closure:
         const GHC.Stable.deRefStablePtr1_info;
 },
 GHC.Stable.deRefStablePtr1_entry() //  [R2]
         { info_tbl: [(c495z,
                       label: GHC.Stable.deRefStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c495A; else goto c495B;
       c495A: // global
           R2 = R2;
           R1 = GHC.Stable.deRefStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c495B: // global
           I64[Sp - 8] = block_c495w_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u495F; else goto c495x;
       u495F: // global
           call _c495w(R1) args: 0, res: 0, upd: 0;
       c495x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c495w() //  [R1]
         { info_tbl: [(c495w,
                       label: block_c495w_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495w: // global
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.835230349 UTC

[section ""data" . GHC.Stable.deRefStablePtr_closure" {
     GHC.Stable.deRefStablePtr_closure:
         const GHC.Stable.deRefStablePtr_info;
 },
 GHC.Stable.deRefStablePtr_entry() //  [R2]
         { info_tbl: [(c495K,
                       label: GHC.Stable.deRefStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495K: // global
           R2 = R2;
           call GHC.Stable.deRefStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.836740811 UTC

[section ""data" . GHC.Stable.castStablePtrToPtr_closure" {
     GHC.Stable.castStablePtrToPtr_closure:
         const GHC.Stable.castStablePtrToPtr_info;
 },
 GHC.Stable.castStablePtrToPtr_entry() //  [R2]
         { info_tbl: [(c495U,
                       label: GHC.Stable.castStablePtrToPtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495U: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c495Y; else goto c495Z;
       c495Y: // global
           R2 = R2;
           R1 = GHC.Stable.castStablePtrToPtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c495Z: // global
           I64[Sp - 8] = block_c495R_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4963; else goto c495S;
       u4963: // global
           call _c495R(R1) args: 0, res: 0, upd: 0;
       c495S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c495R() //  [R1]
         { info_tbl: [(c495R,
                       label: block_c495R_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c495R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4962; else goto c4961;
       c4962: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4961: // global
           _s490R::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s490R::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.838162347 UTC

[section ""data" . GHC.Stable.castPtrToStablePtr_closure" {
     GHC.Stable.castPtrToStablePtr_closure:
         const GHC.Stable.castPtrToStablePtr_info;
 },
 GHC.Stable.castPtrToStablePtr_entry() //  [R2]
         { info_tbl: [(c496b,
                       label: GHC.Stable.castPtrToStablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496b: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c496f; else goto c496g;
       c496f: // global
           R2 = R2;
           R1 = GHC.Stable.castPtrToStablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c496g: // global
           I64[Sp - 8] = block_c4968_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u496k; else goto c4969;
       u496k: // global
           call _c4968(R1) args: 0, res: 0, upd: 0;
       c4969: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c4968() //  [R1]
         { info_tbl: [(c4968,
                       label: block_c4968_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4968: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c496j; else goto c496i;
       c496j: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c496i: // global
           _s490U::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s490U::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.839283767 UTC

[section ""cstring" . GHC.Stable.$trModule4_bytes" {
     GHC.Stable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.839866869 UTC

[section ""data" . GHC.Stable.$trModule3_closure" {
     GHC.Stable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.840405256 UTC

[section ""cstring" . GHC.Stable.$trModule2_bytes" {
     GHC.Stable.$trModule2_bytes:
         I8[] [71,72,67,46,83,116,97,98,108,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.840935697 UTC

[section ""data" . GHC.Stable.$trModule1_closure" {
     GHC.Stable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.841570998 UTC

[section ""data" . GHC.Stable.$trModule_closure" {
     GHC.Stable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Stable.$trModule3_closure+1;
         const GHC.Stable.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.842169092 UTC

[section ""data" . $krep_r490l_closure" {
     $krep_r490l_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.842716619 UTC

[section ""data" . $krep1_r490m_closure" {
     $krep1_r490m_closure:
         const :_con_info;
         const $krep_r490l_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.843330784 UTC

[section ""data" . $krep2_r490n_closure" {
     $krep2_r490n_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStablePtr#_closure;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.843918336 UTC

[section ""cstring" . GHC.Stable.$tcStablePtr2_bytes" {
     GHC.Stable.$tcStablePtr2_bytes:
         I8[] [83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.844463409 UTC

[section ""data" . GHC.Stable.$tcStablePtr1_closure" {
     GHC.Stable.$tcStablePtr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tcStablePtr2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.845053965 UTC

[section ""data" . GHC.Stable.$tcStablePtr_closure" {
     GHC.Stable.$tcStablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tcStablePtr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 2212012310673685839;
         const 12855461380626358372;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.846005534 UTC

[section ""data" . $krep3_r490o_closure" {
     $krep3_r490o_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Stable.$tcStablePtr_closure+1;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.847021589 UTC

[section ""data" . GHC.Stable.$tc'StablePtr1_closure" {
     GHC.Stable.$tc'StablePtr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r490n_closure+1;
         const $krep3_r490o_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.847554305 UTC

[section ""cstring" . GHC.Stable.$tc'StablePtr3_bytes" {
     GHC.Stable.$tc'StablePtr3_bytes:
         I8[] [39,83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.848106137 UTC

[section ""data" . GHC.Stable.$tc'StablePtr2_closure" {
     GHC.Stable.$tc'StablePtr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tc'StablePtr3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.848676444 UTC

[section ""data" . GHC.Stable.$tc'StablePtr_closure" {
     GHC.Stable.$tc'StablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tc'StablePtr2_closure+1;
         const GHC.Stable.$tc'StablePtr1_closure+4;
         const 2898738257036715821;
         const 1170603501179803931;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.849731892 UTC

[section ""data" . freeStablePtr1_r490p_closure" {
     freeStablePtr1_r490p_closure:
         const freeStablePtr1_r490p_info;
 },
 freeStablePtr1_r490p_entry() //  [R2]
         { info_tbl: [(c496s,
                       label: freeStablePtr1_r490p_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496s: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c496t; else goto c496u;
       c496t: // global
           R2 = R2;
           R1 = freeStablePtr1_r490p_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c496u: // global
           I64[Sp - 8] = block_c496p_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u496A; else goto c496q;
       u496A: // global
           call _c496p(R1) args: 0, res: 0, upd: 0;
       c496q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c496p() //  [R1]
         { info_tbl: [(c496p,
                       label: block_c496p_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496p: // global
           call "ccall" arg hints:  [PtrHint]  result hints:  [] hs_free_stable_ptr(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.850869187 UTC

[section ""data" . GHC.Stable.freeStablePtr_closure" {
     GHC.Stable.freeStablePtr_closure:
         const GHC.Stable.freeStablePtr_info;
 },
 GHC.Stable.freeStablePtr_entry() //  [R2]
         { info_tbl: [(c496F,
                       label: GHC.Stable.freeStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496F: // global
           R2 = R2;
           call freeStablePtr1_r490p_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.851712532 UTC

[section ""data" . GHC.Stable.StablePtr_closure" {
     GHC.Stable.StablePtr_closure:
         const GHC.Stable.StablePtr_info;
 },
 GHC.Stable.StablePtr_entry() //  [R2]
         { info_tbl: [(c496N,
                       label: GHC.Stable.StablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496N: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c496R; else goto c496Q;
       c496R: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Stable.StablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c496Q: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.852558026 UTC

[GHC.Stable.StablePtr_con_entry() //  [R1]
         { info_tbl: [(c496S,
                       label: GHC.Stable.StablePtr_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,83,116,97,98,108,101,46,83,116,97,98,108,101,80,116,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496S: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.853353807 UTC

[section ""relreadonly" . S493X_srt" { S493X_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.854147625 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:59:01.855705711 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c==_closure" {
     GHC.Stable.$fEqStablePtr_$c==_closure:
         const GHC.Stable.$fEqStablePtr_$c==_info;
 },
 GHC.Stable.$fEqStablePtr_$c==_entry() //  [R2, R3]
         { info_tbl: [(c4971,
                       label: GHC.Stable.$fEqStablePtr_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4971: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4975; else goto c4976;
       c4975: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4976: // global
           I64[Sp - 16] = block_c496Y_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u497t; else goto c496Z;
       u497t: // global
           call _c496Y(R1) args: 0, res: 0, upd: 0;
       c496Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c496Y() //  [R1]
         { info_tbl: [(c496Y,
                       label: block_c496Y_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c496Y: // global
           I64[Sp] = block_c4974_info;
           _s490u::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490u::I64;
           if (R1 & 7 != 0) goto u497s; else goto c4978;
       u497s: // global
           call _c4974(R1) args: 0, res: 0, upd: 0;
       c4978: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c4974() //  [R1]
         { info_tbl: [(c4974,
                       label: block_c4974_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4974: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c497i; else goto c497o;
       c497i: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c497o: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.86430529 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c/=_closure" {
     GHC.Stable.$fEqStablePtr_$c/=_closure:
         const GHC.Stable.$fEqStablePtr_$c/=_info;
 },
 GHC.Stable.$fEqStablePtr_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c497R,
                       label: GHC.Stable.$fEqStablePtr_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c497R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c497V; else goto c497W;
       c497V: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c497W: // global
           I64[Sp - 16] = block_c497O_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u498j; else goto c497P;
       u498j: // global
           call _c497O(R1) args: 0, res: 0, upd: 0;
       c497P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c497O() //  [R1]
         { info_tbl: [(c497O,
                       label: block_c497O_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c497O: // global
           I64[Sp] = block_c497U_info;
           _s490B::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s490B::I64;
           if (R1 & 7 != 0) goto u498i; else goto c497Y;
       u498i: // global
           call _c497U(R1) args: 0, res: 0, upd: 0;
       c497Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c497U() //  [R1]
         { info_tbl: [(c497U,
                       label: block_c497U_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c497U: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c4988; else goto c498e;
       c4988: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c498e: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.872062848 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_closure" {
     GHC.Stable.$fEqStablePtr_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Stable.$fEqStablePtr_$c==_closure+2;
         const GHC.Stable.$fEqStablePtr_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.874141941 UTC

[section ""data" . GHC.Stable.newStablePtr1_closure" {
     GHC.Stable.newStablePtr1_closure:
         const GHC.Stable.newStablePtr1_info;
 },
 GHC.Stable.newStablePtr1_entry() //  [R2]
         { info_tbl: [(c498I,
                       label: GHC.Stable.newStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c498I: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c498J; else goto c498K;
       c498J: // global
           R2 = R2;
           R1 = GHC.Stable.newStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c498K: // global
           I64[Sp - 8] = block_c498F_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStablePtr#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c498F() //  [R1]
         { info_tbl: [(c498F,
                       label: block_c498F_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c498F: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c498N; else goto c498M;
       c498N: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c498M: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.87994168 UTC

[section ""data" . GHC.Stable.newStablePtr_closure" {
     GHC.Stable.newStablePtr_closure:
         const GHC.Stable.newStablePtr_info;
 },
 GHC.Stable.newStablePtr_entry() //  [R2]
         { info_tbl: [(c4991,
                       label: GHC.Stable.newStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c4991: // global
           R2 = R2;
           call GHC.Stable.newStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.88324061 UTC

[section ""data" . GHC.Stable.deRefStablePtr1_closure" {
     GHC.Stable.deRefStablePtr1_closure:
         const GHC.Stable.deRefStablePtr1_info;
 },
 GHC.Stable.deRefStablePtr1_entry() //  [R2]
         { info_tbl: [(c499f,
                       label: GHC.Stable.deRefStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c499f: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c499g; else goto c499h;
       c499g: // global
           R2 = R2;
           R1 = GHC.Stable.deRefStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c499h: // global
           I64[Sp - 8] = block_c499c_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u499l; else goto c499d;
       u499l: // global
           call _c499c(R1) args: 0, res: 0, upd: 0;
       c499d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c499c() //  [R1]
         { info_tbl: [(c499c,
                       label: block_c499c_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c499c: // global
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.888623612 UTC

[section ""data" . GHC.Stable.deRefStablePtr_closure" {
     GHC.Stable.deRefStablePtr_closure:
         const GHC.Stable.deRefStablePtr_info;
 },
 GHC.Stable.deRefStablePtr_entry() //  [R2]
         { info_tbl: [(c499z,
                       label: GHC.Stable.deRefStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c499z: // global
           R2 = R2;
           call GHC.Stable.deRefStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.892646711 UTC

[section ""data" . GHC.Stable.castStablePtrToPtr_closure" {
     GHC.Stable.castStablePtrToPtr_closure:
         const GHC.Stable.castStablePtrToPtr_info;
 },
 GHC.Stable.castStablePtrToPtr_entry() //  [R2]
         { info_tbl: [(c499N,
                       label: GHC.Stable.castStablePtrToPtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c499N: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c499R; else goto c499S;
       c499R: // global
           R2 = R2;
           R1 = GHC.Stable.castStablePtrToPtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c499S: // global
           I64[Sp - 8] = block_c499K_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u499W; else goto c499L;
       u499W: // global
           call _c499K(R1) args: 0, res: 0, upd: 0;
       c499L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c499K() //  [R1]
         { info_tbl: [(c499K,
                       label: block_c499K_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c499K: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c499V; else goto c499U;
       c499V: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c499U: // global
           _s490R::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s490R::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.898655213 UTC

[section ""data" . GHC.Stable.castPtrToStablePtr_closure" {
     GHC.Stable.castPtrToStablePtr_closure:
         const GHC.Stable.castPtrToStablePtr_info;
 },
 GHC.Stable.castPtrToStablePtr_entry() //  [R2]
         { info_tbl: [(c49ae,
                       label: GHC.Stable.castPtrToStablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ae: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49ai; else goto c49aj;
       c49ai: // global
           R2 = R2;
           R1 = GHC.Stable.castPtrToStablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49aj: // global
           I64[Sp - 8] = block_c49ab_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49an; else goto c49ac;
       u49an: // global
           call _c49ab(R1) args: 0, res: 0, upd: 0;
       c49ac: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49ab() //  [R1]
         { info_tbl: [(c49ab,
                       label: block_c49ab_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ab: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49am; else goto c49al;
       c49am: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c49al: // global
           _s490U::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s490U::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.904584887 UTC

[section ""cstring" . GHC.Stable.$trModule4_bytes" {
     GHC.Stable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.906973707 UTC

[section ""data" . GHC.Stable.$trModule3_closure" {
     GHC.Stable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.908655401 UTC

[section ""cstring" . GHC.Stable.$trModule2_bytes" {
     GHC.Stable.$trModule2_bytes:
         I8[] [71,72,67,46,83,116,97,98,108,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.910640354 UTC

[section ""data" . GHC.Stable.$trModule1_closure" {
     GHC.Stable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.912263357 UTC

[section ""data" . GHC.Stable.$trModule_closure" {
     GHC.Stable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Stable.$trModule3_closure+1;
         const GHC.Stable.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.913940549 UTC

[section ""data" . $krep_r490l_closure" {
     $krep_r490l_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.915579707 UTC

[section ""data" . $krep1_r490m_closure" {
     $krep1_r490m_closure:
         const :_con_info;
         const $krep_r490l_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.917338933 UTC

[section ""data" . $krep2_r490n_closure" {
     $krep2_r490n_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStablePtr#_closure;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.919473912 UTC

[section ""cstring" . GHC.Stable.$tcStablePtr2_bytes" {
     GHC.Stable.$tcStablePtr2_bytes:
         I8[] [83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.921142097 UTC

[section ""data" . GHC.Stable.$tcStablePtr1_closure" {
     GHC.Stable.$tcStablePtr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tcStablePtr2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.92340771 UTC

[section ""data" . GHC.Stable.$tcStablePtr_closure" {
     GHC.Stable.$tcStablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tcStablePtr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 2212012310673685839;
         const 12855461380626358372;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.925480217 UTC

[section ""data" . $krep3_r490o_closure" {
     $krep3_r490o_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Stable.$tcStablePtr_closure+1;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.927318856 UTC

[section ""data" . GHC.Stable.$tc'StablePtr1_closure" {
     GHC.Stable.$tc'StablePtr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r490n_closure+1;
         const $krep3_r490o_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.929793942 UTC

[section ""cstring" . GHC.Stable.$tc'StablePtr3_bytes" {
     GHC.Stable.$tc'StablePtr3_bytes:
         I8[] [39,83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.931549586 UTC

[section ""data" . GHC.Stable.$tc'StablePtr2_closure" {
     GHC.Stable.$tc'StablePtr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tc'StablePtr3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.933204062 UTC

[section ""data" . GHC.Stable.$tc'StablePtr_closure" {
     GHC.Stable.$tc'StablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tc'StablePtr2_closure+1;
         const GHC.Stable.$tc'StablePtr1_closure+4;
         const 2898738257036715821;
         const 1170603501179803931;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.935414428 UTC

[section ""data" . freeStablePtr1_r490p_closure" {
     freeStablePtr1_r490p_closure:
         const freeStablePtr1_r490p_info;
 },
 freeStablePtr1_r490p_entry() //  [R2]
         { info_tbl: [(c49aV,
                       label: freeStablePtr1_r490p_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49aV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49aW; else goto c49aX;
       c49aW: // global
           R2 = R2;
           R1 = freeStablePtr1_r490p_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49aX: // global
           I64[Sp - 8] = block_c49aS_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49b3; else goto c49aT;
       u49b3: // global
           call _c49aS(R1) args: 0, res: 0, upd: 0;
       c49aT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49aS() //  [R1]
         { info_tbl: [(c49aS,
                       label: block_c49aS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49aS: // global
           call "ccall" arg hints:  [PtrHint]  result hints:  [] hs_free_stable_ptr(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.941776545 UTC

[section ""data" . GHC.Stable.freeStablePtr_closure" {
     GHC.Stable.freeStablePtr_closure:
         const GHC.Stable.freeStablePtr_info;
 },
 GHC.Stable.freeStablePtr_entry() //  [R2]
         { info_tbl: [(c49bi,
                       label: GHC.Stable.freeStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49bi: // global
           R2 = R2;
           call freeStablePtr1_r490p_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.945148577 UTC

[section ""data" . GHC.Stable.StablePtr_closure" {
     GHC.Stable.StablePtr_closure:
         const GHC.Stable.StablePtr_info;
 },
 GHC.Stable.StablePtr_entry() //  [R2]
         { info_tbl: [(c49bu,
                       label: GHC.Stable.StablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49bu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49by; else goto c49bx;
       c49by: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Stable.StablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49bx: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.948761139 UTC

[GHC.Stable.StablePtr_con_entry() //  [R1]
         { info_tbl: [(c49bE,
                       label: GHC.Stable.StablePtr_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,83,116,97,98,108,101,46,83,116,97,98,108,101,80,116,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49bE: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:01.952448424 UTC

[section ""relreadonly" . S493X_srt" { S493X_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.090260246 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:59:02.091767935 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c==_closure" {
     GHC.Stable.$fEqStablePtr_$c==_closure:
         const GHC.Stable.$fEqStablePtr_$c==_info;
 },
 GHC.Stable.$fEqStablePtr_$c==_entry() //  [R2, R3]
         { info_tbl: [(c49ct,
                       label: GHC.Stable.$fEqStablePtr_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ct: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c49cx; else goto c49cy;
       c49cx: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c49cy: // global
           I64[Sp - 16] = block_c49cq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u49cV; else goto c49cr;
       u49cV: // global
           call _c49cq(R1) args: 0, res: 0, upd: 0;
       c49cr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49cq() //  [R1]
         { info_tbl: [(c49cq,
                       label: block_c49cq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49cq: // global
           I64[Sp] = block_c49cw_info;
           _s49bO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s49bO::I64;
           if (R1 & 7 != 0) goto u49cU; else goto c49cA;
       u49cU: // global
           call _c49cw(R1) args: 0, res: 0, upd: 0;
       c49cA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49cw() //  [R1]
         { info_tbl: [(c49cw,
                       label: block_c49cw_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49cw: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c49cK; else goto c49cQ;
       c49cK: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49cQ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.099957932 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_$c/=_closure" {
     GHC.Stable.$fEqStablePtr_$c/=_closure:
         const GHC.Stable.$fEqStablePtr_$c/=_info;
 },
 GHC.Stable.$fEqStablePtr_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c49dn,
                       label: GHC.Stable.$fEqStablePtr_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49dn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c49dr; else goto c49ds;
       c49dr: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Stable.$fEqStablePtr_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c49ds: // global
           I64[Sp - 16] = block_c49dk_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u49dP; else goto c49dl;
       u49dP: // global
           call _c49dk(R1) args: 0, res: 0, upd: 0;
       c49dl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49dk() //  [R1]
         { info_tbl: [(c49dk,
                       label: block_c49dk_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49dk: // global
           I64[Sp] = block_c49dq_info;
           _s49bV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s49bV::I64;
           if (R1 & 7 != 0) goto u49dO; else goto c49du;
       u49dO: // global
           call _c49dq(R1) args: 0, res: 0, upd: 0;
       c49du: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49dq() //  [R1]
         { info_tbl: [(c49dq,
                       label: block_c49dq_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49dq: // global
           if (I64[Sp + 8] == I64[R1 + 7]) goto c49dE; else goto c49dK;
       c49dE: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49dK: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.107760522 UTC

[section ""data" . GHC.Stable.$fEqStablePtr_closure" {
     GHC.Stable.$fEqStablePtr_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Stable.$fEqStablePtr_$c==_closure+2;
         const GHC.Stable.$fEqStablePtr_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.109691475 UTC

[section ""data" . GHC.Stable.newStablePtr1_closure" {
     GHC.Stable.newStablePtr1_closure:
         const GHC.Stable.newStablePtr1_info;
 },
 GHC.Stable.newStablePtr1_entry() //  [R2]
         { info_tbl: [(c49ei,
                       label: GHC.Stable.newStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ei: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49ej; else goto c49ek;
       c49ej: // global
           R2 = R2;
           R1 = GHC.Stable.newStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49ek: // global
           I64[Sp - 8] = block_c49ef_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_makeStablePtr#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49ef() //  [R1]
         { info_tbl: [(c49ef,
                       label: block_c49ef_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ef: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49en; else goto c49em;
       c49en: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c49em: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.115289689 UTC

[section ""data" . GHC.Stable.newStablePtr_closure" {
     GHC.Stable.newStablePtr_closure:
         const GHC.Stable.newStablePtr_info;
 },
 GHC.Stable.newStablePtr_entry() //  [R2]
         { info_tbl: [(c49eD,
                       label: GHC.Stable.newStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49eD: // global
           R2 = R2;
           call GHC.Stable.newStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.118538949 UTC

[section ""data" . GHC.Stable.deRefStablePtr1_closure" {
     GHC.Stable.deRefStablePtr1_closure:
         const GHC.Stable.deRefStablePtr1_info;
 },
 GHC.Stable.deRefStablePtr1_entry() //  [R2]
         { info_tbl: [(c49eR,
                       label: GHC.Stable.deRefStablePtr1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49eR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49eS; else goto c49eT;
       c49eS: // global
           R2 = R2;
           R1 = GHC.Stable.deRefStablePtr1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49eT: // global
           I64[Sp - 8] = block_c49eO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49eX; else goto c49eP;
       u49eX: // global
           call _c49eO(R1) args: 0, res: 0, upd: 0;
       c49eP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49eO() //  [R1]
         { info_tbl: [(c49eO,
                       label: block_c49eO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49eO: // global
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.124088356 UTC

[section ""data" . GHC.Stable.deRefStablePtr_closure" {
     GHC.Stable.deRefStablePtr_closure:
         const GHC.Stable.deRefStablePtr_info;
 },
 GHC.Stable.deRefStablePtr_entry() //  [R2]
         { info_tbl: [(c49fc,
                       label: GHC.Stable.deRefStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49fc: // global
           R2 = R2;
           call GHC.Stable.deRefStablePtr1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.127637655 UTC

[section ""data" . GHC.Stable.castStablePtrToPtr_closure" {
     GHC.Stable.castStablePtrToPtr_closure:
         const GHC.Stable.castStablePtrToPtr_info;
 },
 GHC.Stable.castStablePtrToPtr_entry() //  [R2]
         { info_tbl: [(c49fq,
                       label: GHC.Stable.castStablePtrToPtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49fq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49fu; else goto c49fv;
       c49fu: // global
           R2 = R2;
           R1 = GHC.Stable.castStablePtrToPtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49fv: // global
           I64[Sp - 8] = block_c49fn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49fz; else goto c49fo;
       u49fz: // global
           call _c49fn(R1) args: 0, res: 0, upd: 0;
       c49fo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49fn() //  [R1]
         { info_tbl: [(c49fn,
                       label: block_c49fn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49fn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49fy; else goto c49fx;
       c49fy: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c49fx: // global
           _s49cb::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s49cb::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.133912802 UTC

[section ""data" . GHC.Stable.castPtrToStablePtr_closure" {
     GHC.Stable.castPtrToStablePtr_closure:
         const GHC.Stable.castPtrToStablePtr_info;
 },
 GHC.Stable.castPtrToStablePtr_entry() //  [R2]
         { info_tbl: [(c49fT,
                       label: GHC.Stable.castPtrToStablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49fT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49fX; else goto c49fY;
       c49fX: // global
           R2 = R2;
           R1 = GHC.Stable.castPtrToStablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49fY: // global
           I64[Sp - 8] = block_c49fQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49g2; else goto c49fR;
       u49g2: // global
           call _c49fQ(R1) args: 0, res: 0, upd: 0;
       c49fR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49fQ() //  [R1]
         { info_tbl: [(c49fQ,
                       label: block_c49fQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49fQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49g1; else goto c49g0;
       c49g1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c49g0: // global
           _s49ce::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s49ce::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.139636583 UTC

[section ""cstring" . GHC.Stable.$trModule4_bytes" {
     GHC.Stable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.141319518 UTC

[section ""data" . GHC.Stable.$trModule3_closure" {
     GHC.Stable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.14284174 UTC

[section ""cstring" . GHC.Stable.$trModule2_bytes" {
     GHC.Stable.$trModule2_bytes:
         I8[] [71,72,67,46,83,116,97,98,108,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.144353272 UTC

[section ""data" . GHC.Stable.$trModule1_closure" {
     GHC.Stable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.146207965 UTC

[section ""data" . GHC.Stable.$trModule_closure" {
     GHC.Stable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Stable.$trModule3_closure+1;
         const GHC.Stable.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.147850413 UTC

[section ""data" . $krep_r490l_closure" {
     $krep_r490l_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.149594259 UTC

[section ""data" . $krep1_r490m_closure" {
     $krep1_r490m_closure:
         const :_con_info;
         const $krep_r490l_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.151262273 UTC

[section ""data" . $krep2_r490n_closure" {
     $krep2_r490n_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcStablePtr#_closure;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.15309367 UTC

[section ""cstring" . GHC.Stable.$tcStablePtr2_bytes" {
     GHC.Stable.$tcStablePtr2_bytes:
         I8[] [83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.155116673 UTC

[section ""data" . GHC.Stable.$tcStablePtr1_closure" {
     GHC.Stable.$tcStablePtr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tcStablePtr2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.156959066 UTC

[section ""data" . GHC.Stable.$tcStablePtr_closure" {
     GHC.Stable.$tcStablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tcStablePtr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 2212012310673685839;
         const 12855461380626358372;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.158630649 UTC

[section ""data" . $krep3_r490o_closure" {
     $krep3_r490o_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Stable.$tcStablePtr_closure+1;
         const $krep1_r490m_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.160449962 UTC

[section ""data" . GHC.Stable.$tc'StablePtr1_closure" {
     GHC.Stable.$tc'StablePtr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r490n_closure+1;
         const $krep3_r490o_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.16203087 UTC

[section ""cstring" . GHC.Stable.$tc'StablePtr3_bytes" {
     GHC.Stable.$tc'StablePtr3_bytes:
         I8[] [39,83,116,97,98,108,101,80,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.163575041 UTC

[section ""data" . GHC.Stable.$tc'StablePtr2_closure" {
     GHC.Stable.$tc'StablePtr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Stable.$tc'StablePtr3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.165451818 UTC

[section ""data" . GHC.Stable.$tc'StablePtr_closure" {
     GHC.Stable.$tc'StablePtr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Stable.$trModule_closure+1;
         const GHC.Stable.$tc'StablePtr2_closure+1;
         const GHC.Stable.$tc'StablePtr1_closure+4;
         const 2898738257036715821;
         const 1170603501179803931;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.167509149 UTC

[section ""data" . freeStablePtr1_r490p_closure" {
     freeStablePtr1_r490p_closure:
         const freeStablePtr1_r490p_info;
 },
 freeStablePtr1_r490p_entry() //  [R2]
         { info_tbl: [(c49gC,
                       label: freeStablePtr1_r490p_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49gC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49gD; else goto c49gE;
       c49gD: // global
           R2 = R2;
           R1 = freeStablePtr1_r490p_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49gE: // global
           I64[Sp - 8] = block_c49gz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49gK; else goto c49gA;
       u49gK: // global
           call _c49gz(R1) args: 0, res: 0, upd: 0;
       c49gA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49gz() //  [R1]
         { info_tbl: [(c49gz,
                       label: block_c49gz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49gz: // global
           call "ccall" arg hints:  [PtrHint]  result hints:  [] hs_free_stable_ptr(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.174431916 UTC

[section ""data" . GHC.Stable.freeStablePtr_closure" {
     GHC.Stable.freeStablePtr_closure:
         const GHC.Stable.freeStablePtr_info;
 },
 GHC.Stable.freeStablePtr_entry() //  [R2]
         { info_tbl: [(c49h1,
                       label: GHC.Stable.freeStablePtr_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49h1: // global
           R2 = R2;
           call freeStablePtr1_r490p_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.178257277 UTC

[section ""data" . GHC.Stable.StablePtr_closure" {
     GHC.Stable.StablePtr_closure:
         const GHC.Stable.StablePtr_info;
 },
 GHC.Stable.StablePtr_entry() //  [R2]
         { info_tbl: [(c49hd,
                       label: GHC.Stable.StablePtr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49hd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c49hh; else goto c49hg;
       c49hh: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Stable.StablePtr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49hg: // global
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.181908687 UTC

[GHC.Stable.StablePtr_con_entry() //  [R1]
         { info_tbl: [(c49ho,
                       label: GHC.Stable.StablePtr_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,83,116,97,98,108,101,46,83,116,97,98,108,101,80,116,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c49ho: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:59:02.185147869 UTC

[section ""relreadonly" . S49hv_srt" { S49hv_srt:
 }]

