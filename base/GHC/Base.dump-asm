
==================== Asm code ====================
2018-03-16 15:54:44.163496653 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Monad_closure
.type GHC.Base.$p1Monad_closure, @object
GHC.Base.$p1Monad_closure:
	.quad	GHC.Base.$p1Monad_info


==================== Asm code ====================
2018-03-16 15:54:44.164390362 UTC

.section .text
.align 8
.globl GHC.Base.$p1Monad_entry
.type GHC.Base.$p1Monad_entry, @object
GHC.Base.$p1Monad_entry:
_cd0u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd0v
_cd0w:
	movq $block_cd0r_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd0r
_cd0s:
	movq (%rbx),%rax
	jmp *(%rax)
_cd0v:
	movl $GHC.Base.$p1Monad_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p1Monad_entry, .-GHC.Base.$p1Monad_entry


==================== Asm code ====================
2018-03-16 15:54:44.165019121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Monad_info
.type GHC.Base.$p1Monad_info, @object
GHC.Base.$p1Monad_info:
	.quad	GHC.Base.$p1Monad_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.165730631 UTC

.section .text
.align 8
_cd0r:
_cd0r:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd0r, .-_cd0r


==================== Asm code ====================
2018-03-16 15:54:44.166298631 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd0r_info:
	.quad	_cd0r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.168972189 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.>>=_closure
.type GHC.Base.>>=_closure, @object
GHC.Base.>>=_closure:
	.quad	GHC.Base.>>=_info


==================== Asm code ====================
2018-03-16 15:54:44.170289769 UTC

.section .text
.align 8
.globl GHC.Base.>>=_entry
.type GHC.Base.>>=_entry, @object
GHC.Base.>>=_entry:
_cd0T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd0U
_cd0V:
	movq $block_cd0Q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd0Q
_cd0R:
	movq (%rbx),%rax
	jmp *(%rax)
_cd0U:
	movl $GHC.Base.>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.>>=_entry, .-GHC.Base.>>=_entry


==================== Asm code ====================
2018-03-16 15:54:44.17094612 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.>>=_info
.type GHC.Base.>>=_info, @object
GHC.Base.>>=_info:
	.quad	GHC.Base.>>=_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.171596705 UTC

.section .text
.align 8
_cd0Q:
_cd0Q:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd0Q, .-_cd0Q


==================== Asm code ====================
2018-03-16 15:54:44.172150507 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd0Q_info:
	.quad	_cd0Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.174868909 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.>>_closure
.type GHC.Base.>>_closure, @object
GHC.Base.>>_closure:
	.quad	GHC.Base.>>_info


==================== Asm code ====================
2018-03-16 15:54:44.175640495 UTC

.section .text
.align 8
.globl GHC.Base.>>_entry
.type GHC.Base.>>_entry, @object
GHC.Base.>>_entry:
_cd1g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd1h
_cd1i:
	movq $block_cd1d_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd1d
_cd1e:
	movq (%rbx),%rax
	jmp *(%rax)
_cd1h:
	movl $GHC.Base.>>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.>>_entry, .-GHC.Base.>>_entry


==================== Asm code ====================
2018-03-16 15:54:44.176294254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.>>_info
.type GHC.Base.>>_info, @object
GHC.Base.>>_info:
	.quad	GHC.Base.>>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.176934513 UTC

.section .text
.align 8
_cd1d:
_cd1d:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd1d, .-_cd1d


==================== Asm code ====================
2018-03-16 15:54:44.177543662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd1d_info:
	.quad	_cd1d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.180213469 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.return_closure
.type GHC.Base.return_closure, @object
GHC.Base.return_closure:
	.quad	GHC.Base.return_info


==================== Asm code ====================
2018-03-16 15:54:44.180982251 UTC

.section .text
.align 8
.globl GHC.Base.return_entry
.type GHC.Base.return_entry, @object
GHC.Base.return_entry:
_cd1D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd1E
_cd1F:
	movq $block_cd1A_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd1A
_cd1B:
	movq (%rbx),%rax
	jmp *(%rax)
_cd1E:
	movl $GHC.Base.return_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.return_entry, .-GHC.Base.return_entry


==================== Asm code ====================
2018-03-16 15:54:44.181904334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.return_info
.type GHC.Base.return_info, @object
GHC.Base.return_info:
	.quad	GHC.Base.return_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.182518038 UTC

.section .text
.align 8
_cd1A:
_cd1A:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd1A, .-_cd1A


==================== Asm code ====================
2018-03-16 15:54:44.18312733 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd1A_info:
	.quad	_cd1A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.18623855 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.fail_closure
.type GHC.Base.fail_closure, @object
GHC.Base.fail_closure:
	.quad	GHC.Base.fail_info


==================== Asm code ====================
2018-03-16 15:54:44.186968613 UTC

.section .text
.align 8
.globl GHC.Base.fail_entry
.type GHC.Base.fail_entry, @object
GHC.Base.fail_entry:
_cd20:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd21
_cd22:
	movq $block_cd1X_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd1X
_cd1Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cd21:
	movl $GHC.Base.fail_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.fail_entry, .-GHC.Base.fail_entry


==================== Asm code ====================
2018-03-16 15:54:44.187639434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.fail_info
.type GHC.Base.fail_info, @object
GHC.Base.fail_info:
	.quad	GHC.Base.fail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.188277839 UTC

.section .text
.align 8
_cd1X:
_cd1X:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd1X, .-_cd1X


==================== Asm code ====================
2018-03-16 15:54:44.188857215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd1X_info:
	.quad	_cd1X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.191572723 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.fmap_closure
.type GHC.Base.fmap_closure, @object
GHC.Base.fmap_closure:
	.quad	GHC.Base.fmap_info


==================== Asm code ====================
2018-03-16 15:54:44.192333249 UTC

.section .text
.align 8
.globl GHC.Base.fmap_entry
.type GHC.Base.fmap_entry, @object
GHC.Base.fmap_entry:
_cd2n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd2o
_cd2p:
	movq $block_cd2k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd2k
_cd2l:
	movq (%rbx),%rax
	jmp *(%rax)
_cd2o:
	movl $GHC.Base.fmap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.fmap_entry, .-GHC.Base.fmap_entry


==================== Asm code ====================
2018-03-16 15:54:44.192944012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.fmap_info
.type GHC.Base.fmap_info, @object
GHC.Base.fmap_info:
	.quad	GHC.Base.fmap_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.193591851 UTC

.section .text
.align 8
_cd2k:
_cd2k:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd2k, .-_cd2k


==================== Asm code ====================
2018-03-16 15:54:44.194105403 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd2k_info:
	.quad	_cd2k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.196760808 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<$_closure
.type GHC.Base.<$_closure, @object
GHC.Base.<$_closure:
	.quad	GHC.Base.<$_info


==================== Asm code ====================
2018-03-16 15:54:44.19758398 UTC

.section .text
.align 8
.globl GHC.Base.<$_entry
.type GHC.Base.<$_entry, @object
GHC.Base.<$_entry:
_cd2K:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd2L
_cd2M:
	movq $block_cd2H_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd2H
_cd2I:
	movq (%rbx),%rax
	jmp *(%rax)
_cd2L:
	movl $GHC.Base.<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<$_entry, .-GHC.Base.<$_entry


==================== Asm code ====================
2018-03-16 15:54:44.198637236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<$_info
.type GHC.Base.<$_info, @object
GHC.Base.<$_info:
	.quad	GHC.Base.<$_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.199239202 UTC

.section .text
.align 8
_cd2H:
_cd2H:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd2H, .-_cd2H


==================== Asm code ====================
2018-03-16 15:54:44.199791849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd2H_info:
	.quad	_cd2H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.20240963 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Applicative_closure
.type GHC.Base.$p1Applicative_closure, @object
GHC.Base.$p1Applicative_closure:
	.quad	GHC.Base.$p1Applicative_info


==================== Asm code ====================
2018-03-16 15:54:44.203108539 UTC

.section .text
.align 8
.globl GHC.Base.$p1Applicative_entry
.type GHC.Base.$p1Applicative_entry, @object
GHC.Base.$p1Applicative_entry:
_cd37:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd38
_cd39:
	movq $block_cd34_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd34
_cd35:
	movq (%rbx),%rax
	jmp *(%rax)
_cd38:
	movl $GHC.Base.$p1Applicative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p1Applicative_entry, .-GHC.Base.$p1Applicative_entry


==================== Asm code ====================
2018-03-16 15:54:44.203756055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Applicative_info
.type GHC.Base.$p1Applicative_info, @object
GHC.Base.$p1Applicative_info:
	.quad	GHC.Base.$p1Applicative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.204392859 UTC

.section .text
.align 8
_cd34:
_cd34:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd34, .-_cd34


==================== Asm code ====================
2018-03-16 15:54:44.204936378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd34_info:
	.quad	_cd34
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.207596027 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.pure_closure
.type GHC.Base.pure_closure, @object
GHC.Base.pure_closure:
	.quad	GHC.Base.pure_info


==================== Asm code ====================
2018-03-16 15:54:44.208331227 UTC

.section .text
.align 8
.globl GHC.Base.pure_entry
.type GHC.Base.pure_entry, @object
GHC.Base.pure_entry:
_cd3w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd3x
_cd3y:
	movq $block_cd3t_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd3t
_cd3u:
	movq (%rbx),%rax
	jmp *(%rax)
_cd3x:
	movl $GHC.Base.pure_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.pure_entry, .-GHC.Base.pure_entry


==================== Asm code ====================
2018-03-16 15:54:44.208936536 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.pure_info
.type GHC.Base.pure_info, @object
GHC.Base.pure_info:
	.quad	GHC.Base.pure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.209601237 UTC

.section .text
.align 8
_cd3t:
_cd3t:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd3t, .-_cd3t


==================== Asm code ====================
2018-03-16 15:54:44.210156652 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd3t_info:
	.quad	_cd3t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.213536065 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<*>_closure
.type GHC.Base.<*>_closure, @object
GHC.Base.<*>_closure:
	.quad	GHC.Base.<*>_info


==================== Asm code ====================
2018-03-16 15:54:44.214336137 UTC

.section .text
.align 8
.globl GHC.Base.<*>_entry
.type GHC.Base.<*>_entry, @object
GHC.Base.<*>_entry:
_cd3T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd3U
_cd3V:
	movq $block_cd3Q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd3Q
_cd3R:
	movq (%rbx),%rax
	jmp *(%rax)
_cd3U:
	movl $GHC.Base.<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<*>_entry, .-GHC.Base.<*>_entry


==================== Asm code ====================
2018-03-16 15:54:44.214986037 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<*>_info
.type GHC.Base.<*>_info, @object
GHC.Base.<*>_info:
	.quad	GHC.Base.<*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.215640833 UTC

.section .text
.align 8
_cd3Q:
_cd3Q:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd3Q, .-_cd3Q


==================== Asm code ====================
2018-03-16 15:54:44.216161711 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd3Q_info:
	.quad	_cd3Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.218814954 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA2_closure
.type GHC.Base.liftA2_closure, @object
GHC.Base.liftA2_closure:
	.quad	GHC.Base.liftA2_info


==================== Asm code ====================
2018-03-16 15:54:44.219530723 UTC

.section .text
.align 8
.globl GHC.Base.liftA2_entry
.type GHC.Base.liftA2_entry, @object
GHC.Base.liftA2_entry:
_cd4g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd4h
_cd4i:
	movq $block_cd4d_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd4d
_cd4e:
	movq (%rbx),%rax
	jmp *(%rax)
_cd4h:
	movl $GHC.Base.liftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftA2_entry, .-GHC.Base.liftA2_entry


==================== Asm code ====================
2018-03-16 15:54:44.220142429 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA2_info
.type GHC.Base.liftA2_info, @object
GHC.Base.liftA2_info:
	.quad	GHC.Base.liftA2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.22078137 UTC

.section .text
.align 8
_cd4d:
_cd4d:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd4d, .-_cd4d


==================== Asm code ====================
2018-03-16 15:54:44.221358427 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd4d_info:
	.quad	_cd4d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.223971301 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.*>_closure
.type GHC.Base.*>_closure, @object
GHC.Base.*>_closure:
	.quad	GHC.Base.*>_info


==================== Asm code ====================
2018-03-16 15:54:44.224751467 UTC

.section .text
.align 8
.globl GHC.Base.*>_entry
.type GHC.Base.*>_entry, @object
GHC.Base.*>_entry:
_cd4D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd4E
_cd4F:
	movq $block_cd4A_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd4A
_cd4B:
	movq (%rbx),%rax
	jmp *(%rax)
_cd4E:
	movl $GHC.Base.*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.*>_entry, .-GHC.Base.*>_entry


==================== Asm code ====================
2018-03-16 15:54:44.225433385 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.*>_info
.type GHC.Base.*>_info, @object
GHC.Base.*>_info:
	.quad	GHC.Base.*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.226055897 UTC

.section .text
.align 8
_cd4A:
_cd4A:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd4A, .-_cd4A


==================== Asm code ====================
2018-03-16 15:54:44.226655449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd4A_info:
	.quad	_cd4A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.230356447 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<*_closure
.type GHC.Base.<*_closure, @object
GHC.Base.<*_closure:
	.quad	GHC.Base.<*_info


==================== Asm code ====================
2018-03-16 15:54:44.231122809 UTC

.section .text
.align 8
.globl GHC.Base.<*_entry
.type GHC.Base.<*_entry, @object
GHC.Base.<*_entry:
_cd50:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd51
_cd52:
	movq $block_cd4X_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd4X
_cd4Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cd51:
	movl $GHC.Base.<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<*_entry, .-GHC.Base.<*_entry


==================== Asm code ====================
2018-03-16 15:54:44.231757669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<*_info
.type GHC.Base.<*_info, @object
GHC.Base.<*_info:
	.quad	GHC.Base.<*_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.232393158 UTC

.section .text
.align 8
_cd4X:
_cd4X:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd4X, .-_cd4X


==================== Asm code ====================
2018-03-16 15:54:44.232939595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd4X_info:
	.quad	_cd4X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.23567996 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<>_closure
.type GHC.Base.<>_closure, @object
GHC.Base.<>_closure:
	.quad	GHC.Base.<>_info


==================== Asm code ====================
2018-03-16 15:54:44.236443169 UTC

.section .text
.align 8
.globl GHC.Base.<>_entry
.type GHC.Base.<>_entry, @object
GHC.Base.<>_entry:
_cd5n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd5o
_cd5p:
	movq $block_cd5k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd5k
_cd5l:
	movq (%rbx),%rax
	jmp *(%rax)
_cd5o:
	movl $GHC.Base.<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<>_entry, .-GHC.Base.<>_entry


==================== Asm code ====================
2018-03-16 15:54:44.237085252 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<>_info
.type GHC.Base.<>_info, @object
GHC.Base.<>_info:
	.quad	GHC.Base.<>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.23857795 UTC

.section .text
.align 8
_cd5k:
_cd5k:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd5k, .-_cd5k


==================== Asm code ====================
2018-03-16 15:54:44.239106109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd5k_info:
	.quad	_cd5k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.241825256 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.sconcat_closure
.type GHC.Base.sconcat_closure, @object
GHC.Base.sconcat_closure:
	.quad	GHC.Base.sconcat_info


==================== Asm code ====================
2018-03-16 15:54:44.242566095 UTC

.section .text
.align 8
.globl GHC.Base.sconcat_entry
.type GHC.Base.sconcat_entry, @object
GHC.Base.sconcat_entry:
_cd5K:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd5L
_cd5M:
	movq $block_cd5H_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd5H
_cd5I:
	movq (%rbx),%rax
	jmp *(%rax)
_cd5L:
	movl $GHC.Base.sconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.sconcat_entry, .-GHC.Base.sconcat_entry


==================== Asm code ====================
2018-03-16 15:54:44.243253273 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.sconcat_info
.type GHC.Base.sconcat_info, @object
GHC.Base.sconcat_info:
	.quad	GHC.Base.sconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.244223534 UTC

.section .text
.align 8
_cd5H:
_cd5H:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd5H, .-_cd5H


==================== Asm code ====================
2018-03-16 15:54:44.244802154 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd5H_info:
	.quad	_cd5H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.247431955 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.stimes_closure
.type GHC.Base.stimes_closure, @object
GHC.Base.stimes_closure:
	.quad	GHC.Base.stimes_info


==================== Asm code ====================
2018-03-16 15:54:44.248171696 UTC

.section .text
.align 8
.globl GHC.Base.stimes_entry
.type GHC.Base.stimes_entry, @object
GHC.Base.stimes_entry:
_cd67:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd68
_cd69:
	movq $block_cd64_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd64
_cd65:
	movq (%rbx),%rax
	jmp *(%rax)
_cd68:
	movl $GHC.Base.stimes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.stimes_entry, .-GHC.Base.stimes_entry


==================== Asm code ====================
2018-03-16 15:54:44.248836798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.stimes_info
.type GHC.Base.stimes_info, @object
GHC.Base.stimes_info:
	.quad	GHC.Base.stimes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.249480303 UTC

.section .text
.align 8
_cd64:
_cd64:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd64, .-_cd64


==================== Asm code ====================
2018-03-16 15:54:44.249983309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd64_info:
	.quad	_cd64
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.252582217 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Monoid_closure
.type GHC.Base.$p1Monoid_closure, @object
GHC.Base.$p1Monoid_closure:
	.quad	GHC.Base.$p1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:44.253365958 UTC

.section .text
.align 8
.globl GHC.Base.$p1Monoid_entry
.type GHC.Base.$p1Monoid_entry, @object
GHC.Base.$p1Monoid_entry:
_cd6u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd6v
_cd6w:
	movq $block_cd6r_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd6r
_cd6s:
	movq (%rbx),%rax
	jmp *(%rax)
_cd6v:
	movl $GHC.Base.$p1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p1Monoid_entry, .-GHC.Base.$p1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:44.254010143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Monoid_info
.type GHC.Base.$p1Monoid_info, @object
GHC.Base.$p1Monoid_info:
	.quad	GHC.Base.$p1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.254671853 UTC

.section .text
.align 8
_cd6r:
_cd6r:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd6r, .-_cd6r


==================== Asm code ====================
2018-03-16 15:54:44.255276869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd6r_info:
	.quad	_cd6r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.258316577 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mempty_closure
.type GHC.Base.mempty_closure, @object
GHC.Base.mempty_closure:
	.quad	GHC.Base.mempty_info


==================== Asm code ====================
2018-03-16 15:54:44.25907814 UTC

.section .text
.align 8
.globl GHC.Base.mempty_entry
.type GHC.Base.mempty_entry, @object
GHC.Base.mempty_entry:
_cd6T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd6U
_cd6V:
	movq $block_cd6Q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd6Q
_cd6R:
	movq (%rbx),%rax
	jmp *(%rax)
_cd6U:
	movl $GHC.Base.mempty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mempty_entry, .-GHC.Base.mempty_entry


==================== Asm code ====================
2018-03-16 15:54:44.259721235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mempty_info
.type GHC.Base.mempty_info, @object
GHC.Base.mempty_info:
	.quad	GHC.Base.mempty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.260332321 UTC

.section .text
.align 8
_cd6Q:
_cd6Q:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd6Q, .-_cd6Q


==================== Asm code ====================
2018-03-16 15:54:44.260891178 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd6Q_info:
	.quad	_cd6Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.26351253 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mappend_closure
.type GHC.Base.mappend_closure, @object
GHC.Base.mappend_closure:
	.quad	GHC.Base.mappend_info


==================== Asm code ====================
2018-03-16 15:54:44.264252761 UTC

.section .text
.align 8
.globl GHC.Base.mappend_entry
.type GHC.Base.mappend_entry, @object
GHC.Base.mappend_entry:
_cd7g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd7h
_cd7i:
	movq $block_cd7d_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd7d
_cd7e:
	movq (%rbx),%rax
	jmp *(%rax)
_cd7h:
	movl $GHC.Base.mappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mappend_entry, .-GHC.Base.mappend_entry


==================== Asm code ====================
2018-03-16 15:54:44.264903272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mappend_info
.type GHC.Base.mappend_info, @object
GHC.Base.mappend_info:
	.quad	GHC.Base.mappend_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.265544366 UTC

.section .text
.align 8
_cd7d:
_cd7d:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd7d, .-_cd7d


==================== Asm code ====================
2018-03-16 15:54:44.266111363 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd7d_info:
	.quad	_cd7d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.268773993 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mconcat_closure
.type GHC.Base.mconcat_closure, @object
GHC.Base.mconcat_closure:
	.quad	GHC.Base.mconcat_info


==================== Asm code ====================
2018-03-16 15:54:44.269568858 UTC

.section .text
.align 8
.globl GHC.Base.mconcat_entry
.type GHC.Base.mconcat_entry, @object
GHC.Base.mconcat_entry:
_cd7D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd7E
_cd7F:
	movq $block_cd7A_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd7A
_cd7B:
	movq (%rbx),%rax
	jmp *(%rax)
_cd7E:
	movl $GHC.Base.mconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mconcat_entry, .-GHC.Base.mconcat_entry


==================== Asm code ====================
2018-03-16 15:54:44.270197346 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mconcat_info
.type GHC.Base.mconcat_info, @object
GHC.Base.mconcat_info:
	.quad	GHC.Base.mconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.27083437 UTC

.section .text
.align 8
_cd7A:
_cd7A:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd7A, .-_cd7A


==================== Asm code ====================
2018-03-16 15:54:44.271389317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd7A_info:
	.quad	_cd7A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.274433843 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1MonadPlus_closure
.type GHC.Base.$p1MonadPlus_closure, @object
GHC.Base.$p1MonadPlus_closure:
	.quad	GHC.Base.$p1MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:44.275229494 UTC

.section .text
.align 8
.globl GHC.Base.$p1MonadPlus_entry
.type GHC.Base.$p1MonadPlus_entry, @object
GHC.Base.$p1MonadPlus_entry:
_cd80:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd81
_cd82:
	movq $block_cd7X_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd7X
_cd7Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cd81:
	movl $GHC.Base.$p1MonadPlus_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p1MonadPlus_entry, .-GHC.Base.$p1MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:44.275865478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1MonadPlus_info
.type GHC.Base.$p1MonadPlus_info, @object
GHC.Base.$p1MonadPlus_info:
	.quad	GHC.Base.$p1MonadPlus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.276495931 UTC

.section .text
.align 8
_cd7X:
_cd7X:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd7X, .-_cd7X


==================== Asm code ====================
2018-03-16 15:54:44.277044763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd7X_info:
	.quad	_cd7X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.279731676 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p2MonadPlus_closure
.type GHC.Base.$p2MonadPlus_closure, @object
GHC.Base.$p2MonadPlus_closure:
	.quad	GHC.Base.$p2MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:44.2804612 UTC

.section .text
.align 8
.globl GHC.Base.$p2MonadPlus_entry
.type GHC.Base.$p2MonadPlus_entry, @object
GHC.Base.$p2MonadPlus_entry:
_cd8p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd8q
_cd8r:
	movq $block_cd8m_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd8m
_cd8n:
	movq (%rbx),%rax
	jmp *(%rax)
_cd8q:
	movl $GHC.Base.$p2MonadPlus_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p2MonadPlus_entry, .-GHC.Base.$p2MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:44.281073239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p2MonadPlus_info
.type GHC.Base.$p2MonadPlus_info, @object
GHC.Base.$p2MonadPlus_info:
	.quad	GHC.Base.$p2MonadPlus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.282135357 UTC

.section .text
.align 8
_cd8m:
_cd8m:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd8m, .-_cd8m


==================== Asm code ====================
2018-03-16 15:54:44.282731316 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd8m_info:
	.quad	_cd8m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.285413036 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mzero_closure
.type GHC.Base.mzero_closure, @object
GHC.Base.mzero_closure:
	.quad	GHC.Base.mzero_info


==================== Asm code ====================
2018-03-16 15:54:44.286161709 UTC

.section .text
.align 8
.globl GHC.Base.mzero_entry
.type GHC.Base.mzero_entry, @object
GHC.Base.mzero_entry:
_cd8O:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd8P
_cd8Q:
	movq $block_cd8L_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd8L
_cd8M:
	movq (%rbx),%rax
	jmp *(%rax)
_cd8P:
	movl $GHC.Base.mzero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mzero_entry, .-GHC.Base.mzero_entry


==================== Asm code ====================
2018-03-16 15:54:44.287116698 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mzero_info
.type GHC.Base.mzero_info, @object
GHC.Base.mzero_info:
	.quad	GHC.Base.mzero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.28770991 UTC

.section .text
.align 8
_cd8L:
_cd8L:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd8L, .-_cd8L


==================== Asm code ====================
2018-03-16 15:54:44.288249974 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd8L_info:
	.quad	_cd8L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.291045777 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mplus_closure
.type GHC.Base.mplus_closure, @object
GHC.Base.mplus_closure:
	.quad	GHC.Base.mplus_info


==================== Asm code ====================
2018-03-16 15:54:44.291808358 UTC

.section .text
.align 8
.globl GHC.Base.mplus_entry
.type GHC.Base.mplus_entry, @object
GHC.Base.mplus_entry:
_cd9b:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd9c
_cd9d:
	movq $block_cd98_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd98
_cd99:
	movq (%rbx),%rax
	jmp *(%rax)
_cd9c:
	movl $GHC.Base.mplus_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mplus_entry, .-GHC.Base.mplus_entry


==================== Asm code ====================
2018-03-16 15:54:44.292453632 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mplus_info
.type GHC.Base.mplus_info, @object
GHC.Base.mplus_info:
	.quad	GHC.Base.mplus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.293044732 UTC

.section .text
.align 8
_cd98:
_cd98:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd98, .-_cd98


==================== Asm code ====================
2018-03-16 15:54:44.293636336 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd98_info:
	.quad	_cd98
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.296252174 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Alternative_closure
.type GHC.Base.$p1Alternative_closure, @object
GHC.Base.$p1Alternative_closure:
	.quad	GHC.Base.$p1Alternative_info


==================== Asm code ====================
2018-03-16 15:54:44.296995904 UTC

.section .text
.align 8
.globl GHC.Base.$p1Alternative_entry
.type GHC.Base.$p1Alternative_entry, @object
GHC.Base.$p1Alternative_entry:
_cd9y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd9z
_cd9A:
	movq $block_cd9v_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd9v
_cd9w:
	movq (%rbx),%rax
	jmp *(%rax)
_cd9z:
	movl $GHC.Base.$p1Alternative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$p1Alternative_entry, .-GHC.Base.$p1Alternative_entry


==================== Asm code ====================
2018-03-16 15:54:44.298648124 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Alternative_info
.type GHC.Base.$p1Alternative_info, @object
GHC.Base.$p1Alternative_info:
	.quad	GHC.Base.$p1Alternative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.299261167 UTC

.section .text
.align 8
_cd9v:
_cd9v:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cd9v, .-_cd9v


==================== Asm code ====================
2018-03-16 15:54:44.299795099 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd9v_info:
	.quad	_cd9v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.302993347 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.empty_closure
.type GHC.Base.empty_closure, @object
GHC.Base.empty_closure:
	.quad	GHC.Base.empty_info


==================== Asm code ====================
2018-03-16 15:54:44.303754691 UTC

.section .text
.align 8
.globl GHC.Base.empty_entry
.type GHC.Base.empty_entry, @object
GHC.Base.empty_entry:
_cd9X:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cd9Y
_cd9Z:
	movq $block_cd9U_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cd9U
_cd9V:
	movq (%rbx),%rax
	jmp *(%rax)
_cd9Y:
	movl $GHC.Base.empty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.empty_entry, .-GHC.Base.empty_entry


==================== Asm code ====================
2018-03-16 15:54:44.304427365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.empty_info
.type GHC.Base.empty_info, @object
GHC.Base.empty_info:
	.quad	GHC.Base.empty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.305052337 UTC

.section .text
.align 8
_cd9U:
_cd9U:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cd9U, .-_cd9U


==================== Asm code ====================
2018-03-16 15:54:44.305689244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cd9U_info:
	.quad	_cd9U
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.308352413 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<|>_closure
.type GHC.Base.<|>_closure, @object
GHC.Base.<|>_closure:
	.quad	GHC.Base.<|>_info


==================== Asm code ====================
2018-03-16 15:54:44.309066401 UTC

.section .text
.align 8
.globl GHC.Base.<|>_entry
.type GHC.Base.<|>_entry, @object
GHC.Base.<|>_entry:
_cdak:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdal
_cdam:
	movq $block_cdah_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdah
_cdai:
	movq (%rbx),%rax
	jmp *(%rax)
_cdal:
	movl $GHC.Base.<|>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<|>_entry, .-GHC.Base.<|>_entry


==================== Asm code ====================
2018-03-16 15:54:44.309737349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<|>_info
.type GHC.Base.<|>_info, @object
GHC.Base.<|>_info:
	.quad	GHC.Base.<|>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.310357727 UTC

.section .text
.align 8
_cdah:
_cdah:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cdah, .-_cdah


==================== Asm code ====================
2018-03-16 15:54:44.31092837 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdah_info:
	.quad	_cdah
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.313639097 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.some_closure
.type GHC.Base.some_closure, @object
GHC.Base.some_closure:
	.quad	GHC.Base.some_info


==================== Asm code ====================
2018-03-16 15:54:44.31439063 UTC

.section .text
.align 8
.globl GHC.Base.some_entry
.type GHC.Base.some_entry, @object
GHC.Base.some_entry:
_cdaH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdaI
_cdaJ:
	movq $block_cdaE_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdaE
_cdaF:
	movq (%rbx),%rax
	jmp *(%rax)
_cdaI:
	movl $GHC.Base.some_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.some_entry, .-GHC.Base.some_entry


==================== Asm code ====================
2018-03-16 15:54:44.315056336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.some_info
.type GHC.Base.some_info, @object
GHC.Base.some_info:
	.quad	GHC.Base.some_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.316072066 UTC

.section .text
.align 8
_cdaE:
_cdaE:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cdaE, .-_cdaE


==================== Asm code ====================
2018-03-16 15:54:44.316633389 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdaE_info:
	.quad	_cdaE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.319327045 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.many_closure
.type GHC.Base.many_closure, @object
GHC.Base.many_closure:
	.quad	GHC.Base.many_info


==================== Asm code ====================
2018-03-16 15:54:44.320034217 UTC

.section .text
.align 8
.globl GHC.Base.many_entry
.type GHC.Base.many_entry, @object
GHC.Base.many_entry:
_cdb4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdb5
_cdb6:
	movq $block_cdb1_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdb1
_cdb2:
	movq (%rbx),%rax
	jmp *(%rax)
_cdb5:
	movl $GHC.Base.many_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.many_entry, .-GHC.Base.many_entry


==================== Asm code ====================
2018-03-16 15:54:44.320675307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.many_info
.type GHC.Base.many_info, @object
GHC.Base.many_info:
	.quad	GHC.Base.many_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.321328469 UTC

.section .text
.align 8
_cdb1:
_cdb1:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cdb1, .-_cdb1


==================== Asm code ====================
2018-03-16 15:54:44.321916121 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdb1_info:
	.quad	_cdb1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.327875322 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.eqString_closure
.type GHC.Base.eqString_closure, @object
GHC.Base.eqString_closure:
	.quad	GHC.Base.eqString_info


==================== Asm code ====================
2018-03-16 15:54:44.328600027 UTC

.section .text
.align 8
.globl GHC.Base.eqString_entry
.type GHC.Base.eqString_entry, @object
GHC.Base.eqString_entry:
_cdbv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdbw
_udcl:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cdbl
_cdbw:
	movl $GHC.Base.eqString_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.eqString_entry, .-GHC.Base.eqString_entry


==================== Asm code ====================
2018-03-16 15:54:44.329333608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.eqString_info
.type GHC.Base.eqString_info, @object
GHC.Base.eqString_info:
	.quad	GHC.Base.eqString_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.329992446 UTC

.section .text
.align 8
_cdbl:
_cdbl:
	movq (%rbp),%rax
	movq $block_cdbo_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cdbo
_cdbp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdbl, .-_cdbl


==================== Asm code ====================
2018-03-16 15:54:44.33123247 UTC

.section .text
.align 8
_cdbo:
_cdbo:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cdbs
_cdbt:
	movq $block_cdbP_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdbP
_cdbR:
	movq (%rbx),%rax
	jmp *(%rax)
_cdbs:
	movq $block_cdbA_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cdbA
_cdbC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdbo, .-_cdbo


==================== Asm code ====================
2018-03-16 15:54:44.331862444 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdbo_info:
	.quad	_cdbo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.332549959 UTC

.section .text
.align 8
_cdbA:
_cdbA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cdbI
_udcp:
	addq $8,%rbp
	jmp _cdch
_cdbI:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdbA, .-_cdbA


==================== Asm code ====================
2018-03-16 15:54:44.333113988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdbA_info:
	.quad	_cdbA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.333921695 UTC

.section .text
.align 8
_cdbP:
_cdbP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udcm
_cdc7:
	movq $block_cdc0_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdc0
_cdc1:
	movq (%rbx),%rax
	jmp *(%rax)
_udcm:
	addq $24,%rbp
	jmp _cdch
	.size _cdbP, .-_cdbP


==================== Asm code ====================
2018-03-16 15:54:44.334540567 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdbP_info:
	.quad	_cdbP
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.335192656 UTC

.section .text
.align 8
_cdc0:
_cdc0:
	movq $block_cdc5_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cdc5
_cdc9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdc0, .-_cdc0


==================== Asm code ====================
2018-03-16 15:54:44.335764154 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdc0_info:
	.quad	_cdc0
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.336439269 UTC

.section .text
.align 8
_cdc5:
_cdc5:
	movq 24(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _cdci
_udcn:
	addq $32,%rbp
	jmp _cdch
_cdci:
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cdbl
	.size _cdc5, .-_cdc5


==================== Asm code ====================
2018-03-16 15:54:44.337048707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdc5_info:
	.quad	_cdc5
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.337879997 UTC

.section .text
.align 8
_cdch:
_cdch:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdch, .-_cdch


==================== Asm code ====================
2018-03-16 15:54:44.340986837 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when2_closure
.type GHC.Base.when2_closure, @object
GHC.Base.when2_closure:
	.quad	GHC.Base.when2_info


==================== Asm code ====================
2018-03-16 15:54:44.341807812 UTC

.section .text
.align 8
.globl GHC.Base.when2_entry
.type GHC.Base.when2_entry, @object
GHC.Base.when2_entry:
_cddp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cddq
_cddr:
	movq $block_cddi_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cddi
_cddj:
	movq (%rbx),%rax
	jmp *(%rax)
_cddq:
	movl $GHC.Base.when2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.when2_entry, .-GHC.Base.when2_entry


==================== Asm code ====================
2018-03-16 15:54:44.342445836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when2_info
.type GHC.Base.when2_info, @object
GHC.Base.when2_info:
	.quad	GHC.Base.when2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.34318011 UTC

.section .text
.align 8
_cddi:
_cddi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cddm
_cddn:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_v_fast
_cddm:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cddi, .-_cddi


==================== Asm code ====================
2018-03-16 15:54:44.343819515 UTC

.section .data.rel.ro
.align 8
.align 1
block_cddi_info:
	.quad	_cddi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.346248286 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_$swhen1_closure
.type GHC.Base.when_$swhen1_closure, @object
GHC.Base.when_$swhen1_closure:
	.quad	GHC.Base.when_$swhen1_info


==================== Asm code ====================
2018-03-16 15:54:44.346836874 UTC

.section .text
.align 8
.globl GHC.Base.when_$swhen1_entry
.type GHC.Base.when_$swhen1_entry, @object
GHC.Base.when_$swhen1_entry:
_cddP:
	jmp GHC.Base.when2_entry
	.size GHC.Base.when_$swhen1_entry, .-GHC.Base.when_$swhen1_entry


==================== Asm code ====================
2018-03-16 15:54:44.347393437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_$swhen1_info
.type GHC.Base.when_$swhen1_info, @object
GHC.Base.when_$swhen1_info:
	.quad	GHC.Base.when_$swhen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.350704162 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO2_closure
.type GHC.Base.$fFunctorIO2_closure, @object
GHC.Base.$fFunctorIO2_closure:
	.quad	GHC.Base.$fFunctorIO2_info


==================== Asm code ====================
2018-03-16 15:54:44.351437695 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorIO2_entry
.type GHC.Base.$fFunctorIO2_entry, @object
GHC.Base.$fFunctorIO2_entry:
_cde3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cde4
_cde5:
	movq $block_cde0_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cde4:
	movl $GHC.Base.$fFunctorIO2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorIO2_entry, .-GHC.Base.$fFunctorIO2_entry


==================== Asm code ====================
2018-03-16 15:54:44.35201931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorIO2_info
.type GHC.Base.$fFunctorIO2_info, @object
GHC.Base.$fFunctorIO2_info:
	.quad	GHC.Base.$fFunctorIO2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.352710532 UTC

.section .text
.align 8
_cde0:
_cde0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cde8
_cde7:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cde8:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cde0, .-_cde0


==================== Asm code ====================
2018-03-16 15:54:44.353318456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cde0_info:
	.quad	_cde0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.355868112 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO1_closure
.type GHC.Base.$fFunctorIO1_closure, @object
GHC.Base.$fFunctorIO1_closure:
	.quad	GHC.Base.$fFunctorIO1_info


==================== Asm code ====================
2018-03-16 15:54:44.356574955 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorIO1_entry
.type GHC.Base.$fFunctorIO1_entry, @object
GHC.Base.$fFunctorIO1_entry:
_cdep:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdeq
_cder:
	movq $block_cden_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdeq:
	movl $GHC.Base.$fFunctorIO1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorIO1_entry, .-GHC.Base.$fFunctorIO1_entry


==================== Asm code ====================
2018-03-16 15:54:44.357189918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorIO1_info
.type GHC.Base.$fFunctorIO1_info, @object
GHC.Base.$fFunctorIO1_info:
	.quad	GHC.Base.$fFunctorIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.357871273 UTC

.section .text
.align 8
_cden:
_cden:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cden, .-_cden


==================== Asm code ====================
2018-03-16 15:54:44.358469334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cden_info:
	.quad	_cden
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.3605382 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO_closure
.type GHC.Base.$fFunctorIO_closure, @object
GHC.Base.$fFunctorIO_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctorIO2_closure+3
	.quad	GHC.Base.$fFunctorIO1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.362269622 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe1_closure
.type GHC.Base.$fAlternativeMaybe1_closure, @object
GHC.Base.$fAlternativeMaybe1_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.367143639 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$cmany_closure
.type GHC.Base.$fAlternativeMaybe_$cmany_closure, @object
GHC.Base.$fAlternativeMaybe_$cmany_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_info


==================== Asm code ====================
2018-03-16 15:54:44.368041035 UTC

.section .text
.align 8
many_v_s7To_entry:
_cdeT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdeU
_cdeV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdeM_info,-32(%rbp)
	movq %rbx,%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cdeM
_cdeN:
	movq (%rbx),%rax
	jmp *(%rax)
_cdeU:
	jmp *-16(%r13)
	.size many_v_s7To_entry, .-many_v_s7To_entry


==================== Asm code ====================
2018-03-16 15:54:44.368698861 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_s7To_info:
	.quad	many_v_s7To_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:44.369453913 UTC

.section .text
.align 8
_cdeM:
_cdeM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udfj
_cdeR:
	movq $block_cdf1_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdf1
_cdf3:
	movq (%rbx),%rax
	jmp *(%rax)
_udfj:
	addq $16,%rbp
	jmp _cdf9
	.size _cdeM, .-_cdeM


==================== Asm code ====================
2018-03-16 15:54:44.370102581 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdeM_info:
	.quad	_cdeM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.370879722 UTC

.section .text
.align 8
_cdf1:
_cdf1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udfk
_cdfe:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdfh
_cdfg:
	movq 6(%rbx),%rax
	movq $:_con_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udfk:
	addq $16,%rbp
	jmp _cdf9
_cdfh:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdf1, .-_cdf1


==================== Asm code ====================
2018-03-16 15:54:44.371620932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdf1_info:
	.quad	_cdf1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.372227827 UTC

.section .text
.align 8
_cdf9:
_cdf9:
	movl $GHC.Base.$fAlternativeMaybe1_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdf9, .-_cdf9


==================== Asm code ====================
2018-03-16 15:54:44.373025752 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$cmany_entry
.type GHC.Base.$fAlternativeMaybe_$cmany_entry, @object
GHC.Base.$fAlternativeMaybe_$cmany_entry:
_cdfp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdft
_cdfs:
	movq $many_v_s7To_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_cdft:
	movq $24,904(%r13)
	movl $GHC.Base.$fAlternativeMaybe_$cmany_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$cmany_entry, .-GHC.Base.$fAlternativeMaybe_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:44.37372155 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$cmany_info
.type GHC.Base.$fAlternativeMaybe_$cmany_info, @object
GHC.Base.$fAlternativeMaybe_$cmany_info:
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.379156081 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$csome_closure
.type GHC.Base.$fAlternativeMaybe_$csome_closure, @object
GHC.Base.$fAlternativeMaybe_$csome_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$csome_info


==================== Asm code ====================
2018-03-16 15:54:44.37990555 UTC

.section .text
.align 8
some_v_s7Tv_entry:
_cdgb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdgc
_cdgd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdg4_info,-32(%rbp)
	movq %rbx,%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cdg4
_cdg5:
	movq (%rbx),%rax
	jmp *(%rax)
_cdgc:
	jmp *-16(%r13)
	.size some_v_s7Tv_entry, .-some_v_s7Tv_entry


==================== Asm code ====================
2018-03-16 15:54:44.380585431 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_s7Tv_info:
	.quad	some_v_s7Tv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:44.381376535 UTC

.section .text
.align 8
_cdg4:
_cdg4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cdg8
_cdg9:
	movq $block_cdgj_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdgj
_cdgl:
	movq (%rbx),%rax
	jmp *(%rax)
_cdg8:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdg4, .-_cdg4


==================== Asm code ====================
2018-03-16 15:54:44.382024634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdg4_info:
	.quad	_cdg4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.382844883 UTC

.section .text
.align 8
_cdgj:
_cdgj:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cdgs
_cdgA:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdgD
_cdgC:
	movq 6(%rbx),%rbx
	movq $:_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdgD:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cdgs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdgD
_cdgu:
	movq $:_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $GHC.Types.[]_closure+1,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdgj, .-_cdgj


==================== Asm code ====================
2018-03-16 15:54:44.383622804 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdgj_info:
	.quad	_cdgj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.38434748 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$csome_entry
.type GHC.Base.$fAlternativeMaybe_$csome_entry, @object
GHC.Base.$fAlternativeMaybe_$csome_entry:
_cdgH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdgL
_cdgK:
	movq $some_v_s7Tv_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_cdgL:
	movq $24,904(%r13)
	movl $GHC.Base.$fAlternativeMaybe_$csome_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$csome_entry, .-GHC.Base.$fAlternativeMaybe_$csome_entry


==================== Asm code ====================
2018-03-16 15:54:44.384983466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$csome_info
.type GHC.Base.$fAlternativeMaybe_$csome_info, @object
GHC.Base.$fAlternativeMaybe_$csome_info:
	.quad	GHC.Base.$fAlternativeMaybe_$csome_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.389732346 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_$sap_closure
.type GHC.Base.ap_$sap_closure, @object
GHC.Base.ap_$sap_closure:
	.quad	GHC.Base.ap_$sap_info


==================== Asm code ====================
2018-03-16 15:54:44.390898729 UTC

.section .text
.align 8
.globl GHC.Base.ap_$sap_entry
.type GHC.Base.ap_$sap_entry, @object
GHC.Base.ap_$sap_entry:
_cdho:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdhp
_cdhq:
	movq $block_cdhh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdhh
_cdhi:
	movq (%rbx),%rax
	jmp *(%rax)
_cdhp:
	movl $GHC.Base.ap_$sap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.ap_$sap_entry, .-GHC.Base.ap_$sap_entry


==================== Asm code ====================
2018-03-16 15:54:44.391542759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_$sap_info
.type GHC.Base.ap_$sap_info, @object
GHC.Base.ap_$sap_info:
	.quad	GHC.Base.ap_$sap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.392308034 UTC

.section .text
.align 8
_cdhh:
_cdhh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udhO
_cdhm:
	movq $block_cdhw_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdhw
_cdhy:
	movq (%rbx),%rax
	jmp *(%rax)
_udhO:
	addq $16,%rbp
	jmp _cdhE
	.size _cdhh, .-_cdhh


==================== Asm code ====================
2018-03-16 15:54:44.392948981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdhh_info:
	.quad	_cdhh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.394208124 UTC

.section .text
.align 8
_cdhw:
_cdhw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udhP
_cdhJ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdhM
_cdhL:
	movq 6(%rbx),%rax
	movq $stg_ap_2_upd_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udhP:
	addq $16,%rbp
	jmp _cdhE
_cdhM:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdhw, .-_cdhw


==================== Asm code ====================
2018-03-16 15:54:44.394893334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdhw_info:
	.quad	_cdhw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.3954933 UTC

.section .text
.align 8
_cdhE:
_cdhE:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdhE, .-_cdhE


==================== Asm code ====================
2018-03-16 15:54:44.401679599 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM5_closure
.type GHC.Base.liftM5_$sliftM5_closure, @object
GHC.Base.liftM5_$sliftM5_closure:
	.quad	GHC.Base.liftM5_$sliftM5_info


==================== Asm code ====================
2018-03-16 15:54:44.402494218 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_$sliftM5_entry
.type GHC.Base.liftM5_$sliftM5_entry, @object
GHC.Base.liftM5_$sliftM5_entry:
_cdis:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdit
_cdiu:
	movq $block_cdil_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cdil
_cdim:
	movq (%rbx),%rax
	jmp *(%rax)
_cdit:
	movl $GHC.Base.liftM5_$sliftM5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM5_$sliftM5_entry, .-GHC.Base.liftM5_$sliftM5_entry


==================== Asm code ====================
2018-03-16 15:54:44.403164049 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM5_info
.type GHC.Base.liftM5_$sliftM5_info, @object
GHC.Base.liftM5_$sliftM5_info:
	.quad	GHC.Base.liftM5_$sliftM5_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:44.403916164 UTC

.section .text
.align 8
_cdil:
_cdil:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udjv
_cdiq:
	movq $block_cdiA_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cdiA
_cdiC:
	movq (%rbx),%rax
	jmp *(%rax)
_udjv:
	addq $48,%rbp
	jmp _cdji
	.size _cdil, .-_cdil


==================== Asm code ====================
2018-03-16 15:54:44.404572097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdil_info:
	.quad	_cdil
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.405778001 UTC

.section .text
.align 8
_cdiA:
_cdiA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udjw
_cdiN:
	movq $block_cdiL_info,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cdiL
_cdiO:
	movq (%rbx),%rax
	jmp *(%rax)
_udjw:
	addq $48,%rbp
	jmp _cdji
	.size _cdiA, .-_cdiA


==================== Asm code ====================
2018-03-16 15:54:44.406439513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdiA_info:
	.quad	_cdiA
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.407141742 UTC

.section .text
.align 8
_cdiL:
_cdiL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udjx
_cdiZ:
	movq $block_cdiX_info,(%rbp)
	movq 6(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cdiX
_cdj0:
	movq (%rbx),%rax
	jmp *(%rax)
_udjx:
	addq $48,%rbp
	jmp _cdji
	.size _cdiL, .-_cdiL


==================== Asm code ====================
2018-03-16 15:54:44.407767041 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdiL_info:
	.quad	_cdiL
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.408468007 UTC

.section .text
.align 8
_cdiX:
_cdiX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udjy
_cdjb:
	movq $block_cdj9_info,(%rbp)
	movq 6(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cdj9
_cdjc:
	movq (%rbx),%rax
	jmp *(%rax)
_udjy:
	addq $48,%rbp
	jmp _cdji
	.size _cdiX, .-_cdiX


==================== Asm code ====================
2018-03-16 15:54:44.409104443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdiX_info:
	.quad	_cdiX
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.410070902 UTC

.section .text
.align 8
_cdj9:
_cdj9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udjz
_cdjn:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cdjq
_cdjp:
	movq 6(%rbx),%rax
	movq $stg_ap_6_upd_info,-72(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udjz:
	addq $48,%rbp
	jmp _cdji
_cdjq:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdj9, .-_cdj9


==================== Asm code ====================
2018-03-16 15:54:44.410798024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdj9_info:
	.quad	_cdj9
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.411425547 UTC

.section .text
.align 8
_cdji:
_cdji:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdji, .-_cdji


==================== Asm code ====================
2018-03-16 15:54:44.417159882 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM4_closure
.type GHC.Base.liftM4_$sliftM4_closure, @object
GHC.Base.liftM4_$sliftM4_closure:
	.quad	GHC.Base.liftM4_$sliftM4_info


==================== Asm code ====================
2018-03-16 15:54:44.418036275 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_$sliftM4_entry
.type GHC.Base.liftM4_$sliftM4_entry, @object
GHC.Base.liftM4_$sliftM4_entry:
_cdkE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdkF
_cdkG:
	movq $block_cdkx_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cdkx
_cdky:
	movq (%rbx),%rax
	jmp *(%rax)
_cdkF:
	movl $GHC.Base.liftM4_$sliftM4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM4_$sliftM4_entry, .-GHC.Base.liftM4_$sliftM4_entry


==================== Asm code ====================
2018-03-16 15:54:44.418724903 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM4_info
.type GHC.Base.liftM4_$sliftM4_info, @object
GHC.Base.liftM4_$sliftM4_info:
	.quad	GHC.Base.liftM4_$sliftM4_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:44.419519789 UTC

.section .text
.align 8
_cdkx:
_cdkx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udlu
_cdkC:
	movq $block_cdkM_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cdkM
_cdkO:
	movq (%rbx),%rax
	jmp *(%rax)
_udlu:
	addq $40,%rbp
	jmp _cdli
	.size _cdkx, .-_cdkx


==================== Asm code ====================
2018-03-16 15:54:44.420564035 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdkx_info:
	.quad	_cdkx
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.421350884 UTC

.section .text
.align 8
_cdkM:
_cdkM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udlv
_cdkZ:
	movq $block_cdkX_info,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cdkX
_cdl0:
	movq (%rbx),%rax
	jmp *(%rax)
_udlv:
	addq $40,%rbp
	jmp _cdli
	.size _cdkM, .-_cdkM


==================== Asm code ====================
2018-03-16 15:54:44.422011677 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdkM_info:
	.quad	_cdkM
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.422718064 UTC

.section .text
.align 8
_cdkX:
_cdkX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udlw
_cdlb:
	movq $block_cdl9_info,(%rbp)
	movq 6(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cdl9
_cdlc:
	movq (%rbx),%rax
	jmp *(%rax)
_udlw:
	addq $40,%rbp
	jmp _cdli
	.size _cdkX, .-_cdkX


==================== Asm code ====================
2018-03-16 15:54:44.423342438 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdkX_info:
	.quad	_cdkX
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.424120724 UTC

.section .text
.align 8
_cdl9:
_cdl9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udlx
_cdln:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cdlq
_cdlp:
	movq 6(%rbx),%rax
	movq $stg_ap_5_upd_info,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udlx:
	addq $40,%rbp
	jmp _cdli
_cdlq:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdl9, .-_cdl9


==================== Asm code ====================
2018-03-16 15:54:44.424821769 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdl9_info:
	.quad	_cdl9
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.425658699 UTC

.section .text
.align 8
_cdli:
_cdli:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdli, .-_cdli


==================== Asm code ====================
2018-03-16 15:54:44.430716907 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM3_closure
.type GHC.Base.liftM3_$sliftM3_closure, @object
GHC.Base.liftM3_$sliftM3_closure:
	.quad	GHC.Base.liftM3_$sliftM3_info


==================== Asm code ====================
2018-03-16 15:54:44.431628577 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_$sliftM3_entry
.type GHC.Base.liftM3_$sliftM3_entry, @object
GHC.Base.liftM3_$sliftM3_entry:
_cdmt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdmu
_cdmv:
	movq $block_cdmm_info,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cdmm
_cdmn:
	movq (%rbx),%rax
	jmp *(%rax)
_cdmu:
	movl $GHC.Base.liftM3_$sliftM3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM3_$sliftM3_entry, .-GHC.Base.liftM3_$sliftM3_entry


==================== Asm code ====================
2018-03-16 15:54:44.432325418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM3_info
.type GHC.Base.liftM3_$sliftM3_info, @object
GHC.Base.liftM3_$sliftM3_info:
	.quad	GHC.Base.liftM3_$sliftM3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:44.433114836 UTC

.section .text
.align 8
_cdmm:
_cdmm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udn6
_cdmr:
	movq $block_cdmB_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cdmB
_cdmD:
	movq (%rbx),%rax
	jmp *(%rax)
_udn6:
	addq $32,%rbp
	jmp _cdmV
	.size _cdmm, .-_cdmm


==================== Asm code ====================
2018-03-16 15:54:44.434113554 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdmm_info:
	.quad	_cdmm
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.434885388 UTC

.section .text
.align 8
_cdmB:
_cdmB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udn7
_cdmO:
	movq $block_cdmM_info,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cdmM
_cdmP:
	movq (%rbx),%rax
	jmp *(%rax)
_udn7:
	addq $32,%rbp
	jmp _cdmV
	.size _cdmB, .-_cdmB


==================== Asm code ====================
2018-03-16 15:54:44.435906247 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdmB_info:
	.quad	_cdmB
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.436702803 UTC

.section .text
.align 8
_cdmM:
_cdmM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udn8
_cdn0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdn3
_cdn2:
	movq 6(%rbx),%rax
	movq $stg_ap_4_upd_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udn8:
	addq $32,%rbp
	jmp _cdmV
_cdn3:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdmM, .-_cdmM


==================== Asm code ====================
2018-03-16 15:54:44.437444978 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdmM_info:
	.quad	_cdmM
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.438050177 UTC

.section .text
.align 8
_cdmV:
_cdmV:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdmV, .-_cdmV


==================== Asm code ====================
2018-03-16 15:54:44.442404775 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM2_closure
.type GHC.Base.liftM2_$sliftM2_closure, @object
GHC.Base.liftM2_$sliftM2_closure:
	.quad	GHC.Base.liftM2_$sliftM2_info


==================== Asm code ====================
2018-03-16 15:54:44.443145755 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_$sliftM2_entry
.type GHC.Base.liftM2_$sliftM2_entry, @object
GHC.Base.liftM2_$sliftM2_entry:
_cdnV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdnW
_cdnX:
	movq $block_cdnO_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cdnO
_cdnP:
	movq (%rbx),%rax
	jmp *(%rax)
_cdnW:
	movl $GHC.Base.liftM2_$sliftM2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM2_$sliftM2_entry, .-GHC.Base.liftM2_$sliftM2_entry


==================== Asm code ====================
2018-03-16 15:54:44.443815676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM2_info
.type GHC.Base.liftM2_$sliftM2_info, @object
GHC.Base.liftM2_$sliftM2_info:
	.quad	GHC.Base.liftM2_$sliftM2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.444547971 UTC

.section .text
.align 8
_cdnO:
_cdnO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udol
_cdnT:
	movq $block_cdo3_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cdo3
_cdo5:
	movq (%rbx),%rax
	jmp *(%rax)
_udol:
	addq $24,%rbp
	jmp _cdob
	.size _cdnO, .-_cdnO


==================== Asm code ====================
2018-03-16 15:54:44.445141004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdnO_info:
	.quad	_cdnO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.445923791 UTC

.section .text
.align 8
_cdo3:
_cdo3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udom
_cdog:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdoj
_cdoi:
	movq 6(%rbx),%rax
	movq $stg_ap_3_upd_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udom:
	addq $24,%rbp
	jmp _cdob
_cdoj:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdo3, .-_cdo3


==================== Asm code ====================
2018-03-16 15:54:44.446622932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdo3_info:
	.quad	_cdo3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.447221398 UTC

.section .text
.align 8
_cdob:
_cdob:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdob, .-_cdob


==================== Asm code ====================
2018-03-16 15:54:44.451385933 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM_closure
.type GHC.Base.liftM_$sliftM_closure, @object
GHC.Base.liftM_$sliftM_closure:
	.quad	GHC.Base.liftM_$sliftM_info


==================== Asm code ====================
2018-03-16 15:54:44.452199472 UTC

.section .text
.align 8
.globl GHC.Base.liftM_$sliftM_entry
.type GHC.Base.liftM_$sliftM_entry, @object
GHC.Base.liftM_$sliftM_entry:
_cdp0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdp1
_cdp2:
	movq $block_cdoT_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdoT
_cdoU:
	movq (%rbx),%rax
	jmp *(%rax)
_cdp1:
	movl $GHC.Base.liftM_$sliftM_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM_$sliftM_entry, .-GHC.Base.liftM_$sliftM_entry


==================== Asm code ====================
2018-03-16 15:54:44.452851054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM_info
.type GHC.Base.liftM_$sliftM_info, @object
GHC.Base.liftM_$sliftM_info:
	.quad	GHC.Base.liftM_$sliftM_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.453643903 UTC

.section .text
.align 8
_cdoT:
_cdoT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cdoX
_cdoY:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdpc
_cdpb:
	movq 6(%rbx),%rax
	movq $stg_ap_2_upd_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdpc:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_cdoX:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdoT, .-_cdoT


==================== Asm code ====================
2018-03-16 15:54:44.45436158 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdoT_info:
	.quad	_cdoT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.455981915 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when1_closure
.type GHC.Base.when1_closure, @object
GHC.Base.when1_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Tuple.()_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.458999121 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_$swhen_closure
.type GHC.Base.when_$swhen_closure, @object
GHC.Base.when_$swhen_closure:
	.quad	GHC.Base.when_$swhen_info


==================== Asm code ====================
2018-03-16 15:54:44.459789491 UTC

.section .text
.align 8
.globl GHC.Base.when_$swhen_entry
.type GHC.Base.when_$swhen_entry, @object
GHC.Base.when_$swhen_entry:
_cdpF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdpG
_cdpH:
	movq $block_cdpy_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdpy
_cdpz:
	movq (%rbx),%rax
	jmp *(%rax)
_cdpG:
	movl $GHC.Base.when_$swhen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.when_$swhen_entry, .-GHC.Base.when_$swhen_entry


==================== Asm code ====================
2018-03-16 15:54:44.460441536 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_$swhen_info
.type GHC.Base.when_$swhen_info, @object
GHC.Base.when_$swhen_info:
	.quad	GHC.Base.when_$swhen_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.461131752 UTC

.section .text
.align 8
_cdpy:
_cdpy:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cdpC
_cdpD:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cdpC:
	movl $GHC.Base.when1_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdpy, .-_cdpy


==================== Asm code ====================
2018-03-16 15:54:44.46185023 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdpy_info:
	.quad	_cdpy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.465081487 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_closure
.type GHC.Base.when_closure, @object
GHC.Base.when_closure:
	.quad	GHC.Base.when_info


==================== Asm code ====================
2018-03-16 15:54:44.46654931 UTC

.section .text
.align 8
.globl GHC.Base.when_entry
.type GHC.Base.when_entry, @object
GHC.Base.when_entry:
_cdqe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdqf
_cdqg:
	movq $block_cdq7_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cdq7
_cdq8:
	movq (%rbx),%rax
	jmp *(%rax)
_cdqf:
	movl $GHC.Base.when_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.when_entry, .-GHC.Base.when_entry


==================== Asm code ====================
2018-03-16 15:54:44.46718281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_info
.type GHC.Base.when_info, @object
GHC.Base.when_info:
	.quad	GHC.Base.when_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.467898553 UTC

.section .text
.align 8
_cdq7:
_cdq7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cdqb
_cdqc:
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_cdqb:
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,8(%rbp)
	movq $GHC.Tuple.()_closure+1,16(%rbp)
	addq $8,%rbp
	jmp GHC.Base.pure_entry
	.size _cdq7, .-_cdq7


==================== Asm code ====================
2018-03-16 15:54:44.468527768 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdq7_info:
	.quad	_cdq7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.472311411 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*_closure
.type GHC.Base.$fApplicativeMaybe_$c<*_closure, @object
GHC.Base.$fApplicativeMaybe_$c<*_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:44.473074057 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c<*_entry
.type GHC.Base.$fApplicativeMaybe_$c<*_entry, @object
GHC.Base.$fApplicativeMaybe_$c<*_entry:
_cdqK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdqL
_cdqM:
	movq $block_cdqD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdqD
_cdqE:
	movq (%rbx),%rax
	jmp *(%rax)
_cdqL:
	movl $GHC.Base.$fApplicativeMaybe_$c<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c<*_entry, .-GHC.Base.$fApplicativeMaybe_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:44.473789347 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*_info
.type GHC.Base.$fApplicativeMaybe_$c<*_info, @object
GHC.Base.$fApplicativeMaybe_$c<*_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.474519073 UTC

.section .text
.align 8
_cdqD:
_cdqD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _udr6
_cdqI:
	movq $block_cdqS_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdqS
_cdqU:
	movq (%rbx),%rax
	jmp *(%rax)
_udr6:
	addq $16,%rbp
	jmp _cdr0
	.size _cdqD, .-_cdqD


==================== Asm code ====================
2018-03-16 15:54:44.475167072 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdqD_info:
	.quad	_cdqD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.475873347 UTC

.section .text
.align 8
_cdqS:
_cdqS:
	andl $7,%ebx
	cmpq $1,%rbx
	je _udr7
_cdr4:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_udr7:
	addq $16,%rbp
	jmp _cdr0
	.size _cdqS, .-_cdqS


==================== Asm code ====================
2018-03-16 15:54:44.476450149 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdqS_info:
	.quad	_cdqS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.477059783 UTC

.section .text
.align 8
_cdr0:
_cdr0:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdr0, .-_cdr0


==================== Asm code ====================
2018-03-16 15:54:44.479012628 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'O3_bytes
.type GHC.Base.$tc'O3_bytes, @object
GHC.Base.$tc'O3_bytes:
	.asciz "'O"


==================== Asm code ====================
2018-03-16 15:54:44.481117619 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O2_closure
.type GHC.Base.$tc'O2_closure, @object
GHC.Base.$tc'O2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'O3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.482827004 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcOpaque2_bytes
.type GHC.Base.$tcOpaque2_bytes, @object
GHC.Base.$tcOpaque2_bytes:
	.asciz "Opaque"


==================== Asm code ====================
2018-03-16 15:54:44.48442301 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcOpaque1_closure
.type GHC.Base.$tcOpaque1_closure, @object
GHC.Base.$tcOpaque1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcOpaque2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.486049086 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonadPlus2_bytes
.type GHC.Base.$tcMonadPlus2_bytes, @object
GHC.Base.$tcMonadPlus2_bytes:
	.asciz "MonadPlus"


==================== Asm code ====================
2018-03-16 15:54:44.487794325 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonadPlus1_closure
.type GHC.Base.$tcMonadPlus1_closure, @object
GHC.Base.$tcMonadPlus1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonadPlus2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.489785149 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonad2_bytes
.type GHC.Base.$tcMonad2_bytes, @object
GHC.Base.$tcMonad2_bytes:
	.asciz "Monad"


==================== Asm code ====================
2018-03-16 15:54:44.491353564 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonad1_closure
.type GHC.Base.$tcMonad1_closure, @object
GHC.Base.$tcMonad1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonad2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.493083049 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'C:Monoid3_bytes
.type GHC.Base.$tc'C:Monoid3_bytes, @object
GHC.Base.$tc'C:Monoid3_bytes:
	.asciz "'C:Monoid"


==================== Asm code ====================
2018-03-16 15:54:44.49513637 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid2_closure
.type GHC.Base.$tc'C:Monoid2_closure, @object
GHC.Base.$tc'C:Monoid2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'C:Monoid3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.496739108 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonoid3_bytes
.type GHC.Base.$tcMonoid3_bytes, @object
GHC.Base.$tcMonoid3_bytes:
	.asciz "Monoid"


==================== Asm code ====================
2018-03-16 15:54:44.498430475 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid2_closure
.type GHC.Base.$tcMonoid2_closure, @object
GHC.Base.$tcMonoid2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonoid3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.499969339 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcSemigroup2_bytes
.type GHC.Base.$tcSemigroup2_bytes, @object
GHC.Base.$tcSemigroup2_bytes:
	.asciz "Semigroup"


==================== Asm code ====================
2018-03-16 15:54:44.501643553 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcSemigroup1_closure
.type GHC.Base.$tcSemigroup1_closure, @object
GHC.Base.$tcSemigroup1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcSemigroup2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.503330441 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc':|3_bytes
.type GHC.Base.$tc':|3_bytes, @object
GHC.Base.$tc':|3_bytes:
	.asciz "':|"


==================== Asm code ====================
2018-03-16 15:54:44.504992352 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|2_closure
.type GHC.Base.$tc':|2_closure, @object
GHC.Base.$tc':|2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc':|3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.506759897 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcNonEmpty2_bytes
.type GHC.Base.$tcNonEmpty2_bytes, @object
GHC.Base.$tcNonEmpty2_bytes:
	.asciz "NonEmpty"


==================== Asm code ====================
2018-03-16 15:54:44.508740306 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcNonEmpty1_closure
.type GHC.Base.$tcNonEmpty1_closure, @object
GHC.Base.$tcNonEmpty1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcNonEmpty2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.510712635 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcAlternative3_bytes
.type GHC.Base.$tcAlternative3_bytes, @object
GHC.Base.$tcAlternative3_bytes:
	.asciz "Alternative"


==================== Asm code ====================
2018-03-16 15:54:44.512392732 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative2_closure
.type GHC.Base.$tcAlternative2_closure, @object
GHC.Base.$tcAlternative2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcAlternative3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.514057986 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcApplicative2_bytes
.type GHC.Base.$tcApplicative2_bytes, @object
GHC.Base.$tcApplicative2_bytes:
	.asciz "Applicative"


==================== Asm code ====================
2018-03-16 15:54:44.515705156 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcApplicative1_closure
.type GHC.Base.$tcApplicative1_closure, @object
GHC.Base.$tcApplicative1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcApplicative2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.517343569 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcFunctor2_bytes
.type GHC.Base.$tcFunctor2_bytes, @object
GHC.Base.$tcFunctor2_bytes:
	.asciz "Functor"


==================== Asm code ====================
2018-03-16 15:54:44.519053005 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcFunctor1_closure
.type GHC.Base.$tcFunctor1_closure, @object
GHC.Base.$tcFunctor1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcFunctor2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.521085947 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'Just3_bytes
.type GHC.Base.$tc'Just3_bytes, @object
GHC.Base.$tc'Just3_bytes:
	.asciz "'Just"


==================== Asm code ====================
2018-03-16 15:54:44.52275548 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just2_closure
.type GHC.Base.$tc'Just2_closure, @object
GHC.Base.$tc'Just2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'Just3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.524394113 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'Nothing3_bytes
.type GHC.Base.$tc'Nothing3_bytes, @object
GHC.Base.$tc'Nothing3_bytes:
	.asciz "'Nothing"


==================== Asm code ====================
2018-03-16 15:54:44.526093816 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing2_closure
.type GHC.Base.$tc'Nothing2_closure, @object
GHC.Base.$tc'Nothing2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'Nothing3_bytes


==================== Asm code ====================
2018-03-16 15:54:44.527705172 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMaybe2_bytes
.type GHC.Base.$tcMaybe2_bytes, @object
GHC.Base.$tcMaybe2_bytes:
	.asciz "Maybe"


==================== Asm code ====================
2018-03-16 15:54:44.529784298 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMaybe1_closure
.type GHC.Base.$tcMaybe1_closure, @object
GHC.Base.$tcMaybe1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMaybe2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.531506188 UTC

.section .data
.align 8
.align 1
$krep_r7Pr_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.533672559 UTC

.section .data
.align 8
.align 1
$krep1_r7Ps_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep_r7Pr_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.535331897 UTC

.section .data
.align 8
.align 1
$krep2_r7Pt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep1_r7Ps_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.53705782 UTC

.section .data
.align 8
.align 1
$krep3_r7Pu_closure:
	.quad	:_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.538755712 UTC

.section .data
.align 8
.align 1
$krep4_r7Pv_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.540447345 UTC

.section .data
.align 8
.align 1
$krep5_r7Pw_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r7Pv_closure+1
	.quad	$krep_r7Pr_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.542176788 UTC

.section .data
.align 8
.align 1
$krep6_r7Px_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.543947597 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid1_closure
.type GHC.Base.$tcMonoid1_closure, @object
GHC.Base.$tcMonoid1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep6_r7Px_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.545688143 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative1_closure
.type GHC.Base.$tcAlternative1_closure, @object
GHC.Base.$tcAlternative1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	$krep6_r7Px_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.547747344 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$trModule2_bytes
.type GHC.Base.$trModule2_bytes, @object
GHC.Base.$trModule2_bytes:
	.asciz "GHC.Base"


==================== Asm code ====================
2018-03-16 15:54:44.549494581 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule1_closure
.type GHC.Base.$trModule1_closure, @object
GHC.Base.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:54:44.551228169 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$trModule4_bytes
.type GHC.Base.$trModule4_bytes, @object
GHC.Base.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:54:44.552952145 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule3_closure
.type GHC.Base.$trModule3_closure, @object
GHC.Base.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:54:44.555222464 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule_closure
.type GHC.Base.$trModule_closure, @object
GHC.Base.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Base.$trModule3_closure+1
	.quad	GHC.Base.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.557021998 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMaybe_closure
.type GHC.Base.$tcMaybe_closure, @object
GHC.Base.$tcMaybe_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMaybe1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	625655543500963593
	.quad	6391758309165051762
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.558854235 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing1_closure
.type GHC.Base.$tc'Nothing1_closure, @object
GHC.Base.$tc'Nothing1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.560906776 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just1_closure
.type GHC.Base.$tc'Just1_closure, @object
GHC.Base.$tc'Just1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	GHC.Base.$tc'Nothing1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.563320675 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing_closure
.type GHC.Base.$tc'Nothing_closure, @object
GHC.Base.$tc'Nothing_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'Nothing2_closure+1
	.quad	GHC.Base.$tc'Nothing1_closure+1
	.quad	-3813454545525139424
	.quad	-5673617917288009146
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.565122885 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just_closure
.type GHC.Base.$tc'Just_closure, @object
GHC.Base.$tc'Just_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'Just2_closure+1
	.quad	GHC.Base.$tc'Just1_closure+4
	.quad	5794512144280699493
	.quad	-9012320612731333499
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.566984037 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcFunctor_closure
.type GHC.Base.$tcFunctor_closure, @object
GHC.Base.$tcFunctor_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcFunctor1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	211182333006544237
	.quad	5556320544348084514
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.568751179 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcApplicative_closure
.type GHC.Base.$tcApplicative_closure, @object
GHC.Base.$tcApplicative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcApplicative1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	-5741688852878308019
	.quad	2963353171490466073
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.570599117 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative_closure
.type GHC.Base.$tcAlternative_closure, @object
GHC.Base.$tcAlternative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcAlternative2_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	1073491102990665358
	.quad	-4125971318004742668
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.572446985 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcNonEmpty_closure
.type GHC.Base.$tcNonEmpty_closure, @object
GHC.Base.$tcNonEmpty_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcNonEmpty1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-5239727201064083331
	.quad	3455542966739695982
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.575176331 UTC

.section .data
.align 8
.align 1
$krep7_r7Py_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcNonEmpty_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.576884906 UTC

.section .data
.align 8
.align 1
$krep8_r7Pz_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r7Pv_closure+1
	.quad	$krep7_r7Py_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.578574329 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|1_closure
.type GHC.Base.$tc':|1_closure, @object
GHC.Base.$tc':|1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep8_r7Pz_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.580369214 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|_closure
.type GHC.Base.$tc':|_closure, @object
GHC.Base.$tc':|_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc':|2_closure+1
	.quad	GHC.Base.$tc':|1_closure+4
	.quad	-9005911638525740851
	.quad	3053237465234607583
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.582193387 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcSemigroup_closure
.type GHC.Base.$tcSemigroup_closure, @object
GHC.Base.$tcSemigroup_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcSemigroup1_closure+1
	.quad	GHC.Base.$tcMonoid1_closure+4
	.quad	-2251391887345253339
	.quad	3285685594139281062
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.583884229 UTC

.section .data
.align 8
.align 1
$krep9_r7PA_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcSemigroup_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.585772177 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid_closure
.type GHC.Base.$tcMonoid_closure, @object
GHC.Base.$tcMonoid_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonoid2_closure+1
	.quad	GHC.Base.$tcMonoid1_closure+4
	.quad	-4608184027813807840
	.quad	1291018260833769143
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.587903159 UTC

.section .data
.align 8
.align 1
$krep10_r7PB_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMonoid_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.589822387 UTC

.section .data
.align 8
.align 1
$krep11_r7PC_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r7Pw_closure+4
	.quad	$krep10_r7PB_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.591478929 UTC

.section .data
.align 8
.align 1
$krep12_r7PD_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r7Pt_closure+4
	.quad	$krep11_r7PC_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.593141133 UTC

.section .data
.align 8
.align 1
$krep13_r7PE_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep12_r7PD_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.594828089 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid1_closure
.type GHC.Base.$tc'C:Monoid1_closure, @object
GHC.Base.$tc'C:Monoid1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r7PA_closure+1
	.quad	$krep13_r7PE_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.596549999 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid_closure
.type GHC.Base.$tc'C:Monoid_closure, @object
GHC.Base.$tc'C:Monoid_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'C:Monoid2_closure+1
	.quad	GHC.Base.$tc'C:Monoid1_closure+4
	.quad	-2347447984602041273
	.quad	5895832073319104984
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.598380878 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonad_closure
.type GHC.Base.$tcMonad_closure, @object
GHC.Base.$tcMonad_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonad1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	3168880480603756299
	.quad	8398240611646296094
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.600658652 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonadPlus_closure
.type GHC.Base.$tcMonadPlus_closure, @object
GHC.Base.$tcMonadPlus_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonadPlus1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	-4331070822089179066
	.quad	-4291386747640162226
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.602487851 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcOpaque_closure
.type GHC.Base.$tcOpaque_closure, @object
GHC.Base.$tcOpaque_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcOpaque1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-9107018667880310430
	.quad	-2896510572084651045
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.604239526 UTC

.section .data
.align 8
.align 1
$krep14_r7PF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcOpaque_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.606392305 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O1_closure
.type GHC.Base.$tc'O1_closure, @object
GHC.Base.$tc'O1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep14_r7PF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.608200273 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O_closure
.type GHC.Base.$tc'O_closure, @object
GHC.Base.$tc'O_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'O2_closure+1
	.quad	GHC.Base.$tc'O1_closure+4
	.quad	-5895469461314716811
	.quad	-5446079599561417287
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:44.612191555 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.quotRemInt_closure
.type GHC.Base.quotRemInt_closure, @object
GHC.Base.quotRemInt_closure:
	.quad	GHC.Base.quotRemInt_info


==================== Asm code ====================
2018-03-16 15:54:44.613481084 UTC

.section .text
.align 8
.globl GHC.Base.quotRemInt_entry
.type GHC.Base.quotRemInt_entry, @object
GHC.Base.quotRemInt_entry:
_cdsP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdt0
_cdt1:
	movq $block_cdsM_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdsM
_cdsN:
	movq (%rbx),%rax
	jmp *(%rax)
_cdt0:
	movl $GHC.Base.quotRemInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.quotRemInt_entry, .-GHC.Base.quotRemInt_entry


==================== Asm code ====================
2018-03-16 15:54:44.614176965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.quotRemInt_info
.type GHC.Base.quotRemInt_info, @object
GHC.Base.quotRemInt_info:
	.quad	GHC.Base.quotRemInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.614838053 UTC

.section .text
.align 8
_cdsM:
_cdsM:
	movq $block_cdsS_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdsS
_cdsT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdsM, .-_cdsM


==================== Asm code ====================
2018-03-16 15:54:44.615441793 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdsM_info:
	.quad	_cdsM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.616188408 UTC

.section .text
.align 8
_cdsS:
_cdsS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdt5
_cdt4:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdt5:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdsS, .-_cdsS


==================== Asm code ====================
2018-03-16 15:54:44.616852226 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdsS_info:
	.quad	_cdsS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.621185083 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.modInt_closure
.type GHC.Base.modInt_closure, @object
GHC.Base.modInt_closure:
	.quad	GHC.Base.modInt_info


==================== Asm code ====================
2018-03-16 15:54:44.622052359 UTC

.section .text
.align 8
.globl GHC.Base.modInt_entry
.type GHC.Base.modInt_entry, @object
GHC.Base.modInt_entry:
_cdtv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdtI
_cdtJ:
	movq $block_cdts_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdts
_cdtt:
	movq (%rbx),%rax
	jmp *(%rax)
_cdtI:
	movl $GHC.Base.modInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.modInt_entry, .-GHC.Base.modInt_entry


==================== Asm code ====================
2018-03-16 15:54:44.622700302 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.modInt_info
.type GHC.Base.modInt_info, @object
GHC.Base.modInt_info:
	.quad	GHC.Base.modInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.623371136 UTC

.section .text
.align 8
_cdts:
_cdts:
	movq $block_cdty_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdty
_cdtz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdts, .-_cdts


==================== Asm code ====================
2018-03-16 15:54:44.623940886 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdts_info:
	.quad	_cdts
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.624607743 UTC

.section .text
.align 8
_cdty:
_cdty:
	movq 8(%rbp),%rax
	movq $block_cdtD_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Classes.modInt#_entry
	.size _cdty, .-_cdty


==================== Asm code ====================
2018-03-16 15:54:44.625219522 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdty_info:
	.quad	_cdty
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.625947542 UTC

.section .text
.align 8
_cdtD:
_cdtD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdtO
_cdtN:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdtO:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cdtD, .-_cdtD


==================== Asm code ====================
2018-03-16 15:54:44.62658737 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdtD_info:
	.quad	_cdtD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.631355639 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divInt_closure
.type GHC.Base.divInt_closure, @object
GHC.Base.divInt_closure:
	.quad	GHC.Base.divInt_info


==================== Asm code ====================
2018-03-16 15:54:44.632131055 UTC

.section .text
.align 8
.globl GHC.Base.divInt_entry
.type GHC.Base.divInt_entry, @object
GHC.Base.divInt_entry:
_cduf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdus
_cdut:
	movq $block_cduc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cduc
_cdud:
	movq (%rbx),%rax
	jmp *(%rax)
_cdus:
	movl $GHC.Base.divInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.divInt_entry, .-GHC.Base.divInt_entry


==================== Asm code ====================
2018-03-16 15:54:44.632764859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divInt_info
.type GHC.Base.divInt_info, @object
GHC.Base.divInt_info:
	.quad	GHC.Base.divInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.633496482 UTC

.section .text
.align 8
_cduc:
_cduc:
	movq $block_cdui_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdui
_cduj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cduc, .-_cduc


==================== Asm code ====================
2018-03-16 15:54:44.634119412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cduc_info:
	.quad	_cduc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.63474601 UTC

.section .text
.align 8
_cdui:
_cdui:
	movq 8(%rbp),%rax
	movq $block_cdun_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Classes.divInt#_entry
	.size _cdui, .-_cdui


==================== Asm code ====================
2018-03-16 15:54:44.635339713 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdui_info:
	.quad	_cdui
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.636043885 UTC

.section .text
.align 8
_cdun:
_cdun:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cduy
_cdux:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cduy:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cdun, .-_cdun


==================== Asm code ====================
2018-03-16 15:54:44.636663414 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdun_info:
	.quad	_cdun
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.640344753 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.remInt_closure
.type GHC.Base.remInt_closure, @object
GHC.Base.remInt_closure:
	.quad	GHC.Base.remInt_info


==================== Asm code ====================
2018-03-16 15:54:44.641171612 UTC

.section .text
.align 8
.globl GHC.Base.remInt_entry
.type GHC.Base.remInt_entry, @object
GHC.Base.remInt_entry:
_cduZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdvb
_cdvc:
	movq $block_cduW_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cduW
_cduX:
	movq (%rbx),%rax
	jmp *(%rax)
_cdvb:
	movl $GHC.Base.remInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.remInt_entry, .-GHC.Base.remInt_entry


==================== Asm code ====================
2018-03-16 15:54:44.641929956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.remInt_info
.type GHC.Base.remInt_info, @object
GHC.Base.remInt_info:
	.quad	GHC.Base.remInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.643039427 UTC

.section .text
.align 8
_cduW:
_cduW:
	movq $block_cdv2_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdv2
_cdv3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cduW, .-_cduW


==================== Asm code ====================
2018-03-16 15:54:44.643697769 UTC

.section .data.rel.ro
.align 8
.align 1
block_cduW_info:
	.quad	_cduW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.644444221 UTC

.section .text
.align 8
_cdv2:
_cdv2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdvg
_cdvf:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdvg:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdv2, .-_cdv2


==================== Asm code ====================
2018-03-16 15:54:44.645054169 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdv2_info:
	.quad	_cdv2
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.648874206 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.quotInt_closure
.type GHC.Base.quotInt_closure, @object
GHC.Base.quotInt_closure:
	.quad	GHC.Base.quotInt_info


==================== Asm code ====================
2018-03-16 15:54:44.649722513 UTC

.section .text
.align 8
.globl GHC.Base.quotInt_entry
.type GHC.Base.quotInt_entry, @object
GHC.Base.quotInt_entry:
_cdvE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdvQ
_cdvR:
	movq $block_cdvB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdvB
_cdvC:
	movq (%rbx),%rax
	jmp *(%rax)
_cdvQ:
	movl $GHC.Base.quotInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.quotInt_entry, .-GHC.Base.quotInt_entry


==================== Asm code ====================
2018-03-16 15:54:44.650375173 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.quotInt_info
.type GHC.Base.quotInt_info, @object
GHC.Base.quotInt_info:
	.quad	GHC.Base.quotInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.651071667 UTC

.section .text
.align 8
_cdvB:
_cdvB:
	movq $block_cdvH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdvH
_cdvI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdvB, .-_cdvB


==================== Asm code ====================
2018-03-16 15:54:44.651665044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdvB_info:
	.quad	_cdvB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.652363523 UTC

.section .text
.align 8
_cdvH:
_cdvH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdvV
_cdvU:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdvV:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdvH, .-_cdvH


==================== Asm code ====================
2018-03-16 15:54:44.652968671 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdvH_info:
	.quad	_cdvH
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.655936946 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.getTag_closure
.type GHC.Base.getTag_closure, @object
GHC.Base.getTag_closure:
	.quad	GHC.Base.getTag_info


==================== Asm code ====================
2018-03-16 15:54:44.656695227 UTC

.section .text
.align 8
.globl GHC.Base.getTag_entry
.type GHC.Base.getTag_entry, @object
GHC.Base.getTag_entry:
_cdwj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdwk
_cdwl:
	movq $block_cdwg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp stg_ap_0_fast
_cdwk:
	movl $GHC.Base.getTag_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.getTag_entry, .-GHC.Base.getTag_entry


==================== Asm code ====================
2018-03-16 15:54:44.657432365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.getTag_info
.type GHC.Base.getTag_info, @object
GHC.Base.getTag_info:
	.quad	GHC.Base.getTag_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.658426356 UTC

.section .text
.align 8
_cdwg:
_cdwg:
	andq $-8,%rbx
	movq (%rbx),%rax
	movl 20(%rax),%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdwg, .-_cdwg


==================== Asm code ====================
2018-03-16 15:54:44.659005509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdwg_info:
	.quad	_cdwg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.661687642 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO1_closure
.type GHC.Base.$fMonadIO1_closure, @object
GHC.Base.$fMonadIO1_closure:
	.quad	GHC.Base.$fMonadIO1_info


==================== Asm code ====================
2018-03-16 15:54:44.662405609 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadIO1_entry
.type GHC.Base.$fMonadIO1_entry, @object
GHC.Base.$fMonadIO1_entry:
_cdwF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdwG
_cdwH:
	movq $block_cdwD_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdwG:
	movl $GHC.Base.$fMonadIO1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadIO1_entry, .-GHC.Base.$fMonadIO1_entry


==================== Asm code ====================
2018-03-16 15:54:44.663055851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadIO1_info
.type GHC.Base.$fMonadIO1_info, @object
GHC.Base.$fMonadIO1_info:
	.quad	GHC.Base.$fMonadIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.663770528 UTC

.section .text
.align 8
_cdwD:
_cdwD:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
	.size _cdwD, .-_cdwD


==================== Asm code ====================
2018-03-16 15:54:44.664314779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdwD_info:
	.quad	_cdwD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.666792075 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.bindIO_closure
.type GHC.Base.bindIO_closure, @object
GHC.Base.bindIO_closure:
	.quad	GHC.Base.bindIO_info


==================== Asm code ====================
2018-03-16 15:54:44.667352148 UTC

.section .text
.align 8
.globl GHC.Base.bindIO_entry
.type GHC.Base.bindIO_entry, @object
GHC.Base.bindIO_entry:
_cdwV:
	jmp GHC.Base.$fMonadIO1_entry
	.size GHC.Base.bindIO_entry, .-GHC.Base.bindIO_entry


==================== Asm code ====================
2018-03-16 15:54:44.667915439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.bindIO_info
.type GHC.Base.bindIO_info, @object
GHC.Base.bindIO_info:
	.quad	GHC.Base.bindIO_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.670578481 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO2_closure
.type GHC.Base.$fApplicativeIO2_closure, @object
GHC.Base.$fApplicativeIO2_closure:
	.quad	GHC.Base.$fApplicativeIO2_info


==================== Asm code ====================
2018-03-16 15:54:44.671324476 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO2_entry
.type GHC.Base.$fApplicativeIO2_entry, @object
GHC.Base.$fApplicativeIO2_entry:
_cdx8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdx9
_cdxa:
	movq $block_cdx6_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdx9:
	movl $GHC.Base.$fApplicativeIO2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO2_entry, .-GHC.Base.$fApplicativeIO2_entry


==================== Asm code ====================
2018-03-16 15:54:44.672342435 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO2_info
.type GHC.Base.$fApplicativeIO2_info, @object
GHC.Base.$fApplicativeIO2_info:
	.quad	GHC.Base.$fApplicativeIO2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.67297492 UTC

.section .text
.align 8
_cdx6:
_cdx6:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_v_fast
	.size _cdx6, .-_cdx6


==================== Asm code ====================
2018-03-16 15:54:44.673574814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdx6_info:
	.quad	_cdx6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.675717066 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.thenIO_closure
.type GHC.Base.thenIO_closure, @object
GHC.Base.thenIO_closure:
	.quad	GHC.Base.thenIO_info


==================== Asm code ====================
2018-03-16 15:54:44.676342353 UTC

.section .text
.align 8
.globl GHC.Base.thenIO_entry
.type GHC.Base.thenIO_entry, @object
GHC.Base.thenIO_entry:
_cdxo:
	jmp GHC.Base.$fApplicativeIO2_entry
	.size GHC.Base.thenIO_entry, .-GHC.Base.thenIO_entry


==================== Asm code ====================
2018-03-16 15:54:44.676890901 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.thenIO_info
.type GHC.Base.thenIO_info, @object
GHC.Base.thenIO_info:
	.quad	GHC.Base.thenIO_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.678892386 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unIO1_closure
.type GHC.Base.unIO1_closure, @object
GHC.Base.unIO1_closure:
	.quad	GHC.Base.unIO1_info


==================== Asm code ====================
2018-03-16 15:54:44.679483018 UTC

.section .text
.align 8
.globl GHC.Base.unIO1_entry
.type GHC.Base.unIO1_entry, @object
GHC.Base.unIO1_entry:
_cdxz:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.unIO1_entry, .-GHC.Base.unIO1_entry


==================== Asm code ====================
2018-03-16 15:54:44.680035447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unIO1_info
.type GHC.Base.unIO1_info, @object
GHC.Base.unIO1_info:
	.quad	GHC.Base.unIO1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.682052945 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unIO_closure
.type GHC.Base.unIO_closure, @object
GHC.Base.unIO_closure:
	.quad	GHC.Base.unIO_info


==================== Asm code ====================
2018-03-16 15:54:44.682680598 UTC

.section .text
.align 8
.globl GHC.Base.unIO_entry
.type GHC.Base.unIO_entry, @object
GHC.Base.unIO_entry:
_cdxK:
	jmp GHC.Base.unIO1_entry
	.size GHC.Base.unIO_entry, .-GHC.Base.unIO_entry


==================== Asm code ====================
2018-03-16 15:54:44.683229735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unIO_info
.type GHC.Base.unIO_info, @object
GHC.Base.unIO_info:
	.quad	GHC.Base.unIO_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.685356889 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO4_closure
.type GHC.Base.$fApplicativeIO4_closure, @object
GHC.Base.$fApplicativeIO4_closure:
	.quad	GHC.Base.$fApplicativeIO4_info


==================== Asm code ====================
2018-03-16 15:54:44.686383763 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO4_entry
.type GHC.Base.$fApplicativeIO4_entry, @object
GHC.Base.$fApplicativeIO4_entry:
_cdxV:
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fApplicativeIO4_entry, .-GHC.Base.$fApplicativeIO4_entry


==================== Asm code ====================
2018-03-16 15:54:44.686973329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO4_info
.type GHC.Base.$fApplicativeIO4_info, @object
GHC.Base.$fApplicativeIO4_info:
	.quad	GHC.Base.$fApplicativeIO4_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:44.689047337 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.returnIO_closure
.type GHC.Base.returnIO_closure, @object
GHC.Base.returnIO_closure:
	.quad	GHC.Base.returnIO_info


==================== Asm code ====================
2018-03-16 15:54:44.689930644 UTC

.section .text
.align 8
.globl GHC.Base.returnIO_entry
.type GHC.Base.returnIO_entry, @object
GHC.Base.returnIO_entry:
_cdy7:
	jmp GHC.Base.$fApplicativeIO4_entry
	.size GHC.Base.returnIO_entry, .-GHC.Base.returnIO_entry


==================== Asm code ====================
2018-03-16 15:54:44.690484384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.returnIO_info
.type GHC.Base.returnIO_info, @object
GHC.Base.returnIO_info:
	.quad	GHC.Base.returnIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:44.693653151 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO3_closure
.type GHC.Base.$fApplicativeIO3_closure, @object
GHC.Base.$fApplicativeIO3_closure:
	.quad	GHC.Base.$fApplicativeIO3_info


==================== Asm code ====================
2018-03-16 15:54:44.694446055 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO3_entry
.type GHC.Base.$fApplicativeIO3_entry, @object
GHC.Base.$fApplicativeIO3_entry:
_cdyn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdyo
_cdyp:
	movq $block_cdyi_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdyo:
	movl $GHC.Base.$fApplicativeIO3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO3_entry, .-GHC.Base.$fApplicativeIO3_entry


==================== Asm code ====================
2018-03-16 15:54:44.695073123 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO3_info
.type GHC.Base.$fApplicativeIO3_info, @object
GHC.Base.$fApplicativeIO3_info:
	.quad	GHC.Base.$fApplicativeIO3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.695724855 UTC

.section .text
.align 8
_cdyi:
_cdyi:
	movq $block_cdyk_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_v_fast
	.size _cdyi, .-_cdyi


==================== Asm code ====================
2018-03-16 15:54:44.696307391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdyi_info:
	.quad	_cdyi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.697048427 UTC

.section .text
.align 8
_cdyk:
_cdyk:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdyt
_cdys:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdyt:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdyk, .-_cdyk


==================== Asm code ====================
2018-03-16 15:54:44.697733012 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdyk_info:
	.quad	_cdyk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.700207407 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA1_closure
.type GHC.Base.liftA_$sliftA1_closure, @object
GHC.Base.liftA_$sliftA1_closure:
	.quad	GHC.Base.liftA_$sliftA1_info


==================== Asm code ====================
2018-03-16 15:54:44.70082915 UTC

.section .text
.align 8
.globl GHC.Base.liftA_$sliftA1_entry
.type GHC.Base.liftA_$sliftA1_entry, @object
GHC.Base.liftA_$sliftA1_entry:
_cdyL:
	jmp GHC.Base.$fFunctorIO2_entry
	.size GHC.Base.liftA_$sliftA1_entry, .-GHC.Base.liftA_$sliftA1_entry


==================== Asm code ====================
2018-03-16 15:54:44.701438906 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA1_info
.type GHC.Base.liftA_$sliftA1_info, @object
GHC.Base.liftA_$sliftA1_info:
	.quad	GHC.Base.liftA_$sliftA1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.704667944 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap1_closure
.type GHC.Base.ap1_closure, @object
GHC.Base.ap1_closure:
	.quad	GHC.Base.ap1_info


==================== Asm code ====================
2018-03-16 15:54:44.705784464 UTC

.section .text
.align 8
.globl GHC.Base.ap1_entry
.type GHC.Base.ap1_entry, @object
GHC.Base.ap1_entry:
_cdz1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdz2
_cdz3:
	movq $block_cdyW_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdz2:
	movl $GHC.Base.ap1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.ap1_entry, .-GHC.Base.ap1_entry


==================== Asm code ====================
2018-03-16 15:54:44.706397892 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap1_info
.type GHC.Base.ap1_info, @object
GHC.Base.ap1_info:
	.quad	GHC.Base.ap1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.707008372 UTC

.section .text
.align 8
_cdyW:
_cdyW:
	movq $block_cdyY_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_v_fast
	.size _cdyW, .-_cdyW


==================== Asm code ====================
2018-03-16 15:54:44.707581224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdyW_info:
	.quad	_cdyW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.708252038 UTC

.section .text
.align 8
_cdyY:
_cdyY:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdz7
_cdz6:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdz7:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdyY, .-_cdyY


==================== Asm code ====================
2018-03-16 15:54:44.708839159 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdyY_info:
	.quad	_cdyY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.710983558 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_$sap1_closure
.type GHC.Base.ap_$sap1_closure, @object
GHC.Base.ap_$sap1_closure:
	.quad	GHC.Base.ap_$sap1_info


==================== Asm code ====================
2018-03-16 15:54:44.711574614 UTC

.section .text
.align 8
.globl GHC.Base.ap_$sap1_entry
.type GHC.Base.ap_$sap1_entry, @object
GHC.Base.ap_$sap1_entry:
_cdzp:
	jmp GHC.Base.ap1_entry
	.size GHC.Base.ap_$sap1_entry, .-GHC.Base.ap_$sap1_entry


==================== Asm code ====================
2018-03-16 15:54:44.712144919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_$sap1_info
.type GHC.Base.ap_$sap1_info, @object
GHC.Base.ap_$sap1_info:
	.quad	GHC.Base.ap_$sap1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.716922617 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_closure
.type GHC.Base.ap_closure, @object
GHC.Base.ap_closure:
	.quad	GHC.Base.ap_info


==================== Asm code ====================
2018-03-16 15:54:44.718415989 UTC

.section .text
.align 8
sat_s7W8_entry:
_cdzL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdzM
_cdzN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdzP
_cdzO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdzP:
	movq $32,904(%r13)
_cdzM:
	jmp *-8(%r13)
	.size sat_s7W8_entry, .-sat_s7W8_entry


==================== Asm code ====================
2018-03-16 15:54:44.719134899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7W8_info:
	.quad	sat_s7W8_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.719947062 UTC

.section .text
.align 8
sat_s7W9_entry:
_cdzQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdzR
_cdzS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdzU
_cdzT:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s7W8_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdzU:
	movq $24,904(%r13)
_cdzR:
	jmp *-8(%r13)
	.size sat_s7W9_entry, .-sat_s7W9_entry


==================== Asm code ====================
2018-03-16 15:54:44.720690904 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7W9_info:
	.quad	sat_s7W9_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.721522497 UTC

.section .text
.align 8
.globl GHC.Base.ap_entry
.type GHC.Base.ap_entry, @object
GHC.Base.ap_entry:
_cdzV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdzW
_cdzX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdzZ
_cdzY:
	movq $sat_s7W9_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdzZ:
	movq $24,904(%r13)
_cdzW:
	movl $GHC.Base.ap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.ap_entry, .-GHC.Base.ap_entry


==================== Asm code ====================
2018-03-16 15:54:44.722244348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_info
.type GHC.Base.ap_info, @object
GHC.Base.ap_info:
	.quad	GHC.Base.ap_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.725747474 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM1_closure
.type GHC.Base.liftM1_closure, @object
GHC.Base.liftM1_closure:
	.quad	GHC.Base.liftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.726517325 UTC

.section .text
.align 8
.globl GHC.Base.liftM1_entry
.type GHC.Base.liftM1_entry, @object
GHC.Base.liftM1_entry:
_cdAp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdAq
_cdAr:
	movq $block_cdAk_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_cdAq:
	movl $GHC.Base.liftM1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM1_entry, .-GHC.Base.liftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.727125105 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM1_info
.type GHC.Base.liftM1_info, @object
GHC.Base.liftM1_info:
	.quad	GHC.Base.liftM1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.727750271 UTC

.section .text
.align 8
_cdAk:
_cdAk:
	movq $block_cdAm_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdAk, .-_cdAk


==================== Asm code ====================
2018-03-16 15:54:44.728359031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdAk_info:
	.quad	_cdAk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.729112372 UTC

.section .text
.align 8
_cdAm:
_cdAm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdAv
_cdAu:
	movq $stg_ap_3_upd_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdAv:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdAm, .-_cdAm


==================== Asm code ====================
2018-03-16 15:54:44.730114538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdAm_info:
	.quad	_cdAm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.732308486 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM1_closure
.type GHC.Base.liftM2_$sliftM1_closure, @object
GHC.Base.liftM2_$sliftM1_closure:
	.quad	GHC.Base.liftM2_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.732921422 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_$sliftM1_entry
.type GHC.Base.liftM2_$sliftM1_entry, @object
GHC.Base.liftM2_$sliftM1_entry:
_cdAO:
	jmp GHC.Base.liftM1_entry
	.size GHC.Base.liftM2_$sliftM1_entry, .-GHC.Base.liftM2_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.733919614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM1_info
.type GHC.Base.liftM2_$sliftM1_info, @object
GHC.Base.liftM2_$sliftM1_info:
	.quad	GHC.Base.liftM2_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.738452429 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_closure
.type GHC.Base.liftM2_closure, @object
GHC.Base.liftM2_closure:
	.quad	GHC.Base.liftM2_info


==================== Asm code ====================
2018-03-16 15:54:44.73932955 UTC

.section .text
.align 8
sat_s7Ws_entry:
_cdBa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdBb
_cdBc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdBe
_cdBd:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $stg_ap_3_upd_info,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdBe:
	movq $40,904(%r13)
_cdBb:
	jmp *-8(%r13)
	.size sat_s7Ws_entry, .-sat_s7Ws_entry


==================== Asm code ====================
2018-03-16 15:54:44.740009556 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Ws_info:
	.quad	sat_s7Ws_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.74076802 UTC

.section .text
.align 8
sat_s7Wt_entry:
_cdBf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdBg
_cdBh:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdBj
_cdBi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_s7Ws_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -23(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdBj:
	movq $32,904(%r13)
_cdBg:
	jmp *-8(%r13)
	.size sat_s7Wt_entry, .-sat_s7Wt_entry


==================== Asm code ====================
2018-03-16 15:54:44.741449304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Wt_info:
	.quad	sat_s7Wt_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.74226485 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_entry
.type GHC.Base.liftM2_entry, @object
GHC.Base.liftM2_entry:
_cdBk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdBl
_cdBm:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdBo
_cdBn:
	movq $sat_s7Wt_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -23(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdBo:
	movq $32,904(%r13)
_cdBl:
	movl $GHC.Base.liftM2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM2_entry, .-GHC.Base.liftM2_entry


==================== Asm code ====================
2018-03-16 15:54:44.742940348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_info
.type GHC.Base.liftM2_info, @object
GHC.Base.liftM2_info:
	.quad	GHC.Base.liftM2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:44.746812795 UTC

.section .data
.align 8
.align 1
$cliftA2_r7PG_closure:
	.quad	$cliftA2_r7PG_info


==================== Asm code ====================
2018-03-16 15:54:44.747526068 UTC

.section .text
.align 8
$cliftA2_r7PG_entry:
_cdBO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdBP
_cdBQ:
	movq $block_cdBJ_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_cdBP:
	movl $$cliftA2_r7PG_closure,%ebx
	jmp *-8(%r13)
	.size $cliftA2_r7PG_entry, .-$cliftA2_r7PG_entry


==================== Asm code ====================
2018-03-16 15:54:44.748132408 UTC

.section .data.rel.ro
.align 8
.align 1
$cliftA2_r7PG_info:
	.quad	$cliftA2_r7PG_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.748733747 UTC

.section .text
.align 8
_cdBJ:
_cdBJ:
	movq $block_cdBL_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdBJ, .-_cdBJ


==================== Asm code ====================
2018-03-16 15:54:44.749355076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdBJ_info:
	.quad	_cdBJ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.750065529 UTC

.section .text
.align 8
_cdBL:
_cdBL:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdBU
_cdBT:
	movq $stg_ap_3_upd_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdBU:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdBL, .-_cdBL


==================== Asm code ====================
2018-03-16 15:54:44.750657889 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdBL_info:
	.quad	_cdBL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.752814007 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_$cliftA2_closure
.type GHC.Base.$fApplicativeIO_$cliftA2_closure, @object
GHC.Base.$fApplicativeIO_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:44.753448344 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO_$cliftA2_entry
.type GHC.Base.$fApplicativeIO_$cliftA2_entry, @object
GHC.Base.$fApplicativeIO_$cliftA2_entry:
_cdCd:
	jmp $cliftA2_r7PG_entry
	.size GHC.Base.$fApplicativeIO_$cliftA2_entry, .-GHC.Base.$fApplicativeIO_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:44.754002335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_$cliftA2_info
.type GHC.Base.$fApplicativeIO_$cliftA2_info, @object
GHC.Base.$fApplicativeIO_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.757959117 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA1_closure
.type GHC.Base.liftA1_closure, @object
GHC.Base.liftA1_closure:
	.quad	GHC.Base.liftA1_info


==================== Asm code ====================
2018-03-16 15:54:44.759161099 UTC

.section .text
.align 8
.globl GHC.Base.liftA1_entry
.type GHC.Base.liftA1_entry, @object
GHC.Base.liftA1_entry:
_cdCv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdCw
_cdCx:
	movq $block_cdCo_info,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp stg_ap_v_fast
_cdCw:
	movl $GHC.Base.liftA1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftA1_entry, .-GHC.Base.liftA1_entry


==================== Asm code ====================
2018-03-16 15:54:44.759810757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA1_info
.type GHC.Base.liftA1_info, @object
GHC.Base.liftA1_info:
	.quad	GHC.Base.liftA1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:44.760456121 UTC

.section .text
.align 8
_cdCo:
_cdCo:
	movq $block_cdCq_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdCo, .-_cdCo


==================== Asm code ====================
2018-03-16 15:54:44.761028467 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdCo_info:
	.quad	_cdCo
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.761726001 UTC

.section .text
.align 8
_cdCq:
_cdCq:
	movq $block_cdCs_info,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp stg_ap_v_fast
	.size _cdCq, .-_cdCq


==================== Asm code ====================
2018-03-16 15:54:44.762284195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdCq_info:
	.quad	_cdCq
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.762976424 UTC

.section .text
.align 8
_cdCs:
_cdCs:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdCC
_cdCB:
	movq $stg_ap_4_upd_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdCC:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdCs, .-_cdCs


==================== Asm code ====================
2018-03-16 15:54:44.763592199 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdCs_info:
	.quad	_cdCs
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.766155222 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA1_closure
.type GHC.Base.liftA3_$sliftA1_closure, @object
GHC.Base.liftA3_$sliftA1_closure:
	.quad	GHC.Base.liftA3_$sliftA1_info


==================== Asm code ====================
2018-03-16 15:54:44.766803325 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_$sliftA1_entry
.type GHC.Base.liftA3_$sliftA1_entry, @object
GHC.Base.liftA3_$sliftA1_entry:
_cdCZ:
	jmp GHC.Base.liftA1_entry
	.size GHC.Base.liftA3_$sliftA1_entry, .-GHC.Base.liftA3_$sliftA1_entry


==================== Asm code ====================
2018-03-16 15:54:44.767346468 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA1_info
.type GHC.Base.liftA3_$sliftA1_info, @object
GHC.Base.liftA3_$sliftA1_info:
	.quad	GHC.Base.liftA3_$sliftA1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:44.771397005 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO2_closure
.type GHC.Base.$fSemigroupIO2_closure, @object
GHC.Base.$fSemigroupIO2_closure:
	.quad	GHC.Base.$fSemigroupIO2_info


==================== Asm code ====================
2018-03-16 15:54:44.772199719 UTC

.section .text
.align 8
sat_s7X4_entry:
_cdDi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdDj
_cdDk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cdDj:
	jmp *-16(%r13)
	.size sat_s7X4_entry, .-sat_s7X4_entry


==================== Asm code ====================
2018-03-16 15:54:44.772880838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7X4_info:
	.quad	sat_s7X4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:44.773992669 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO2_entry
.type GHC.Base.$fSemigroupIO2_entry, @object
GHC.Base.$fSemigroupIO2_entry:
_cdDl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdDm
_cdDn:
	movq $block_cdDa_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_cdDm:
	movl $GHC.Base.$fSemigroupIO2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO2_entry, .-GHC.Base.$fSemigroupIO2_entry


==================== Asm code ====================
2018-03-16 15:54:44.774669775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO2_info
.type GHC.Base.$fSemigroupIO2_info, @object
GHC.Base.$fSemigroupIO2_info:
	.quad	GHC.Base.$fSemigroupIO2_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.77525775 UTC

.section .text
.align 8
_cdDa:
_cdDa:
	movq $block_cdDc_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdDa, .-_cdDa


==================== Asm code ====================
2018-03-16 15:54:44.775767642 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdDa_info:
	.quad	_cdDa
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.776448905 UTC

.section .text
.align 8
_cdDc:
_cdDc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdDr
_cdDq:
	movq $sat_s7X4_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdDr:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdDc, .-_cdDc


==================== Asm code ====================
2018-03-16 15:54:44.777047763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdDc_info:
	.quad	_cdDc
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.782689023 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat4_closure
.type GHC.Base.$w$csconcat4_closure, @object
GHC.Base.$w$csconcat4_closure:
	.quad	GHC.Base.$w$csconcat4_info


==================== Asm code ====================
2018-03-16 15:54:44.783448781 UTC

.section .text
.align 8
sat_s7Xm_entry:
_cdE9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdEa
_cdEb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cdEa:
	jmp *-16(%r13)
	.size sat_s7Xm_entry, .-sat_s7Xm_entry


==================== Asm code ====================
2018-03-16 15:54:44.784112091 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Xm_info:
	.quad	sat_s7Xm_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:44.784951268 UTC

.section .text
.align 8
go_s7X9_entry:
_cdEg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdEh
_cdEi:
	movq $block_cdDV_info,-32(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cdDV
_cdDW:
	movq (%rbx),%rax
	jmp *(%rax)
_cdEh:
	jmp *-8(%r13)
	.size go_s7X9_entry, .-go_s7X9_entry


==================== Asm code ====================
2018-03-16 15:54:44.786146197 UTC

.section .data.rel.ro
.align 8
.align 1
go_s7X9_info:
	.quad	go_s7X9_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.786903541 UTC

.section .text
.align 8
_cdDV:
_cdDV:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cdEd
_cdEe:
	movq $block_cdE1_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	jmp stg_ap_v_fast
_cdEd:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_ap_v_fast
	.size _cdDV, .-_cdDV


==================== Asm code ====================
2018-03-16 15:54:44.787571946 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdDV_info:
	.quad	_cdDV
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.788599466 UTC

.section .text
.align 8
_cdE1:
_cdE1:
	movq 8(%rbp),%rax
	movq $block_cdE3_info,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp go_s7X9_entry
	.size _cdE1, .-_cdE1


==================== Asm code ====================
2018-03-16 15:54:44.789201336 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdE1_info:
	.quad	_cdE1
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.789925739 UTC

.section .text
.align 8
_cdE3:
_cdE3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdEp
_cdEo:
	movq $sat_s7Xm_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdEp:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdE3, .-_cdE3


==================== Asm code ====================
2018-03-16 15:54:44.79055415 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdE3_info:
	.quad	_cdE3
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.791239556 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat4_entry
.type GHC.Base.$w$csconcat4_entry, @object
GHC.Base.$w$csconcat4_entry:
_cdEr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdEv
_cdEu:
	movq $go_s7X9_info,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -5(%r12),%rbx
	jmp go_s7X9_entry
_cdEv:
	movq $16,904(%r13)
	movl $GHC.Base.$w$csconcat4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat4_entry, .-GHC.Base.$w$csconcat4_entry


==================== Asm code ====================
2018-03-16 15:54:44.791874982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat4_info
.type GHC.Base.$w$csconcat4_info, @object
GHC.Base.$w$csconcat4_info:
	.quad	GHC.Base.$w$csconcat4_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.794967731 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO1_closure
.type GHC.Base.$fSemigroupIO1_closure, @object
GHC.Base.$fSemigroupIO1_closure:
	.quad	GHC.Base.$fSemigroupIO1_info


==================== Asm code ====================
2018-03-16 15:54:44.795761005 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO1_entry
.type GHC.Base.$fSemigroupIO1_entry, @object
GHC.Base.$fSemigroupIO1_entry:
_cdF6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdF7
_cdF8:
	movq $block_cdF3_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdF3
_cdF4:
	movq (%rbx),%rax
	jmp *(%rax)
_cdF7:
	movl $GHC.Base.$fSemigroupIO1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO1_entry, .-GHC.Base.$fSemigroupIO1_entry


==================== Asm code ====================
2018-03-16 15:54:44.796458338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO1_info
.type GHC.Base.$fSemigroupIO1_info, @object
GHC.Base.$fSemigroupIO1_info:
	.quad	GHC.Base.$fSemigroupIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.797119955 UTC

.section .text
.align 8
_cdF3:
_cdF3:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat4_entry
	.size _cdF3, .-_cdF3


==================== Asm code ====================
2018-03-16 15:54:44.797937277 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdF3_info:
	.quad	_cdF3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.803367843 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_closure
.type GHC.Base.$fSemigroupIO_closure, @object
GHC.Base.$fSemigroupIO_closure:
	.quad	GHC.Base.$fSemigroupIO_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.804478566 UTC

.section .text
.align 8
sat_s7Xw_entry:
_cdFv:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO_$cstimes_entry
	.size sat_s7Xw_entry, .-sat_s7Xw_entry


==================== Asm code ====================
2018-03-16 15:54:44.80507422 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Xw_info:
	.quad	sat_s7Xw_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8R0_srt


==================== Asm code ====================
2018-03-16 15:54:44.805783658 UTC

.section .text
.align 8
sat_s7Xv_entry:
_cdFD:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO1_entry
	.size sat_s7Xv_entry, .-sat_s7Xv_entry


==================== Asm code ====================
2018-03-16 15:54:44.806401615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Xv_info:
	.quad	sat_s7Xv_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:44.80704544 UTC

.section .text
.align 8
sat_s7Xu_entry:
_cdFL:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO2_entry
	.size sat_s7Xu_entry, .-sat_s7Xu_entry


==================== Asm code ====================
2018-03-16 15:54:44.807587993 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Xu_info:
	.quad	sat_s7Xu_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.80837596 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO_entry
.type GHC.Base.$fSemigroupIO_entry, @object
GHC.Base.$fSemigroupIO_entry:
_cdFP:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cdFT
_cdFS:
	movq $sat_s7Xw_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s7Xv_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s7Xu_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -37(%r12),%rax
	movq %rax,-16(%r12)
	leaq -54(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cdFT:
	movq $80,904(%r13)
	movl $GHC.Base.$fSemigroupIO_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO_entry, .-GHC.Base.$fSemigroupIO_entry


==================== Asm code ====================
2018-03-16 15:54:44.809103794 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_info
.type GHC.Base.$fSemigroupIO_info, @object
GHC.Base.$fSemigroupIO_info:
	.quad	GHC.Base.$fSemigroupIO_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8R0_srt


==================== Asm code ====================
2018-03-16 15:54:44.810117489 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_$cstimes_closure
.type GHC.Base.$fSemigroupIO_$cstimes_closure, @object
GHC.Base.$fSemigroupIO_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.810796528 UTC

.section .text
.align 8
sat_s7Xz_entry:
_cdG2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdG3
_cdG4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroupIO_entry
_cdG3:
	jmp *-16(%r13)
	.size sat_s7Xz_entry, .-sat_s7Xz_entry


==================== Asm code ====================
2018-03-16 15:54:44.811379401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Xz_info:
	.quad	sat_s7Xz_entry
	.quad	1
	.quad	4294967312
	.quad	S8R0_srt+8


==================== Asm code ====================
2018-03-16 15:54:44.812126202 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO_$cstimes_entry
.type GHC.Base.$fSemigroupIO_$cstimes_entry, @object
GHC.Base.$fSemigroupIO_$cstimes_entry:
_cdG5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdG9
_cdG8:
	movq $sat_s7Xz_info,-16(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movl $Data.Semigroup.Internal.stimesDefault_closure,%ebx
	jmp stg_ap_pp_fast
_cdG9:
	movq $24,904(%r13)
	movl $GHC.Base.$fSemigroupIO_$cstimes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO_$cstimes_entry, .-GHC.Base.$fSemigroupIO_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:44.812763128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_$cstimes_info
.type GHC.Base.$fSemigroupIO_$cstimes_info, @object
GHC.Base.$fSemigroupIO_$cstimes_info:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S8R0_srt


==================== Asm code ====================
2018-03-16 15:54:44.815911696 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cp1Monoid_closure
.type GHC.Base.$fMonoidIO_$cp1Monoid_closure, @object
GHC.Base.$fMonoidIO_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.816664094 UTC

.section .text
.align 8
sat_s7XB_entry:
_cdGH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdGI
_cdGJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdGI:
	jmp *-16(%r13)
	.size sat_s7XB_entry, .-sat_s7XB_entry


==================== Asm code ====================
2018-03-16 15:54:44.817602472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7XB_info:
	.quad	sat_s7XB_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:44.818315742 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_$cp1Monoid_entry
.type GHC.Base.$fMonoidIO_$cp1Monoid_entry, @object
GHC.Base.$fMonoidIO_$cp1Monoid_entry:
_cdGK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdGO
_cdGN:
	movq $sat_s7XB_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroupIO_entry
_cdGO:
	movq $24,904(%r13)
	movl $GHC.Base.$fMonoidIO_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO_$cp1Monoid_entry, .-GHC.Base.$fMonoidIO_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:44.819322882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cp1Monoid_info
.type GHC.Base.$fMonoidIO_$cp1Monoid_info, @object
GHC.Base.$fMonoidIO_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S8R0_srt+8


==================== Asm code ====================
2018-03-16 15:54:44.823623338 UTC

.section .data
.align 8
.align 1
$cmappend_r7PH_closure:
	.quad	$cmappend_r7PH_info


==================== Asm code ====================
2018-03-16 15:54:44.824406638 UTC

.section .text
.align 8
sat_s7XN_entry:
_cdHb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdHc
_cdHd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdH9_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdHc:
	jmp *-16(%r13)
	.size sat_s7XN_entry, .-sat_s7XN_entry


==================== Asm code ====================
2018-03-16 15:54:44.825127419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7XN_info:
	.quad	sat_s7XN_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:44.825831922 UTC

.section .text
.align 8
_cdH9:
_cdH9:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdH9, .-_cdH9


==================== Asm code ====================
2018-03-16 15:54:44.826390265 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdH9_info:
	.quad	_cdH9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.827064103 UTC

.section .text
.align 8
$cmappend_r7PH_entry:
_cdHh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdHi
_cdHj:
	movq $block_cdH1_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_cdHi:
	movl $$cmappend_r7PH_closure,%ebx
	jmp *-8(%r13)
	.size $cmappend_r7PH_entry, .-$cmappend_r7PH_entry


==================== Asm code ====================
2018-03-16 15:54:44.827682377 UTC

.section .data.rel.ro
.align 8
.align 1
$cmappend_r7PH_info:
	.quad	$cmappend_r7PH_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.828318232 UTC

.section .text
.align 8
_cdH1:
_cdH1:
	movq $block_cdH3_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdH1, .-_cdH1


==================== Asm code ====================
2018-03-16 15:54:44.828876302 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdH1_info:
	.quad	_cdH1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.829918538 UTC

.section .text
.align 8
_cdH3:
_cdH3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdHn
_cdHm:
	movq $sat_s7XN_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdHn:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdH3, .-_cdH3


==================== Asm code ====================
2018-03-16 15:54:44.830546288 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdH3_info:
	.quad	_cdH3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.832815251 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cmappend_closure
.type GHC.Base.$fMonoidIO_$cmappend_closure, @object
GHC.Base.$fMonoidIO_$cmappend_closure:
	.quad	GHC.Base.$fMonoidIO_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:44.8338751 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_$cmappend_entry
.type GHC.Base.$fMonoidIO_$cmappend_entry, @object
GHC.Base.$fMonoidIO_$cmappend_entry:
_cdHP:
	jmp $cmappend_r7PH_entry
	.size GHC.Base.$fMonoidIO_$cmappend_entry, .-GHC.Base.$fMonoidIO_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:44.834384891 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cmappend_info
.type GHC.Base.$fMonoidIO_$cmappend_info, @object
GHC.Base.$fMonoidIO_$cmappend_info:
	.quad	GHC.Base.$fMonoidIO_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:44.836426075 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO1_closure
.type GHC.Base.$fAlternativeIO1_closure, @object
GHC.Base.$fAlternativeIO1_closure:
	.quad	GHC.Base.$fAlternativeIO1_info


==================== Asm code ====================
2018-03-16 15:54:44.837061411 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO1_entry
.type GHC.Base.$fAlternativeIO1_entry, @object
GHC.Base.$fAlternativeIO1_entry:
_cdI0:
	movl $GHC.Types.[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO1_entry, .-GHC.Base.$fAlternativeIO1_entry


==================== Asm code ====================
2018-03-16 15:54:44.83780568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO1_info
.type GHC.Base.$fAlternativeIO1_info, @object
GHC.Base.$fAlternativeIO1_info:
	.quad	GHC.Base.$fAlternativeIO1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:44.841780009 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO2_closure
.type GHC.Base.$fAlternativeIO2_closure, @object
GHC.Base.$fAlternativeIO2_closure:
	.quad	GHC.Base.$fAlternativeIO2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.842553741 UTC

.section .text
.align 8
some_v_s7XR_entry:
_cdIm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdIn
_cdIo:
	movq $block_cdIh_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdIn:
	jmp *-8(%r13)
	.size some_v_s7XR_entry, .-some_v_s7XR_entry


==================== Asm code ====================
2018-03-16 15:54:44.843163735 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_s7XR_info:
	.quad	some_v_s7XR_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8R0_srt+32


==================== Asm code ====================
2018-03-16 15:54:44.843813516 UTC

.section .text
.align 8
_cdIh:
_cdIh:
	movq $block_cdIj_info,(%rbp)
	movl $GHC.Base.$fAlternativeIO1_closure+1,%esi
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movl $GHC.IO.mplusIO_closure,%ebx
	movq %rax,8(%rbp)
	jmp stg_ap_ppv_fast
	.size _cdIh, .-_cdIh


==================== Asm code ====================
2018-03-16 15:54:44.844417844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdIh_info:
	.quad	_cdIh
	.quad	1
	.quad	4294967326
	.quad	S8R0_srt+32


==================== Asm code ====================
2018-03-16 15:54:44.845133134 UTC

.section .text
.align 8
_cdIj:
_cdIj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdIs
_cdIr:
	movq $:_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdIs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdIj, .-_cdIj


==================== Asm code ====================
2018-03-16 15:54:44.845802046 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdIj_info:
	.quad	_cdIj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.846492876 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO2_entry
.type GHC.Base.$fAlternativeIO2_entry, @object
GHC.Base.$fAlternativeIO2_entry:
_cdIt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdIx
_cdIw:
	movq $some_v_s7XR_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	jmp some_v_s7XR_entry
_cdIx:
	movq $16,904(%r13)
	movl $GHC.Base.$fAlternativeIO2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeIO2_entry, .-GHC.Base.$fAlternativeIO2_entry


==================== Asm code ====================
2018-03-16 15:54:44.847134825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO2_info
.type GHC.Base.$fAlternativeIO2_info, @object
GHC.Base.$fAlternativeIO2_info:
	.quad	GHC.Base.$fAlternativeIO2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8R0_srt+32


==================== Asm code ====================
2018-03-16 15:54:44.85233445 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cmany_closure
.type GHC.Base.$fAlternativeIO_$cmany_closure, @object
GHC.Base.$fAlternativeIO_$cmany_closure:
	.quad	GHC.Base.$fAlternativeIO_$cmany_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:44.85309965 UTC

.section .text
.align 8
sat_s7Ya_entry:
_cdJ6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdJ7
_cdJ8:
	movq $block_cdJ1_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdJ7:
	jmp *-8(%r13)
	.size sat_s7Ya_entry, .-sat_s7Ya_entry


==================== Asm code ====================
2018-03-16 15:54:44.853724129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Ya_info:
	.quad	sat_s7Ya_entry
	.quad	2
	.quad	11
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:44.854365472 UTC

.section .text
.align 8
_cdJ1:
_cdJ1:
	movq $block_cdJ3_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_v_fast
	.size _cdJ1, .-_cdJ1


==================== Asm code ====================
2018-03-16 15:54:44.85490259 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJ1_info:
	.quad	_cdJ1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.855584269 UTC

.section .text
.align 8
_cdJ3:
_cdJ3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdJc
_cdJb:
	movq $:_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdJc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdJ3, .-_cdJ3


==================== Asm code ====================
2018-03-16 15:54:44.856231915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJ3_info:
	.quad	_cdJ3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.857006295 UTC

.section .text
.align 8
many_v_s7Y1_entry:
_cdJd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdJe
_cdJf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdJh
_cdJg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s7Ya_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movl $GHC.Base.$fAlternativeIO1_closure+1,%esi
	leaq -15(%r12),%r14
	movl $GHC.IO.mplusIO_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cdJh:
	movq $24,904(%r13)
_cdJe:
	jmp *-16(%r13)
	.size many_v_s7Y1_entry, .-many_v_s7Y1_entry


==================== Asm code ====================
2018-03-16 15:54:44.857739094 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_s7Y1_info:
	.quad	many_v_s7Y1_entry
	.quad	1
	.quad	4294967312
	.quad	S8R0_srt+32


==================== Asm code ====================
2018-03-16 15:54:44.858452998 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO_$cmany_entry
.type GHC.Base.$fAlternativeIO_$cmany_entry, @object
GHC.Base.$fAlternativeIO_$cmany_entry:
_cdJi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdJm
_cdJl:
	movq $many_v_s7Y1_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_ap_0_fast
_cdJm:
	movq $24,904(%r13)
	movl $GHC.Base.$fAlternativeIO_$cmany_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeIO_$cmany_entry, .-GHC.Base.$fAlternativeIO_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:44.859062974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cmany_info
.type GHC.Base.$fAlternativeIO_$cmany_info, @object
GHC.Base.$fAlternativeIO_$cmany_info:
	.quad	GHC.Base.$fAlternativeIO_$cmany_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S8R0_srt+32


==================== Asm code ====================
2018-03-16 15:54:44.864937817 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM9_closure
.type GHC.Base.liftM9_closure, @object
GHC.Base.liftM9_closure:
	.quad	GHC.Base.liftM9_info


==================== Asm code ====================
2018-03-16 15:54:44.865797651 UTC

.section .text
.align 8
.globl GHC.Base.liftM9_entry
.type GHC.Base.liftM9_entry, @object
GHC.Base.liftM9_entry:
_cdJW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdJX
_cdJY:
	movq $block_cdJL_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp stg_ap_v_fast
_cdJX:
	movl $GHC.Base.liftM9_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM9_entry, .-GHC.Base.liftM9_entry


==================== Asm code ====================
2018-03-16 15:54:44.866479829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM9_info
.type GHC.Base.liftM9_info, @object
GHC.Base.liftM9_info:
	.quad	GHC.Base.liftM9_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 15:54:44.867125523 UTC

.section .text
.align 8
_cdJL:
_cdJL:
	movq $block_cdJN_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdJL, .-_cdJL


==================== Asm code ====================
2018-03-16 15:54:44.867727899 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJL_info:
	.quad	_cdJL
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.868364541 UTC

.section .text
.align 8
_cdJN:
_cdJN:
	movq $block_cdJP_info,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp stg_ap_v_fast
	.size _cdJN, .-_cdJN


==================== Asm code ====================
2018-03-16 15:54:44.868933119 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJN_info:
	.quad	_cdJN
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.869577548 UTC

.section .text
.align 8
_cdJP:
_cdJP:
	movq $block_cdJR_info,(%rbp)
	movq %rbx,%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	jmp stg_ap_v_fast
	.size _cdJP, .-_cdJP


==================== Asm code ====================
2018-03-16 15:54:44.870111633 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJP_info:
	.quad	_cdJP
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.870744324 UTC

.section .text
.align 8
_cdJR:
_cdJR:
	movq $block_cdJT_info,(%rbp)
	movq %rbx,%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	jmp stg_ap_v_fast
	.size _cdJR, .-_cdJR


==================== Asm code ====================
2018-03-16 15:54:44.871319278 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJR_info:
	.quad	_cdJR
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.87208841 UTC

.section .text
.align 8
_cdJT:
_cdJT:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdK5
_cdK4:
	movq $stg_ap_6_upd_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdK5:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdJT, .-_cdJT


==================== Asm code ====================
2018-03-16 15:54:44.87274457 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdJT_info:
	.quad	_cdJT
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.875329163 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM1_closure
.type GHC.Base.liftM5_$sliftM1_closure, @object
GHC.Base.liftM5_$sliftM1_closure:
	.quad	GHC.Base.liftM5_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.875944075 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_$sliftM1_entry
.type GHC.Base.liftM5_$sliftM1_entry, @object
GHC.Base.liftM5_$sliftM1_entry:
_cdKA:
	jmp GHC.Base.liftM9_entry
	.size GHC.Base.liftM5_$sliftM1_entry, .-GHC.Base.liftM5_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.876476829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM1_info
.type GHC.Base.liftM5_$sliftM1_info, @object
GHC.Base.liftM5_$sliftM1_info:
	.quad	GHC.Base.liftM5_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 15:54:44.886157196 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_closure
.type GHC.Base.liftM5_closure, @object
GHC.Base.liftM5_closure:
	.quad	GHC.Base.liftM5_info


==================== Asm code ====================
2018-03-16 15:54:44.886898135 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_slow
.type GHC.Base.liftM5_slow, @object
GHC.Base.liftM5_slow:
_cdKI:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.liftM5_entry
	.size GHC.Base.liftM5_slow, .-GHC.Base.liftM5_slow


==================== Asm code ====================
2018-03-16 15:54:44.887758194 UTC

.section .text
.align 8
sat_s7YL_entry:
_cdLc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLd
_cdLe:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdLg
_cdLf:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $stg_ap_6_upd_info,-56(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdLg:
	movq $64,904(%r13)
_cdLd:
	jmp *-8(%r13)
	.size sat_s7YL_entry, .-sat_s7YL_entry


==================== Asm code ====================
2018-03-16 15:54:44.888467909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7YL_info:
	.quad	sat_s7YL_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.889325606 UTC

.section .text
.align 8
sat_s7YM_entry:
_cdLh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLi
_cdLj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdLl
_cdLk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_s7YL_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdLl:
	movq $56,904(%r13)
_cdLi:
	jmp *-8(%r13)
	.size sat_s7YM_entry, .-sat_s7YM_entry


==================== Asm code ====================
2018-03-16 15:54:44.890057784 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7YM_info:
	.quad	sat_s7YM_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.890881332 UTC

.section .text
.align 8
sat_s7YN_entry:
_cdLm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLn
_cdLo:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdLq
_cdLp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_s7YM_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdLq:
	movq $56,904(%r13)
_cdLn:
	jmp *-8(%r13)
	.size sat_s7YN_entry, .-sat_s7YN_entry


==================== Asm code ====================
2018-03-16 15:54:44.891597029 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7YN_info:
	.quad	sat_s7YN_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.892431291 UTC

.section .text
.align 8
sat_s7YO_entry:
_cdLr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLs
_cdLt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdLv
_cdLu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_s7YN_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdLv:
	movq $56,904(%r13)
_cdLs:
	jmp *-8(%r13)
	.size sat_s7YO_entry, .-sat_s7YO_entry


==================== Asm code ====================
2018-03-16 15:54:44.89391041 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7YO_info:
	.quad	sat_s7YO_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.894713536 UTC

.section .text
.align 8
sat_s7YP_entry:
_cdLw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLx
_cdLy:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdLA
_cdLz:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $sat_s7YO_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdLA:
	movq $56,904(%r13)
_cdLx:
	jmp *-8(%r13)
	.size sat_s7YP_entry, .-sat_s7YP_entry


==================== Asm code ====================
2018-03-16 15:54:44.895390804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7YP_info:
	.quad	sat_s7YP_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.896224801 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_entry
.type GHC.Base.liftM5_entry, @object
GHC.Base.liftM5_entry:
_cdLB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdLC
_cdLD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdLF
_cdLE:
	movq $sat_s7YP_info,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rdi,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.>>=_entry
_cdLF:
	movq $56,904(%r13)
_cdLC:
	movl $GHC.Base.liftM5_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.liftM5_entry, .-GHC.Base.liftM5_entry


==================== Asm code ====================
2018-03-16 15:54:44.896988035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_info
.type GHC.Base.liftM5_info, @object
GHC.Base.liftM5_info:
	.quad	GHC.Base.liftM5_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.liftM5_slow


==================== Asm code ====================
2018-03-16 15:54:44.9013733 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM8_closure
.type GHC.Base.liftM8_closure, @object
GHC.Base.liftM8_closure:
	.quad	GHC.Base.liftM8_info


==================== Asm code ====================
2018-03-16 15:54:44.902132835 UTC

.section .text
.align 8
.globl GHC.Base.liftM8_entry
.type GHC.Base.liftM8_entry, @object
GHC.Base.liftM8_entry:
_cdMs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdMt
_cdMu:
	movq $block_cdMj_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp stg_ap_v_fast
_cdMt:
	movl $GHC.Base.liftM8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM8_entry, .-GHC.Base.liftM8_entry


==================== Asm code ====================
2018-03-16 15:54:44.902788807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM8_info
.type GHC.Base.liftM8_info, @object
GHC.Base.liftM8_info:
	.quad	GHC.Base.liftM8_entry
	.quad	0
	.quad	14
	.quad	25769803801


==================== Asm code ====================
2018-03-16 15:54:44.903460203 UTC

.section .text
.align 8
_cdMj:
_cdMj:
	movq $block_cdMl_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
	.size _cdMj, .-_cdMj


==================== Asm code ====================
2018-03-16 15:54:44.904045323 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdMj_info:
	.quad	_cdMj
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.904655112 UTC

.section .text
.align 8
_cdMl:
_cdMl:
	movq $block_cdMn_info,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp stg_ap_v_fast
	.size _cdMl, .-_cdMl


==================== Asm code ====================
2018-03-16 15:54:44.905221831 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdMl_info:
	.quad	_cdMl
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.905950708 UTC

.section .text
.align 8
_cdMn:
_cdMn:
	movq $block_cdMp_info,(%rbp)
	movq %rbx,%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	jmp stg_ap_v_fast
	.size _cdMn, .-_cdMn


==================== Asm code ====================
2018-03-16 15:54:44.906544019 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdMn_info:
	.quad	_cdMn
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.907321145 UTC

.section .text
.align 8
_cdMp:
_cdMp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdMA
_cdMz:
	movq $stg_ap_5_upd_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdMA:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdMp, .-_cdMp


==================== Asm code ====================
2018-03-16 15:54:44.908390439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdMp_info:
	.quad	_cdMp
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.91071788 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM1_closure
.type GHC.Base.liftM4_$sliftM1_closure, @object
GHC.Base.liftM4_$sliftM1_closure:
	.quad	GHC.Base.liftM4_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.911320591 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_$sliftM1_entry
.type GHC.Base.liftM4_$sliftM1_entry, @object
GHC.Base.liftM4_$sliftM1_entry:
_cdN1:
	jmp GHC.Base.liftM8_entry
	.size GHC.Base.liftM4_$sliftM1_entry, .-GHC.Base.liftM4_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.911896106 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM1_info
.type GHC.Base.liftM4_$sliftM1_info, @object
GHC.Base.liftM4_$sliftM1_info:
	.quad	GHC.Base.liftM4_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	25769803801


==================== Asm code ====================
2018-03-16 15:54:44.919165155 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_closure
.type GHC.Base.liftM4_closure, @object
GHC.Base.liftM4_closure:
	.quad	GHC.Base.liftM4_info


==================== Asm code ====================
2018-03-16 15:54:44.920088648 UTC

.section .text
.align 8
sat_s7Zk_entry:
_cdNx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdNy
_cdNz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cdNB
_cdNA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $stg_ap_5_upd_info,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -48(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdNB:
	movq $56,904(%r13)
_cdNy:
	jmp *-8(%r13)
	.size sat_s7Zk_entry, .-sat_s7Zk_entry


==================== Asm code ====================
2018-03-16 15:54:44.920807782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zk_info:
	.quad	sat_s7Zk_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.921713352 UTC

.section .text
.align 8
sat_s7Zl_entry:
_cdNC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdND
_cdNE:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdNG
_cdNF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_s7Zk_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdNG:
	movq $48,904(%r13)
_cdND:
	jmp *-8(%r13)
	.size sat_s7Zl_entry, .-sat_s7Zl_entry


==================== Asm code ====================
2018-03-16 15:54:44.922831981 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zl_info:
	.quad	sat_s7Zl_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.923649445 UTC

.section .text
.align 8
sat_s7Zm_entry:
_cdNH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdNI
_cdNJ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdNL
_cdNK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_s7Zl_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdNL:
	movq $48,904(%r13)
_cdNI:
	jmp *-8(%r13)
	.size sat_s7Zm_entry, .-sat_s7Zm_entry


==================== Asm code ====================
2018-03-16 15:54:44.924344081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zm_info:
	.quad	sat_s7Zm_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.925159411 UTC

.section .text
.align 8
sat_s7Zn_entry:
_cdNM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdNN
_cdNO:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdNQ
_cdNP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_s7Zm_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdNQ:
	movq $48,904(%r13)
_cdNN:
	jmp *-8(%r13)
	.size sat_s7Zn_entry, .-sat_s7Zn_entry


==================== Asm code ====================
2018-03-16 15:54:44.925929719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zn_info:
	.quad	sat_s7Zn_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.926733377 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_entry
.type GHC.Base.liftM4_entry, @object
GHC.Base.liftM4_entry:
_cdNR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdNS
_cdNT:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdNV
_cdNU:
	movq $sat_s7Zn_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq $stg_ap_pp_info,-16(%rbp)
	movq %rdi,-8(%rbp)
	leaq -39(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.>>=_entry
_cdNV:
	movq $48,904(%r13)
_cdNS:
	movl $GHC.Base.liftM4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM4_entry, .-GHC.Base.liftM4_entry


==================== Asm code ====================
2018-03-16 15:54:44.927445908 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_info
.type GHC.Base.liftM4_info, @object
GHC.Base.liftM4_info:
	.quad	GHC.Base.liftM4_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:44.929700662 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM1_closure
.type GHC.Base.liftM3_$sliftM1_closure, @object
GHC.Base.liftM3_$sliftM1_closure:
	.quad	GHC.Base.liftM3_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.93035605 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_$sliftM1_entry
.type GHC.Base.liftM3_$sliftM1_entry, @object
GHC.Base.liftM3_$sliftM1_entry:
_cdOr:
	jmp GHC.Base.liftA1_entry
	.size GHC.Base.liftM3_$sliftM1_entry, .-GHC.Base.liftM3_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.930909663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM1_info
.type GHC.Base.liftM3_$sliftM1_info, @object
GHC.Base.liftM3_$sliftM1_info:
	.quad	GHC.Base.liftM3_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:44.937104769 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_closure
.type GHC.Base.liftM3_closure, @object
GHC.Base.liftM3_closure:
	.quad	GHC.Base.liftM3_info


==================== Asm code ====================
2018-03-16 15:54:44.938062804 UTC

.section .text
.align 8
sat_s7Zx_entry:
_cdOS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdOT
_cdOU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cdOW
_cdOV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $stg_ap_4_upd_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdOW:
	movq $48,904(%r13)
_cdOT:
	jmp *-8(%r13)
	.size sat_s7Zx_entry, .-sat_s7Zx_entry


==================== Asm code ====================
2018-03-16 15:54:44.938732324 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zx_info:
	.quad	sat_s7Zx_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.93952171 UTC

.section .text
.align 8
sat_s7Zy_entry:
_cdOX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdOY
_cdOZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdP1
_cdP0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_s7Zx_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdP1:
	movq $40,904(%r13)
_cdOY:
	jmp *-8(%r13)
	.size sat_s7Zy_entry, .-sat_s7Zy_entry


==================== Asm code ====================
2018-03-16 15:54:44.940209739 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zy_info:
	.quad	sat_s7Zy_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.941010941 UTC

.section .text
.align 8
sat_s7Zz_entry:
_cdP2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdP3
_cdP4:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdP6
_cdP5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_s7Zy_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdP6:
	movq $40,904(%r13)
_cdP3:
	jmp *-8(%r13)
	.size sat_s7Zz_entry, .-sat_s7Zz_entry


==================== Asm code ====================
2018-03-16 15:54:44.942086503 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7Zz_info:
	.quad	sat_s7Zz_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.942892178 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_entry
.type GHC.Base.liftM3_entry, @object
GHC.Base.liftM3_entry:
_cdP7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdP8
_cdP9:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdPb
_cdPa:
	movq $sat_s7Zz_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdPb:
	movq $40,904(%r13)
_cdP8:
	movl $GHC.Base.liftM3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM3_entry, .-GHC.Base.liftM3_entry


==================== Asm code ====================
2018-03-16 15:54:44.943584205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_info
.type GHC.Base.liftM3_info, @object
GHC.Base.liftM3_info:
	.quad	GHC.Base.liftM3_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:44.945862286 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM1_closure
.type GHC.Base.liftM_$sliftM1_closure, @object
GHC.Base.liftM_$sliftM1_closure:
	.quad	GHC.Base.liftM_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:44.946501872 UTC

.section .text
.align 8
.globl GHC.Base.liftM_$sliftM1_entry
.type GHC.Base.liftM_$sliftM1_entry, @object
GHC.Base.liftM_$sliftM1_entry:
_cdPB:
	jmp GHC.Base.$fFunctorIO2_entry
	.size GHC.Base.liftM_$sliftM1_entry, .-GHC.Base.liftM_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:44.947011176 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM1_info
.type GHC.Base.liftM_$sliftM1_info, @object
GHC.Base.liftM_$sliftM1_info:
	.quad	GHC.Base.liftM_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:44.950556815 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_closure
.type GHC.Base.liftM_closure, @object
GHC.Base.liftM_closure:
	.quad	GHC.Base.liftM_info


==================== Asm code ====================
2018-03-16 15:54:44.951427877 UTC

.section .text
.align 8
sat_s7ZF_entry:
_cdPS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdPT
_cdPU:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdPW
_cdPV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cdPW:
	movq $32,904(%r13)
_cdPT:
	jmp *-8(%r13)
	.size sat_s7ZF_entry, .-sat_s7ZF_entry


==================== Asm code ====================
2018-03-16 15:54:44.952504631 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s7ZF_info:
	.quad	sat_s7ZF_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:44.953413202 UTC

.section .text
.align 8
.globl GHC.Base.liftM_entry
.type GHC.Base.liftM_entry, @object
GHC.Base.liftM_entry:
_cdPX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdPY
_cdPZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdQ1
_cdQ0:
	movq $sat_s7ZF_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cdQ1:
	movq $24,904(%r13)
_cdPY:
	movl $GHC.Base.liftM_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftM_entry, .-GHC.Base.liftM_entry


==================== Asm code ====================
2018-03-16 15:54:44.954086723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_info
.type GHC.Base.liftM_info, @object
GHC.Base.liftM_info:
	.quad	GHC.Base.liftM_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.956819605 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$!_closure
.type GHC.Base.$!_closure, @object
GHC.Base.$!_closure:
	.quad	GHC.Base.$!_info


==================== Asm code ====================
2018-03-16 15:54:44.957624325 UTC

.section .text
.align 8
.globl GHC.Base.$!_entry
.type GHC.Base.$!_entry, @object
GHC.Base.$!_entry:
_cdQj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdQk
_cdQl:
	movq $block_cdQh_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_0_fast
_cdQk:
	movl $GHC.Base.$!_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$!_entry, .-GHC.Base.$!_entry


==================== Asm code ====================
2018-03-16 15:54:44.958211267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$!_info
.type GHC.Base.$!_info, @object
GHC.Base.$!_info:
	.quad	GHC.Base.$!_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.958852089 UTC

.section .text
.align 8
_cdQh:
_cdQh:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _cdQh, .-_cdQh


==================== Asm code ====================
2018-03-16 15:54:44.959383594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdQh_info:
	.quad	_cdQh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.961561601 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$_closure
.type GHC.Base.$_closure, @object
GHC.Base.$_closure:
	.quad	GHC.Base.$_info


==================== Asm code ====================
2018-03-16 15:54:44.962182107 UTC

.section .text
.align 8
.globl GHC.Base.$_entry
.type GHC.Base.$_entry, @object
GHC.Base.$_entry:
_cdQz:
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
	.size GHC.Base.$_entry, .-GHC.Base.$_entry


==================== Asm code ====================
2018-03-16 15:54:44.962790298 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$_info
.type GHC.Base.$_info, @object
GHC.Base.$_info:
	.quad	GHC.Base.$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:44.964942117 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.flip_closure
.type GHC.Base.flip_closure, @object
GHC.Base.flip_closure:
	.quad	GHC.Base.flip_info


==================== Asm code ====================
2018-03-16 15:54:44.965630926 UTC

.section .text
.align 8
.globl GHC.Base.flip_entry
.type GHC.Base.flip_entry, @object
GHC.Base.flip_entry:
_cdQK:
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
	.size GHC.Base.flip_entry, .-GHC.Base.flip_entry


==================== Asm code ====================
2018-03-16 15:54:44.966606323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.flip_info
.type GHC.Base.flip_info, @object
GHC.Base.flip_info:
	.quad	GHC.Base.flip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.968639349 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>_closure
.type GHC.Base.$fMonad(->)_$c>>_closure, @object
GHC.Base.$fMonad(->)_$c>>_closure:
	.quad	GHC.Base.$fMonad(->)_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:44.969328039 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(->)_$c>>_entry
.type GHC.Base.$fMonad(->)_$c>>_entry, @object
GHC.Base.$fMonad(->)_$c>>_entry:
_cdQV:
	movq %rdi,%r14
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.Base.$fMonad(->)_$c>>_entry, .-GHC.Base.$fMonad(->)_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:44.969896012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>_info
.type GHC.Base.$fMonad(->)_$c>>_info, @object
GHC.Base.$fMonad(->)_$c>>_info:
	.quad	GHC.Base.$fMonad(->)_$c>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.971928458 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*_closure
.type GHC.Base.$fApplicative(->)_$c<*_closure, @object
GHC.Base.$fApplicative(->)_$c<*_closure:
	.quad	GHC.Base.$fApplicative(->)_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:44.972561462 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c<*_entry
.type GHC.Base.$fApplicative(->)_$c<*_entry, @object
GHC.Base.$fApplicative(->)_$c<*_entry:
_cdR6:
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
	.size GHC.Base.$fApplicative(->)_$c<*_entry, .-GHC.Base.$fApplicative(->)_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:44.97314399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*_info
.type GHC.Base.$fApplicative(->)_$c<*_info, @object
GHC.Base.$fApplicative(->)_$c<*_info:
	.quad	GHC.Base.$fApplicative(->)_$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.978231857 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>_closure
.type GHC.Base.$fMonad(,)_$c>>_closure, @object
GHC.Base.$fMonad(,)_$c>>_closure:
	.quad	GHC.Base.$fMonad(,)_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:44.979051404 UTC

.section .text
.align 8
sat_s804_entry:
_cdRx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdRy
_cdRz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdRv_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdRy:
	jmp *-16(%r13)
	.size sat_s804_entry, .-sat_s804_entry


==================== Asm code ====================
2018-03-16 15:54:44.97969935 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s804_info:
	.quad	sat_s804_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:44.980307185 UTC

.section .text
.align 8
_cdRv:
_cdRv:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdRv, .-_cdRv


==================== Asm code ====================
2018-03-16 15:54:44.980890883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdRv_info:
	.quad	_cdRv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.982275852 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_$c>>_entry
.type GHC.Base.$fMonad(,)_$c>>_entry, @object
GHC.Base.$fMonad(,)_$c>>_entry:
_cdRD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdRF
_cdRG:
	movq $block_cdRh_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cdRh
_cdRi:
	movq (%rbx),%rax
	jmp *(%rax)
_cdRF:
	movl $GHC.Base.$fMonad(,)_$c>>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_$c>>_entry, .-GHC.Base.$fMonad(,)_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:44.982947391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>_info
.type GHC.Base.$fMonad(,)_$c>>_info, @object
GHC.Base.$fMonad(,)_$c>>_info:
	.quad	GHC.Base.$fMonad(,)_$c>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.983649399 UTC

.section .text
.align 8
_cdRh:
_cdRh:
	movq $block_cdRm_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cdRm
_cdRn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdRh, .-_cdRh


==================== Asm code ====================
2018-03-16 15:54:44.984212648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdRh_info:
	.quad	_cdRh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.98493146 UTC

.section .text
.align 8
_cdRm:
_cdRm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdRK
_cdRJ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s804_info,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdRK:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdRm, .-_cdRm


==================== Asm code ====================
2018-03-16 15:54:44.985603333 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdRm_info:
	.quad	_cdRm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.990379277 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*_closure
.type GHC.Base.$fApplicative(,)_$c<*_closure, @object
GHC.Base.$fApplicative(,)_$c<*_closure:
	.quad	GHC.Base.$fApplicative(,)_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:44.991182232 UTC

.section .text
.align 8
sat_s80f_entry:
_cdSx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdSy
_cdSz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdSv_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdSy:
	jmp *-16(%r13)
	.size sat_s80f_entry, .-sat_s80f_entry


==================== Asm code ====================
2018-03-16 15:54:44.991774437 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s80f_info:
	.quad	sat_s80f_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:44.992371651 UTC

.section .text
.align 8
_cdSv:
_cdSv:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdSv, .-_cdSv


==================== Asm code ====================
2018-03-16 15:54:44.992879467 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdSv_info:
	.quad	_cdSv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.993654634 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c<*_entry
.type GHC.Base.$fApplicative(,)_$c<*_entry, @object
GHC.Base.$fApplicative(,)_$c<*_entry:
_cdSD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdSF
_cdSG:
	movq $block_cdSh_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cdSh
_cdSi:
	movq (%rbx),%rax
	jmp *(%rax)
_cdSF:
	movl $GHC.Base.$fApplicative(,)_$c<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c<*_entry, .-GHC.Base.$fApplicative(,)_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:44.994313279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*_info
.type GHC.Base.$fApplicative(,)_$c<*_info, @object
GHC.Base.$fApplicative(,)_$c<*_info:
	.quad	GHC.Base.$fApplicative(,)_$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:44.995002062 UTC

.section .text
.align 8
_cdSh:
_cdSh:
	movq $block_cdSm_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdSm
_cdSn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdSh, .-_cdSh


==================== Asm code ====================
2018-03-16 15:54:44.995631582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdSh_info:
	.quad	_cdSh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:44.996722721 UTC

.section .text
.align 8
_cdSm:
_cdSm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdSK
_cdSJ:
	movq 7(%rbx),%rax
	movq $sat_s80f_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdSK:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdSm, .-_cdSm


==================== Asm code ====================
2018-03-16 15:54:44.997867015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdSm_info:
	.quad	_cdSm
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.001015868 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$c<$_closure
.type GHC.Base.$fFunctor(,)_$c<$_closure, @object
GHC.Base.$fFunctor(,)_$c<$_closure:
	.quad	GHC.Base.$fFunctor(,)_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:45.001808933 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(,)_$c<$_entry
.type GHC.Base.$fFunctor(,)_$c<$_entry, @object
GHC.Base.$fFunctor(,)_$c<$_entry:
_cdTl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdTp
_cdTq:
	movq $block_cdTi_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdTi
_cdTj:
	movq (%rbx),%rax
	jmp *(%rax)
_cdTp:
	movl $GHC.Base.$fFunctor(,)_$c<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor(,)_$c<$_entry, .-GHC.Base.$fFunctor(,)_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.002480923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$c<$_info
.type GHC.Base.$fFunctor(,)_$c<$_info, @object
GHC.Base.$fFunctor(,)_$c<$_info:
	.quad	GHC.Base.$fFunctor(,)_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.003167117 UTC

.section .text
.align 8
_cdTi:
_cdTi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdTt
_cdTs:
	movq 7(%rbx),%rax
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdTt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdTi, .-_cdTi


==================== Asm code ====================
2018-03-16 15:54:45.003803422 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdTi_info:
	.quad	_cdTi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.007126891 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_$c<$_closure
.type GHC.Base.$fFunctorMaybe_$c<$_closure, @object
GHC.Base.$fFunctorMaybe_$c<$_closure:
	.quad	GHC.Base.$fFunctorMaybe_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:45.007884804 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorMaybe_$c<$_entry
.type GHC.Base.$fFunctorMaybe_$c<$_entry, @object
GHC.Base.$fFunctorMaybe_$c<$_entry:
_cdTR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdTS
_cdTT:
	movq $block_cdTK_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdTK
_cdTL:
	movq (%rbx),%rax
	jmp *(%rax)
_cdTS:
	movl $GHC.Base.$fFunctorMaybe_$c<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorMaybe_$c<$_entry, .-GHC.Base.$fFunctorMaybe_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.008502471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_$c<$_info
.type GHC.Base.$fFunctorMaybe_$c<$_info, @object
GHC.Base.$fFunctorMaybe_$c<$_info:
	.quad	GHC.Base.$fFunctorMaybe_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.009282578 UTC

.section .text
.align 8
_cdTK:
_cdTK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cdTO
_cdTP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdU2
_cdU1:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdU2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cdTO:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdTK, .-_cdTK


==================== Asm code ====================
2018-03-16 15:54:45.009949606 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdTK_info:
	.quad	_cdTK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.013219194 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<$_closure
.type GHC.Base.$dm<$_closure, @object
GHC.Base.$dm<$_closure:
	.quad	GHC.Base.$dm<$_info


==================== Asm code ====================
2018-03-16 15:54:45.013831362 UTC

.section .text
.align 8
sat_s80s_entry:
_cdUr:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s80s_entry, .-sat_s80s_entry


==================== Asm code ====================
2018-03-16 15:54:45.014356653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s80s_info:
	.quad	sat_s80s_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.015106058 UTC

.section .text
.align 8
.globl GHC.Base.$dm<$_entry
.type GHC.Base.$dm<$_entry, @object
GHC.Base.$dm<$_entry:
_cdUu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdUv
_cdUw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdUy
_cdUx:
	movq $sat_s80s_info,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.fmap_entry
_cdUy:
	movq $16,904(%r13)
_cdUv:
	movl $GHC.Base.$dm<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dm<$_entry, .-GHC.Base.$dm<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.015708652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<$_info
.type GHC.Base.$dm<$_info, @object
GHC.Base.$dm<$_info:
	.quad	GHC.Base.$dm<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.019009451 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmappend_closure
.type GHC.Base.$fMonoid(->)_$cmappend_closure, @object
GHC.Base.$fMonoid(->)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(->)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:45.019874886 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cmappend_entry
.type GHC.Base.$fMonoid(->)_$cmappend_entry, @object
GHC.Base.$fMonoid(->)_$cmappend_entry:
_cdUQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdUR
_cdUS:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cdUU
_cdUT:
	movq $stg_ap_2_upd_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	movq $block_cdUO_info,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdUU:
	movq $64,904(%r13)
_cdUR:
	movl $GHC.Base.$fMonoid(->)_$cmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cmappend_entry, .-GHC.Base.$fMonoid(->)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:45.020574251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmappend_info
.type GHC.Base.$fMonoid(->)_$cmappend_info, @object
GHC.Base.$fMonoid(->)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(->)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:45.02121616 UTC

.section .text
.align 8
_cdUO:
_cdUO:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdUO, .-_cdUO


==================== Asm code ====================
2018-03-16 15:54:45.021777522 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdUO_info:
	.quad	_cdUO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.027888824 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmappend_closure
.type GHC.Base.$fMonoid(,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:45.028653931 UTC

.section .text
.align 8
sat_s80N_entry:
_cdVt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVu
_cdVv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdVr_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdVu:
	jmp *-16(%r13)
	.size sat_s80N_entry, .-sat_s80N_entry


==================== Asm code ====================
2018-03-16 15:54:45.029618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s80N_info:
	.quad	sat_s80N_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.030175293 UTC

.section .text
.align 8
_cdVr:
_cdVr:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdVr, .-_cdVr


==================== Asm code ====================
2018-03-16 15:54:45.030711768 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVr_info:
	.quad	_cdVr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.031391309 UTC

.section .text
.align 8
sat_s80L_entry:
_cdVF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVG
_cdVH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cdVD_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cdVG:
	jmp *-16(%r13)
	.size sat_s80L_entry, .-sat_s80L_entry


==================== Asm code ====================
2018-03-16 15:54:45.032020701 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s80L_info:
	.quad	sat_s80L_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.032612486 UTC

.section .text
.align 8
_cdVD:
_cdVD:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cdVD, .-_cdVD


==================== Asm code ====================
2018-03-16 15:54:45.033159031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVD_info:
	.quad	_cdVD
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.033944905 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmappend_entry
.type GHC.Base.$fMonoid(,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,)_$cmappend_entry:
_cdVL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVN
_cdVO:
	movq $block_cdVd_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cdVd
_cdVe:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVN:
	movl $GHC.Base.$fMonoid(,)_$cmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmappend_entry, .-GHC.Base.$fMonoid(,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:45.034601217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmappend_info
.type GHC.Base.$fMonoid(,)_$cmappend_info, @object
GHC.Base.$fMonoid(,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:45.035285352 UTC

.section .text
.align 8
_cdVd:
_cdVd:
	movq $block_cdVi_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVi
_cdVj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVd, .-_cdVd


==================== Asm code ====================
2018-03-16 15:54:45.035859802 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVd_info:
	.quad	_cdVd
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.036568342 UTC

.section .text
.align 8
_cdVi:
_cdVi:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cdVS
_cdVR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s80N_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s80L_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVS:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVi, .-_cdVi


==================== Asm code ====================
2018-03-16 15:54:45.037284707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVi_info:
	.quad	_cdVi
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.041974893 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_go_closure
.type GHC.Base.$fSemigroupOrdering_go_closure, @object
GHC.Base.$fSemigroupOrdering_go_closure:
	.quad	GHC.Base.$fSemigroupOrdering_go_info


==================== Asm code ====================
2018-03-16 15:54:45.043144353 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_go_entry
.type GHC.Base.$fSemigroupOrdering_go_entry, @object
GHC.Base.$fSemigroupOrdering_go_entry:
_cdWI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdWJ
_udX9:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cdWy
_cdWJ:
	movl $GHC.Base.$fSemigroupOrdering_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupOrdering_go_entry, .-GHC.Base.$fSemigroupOrdering_go_entry


==================== Asm code ====================
2018-03-16 15:54:45.043736254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_go_info
.type GHC.Base.$fSemigroupOrdering_go_info, @object
GHC.Base.$fSemigroupOrdering_go_info:
	.quad	GHC.Base.$fSemigroupOrdering_go_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.044391126 UTC

.section .text
.align 8
_cdWy:
_cdWy:
	movq $block_cdWB_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdWB
_cdWC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdWy, .-_cdWy


==================== Asm code ====================
2018-03-16 15:54:45.045159356 UTC

.section .text
.align 8
_cdWB:
_cdWB:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cdWF
_cdWG:
	movq $block_cdWQ_info,(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,8(%rbp)
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cdWQ
_cdWS:
	movq (%rbx),%rax
	jmp *(%rax)
_cdWF:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdWB, .-_cdWB


==================== Asm code ====================
2018-03-16 15:54:45.045850605 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdWB_info:
	.quad	_cdWB
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.046569369 UTC

.section .text
.align 8
_cdWQ:
_cdWQ:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _udX8
_cdX6:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_udX8:
	cmpq $2,%rbx
	jb _cdWY
_cdX2:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _cdWy
_cdWY:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdWQ, .-_cdWQ


==================== Asm code ====================
2018-03-16 15:54:45.047224239 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdWQ_info:
	.quad	_cdWQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.05002563 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$csconcat_closure
.type GHC.Base.$fSemigroupOrdering_$csconcat_closure, @object
GHC.Base.$fSemigroupOrdering_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.050773184 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_$csconcat_entry
.type GHC.Base.$fSemigroupOrdering_$csconcat_entry, @object
GHC.Base.$fSemigroupOrdering_$csconcat_entry:
_cdXJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdXK
_cdXL:
	movq $block_cdXG_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdXG
_cdXH:
	movq (%rbx),%rax
	jmp *(%rax)
_cdXK:
	movl $GHC.Base.$fSemigroupOrdering_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupOrdering_$csconcat_entry, .-GHC.Base.$fSemigroupOrdering_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.0513775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$csconcat_info
.type GHC.Base.$fSemigroupOrdering_$csconcat_info, @object
GHC.Base.$fSemigroupOrdering_$csconcat_info:
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.051920257 UTC

.section .text
.align 8
_cdXG:
_cdXG:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroupOrdering_go_entry
	.size _cdXG, .-_cdXG


==================== Asm code ====================
2018-03-16 15:54:45.052471116 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdXG_info:
	.quad	_cdXG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.055085494 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.._closure
.type GHC.Base.._closure, @object
GHC.Base.._closure:
	.quad	GHC.Base.._info


==================== Asm code ====================
2018-03-16 15:54:45.055821787 UTC

.section .text
.align 8
.globl GHC.Base.._entry
.type GHC.Base.._entry, @object
GHC.Base.._entry:
_cdY4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdY8
_cdY7:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_cdY8:
	movq $32,904(%r13)
	movl $GHC.Base.._closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.._entry, .-GHC.Base.._entry


==================== Asm code ====================
2018-03-16 15:54:45.05648417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.._info
.type GHC.Base.._info, @object
GHC.Base.._info:
	.quad	GHC.Base.._entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.059393963 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mapFB_closure
.type GHC.Base.mapFB_closure, @object
GHC.Base.mapFB_closure:
	.quad	GHC.Base.mapFB_info


==================== Asm code ====================
2018-03-16 15:54:45.060125259 UTC

.section .text
.align 8
.globl GHC.Base.mapFB_entry
.type GHC.Base.mapFB_entry, @object
GHC.Base.mapFB_entry:
_cdYi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdYm
_cdYl:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r8,%rsi
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cdYm:
	movq $32,904(%r13)
	movl $GHC.Base.mapFB_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mapFB_entry, .-GHC.Base.mapFB_entry


==================== Asm code ====================
2018-03-16 15:54:45.060778117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mapFB_info
.type GHC.Base.mapFB_info, @object
GHC.Base.mapFB_info:
	.quad	GHC.Base.mapFB_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:45.062776482 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_$c<$_closure
.type GHC.Base.$fFunctor(->)_$c<$_closure, @object
GHC.Base.$fFunctor(->)_$c<$_closure:
	.quad	GHC.Base.$fFunctor(->)_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:45.063337433 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(->)_$c<$_entry
.type GHC.Base.$fFunctor(->)_$c<$_entry, @object
GHC.Base.$fFunctor(->)_$c<$_entry:
_cdYv:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.$fFunctor(->)_$c<$_entry, .-GHC.Base.$fFunctor(->)_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.063881888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_$c<$_info
.type GHC.Base.$fFunctor(->)_$c<$_info, @object
GHC.Base.$fFunctor(->)_$c<$_info:
	.quad	GHC.Base.$fFunctor(->)_$c<$_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.065518576 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_closure
.type GHC.Base.$fFunctor(->)_closure, @object
GHC.Base.$fFunctor(->)_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.._closure+3
	.quad	GHC.Base.$fFunctor(->)_$c<$_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.067482489 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.const_closure
.type GHC.Base.const_closure, @object
GHC.Base.const_closure:
	.quad	GHC.Base.const_info


==================== Asm code ====================
2018-03-16 15:54:45.068099676 UTC

.section .text
.align 8
.globl GHC.Base.const_entry
.type GHC.Base.const_entry, @object
GHC.Base.const_entry:
_cdYH:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.const_entry, .-GHC.Base.const_entry


==================== Asm code ====================
2018-03-16 15:54:45.068607573 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.const_info
.type GHC.Base.const_info, @object
GHC.Base.const_info:
	.quad	GHC.Base.const_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.070670245 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.asTypeOf_closure
.type GHC.Base.asTypeOf_closure, @object
GHC.Base.asTypeOf_closure:
	.quad	GHC.Base.asTypeOf_info


==================== Asm code ====================
2018-03-16 15:54:45.071316457 UTC

.section .text
.align 8
.globl GHC.Base.asTypeOf_entry
.type GHC.Base.asTypeOf_entry, @object
GHC.Base.asTypeOf_entry:
_cdYS:
	jmp GHC.Base.const_entry
	.size GHC.Base.asTypeOf_entry, .-GHC.Base.asTypeOf_entry


==================== Asm code ====================
2018-03-16 15:54:45.072236205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.asTypeOf_info
.type GHC.Base.asTypeOf_info, @object
GHC.Base.asTypeOf_info:
	.quad	GHC.Base.asTypeOf_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.074531229 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<*_closure
.type GHC.Base.$dm<*_closure, @object
GHC.Base.$dm<*_closure:
	.quad	GHC.Base.$dm<*_info


==================== Asm code ====================
2018-03-16 15:54:45.075256645 UTC

.section .text
.align 8
.globl GHC.Base.$dm<*_entry
.type GHC.Base.$dm<*_entry, @object
GHC.Base.$dm<*_entry:
_cdZ3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdZ4
_cdZ5:
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Base.const_closure+2,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_cdZ4:
	movl $GHC.Base.$dm<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dm<*_entry, .-GHC.Base.$dm<*_entry


==================== Asm code ====================
2018-03-16 15:54:45.075895317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<*_info
.type GHC.Base.$dm<*_info, @object
GHC.Base.$dm<*_info:
	.quad	GHC.Base.$dm<*_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.078756494 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO1_closure
.type GHC.Base.$fApplicativeIO1_closure, @object
GHC.Base.$fApplicativeIO1_closure:
	.quad	GHC.Base.$fApplicativeIO1_info


==================== Asm code ====================
2018-03-16 15:54:45.079484239 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO1_entry
.type GHC.Base.$fApplicativeIO1_entry, @object
GHC.Base.$fApplicativeIO1_entry:
_cdZj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdZk
_cdZl:
	movq $block_cdZf_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_cdZk:
	movl $GHC.Base.$fApplicativeIO1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO1_entry, .-GHC.Base.$fApplicativeIO1_entry


==================== Asm code ====================
2018-03-16 15:54:45.080138846 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO1_info
.type GHC.Base.$fApplicativeIO1_info, @object
GHC.Base.$fApplicativeIO1_info:
	.quad	GHC.Base.$fApplicativeIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:45.080774079 UTC

.section .text
.align 8
_cdZf:
_cdZf:
	movq $block_cdZh_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_v_fast
	.size _cdZf, .-_cdZf


==================== Asm code ====================
2018-03-16 15:54:45.081348276 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdZf_info:
	.quad	_cdZf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.081973963 UTC

.section .text
.align 8
_cdZh:
_cdZh:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdZh, .-_cdZh


==================== Asm code ====================
2018-03-16 15:54:45.082543341 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdZh_info:
	.quad	_cdZh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.084303597 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_closure
.type GHC.Base.$fApplicativeIO_closure, @object
GHC.Base.$fApplicativeIO_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorIO_closure+1
	.quad	GHC.Base.$fApplicativeIO4_closure+2
	.quad	GHC.Base.$fApplicativeIO3_closure+3
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_closure+4
	.quad	GHC.Base.$fApplicativeIO2_closure+3
	.quad	GHC.Base.$fApplicativeIO1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.086871213 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.breakpointCond_closure
.type GHC.Base.breakpointCond_closure, @object
GHC.Base.breakpointCond_closure:
	.quad	GHC.Base.breakpointCond_info


==================== Asm code ====================
2018-03-16 15:54:45.087491353 UTC

.section .text
.align 8
.globl GHC.Base.breakpointCond_entry
.type GHC.Base.breakpointCond_entry, @object
GHC.Base.breakpointCond_entry:
_cdZF:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.breakpointCond_entry, .-GHC.Base.breakpointCond_entry


==================== Asm code ====================
2018-03-16 15:54:45.088073546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.breakpointCond_info
.type GHC.Base.breakpointCond_info, @object
GHC.Base.breakpointCond_info:
	.quad	GHC.Base.breakpointCond_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.090070605 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.breakpoint_closure
.type GHC.Base.breakpoint_closure, @object
GHC.Base.breakpoint_closure:
	.quad	GHC.Base.breakpoint_info


==================== Asm code ====================
2018-03-16 15:54:45.090681277 UTC

.section .text
.align 8
.globl GHC.Base.breakpoint_entry
.type GHC.Base.breakpoint_entry, @object
GHC.Base.breakpoint_entry:
_cdZQ:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.breakpoint_entry, .-GHC.Base.breakpoint_entry


==================== Asm code ====================
2018-03-16 15:54:45.091247605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.breakpoint_info
.type GHC.Base.breakpoint_info, @object
GHC.Base.breakpoint_info:
	.quad	GHC.Base.breakpoint_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.09343936 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.assert_closure
.type GHC.Base.assert_closure, @object
GHC.Base.assert_closure:
	.quad	GHC.Base.assert_info


==================== Asm code ====================
2018-03-16 15:54:45.093990463 UTC

.section .text
.align 8
.globl GHC.Base.assert_entry
.type GHC.Base.assert_entry, @object
GHC.Base.assert_entry:
_ce01:
	jmp GHC.Base.breakpointCond_entry
	.size GHC.Base.assert_entry, .-GHC.Base.assert_entry


==================== Asm code ====================
2018-03-16 15:54:45.094575517 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.assert_info
.type GHC.Base.assert_info, @object
GHC.Base.assert_info:
	.quad	GHC.Base.assert_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.09651795 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.id_closure
.type GHC.Base.id_closure, @object
GHC.Base.id_closure:
	.quad	GHC.Base.id_info


==================== Asm code ====================
2018-03-16 15:54:45.097130803 UTC

.section .text
.align 8
.globl GHC.Base.id_entry
.type GHC.Base.id_entry, @object
GHC.Base.id_entry:
_ce0c:
	jmp GHC.Base.breakpoint_entry
	.size GHC.Base.id_entry, .-GHC.Base.id_entry


==================== Asm code ====================
2018-03-16 15:54:45.09772465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.id_info
.type GHC.Base.id_info, @object
GHC.Base.id_info:
	.quad	GHC.Base.id_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.100401659 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.join_closure
.type GHC.Base.join_closure, @object
GHC.Base.join_closure:
	.quad	GHC.Base.join_info


==================== Asm code ====================
2018-03-16 15:54:45.10112372 UTC

.section .text
.align 8
.globl GHC.Base.join_entry
.type GHC.Base.join_entry, @object
GHC.Base.join_entry:
_ce0n:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ce0o
_ce0p:
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq $GHC.Base.breakpoint_closure+1,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ce0o:
	movl $GHC.Base.join_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.join_entry, .-GHC.Base.join_entry


==================== Asm code ====================
2018-03-16 15:54:45.101736111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.join_info
.type GHC.Base.join_info, @object
GHC.Base.join_info:
	.quad	GHC.Base.join_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.103945932 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<*>_closure
.type GHC.Base.$dm<*>_closure, @object
GHC.Base.$dm<*>_closure:
	.quad	GHC.Base.$dm<*>_info


==================== Asm code ====================
2018-03-16 15:54:45.104660053 UTC

.section .text
.align 8
.globl GHC.Base.$dm<*>_entry
.type GHC.Base.$dm<*>_entry, @object
GHC.Base.$dm<*>_entry:
_ce0z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ce0A
_ce0B:
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Base.breakpoint_closure+1,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_ce0A:
	movl $GHC.Base.$dm<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dm<*>_entry, .-GHC.Base.$dm<*>_entry


==================== Asm code ====================
2018-03-16 15:54:45.106642806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<*>_info
.type GHC.Base.$dm<*>_info, @object
GHC.Base.$dm<*>_info:
	.quad	GHC.Base.$dm<*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.110264803 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm*>_closure
.type GHC.Base.$dm*>_closure, @object
GHC.Base.$dm*>_closure:
	.quad	GHC.Base.$dm*>_info


==================== Asm code ====================
2018-03-16 15:54:45.111040714 UTC

.section .text
.align 8
sat_s81w_entry:
_ce0R:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ce0S
_ce0T:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ce0P_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Applicative_entry
_ce0S:
	jmp *-16(%r13)
	.size sat_s81w_entry, .-sat_s81w_entry


==================== Asm code ====================
2018-03-16 15:54:45.111618641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s81w_info:
	.quad	sat_s81w_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.112225606 UTC

.section .text
.align 8
_ce0P:
_ce0P:
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq $GHC.Base.breakpoint_closure+1,(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.<$_entry
	.size _ce0P, .-_ce0P


==================== Asm code ====================
2018-03-16 15:54:45.112773291 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce0P_info:
	.quad	_ce0P
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.1135795 UTC

.section .text
.align 8
.globl GHC.Base.$dm*>_entry
.type GHC.Base.$dm*>_entry, @object
GHC.Base.$dm*>_entry:
_ce0X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ce0Y
_ce0Z:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ce11
_ce10:
	movq $sat_s81w_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_ce11:
	movq $32,904(%r13)
_ce0Y:
	movl $GHC.Base.$dm*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dm*>_entry, .-GHC.Base.$dm*>_entry


==================== Asm code ====================
2018-03-16 15:54:45.114254996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm*>_info
.type GHC.Base.$dm*>_info, @object
GHC.Base.$dm*>_info:
	.quad	GHC.Base.$dm*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.116737944 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c*>_closure
.type GHC.Base.$fApplicative(->)_$c*>_closure, @object
GHC.Base.$fApplicative(->)_$c*>_closure:
	.quad	GHC.Base.$fApplicative(->)_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:45.117402829 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c*>_entry
.type GHC.Base.$fApplicative(->)_$c*>_entry, @object
GHC.Base.$fApplicative(->)_$c*>_entry:
_ce1k:
	movq %rdi,%r14
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.Base.$fApplicative(->)_$c*>_entry, .-GHC.Base.$fApplicative(->)_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:45.117964452 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c*>_info
.type GHC.Base.$fApplicative(->)_$c*>_info, @object
GHC.Base.$fApplicative(->)_$c*>_info:
	.quad	GHC.Base.$fApplicative(->)_$c*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.119558215 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.maxInt_closure
.type GHC.Base.maxInt_closure, @object
GHC.Base.maxInt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:54:45.121153767 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.minInt_closure
.type GHC.Base.minInt_closure, @object
GHC.Base.minInt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:54:45.124482347 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ord_closure
.type GHC.Base.ord_closure, @object
GHC.Base.ord_closure:
	.quad	GHC.Base.ord_info


==================== Asm code ====================
2018-03-16 15:54:45.125357887 UTC

.section .text
.align 8
.globl GHC.Base.ord_entry
.type GHC.Base.ord_entry, @object
GHC.Base.ord_entry:
_ce1A:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ce1H
_ce1I:
	movq $block_ce1x_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ce1x
_ce1y:
	movq (%rbx),%rax
	jmp *(%rax)
_ce1H:
	movl $GHC.Base.ord_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.ord_entry, .-GHC.Base.ord_entry


==================== Asm code ====================
2018-03-16 15:54:45.126043387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ord_info
.type GHC.Base.ord_info, @object
GHC.Base.ord_info:
	.quad	GHC.Base.ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.1267294 UTC

.section .text
.align 8
_ce1x:
_ce1x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ce1L
_ce1K:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce1L:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ce1x, .-_ce1x


==================== Asm code ====================
2018-03-16 15:54:45.127323304 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce1x_info:
	.quad	_ce1x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.130704165 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unsafeChr_closure
.type GHC.Base.unsafeChr_closure, @object
GHC.Base.unsafeChr_closure:
	.quad	GHC.Base.unsafeChr_info


==================== Asm code ====================
2018-03-16 15:54:45.131474084 UTC

.section .text
.align 8
.globl GHC.Base.unsafeChr_entry
.type GHC.Base.unsafeChr_entry, @object
GHC.Base.unsafeChr_entry:
_ce24:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ce2b
_ce2c:
	movq $block_ce21_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ce21
_ce22:
	movq (%rbx),%rax
	jmp *(%rax)
_ce2b:
	movl $GHC.Base.unsafeChr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.unsafeChr_entry, .-GHC.Base.unsafeChr_entry


==================== Asm code ====================
2018-03-16 15:54:45.132111718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unsafeChr_info
.type GHC.Base.unsafeChr_info, @object
GHC.Base.unsafeChr_info:
	.quad	GHC.Base.unsafeChr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.132820236 UTC

.section .text
.align 8
_ce21:
_ce21:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ce2f
_ce2e:
	movq 7(%rbx),%rax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce2f:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ce21, .-_ce21


==================== Asm code ====================
2018-03-16 15:54:45.133442398 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce21_info:
	.quad	_ce21
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.135074945 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.otherwise_closure
.type GHC.Base.otherwise_closure, @object
GHC.Base.otherwise_closure:
	.quad	GHC.Types.True_con_info


==================== Asm code ====================
2018-03-16 15:54:45.138638094 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.until_closure
.type GHC.Base.until_closure, @object
GHC.Base.until_closure:
	.quad	GHC.Base.until_info


==================== Asm code ====================
2018-03-16 15:54:45.139390041 UTC

.section .text
.align 8
.globl GHC.Base.until_entry
.type GHC.Base.until_entry, @object
GHC.Base.until_entry:
_ce2y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ce2z
_ce2A:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _ce2C
_ce2z:
	movl $GHC.Base.until_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.until_entry, .-GHC.Base.until_entry


==================== Asm code ====================
2018-03-16 15:54:45.14006212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.until_info
.type GHC.Base.until_info, @object
GHC.Base.until_info:
	.quad	GHC.Base.until_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.140683785 UTC

.section .text
.align 8
_ce2C:
_ce2C:
	movq $block_ce2E_info,-8(%rbp)
	movq 16(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
	.size _ce2C, .-_ce2C


==================== Asm code ====================
2018-03-16 15:54:45.141517975 UTC

.section .text
.align 8
_ce2E:
_ce2E:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ce2I
_ce2R:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
_ce2N:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_ce2I:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ce2N
_ce2M:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _ce2C
	.size _ce2E, .-_ce2E


==================== Asm code ====================
2018-03-16 15:54:45.142159496 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce2E_info:
	.quad	_ce2E
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.146754511 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divModInt#_closure
.type GHC.Base.divModInt#_closure, @object
GHC.Base.divModInt#_closure:
	.quad	GHC.Base.divModInt#_info


==================== Asm code ====================
2018-03-16 15:54:45.147877839 UTC

.section .text
.align 8
.globl GHC.Base.divModInt#_entry
.type GHC.Base.divModInt#_entry, @object
GHC.Base.divModInt#_entry:
_ce3l:
	testq %r14,%r14
	jle _ce3j
_ce3k:
	testq %rsi,%rsi
	jge _ce42
_ce43:
	leaq -1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq 1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce42:
	testq %r14,%r14
	jge _ce3Q
_ce40:
	testq %rsi,%rsi
	jle _ce3Y
_ce3Z:
	leaq 1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq -1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce3Y:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce3Q:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce3j:
	testq %r14,%r14
	jge _ce3v
_ce3F:
	testq %rsi,%rsi
	jle _ce3D
_ce3E:
	leaq 1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq -1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce3D:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce3v:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.divModInt#_entry, .-GHC.Base.divModInt#_entry


==================== Asm code ====================
2018-03-16 15:54:45.148715348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divModInt#_info
.type GHC.Base.divModInt#_info, @object
GHC.Base.divModInt#_info:
	.quad	GHC.Base.divModInt#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.155677643 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divModInt_closure
.type GHC.Base.divModInt_closure, @object
GHC.Base.divModInt_closure:
	.quad	GHC.Base.divModInt_info


==================== Asm code ====================
2018-03-16 15:54:45.156523292 UTC

.section .text
.align 8
.globl GHC.Base.divModInt_entry
.type GHC.Base.divModInt_entry, @object
GHC.Base.divModInt_entry:
_ce4Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ce53
_ce54:
	movq $block_ce4W_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ce4W
_ce4X:
	movq (%rbx),%rax
	jmp *(%rax)
_ce53:
	movl $GHC.Base.divModInt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.divModInt_entry, .-GHC.Base.divModInt_entry


==================== Asm code ====================
2018-03-16 15:54:45.157171593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divModInt_info
.type GHC.Base.divModInt_info, @object
GHC.Base.divModInt_info:
	.quad	GHC.Base.divModInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.157939638 UTC

.section .text
.align 8
_ce4W:
_ce4W:
	movq $block_ce52_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _ce52
_ce56:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ce4W, .-_ce4W


==================== Asm code ====================
2018-03-16 15:54:45.15853027 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce4W_info:
	.quad	_ce4W
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.160330399 UTC

.section .text
.align 8
_ce52:
_ce52:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ce5c
_ce5b:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rax,%rax
	jle _ce5Q
_ce6N:
	testq %rbx,%rbx
	jge _ce6v
_ce6M:
	decq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce6v:
	testq %rax,%rax
	jge _ce62
_ce6t:
	testq %rbx,%rbx
	jle _ce6b
_ce6s:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce6b:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce62:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce5Q:
	testq %rax,%rax
	jge _ce5n
_ce5O:
	testq %rbx,%rbx
	jle _ce5w
_ce5N:
	incq %rax
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce5w:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce5n:
	cqto
	idivq %rbx
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ce5c:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ce52, .-_ce52


==================== Asm code ====================
2018-03-16 15:54:45.161687246 UTC

.section .data.rel.ro
.align 8
.align 1
block_ce52_info:
	.quad	_ce52
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.164146476 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.shiftL#_closure
.type GHC.Base.shiftL#_closure, @object
GHC.Base.shiftL#_closure:
	.quad	GHC.Base.shiftL#_info


==================== Asm code ====================
2018-03-16 15:54:45.164863291 UTC

.section .text
.align 8
.globl GHC.Base.shiftL#_entry
.type GHC.Base.shiftL#_entry, @object
GHC.Base.shiftL#_entry:
_ce7J:
	cmpq $64,%rsi
	jl _ce7H
_ce7I:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ce7H:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.shiftL#_entry, .-GHC.Base.shiftL#_entry


==================== Asm code ====================
2018-03-16 15:54:45.165657955 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.shiftL#_info
.type GHC.Base.shiftL#_info, @object
GHC.Base.shiftL#_info:
	.quad	GHC.Base.shiftL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.167952856 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.shiftRL#_closure
.type GHC.Base.shiftRL#_closure, @object
GHC.Base.shiftRL#_closure:
	.quad	GHC.Base.shiftRL#_info


==================== Asm code ====================
2018-03-16 15:54:45.168619305 UTC

.section .text
.align 8
.globl GHC.Base.shiftRL#_entry
.type GHC.Base.shiftRL#_entry, @object
GHC.Base.shiftRL#_entry:
_ce84:
	cmpq $64,%rsi
	jl _ce82
_ce83:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ce82:
	movq %rsi,%rcx
	shrq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.shiftRL#_entry, .-GHC.Base.shiftRL#_entry


==================== Asm code ====================
2018-03-16 15:54:45.169215205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.shiftRL#_info
.type GHC.Base.shiftRL#_info, @object
GHC.Base.shiftRL#_info:
	.quad	GHC.Base.shiftRL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.171485432 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftL#_closure
.type GHC.Base.iShiftL#_closure, @object
GHC.Base.iShiftL#_closure:
	.quad	GHC.Base.iShiftL#_info


==================== Asm code ====================
2018-03-16 15:54:45.172187805 UTC

.section .text
.align 8
.globl GHC.Base.iShiftL#_entry
.type GHC.Base.iShiftL#_entry, @object
GHC.Base.iShiftL#_entry:
_ce8p:
	cmpq $64,%rsi
	jl _ce8n
_ce8o:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ce8n:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftL#_entry, .-GHC.Base.iShiftL#_entry


==================== Asm code ====================
2018-03-16 15:54:45.172796987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftL#_info
.type GHC.Base.iShiftL#_info, @object
GHC.Base.iShiftL#_info:
	.quad	GHC.Base.iShiftL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.175707904 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftRA#_closure
.type GHC.Base.iShiftRA#_closure, @object
GHC.Base.iShiftRA#_closure:
	.quad	GHC.Base.iShiftRA#_info


==================== Asm code ====================
2018-03-16 15:54:45.176439408 UTC

.section .text
.align 8
.globl GHC.Base.iShiftRA#_entry
.type GHC.Base.iShiftRA#_entry, @object
GHC.Base.iShiftRA#_entry:
_ce8K:
	cmpq $64,%rsi
	jl _ce8I
_ce8J:
	testq %r14,%r14
	jge _ce8T
_ce8U:
	movq $-1,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce8T:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ce8I:
	movq %rsi,%rcx
	sarq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftRA#_entry, .-GHC.Base.iShiftRA#_entry


==================== Asm code ====================
2018-03-16 15:54:45.177038831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftRA#_info
.type GHC.Base.iShiftRA#_info, @object
GHC.Base.iShiftRA#_info:
	.quad	GHC.Base.iShiftRA#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.179738508 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftRL#_closure
.type GHC.Base.iShiftRL#_closure, @object
GHC.Base.iShiftRL#_closure:
	.quad	GHC.Base.iShiftRL#_info


==================== Asm code ====================
2018-03-16 15:54:45.18042278 UTC

.section .text
.align 8
.globl GHC.Base.iShiftRL#_entry
.type GHC.Base.iShiftRL#_entry, @object
GHC.Base.iShiftRL#_entry:
_ce9c:
	cmpq $64,%rsi
	jl _ce9a
_ce9b:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ce9a:
	movq %rsi,%rcx
	shrq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftRL#_entry, .-GHC.Base.iShiftRL#_entry


==================== Asm code ====================
2018-03-16 15:54:45.181068868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftRL#_info
.type GHC.Base.iShiftRL#_info, @object
GHC.Base.iShiftRL#_info:
	.quad	GHC.Base.iShiftRL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:45.183184759 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.build_closure
.type GHC.Base.build_closure, @object
GHC.Base.build_closure:
	.quad	GHC.Base.build_info


==================== Asm code ====================
2018-03-16 15:54:45.183861153 UTC

.section .text
.align 8
.globl GHC.Base.build_entry
.type GHC.Base.build_entry, @object
GHC.Base.build_entry:
_ce9s:
	movl $GHC.Types.[]_closure+1,%esi
	movq %r14,%rax
	movl $GHC.Types.:_closure+2,%r14d
	movq %rax,%rbx
	jmp stg_ap_pp_fast
	.size GHC.Base.build_entry, .-GHC.Base.build_entry


==================== Asm code ====================
2018-03-16 15:54:45.184428067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.build_info
.type GHC.Base.build_info, @object
GHC.Base.build_info:
	.quad	GHC.Base.build_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.186787054 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cpure_closure
.type GHC.Base.$fApplicative[]_$cpure_closure, @object
GHC.Base.$fApplicative[]_$cpure_closure:
	.quad	GHC.Base.$fApplicative[]_$cpure_info


==================== Asm code ====================
2018-03-16 15:54:45.187558383 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$cpure_entry
.type GHC.Base.$fApplicative[]_$cpure_entry, @object
GHC.Base.$fApplicative[]_$cpure_entry:
_ce9E:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ce9I
_ce9H:
	movq $:_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq $GHC.Types.[]_closure+1,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ce9I:
	movq $24,904(%r13)
	movl $GHC.Base.$fApplicative[]_$cpure_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$cpure_entry, .-GHC.Base.$fApplicative[]_$cpure_entry


==================== Asm code ====================
2018-03-16 15:54:45.188562384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cpure_info
.type GHC.Base.$fApplicative[]_$cpure_info, @object
GHC.Base.$fApplicative[]_$cpure_info:
	.quad	GHC.Base.$fApplicative[]_$cpure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.190691074 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.augment_closure
.type GHC.Base.augment_closure, @object
GHC.Base.augment_closure:
	.quad	GHC.Base.augment_info


==================== Asm code ====================
2018-03-16 15:54:45.191331159 UTC

.section .text
.align 8
.globl GHC.Base.augment_entry
.type GHC.Base.augment_entry, @object
GHC.Base.augment_entry:
_ce9S:
	movq %r14,%rax
	movl $GHC.Types.:_closure+2,%r14d
	movq %rax,%rbx
	jmp stg_ap_pp_fast
	.size GHC.Base.augment_entry, .-GHC.Base.augment_entry


==================== Asm code ====================
2018-03-16 15:54:45.191927483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.augment_info
.type GHC.Base.augment_info, @object
GHC.Base.augment_info:
	.quad	GHC.Base.augment_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.200685634 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.++_closure
.type GHC.Base.++_closure, @object
GHC.Base.++_closure:
	.quad	GHC.Base.++_info


==================== Asm code ====================
2018-03-16 15:54:45.201536775 UTC

.section .text
.align 8
sat_s83E_entry:
_cead:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceae
_ceaf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ceae:
	jmp *-16(%r13)
	.size sat_s83E_entry, .-sat_s83E_entry


==================== Asm code ====================
2018-03-16 15:54:45.202135111 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s83E_info:
	.quad	sat_s83E_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.202882751 UTC

.section .text
.align 8
.globl GHC.Base.++_entry
.type GHC.Base.++_entry, @object
GHC.Base.++_entry:
_ceak:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceal
_ceam:
	movq $block_cea3_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cea3
_cea4:
	movq (%rbx),%rax
	jmp *(%rax)
_ceal:
	movl $GHC.Base.++_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.++_entry, .-GHC.Base.++_entry


==================== Asm code ====================
2018-03-16 15:54:45.203998753 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.++_info
.type GHC.Base.++_info, @object
GHC.Base.++_info:
	.quad	GHC.Base.++_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.204816603 UTC

.section .text
.align 8
_cea3:
_cea3:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceah
_ceai:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ceas
_cear:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $sat_s83E_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceas:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_ceah:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cea3, .-_cea3


==================== Asm code ====================
2018-03-16 15:54:45.205573864 UTC

.section .data.rel.ro
.align 8
.align 1
block_cea3_info:
	.quad	_cea3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.206082062 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.foldr_closure
.type GHC.Base.foldr_closure, @object
GHC.Base.foldr_closure:
	.quad	GHC.Base.foldr_info


==================== Asm code ====================
2018-03-16 15:54:45.206850395 UTC

.section .text
.align 8
go_s83I_entry:
_ceaK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceaL
_ceaM:
	movq $block_ceaD_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceaD
_ceaE:
	movq (%rbx),%rax
	jmp *(%rax)
_ceaL:
	jmp *-8(%r13)
	.size go_s83I_entry, .-go_s83I_entry


==================== Asm code ====================
2018-03-16 15:54:45.207497065 UTC

.section .data.rel.ro
.align 8
.align 1
go_s83I_info:
	.quad	go_s83I_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.208253529 UTC

.section .text
.align 8
_ceaD:
_ceaD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceaH
_ceaI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ceaV
_ceaU:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_ceaV:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_ceaH:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _ceaD, .-_ceaD


==================== Asm code ====================
2018-03-16 15:54:45.208915924 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceaD_info:
	.quad	_ceaD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.210149268 UTC

.section .text
.align 8
.globl GHC.Base.foldr_entry
.type GHC.Base.foldr_entry, @object
GHC.Base.foldr_entry:
_ceaX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceb1
_ceb0:
	movq $go_s83I_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq %rdi,%r14
	leaq -15(%r12),%rbx
	jmp go_s83I_entry
_ceb1:
	movq $24,904(%r13)
	movl $GHC.Base.foldr_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.foldr_entry, .-GHC.Base.foldr_entry


==================== Asm code ====================
2018-03-16 15:54:45.210753837 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.foldr_info
.type GHC.Base.foldr_info, @object
GHC.Base.foldr_info:
	.quad	GHC.Base.foldr_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.211328757 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.map_closure
.type GHC.Base.map_closure, @object
GHC.Base.map_closure:
	.quad	GHC.Base.map_info


==================== Asm code ====================
2018-03-16 15:54:45.212008488 UTC

.section .text
.align 8
sat_s83U_entry:
_cebg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cebh
_cebi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_cebh:
	jmp *-16(%r13)
	.size sat_s83U_entry, .-sat_s83U_entry


==================== Asm code ====================
2018-03-16 15:54:45.21262039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s83U_info:
	.quad	sat_s83U_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.213388813 UTC

.section .text
.align 8
.globl GHC.Base.map_entry
.type GHC.Base.map_entry, @object
GHC.Base.map_entry:
_cebn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cebo
_cebp:
	movq $block_ceb6_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ceb6
_ceb7:
	movq (%rbx),%rax
	jmp *(%rax)
_cebo:
	movl $GHC.Base.map_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.map_entry, .-GHC.Base.map_entry


==================== Asm code ====================
2018-03-16 15:54:45.21401954 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.map_info
.type GHC.Base.map_info, @object
GHC.Base.map_info:
	.quad	GHC.Base.map_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.214861203 UTC

.section .text
.align 8
_ceb6:
_ceb6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cebk
_cebl:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cebw
_cebv:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_s83U_info,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cebw:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
_cebk:
	movl $[]_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceb6, .-_ceb6


==================== Asm code ====================
2018-03-16 15:54:45.215590055 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceb6_info:
	.quad	_ceb6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.220307796 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_closure
.type GHC.Base.$fSemigroupNonEmpty_$c<>_closure, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:45.221160087 UTC

.section .text
.align 8
sat_s849_entry:
_cecF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cecG
_cecH:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cecJ
_cecI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_1_upd_info,-64(%r12)
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cecJ:
	movq $72,904(%r13)
_cecG:
	jmp *-16(%r13)
	.size sat_s849_entry, .-sat_s849_entry


==================== Asm code ====================
2018-03-16 15:54:45.222046079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s849_info:
	.quad	sat_s849_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.222763341 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_entry
.type GHC.Base.$fSemigroupNonEmpty_$c<>_entry, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_entry:
_cecK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cecM
_cecN:
	movq $block_cect_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cect
_cecu:
	movq (%rbx),%rax
	jmp *(%rax)
_cecM:
	movl $GHC.Base.$fSemigroupNonEmpty_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty_$c<>_entry, .-GHC.Base.$fSemigroupNonEmpty_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:45.223448622 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_info
.type GHC.Base.$fSemigroupNonEmpty_$c<>_info, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.22425181 UTC

.section .text
.align 8
_cect:
_cect:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cecQ
_cecP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s849_info,-48(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cecQ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cect, .-_cect


==================== Asm code ====================
2018-03-16 15:54:45.224938643 UTC

.section .data.rel.ro
.align 8
.align 1
block_cect_info:
	.quad	_cect
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.231210303 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$wpoly_go_closure
.type GHC.Base.$wpoly_go_closure, @object
GHC.Base.$wpoly_go_closure:
	.quad	GHC.Base.$wpoly_go_info


==================== Asm code ====================
2018-03-16 15:54:45.232046155 UTC

.section .text
.align 8
ds_s84g_entry:
_cedv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cedB
_cedC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ceds_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceds
_cedt:
	movq (%rbx),%rax
	jmp *(%rax)
_cedB:
	jmp *-16(%r13)
	.size ds_s84g_entry, .-ds_s84g_entry


==================== Asm code ====================
2018-03-16 15:54:45.233086698 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s84g_info:
	.quad	ds_s84g_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.233964943 UTC

.section .text
.align 8
_ceds:
_ceds:
	movq 8(%rbp),%rax
	movq $block_cedy_info,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$wpoly_go_entry
	.size _ceds, .-_ceds


==================== Asm code ====================
2018-03-16 15:54:45.23454844 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceds_info:
	.quad	_ceds
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.235216935 UTC

.section .text
.align 8
_cedy:
_cedy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cedG
_cedF:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cedG:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cedy, .-_cedy


==================== Asm code ====================
2018-03-16 15:54:45.235805618 UTC

.section .data.rel.ro
.align 8
.align 1
block_cedy_info:
	.quad	_cedy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.236632805 UTC

.section .text
.align 8
sat_s84w_entry:
_cedL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cedM
_cedN:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cedP
_cedO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $ds_s84g_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq $stg_sel_1_upd_info,-64(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cedP:
	movq $104,904(%r13)
_cedM:
	jmp *-16(%r13)
	.size sat_s84w_entry, .-sat_s84w_entry


==================== Asm code ====================
2018-03-16 15:54:45.237396515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s84w_info:
	.quad	sat_s84w_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.238147761 UTC

.section .text
.align 8
.globl GHC.Base.$wpoly_go_entry
.type GHC.Base.$wpoly_go_entry, @object
GHC.Base.$wpoly_go_entry:
_cedU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cedV
_cedW:
	movq $block_cede_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cede
_cedf:
	movq (%rbx),%rax
	jmp *(%rax)
_cedV:
	movl $GHC.Base.$wpoly_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$wpoly_go_entry, .-GHC.Base.$wpoly_go_entry


==================== Asm code ====================
2018-03-16 15:54:45.238758774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$wpoly_go_info
.type GHC.Base.$wpoly_go_info, @object
GHC.Base.$wpoly_go_info:
	.quad	GHC.Base.$wpoly_go_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.239564205 UTC

.section .text
.align 8
_cede:
_cede:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cedR
_cedS:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cee1
_cee0:
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rbx
	movq $sat_s84w_info,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cee1:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cedR:
	movq %rcx,%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cede, .-_cede


==================== Asm code ====================
2018-03-16 15:54:45.240234718 UTC

.section .data.rel.ro
.align 8
.align 1
block_cede_info:
	.quad	_cede
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.243791033 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty1_closure
.type GHC.Base.$fSemigroupNonEmpty1_closure, @object
GHC.Base.$fSemigroupNonEmpty1_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty1_info


==================== Asm code ====================
2018-03-16 15:54:45.244562138 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty1_entry
.type GHC.Base.$fSemigroupNonEmpty1_entry, @object
GHC.Base.$fSemigroupNonEmpty1_entry:
_ceeF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceeL
_ceeM:
	movq $block_ceeC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ceeC
_ceeD:
	movq (%rbx),%rax
	jmp *(%rax)
_ceeL:
	movl $GHC.Base.$fSemigroupNonEmpty1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty1_entry, .-GHC.Base.$fSemigroupNonEmpty1_entry


==================== Asm code ====================
2018-03-16 15:54:45.245191366 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty1_info
.type GHC.Base.$fSemigroupNonEmpty1_info, @object
GHC.Base.$fSemigroupNonEmpty1_info:
	.quad	GHC.Base.$fSemigroupNonEmpty1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.24606912 UTC

.section .text
.align 8
_ceeC:
_ceeC:
	movq 8(%rbp),%rax
	movq $block_ceeI_info,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$wpoly_go_entry
	.size _ceeC, .-_ceeC


==================== Asm code ====================
2018-03-16 15:54:45.246603112 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceeC_info:
	.quad	_ceeC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.247607275 UTC

.section .text
.align 8
_ceeI:
_ceeI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceeQ
_ceeP:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceeQ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ceeI, .-_ceeI


==================== Asm code ====================
2018-03-16 15:54:45.248233002 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceeI_info:
	.quad	_ceeI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.250985133 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_closure
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_closure, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.251772857 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_entry
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_entry, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_entry:
_cefc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cefd
_cefe:
	movq $block_cef9_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cef9
_cefa:
	movq (%rbx),%rax
	jmp *(%rax)
_cefd:
	movl $GHC.Base.$fSemigroupNonEmpty_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty_$csconcat_entry, .-GHC.Base.$fSemigroupNonEmpty_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.25238952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_info
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_info, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.25299985 UTC

.section .text
.align 8
_cef9:
_cef9:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroupNonEmpty1_entry
	.size _cef9, .-_cef9


==================== Asm code ====================
2018-03-16 15:54:45.253576078 UTC

.section .data.rel.ro
.align 8
.align 1
block_cef9_info:
	.quad	_cef9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.255813108 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_closure
.type GHC.Base.$fSemigroupNonEmpty_closure, @object
GHC.Base.$fSemigroupNonEmpty_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_closure+2
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.256354092 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_closure
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_closure, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.257006412 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_entry
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_entry, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_entry:
_cefw:
	movl $GHC.Base.$fSemigroupNonEmpty_closure+1,%esi
	movl $Data.Semigroup.Internal.stimesDefault_closure,%ebx
	jmp stg_ap_pp_fast
	.size GHC.Base.$fSemigroupNonEmpty_$cstimes_entry, .-GHC.Base.$fSemigroupNonEmpty_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:45.257813621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_info
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_info, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S8R0_srt+16


==================== Asm code ====================
2018-03-16 15:54:45.261650338 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]1_closure
.type GHC.Base.$fSemigroup[]1_closure, @object
GHC.Base.$fSemigroup[]1_closure:
	.quad	GHC.Base.$fSemigroup[]1_info


==================== Asm code ====================
2018-03-16 15:54:45.262705916 UTC

.section .text
.align 8
sat_s84P_entry:
_cefS:
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	jmp GHC.Base.$fSemigroup[]1_entry
	.size sat_s84P_entry, .-sat_s84P_entry


==================== Asm code ====================
2018-03-16 15:54:45.263270432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s84P_info:
	.quad	sat_s84P_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.264025133 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]1_entry
.type GHC.Base.$fSemigroup[]1_entry, @object
GHC.Base.$fSemigroup[]1_entry:
_cefZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceg0
_ceg1:
	movq $block_cefI_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cefI
_cefJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ceg0:
	movl $GHC.Base.$fSemigroup[]1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup[]1_entry, .-GHC.Base.$fSemigroup[]1_entry


==================== Asm code ====================
2018-03-16 15:54:45.264673773 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]1_info
.type GHC.Base.$fSemigroup[]1_info, @object
GHC.Base.$fSemigroup[]1_info:
	.quad	GHC.Base.$fSemigroup[]1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.265748314 UTC

.section .text
.align 8
_cefI:
_cefI:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cefW
_cefX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ceg6
_ceg5:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $sat_s84P_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
_ceg6:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cefW:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cefI, .-_cefI


==================== Asm code ====================
2018-03-16 15:54:45.266388136 UTC

.section .data.rel.ro
.align 8
.align 1
block_cefI_info:
	.quad	_cefI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.269109598 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$csconcat_closure
.type GHC.Base.$fSemigroup[]_$csconcat_closure, @object
GHC.Base.$fSemigroup[]_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup[]_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.269865134 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]_$csconcat_entry
.type GHC.Base.$fSemigroup[]_$csconcat_entry, @object
GHC.Base.$fSemigroup[]_$csconcat_entry:
_cegv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cegw
_cegx:
	movq $block_cegs_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cegs
_cegt:
	movq (%rbx),%rax
	jmp *(%rax)
_cegw:
	movl $GHC.Base.$fSemigroup[]_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup[]_$csconcat_entry, .-GHC.Base.$fSemigroup[]_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.27051312 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$csconcat_info
.type GHC.Base.$fSemigroup[]_$csconcat_info, @object
GHC.Base.$fSemigroup[]_$csconcat_info:
	.quad	GHC.Base.$fSemigroup[]_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.271119517 UTC

.section .text
.align 8
_cegs:
_cegs:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroup[]1_entry
	.size _cegs, .-_cegs


==================== Asm code ====================
2018-03-16 15:54:45.271699108 UTC

.section .data.rel.ro
.align 8
.align 1
block_cegs_info:
	.quad	_cegs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.279245551 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mapM_closure
.type GHC.Base.mapM_closure, @object
GHC.Base.mapM_closure:
	.quad	GHC.Base.mapM_info


==================== Asm code ====================
2018-03-16 15:54:45.280089977 UTC

.section .text
.align 8
z_s84X_entry:
_cegT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cegU
_cegV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_cegU:
	jmp *-16(%r13)
	.size z_s84X_entry, .-z_s84X_entry


==================== Asm code ====================
2018-03-16 15:54:45.280709326 UTC

.section .data.rel.ro
.align 8
.align 1
z_s84X_info:
	.quad	z_s84X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.281514145 UTC

.section .text
.align 8
sat_s858_entry:
_cehj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cehk
_cehl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cehn
_cehm:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cehn:
	movq $24,904(%r13)
_cehk:
	jmp *-8(%r13)
	.size sat_s858_entry, .-sat_s858_entry


==================== Asm code ====================
2018-03-16 15:54:45.282131796 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s858_info:
	.quad	sat_s858_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.282867452 UTC

.section .text
.align 8
sat_s859_entry:
_ceho:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cehp
_cehq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cehs
_cehr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s858_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cehs:
	movq $24,904(%r13)
_cehp:
	jmp *-8(%r13)
	.size sat_s859_entry, .-sat_s859_entry


==================== Asm code ====================
2018-03-16 15:54:45.283542696 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s859_info:
	.quad	sat_s859_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.284287367 UTC

.section .text
.align 8
go_s84Y_entry:
_cehx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cehy
_cehz:
	movq $block_ceh1_info,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ceh1
_ceh2:
	movq (%rbx),%rax
	jmp *(%rax)
_cehy:
	jmp *-8(%r13)
	.size go_s84Y_entry, .-go_s84Y_entry


==================== Asm code ====================
2018-03-16 15:54:45.284956112 UTC

.section .data.rel.ro
.align 8
.align 1
go_s84Y_info:
	.quad	go_s84Y_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.285752222 UTC

.section .text
.align 8
_ceh1:
_ceh1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cehu
_cehv:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cehE
_cehD:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-80(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $sat_s859_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	leaq -80(%r12),%rcx
	movq %rcx,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	leaq -47(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Base.>>=_entry
_cehE:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
_cehu:
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp stg_ap_0_fast
	.size _ceh1, .-_ceh1


==================== Asm code ====================
2018-03-16 15:54:45.286516005 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceh1_info:
	.quad	_ceh1
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.287223358 UTC

.section .text
.align 8
.globl GHC.Base.mapM_entry
.type GHC.Base.mapM_entry, @object
GHC.Base.mapM_entry:
_cehH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cehL
_cehK:
	movq $z_s84X_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $go_s84Y_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq %rdi,%r14
	leaq -23(%r12),%rbx
	jmp go_s84Y_entry
_cehL:
	movq $56,904(%r13)
	movl $GHC.Base.mapM_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.mapM_entry, .-GHC.Base.mapM_entry


==================== Asm code ====================
2018-03-16 15:54:45.28791276 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mapM_info
.type GHC.Base.mapM_info, @object
GHC.Base.mapM_info:
	.quad	GHC.Base.mapM_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.290129874 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.sequence_closure
.type GHC.Base.sequence_closure, @object
GHC.Base.sequence_closure:
	.quad	GHC.Base.sequence_info


==================== Asm code ====================
2018-03-16 15:54:45.291153184 UTC

.section .text
.align 8
.globl GHC.Base.sequence_entry
.type GHC.Base.sequence_entry, @object
GHC.Base.sequence_entry:
_ceio:
	movq %rsi,%rdi
	movl $GHC.Base.breakpoint_closure+1,%esi
	jmp GHC.Base.mapM_entry
	.size GHC.Base.sequence_entry, .-GHC.Base.sequence_entry


==================== Asm code ====================
2018-03-16 15:54:45.291748956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.sequence_info
.type GHC.Base.sequence_info, @object
GHC.Base.sequence_info:
	.quad	GHC.Base.sequence_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.296596687 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmconcat_closure
.type GHC.Base.$dmmconcat_closure, @object
GHC.Base.$dmmconcat_closure:
	.quad	GHC.Base.$dmmconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.29741058 UTC

.section .text
.align 8
z_s85d_entry:
_ceiD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceiE
_ceiF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ceiE:
	jmp *-16(%r13)
	.size z_s85d_entry, .-z_s85d_entry


==================== Asm code ====================
2018-03-16 15:54:45.298015594 UTC

.section .data.rel.ro
.align 8
.align 1
z_s85d_info:
	.quad	z_s85d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.298746283 UTC

.section .text
.align 8
go_s85e_entry:
_ceiS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceiT
_ceiU:
	movq $block_ceiL_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceiL
_ceiM:
	movq (%rbx),%rax
	jmp *(%rax)
_ceiT:
	jmp *-8(%r13)
	.size go_s85e_entry, .-go_s85e_entry


==================== Asm code ====================
2018-03-16 15:54:45.299417311 UTC

.section .data.rel.ro
.align 8
.align 1
go_s85e_info:
	.quad	go_s85e_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.300166401 UTC

.section .text
.align 8
_ceiL:
_ceiL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceiP
_ceiQ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cej2
_cej1:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Base.mappend_entry
_cej2:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_ceiP:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _ceiL, .-_ceiL


==================== Asm code ====================
2018-03-16 15:54:45.300849949 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceiL_info:
	.quad	_ceiL
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.301591047 UTC

.section .text
.align 8
.globl GHC.Base.$dmmconcat_entry
.type GHC.Base.$dmmconcat_entry, @object
GHC.Base.$dmmconcat_entry:
_cej5:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cej9
_cej8:
	movq $z_s85d_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $go_s85e_info,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	leaq -15(%r12),%rbx
	jmp go_s85e_entry
_cej9:
	movq $48,904(%r13)
	movl $GHC.Base.$dmmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmmconcat_entry, .-GHC.Base.$dmmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.302228436 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmconcat_info
.type GHC.Base.$dmmconcat_info, @object
GHC.Base.$dmmconcat_info:
	.quad	GHC.Base.$dmmconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.308300595 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmconcat_closure
.type GHC.Base.$fMonoid(->)_$cmconcat_closure, @object
GHC.Base.$fMonoid(->)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(->)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.309020908 UTC

.section .text
.align 8
lvl3_s85n_entry:
_cejD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cejE
_cejF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cejE:
	jmp *-16(%r13)
	.size lvl3_s85n_entry, .-lvl3_s85n_entry


==================== Asm code ====================
2018-03-16 15:54:45.309978724 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_s85n_info:
	.quad	lvl3_s85n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.310632123 UTC

.section .text
.align 8
$dSemigroup_s85o_entry:
_cejK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cejL
_cejM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cejL:
	jmp *-16(%r13)
	.size $dSemigroup_s85o_entry, .-$dSemigroup_s85o_entry


==================== Asm code ====================
2018-03-16 15:54:45.311233469 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_s85o_info:
	.quad	$dSemigroup_s85o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.311997876 UTC

.section .text
.align 8
go_s85p_entry:
_cejZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cek0
_cek1:
	movq $block_cejS_info,-40(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cejS
_cejT:
	movq (%rbx),%rax
	jmp *(%rax)
_cek0:
	jmp *-8(%r13)
	.size go_s85p_entry, .-go_s85p_entry


==================== Asm code ====================
2018-03-16 15:54:45.312661854 UTC

.section .data.rel.ro
.align 8
.align 1
go_s85p_info:
	.quad	go_s85p_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.313486373 UTC

.section .text
.align 8
_cejS:
_cejS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cejW
_cejX:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cek9
_cek8:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_3_upd_info,-64(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	leaq -64(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Base.<>_entry
_cek9:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_cejW:
	movq 8(%rbp),%rbx
	addq $40,%rbp
	jmp stg_ap_0_fast
	.size _cejS, .-_cejS


==================== Asm code ====================
2018-03-16 15:54:45.314227912 UTC

.section .data.rel.ro
.align 8
.align 1
block_cejS_info:
	.quad	_cejS
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.314936341 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cmconcat_entry
.type GHC.Base.$fMonoid(->)_$cmconcat_entry, @object
GHC.Base.$fMonoid(->)_$cmconcat_entry:
_cekd:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cekh
_cekg:
	movq $lvl3_s85n_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $$dSemigroup_s85o_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $go_s85p_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -14(%r12),%rbx
	jmp go_s85p_entry
_cekh:
	movq $72,904(%r13)
	movl $GHC.Base.$fMonoid(->)_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cmconcat_entry, .-GHC.Base.$fMonoid(->)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.315643235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmconcat_info
.type GHC.Base.$fMonoid(->)_$cmconcat_info, @object
GHC.Base.$fMonoid(->)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(->)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.322677034 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO1_closure
.type GHC.Base.$fMonoidIO1_closure, @object
GHC.Base.$fMonoidIO1_closure:
	.quad	GHC.Base.$fMonoidIO1_info


==================== Asm code ====================
2018-03-16 15:54:45.32342697 UTC

.section .text
.align 8
$dSemigroup_s85A_entry:
_cekR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cekS
_cekT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cekS:
	jmp *-16(%r13)
	.size $dSemigroup_s85A_entry, .-$dSemigroup_s85A_entry


==================== Asm code ====================
2018-03-16 15:54:45.324033353 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_s85A_info:
	.quad	$dSemigroup_s85A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.324693574 UTC

.section .text
.align 8
lvl3_s85B_entry:
_cekY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cekZ
_cel0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cekZ:
	jmp *-16(%r13)
	.size lvl3_s85B_entry, .-lvl3_s85B_entry


==================== Asm code ====================
2018-03-16 15:54:45.325383706 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_s85B_info:
	.quad	lvl3_s85B_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.326064789 UTC

.section .text
.align 8
sat_s85O_entry:
_celk:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cell
_celm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cell:
	jmp *-16(%r13)
	.size sat_s85O_entry, .-sat_s85O_entry


==================== Asm code ====================
2018-03-16 15:54:45.326682013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85O_info:
	.quad	sat_s85O_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.327475161 UTC

.section .text
.align 8
go_s85C_entry:
_celr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cels
_celt:
	movq $block_cel6_info,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cel6
_cel7:
	movq (%rbx),%rax
	jmp *(%rax)
_cels:
	jmp *-8(%r13)
	.size go_s85C_entry, .-go_s85C_entry


==================== Asm code ====================
2018-03-16 15:54:45.328120868 UTC

.section .data.rel.ro
.align 8
.align 1
go_s85C_info:
	.quad	go_s85C_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:45.328820072 UTC

.section .text
.align 8
_cel6:
_cel6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _celo
_celp:
	movq $block_celc_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_v_fast
_celo:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cel6, .-_cel6


==================== Asm code ====================
2018-03-16 15:54:45.329687883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cel6_info:
	.quad	_cel6
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.330261835 UTC

.section .text
.align 8
_celc:
_celc:
	movq $block_cele_info,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp go_s85C_entry
	.size _celc, .-_celc


==================== Asm code ====================
2018-03-16 15:54:45.330858208 UTC

.section .data.rel.ro
.align 8
.align 1
block_celc_info:
	.quad	_celc
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.33150011 UTC

.section .text
.align 8
_cele:
_cele:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _celA
_celz:
	movq $sat_s85O_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_celA:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cele, .-_cele


==================== Asm code ====================
2018-03-16 15:54:45.332112523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cele_info:
	.quad	_cele
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.332814775 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO1_entry
.type GHC.Base.$fMonoidIO1_entry, @object
GHC.Base.$fMonoidIO1_entry:
_celC:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _celG
_celF:
	movq $$dSemigroup_s85A_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $lvl3_s85B_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $go_s85C_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	leaq -14(%r12),%rbx
	jmp go_s85C_entry
_celG:
	movq $72,904(%r13)
	movl $GHC.Base.$fMonoidIO1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO1_entry, .-GHC.Base.$fMonoidIO1_entry


==================== Asm code ====================
2018-03-16 15:54:45.333490379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO1_info
.type GHC.Base.$fMonoidIO1_info, @object
GHC.Base.$fMonoidIO1_info:
	.quad	GHC.Base.$fMonoidIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:45.339212719 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_closure
.type GHC.Base.$fMonoidIO_closure, @object
GHC.Base.$fMonoidIO_closure:
	.quad	GHC.Base.$fMonoidIO_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.339879522 UTC

.section .text
.align 8
sat_s85V_entry:
_cemu:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidIO1_entry
	.size sat_s85V_entry, .-sat_s85V_entry


==================== Asm code ====================
2018-03-16 15:54:45.340444138 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85V_info:
	.quad	sat_s85V_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:45.34104412 UTC

.section .text
.align 8
sat_s85U_entry:
_cemC:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fMonoidIO_$cmappend_entry
	.size sat_s85U_entry, .-sat_s85U_entry


==================== Asm code ====================
2018-03-16 15:54:45.341636481 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85U_info:
	.quad	sat_s85U_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:45.342319295 UTC

.section .text
.align 8
sat_s85S_entry:
_cemO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cemP
_cemQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cemP:
	jmp *-16(%r13)
	.size sat_s85S_entry, .-sat_s85S_entry


==================== Asm code ====================
2018-03-16 15:54:45.342954531 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85S_info:
	.quad	sat_s85S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.343645126 UTC

.section .text
.align 8
sat_s85T_entry:
_cemR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cemV
_cemU:
	movq 7(%rbx),%rax
	movq $sat_s85S_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cemV:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s85T_entry, .-sat_s85T_entry


==================== Asm code ====================
2018-03-16 15:54:45.344264524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85T_info:
	.quad	sat_s85T_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:45.344923504 UTC

.section .text
.align 8
sat_s85Q_entry:
_cen0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cen1
_cen2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoidIO_$cp1Monoid_entry
_cen1:
	jmp *-16(%r13)
	.size sat_s85Q_entry, .-sat_s85Q_entry


==================== Asm code ====================
2018-03-16 15:54:45.345541772 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85Q_info:
	.quad	sat_s85Q_entry
	.quad	1
	.quad	4294967312
	.quad	S8R0_srt+24


==================== Asm code ====================
2018-03-16 15:54:45.346320376 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_entry
.type GHC.Base.$fMonoidIO_entry, @object
GHC.Base.$fMonoidIO_entry:
_cen4:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _cen8
_cen7:
	movq $sat_s85V_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s85U_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s85T_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s85Q_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -71(%r12),%rax
	movq %rax,-16(%r12)
	leaq -85(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cen8:
	movq $112,904(%r13)
	movl $GHC.Base.$fMonoidIO_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO_entry, .-GHC.Base.$fMonoidIO_entry


==================== Asm code ====================
2018-03-16 15:54:45.347042418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_info
.type GHC.Base.$fMonoidIO_info, @object
GHC.Base.$fMonoidIO_info:
	.quad	GHC.Base.$fMonoidIO_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S8R0_srt+24


==================== Asm code ====================
2018-03-16 15:54:45.350303891 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_$c<$_closure
.type GHC.Base.$fFunctor[]_$c<$_closure, @object
GHC.Base.$fFunctor[]_$c<$_closure:
	.quad	GHC.Base.$fFunctor[]_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:45.350924527 UTC

.section .text
.align 8
sat_s85Z_entry:
_cenJ:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s85Z_entry, .-sat_s85Z_entry


==================== Asm code ====================
2018-03-16 15:54:45.351482159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s85Z_info:
	.quad	sat_s85Z_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.352171317 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor[]_$c<$_entry
.type GHC.Base.$fFunctor[]_$c<$_entry, @object
GHC.Base.$fFunctor[]_$c<$_entry:
_cenM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cenQ
_cenP:
	movq $sat_s85Z_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.Base.map_entry
_cenQ:
	movq $16,904(%r13)
	movl $GHC.Base.$fFunctor[]_$c<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor[]_$c<$_entry, .-GHC.Base.$fFunctor[]_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.352790377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_$c<$_info
.type GHC.Base.$fFunctor[]_$c<$_info, @object
GHC.Base.$fFunctor[]_$c<$_info:
	.quad	GHC.Base.$fFunctor[]_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.356941578 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$c<$_closure
.type GHC.Base.$fFunctorNonEmpty_$c<$_closure, @object
GHC.Base.$fFunctorNonEmpty_$c<$_closure:
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:45.357603642 UTC

.section .text
.align 8
sat_s866_entry:
_ceog:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s866_entry, .-sat_s866_entry


==================== Asm code ====================
2018-03-16 15:54:45.35816068 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s866_info:
	.quad	sat_s866_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.358923688 UTC

.section .text
.align 8
sat_s867_entry:
_ceoj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceok
_ceol:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ceo6_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceo6
_ceo7:
	movq (%rbx),%rax
	jmp *(%rax)
_ceok:
	jmp *-16(%r13)
	.size sat_s867_entry, .-sat_s867_entry


==================== Asm code ====================
2018-03-16 15:54:45.359561632 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s867_info:
	.quad	sat_s867_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.360242981 UTC

.section .text
.align 8
_ceo6:
_ceo6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceoo
_ceon:
	movq 15(%rbx),%rax
	movq $sat_s866_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%rsi
	leaq -7(%r12),%r14
	addq $16,%rbp
	jmp GHC.Base.map_entry
_ceoo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ceo6, .-_ceo6


==================== Asm code ====================
2018-03-16 15:54:45.360886618 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceo6_info:
	.quad	_ceo6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.362000904 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorNonEmpty_$c<$_entry
.type GHC.Base.$fFunctorNonEmpty_$c<$_entry, @object
GHC.Base.$fFunctorNonEmpty_$c<$_entry:
_ceor:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ceov
_ceou:
	movq $sat_s867_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %r14,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ceov:
	movq $56,904(%r13)
	movl $GHC.Base.$fFunctorNonEmpty_$c<$_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorNonEmpty_$c<$_entry, .-GHC.Base.$fFunctorNonEmpty_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:45.362667533 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$c<$_info
.type GHC.Base.$fFunctorNonEmpty_$c<$_info, @object
GHC.Base.$fFunctorNonEmpty_$c<$_info:
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.364745331 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_closure
.type GHC.Base.$fFunctor[]_closure, @object
GHC.Base.$fFunctor[]_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.map_closure+2
	.quad	GHC.Base.$fFunctor[]_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.369683633 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$c>>=_closure
.type GHC.Base.$fMonad[]_$c>>=_closure, @object
GHC.Base.$fMonad[]_$c>>=_closure:
	.quad	GHC.Base.$fMonad[]_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.3703554 UTC

.section .text
.align 8
sat_s86g_entry:
_cep8:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_s86a_entry
	.size sat_s86g_entry, .-sat_s86g_entry


==================== Asm code ====================
2018-03-16 15:54:45.370880576 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s86g_info:
	.quad	sat_s86g_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.371625904 UTC

.section .text
.align 8
go_s86a_entry:
_cepf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cepg
_ceph:
	movq $block_ceoY_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceoY
_ceoZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cepg:
	jmp *-8(%r13)
	.size go_s86a_entry, .-go_s86a_entry


==================== Asm code ====================
2018-03-16 15:54:45.372292993 UTC

.section .data.rel.ro
.align 8
.align 1
go_s86a_info:
	.quad	go_s86a_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.373136183 UTC

.section .text
.align 8
_ceoY:
_ceoY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cepc
_cepd:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cepn
_cepm:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_s86g_info,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq $block_cepk_info,8(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp stg_ap_p_fast
_cepn:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cepc:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceoY, .-_ceoY


==================== Asm code ====================
2018-03-16 15:54:45.374012092 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceoY_info:
	.quad	_ceoY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.374625961 UTC

.section .text
.align 8
_cepk:
_cepk:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _cepk, .-_cepk


==================== Asm code ====================
2018-03-16 15:54:45.375195062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cepk_info:
	.quad	_cepk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.37588838 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad[]_$c>>=_entry
.type GHC.Base.$fMonad[]_$c>>=_entry, @object
GHC.Base.$fMonad[]_$c>>=_entry:
_cept:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cepx
_cepw:
	movq $go_s86a_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s86a_entry
_cepx:
	movq $16,904(%r13)
	movl $GHC.Base.$fMonad[]_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad[]_$c>>=_entry, .-GHC.Base.$fMonad[]_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.376546524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$c>>=_info
.type GHC.Base.$fMonad[]_$c>>=_info, @object
GHC.Base.$fMonad[]_$c>>=_info:
	.quad	GHC.Base.$fMonad[]_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.379268756 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.=<<_$s=<<_closure
.type GHC.Base.=<<_$s=<<_closure, @object
GHC.Base.=<<_$s=<<_closure:
	.quad	GHC.Base.=<<_$s=<<_info


==================== Asm code ====================
2018-03-16 15:54:45.379916927 UTC

.section .text
.align 8
.globl GHC.Base.=<<_$s=<<_entry
.type GHC.Base.=<<_$s=<<_entry, @object
GHC.Base.=<<_$s=<<_entry:
_cepZ:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.Base.$fMonad[]_$c>>=_entry
	.size GHC.Base.=<<_$s=<<_entry, .-GHC.Base.=<<_$s=<<_entry


==================== Asm code ====================
2018-03-16 15:54:45.38050672 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.=<<_$s=<<_info
.type GHC.Base.=<<_$s=<<_info, @object
GHC.Base.=<<_$s=<<_info:
	.quad	GHC.Base.=<<_$s=<<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.382983869 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.=<<_closure
.type GHC.Base.=<<_closure, @object
GHC.Base.=<<_closure:
	.quad	GHC.Base.=<<_info


==================== Asm code ====================
2018-03-16 15:54:45.383739981 UTC

.section .text
.align 8
.globl GHC.Base.=<<_entry
.type GHC.Base.=<<_entry, @object
GHC.Base.=<<_entry:
_ceqa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceqb
_ceqc:
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ceqb:
	movl $GHC.Base.=<<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.=<<_entry, .-GHC.Base.=<<_entry


==================== Asm code ====================
2018-03-16 15:54:45.38439694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.=<<_info
.type GHC.Base.=<<_info, @object
GHC.Base.=<<_info:
	.quad	GHC.Base.=<<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.387965184 UTC

.section .data
.align 8
.align 1
poly_go_r7PI_closure:
	.quad	poly_go_r7PI_info


==================== Asm code ====================
2018-03-16 15:54:45.388554757 UTC

.section .text
.align 8
sat_s86q_entry:
_ceqw:
	movq 16(%rbx),%r14
	jmp poly_go_r7PI_entry
	.size sat_s86q_entry, .-sat_s86q_entry


==================== Asm code ====================
2018-03-16 15:54:45.38912273 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s86q_info:
	.quad	sat_s86q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.390302682 UTC

.section .text
.align 8
poly_go_r7PI_entry:
_ceqD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceqE
_ceqF:
	movq $block_ceqm_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ceqm
_ceqn:
	movq (%rbx),%rax
	jmp *(%rax)
_ceqE:
	movl $poly_go_r7PI_closure,%ebx
	jmp *-8(%r13)
	.size poly_go_r7PI_entry, .-poly_go_r7PI_entry


==================== Asm code ====================
2018-03-16 15:54:45.390942135 UTC

.section .data.rel.ro
.align 8
.align 1
poly_go_r7PI_info:
	.quad	poly_go_r7PI_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.391757786 UTC

.section .text
.align 8
_ceqm:
_ceqm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceqA
_ceqB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceqK
_ceqJ:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_s86q_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
_ceqK:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_ceqA:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceqm, .-_ceqm


==================== Asm code ====================
2018-03-16 15:54:45.392841973 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceqm_info:
	.quad	_ceqm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.395051118 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_$cmconcat_closure
.type GHC.Base.$fMonoid[]_$cmconcat_closure, @object
GHC.Base.$fMonoid[]_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid[]_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.395639613 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid[]_$cmconcat_entry
.type GHC.Base.$fMonoid[]_$cmconcat_entry, @object
GHC.Base.$fMonoid[]_$cmconcat_entry:
_cer5:
	jmp poly_go_r7PI_entry
	.size GHC.Base.$fMonoid[]_$cmconcat_entry, .-GHC.Base.$fMonoid[]_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.396210758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_$cmconcat_info
.type GHC.Base.$fMonoid[]_$cmconcat_info, @object
GHC.Base.$fMonoid[]_$cmconcat_info:
	.quad	GHC.Base.$fMonoid[]_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.402389203 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*>_closure
.type GHC.Base.$fApplicative[]_$c<*>_closure, @object
GHC.Base.$fApplicative[]_$c<*>_closure:
	.quad	GHC.Base.$fApplicative[]_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:45.403243706 UTC

.section .text
.align 8
go1_s86A_entry:
_cerE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cerF
_cerG:
	movq $block_cerx_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cerx
_cery:
	movq (%rbx),%rax
	jmp *(%rax)
_cerF:
	jmp *-8(%r13)
	.size go1_s86A_entry, .-go1_s86A_entry


==================== Asm code ====================
2018-03-16 15:54:45.403903719 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s86A_info:
	.quad	go1_s86A_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.404721516 UTC

.section .text
.align 8
_cerx:
_cerx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cerB
_cerC:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cerR
_cerQ:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cerR:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
_cerB:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cerx, .-_cerx


==================== Asm code ====================
2018-03-16 15:54:45.405454306 UTC

.section .data.rel.ro
.align 8
.align 1
block_cerx_info:
	.quad	_cerx
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.40621849 UTC

.section .text
.align 8
go_s86u_entry:
_cerX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cerY
_cerZ:
	movq $block_cerl_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cerl
_cerm:
	movq (%rbx),%rax
	jmp *(%rax)
_cerY:
	jmp *-8(%r13)
	.size go_s86u_entry, .-go_s86u_entry


==================== Asm code ====================
2018-03-16 15:54:45.407261349 UTC

.section .data.rel.ro
.align 8
.align 1
go_s86u_info:
	.quad	go_s86u_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.408083161 UTC

.section .text
.align 8
_cerl:
_cerl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cerU
_cerV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ces4
_ces3:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $go1_s86A_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_s86A_entry
_ces4:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cerU:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cerl, .-_cerl


==================== Asm code ====================
2018-03-16 15:54:45.408814791 UTC

.section .data.rel.ro
.align 8
.align 1
block_cerl_info:
	.quad	_cerl
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.40994585 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c<*>_entry
.type GHC.Base.$fApplicative[]_$c<*>_entry, @object
GHC.Base.$fApplicative[]_$c<*>_entry:
_ces6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cesa
_ces9:
	movq $go_s86u_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s86u_entry
_cesa:
	movq $16,904(%r13)
	movl $GHC.Base.$fApplicative[]_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$c<*>_entry, .-GHC.Base.$fApplicative[]_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:45.41056743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*>_info
.type GHC.Base.$fApplicative[]_$c<*>_info, @object
GHC.Base.$fApplicative[]_$c<*>_info:
	.quad	GHC.Base.$fApplicative[]_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.416811356 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cliftA2_closure
.type GHC.Base.$fApplicative[]_$cliftA2_closure, @object
GHC.Base.$fApplicative[]_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative[]_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:45.417659921 UTC

.section .text
.align 8
go1_s86Q_entry:
_cetb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cetc
_cetd:
	movq $block_cet4_info,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cet4
_cet5:
	movq (%rbx),%rax
	jmp *(%rax)
_cetc:
	jmp *-8(%r13)
	.size go1_s86Q_entry, .-go1_s86Q_entry


==================== Asm code ====================
2018-03-16 15:54:45.41835527 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s86Q_info:
	.quad	go1_s86Q_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.419189555 UTC

.section .text
.align 8
_cet4:
_cet4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cet8
_cet9:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ceto
_cetn:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-88(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $stg_ap_3_upd_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceto:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
_cet8:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cet4, .-_cet4


==================== Asm code ====================
2018-03-16 15:54:45.41994277 UTC

.section .data.rel.ro
.align 8
.align 1
block_cet4_info:
	.quad	_cet4
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.420734102 UTC

.section .text
.align 8
go_s86K_entry:
_cetu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cetv
_cetw:
	movq $block_cesS_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cesS
_cesT:
	movq (%rbx),%rax
	jmp *(%rax)
_cetv:
	jmp *-8(%r13)
	.size go_s86K_entry, .-go_s86K_entry


==================== Asm code ====================
2018-03-16 15:54:45.421810154 UTC

.section .data.rel.ro
.align 8
.align 1
go_s86K_info:
	.quad	go_s86K_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.422653924 UTC

.section .text
.align 8
_cesS:
_cesS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cetr
_cets:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cetB
_cetA:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-56(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $go1_s86Q_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $32,%rbp
	jmp go1_s86Q_entry
_cetB:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
_cetr:
	movl $[]_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cesS, .-_cesS


==================== Asm code ====================
2018-03-16 15:54:45.423399551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cesS_info:
	.quad	_cesS
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.424100128 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$cliftA2_entry
.type GHC.Base.$fApplicative[]_$cliftA2_entry, @object
GHC.Base.$fApplicative[]_$cliftA2_entry:
_cetD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cetH
_cetG:
	movq $go_s86K_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	leaq -15(%r12),%rbx
	jmp go_s86K_entry
_cetH:
	movq $24,904(%r13)
	movl $GHC.Base.$fApplicative[]_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$cliftA2_entry, .-GHC.Base.$fApplicative[]_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:45.4247091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cliftA2_info
.type GHC.Base.$fApplicative[]_$cliftA2_info, @object
GHC.Base.$fApplicative[]_$cliftA2_info:
	.quad	GHC.Base.$fApplicative[]_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.42721127 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*_closure
.type GHC.Base.$fApplicative[]_$c<*_closure, @object
GHC.Base.$fApplicative[]_$c<*_closure:
	.quad	GHC.Base.$fApplicative[]_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:45.427856647 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c<*_entry
.type GHC.Base.$fApplicative[]_$c<*_entry, @object
GHC.Base.$fApplicative[]_$c<*_entry:
_ceum:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Base.const_closure+2,%r14d
	jmp GHC.Base.$fApplicative[]_$cliftA2_entry
	.size GHC.Base.$fApplicative[]_$c<*_entry, .-GHC.Base.$fApplicative[]_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:45.428422762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*_info
.type GHC.Base.$fApplicative[]_$c<*_info, @object
GHC.Base.$fApplicative[]_$c<*_info:
	.quad	GHC.Base.$fApplicative[]_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.432717499 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c*>_closure
.type GHC.Base.$fApplicative[]_$c*>_closure, @object
GHC.Base.$fApplicative[]_$c*>_closure:
	.quad	GHC.Base.$fApplicative[]_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:45.433406182 UTC

.section .text
.align 8
sat_s874_entry:
_ceuM:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_s86Z_entry
	.size sat_s874_entry, .-sat_s874_entry


==================== Asm code ====================
2018-03-16 15:54:45.433955952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s874_info:
	.quad	sat_s874_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.434748343 UTC

.section .text
.align 8
go_s86Z_entry:
_ceuT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceuU
_ceuV:
	movq $block_ceuC_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceuC
_ceuD:
	movq (%rbx),%rax
	jmp *(%rax)
_ceuU:
	jmp *-8(%r13)
	.size go_s86Z_entry, .-go_s86Z_entry


==================== Asm code ====================
2018-03-16 15:54:45.435774116 UTC

.section .data.rel.ro
.align 8
.align 1
go_s86Z_info:
	.quad	go_s86Z_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.436576329 UTC

.section .text
.align 8
_ceuC:
_ceuC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceuQ
_ceuR:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cev0
_ceuZ:
	movq 14(%rbx),%rax
	movq $sat_s874_info,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cev0:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_ceuQ:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceuC, .-_ceuC


==================== Asm code ====================
2018-03-16 15:54:45.43736063 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceuC_info:
	.quad	_ceuC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.438049594 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c*>_entry
.type GHC.Base.$fApplicative[]_$c*>_entry, @object
GHC.Base.$fApplicative[]_$c*>_entry:
_cev2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cev6
_cev5:
	movq $go_s86Z_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_s86Z_entry
_cev6:
	movq $16,904(%r13)
	movl $GHC.Base.$fApplicative[]_$c*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$c*>_entry, .-GHC.Base.$fApplicative[]_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:45.438658678 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c*>_info
.type GHC.Base.$fApplicative[]_$c*>_info, @object
GHC.Base.$fApplicative[]_$c*>_info:
	.quad	GHC.Base.$fApplicative[]_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.440445269 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_closure
.type GHC.Base.$fApplicative[]_closure, @object
GHC.Base.$fApplicative[]_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctor[]_closure+1
	.quad	GHC.Base.$fApplicative[]_$cpure_closure+1
	.quad	GHC.Base.$fApplicative[]_$c<*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicative[]_$c*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.444886051 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_closure
.type GHC.Base.$fFunctorNonEmpty_$cfmap_closure, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_closure:
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:45.445713834 UTC

.section .text
.align 8
sat_s87f_entry:
_cevC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cevD
_cevE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cevz_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cevz
_cevA:
	movq (%rbx),%rax
	jmp *(%rax)
_cevD:
	jmp *-16(%r13)
	.size sat_s87f_entry, .-sat_s87f_entry


==================== Asm code ====================
2018-03-16 15:54:45.446332826 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s87f_info:
	.quad	sat_s87f_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.446968643 UTC

.section .text
.align 8
_cevz:
_cevz:
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.map_entry
	.size _cevz, .-_cevz


==================== Asm code ====================
2018-03-16 15:54:45.447509089 UTC

.section .data.rel.ro
.align 8
.align 1
block_cevz_info:
	.quad	_cevz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.448262144 UTC

.section .text
.align 8
sat_s87b_entry:
_cevO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cevP
_cevQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cevS
_cevR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_cevS:
	movq $24,904(%r13)
_cevP:
	jmp *-16(%r13)
	.size sat_s87b_entry, .-sat_s87b_entry


==================== Asm code ====================
2018-03-16 15:54:45.448891712 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s87b_info:
	.quad	sat_s87b_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.450423877 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_entry
.type GHC.Base.$fFunctorNonEmpty_$cfmap_entry, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_entry:
_cevU:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cevY
_cevX:
	movq $sat_s87f_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq $sat_s87b_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cevY:
	movq $88,904(%r13)
	movl $GHC.Base.$fFunctorNonEmpty_$cfmap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorNonEmpty_$cfmap_entry, .-GHC.Base.$fFunctorNonEmpty_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:45.451112279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_info
.type GHC.Base.$fFunctorNonEmpty_$cfmap_info, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_info:
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.452824256 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_closure
.type GHC.Base.$fFunctorNonEmpty_closure, @object
GHC.Base.$fFunctorNonEmpty_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_closure+2
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.4544219 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]1_closure
.type GHC.Base.$fAlternative[]1_closure, @object
GHC.Base.$fAlternative[]1_closure:
	.quad	:_con_info
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.46171581 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$csome_closure
.type GHC.Base.$fAlternative[]_$csome_closure, @object
GHC.Base.$fAlternative[]_$csome_closure:
	.quad	GHC.Base.$fAlternative[]_$csome_info


==================== Asm code ====================
2018-03-16 15:54:45.462497975 UTC

.section .text
.align 8
ys_s87i_entry:
_ceww:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cewx
_cewy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Base.$fAlternative[]1_closure+2,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cewx:
	jmp *-16(%r13)
	.size ys_s87i_entry, .-ys_s87i_entry


==================== Asm code ====================
2018-03-16 15:54:45.463050528 UTC

.section .data.rel.ro
.align 8
.align 1
ys_s87i_info:
	.quad	ys_s87i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.463813702 UTC

.section .text
.align 8
go1_s87p_entry:
_cewX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cewY
_cewZ:
	movq $block_cewQ_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cewQ
_cewR:
	movq (%rbx),%rax
	jmp *(%rax)
_cewY:
	jmp *-8(%r13)
	.size go1_s87p_entry, .-go1_s87p_entry


==================== Asm code ====================
2018-03-16 15:54:45.464835039 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s87p_info:
	.quad	go1_s87p_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.465709795 UTC

.section .text
.align 8
_cewQ:
_cewQ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cewU
_cewV:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cexa
_cex9:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cexa:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_cewU:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cewQ, .-_cewQ


==================== Asm code ====================
2018-03-16 15:54:45.466440266 UTC

.section .data.rel.ro
.align 8
.align 1
block_cewQ_info:
	.quad	_cewQ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.467193189 UTC

.section .text
.align 8
go_s87j_entry:
_cexg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cexh
_cexi:
	movq $block_cewE_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cewE
_cewF:
	movq (%rbx),%rax
	jmp *(%rax)
_cexh:
	jmp *-8(%r13)
	.size go_s87j_entry, .-go_s87j_entry


==================== Asm code ====================
2018-03-16 15:54:45.467842405 UTC

.section .data.rel.ro
.align 8
.align 1
go_s87j_info:
	.quad	go_s87j_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.468635937 UTC

.section .text
.align 8
_cewE:
_cewE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cexd
_cexe:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cexn
_cexm:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $go1_s87p_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_s87p_entry
_cexn:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cexd:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cewE, .-_cewE


==================== Asm code ====================
2018-03-16 15:54:45.469347781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cewE_info:
	.quad	_cewE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.470133196 UTC

.section .text
.align 8
some_v_s87h_entry:
_cexp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cexq
_cexr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cext
_cexs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $ys_s87i_info,-32(%r12)
	movq %rbx,-16(%r12)
	movq $go_s87j_info,-8(%r12)
	leaq -32(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp go_s87j_entry
_cext:
	movq $40,904(%r13)
_cexq:
	jmp *-16(%r13)
	.size some_v_s87h_entry, .-some_v_s87h_entry


==================== Asm code ====================
2018-03-16 15:54:45.470808422 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_s87h_info:
	.quad	some_v_s87h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.471482867 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternative[]_$csome_entry
.type GHC.Base.$fAlternative[]_$csome_entry, @object
GHC.Base.$fAlternative[]_$csome_entry:
_cexu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cexy
_cexx:
	movq $some_v_s87h_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_cexy:
	movq $24,904(%r13)
	movl $GHC.Base.$fAlternative[]_$csome_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternative[]_$csome_entry, .-GHC.Base.$fAlternative[]_$csome_entry


==================== Asm code ====================
2018-03-16 15:54:45.47210025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$csome_info
.type GHC.Base.$fAlternative[]_$csome_info, @object
GHC.Base.$fAlternative[]_$csome_info:
	.quad	GHC.Base.$fAlternative[]_$csome_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.479543569 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$cmany_closure
.type GHC.Base.$fAlternative[]_$cmany_closure, @object
GHC.Base.$fAlternative[]_$cmany_closure:
	.quad	GHC.Base.$fAlternative[]_$cmany_info


==================== Asm code ====================
2018-03-16 15:54:45.480405644 UTC

.section .text
.align 8
go1_s87E_entry:
_ceyO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceyP
_ceyQ:
	movq $block_ceyH_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceyH
_ceyI:
	movq (%rbx),%rax
	jmp *(%rax)
_ceyP:
	jmp *-8(%r13)
	.size go1_s87E_entry, .-go1_s87E_entry


==================== Asm code ====================
2018-03-16 15:54:45.481073593 UTC

.section .data.rel.ro
.align 8
.align 1
go1_s87E_info:
	.quad	go1_s87E_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.482190052 UTC

.section .text
.align 8
_ceyH:
_ceyH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceyL
_ceyM:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cez1
_cez0:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cez1:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_ceyL:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceyH, .-_ceyH


==================== Asm code ====================
2018-03-16 15:54:45.482884197 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceyH_info:
	.quad	_ceyH
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.483562414 UTC

.section .text
.align 8
go_s87y_entry:
_cez7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cez8
_cez9:
	movq $block_ceyv_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceyv
_ceyw:
	movq (%rbx),%rax
	jmp *(%rax)
_cez8:
	jmp *-8(%r13)
	.size go_s87y_entry, .-go_s87y_entry


==================== Asm code ====================
2018-03-16 15:54:45.484204895 UTC

.section .data.rel.ro
.align 8
.align 1
go_s87y_info:
	.quad	go_s87y_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.484992424 UTC

.section .text
.align 8
_ceyv:
_ceyv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cez4
_cez5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ceze
_cezd:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $go1_s87E_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_s87E_entry
_ceze:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cez4:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceyv, .-_ceyv


==================== Asm code ====================
2018-03-16 15:54:45.485737422 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceyv_info:
	.quad	_ceyv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.486455506 UTC

.section .text
.align 8
many_v_s87x_entry:
_cezi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cezj
_cezk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cezm
_cezl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $go_s87y_info,-8(%r12)
	movq %rbx,(%r12)
	movq $block_cezg_info,-24(%rbp)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $-24,%rbp
	jmp go_s87y_entry
_cezm:
	movq $16,904(%r13)
_cezj:
	jmp *-16(%r13)
	.size many_v_s87x_entry, .-many_v_s87x_entry


==================== Asm code ====================
2018-03-16 15:54:45.487120819 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_s87x_info:
	.quad	many_v_s87x_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.487735583 UTC

.section .text
.align 8
_cezg:
_cezg:
	movl $GHC.Base.$fAlternative[]1_closure+2,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
	.size _cezg, .-_cezg


==================== Asm code ====================
2018-03-16 15:54:45.488307099 UTC

.section .data.rel.ro
.align 8
.align 1
block_cezg_info:
	.quad	_cezg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.489016883 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternative[]_$cmany_entry
.type GHC.Base.$fAlternative[]_$cmany_entry, @object
GHC.Base.$fAlternative[]_$cmany_entry:
_cezq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cezu
_cezt:
	movq $many_v_s87x_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_cezu:
	movq $24,904(%r13)
	movl $GHC.Base.$fAlternative[]_$cmany_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternative[]_$cmany_entry, .-GHC.Base.$fAlternative[]_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:45.490013981 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$cmany_info
.type GHC.Base.$fAlternative[]_$cmany_info, @object
GHC.Base.$fAlternative[]_$cmany_info:
	.quad	GHC.Base.$fAlternative[]_$cmany_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.491905695 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_closure
.type GHC.Base.$fAlternative[]_closure, @object
GHC.Base.$fAlternative[]_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicative[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fAlternative[]_$csome_closure+1
	.quad	GHC.Base.$fAlternative[]_$cmany_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.500503283 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c>>=_closure
.type GHC.Base.$w$c>>=_closure, @object
GHC.Base.$w$c>>=_closure:
	.quad	GHC.Base.$w$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.501376355 UTC

.section .text
.align 8
ds_s87O_entry:
_ceAm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceAn
_ceAo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceAq
_ceAp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ceAq:
	movq $24,904(%r13)
_ceAn:
	jmp *-16(%r13)
	.size ds_s87O_entry, .-ds_s87O_entry


==================== Asm code ====================
2018-03-16 15:54:45.502012811 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s87O_info:
	.quad	ds_s87O_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.502719109 UTC

.section .text
.align 8
sat_s88i_entry:
_ceAZ:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_s883_entry
	.size sat_s88i_entry, .-sat_s88i_entry


==================== Asm code ====================
2018-03-16 15:54:45.503297925 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88i_info:
	.quad	sat_s88i_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.504027806 UTC

.section .text
.align 8
go_s883_entry:
_ceB6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceB7
_ceB8:
	movq $block_ceAO_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceAO
_ceAP:
	movq (%rbx),%rax
	jmp *(%rax)
_ceB7:
	jmp *-8(%r13)
	.size go_s883_entry, .-go_s883_entry


==================== Asm code ====================
2018-03-16 15:54:45.504716327 UTC

.section .data.rel.ro
.align 8
.align 1
go_s883_info:
	.quad	go_s883_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.50591004 UTC

.section .text
.align 8
_ceAO:
_ceAO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceB3
_ceB4:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _ceBg
_ceBf:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-128(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-112(%r12)
	movq %rax,-104(%r12)
	movq $sat_s88i_info,-96(%r12)
	movq 16(%rbp),%rax
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	movq $stg_sel_1_upd_info,-64(%r12)
	leaq -128(%r12),%rax
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -96(%r12),%rsi
	leaq -14(%r12),%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_ceBg:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
_ceB3:
	movl $[]_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceAO, .-_ceAO


==================== Asm code ====================
2018-03-16 15:54:45.50668304 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceAO_info:
	.quad	_ceAO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.507393342 UTC

.section .text
.align 8
sat_s88j_entry:
_ceBi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceBj
_ceBk:
	movq $block_ceAE_info,-16(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ceAE
_ceAF:
	movq (%rbx),%rax
	jmp *(%rax)
_ceBj:
	jmp *-16(%r13)
	.size sat_s88j_entry, .-sat_s88j_entry


==================== Asm code ====================
2018-03-16 15:54:45.508403808 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88j_info:
	.quad	sat_s88j_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.509063336 UTC

.section .text
.align 8
_ceAE:
_ceAE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceBn
_ceBm:
	movq 15(%rbx),%rax
	movq $go_s883_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp go_s883_entry
_ceBn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ceAE, .-_ceAE


==================== Asm code ====================
2018-03-16 15:54:45.509714947 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceAE_info:
	.quad	_ceAE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.510430327 UTC

.section .text
.align 8
sat_s88k_entry:
_ceBp:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceBq
_ceBr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ceAv_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ceAv
_ceAw:
	movq (%rbx),%rax
	jmp *(%rax)
_ceBq:
	jmp *-16(%r13)
	.size sat_s88k_entry, .-sat_s88k_entry


==================== Asm code ====================
2018-03-16 15:54:45.51109495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88k_info:
	.quad	sat_s88k_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.511748575 UTC

.section .text
.align 8
_ceAv:
_ceAv:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ceBu
_ceBt:
	movq 15(%rbx),%rax
	movq $sat_s88j_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_ceBu:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ceAv, .-_ceAv


==================== Asm code ====================
2018-03-16 15:54:45.512357066 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceAv_info:
	.quad	_ceAv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.513096023 UTC

.section .text
.align 8
.globl GHC.Base.$w$c>>=_entry
.type GHC.Base.$w$c>>=_entry, @object
GHC.Base.$w$c>>=_entry:
_ceBx:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ceBB
_ceBA:
	movq $ds_s87O_info,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq $sat_s88k_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ceBB:
	movq $96,904(%r13)
	movl $GHC.Base.$w$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c>>=_entry, .-GHC.Base.$w$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.513869358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c>>=_info
.type GHC.Base.$w$c>>=_info, @object
GHC.Base.$w$c>>=_info:
	.quad	GHC.Base.$w$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.516865591 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>=_closure
.type GHC.Base.$fMonadNonEmpty_$c>>=_closure, @object
GHC.Base.$fMonadNonEmpty_$c>>=_closure:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.517607004 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadNonEmpty_$c>>=_entry
.type GHC.Base.$fMonadNonEmpty_$c>>=_entry, @object
GHC.Base.$fMonadNonEmpty_$c>>=_entry:
_ceCt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceCu
_ceCv:
	movq $block_ceCq_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_ceCu:
	movl $GHC.Base.$fMonadNonEmpty_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadNonEmpty_$c>>=_entry, .-GHC.Base.$fMonadNonEmpty_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.518211265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>=_info
.type GHC.Base.$fMonadNonEmpty_$c>>=_info, @object
GHC.Base.$fMonadNonEmpty_$c>>=_info:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.518946392 UTC

.section .text
.align 8
_ceCq:
_ceCq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceCy
_ceCx:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceCy:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ceCq, .-_ceCq


==================== Asm code ====================
2018-03-16 15:54:45.51953764 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceCq_info:
	.quad	_ceCq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.523571657 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>_closure
.type GHC.Base.$fMonadNonEmpty_$c>>_closure, @object
GHC.Base.$fMonadNonEmpty_$c>>_closure:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:45.524213695 UTC

.section .text
.align 8
sat_s88t_entry:
_ceCR:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size sat_s88t_entry, .-sat_s88t_entry


==================== Asm code ====================
2018-03-16 15:54:45.524764024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88t_info:
	.quad	sat_s88t_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.525574011 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadNonEmpty_$c>>_entry
.type GHC.Base.$fMonadNonEmpty_$c>>_entry, @object
GHC.Base.$fMonadNonEmpty_$c>>_entry:
_ceCX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceCY
_ceCZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceD1
_ceD0:
	movq $sat_s88t_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_ceCU_info,-8(%rbp)
	leaq -7(%r12),%rsi
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_ceD1:
	movq $16,904(%r13)
_ceCY:
	movl $GHC.Base.$fMonadNonEmpty_$c>>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadNonEmpty_$c>>_entry, .-GHC.Base.$fMonadNonEmpty_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:45.526274552 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>_info
.type GHC.Base.$fMonadNonEmpty_$c>>_info, @object
GHC.Base.$fMonadNonEmpty_$c>>_info:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.526938634 UTC

.section .text
.align 8
_ceCU:
_ceCU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceD4
_ceD3:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceD4:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ceCU, .-_ceCU


==================== Asm code ====================
2018-03-16 15:54:45.527541202 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceCU_info:
	.quad	_ceCU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.529706853 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<**>1_closure
.type GHC.Base.<**>1_closure, @object
GHC.Base.<**>1_closure:
	.quad	GHC.Base.<**>1_info


==================== Asm code ====================
2018-03-16 15:54:45.530321182 UTC

.section .text
.align 8
.globl GHC.Base.<**>1_entry
.type GHC.Base.<**>1_entry, @object
GHC.Base.<**>1_entry:
_ceDn:
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.Base.<**>1_entry, .-GHC.Base.<**>1_entry


==================== Asm code ====================
2018-03-16 15:54:45.530893948 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<**>1_info
.type GHC.Base.<**>1_info, @object
GHC.Base.<**>1_info:
	.quad	GHC.Base.<**>1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.533133483 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<**>_closure
.type GHC.Base.<**>_closure, @object
GHC.Base.<**>_closure:
	.quad	GHC.Base.<**>_info


==================== Asm code ====================
2018-03-16 15:54:45.53389699 UTC

.section .text
.align 8
.globl GHC.Base.<**>_entry
.type GHC.Base.<**>_entry, @object
GHC.Base.<**>_entry:
_ceDy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceDz
_ceDA:
	movq $stg_ap_p_info,-16(%rbp)
	movq $GHC.Base.<**>1_closure+2,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_ceDz:
	movl $GHC.Base.<**>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.<**>_entry, .-GHC.Base.<**>_entry


==================== Asm code ====================
2018-03-16 15:54:45.534522472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<**>_info
.type GHC.Base.<**>_info, @object
GHC.Base.<**>_info:
	.quad	GHC.Base.<**>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.538527311 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmliftA2_closure
.type GHC.Base.$dmliftA2_closure, @object
GHC.Base.$dmliftA2_closure:
	.quad	GHC.Base.$dmliftA2_info


==================== Asm code ====================
2018-03-16 15:54:45.539287947 UTC

.section .text
.align 8
sat_s88E_entry:
_ceDQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceDR
_ceDS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ceDO_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Applicative_entry
_ceDR:
	jmp *-16(%r13)
	.size sat_s88E_entry, .-sat_s88E_entry


==================== Asm code ====================
2018-03-16 15:54:45.539940744 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88E_info:
	.quad	sat_s88E_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.540534117 UTC

.section .text
.align 8
_ceDO:
_ceDO:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.fmap_entry
	.size _ceDO, .-_ceDO


==================== Asm code ====================
2018-03-16 15:54:45.541077831 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceDO_info:
	.quad	_ceDO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.542367398 UTC

.section .text
.align 8
.globl GHC.Base.$dmliftA2_entry
.type GHC.Base.$dmliftA2_entry, @object
GHC.Base.$dmliftA2_entry:
_ceDW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceDX
_ceDY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ceE0
_ceDZ:
	movq $sat_s88E_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.<*>_entry
_ceE0:
	movq $40,904(%r13)
_ceDX:
	movl $GHC.Base.$dmliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmliftA2_entry, .-GHC.Base.$dmliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:45.543032987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmliftA2_info
.type GHC.Base.$dmliftA2_info, @object
GHC.Base.$dmliftA2_info:
	.quad	GHC.Base.$dmliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.548263633 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmsome_closure
.type GHC.Base.$dmsome_closure, @object
GHC.Base.$dmsome_closure:
	.quad	GHC.Base.$dmsome_info


==================== Asm code ====================
2018-03-16 15:54:45.549083791 UTC

.section .text
.align 8
sat_s88J_entry:
_ceEA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceEB
_ceEC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_ceEB:
	jmp *-16(%r13)
	.size sat_s88J_entry, .-sat_s88J_entry


==================== Asm code ====================
2018-03-16 15:54:45.549832318 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88J_info:
	.quad	sat_s88J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.551006753 UTC

.section .text
.align 8
sat_s88K_entry:
_ceED:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceEE
_ceEF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceEH
_ceEG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s88J_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_ceEH:
	movq $24,904(%r13)
_ceEE:
	jmp *-16(%r13)
	.size sat_s88K_entry, .-sat_s88K_entry


==================== Asm code ====================
2018-03-16 15:54:45.551698387 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88K_info:
	.quad	sat_s88K_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.552421831 UTC

.section .text
.align 8
some_v_s88H_entry:
_ceEI:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ceEJ
_ceEK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ceEo_info,-48(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.$p1Alternative_entry
_ceEJ:
	jmp *-16(%r13)
	.size some_v_s88H_entry, .-some_v_s88H_entry


==================== Asm code ====================
2018-03-16 15:54:45.553061009 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_s88H_info:
	.quad	some_v_s88H_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.55410786 UTC

.section .text
.align 8
_ceEo:
_ceEo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ceEN
_ceEM:
	movq $sat_s88K_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_ppp_info,(%rbp)
	movq $GHC.Types.:_closure+2,8(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Base.liftA2_entry
_ceEN:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ceEo, .-_ceEo


==================== Asm code ====================
2018-03-16 15:54:45.554743862 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceEo_info:
	.quad	_ceEo
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.5554363 UTC

.section .text
.align 8
.globl GHC.Base.$dmsome_entry
.type GHC.Base.$dmsome_entry, @object
GHC.Base.$dmsome_entry:
_ceEO:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ceES
_ceER:
	movq $some_v_s88H_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp stg_ap_0_fast
_ceES:
	movq $32,904(%r13)
	movl $GHC.Base.$dmsome_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmsome_entry, .-GHC.Base.$dmsome_entry


==================== Asm code ====================
2018-03-16 15:54:45.555992277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmsome_info
.type GHC.Base.$dmsome_info, @object
GHC.Base.$dmsome_info:
	.quad	GHC.Base.$dmsome_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.561144716 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmany_closure
.type GHC.Base.$dmmany_closure, @object
GHC.Base.$dmmany_closure:
	.quad	GHC.Base.$dmmany_info


==================== Asm code ====================
2018-03-16 15:54:45.561945151 UTC

.section .text
.align 8
$dApplicative_s88O_entry:
_ceFt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceFu
_ceFv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Alternative_entry
_ceFu:
	jmp *-16(%r13)
	.size $dApplicative_s88O_entry, .-$dApplicative_s88O_entry


==================== Asm code ====================
2018-03-16 15:54:45.562569252 UTC

.section .data.rel.ro
.align 8
.align 1
$dApplicative_s88O_info:
	.quad	$dApplicative_s88O_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.563255626 UTC

.section .text
.align 8
sat_s88Q_entry:
_ceFA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceFB
_ceFC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Types.[]_closure+1,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_ceFB:
	jmp *-16(%r13)
	.size sat_s88Q_entry, .-sat_s88Q_entry


==================== Asm code ====================
2018-03-16 15:54:45.563969438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88Q_info:
	.quad	sat_s88Q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.565069406 UTC

.section .text
.align 8
sat_s88P_entry:
_ceFH:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ceFI
_ceFJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq $GHC.Types.:_closure+2,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_ceFI:
	jmp *-16(%r13)
	.size sat_s88P_entry, .-sat_s88P_entry


==================== Asm code ====================
2018-03-16 15:54:45.565751928 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s88P_info:
	.quad	sat_s88P_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.56655341 UTC

.section .text
.align 8
many_v_s88N_entry:
_ceFK:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceFL
_ceFM:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ceFO
_ceFN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq $$dApplicative_s88O_info,-80(%r12)
	movq %rax,-64(%r12)
	movq $sat_s88Q_info,-56(%r12)
	leaq -80(%r12),%rdx
	movq %rdx,-40(%r12)
	movq $sat_s88P_info,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_ceFO:
	movq $88,904(%r13)
_ceFL:
	jmp *-16(%r13)
	.size many_v_s88N_entry, .-many_v_s88N_entry


==================== Asm code ====================
2018-03-16 15:54:45.56730712 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_s88N_info:
	.quad	many_v_s88N_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:45.567977148 UTC

.section .text
.align 8
.globl GHC.Base.$dmmany_entry
.type GHC.Base.$dmmany_entry, @object
GHC.Base.$dmmany_entry:
_ceFP:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ceFT
_ceFS:
	movq $many_v_s88N_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp stg_ap_0_fast
_ceFT:
	movq $32,904(%r13)
	movl $GHC.Base.$dmmany_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmmany_entry, .-GHC.Base.$dmmany_entry


==================== Asm code ====================
2018-03-16 15:54:45.568597039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmany_info
.type GHC.Base.$dmmany_info, @object
GHC.Base.$dmmany_info:
	.quad	GHC.Base.$dmmany_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.574241112 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat3_closure
.type GHC.Base.$w$csconcat3_closure, @object
GHC.Base.$w$csconcat3_closure:
	.quad	GHC.Base.$w$csconcat3_info


==================== Asm code ====================
2018-03-16 15:54:45.575095065 UTC

.section .text
.align 8
sat_s894_entry:
_ceGF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceGG
_ceGH:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ceGJ
_ceGI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $stg_ap_2_upd_info,-56(%r12)
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<>_entry
_ceGJ:
	movq $64,904(%r13)
_ceGG:
	jmp *-8(%r13)
	.size sat_s894_entry, .-sat_s894_entry


==================== Asm code ====================
2018-03-16 15:54:45.575810578 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s894_info:
	.quad	sat_s894_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.576581826 UTC

.section .text
.align 8
go_s88U_entry:
_ceGO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceGP
_ceGQ:
	movq $block_ceGr_info,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceGr
_ceGs:
	movq (%rbx),%rax
	jmp *(%rax)
_ceGP:
	jmp *-8(%r13)
	.size go_s88U_entry, .-go_s88U_entry


==================== Asm code ====================
2018-03-16 15:54:45.577225932 UTC

.section .data.rel.ro
.align 8
.align 1
go_s88U_info:
	.quad	go_s88U_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.578297726 UTC

.section .text
.align 8
_ceGr:
_ceGr:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceGL
_ceGM:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ceGV
_ceGU:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $stg_ap_3_upd_info,-64(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $sat_s894_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceGV:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_ceGL:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _ceGr, .-_ceGr


==================== Asm code ====================
2018-03-16 15:54:45.579432775 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceGr_info:
	.quad	_ceGr
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.580135258 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat3_entry
.type GHC.Base.$w$csconcat3_entry, @object
GHC.Base.$w$csconcat3_entry:
_ceGX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceH1
_ceH0:
	movq $go_s88U_info,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	jmp go_s88U_entry
_ceH1:
	movq $16,904(%r13)
	movl $GHC.Base.$w$csconcat3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat3_entry, .-GHC.Base.$w$csconcat3_entry


==================== Asm code ====================
2018-03-16 15:54:45.58079987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat3_info
.type GHC.Base.$w$csconcat3_info, @object
GHC.Base.$w$csconcat3_info:
	.quad	GHC.Base.$w$csconcat3_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.583728088 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$csconcat_closure
.type GHC.Base.$fSemigroup(->)_$csconcat_closure, @object
GHC.Base.$fSemigroup(->)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(->)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.584472669 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$csconcat_entry
.type GHC.Base.$fSemigroup(->)_$csconcat_entry, @object
GHC.Base.$fSemigroup(->)_$csconcat_entry:
_ceHx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceHy
_ceHz:
	movq $block_ceHu_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ceHu
_ceHv:
	movq (%rbx),%rax
	jmp *(%rax)
_ceHy:
	movl $GHC.Base.$fSemigroup(->)_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$csconcat_entry, .-GHC.Base.$fSemigroup(->)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.585099641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$csconcat_info
.type GHC.Base.$fSemigroup(->)_$csconcat_info, @object
GHC.Base.$fSemigroup(->)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(->)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.585782622 UTC

.section .text
.align 8
_ceHu:
_ceHu:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat3_entry
	.size _ceHu, .-_ceHu


==================== Asm code ====================
2018-03-16 15:54:45.586392189 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceHu_info:
	.quad	_ceHu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.593515795 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat_closure
.type GHC.Base.$w$csconcat_closure, @object
GHC.Base.$w$csconcat_closure:
	.quad	GHC.Base.$w$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.594323183 UTC

.section .text
.align 8
sat_s89t_entry:
_ceId:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceIe
_ceIf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ceIe:
	jmp *-16(%r13)
	.size sat_s89t_entry, .-sat_s89t_entry


==================== Asm code ====================
2018-03-16 15:54:45.594977568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s89t_info:
	.quad	sat_s89t_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.595658715 UTC

.section .text
.align 8
sat_s89s_entry:
_ceIk:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ceIl
_ceIm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ceIl:
	jmp *-16(%r13)
	.size sat_s89s_entry, .-sat_s89s_entry


==================== Asm code ====================
2018-03-16 15:54:45.59626283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s89s_info:
	.quad	sat_s89s_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.597014697 UTC

.section .text
.align 8
$wgo_s89f_entry:
_ceIr:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ceIs
_ceIt:
	movq $block_ceHW_info,-48(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rdi,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ceHW
_ceHX:
	movq (%rbx),%rax
	jmp *(%rax)
_ceIs:
	jmp *-8(%r13)
	.size $wgo_s89f_entry, .-$wgo_s89f_entry


==================== Asm code ====================
2018-03-16 15:54:45.599783789 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s89f_info:
	.quad	$wgo_s89f_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.600724889 UTC

.section .text
.align 8
_ceHW:
_ceHW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceIo
_ceIp:
	movq $block_ceI2_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ceI2
_ceI3:
	movq (%rbx),%rax
	jmp *(%rax)
_ceIo:
	movq 40(%rbp),%r14
	movq 32(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceHW, .-_ceHW


==================== Asm code ====================
2018-03-16 15:54:45.602064614 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceHW_info:
	.quad	_ceHW
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.603089271 UTC

.section .text
.align 8
_ceI2:
_ceI2:
	movq 8(%rbp),%rax
	movq $block_ceI7_info,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 32(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_s89f_entry
	.size _ceI2, .-_ceI2


==================== Asm code ====================
2018-03-16 15:54:45.603736048 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceI2_info:
	.quad	_ceI2
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.604835256 UTC

.section .text
.align 8
_ceI7:
_ceI7:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ceIA
_ceIz:
	movq $sat_s89t_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 40(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s89s_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceIA:
	movq $80,904(%r13)
	jmp stg_gc_pp
	.size _ceI7, .-_ceI7


==================== Asm code ====================
2018-03-16 15:54:45.605758757 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceI7_info:
	.quad	_ceI7
	.quad	261
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.606884015 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat_entry
.type GHC.Base.$w$csconcat_entry, @object
GHC.Base.$w$csconcat_entry:
_ceID:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceIH
_ceIG:
	movq $$wgo_s89f_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq %rdi,%rax
	movq %r9,%rdi
	movq %r8,%rsi
	movq %rax,%r14
	leaq -13(%r12),%rbx
	jmp $wgo_s89f_entry
_ceIH:
	movq $24,904(%r13)
	movl $GHC.Base.$w$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat_entry, .-GHC.Base.$w$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.607837251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat_info
.type GHC.Base.$w$csconcat_info, @object
GHC.Base.$w$csconcat_info:
	.quad	GHC.Base.$w$csconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.61491623 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.616069288 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,)_$csconcat_entry:
_ceJs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceJD
_ceJE:
	movq $block_ceJp_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceJp
_ceJq:
	movq (%rbx),%rax
	jmp *(%rax)
_ceJD:
	movl $GHC.Base.$fSemigroup(,)_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.617066329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$csconcat_info
.type GHC.Base.$fSemigroup(,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.618371298 UTC

.section .text
.align 8
_ceJp:
_ceJp:
	movq $block_ceJv_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ceJv
_ceJw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceJp, .-_ceJp


==================== Asm code ====================
2018-03-16 15:54:45.619335717 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceJp_info:
	.quad	_ceJp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.620174245 UTC

.section .text
.align 8
_ceJv:
_ceJv:
	movq 24(%rbp),%rax
	movq $block_ceJA_info,24(%rbp)
	movq 8(%rbp),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Base.$w$csconcat_entry
	.size _ceJv, .-_ceJv


==================== Asm code ====================
2018-03-16 15:54:45.620802623 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceJv_info:
	.quad	_ceJv
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.621544745 UTC

.section .text
.align 8
_ceJA:
_ceJA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceJJ
_ceJI:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceJJ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ceJA, .-_ceJA


==================== Asm code ====================
2018-03-16 15:54:45.622190988 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceJA_info:
	.quad	_ceJA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.62724854 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmsconcat_closure
.type GHC.Base.$dmsconcat_closure, @object
GHC.Base.$dmsconcat_closure:
	.quad	GHC.Base.$dmsconcat_info


==================== Asm code ====================
2018-03-16 15:54:45.628058096 UTC

.section .text
.align 8
go_s89L_entry:
_ceKo:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceKp
_ceKq:
	movq $block_ceKh_info,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ceKh
_ceKi:
	movq (%rbx),%rax
	jmp *(%rax)
_ceKp:
	jmp *-8(%r13)
	.size go_s89L_entry, .-go_s89L_entry


==================== Asm code ====================
2018-03-16 15:54:45.628739982 UTC

.section .data.rel.ro
.align 8
.align 1
go_s89L_info:
	.quad	go_s89L_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.629611106 UTC

.section .text
.align 8
_ceKh:
_ceKh:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceKl
_ceKm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ceKy
_ceKx:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq $stg_ap_3_upd_info,-32(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,8(%rbp)
	movq %rax,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Base.<>_entry
_ceKy:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_ceKl:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _ceKh, .-_ceKh


==================== Asm code ====================
2018-03-16 15:54:45.630706887 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceKh_info:
	.quad	_ceKh
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.631429442 UTC

.section .text
.align 8
.globl GHC.Base.$dmsconcat_entry
.type GHC.Base.$dmsconcat_entry, @object
GHC.Base.$dmsconcat_entry:
_ceKB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceKC
_ceKD:
	movq $block_ceK7_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ceK7
_ceK8:
	movq (%rbx),%rax
	jmp *(%rax)
_ceKC:
	movl $GHC.Base.$dmsconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmsconcat_entry, .-GHC.Base.$dmsconcat_entry


==================== Asm code ====================
2018-03-16 15:54:45.632047391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmsconcat_info
.type GHC.Base.$dmsconcat_info, @object
GHC.Base.$dmsconcat_info:
	.quad	GHC.Base.$dmsconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.632783287 UTC

.section .text
.align 8
_ceK7:
_ceK7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceKG
_ceKF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $go_s89L_info,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	addq $16,%rbp
	jmp go_s89L_entry
_ceKG:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ceK7, .-_ceK7


==================== Asm code ====================
2018-03-16 15:54:45.633697183 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceK7_info:
	.quad	_ceK7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.63603988 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmstimes_closure
.type GHC.Base.$dmstimes_closure, @object
GHC.Base.$dmstimes_closure:
	.quad	GHC.Base.$dmstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.636676347 UTC

.section .text
.align 8
.globl GHC.Base.$dmstimes_entry
.type GHC.Base.$dmstimes_entry, @object
GHC.Base.$dmstimes_entry:
_ceL8:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	movl $Data.Semigroup.Internal.stimesDefault_closure,%ebx
	jmp stg_ap_pp_fast
	.size GHC.Base.$dmstimes_entry, .-GHC.Base.$dmstimes_entry


==================== Asm code ====================
2018-03-16 15:54:45.637275817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmstimes_info
.type GHC.Base.$dmstimes_info, @object
GHC.Base.$dmstimes_info:
	.quad	GHC.Base.$dmstimes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8R0_srt+16


==================== Asm code ====================
2018-03-16 15:54:45.639861778 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmappend_closure
.type GHC.Base.$dmmappend_closure, @object
GHC.Base.$dmmappend_closure:
	.quad	GHC.Base.$dmmappend_info


==================== Asm code ====================
2018-03-16 15:54:45.640557632 UTC

.section .text
.align 8
.globl GHC.Base.$dmmappend_entry
.type GHC.Base.$dmmappend_entry, @object
GHC.Base.$dmmappend_entry:
_ceLl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceLm
_ceLn:
	movq $block_ceLj_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ceLm:
	movl $GHC.Base.$dmmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmmappend_entry, .-GHC.Base.$dmmappend_entry


==================== Asm code ====================
2018-03-16 15:54:45.641181135 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmappend_info
.type GHC.Base.$dmmappend_info, @object
GHC.Base.$dmmappend_info:
	.quad	GHC.Base.$dmmappend_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.641825027 UTC

.section .text
.align 8
_ceLj:
_ceLj:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.<>_entry
	.size _ceLj, .-_ceLj


==================== Asm code ====================
2018-03-16 15:54:45.642406083 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceLj_info:
	.quad	_ceLj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.645832508 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm>>_closure
.type GHC.Base.$dm>>_closure, @object
GHC.Base.$dm>>_closure:
	.quad	GHC.Base.$dm>>_info


==================== Asm code ====================
2018-03-16 15:54:45.646434634 UTC

.section .text
.align 8
sat_s8a0_entry:
_ceLI:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s8a0_entry, .-sat_s8a0_entry


==================== Asm code ====================
2018-03-16 15:54:45.646997417 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a0_info:
	.quad	sat_s8a0_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.647797241 UTC

.section .text
.align 8
.globl GHC.Base.$dm>>_entry
.type GHC.Base.$dm>>_entry, @object
GHC.Base.$dm>>_entry:
_ceLL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceLM
_ceLN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ceLP
_ceLO:
	movq $sat_s8a0_info,-8(%r12)
	movq %rdi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ceLP:
	movq $16,904(%r13)
_ceLM:
	movl $GHC.Base.$dm>>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dm>>_entry, .-GHC.Base.$dm>>_entry


==================== Asm code ====================
2018-03-16 15:54:45.648505679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm>>_info
.type GHC.Base.$dm>>_info, @object
GHC.Base.$dm>>_info:
	.quad	GHC.Base.$dm>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.651299103 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmreturn_closure
.type GHC.Base.$dmreturn_closure, @object
GHC.Base.$dmreturn_closure:
	.quad	GHC.Base.$dmreturn_info


==================== Asm code ====================
2018-03-16 15:54:45.652000029 UTC

.section .text
.align 8
.globl GHC.Base.$dmreturn_entry
.type GHC.Base.$dmreturn_entry, @object
GHC.Base.$dmreturn_entry:
_ceM5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceM6
_ceM7:
	movq $block_ceM3_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monad_entry
_ceM6:
	movl $GHC.Base.$dmreturn_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmreturn_entry, .-GHC.Base.$dmreturn_entry


==================== Asm code ====================
2018-03-16 15:54:45.652605407 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmreturn_info
.type GHC.Base.$dmreturn_info, @object
GHC.Base.$dmreturn_info:
	.quad	GHC.Base.$dmreturn_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.653207498 UTC

.section .text
.align 8
_ceM3:
_ceM3:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.pure_entry
	.size _ceM3, .-_ceM3


==================== Asm code ====================
2018-03-16 15:54:45.65382447 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceM3_info:
	.quad	_ceM3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.655937239 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmfail_closure
.type GHC.Base.$dmfail_closure, @object
GHC.Base.$dmfail_closure:
	.quad	GHC.Base.$dmfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.656619274 UTC

.section .text
.align 8
.globl GHC.Base.$dmfail_entry
.type GHC.Base.$dmfail_entry, @object
GHC.Base.$dmfail_entry:
_ceMn:
	movq %rsi,%r14
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size GHC.Base.$dmfail_entry, .-GHC.Base.$dmfail_entry


==================== Asm code ====================
2018-03-16 15:54:45.657581046 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmfail_info
.type GHC.Base.$dmfail_info, @object
GHC.Base.$dmfail_info:
	.quad	GHC.Base.$dmfail_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8R0_srt+72


==================== Asm code ====================
2018-03-16 15:54:45.660210901 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmzero_closure
.type GHC.Base.$dmmzero_closure, @object
GHC.Base.$dmmzero_closure:
	.quad	GHC.Base.$dmmzero_info


==================== Asm code ====================
2018-03-16 15:54:45.660909123 UTC

.section .text
.align 8
.globl GHC.Base.$dmmzero_entry
.type GHC.Base.$dmmzero_entry, @object
GHC.Base.$dmmzero_entry:
_ceMA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceMB
_ceMC:
	movq $block_ceMy_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_ceMB:
	movl $GHC.Base.$dmmzero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmmzero_entry, .-GHC.Base.$dmmzero_entry


==================== Asm code ====================
2018-03-16 15:54:45.661753102 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmzero_info
.type GHC.Base.$dmmzero_info, @object
GHC.Base.$dmmzero_info:
	.quad	GHC.Base.$dmmzero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.662360052 UTC

.section .text
.align 8
_ceMy:
_ceMy:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.empty_entry
	.size _ceMy, .-_ceMy


==================== Asm code ====================
2018-03-16 15:54:45.662883727 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceMy_info:
	.quad	_ceMy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.665460509 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmplus_closure
.type GHC.Base.$dmmplus_closure, @object
GHC.Base.$dmmplus_closure:
	.quad	GHC.Base.$dmmplus_info


==================== Asm code ====================
2018-03-16 15:54:45.666161122 UTC

.section .text
.align 8
.globl GHC.Base.$dmmplus_entry
.type GHC.Base.$dmmplus_entry, @object
GHC.Base.$dmmplus_entry:
_ceMU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ceMV
_ceMW:
	movq $block_ceMS_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_ceMV:
	movl $GHC.Base.$dmmplus_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$dmmplus_entry, .-GHC.Base.$dmmplus_entry


==================== Asm code ====================
2018-03-16 15:54:45.66677943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmplus_info
.type GHC.Base.$dmmplus_info, @object
GHC.Base.$dmmplus_info:
	.quad	GHC.Base.$dmmplus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.667387891 UTC

.section .text
.align 8
_ceMS:
_ceMS:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.<|>_entry
	.size _ceMS, .-_ceMS


==================== Asm code ====================
2018-03-16 15:54:45.667961544 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceMS_info:
	.quad	_ceMS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.672773504 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c==_closure
.type GHC.Base.$fEqMaybe_$c==_closure, @object
GHC.Base.$fEqMaybe_$c==_closure:
	.quad	GHC.Base.$fEqMaybe_$c==_info


==================== Asm code ====================
2018-03-16 15:54:45.673954834 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_$c==_entry
.type GHC.Base.$fEqMaybe_$c==_entry, @object
GHC.Base.$fEqMaybe_$c==_entry:
_ceNj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceNk
_ceNl:
	movq $block_ceNc_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceNc
_ceNd:
	movq (%rbx),%rax
	jmp *(%rax)
_ceNk:
	movl $GHC.Base.$fEqMaybe_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_$c==_entry, .-GHC.Base.$fEqMaybe_$c==_entry


==================== Asm code ====================
2018-03-16 15:54:45.67459391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c==_info
.type GHC.Base.$fEqMaybe_$c==_info, @object
GHC.Base.$fEqMaybe_$c==_info:
	.quad	GHC.Base.$fEqMaybe_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.67539074 UTC

.section .text
.align 8
_ceNc:
_ceNc:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceNg
_ceNh:
	movq $block_ceND_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceND
_ceNF:
	movq (%rbx),%rax
	jmp *(%rax)
_ceNg:
	movq $block_ceNo_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceNo
_ceNq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceNc, .-_ceNc


==================== Asm code ====================
2018-03-16 15:54:45.676034263 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceNc_info:
	.quad	_ceNc
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.676713443 UTC

.section .text
.align 8
_ceNo:
_ceNo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ceNw
_ueNT:
	addq $8,%rbp
	jmp _ceNL
_ceNw:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceNo, .-_ceNo


==================== Asm code ====================
2018-03-16 15:54:45.677354079 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceNo_info:
	.quad	_ceNo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.67804248 UTC

.section .text
.align 8
_ceND:
_ceND:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ueNS
_ceNP:
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.Classes.==_entry
_ueNS:
	addq $24,%rbp
	jmp _ceNL
	.size _ceND, .-_ceND


==================== Asm code ====================
2018-03-16 15:54:45.678627005 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceND_info:
	.quad	_ceND
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.679190752 UTC

.section .text
.align 8
_ceNL:
_ceNL:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceNL, .-_ceNL


==================== Asm code ====================
2018-03-16 15:54:45.684144557 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c/=_closure
.type GHC.Base.$fEqMaybe_$c/=_closure, @object
GHC.Base.$fEqMaybe_$c/=_closure:
	.quad	GHC.Base.$fEqMaybe_$c/=_info


==================== Asm code ====================
2018-03-16 15:54:45.684887595 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_$c/=_entry
.type GHC.Base.$fEqMaybe_$c/=_entry, @object
GHC.Base.$fEqMaybe_$c/=_entry:
_ceOD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceOE
_ceOF:
	movq $block_ceOw_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceOw
_ceOx:
	movq (%rbx),%rax
	jmp *(%rax)
_ceOE:
	movl $GHC.Base.$fEqMaybe_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_$c/=_entry, .-GHC.Base.$fEqMaybe_$c/=_entry


==================== Asm code ====================
2018-03-16 15:54:45.685542658 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c/=_info
.type GHC.Base.$fEqMaybe_$c/=_info, @object
GHC.Base.$fEqMaybe_$c/=_info:
	.quad	GHC.Base.$fEqMaybe_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.686740232 UTC

.section .text
.align 8
_ceOw:
_ceOw:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceOA
_ceOB:
	movq $block_ceOX_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceOX
_ceOZ:
	movq (%rbx),%rax
	jmp *(%rax)
_ceOA:
	movq $block_ceOI_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceOI
_ceOK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceOw, .-_ceOw


==================== Asm code ====================
2018-03-16 15:54:45.687409786 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceOw_info:
	.quad	_ceOw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.688016019 UTC

.section .text
.align 8
_ceOI:
_ceOI:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uePr
_uePs:
	addq $8,%rbp
	jmp _cePg
_uePr:
	addq $8,%rbp
	jmp _cePk
	.size _ceOI, .-_ceOI


==================== Asm code ====================
2018-03-16 15:54:45.688591154 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceOI_info:
	.quad	_ceOI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.689571986 UTC

.section .text
.align 8
_ceOX:
_ceOX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uePo
_cePa:
	movq 16(%rbp),%rax
	movq $block_ceP8_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.==_entry
_uePo:
	addq $24,%rbp
	jmp _cePg
	.size _ceOX, .-_ceOX


==================== Asm code ====================
2018-03-16 15:54:45.690221366 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceOX_info:
	.quad	_ceOX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.690861057 UTC

.section .text
.align 8
_ceP8:
_ceP8:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uePp
_uePq:
	addq $8,%rbp
	jmp _cePk
_uePp:
	addq $8,%rbp
	jmp _cePg
	.size _ceP8, .-_ceP8


==================== Asm code ====================
2018-03-16 15:54:45.691444375 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceP8_info:
	.quad	_ceP8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.692019297 UTC

.section .text
.align 8
_cePg:
_cePg:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cePg, .-_cePg


==================== Asm code ====================
2018-03-16 15:54:45.692627579 UTC

.section .text
.align 8
_cePk:
_cePk:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cePk, .-_cePk


==================== Asm code ====================
2018-03-16 15:54:45.696066773 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_closure
.type GHC.Base.$fEqMaybe_closure, @object
GHC.Base.$fEqMaybe_closure:
	.quad	GHC.Base.$fEqMaybe_info


==================== Asm code ====================
2018-03-16 15:54:45.696674524 UTC

.section .text
.align 8
sat_s8au_entry:
_ceQj:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqMaybe_$c/=_entry
	.size sat_s8au_entry, .-sat_s8au_entry


==================== Asm code ====================
2018-03-16 15:54:45.697269006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8au_info:
	.quad	sat_s8au_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.697879425 UTC

.section .text
.align 8
sat_s8at_entry:
_ceQr:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqMaybe_$c==_entry
	.size sat_s8at_entry, .-sat_s8at_entry


==================== Asm code ====================
2018-03-16 15:54:45.698438903 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8at_info:
	.quad	sat_s8at_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.699245318 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_entry
.type GHC.Base.$fEqMaybe_entry, @object
GHC.Base.$fEqMaybe_entry:
_ceQv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ceQz
_ceQy:
	movq $sat_s8au_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s8at_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Classes.C:Eq_con_info,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ceQz:
	movq $56,904(%r13)
	movl $GHC.Base.$fEqMaybe_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_entry, .-GHC.Base.$fEqMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:45.699957318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_info
.type GHC.Base.$fEqMaybe_info, @object
GHC.Base.$fEqMaybe_info:
	.quad	GHC.Base.$fEqMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.70323438 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cp1Ord_closure
.type GHC.Base.$fOrdMaybe_$cp1Ord_closure, @object
GHC.Base.$fOrdMaybe_$cp1Ord_closure:
	.quad	GHC.Base.$fOrdMaybe_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:54:45.703932309 UTC

.section .text
.align 8
sat_s8aw_entry:
_ceQV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ceQW
_ceQX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.$p1Ord_entry
_ceQW:
	jmp *-16(%r13)
	.size sat_s8aw_entry, .-sat_s8aw_entry


==================== Asm code ====================
2018-03-16 15:54:45.704519608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8aw_info:
	.quad	sat_s8aw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.705204026 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cp1Ord_entry
.type GHC.Base.$fOrdMaybe_$cp1Ord_entry, @object
GHC.Base.$fOrdMaybe_$cp1Ord_entry:
_ceQY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ceR2
_ceR1:
	movq $sat_s8aw_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fEqMaybe_entry
_ceR2:
	movq $24,904(%r13)
	movl $GHC.Base.$fOrdMaybe_$cp1Ord_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cp1Ord_entry, .-GHC.Base.$fOrdMaybe_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:54:45.70618415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cp1Ord_info
.type GHC.Base.$fOrdMaybe_$cp1Ord_info, @object
GHC.Base.$fOrdMaybe_$cp1Ord_info:
	.quad	GHC.Base.$fOrdMaybe_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.710436102 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$ccompare_closure
.type GHC.Base.$fOrdMaybe_$ccompare_closure, @object
GHC.Base.$fOrdMaybe_$ccompare_closure:
	.quad	GHC.Base.$fOrdMaybe_$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:45.711217119 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$ccompare_entry
.type GHC.Base.$fOrdMaybe_$ccompare_entry, @object
GHC.Base.$fOrdMaybe_$ccompare_entry:
_ceRm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceRn
_ceRo:
	movq $block_ceRf_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceRf
_ceRg:
	movq (%rbx),%rax
	jmp *(%rax)
_ceRn:
	movl $GHC.Base.$fOrdMaybe_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$ccompare_entry, .-GHC.Base.$fOrdMaybe_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:45.711905512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$ccompare_info
.type GHC.Base.$fOrdMaybe_$ccompare_info, @object
GHC.Base.$fOrdMaybe_$ccompare_info:
	.quad	GHC.Base.$fOrdMaybe_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.712703448 UTC

.section .text
.align 8
_ceRf:
_ceRf:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceRj
_ceRk:
	movq $block_ceRG_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceRG
_ceRI:
	movq (%rbx),%rax
	jmp *(%rax)
_ceRj:
	movq $block_ceRr_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceRr
_ceRt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceRf, .-_ceRf


==================== Asm code ====================
2018-03-16 15:54:45.713404023 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceRf_info:
	.quad	_ceRf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.714118466 UTC

.section .text
.align 8
_ceRr:
_ceRr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ceRz
_ceRD:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ceRz:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceRr, .-_ceRr


==================== Asm code ====================
2018-03-16 15:54:45.715073341 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceRr_info:
	.quad	_ceRr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.715804806 UTC

.section .text
.align 8
_ceRG:
_ceRG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceRO
_ceRS:
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.Classes.compare_entry
_ceRO:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceRG, .-_ceRG


==================== Asm code ====================
2018-03-16 15:54:45.716426229 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceRG_info:
	.quad	_ceRG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.720954388 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<_closure
.type GHC.Base.$fOrdMaybe_$c<_closure, @object
GHC.Base.$fOrdMaybe_$c<_closure:
	.quad	GHC.Base.$fOrdMaybe_$c<_info


==================== Asm code ====================
2018-03-16 15:54:45.721776873 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c<_entry
.type GHC.Base.$fOrdMaybe_$c<_entry, @object
GHC.Base.$fOrdMaybe_$c<_entry:
_ceSB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ceSC
_ceSD:
	movq $block_ceSu_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceSu
_ceSv:
	movq (%rbx),%rax
	jmp *(%rax)
_ceSC:
	movl $GHC.Base.$fOrdMaybe_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c<_entry, .-GHC.Base.$fOrdMaybe_$c<_entry


==================== Asm code ====================
2018-03-16 15:54:45.722521467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<_info
.type GHC.Base.$fOrdMaybe_$c<_info, @object
GHC.Base.$fOrdMaybe_$c<_info:
	.quad	GHC.Base.$fOrdMaybe_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.723845278 UTC

.section .text
.align 8
_ceSu:
_ceSu:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceSy
_ceSz:
	movq $block_ceSV_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceSV
_ceSX:
	movq (%rbx),%rax
	jmp *(%rax)
_ceSy:
	movq $block_ceSG_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceSG
_ceSI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceSu, .-_ceSu


==================== Asm code ====================
2018-03-16 15:54:45.724766336 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceSu_info:
	.quad	_ceSu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.725888319 UTC

.section .text
.align 8
_ceSG:
_ceSG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueTb
_ceSS:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ueTb:
	addq $8,%rbp
	jmp _ceT3
	.size _ceSG, .-_ceSG


==================== Asm code ====================
2018-03-16 15:54:45.726422637 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceSG_info:
	.quad	_ceSG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.727112372 UTC

.section .text
.align 8
_ceSV:
_ceSV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ueTa
_ceT7:
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.Classes.<_entry
_ueTa:
	addq $24,%rbp
	jmp _ceT3
	.size _ceSV, .-_ceSV


==================== Asm code ====================
2018-03-16 15:54:45.727732787 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceSV_info:
	.quad	_ceSV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.728346029 UTC

.section .text
.align 8
_ceT3:
_ceT3:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceT3, .-_ceT3


==================== Asm code ====================
2018-03-16 15:54:45.73407656 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<=_closure
.type GHC.Base.$fOrdMaybe_$c<=_closure, @object
GHC.Base.$fOrdMaybe_$c<=_closure:
	.quad	GHC.Base.$fOrdMaybe_$c<=_info


==================== Asm code ====================
2018-03-16 15:54:45.734849261 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c<=_entry
.type GHC.Base.$fOrdMaybe_$c<=_entry, @object
GHC.Base.$fOrdMaybe_$c<=_entry:
_ceTV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceTW
_ceTX:
	movq $block_ceTO_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceTO
_ceTP:
	movq (%rbx),%rax
	jmp *(%rax)
_ceTW:
	movl $GHC.Base.$fOrdMaybe_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c<=_entry, .-GHC.Base.$fOrdMaybe_$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:45.735513696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<=_info
.type GHC.Base.$fOrdMaybe_$c<=_info, @object
GHC.Base.$fOrdMaybe_$c<=_info:
	.quad	GHC.Base.$fOrdMaybe_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.736301822 UTC

.section .text
.align 8
_ceTO:
_ceTO:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceTS
_ceTT:
	movq $block_ceUf_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceUf
_ceUh:
	movq (%rbx),%rax
	jmp *(%rax)
_ceTS:
	movq $block_ceU0_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceU0
_ceU2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceTO, .-_ceTO


==================== Asm code ====================
2018-03-16 15:54:45.736960877 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceTO_info:
	.quad	_ceTO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.737645844 UTC

.section .text
.align 8
_ceU0:
_ceU0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueUJ
_ueUK:
	addq $8,%rbp
	jmp _ceUC
_ueUJ:
	addq $8,%rbp
	jmp _ceUy
	.size _ceU0, .-_ceU0


==================== Asm code ====================
2018-03-16 15:54:45.738195715 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceU0_info:
	.quad	_ceU0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.738883447 UTC

.section .text
.align 8
_ceUf:
_ceUf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ueUG
_ceUs:
	movq 16(%rbp),%rax
	movq $block_ceUq_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
_ueUG:
	addq $24,%rbp
	jmp _ceUy
	.size _ceUf, .-_ceUf


==================== Asm code ====================
2018-03-16 15:54:45.739512878 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceUf_info:
	.quad	_ceUf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.740194397 UTC

.section .text
.align 8
_ceUq:
_ceUq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueUH
_ueUI:
	addq $8,%rbp
	jmp _ceUC
_ueUH:
	addq $8,%rbp
	jmp _ceUy
	.size _ceUq, .-_ceUq


==================== Asm code ====================
2018-03-16 15:54:45.740787382 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceUq_info:
	.quad	_ceUq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.741732128 UTC

.section .text
.align 8
_ceUy:
_ceUy:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceUy, .-_ceUy


==================== Asm code ====================
2018-03-16 15:54:45.742323109 UTC

.section .text
.align 8
_ceUC:
_ceUC:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceUC, .-_ceUC


==================== Asm code ====================
2018-03-16 15:54:45.747418661 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmax_closure
.type GHC.Base.$fOrdMaybe_$cmax_closure, @object
GHC.Base.$fOrdMaybe_$cmax_closure:
	.quad	GHC.Base.$fOrdMaybe_$cmax_info


==================== Asm code ====================
2018-03-16 15:54:45.748251866 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cmax_entry
.type GHC.Base.$fOrdMaybe_$cmax_entry, @object
GHC.Base.$fOrdMaybe_$cmax_entry:
_ceVD:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ceVE
_ceVF:
	movq $block_ceVw_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceVw
_ceVx:
	movq (%rbx),%rax
	jmp *(%rax)
_ceVE:
	movl $GHC.Base.$fOrdMaybe_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cmax_entry, .-GHC.Base.$fOrdMaybe_$cmax_entry


==================== Asm code ====================
2018-03-16 15:54:45.748884833 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmax_info
.type GHC.Base.$fOrdMaybe_$cmax_info, @object
GHC.Base.$fOrdMaybe_$cmax_info:
	.quad	GHC.Base.$fOrdMaybe_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.749707694 UTC

.section .text
.align 8
_ceVw:
_ceVw:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceVA
_ceVB:
	movq $block_ceVL_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ceVL
_ceVN:
	movq (%rbx),%rax
	jmp *(%rax)
_ceVA:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceVw, .-_ceVw


==================== Asm code ====================
2018-03-16 15:54:45.750354508 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceVw_info:
	.quad	_ceVw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.751041884 UTC

.section .text
.align 8
_ceVL:
_ceVL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ueWb
_ceVY:
	movq 8(%rbp),%rax
	movq $block_ceVW_info,8(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.<_entry
_ueWb:
	addq $24,%rbp
	jmp _ceW4
	.size _ceVL, .-_ceVL


==================== Asm code ====================
2018-03-16 15:54:45.751663937 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceVL_info:
	.quad	_ceVL
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.752345622 UTC

.section .text
.align 8
_ceVW:
_ceVW:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueWc
_ceW8:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ueWc:
	addq $16,%rbp
	jmp _ceW4
	.size _ceVW, .-_ceVW


==================== Asm code ====================
2018-03-16 15:54:45.75290828 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceVW_info:
	.quad	_ceVW
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.753564385 UTC

.section .text
.align 8
_ceW4:
_ceW4:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceW4, .-_ceW4


==================== Asm code ====================
2018-03-16 15:54:45.758910661 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmin_closure
.type GHC.Base.$fOrdMaybe_$cmin_closure, @object
GHC.Base.$fOrdMaybe_$cmin_closure:
	.quad	GHC.Base.$fOrdMaybe_$cmin_info


==================== Asm code ====================
2018-03-16 15:54:45.759724915 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cmin_entry
.type GHC.Base.$fOrdMaybe_$cmin_entry, @object
GHC.Base.$fOrdMaybe_$cmin_entry:
_ceWX:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ceWY
_ceWZ:
	movq $block_ceWQ_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceWQ
_ceWR:
	movq (%rbx),%rax
	jmp *(%rax)
_ceWY:
	movl $GHC.Base.$fOrdMaybe_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cmin_entry, .-GHC.Base.$fOrdMaybe_$cmin_entry


==================== Asm code ====================
2018-03-16 15:54:45.760364823 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmin_info
.type GHC.Base.$fOrdMaybe_$cmin_info, @object
GHC.Base.$fOrdMaybe_$cmin_info:
	.quad	GHC.Base.$fOrdMaybe_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.761208319 UTC

.section .text
.align 8
_ceWQ:
_ceWQ:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceWU
_ceWV:
	movq $block_ceXb_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ceXb
_ceXd:
	movq (%rbx),%rax
	jmp *(%rax)
_ceWU:
	movq $block_ceX2_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceX2
_ceX4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceWQ, .-_ceWQ


==================== Asm code ====================
2018-03-16 15:54:45.762163193 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceWQ_info:
	.quad	_ceWQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.762777277 UTC

.section .text
.align 8
_ceX2:
_ceX2:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceX2, .-_ceX2


==================== Asm code ====================
2018-03-16 15:54:45.76335841 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceX2_info:
	.quad	_ceX2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.764069298 UTC

.section .text
.align 8
_ceXb:
_ceXb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ceXj
_ceXo:
	movq 8(%rbp),%rax
	movq $block_ceXm_info,8(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.<_entry
_ceXj:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceXb, .-_ceXb


==================== Asm code ====================
2018-03-16 15:54:45.764726661 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceXb_info:
	.quad	_ceXb
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.765449081 UTC

.section .text
.align 8
_ceXm:
_ceXm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ceXu
_ceXy:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ceXu:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceXm, .-_ceXm


==================== Asm code ====================
2018-03-16 15:54:45.766071603 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceXm_info:
	.quad	_ceXm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.771242106 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c>=_closure
.type GHC.Base.$fOrdMaybe_$c>=_closure, @object
GHC.Base.$fOrdMaybe_$c>=_closure:
	.quad	GHC.Base.$fOrdMaybe_$c>=_info


==================== Asm code ====================
2018-03-16 15:54:45.772078675 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c>=_entry
.type GHC.Base.$fOrdMaybe_$c>=_entry, @object
GHC.Base.$fOrdMaybe_$c>=_entry:
_ceYm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ceYn
_ceYo:
	movq $block_ceYf_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ceYf
_ceYg:
	movq (%rbx),%rax
	jmp *(%rax)
_ceYn:
	movl $GHC.Base.$fOrdMaybe_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c>=_entry, .-GHC.Base.$fOrdMaybe_$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.773104625 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c>=_info
.type GHC.Base.$fOrdMaybe_$c>=_info, @object
GHC.Base.$fOrdMaybe_$c>=_info:
	.quad	GHC.Base.$fOrdMaybe_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.773940182 UTC

.section .text
.align 8
_ceYf:
_ceYf:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ceYj
_ceYk:
	movq $block_ceYG_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _ceYG
_ceYI:
	movq (%rbx),%rax
	jmp *(%rax)
_ceYj:
	movq $block_ceYr_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _ceYr
_ceYt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ceYf, .-_ceYf


==================== Asm code ====================
2018-03-16 15:54:45.774600814 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceYf_info:
	.quad	_ceYf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.775254024 UTC

.section .text
.align 8
_ceYr:
_ceYr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueZa
_ueZb:
	addq $8,%rbp
	jmp _ceZ3
_ueZa:
	addq $8,%rbp
	jmp _ceYZ
	.size _ceYr, .-_ceYr


==================== Asm code ====================
2018-03-16 15:54:45.775825042 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceYr_info:
	.quad	_ceYr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.776529041 UTC

.section .text
.align 8
_ceYG:
_ceYG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ueZ7
_ceYT:
	movq 16(%rbp),%rax
	movq $block_ceYR_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
_ueZ7:
	addq $24,%rbp
	jmp _ceYZ
	.size _ceYG, .-_ceYG


==================== Asm code ====================
2018-03-16 15:54:45.777166247 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceYG_info:
	.quad	_ceYG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.778208377 UTC

.section .text
.align 8
_ceYR:
_ceYR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ueZ8
_ueZ9:
	addq $8,%rbp
	jmp _ceZ3
_ueZ8:
	addq $8,%rbp
	jmp _ceYZ
	.size _ceYR, .-_ceYR


==================== Asm code ====================
2018-03-16 15:54:45.778782993 UTC

.section .data.rel.ro
.align 8
.align 1
block_ceYR_info:
	.quad	_ceYR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.7793901 UTC

.section .text
.align 8
_ceYZ:
_ceYZ:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceYZ, .-_ceYZ


==================== Asm code ====================
2018-03-16 15:54:45.779979223 UTC

.section .text
.align 8
_ceZ3:
_ceZ3:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ceZ3, .-_ceZ3


==================== Asm code ====================
2018-03-16 15:54:45.786408904 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_closure
.type GHC.Base.$fOrdMaybe_closure, @object
GHC.Base.$fOrdMaybe_closure:
	.quad	GHC.Base.$fOrdMaybe_info


==================== Asm code ====================
2018-03-16 15:54:45.787440754 UTC

.section .text
.align 8
sat_s8bA_entry:
_cf02:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$cmin_entry
	.size sat_s8bA_entry, .-sat_s8bA_entry


==================== Asm code ====================
2018-03-16 15:54:45.788003536 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bA_info:
	.quad	sat_s8bA_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.788645348 UTC

.section .text
.align 8
sat_s8bz_entry:
_cf0a:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$cmax_entry
	.size sat_s8bz_entry, .-sat_s8bz_entry


==================== Asm code ====================
2018-03-16 15:54:45.789484597 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bz_info:
	.quad	sat_s8bz_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.790084028 UTC

.section .text
.align 8
sat_s8by_entry:
_cf0i:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c>=_entry
	.size sat_s8by_entry, .-sat_s8by_entry


==================== Asm code ====================
2018-03-16 15:54:45.790686972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8by_info:
	.quad	sat_s8by_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.791265866 UTC

.section .text
.align 8
sat_s8bx_entry:
_cf0q:
	movq %r14,%rdi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<_entry
	.size sat_s8bx_entry, .-sat_s8bx_entry


==================== Asm code ====================
2018-03-16 15:54:45.791799082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bx_info:
	.quad	sat_s8bx_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.792389807 UTC

.section .text
.align 8
sat_s8bu_entry:
_cf0y:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<=_entry
	.size sat_s8bu_entry, .-sat_s8bu_entry


==================== Asm code ====================
2018-03-16 15:54:45.792946756 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bu_info:
	.quad	sat_s8bu_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.793626576 UTC

.section .text
.align 8
sat_s8bt_entry:
_cf0G:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<_entry
	.size sat_s8bt_entry, .-sat_s8bt_entry


==================== Asm code ====================
2018-03-16 15:54:45.794172502 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bt_info:
	.quad	sat_s8bt_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.794820226 UTC

.section .text
.align 8
sat_s8bs_entry:
_cf0O:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$ccompare_entry
	.size sat_s8bs_entry, .-sat_s8bs_entry


==================== Asm code ====================
2018-03-16 15:54:45.795383272 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8bs_info:
	.quad	sat_s8bs_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.796119457 UTC

.section .text
.align 8
sat_s8br_entry:
_cf0V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cf0W
_cf0X:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fOrdMaybe_$cp1Ord_entry
_cf0W:
	jmp *-16(%r13)
	.size sat_s8br_entry, .-sat_s8br_entry


==================== Asm code ====================
2018-03-16 15:54:45.796716362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8br_info:
	.quad	sat_s8br_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.797663258 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_entry
.type GHC.Base.$fOrdMaybe_entry, @object
GHC.Base.$fOrdMaybe_entry:
_cf0Z:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cf13
_cf12:
	movq $sat_s8bA_info,-200(%r12)
	movq %r14,-192(%r12)
	movq $sat_s8bz_info,-184(%r12)
	movq %r14,-176(%r12)
	movq $sat_s8by_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s8bx_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s8bu_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s8bt_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s8bs_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s8br_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Classes.C:Ord_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cf13:
	movq $208,904(%r13)
	movl $GHC.Base.$fOrdMaybe_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_entry, .-GHC.Base.$fOrdMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:45.798541901 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_info
.type GHC.Base.$fOrdMaybe_info, @object
GHC.Base.$fOrdMaybe_info:
	.quad	GHC.Base.$fOrdMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.803883821 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c/=_closure
.type GHC.Base.$fEqNonEmpty_$c/=_closure, @object
GHC.Base.$fEqNonEmpty_$c/=_closure:
	.quad	GHC.Base.$fEqNonEmpty_$c/=_info


==================== Asm code ====================
2018-03-16 15:54:45.804666959 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_$c/=_entry
.type GHC.Base.$fEqNonEmpty_$c/=_entry, @object
GHC.Base.$fEqNonEmpty_$c/=_entry:
_cf1N:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cf1R
_cf1S:
	movq $block_cf1K_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf1K
_cf1L:
	movq (%rbx),%rax
	jmp *(%rax)
_cf1R:
	movl $GHC.Base.$fEqNonEmpty_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_$c/=_entry, .-GHC.Base.$fEqNonEmpty_$c/=_entry


==================== Asm code ====================
2018-03-16 15:54:45.805645182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c/=_info
.type GHC.Base.$fEqNonEmpty_$c/=_info, @object
GHC.Base.$fEqNonEmpty_$c/=_info:
	.quad	GHC.Base.$fEqNonEmpty_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.806347137 UTC

.section .text
.align 8
_cf1K:
_cf1K:
	movq $block_cf1Q_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cf1Q
_cf1U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf1K, .-_cf1K


==================== Asm code ====================
2018-03-16 15:54:45.806943511 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf1K_info:
	.quad	_cf1K
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.807648029 UTC

.section .text
.align 8
_cf1Q:
_cf1Q:
	movq $block_cf1Y_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
	.size _cf1Q, .-_cf1Q


==================== Asm code ====================
2018-03-16 15:54:45.808267284 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf1Q_info:
	.quad	_cf1Q
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.808935361 UTC

.section .text
.align 8
_cf1Y:
_cf1Y:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uf2n
_cf2a:
	movq 24(%rbp),%rax
	movq $block_cf28_info,24(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Classes.$fEq[]_$c==_entry
_uf2n:
	addq $32,%rbp
	jmp _cf2g
	.size _cf1Y, .-_cf1Y


==================== Asm code ====================
2018-03-16 15:54:45.809551344 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf1Y_info:
	.quad	_cf1Y
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.810226508 UTC

.section .text
.align 8
_cf28:
_cf28:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uf2o
_cf2k:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uf2o:
	addq $8,%rbp
	jmp _cf2g
	.size _cf28, .-_cf28


==================== Asm code ====================
2018-03-16 15:54:45.810826236 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf28_info:
	.quad	_cf28
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.811421677 UTC

.section .text
.align 8
_cf2g:
_cf2g:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf2g, .-_cf2g


==================== Asm code ====================
2018-03-16 15:54:45.815229184 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c==_closure
.type GHC.Base.$w$c==_closure, @object
GHC.Base.$w$c==_closure:
	.quad	GHC.Base.$w$c==_info


==================== Asm code ====================
2018-03-16 15:54:45.815969975 UTC

.section .text
.align 8
.globl GHC.Base.$w$c==_entry
.type GHC.Base.$w$c==_entry, @object
GHC.Base.$w$c==_entry:
_cf37:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cf38
_cf39:
	movq $block_cf31_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_pp_info,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Classes.==_entry
_cf38:
	movl $GHC.Base.$w$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c==_entry, .-GHC.Base.$w$c==_entry


==================== Asm code ====================
2018-03-16 15:54:45.816612878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c==_info
.type GHC.Base.$w$c==_info, @object
GHC.Base.$w$c==_info:
	.quad	GHC.Base.$w$c==_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.817321694 UTC

.section .text
.align 8
_cf31:
_cf31:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cf34
_cf35:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Classes.$fEq[]_$c==_entry
_cf34:
	movl $GHC.Types.False_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf31, .-_cf31


==================== Asm code ====================
2018-03-16 15:54:45.817908879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf31_info:
	.quad	_cf31
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.82162463 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c==_closure
.type GHC.Base.$fEqNonEmpty_$c==_closure, @object
GHC.Base.$fEqNonEmpty_$c==_closure:
	.quad	GHC.Base.$fEqNonEmpty_$c==_info


==================== Asm code ====================
2018-03-16 15:54:45.822390534 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_$c==_entry
.type GHC.Base.$fEqNonEmpty_$c==_entry, @object
GHC.Base.$fEqNonEmpty_$c==_entry:
_cf3y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cf3C
_cf3D:
	movq $block_cf3v_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf3v
_cf3w:
	movq (%rbx),%rax
	jmp *(%rax)
_cf3C:
	movl $GHC.Base.$fEqNonEmpty_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_$c==_entry, .-GHC.Base.$fEqNonEmpty_$c==_entry


==================== Asm code ====================
2018-03-16 15:54:45.823061355 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c==_info
.type GHC.Base.$fEqNonEmpty_$c==_info, @object
GHC.Base.$fEqNonEmpty_$c==_info:
	.quad	GHC.Base.$fEqNonEmpty_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.823778364 UTC

.section .text
.align 8
_cf3v:
_cf3v:
	movq $block_cf3B_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cf3B
_cf3F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf3v, .-_cf3v


==================== Asm code ====================
2018-03-16 15:54:45.824374464 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf3v_info:
	.quad	_cf3v
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.824968421 UTC

.section .text
.align 8
_cf3B:
_cf3B:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c==_entry
	.size _cf3B, .-_cf3B


==================== Asm code ====================
2018-03-16 15:54:45.825606546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf3B_info:
	.quad	_cf3B
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.829429089 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_closure
.type GHC.Base.$fEqNonEmpty_closure, @object
GHC.Base.$fEqNonEmpty_closure:
	.quad	GHC.Base.$fEqNonEmpty_info


==================== Asm code ====================
2018-03-16 15:54:45.830093675 UTC

.section .text
.align 8
sat_s8c3_entry:
_cf48:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqNonEmpty_$c/=_entry
	.size sat_s8c3_entry, .-sat_s8c3_entry


==================== Asm code ====================
2018-03-16 15:54:45.830672488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8c3_info:
	.quad	sat_s8c3_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.831310212 UTC

.section .text
.align 8
sat_s8c2_entry:
_cf4g:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqNonEmpty_$c==_entry
	.size sat_s8c2_entry, .-sat_s8c2_entry


==================== Asm code ====================
2018-03-16 15:54:45.831891943 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8c2_info:
	.quad	sat_s8c2_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.8326504 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_entry
.type GHC.Base.$fEqNonEmpty_entry, @object
GHC.Base.$fEqNonEmpty_entry:
_cf4k:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cf4o
_cf4n:
	movq $sat_s8c3_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s8c2_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Classes.C:Eq_con_info,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cf4o:
	movq $56,904(%r13)
	movl $GHC.Base.$fEqNonEmpty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_entry, .-GHC.Base.$fEqNonEmpty_entry


==================== Asm code ====================
2018-03-16 15:54:45.833311863 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_info
.type GHC.Base.$fEqNonEmpty_info, @object
GHC.Base.$fEqNonEmpty_info:
	.quad	GHC.Base.$fEqNonEmpty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.836172403 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_closure
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_closure, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:54:45.83694959 UTC

.section .text
.align 8
sat_s8c5_entry:
_cf4K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cf4L
_cf4M:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Classes.$p1Ord_entry
_cf4L:
	jmp *-16(%r13)
	.size sat_s8c5_entry, .-sat_s8c5_entry


==================== Asm code ====================
2018-03-16 15:54:45.837764469 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8c5_info:
	.quad	sat_s8c5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.83847595 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_entry, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_entry:
_cf4N:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cf4R
_cf4Q:
	movq $sat_s8c5_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fEqNonEmpty_entry
_cf4R:
	movq $24,904(%r13)
	movl $GHC.Base.$fOrdNonEmpty_$cp1Ord_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cp1Ord_entry, .-GHC.Base.$fOrdNonEmpty_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:54:45.839112671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_info
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_info, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.84261538 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$ccompare_closure
.type GHC.Base.$w$ccompare_closure, @object
GHC.Base.$w$ccompare_closure:
	.quad	GHC.Base.$w$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:45.843791647 UTC

.section .text
.align 8
.globl GHC.Base.$w$ccompare_entry
.type GHC.Base.$w$ccompare_entry, @object
GHC.Base.$w$ccompare_entry:
_cf5b:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cf5c
_cf5d:
	movq $block_cf54_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_pp_info,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Classes.compare_entry
_cf5c:
	movl $GHC.Base.$w$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$ccompare_entry, .-GHC.Base.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:45.844467514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$ccompare_info
.type GHC.Base.$w$ccompare_info, @object
GHC.Base.$w$ccompare_info:
	.quad	GHC.Base.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.845220418 UTC

.section .text
.align 8
_cf54:
_cf54:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uf5n
_cf59:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uf5n:
	cmpq $2,%rbx
	jb _cf57
_cf58:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Classes.$fOrd[]_$ccompare_entry
_cf57:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf54, .-_cf54


==================== Asm code ====================
2018-03-16 15:54:45.845913233 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf54_info:
	.quad	_cf54
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.849608611 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$ccompare_closure
.type GHC.Base.$fOrdNonEmpty_$ccompare_closure, @object
GHC.Base.$fOrdNonEmpty_$ccompare_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:45.850388575 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$ccompare_entry
.type GHC.Base.$fOrdNonEmpty_$ccompare_entry, @object
GHC.Base.$fOrdNonEmpty_$ccompare_entry:
_cf5G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cf5K
_cf5L:
	movq $block_cf5D_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf5D
_cf5E:
	movq (%rbx),%rax
	jmp *(%rax)
_cf5K:
	movl $GHC.Base.$fOrdNonEmpty_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$ccompare_entry, .-GHC.Base.$fOrdNonEmpty_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:45.85104356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$ccompare_info
.type GHC.Base.$fOrdNonEmpty_$ccompare_info, @object
GHC.Base.$fOrdNonEmpty_$ccompare_info:
	.quad	GHC.Base.$fOrdNonEmpty_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.851733601 UTC

.section .text
.align 8
_cf5D:
_cf5D:
	movq $block_cf5J_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cf5J
_cf5N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf5D, .-_cf5D


==================== Asm code ====================
2018-03-16 15:54:45.852314412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf5D_info:
	.quad	_cf5D
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.852933937 UTC

.section .text
.align 8
_cf5J:
_cf5J:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$ccompare_entry
	.size _cf5J, .-_cf5J


==================== Asm code ====================
2018-03-16 15:54:45.853577354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf5J_info:
	.quad	_cf5J
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.857350044 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<_closure
.type GHC.Base.$w$c<_closure, @object
GHC.Base.$w$c<_closure:
	.quad	GHC.Base.$w$c<_info


==================== Asm code ====================
2018-03-16 15:54:45.858154749 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<_entry
.type GHC.Base.$w$c<_entry, @object
GHC.Base.$w$c<_entry:
_cf6i:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cf6j
_cf6k:
	movq $block_cf6b_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_pp_info,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Classes.compare_entry
_cf6j:
	movl $GHC.Base.$w$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<_entry, .-GHC.Base.$w$c<_entry


==================== Asm code ====================
2018-03-16 15:54:45.85881007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<_info
.type GHC.Base.$w$c<_info, @object
GHC.Base.$w$c<_info:
	.quad	GHC.Base.$w$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.859566211 UTC

.section .text
.align 8
_cf6b:
_cf6b:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uf6u
_cf6g:
	movl $GHC.Types.False_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uf6u:
	cmpq $2,%rbx
	jb _cf6e
_cf6f:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Classes.$fOrd[]_$c<_entry
_cf6e:
	movl $GHC.Types.True_closure+2,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf6b, .-_cf6b


==================== Asm code ====================
2018-03-16 15:54:45.860239166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf6b_info:
	.quad	_cf6b
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.864525083 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<_closure
.type GHC.Base.$fOrdNonEmpty_$c<_closure, @object
GHC.Base.$fOrdNonEmpty_$c<_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c<_info


==================== Asm code ====================
2018-03-16 15:54:45.865370918 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c<_entry
.type GHC.Base.$fOrdNonEmpty_$c<_entry, @object
GHC.Base.$fOrdNonEmpty_$c<_entry:
_cf6N:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cf6R
_cf6S:
	movq $block_cf6K_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf6K
_cf6L:
	movq (%rbx),%rax
	jmp *(%rax)
_cf6R:
	movl $GHC.Base.$fOrdNonEmpty_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c<_entry, .-GHC.Base.$fOrdNonEmpty_$c<_entry


==================== Asm code ====================
2018-03-16 15:54:45.865997961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<_info
.type GHC.Base.$fOrdNonEmpty_$c<_info, @object
GHC.Base.$fOrdNonEmpty_$c<_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.866710096 UTC

.section .text
.align 8
_cf6K:
_cf6K:
	movq $block_cf6Q_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cf6Q
_cf6U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf6K, .-_cf6K


==================== Asm code ====================
2018-03-16 15:54:45.867298353 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf6K_info:
	.quad	_cf6K
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.86796895 UTC

.section .text
.align 8
_cf6Q:
_cf6Q:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c<_entry
	.size _cf6Q, .-_cf6Q


==================== Asm code ====================
2018-03-16 15:54:45.868525052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf6Q_info:
	.quad	_cf6Q
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.873208855 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<=_closure
.type GHC.Base.$w$c<=_closure, @object
GHC.Base.$w$c<=_closure:
	.quad	GHC.Base.$w$c<=_info


==================== Asm code ====================
2018-03-16 15:54:45.874321043 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<=_entry
.type GHC.Base.$w$c<=_entry, @object
GHC.Base.$w$c<=_entry:
_cf7p:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cf7q
_cf7r:
	movq $block_cf7i_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_pp_info,-56(%rbp)
	movq %r8,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Classes.compare_entry
_cf7q:
	movl $GHC.Base.$w$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<=_entry, .-GHC.Base.$w$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:45.874971469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<=_info
.type GHC.Base.$w$c<=_info, @object
GHC.Base.$w$c<=_info:
	.quad	GHC.Base.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.87570382 UTC

.section .text
.align 8
_cf7i:
_cf7i:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uf7N
_uf7O:
	addq $32,%rbp
	jmp _cf7n
_uf7P:
	addq $32,%rbp
	jmp _cf7I
_uf7N:
	cmpq $2,%rbx
	jb _uf7P
_cf7m:
	movq 24(%rbp),%rax
	movq $block_cf7x_info,24(%rbp)
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Classes.$fOrd[]_$ccompare_entry
	.size _cf7i, .-_cf7i


==================== Asm code ====================
2018-03-16 15:54:45.876329747 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf7i_info:
	.quad	_cf7i
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.876971671 UTC

.section .text
.align 8
_cf7x:
_cf7x:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uf7Q
_uf7R:
	addq $8,%rbp
	jmp _cf7n
_uf7Q:
	addq $8,%rbp
	jmp _cf7I
	.size _cf7x, .-_cf7x


==================== Asm code ====================
2018-03-16 15:54:45.877616824 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf7x_info:
	.quad	_cf7x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.878230341 UTC

.section .text
.align 8
_cf7I:
_cf7I:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf7I, .-_cf7I


==================== Asm code ====================
2018-03-16 15:54:45.878824537 UTC

.section .text
.align 8
_cf7n:
_cf7n:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cf7n, .-_cf7n


==================== Asm code ====================
2018-03-16 15:54:45.882385375 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<=_closure
.type GHC.Base.$fOrdNonEmpty_$c<=_closure, @object
GHC.Base.$fOrdNonEmpty_$c<=_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c<=_info


==================== Asm code ====================
2018-03-16 15:54:45.883084732 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c<=_entry
.type GHC.Base.$fOrdNonEmpty_$c<=_entry, @object
GHC.Base.$fOrdNonEmpty_$c<=_entry:
_cf8n:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cf8r
_cf8s:
	movq $block_cf8k_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf8k
_cf8l:
	movq (%rbx),%rax
	jmp *(%rax)
_cf8r:
	movl $GHC.Base.$fOrdNonEmpty_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c<=_entry, .-GHC.Base.$fOrdNonEmpty_$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:45.883724275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<=_info
.type GHC.Base.$fOrdNonEmpty_$c<=_info, @object
GHC.Base.$fOrdNonEmpty_$c<=_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.884417681 UTC

.section .text
.align 8
_cf8k:
_cf8k:
	movq $block_cf8q_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cf8q
_cf8u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf8k, .-_cf8k


==================== Asm code ====================
2018-03-16 15:54:45.8850617 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf8k_info:
	.quad	_cf8k
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.88603204 UTC

.section .text
.align 8
_cf8q:
_cf8q:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c<=_entry
	.size _cf8q, .-_cf8q


==================== Asm code ====================
2018-03-16 15:54:45.886964792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf8q_info:
	.quad	_cf8q
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.892085097 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmax_closure
.type GHC.Base.$fOrdNonEmpty_$cmax_closure, @object
GHC.Base.$fOrdNonEmpty_$cmax_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cmax_info


==================== Asm code ====================
2018-03-16 15:54:45.892873113 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cmax_entry
.type GHC.Base.$fOrdNonEmpty_$cmax_entry, @object
GHC.Base.$fOrdNonEmpty_$cmax_entry:
_cf8V:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cf8Z
_cf90:
	movq $block_cf8S_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cf8S
_cf8T:
	movq (%rbx),%rax
	jmp *(%rax)
_cf8Z:
	movl $GHC.Base.$fOrdNonEmpty_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cmax_entry, .-GHC.Base.$fOrdNonEmpty_$cmax_entry


==================== Asm code ====================
2018-03-16 15:54:45.893712475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmax_info
.type GHC.Base.$fOrdNonEmpty_$cmax_info, @object
GHC.Base.$fOrdNonEmpty_$cmax_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.894418567 UTC

.section .text
.align 8
_cf8S:
_cf8S:
	movq $block_cf8Y_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cf8Y
_cf92:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf8S, .-_cf8S


==================== Asm code ====================
2018-03-16 15:54:45.895026764 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf8S_info:
	.quad	_cf8S
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.895690486 UTC

.section .text
.align 8
_cf8Y:
_cf8Y:
	movq $block_cf96_info,-8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.compare_entry
	.size _cf8Y, .-_cf8Y


==================== Asm code ====================
2018-03-16 15:54:45.89632541 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf8Y_info:
	.quad	_cf8Y
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.897055683 UTC

.section .text
.align 8
_cf96:
_cf96:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uf9z
_uf9A:
	addq $24,%rbp
	jmp _cf9w
_uf9B:
	addq $40,%rbp
	jmp _cf9s
_uf9z:
	cmpq $2,%rbx
	jb _uf9B
_cf9i:
	movq 16(%rbp),%rax
	movq $block_cf9g_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Classes.$fOrd[]_$ccompare_entry
	.size _cf96, .-_cf96


==================== Asm code ====================
2018-03-16 15:54:45.897712664 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf96_info:
	.quad	_cf96
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.898361322 UTC

.section .text
.align 8
_cf9g:
_cf9g:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uf9C
_uf9D:
	addq $8,%rbp
	jmp _cf9w
_uf9C:
	addq $24,%rbp
	jmp _cf9s
	.size _cf9g, .-_cf9g


==================== Asm code ====================
2018-03-16 15:54:45.898942388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cf9g_info:
	.quad	_cf9g
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.899526586 UTC

.section .text
.align 8
_cf9s:
_cf9s:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf9s, .-_cf9s


==================== Asm code ====================
2018-03-16 15:54:45.900182704 UTC

.section .text
.align 8
_cf9w:
_cf9w:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cf9w, .-_cf9w


==================== Asm code ====================
2018-03-16 15:54:45.90581775 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmin_closure
.type GHC.Base.$fOrdNonEmpty_$cmin_closure, @object
GHC.Base.$fOrdNonEmpty_$cmin_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cmin_info


==================== Asm code ====================
2018-03-16 15:54:45.906595982 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cmin_entry
.type GHC.Base.$fOrdNonEmpty_$cmin_entry, @object
GHC.Base.$fOrdNonEmpty_$cmin_entry:
_cfao:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cfas
_cfat:
	movq $block_cfal_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfal
_cfam:
	movq (%rbx),%rax
	jmp *(%rax)
_cfas:
	movl $GHC.Base.$fOrdNonEmpty_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cmin_entry, .-GHC.Base.$fOrdNonEmpty_$cmin_entry


==================== Asm code ====================
2018-03-16 15:54:45.907250114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmin_info
.type GHC.Base.$fOrdNonEmpty_$cmin_info, @object
GHC.Base.$fOrdNonEmpty_$cmin_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.907992864 UTC

.section .text
.align 8
_cfal:
_cfal:
	movq $block_cfar_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cfar
_cfav:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfal, .-_cfal


==================== Asm code ====================
2018-03-16 15:54:45.908593031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfal_info:
	.quad	_cfal
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.909522283 UTC

.section .text
.align 8
_cfar:
_cfar:
	movq $block_cfaz_info,-8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.compare_entry
	.size _cfar, .-_cfar


==================== Asm code ====================
2018-03-16 15:54:45.910119969 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfar_info:
	.quad	_cfar
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.910829 UTC

.section .text
.align 8
_cfaz:
_cfaz:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ufb2
_ufb3:
	addq $40,%rbp
	jmp _cfaZ
_ufb4:
	addq $24,%rbp
	jmp _cfaV
_ufb2:
	cmpq $2,%rbx
	jb _ufb4
_cfaL:
	movq 16(%rbp),%rax
	movq $block_cfaJ_info,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Classes.$fOrd[]_$ccompare_entry
	.size _cfaz, .-_cfaz


==================== Asm code ====================
2018-03-16 15:54:45.911402602 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfaz_info:
	.quad	_cfaz
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.912063633 UTC

.section .text
.align 8
_cfaJ:
_cfaJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ufb5
_ufb6:
	addq $24,%rbp
	jmp _cfaZ
_ufb5:
	addq $8,%rbp
	jmp _cfaV
	.size _cfaJ, .-_cfaJ


==================== Asm code ====================
2018-03-16 15:54:45.912632848 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfaJ_info:
	.quad	_cfaJ
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.913227724 UTC

.section .text
.align 8
_cfaV:
_cfaV:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfaV, .-_cfaV


==================== Asm code ====================
2018-03-16 15:54:45.913962255 UTC

.section .text
.align 8
_cfaZ:
_cfaZ:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfaZ, .-_cfaZ


==================== Asm code ====================
2018-03-16 15:54:45.918564266 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c>=_closure
.type GHC.Base.$w$c>=_closure, @object
GHC.Base.$w$c>=_closure:
	.quad	GHC.Base.$w$c>=_info


==================== Asm code ====================
2018-03-16 15:54:45.919339293 UTC

.section .text
.align 8
.globl GHC.Base.$w$c>=_entry
.type GHC.Base.$w$c>=_entry, @object
GHC.Base.$w$c>=_entry:
_cfbV:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cfbW
_cfbX:
	movq $block_cfbO_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_pp_info,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp GHC.Classes.compare_entry
_cfbW:
	movl $GHC.Base.$w$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c>=_entry, .-GHC.Base.$w$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.920040062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c>=_info
.type GHC.Base.$w$c>=_info, @object
GHC.Base.$w$c>=_info:
	.quad	GHC.Base.$w$c>=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:45.92081016 UTC

.section .text
.align 8
_cfbO:
_cfbO:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ufcj
_ufck:
	addq $32,%rbp
	jmp _cfbT
_ufcl:
	addq $32,%rbp
	jmp _cfce
_ufcj:
	cmpq $2,%rbx
	jb _ufcl
_cfbS:
	movq 24(%rbp),%rax
	movq $block_cfc3_info,24(%rbp)
	movq %rax,%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Classes.$fOrd[]_$ccompare_entry
	.size _cfbO, .-_cfbO


==================== Asm code ====================
2018-03-16 15:54:45.921525173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfbO_info:
	.quad	_cfbO
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.922174658 UTC

.section .text
.align 8
_cfc3:
_cfc3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ufcm
_ufcn:
	addq $8,%rbp
	jmp _cfbT
_ufcm:
	addq $8,%rbp
	jmp _cfce
	.size _cfc3, .-_cfc3


==================== Asm code ====================
2018-03-16 15:54:45.922782853 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfc3_info:
	.quad	_cfc3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.923391275 UTC

.section .text
.align 8
_cfce:
_cfce:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfce, .-_cfce


==================== Asm code ====================
2018-03-16 15:54:45.924006685 UTC

.section .text
.align 8
_cfbT:
_cfbT:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfbT, .-_cfbT


==================== Asm code ====================
2018-03-16 15:54:45.928036331 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c>=_closure
.type GHC.Base.$fOrdNonEmpty_$c>=_closure, @object
GHC.Base.$fOrdNonEmpty_$c>=_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c>=_info


==================== Asm code ====================
2018-03-16 15:54:45.928891298 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c>=_entry
.type GHC.Base.$fOrdNonEmpty_$c>=_entry, @object
GHC.Base.$fOrdNonEmpty_$c>=_entry:
_cfcT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cfcX
_cfcY:
	movq $block_cfcQ_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfcQ
_cfcR:
	movq (%rbx),%rax
	jmp *(%rax)
_cfcX:
	movl $GHC.Base.$fOrdNonEmpty_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c>=_entry, .-GHC.Base.$fOrdNonEmpty_$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.929995541 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c>=_info
.type GHC.Base.$fOrdNonEmpty_$c>=_info, @object
GHC.Base.$fOrdNonEmpty_$c>=_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.930733071 UTC

.section .text
.align 8
_cfcQ:
_cfcQ:
	movq $block_cfcW_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfcW
_cfd0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfcQ, .-_cfcQ


==================== Asm code ====================
2018-03-16 15:54:45.931337593 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfcQ_info:
	.quad	_cfcQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.931971042 UTC

.section .text
.align 8
_cfcW:
_cfcW:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c>=_entry
	.size _cfcW, .-_cfcW


==================== Asm code ====================
2018-03-16 15:54:45.932554478 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfcW_info:
	.quad	_cfcW
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.939147768 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_closure
.type GHC.Base.$fOrdNonEmpty_closure, @object
GHC.Base.$fOrdNonEmpty_closure:
	.quad	GHC.Base.$fOrdNonEmpty_info


==================== Asm code ====================
2018-03-16 15:54:45.939804471 UTC

.section .text
.align 8
sat_s8dC_entry:
_cfdt:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$cmin_entry
	.size sat_s8dC_entry, .-sat_s8dC_entry


==================== Asm code ====================
2018-03-16 15:54:45.940408461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dC_info:
	.quad	sat_s8dC_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.941034337 UTC

.section .text
.align 8
sat_s8dB_entry:
_cfdB:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$cmax_entry
	.size sat_s8dB_entry, .-sat_s8dB_entry


==================== Asm code ====================
2018-03-16 15:54:45.941649609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dB_info:
	.quad	sat_s8dB_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.94229553 UTC

.section .text
.align 8
sat_s8dA_entry:
_cfdJ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c>=_entry
	.size sat_s8dA_entry, .-sat_s8dA_entry


==================== Asm code ====================
2018-03-16 15:54:45.942861777 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dA_info:
	.quad	sat_s8dA_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.943850869 UTC

.section .text
.align 8
sat_s8dz_entry:
_cfdR:
	movq %r14,%rdi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<_entry
	.size sat_s8dz_entry, .-sat_s8dz_entry


==================== Asm code ====================
2018-03-16 15:54:45.94445544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dz_info:
	.quad	sat_s8dz_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.94506218 UTC

.section .text
.align 8
sat_s8dw_entry:
_cfdZ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<=_entry
	.size sat_s8dw_entry, .-sat_s8dw_entry


==================== Asm code ====================
2018-03-16 15:54:45.94563061 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dw_info:
	.quad	sat_s8dw_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.946232888 UTC

.section .text
.align 8
sat_s8dv_entry:
_cfe7:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<_entry
	.size sat_s8dv_entry, .-sat_s8dv_entry


==================== Asm code ====================
2018-03-16 15:54:45.946786832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dv_info:
	.quad	sat_s8dv_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.947415617 UTC

.section .text
.align 8
sat_s8du_entry:
_cfef:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$ccompare_entry
	.size sat_s8du_entry, .-sat_s8du_entry


==================== Asm code ====================
2018-03-16 15:54:45.947980021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8du_info:
	.quad	sat_s8du_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.948680668 UTC

.section .text
.align 8
sat_s8dt_entry:
_cfem:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfen
_cfeo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
_cfen:
	jmp *-16(%r13)
	.size sat_s8dt_entry, .-sat_s8dt_entry


==================== Asm code ====================
2018-03-16 15:54:45.949320194 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dt_info:
	.quad	sat_s8dt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:45.950177485 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_entry
.type GHC.Base.$fOrdNonEmpty_entry, @object
GHC.Base.$fOrdNonEmpty_entry:
_cfeq:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cfeu
_cfet:
	movq $sat_s8dC_info,-200(%r12)
	movq %r14,-192(%r12)
	movq $sat_s8dB_info,-184(%r12)
	movq %r14,-176(%r12)
	movq $sat_s8dA_info,-168(%r12)
	movq %r14,-160(%r12)
	movq $sat_s8dz_info,-152(%r12)
	movq %r14,-144(%r12)
	movq $sat_s8dw_info,-136(%r12)
	movq %r14,-128(%r12)
	movq $sat_s8dv_info,-120(%r12)
	movq %r14,-112(%r12)
	movq $sat_s8du_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s8dt_info,-88(%r12)
	movq %r14,-72(%r12)
	movq $GHC.Classes.C:Ord_con_info,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfeu:
	movq $208,904(%r13)
	movl $GHC.Base.$fOrdNonEmpty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_entry, .-GHC.Base.$fOrdNonEmpty_entry


==================== Asm code ====================
2018-03-16 15:54:45.950961437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_info
.type GHC.Base.$fOrdNonEmpty_info, @object
GHC.Base.$fOrdNonEmpty_info:
	.quad	GHC.Base.$fOrdNonEmpty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.953514862 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO_$cfail_closure
.type GHC.Base.$fMonadIO_$cfail_closure, @object
GHC.Base.$fMonadIO_$cfail_closure:
	.quad	GHC.Base.$fMonadIO_$cfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.954147305 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadIO_$cfail_entry
.type GHC.Base.$fMonadIO_$cfail_entry, @object
GHC.Base.$fMonadIO_$cfail_entry:
_cffb:
	movl $GHC.IO.failIO_closure,%ebx
	jmp stg_ap_p_fast
	.size GHC.Base.$fMonadIO_$cfail_entry, .-GHC.Base.$fMonadIO_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:45.954747075 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadIO_$cfail_info
.type GHC.Base.$fMonadIO_$cfail_info, @object
GHC.Base.$fMonadIO_$cfail_info:
	.quad	GHC.Base.$fMonadIO_$cfail_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8R0_srt+80


==================== Asm code ====================
2018-03-16 15:54:45.956921049 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO_closure
.type GHC.Base.$fMonadIO_closure, @object
GHC.Base.$fMonadIO_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeIO_closure+1
	.quad	GHC.Base.$fMonadIO1_closure+3
	.quad	GHC.Base.$fApplicativeIO2_closure+3
	.quad	GHC.Base.$fApplicativeIO4_closure+2
	.quad	GHC.Base.$fMonadIO_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:45.959071572 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$cfail_closure
.type GHC.Base.$fMonad[]_$cfail_closure, @object
GHC.Base.$fMonad[]_$cfail_closure:
	.quad	GHC.Base.$fMonad[]_$cfail_info


==================== Asm code ====================
2018-03-16 15:54:45.959730302 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad[]_$cfail_entry
.type GHC.Base.$fMonad[]_$cfail_entry, @object
GHC.Base.$fMonad[]_$cfail_entry:
_cffn:
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonad[]_$cfail_entry, .-GHC.Base.$fMonad[]_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:45.960298297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$cfail_info
.type GHC.Base.$fMonad[]_$cfail_info, @object
GHC.Base.$fMonad[]_$cfail_info:
	.quad	GHC.Base.$fMonad[]_$cfail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.962126051 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_closure
.type GHC.Base.$fMonad[]_closure, @object
GHC.Base.$fMonad[]_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicative[]_closure+1
	.quad	GHC.Base.$fMonad[]_$c>>=_closure+2
	.quad	GHC.Base.$fApplicative[]_$c*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$cpure_closure+1
	.quad	GHC.Base.$fMonad[]_$cfail_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.963916643 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlus[]_closure
.type GHC.Base.$fMonadPlus[]_closure, @object
GHC.Base.$fMonadPlus[]_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternative[]_closure+1
	.quad	GHC.Base.$fMonad[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:45.968492225 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$c>>=_closure
.type GHC.Base.$fMonadMaybe_$c>>=_closure, @object
GHC.Base.$fMonadMaybe_$c>>=_closure:
	.quad	GHC.Base.$fMonadMaybe_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.969719173 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadMaybe_$c>>=_entry
.type GHC.Base.$fMonadMaybe_$c>>=_entry, @object
GHC.Base.$fMonadMaybe_$c>>=_entry:
_cffI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cffJ
_cffK:
	movq $block_cffB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cffB
_cffC:
	movq (%rbx),%rax
	jmp *(%rax)
_cffJ:
	movl $GHC.Base.$fMonadMaybe_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadMaybe_$c>>=_entry, .-GHC.Base.$fMonadMaybe_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.970665964 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$c>>=_info
.type GHC.Base.$fMonadMaybe_$c>>=_info, @object
GHC.Base.$fMonadMaybe_$c>>=_info:
	.quad	GHC.Base.$fMonadMaybe_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:45.971819898 UTC

.section .text
.align 8
_cffB:
_cffB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cffF
_cffG:
	movq 6(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
_cffF:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cffB, .-_cffB


==================== Asm code ====================
2018-03-16 15:54:45.972843263 UTC

.section .data.rel.ro
.align 8
.align 1
block_cffB_info:
	.quad	_cffB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.97647344 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$cfail_closure
.type GHC.Base.$fMonadMaybe_$cfail_closure, @object
GHC.Base.$fMonadMaybe_$cfail_closure:
	.quad	GHC.Base.$fMonadMaybe_$cfail_info


==================== Asm code ====================
2018-03-16 15:54:45.97782315 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadMaybe_$cfail_entry
.type GHC.Base.$fMonadMaybe_$cfail_entry, @object
GHC.Base.$fMonadMaybe_$cfail_entry:
_cfg8:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonadMaybe_$cfail_entry, .-GHC.Base.$fMonadMaybe_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:45.978749337 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$cfail_info
.type GHC.Base.$fMonadMaybe_$cfail_info, @object
GHC.Base.$fMonadMaybe_$cfail_info:
	.quad	GHC.Base.$fMonadMaybe_$cfail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:45.98258295 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>=_closure
.type GHC.Base.$fMonad(->)_$c>>=_closure, @object
GHC.Base.$fMonad(->)_$c>>=_closure:
	.quad	GHC.Base.$fMonad(->)_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.983740737 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(->)_$c>>=_entry
.type GHC.Base.$fMonad(->)_$c>>=_entry, @object
GHC.Base.$fMonad(->)_$c>>=_entry:
_cfgl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cfgp
_cfgo:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cfgp:
	movq $32,904(%r13)
	movl $GHC.Base.$fMonad(->)_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(->)_$c>>=_entry, .-GHC.Base.$fMonad(->)_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.984766673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>=_info
.type GHC.Base.$fMonad(->)_$c>>=_info, @object
GHC.Base.$fMonad(->)_$c>>=_info:
	.quad	GHC.Base.$fMonad(->)_$c>>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.991939607 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>=_closure
.type GHC.Base.$fMonad(,)_$c>>=_closure, @object
GHC.Base.$fMonad(,)_$c>>=_closure:
	.quad	GHC.Base.$fMonad(,)_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:45.993216517 UTC

.section .text
.align 8
sat_s8dY_entry:
_cfgN:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfgO
_cfgP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cfgL_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfgO:
	jmp *-16(%r13)
	.size sat_s8dY_entry, .-sat_s8dY_entry


==================== Asm code ====================
2018-03-16 15:54:45.994647564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8dY_info:
	.quad	sat_s8dY_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:45.996051319 UTC

.section .text
.align 8
_cfgL:
_cfgL:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cfgL, .-_cfgL


==================== Asm code ====================
2018-03-16 15:54:45.996861515 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfgL_info:
	.quad	_cfgL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:45.997957901 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_$c>>=_entry
.type GHC.Base.$fMonad(,)_$c>>=_entry, @object
GHC.Base.$fMonad(,)_$c>>=_entry:
_cfgT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cfgV
_cfgW:
	movq $block_cfgy_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfgy
_cfgz:
	movq (%rbx),%rax
	jmp *(%rax)
_cfgV:
	movl $GHC.Base.$fMonad(,)_$c>>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_$c>>=_entry, .-GHC.Base.$fMonad(,)_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:45.998960006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>=_info
.type GHC.Base.$fMonad(,)_$c>>=_info, @object
GHC.Base.$fMonad(,)_$c>>=_info:
	.quad	GHC.Base.$fMonad(,)_$c>>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:45.999939627 UTC

.section .text
.align 8
_cfgy:
_cfgy:
	movq $block_cfgD_info,(%rbp)
	movq 15(%rbx),%r14
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_ap_p_fast
	.size _cfgy, .-_cfgy


==================== Asm code ====================
2018-03-16 15:54:46.000856465 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfgy_info:
	.quad	_cfgy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.001989734 UTC

.section .text
.align 8
_cfgD:
_cfgD:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cfh0
_cfgZ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8dY_info,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfh0:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfgD, .-_cfgD


==================== Asm code ====================
2018-03-16 15:54:46.003051447 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfgD_info:
	.quad	_cfgD
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.01061003 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*>_closure
.type GHC.Base.$fApplicative(,)_$c<*>_closure, @object
GHC.Base.$fApplicative(,)_$c<*>_closure:
	.quad	GHC.Base.$fApplicative(,)_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:46.011713625 UTC

.section .text
.align 8
sat_s8e9_entry:
_cfhM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfhN
_cfhO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cfhK_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfhN:
	jmp *-16(%r13)
	.size sat_s8e9_entry, .-sat_s8e9_entry


==================== Asm code ====================
2018-03-16 15:54:46.012582389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8e9_info:
	.quad	sat_s8e9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.013428363 UTC

.section .text
.align 8
_cfhK:
_cfhK:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cfhK, .-_cfhK


==================== Asm code ====================
2018-03-16 15:54:46.014189382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfhK_info:
	.quad	_cfhK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.01527962 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c<*>_entry
.type GHC.Base.$fApplicative(,)_$c<*>_entry, @object
GHC.Base.$fApplicative(,)_$c<*>_entry:
_cfhS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cfhU
_cfhV:
	movq $block_cfhv_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfhv
_cfhw:
	movq (%rbx),%rax
	jmp *(%rax)
_cfhU:
	movl $GHC.Base.$fApplicative(,)_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c<*>_entry, .-GHC.Base.$fApplicative(,)_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.01624003 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*>_info
.type GHC.Base.$fApplicative(,)_$c<*>_info, @object
GHC.Base.$fApplicative(,)_$c<*>_info:
	.quad	GHC.Base.$fApplicative(,)_$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.017764899 UTC

.section .text
.align 8
_cfhv:
_cfhv:
	movq $block_cfhA_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfhA
_cfhB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfhv, .-_cfhv


==================== Asm code ====================
2018-03-16 15:54:46.0187729 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfhv_info:
	.quad	_cfhv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.01981588 UTC

.section .text
.align 8
_cfhA:
_cfhA:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cfhZ
_cfhY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s8e9_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfhZ:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfhA, .-_cfhA


==================== Asm code ====================
2018-03-16 15:54:46.020855057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfhA_info:
	.quad	_cfhA
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.027997204 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c*>_closure
.type GHC.Base.$fApplicative(,)_$c*>_closure, @object
GHC.Base.$fApplicative(,)_$c*>_closure:
	.quad	GHC.Base.$fApplicative(,)_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:46.029152172 UTC

.section .text
.align 8
sat_s8el_entry:
_cfiO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfiP
_cfiQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cfiM_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfiP:
	jmp *-16(%r13)
	.size sat_s8el_entry, .-sat_s8el_entry


==================== Asm code ====================
2018-03-16 15:54:46.030457884 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8el_info:
	.quad	sat_s8el_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.031338604 UTC

.section .text
.align 8
_cfiM:
_cfiM:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cfiM, .-_cfiM


==================== Asm code ====================
2018-03-16 15:54:46.032197835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfiM_info:
	.quad	_cfiM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.033335943 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c*>_entry
.type GHC.Base.$fApplicative(,)_$c*>_entry, @object
GHC.Base.$fApplicative(,)_$c*>_entry:
_cfiU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cfiW
_cfiX:
	movq $block_cfiy_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfiy
_cfiz:
	movq (%rbx),%rax
	jmp *(%rax)
_cfiW:
	movl $GHC.Base.$fApplicative(,)_$c*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c*>_entry, .-GHC.Base.$fApplicative(,)_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.034310422 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c*>_info
.type GHC.Base.$fApplicative(,)_$c*>_info, @object
GHC.Base.$fApplicative(,)_$c*>_info:
	.quad	GHC.Base.$fApplicative(,)_$c*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.035299029 UTC

.section .text
.align 8
_cfiy:
_cfiy:
	movq $block_cfiD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cfiD
_cfiE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfiy, .-_cfiy


==================== Asm code ====================
2018-03-16 15:54:46.036172568 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfiy_info:
	.quad	_cfiy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.037366835 UTC

.section .text
.align 8
_cfiD:
_cfiD:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cfj1
_cfj0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8el_info,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfj1:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfiD, .-_cfiD


==================== Asm code ====================
2018-03-16 15:54:46.03889921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfiD_info:
	.quad	_cfiD
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.046950462 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$cliftA2_closure
.type GHC.Base.$fApplicative(,)_$cliftA2_closure, @object
GHC.Base.$fApplicative(,)_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative(,)_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:46.04808145 UTC

.section .text
.align 8
sat_s8ex_entry:
_cfjP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfjQ
_cfjR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cfjN_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfjQ:
	jmp *-16(%r13)
	.size sat_s8ex_entry, .-sat_s8ex_entry


==================== Asm code ====================
2018-03-16 15:54:46.049018308 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ex_info:
	.quad	sat_s8ex_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.049786251 UTC

.section .text
.align 8
_cfjN:
_cfjN:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cfjN, .-_cfjN


==================== Asm code ====================
2018-03-16 15:54:46.050333784 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfjN_info:
	.quad	_cfjN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.051082155 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$cliftA2_entry
.type GHC.Base.$fApplicative(,)_$cliftA2_entry, @object
GHC.Base.$fApplicative(,)_$cliftA2_entry:
_cfjV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfjX
_cfjY:
	movq $block_cfjy_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cfjy
_cfjz:
	movq (%rbx),%rax
	jmp *(%rax)
_cfjX:
	movl $GHC.Base.$fApplicative(,)_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$cliftA2_entry, .-GHC.Base.$fApplicative(,)_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:46.051721952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$cliftA2_info
.type GHC.Base.$fApplicative(,)_$cliftA2_info, @object
GHC.Base.$fApplicative(,)_$cliftA2_info:
	.quad	GHC.Base.$fApplicative(,)_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.052385174 UTC

.section .text
.align 8
_cfjy:
_cfjy:
	movq $block_cfjD_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfjD
_cfjE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfjy, .-_cfjy


==================== Asm code ====================
2018-03-16 15:54:46.052997902 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfjy_info:
	.quad	_cfjy
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.054365389 UTC

.section .text
.align 8
_cfjD:
_cfjD:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cfk2
_cfk1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_3_upd_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s8ex_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfk2:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfjD, .-_cfjD


==================== Asm code ====================
2018-03-16 15:54:46.055115738 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfjD_info:
	.quad	_cfjD
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.061045694 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:46.061857247 UTC

.section .text
.align 8
sat_s8eI_entry:
_cfkG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfkH
_cfkI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfkH:
	jmp *-16(%r13)
	.size sat_s8eI_entry, .-sat_s8eI_entry


==================== Asm code ====================
2018-03-16 15:54:46.062430608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eI_info:
	.quad	sat_s8eI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.063085966 UTC

.section .text
.align 8
sat_s8eH_entry:
_cfkN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfkO
_cfkP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfkO:
	jmp *-16(%r13)
	.size sat_s8eH_entry, .-sat_s8eH_entry


==================== Asm code ====================
2018-03-16 15:54:46.063678971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eH_info:
	.quad	sat_s8eH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.064358827 UTC

.section .text
.align 8
sat_s8eG_entry:
_cfkU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfkV
_cfkW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfkV:
	jmp *-16(%r13)
	.size sat_s8eG_entry, .-sat_s8eG_entry


==================== Asm code ====================
2018-03-16 15:54:46.064971098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eG_info:
	.quad	sat_s8eG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.06567264 UTC

.section .text
.align 8
sat_s8eF_entry:
_cfl1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfl2
_cfl3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfl2:
	jmp *-16(%r13)
	.size sat_s8eF_entry, .-sat_s8eF_entry


==================== Asm code ====================
2018-03-16 15:54:46.06625219 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eF_info:
	.quad	sat_s8eF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.06691716 UTC

.section .text
.align 8
sat_s8eE_entry:
_cfl8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfl9
_cfla:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfl9:
	jmp *-16(%r13)
	.size sat_s8eE_entry, .-sat_s8eE_entry


==================== Asm code ====================
2018-03-16 15:54:46.067495501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eE_info:
	.quad	sat_s8eE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.06829784 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_entry:
_cflc:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _cflg
_cflf:
	movq $sat_s8eI_info,-160(%r12)
	movq %r9,-144(%r12)
	movq $sat_s8eH_info,-136(%r12)
	movq %r8,-120(%r12)
	movq $sat_s8eG_info,-112(%r12)
	movq %rdi,-96(%r12)
	movq $sat_s8eF_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq $sat_s8eE_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $(,,,,)_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -136(%r12),%rax
	movq %rax,-8(%r12)
	leaq -160(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cflg:
	movq $168,904(%r13)
	movl $GHC.Base.$fMonoid(,,,,)_$cmempty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:46.069049391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.07454123 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:46.075240939 UTC

.section .text
.align 8
sat_s8eQ_entry:
_cflT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cflU
_cflV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cflU:
	jmp *-16(%r13)
	.size sat_s8eQ_entry, .-sat_s8eQ_entry


==================== Asm code ====================
2018-03-16 15:54:46.075835087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eQ_info:
	.quad	sat_s8eQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.076494833 UTC

.section .text
.align 8
sat_s8eP_entry:
_cfm0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfm1
_cfm2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfm1:
	jmp *-16(%r13)
	.size sat_s8eP_entry, .-sat_s8eP_entry


==================== Asm code ====================
2018-03-16 15:54:46.077142232 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eP_info:
	.quad	sat_s8eP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.077794077 UTC

.section .text
.align 8
sat_s8eO_entry:
_cfm7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfm8
_cfm9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfm8:
	jmp *-16(%r13)
	.size sat_s8eO_entry, .-sat_s8eO_entry


==================== Asm code ====================
2018-03-16 15:54:46.078435717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eO_info:
	.quad	sat_s8eO_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.079072715 UTC

.section .text
.align 8
sat_s8eN_entry:
_cfme:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfmf
_cfmg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfmf:
	jmp *-16(%r13)
	.size sat_s8eN_entry, .-sat_s8eN_entry


==================== Asm code ====================
2018-03-16 15:54:46.07967375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eN_info:
	.quad	sat_s8eN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.080383406 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,,)_$cmempty_entry:
_cfmi:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cfmm
_cfml:
	movq $sat_s8eQ_info,-128(%r12)
	movq %r8,-112(%r12)
	movq $sat_s8eP_info,-104(%r12)
	movq %rdi,-88(%r12)
	movq $sat_s8eO_info,-80(%r12)
	movq %rsi,-64(%r12)
	movq $sat_s8eN_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfmm:
	movq $136,904(%r13)
	movl $GHC.Base.$fMonoid(,,,)_$cmempty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:46.081127107 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.085800039 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:46.086958165 UTC

.section .text
.align 8
sat_s8eW_entry:
_cfmU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfmV
_cfmW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfmV:
	jmp *-16(%r13)
	.size sat_s8eW_entry, .-sat_s8eW_entry


==================== Asm code ====================
2018-03-16 15:54:46.087504297 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eW_info:
	.quad	sat_s8eW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.088146303 UTC

.section .text
.align 8
sat_s8eV_entry:
_cfn1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfn2
_cfn3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfn2:
	jmp *-16(%r13)
	.size sat_s8eV_entry, .-sat_s8eV_entry


==================== Asm code ====================
2018-03-16 15:54:46.08874897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eV_info:
	.quad	sat_s8eV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.089464487 UTC

.section .text
.align 8
sat_s8eU_entry:
_cfn8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfn9
_cfna:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfn9:
	jmp *-16(%r13)
	.size sat_s8eU_entry, .-sat_s8eU_entry


==================== Asm code ====================
2018-03-16 15:54:46.090077791 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eU_info:
	.quad	sat_s8eU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.090831433 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,)_$cmempty_entry:
_cfnc:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cfng
_cfnf:
	movq $sat_s8eW_info,-96(%r12)
	movq %rdi,-80(%r12)
	movq $sat_s8eV_info,-72(%r12)
	movq %rsi,-56(%r12)
	movq $sat_s8eU_info,-48(%r12)
	movq %r14,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfng:
	movq $104,904(%r13)
	movl $GHC.Base.$fMonoid(,,)_$cmempty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:46.091498004 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.095147223 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmempty_closure
.type GHC.Base.$fMonoid(,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:46.095881573 UTC

.section .text
.align 8
sat_s8f0_entry:
_cfnJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfnK
_cfnL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfnK:
	jmp *-16(%r13)
	.size sat_s8f0_entry, .-sat_s8f0_entry


==================== Asm code ====================
2018-03-16 15:54:46.096477064 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8f0_info:
	.quad	sat_s8f0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.097176299 UTC

.section .text
.align 8
sat_s8eZ_entry:
_cfnQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfnR
_cfnS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfnR:
	jmp *-16(%r13)
	.size sat_s8eZ_entry, .-sat_s8eZ_entry


==================== Asm code ====================
2018-03-16 15:54:46.098105648 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eZ_info:
	.quad	sat_s8eZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.098843508 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmempty_entry
.type GHC.Base.$fMonoid(,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,)_$cmempty_entry:
_cfnU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cfnY
_cfnX:
	movq $sat_s8f0_info,-64(%r12)
	movq %rsi,-48(%r12)
	movq $sat_s8eZ_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfnY:
	movq $72,904(%r13)
	movl $GHC.Base.$fMonoid(,)_$cmempty_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmempty_entry, .-GHC.Base.$fMonoid(,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:46.099531221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmempty_info
.type GHC.Base.$fMonoid(,)_$cmempty_info, @object
GHC.Base.$fMonoid(,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.108598262 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.109358219 UTC

.section .text
.align 8
$dSemigroup_s8f4_entry:
_cfom:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfon
_cfoo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfon:
	jmp *-16(%r13)
	.size $dSemigroup_s8f4_entry, .-$dSemigroup_s8f4_entry


==================== Asm code ====================
2018-03-16 15:54:46.109953088 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_s8f4_info:
	.quad	$dSemigroup_s8f4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.110581029 UTC

.section .text
.align 8
$dSemigroup1_s8f5_entry:
_cfot:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfou
_cfov:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfou:
	jmp *-16(%r13)
	.size $dSemigroup1_s8f5_entry, .-$dSemigroup1_s8f5_entry


==================== Asm code ====================
2018-03-16 15:54:46.111199141 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup1_s8f5_info:
	.quad	$dSemigroup1_s8f5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.111893829 UTC

.section .text
.align 8
z_s8f6_entry:
_cfoA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfoB
_cfoC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfoB:
	jmp *-16(%r13)
	.size z_s8f6_entry, .-z_s8f6_entry


==================== Asm code ====================
2018-03-16 15:54:46.112515024 UTC

.section .data.rel.ro
.align 8
.align 1
z_s8f6_info:
	.quad	z_s8f6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.113211304 UTC

.section .text
.align 8
z1_s8f7_entry:
_cfoH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfoI
_cfoJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfoI:
	jmp *-16(%r13)
	.size z1_s8f7_entry, .-z1_s8f7_entry


==================== Asm code ====================
2018-03-16 15:54:46.114242688 UTC

.section .data.rel.ro
.align 8
.align 1
z1_s8f7_info:
	.quad	z1_s8f7_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.115349681 UTC

.section .text
.align 8
sat_s8fl_entry:
_cfp9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfpa
_cfpb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfpa:
	jmp *-16(%r13)
	.size sat_s8fl_entry, .-sat_s8fl_entry


==================== Asm code ====================
2018-03-16 15:54:46.115979075 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fl_info:
	.quad	sat_s8fl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.116650864 UTC

.section .text
.align 8
sat_s8fk_entry:
_cfpg:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfph
_cfpi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfph:
	jmp *-16(%r13)
	.size sat_s8fk_entry, .-sat_s8fk_entry


==================== Asm code ====================
2018-03-16 15:54:46.117298653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fk_info:
	.quad	sat_s8fk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.118040815 UTC

.section .text
.align 8
go_s8f9_entry:
_cfpn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfpo
_cfpp:
	movq $block_cfoQ_info,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfoQ
_cfoR:
	movq (%rbx),%rax
	jmp *(%rax)
_cfpo:
	jmp *-8(%r13)
	.size go_s8f9_entry, .-go_s8f9_entry


==================== Asm code ====================
2018-03-16 15:54:46.118682506 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8f9_info:
	.quad	go_s8f9_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.119433566 UTC

.section .text
.align 8
_cfoQ:
_cfoQ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfpk
_cfpl:
	movq $block_cfoW_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cfoW
_cfoX:
	movq (%rbx),%rax
	jmp *(%rax)
_cfpk:
	movq 24(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfoQ, .-_cfoQ


==================== Asm code ====================
2018-03-16 15:54:46.120040745 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfoQ_info:
	.quad	_cfoQ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.120642992 UTC

.section .text
.align 8
_cfoW:
_cfoW:
	movq $block_cfp1_info,(%rbp)
	movq 24(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,24(%rbp)
	movq %rax,32(%rbp)
	jmp go_s8f9_entry
	.size _cfoW, .-_cfoW


==================== Asm code ====================
2018-03-16 15:54:46.121204538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfoW_info:
	.quad	_cfoW
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.122007058 UTC

.section .text
.align 8
_cfp1:
_cfp1:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cfpx
_cfpw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8fl_info,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s8fk_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfpx:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfp1, .-_cfp1


==================== Asm code ====================
2018-03-16 15:54:46.122694566 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfp1_info:
	.quad	_cfp1
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.123463666 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,)_$cmconcat_entry:
_cfpA:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cfpE
_cfpD:
	movq $$dSemigroup_s8f4_info,-144(%r12)
	movq %r14,-128(%r12)
	movq $$dSemigroup1_s8f5_info,-120(%r12)
	movq %rsi,-104(%r12)
	movq $z_s8f6_info,-96(%r12)
	movq %r14,-80(%r12)
	movq $z1_s8f7_info,-72(%r12)
	movq %rsi,-56(%r12)
	movq $(,)_con_info,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	movq $go_s8f9_info,-24(%r12)
	leaq -144(%r12),%rax
	movq %rax,-16(%r12)
	leaq -120(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	movq %rdi,%r14
	leaq -23(%r12),%rbx
	jmp go_s8f9_entry
_cfpE:
	movq $152,904(%r13)
	movl $GHC.Base.$fMonoid(,)_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.124222582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmconcat_info
.type GHC.Base.$fMonoid(,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.126459715 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$cmconcat_closure
.type GHC.Base.$fMonoid()_$cmconcat_closure, @object
GHC.Base.$fMonoid()_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid()_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.127118423 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid()_$cmconcat_entry
.type GHC.Base.$fMonoid()_$cmconcat_entry, @object
GHC.Base.$fMonoid()_$cmconcat_entry:
_cfqJ:
	movl $()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonoid()_$cmconcat_entry, .-GHC.Base.$fMonoid()_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.12770943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$cmconcat_info
.type GHC.Base.$fMonoid()_$cmconcat_info, @object
GHC.Base.$fMonoid()_$cmconcat_info:
	.quad	GHC.Base.$fMonoid()_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.132770816 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$c<>_closure
.type GHC.Base.$fMonoidMaybe_$c<>_closure, @object
GHC.Base.$fMonoidMaybe_$c<>_closure:
	.quad	GHC.Base.$fMonoidMaybe_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.133507488 UTC

.section .text
.align 8
sat_s8fu_entry:
_cfrb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfrc
_cfrd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfrc:
	jmp *-16(%r13)
	.size sat_s8fu_entry, .-sat_s8fu_entry


==================== Asm code ====================
2018-03-16 15:54:46.134088026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fu_info:
	.quad	sat_s8fu_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.134828697 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_$c<>_entry
.type GHC.Base.$fMonoidMaybe_$c<>_entry, @object
GHC.Base.$fMonoidMaybe_$c<>_entry:
_cfri:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cfrj
_cfrk:
	movq $block_cfqV_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfqV
_cfqW:
	movq (%rbx),%rax
	jmp *(%rax)
_cfrj:
	movl $GHC.Base.$fMonoidMaybe_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_$c<>_entry, .-GHC.Base.$fMonoidMaybe_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.135472206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$c<>_info
.type GHC.Base.$fMonoidMaybe_$c<>_info, @object
GHC.Base.$fMonoidMaybe_$c<>_info:
	.quad	GHC.Base.$fMonoidMaybe_$c<>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.136276611 UTC

.section .text
.align 8
_cfqV:
_cfqV:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cfrf
_cfrg:
	movq $block_cfr1_info,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfr1
_cfr2:
	movq (%rbx),%rax
	jmp *(%rax)
_cfrf:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfqV, .-_cfqV


==================== Asm code ====================
2018-03-16 15:54:46.136931912 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfqV_info:
	.quad	_cfqV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.137777459 UTC

.section .text
.align 8
_cfr1:
_cfr1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfrr
_cfrt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cfrw
_cfrv:
	movq 6(%rbx),%rax
	movq $sat_s8fu_info,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfrw:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cfrr:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfr1, .-_cfr1


==================== Asm code ====================
2018-03-16 15:54:46.138474946 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfr1_info:
	.quad	_cfr1
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.146043557 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat5_closure
.type GHC.Base.$w$csconcat5_closure, @object
GHC.Base.$w$csconcat5_closure:
	.quad	GHC.Base.$w$csconcat5_info


==================== Asm code ====================
2018-03-16 15:54:46.146829613 UTC

.section .text
.align 8
sat_s8fI_entry:
_cfsz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfsA
_cfsB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfsA:
	jmp *-16(%r13)
	.size sat_s8fI_entry, .-sat_s8fI_entry


==================== Asm code ====================
2018-03-16 15:54:46.147466436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fI_info:
	.quad	sat_s8fI_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.148106916 UTC

.section .text
.align 8
go_s8fy_entry:
_cfsG:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfsH
_uft3:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _cfsb
_cfsH:
	jmp *-8(%r13)
	.size go_s8fy_entry, .-go_s8fy_entry


==================== Asm code ====================
2018-03-16 15:54:46.148670304 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8fy_info:
	.quad	go_s8fy_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.149342982 UTC

.section .text
.align 8
_cfsb:
_cfsb:
	movq (%rbp),%rax
	movq 6(%rax),%rax
	movq $block_cfse_info,-8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfse
_cfsf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfsb, .-_cfsb


==================== Asm code ====================
2018-03-16 15:54:46.150167161 UTC

.section .text
.align 8
_cfse:
_cfse:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cfsD
_cfsE:
	movq $block_cfsk_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfsk
_cfsl:
	movq (%rbx),%rax
	jmp *(%rax)
_cfsD:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfse, .-_cfse


==================== Asm code ====================
2018-03-16 15:54:46.150829879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfse_info:
	.quad	_cfse
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.151585224 UTC

.section .text
.align 8
_cfsk:
_cfsk:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cfsP
_cfsR:
	movq $block_cfsq_info,8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,16(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp go_s8fy_entry
_cfsP:
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp _cfsb
	.size _cfsk, .-_cfsk


==================== Asm code ====================
2018-03-16 15:54:46.152237105 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfsk_info:
	.quad	_cfsk
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.15295765 UTC

.section .text
.align 8
_cfsq:
_cfsq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfsV
_cfsX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cft0
_cfsZ:
	movq 6(%rbx),%rax
	movq $sat_s8fI_info,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cft0:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cfsV:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfsq, .-_cfsq


==================== Asm code ====================
2018-03-16 15:54:46.153653145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfsq_info:
	.quad	_cfsq
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.154316724 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat5_entry
.type GHC.Base.$w$csconcat5_entry, @object
GHC.Base.$w$csconcat5_entry:
_cft9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cftd
_cftc:
	movq $go_s8fy_info,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	jmp go_s8fy_entry
_cftd:
	movq $16,904(%r13)
	movl $GHC.Base.$w$csconcat5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat5_entry, .-GHC.Base.$w$csconcat5_entry


==================== Asm code ====================
2018-03-16 15:54:46.154954893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat5_info
.type GHC.Base.$w$csconcat5_info, @object
GHC.Base.$w$csconcat5_info:
	.quad	GHC.Base.$w$csconcat5_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.158693316 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_$csconcat_closure
.type GHC.Base.$fSemigroupMaybe_$csconcat_closure, @object
GHC.Base.$fSemigroupMaybe_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupMaybe_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.159447259 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupMaybe_$csconcat_entry
.type GHC.Base.$fSemigroupMaybe_$csconcat_entry, @object
GHC.Base.$fSemigroupMaybe_$csconcat_entry:
_cfu1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfu2
_cfu3:
	movq $block_cftY_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cftY
_cftZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cfu2:
	movl $GHC.Base.$fSemigroupMaybe_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupMaybe_$csconcat_entry, .-GHC.Base.$fSemigroupMaybe_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.160082441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_$csconcat_info
.type GHC.Base.$fSemigroupMaybe_$csconcat_info, @object
GHC.Base.$fSemigroupMaybe_$csconcat_info:
	.quad	GHC.Base.$fSemigroupMaybe_$csconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.160697879 UTC

.section .text
.align 8
_cftY:
_cftY:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat5_entry
	.size _cftY, .-_cftY


==================== Asm code ====================
2018-03-16 15:54:46.161229517 UTC

.section .data.rel.ro
.align 8
.align 1
block_cftY_info:
	.quad	_cftY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.165126671 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_closure
.type GHC.Base.$fSemigroupMaybe_closure, @object
GHC.Base.$fSemigroupMaybe_closure:
	.quad	GHC.Base.$fSemigroupMaybe_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.165831992 UTC

.section .text
.align 8
sat_s8fS_entry:
_cfuq:
	movq 7(%rbx),%rsi
	movl $Data.Semigroup.Internal.stimesMaybe_closure,%ebx
	jmp stg_ap_pp_fast
	.size sat_s8fS_entry, .-sat_s8fS_entry


==================== Asm code ====================
2018-03-16 15:54:46.166364141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fS_info:
	.quad	sat_s8fS_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8R0_srt+88


==================== Asm code ====================
2018-03-16 15:54:46.166975578 UTC

.section .text
.align 8
sat_s8fQ_entry:
_cfuy:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroupMaybe_$csconcat_entry
	.size sat_s8fQ_entry, .-sat_s8fQ_entry


==================== Asm code ====================
2018-03-16 15:54:46.167549604 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fQ_info:
	.quad	sat_s8fQ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.168172931 UTC

.section .text
.align 8
sat_s8fP_entry:
_cfuG:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$c<>_entry
	.size sat_s8fP_entry, .-sat_s8fP_entry


==================== Asm code ====================
2018-03-16 15:54:46.168743178 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8fP_info:
	.quad	sat_s8fP_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.169578921 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupMaybe_entry
.type GHC.Base.$fSemigroupMaybe_entry, @object
GHC.Base.$fSemigroupMaybe_entry:
_cfuK:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cfuO
_cfuN:
	movq $sat_s8fS_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s8fQ_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8fP_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfuO:
	movq $80,904(%r13)
	movl $GHC.Base.$fSemigroupMaybe_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupMaybe_entry, .-GHC.Base.$fSemigroupMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:46.170288237 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_info
.type GHC.Base.$fSemigroupMaybe_info, @object
GHC.Base.$fSemigroupMaybe_info:
	.quad	GHC.Base.$fSemigroupMaybe_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8R0_srt+88


==================== Asm code ====================
2018-03-16 15:54:46.177068579 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$cmconcat_closure
.type GHC.Base.$fMonoidMaybe_$cmconcat_closure, @object
GHC.Base.$fMonoidMaybe_$cmconcat_closure:
	.quad	GHC.Base.$fMonoidMaybe_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.177956359 UTC

.section .text
.align 8
sat_s8g4_entry:
_cfvA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfvB
_cfvC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfvB:
	jmp *-16(%r13)
	.size sat_s8g4_entry, .-sat_s8g4_entry


==================== Asm code ====================
2018-03-16 15:54:46.178604692 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8g4_info:
	.quad	sat_s8g4_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.179285654 UTC

.section .text
.align 8
go_s8fV_entry:
_cfvH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cfvI
_ufw4:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _cfvc
_cfvI:
	jmp *-8(%r13)
	.size go_s8fV_entry, .-go_s8fV_entry


==================== Asm code ====================
2018-03-16 15:54:46.179927062 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8fV_info:
	.quad	go_s8fV_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.180687492 UTC

.section .text
.align 8
_cfvc:
_cfvc:
	movq (%rbp),%rax
	movq 7(%rax),%rax
	movq $block_cfvf_info,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfvf
_cfvg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfvc, .-_cfvc


==================== Asm code ====================
2018-03-16 15:54:46.181813769 UTC

.section .text
.align 8
_cfvf:
_cfvf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfvE
_cfvF:
	movq $block_cfvl_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfvl
_cfvm:
	movq (%rbx),%rax
	jmp *(%rax)
_cfvE:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfvf, .-_cfvf


==================== Asm code ====================
2018-03-16 15:54:46.182411399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfvf_info:
	.quad	_cfvf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.183124916 UTC

.section .text
.align 8
_cfvl:
_cfvl:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cfvQ
_cfvS:
	movq $block_cfvr_info,(%rbp)
	movq %rax,%r14
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	jmp go_s8fV_entry
_cfvQ:
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cfvc
	.size _cfvl, .-_cfvl


==================== Asm code ====================
2018-03-16 15:54:46.183761374 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfvl_info:
	.quad	_cfvl
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.184600039 UTC

.section .text
.align 8
_cfvr:
_cfvr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfvW
_cfvY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cfw1
_cfw0:
	movq 6(%rbx),%rax
	movq $sat_s8g4_info,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfw1:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cfvW:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfvr, .-_cfvr


==================== Asm code ====================
2018-03-16 15:54:46.185395188 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfvr_info:
	.quad	_cfvr
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.186451059 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_$cmconcat_entry
.type GHC.Base.$fMonoidMaybe_$cmconcat_entry, @object
GHC.Base.$fMonoidMaybe_$cmconcat_entry:
_cfwa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cfwe
_cfwd:
	movq $go_s8fV_info,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%r14
	leaq -7(%r12),%rbx
	jmp go_s8fV_entry
_cfwe:
	movq $16,904(%r13)
	movl $GHC.Base.$fMonoidMaybe_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_$cmconcat_entry, .-GHC.Base.$fMonoidMaybe_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.187085223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$cmconcat_info
.type GHC.Base.$fMonoidMaybe_$cmconcat_info, @object
GHC.Base.$fMonoidMaybe_$cmconcat_info:
	.quad	GHC.Base.$fMonoidMaybe_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.191393396 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_closure
.type GHC.Base.$fMonoidMaybe_closure, @object
GHC.Base.$fMonoidMaybe_closure:
	.quad	GHC.Base.$fMonoidMaybe_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.192055948 UTC

.section .text
.align 8
sat_s8g8_entry:
_cfx3:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$cmconcat_entry
	.size sat_s8g8_entry, .-sat_s8g8_entry


==================== Asm code ====================
2018-03-16 15:54:46.192617045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8g8_info:
	.quad	sat_s8g8_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.193286607 UTC

.section .text
.align 8
sat_s8g7_entry:
_cfxb:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$c<>_entry
	.size sat_s8g7_entry, .-sat_s8g7_entry


==================== Asm code ====================
2018-03-16 15:54:46.193848457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8g7_info:
	.quad	sat_s8g7_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.194522089 UTC

.section .text
.align 8
sat_s8g6_entry:
_cfxi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfxj
_cfxk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroupMaybe_entry
_cfxj:
	jmp *-16(%r13)
	.size sat_s8g6_entry, .-sat_s8g6_entry


==================== Asm code ====================
2018-03-16 15:54:46.195139695 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8g6_info:
	.quad	sat_s8g6_entry
	.quad	1
	.quad	4294967312
	.quad	S8R0_srt+96


==================== Asm code ====================
2018-03-16 15:54:46.195909347 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_entry
.type GHC.Base.$fMonoidMaybe_entry, @object
GHC.Base.$fMonoidMaybe_entry:
_cfxm:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cfxq
_cfxp:
	movq $sat_s8g8_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s8g7_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s8g6_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.Base.Nothing_closure+1,-16(%r12)
	leaq -70(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfxq:
	movq $96,904(%r13)
	movl $GHC.Base.$fMonoidMaybe_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_entry, .-GHC.Base.$fMonoidMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:46.196629704 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_info
.type GHC.Base.$fMonoidMaybe_info, @object
GHC.Base.$fMonoidMaybe_info:
	.quad	GHC.Base.$fMonoidMaybe_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8R0_srt+96


==================== Asm code ====================
2018-03-16 15:54:46.200249296 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_$c<>_closure
.type GHC.Base.$fMonoidOrdering_$c<>_closure, @object
GHC.Base.$fMonoidOrdering_$c<>_closure:
	.quad	GHC.Base.$fMonoidOrdering_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.201033394 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidOrdering_$c<>_entry
.type GHC.Base.$fMonoidOrdering_$c<>_entry, @object
GHC.Base.$fMonoidOrdering_$c<>_entry:
_cfxV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfxW
_cfxX:
	movq $block_cfxN_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cfxN
_cfxO:
	movq (%rbx),%rax
	jmp *(%rax)
_cfxW:
	movl $GHC.Base.$fMonoidOrdering_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidOrdering_$c<>_entry, .-GHC.Base.$fMonoidOrdering_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.202097007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_$c<>_info
.type GHC.Base.$fMonoidOrdering_$c<>_info, @object
GHC.Base.$fMonoidOrdering_$c<>_info:
	.quad	GHC.Base.$fMonoidOrdering_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.202877229 UTC

.section .text
.align 8
_cfxN:
_cfxN:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ufy7
_cfxT:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ufy7:
	cmpq $2,%rbx
	jb _cfxR
_cfxS:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cfxR:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfxN, .-_cfxN


==================== Asm code ====================
2018-03-16 15:54:46.203539028 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfxN_info:
	.quad	_cfxN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.207489069 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_go_closure
.type GHC.Base.$fMonoidOrdering_go_closure, @object
GHC.Base.$fMonoidOrdering_go_closure:
	.quad	GHC.Base.$fMonoidOrdering_go_info


==================== Asm code ====================
2018-03-16 15:54:46.208307372 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidOrdering_go_entry
.type GHC.Base.$fMonoidOrdering_go_entry, @object
GHC.Base.$fMonoidOrdering_go_entry:
_cfyy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfyz
_ufyZ:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _cfyo
_cfyz:
	movl $GHC.Base.$fMonoidOrdering_go_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidOrdering_go_entry, .-GHC.Base.$fMonoidOrdering_go_entry


==================== Asm code ====================
2018-03-16 15:54:46.208927894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_go_info
.type GHC.Base.$fMonoidOrdering_go_info, @object
GHC.Base.$fMonoidOrdering_go_info:
	.quad	GHC.Base.$fMonoidOrdering_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.209668203 UTC

.section .text
.align 8
_cfyo:
_cfyo:
	movq (%rbp),%rax
	movq $block_cfyr_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cfyr
_cfys:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfyo, .-_cfyo


==================== Asm code ====================
2018-03-16 15:54:46.21041672 UTC

.section .text
.align 8
_cfyr:
_cfyr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfyv
_cfyw:
	movq $block_cfyG_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfyG
_cfyI:
	movq (%rbx),%rax
	jmp *(%rax)
_cfyv:
	movl $GHC.Types.EQ_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfyr, .-_cfyr


==================== Asm code ====================
2018-03-16 15:54:46.211020432 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfyr_info:
	.quad	_cfyr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.211778531 UTC

.section .text
.align 8
_cfyG:
_cfyG:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ufyY
_cfyW:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ufyY:
	cmpq $2,%rbx
	jb _cfyO
_cfyS:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cfyo
_cfyO:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfyG, .-_cfyG


==================== Asm code ====================
2018-03-16 15:54:46.212465796 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfyG_info:
	.quad	_cfyG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.215511849 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_closure
.type GHC.Base.$fSemigroupOrdering_closure, @object
GHC.Base.$fSemigroupOrdering_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fMonoidOrdering_$c<>_closure+2
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.216103291 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_closure
.type GHC.Base.$fMonoidOrdering_closure, @object
GHC.Base.$fMonoidOrdering_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroupOrdering_closure+1
	.quad	GHC.Types.EQ_closure+2
	.quad	GHC.Base.$fMonoidOrdering_$c<>_closure+2
	.quad	GHC.Base.$fMonoidOrdering_go_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.216685347 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$cstimes_closure
.type GHC.Base.$fSemigroupOrdering_$cstimes_closure, @object
GHC.Base.$fSemigroupOrdering_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.217440426 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_$cstimes_entry
.type GHC.Base.$fSemigroupOrdering_$cstimes_entry, @object
GHC.Base.$fSemigroupOrdering_$cstimes_entry:
_cfzv:
	movl $GHC.Base.$fMonoidOrdering_closure+1,%esi
	movl $Data.Semigroup.Internal.stimesIdempotentMonoid_closure,%ebx
	jmp stg_ap_pp_fast
	.size GHC.Base.$fSemigroupOrdering_$cstimes_entry, .-GHC.Base.$fSemigroupOrdering_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.218013508 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$cstimes_info
.type GHC.Base.$fSemigroupOrdering_$cstimes_info, @object
GHC.Base.$fSemigroupOrdering_$cstimes_info:
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8R0_srt+112


==================== Asm code ====================
2018-03-16 15:54:46.226673029 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.227427908 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$c<>_slow
.type GHC.Base.$fMonoid(,,,,)_$c<>_slow, @object
GHC.Base.$fMonoid(,,,,)_$c<>_slow:
_cfzF:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
	.size GHC.Base.$fMonoid(,,,,)_$c<>_slow, .-GHC.Base.$fMonoid(,,,,)_$c<>_slow


==================== Asm code ====================
2018-03-16 15:54:46.228625506 UTC

.section .text
.align 8
sat_s8gF_entry:
_cfzX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfzY
_cfzZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfzY:
	jmp *-16(%r13)
	.size sat_s8gF_entry, .-sat_s8gF_entry


==================== Asm code ====================
2018-03-16 15:54:46.229352673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8gF_info:
	.quad	sat_s8gF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.230020688 UTC

.section .text
.align 8
sat_s8gE_entry:
_cfA4:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfA5
_cfA6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfA5:
	jmp *-16(%r13)
	.size sat_s8gE_entry, .-sat_s8gE_entry


==================== Asm code ====================
2018-03-16 15:54:46.230634881 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8gE_info:
	.quad	sat_s8gE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.231311982 UTC

.section .text
.align 8
sat_s8gD_entry:
_cfAb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfAc
_cfAd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfAc:
	jmp *-16(%r13)
	.size sat_s8gD_entry, .-sat_s8gD_entry


==================== Asm code ====================
2018-03-16 15:54:46.231947364 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8gD_info:
	.quad	sat_s8gD_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.232616785 UTC

.section .text
.align 8
sat_s8gC_entry:
_cfAi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfAj
_cfAk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfAj:
	jmp *-16(%r13)
	.size sat_s8gC_entry, .-sat_s8gC_entry


==================== Asm code ====================
2018-03-16 15:54:46.23327842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8gC_info:
	.quad	sat_s8gC_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.233953707 UTC

.section .text
.align 8
sat_s8gB_entry:
_cfAp:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfAq
_cfAr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfAq:
	jmp *-16(%r13)
	.size sat_s8gB_entry, .-sat_s8gB_entry


==================== Asm code ====================
2018-03-16 15:54:46.234623559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8gB_info:
	.quad	sat_s8gB_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.235389846 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,,,)_$c<>_entry:
_cfAs:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cfAu
_cfAv:
	movq $block_cfzJ_info,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfzJ
_cfzK:
	movq (%rbx),%rax
	jmp *(%rax)
_cfAu:
	movl $GHC.Base.$fMonoid(,,,,)_$c<>_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.236083939 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$c<>_info
.type GHC.Base.$fMonoid(,,,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_slow


==================== Asm code ====================
2018-03-16 15:54:46.236865935 UTC

.section .text
.align 8
_cfzJ:
_cfzJ:
	movq $block_cfzO_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rbx,%rdi
	movq 48(%rbp),%rbx
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cfzO
_cfzP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfzJ, .-_cfzJ


==================== Asm code ====================
2018-03-16 15:54:46.23752849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfzJ_info:
	.quad	_cfzJ
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.238391065 UTC

.section .text
.align 8
_cfzO:
_cfzO:
	addq $248,%r12
	cmpq 856(%r13),%r12
	ja _cfAz
_cfAy:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_s8gF_info,-240(%r12)
	movq 64(%rbp),%rdi
	movq %rdi,-224(%r12)
	movq 24(%rbp),%rdi
	movq %rdi,-216(%r12)
	movq %rbx,-208(%r12)
	movq $sat_s8gE_info,-200(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-184(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-176(%r12)
	movq %rsi,-168(%r12)
	movq $sat_s8gD_info,-160(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq %rdx,-128(%r12)
	movq $sat_s8gC_info,-120(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	movq $sat_s8gB_info,-80(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq $(,,,,)_con_info,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq -120(%r12),%rax
	movq %rax,-24(%r12)
	leaq -160(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -240(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfAz:
	movq $248,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfzO, .-_cfzO


==================== Asm code ====================
2018-03-16 15:54:46.23925473 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfzO_info:
	.quad	_cfzO
	.quad	10
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.252760937 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_closure
.type GHC.Base.$fMonoid(,,,,)_$csconcat_closure, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.253970848 UTC

.section .text
.align 8
sat_s8hl_entry:
_cfCd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCe
_cfCf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfCe:
	jmp *-16(%r13)
	.size sat_s8hl_entry, .-sat_s8hl_entry


==================== Asm code ====================
2018-03-16 15:54:46.254597739 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hl_info:
	.quad	sat_s8hl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.255348959 UTC

.section .text
.align 8
sat_s8hk_entry:
_cfCk:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCl
_cfCm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfCl:
	jmp *-16(%r13)
	.size sat_s8hk_entry, .-sat_s8hk_entry


==================== Asm code ====================
2018-03-16 15:54:46.256065249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hk_info:
	.quad	sat_s8hk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.257289908 UTC

.section .text
.align 8
sat_s8hj_entry:
_cfCr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCs
_cfCt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfCs:
	jmp *-16(%r13)
	.size sat_s8hj_entry, .-sat_s8hj_entry


==================== Asm code ====================
2018-03-16 15:54:46.257931647 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hj_info:
	.quad	sat_s8hj_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.258669599 UTC

.section .text
.align 8
sat_s8hi_entry:
_cfCy:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCz
_cfCA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfCz:
	jmp *-16(%r13)
	.size sat_s8hi_entry, .-sat_s8hi_entry


==================== Asm code ====================
2018-03-16 15:54:46.259371662 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hi_info:
	.quad	sat_s8hi_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.260086802 UTC

.section .text
.align 8
sat_s8hh_entry:
_cfCF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCG
_cfCH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfCG:
	jmp *-16(%r13)
	.size sat_s8hh_entry, .-sat_s8hh_entry


==================== Asm code ====================
2018-03-16 15:54:46.260721363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hh_info:
	.quad	sat_s8hh_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.261611899 UTC

.section .text
.align 8
$wgo_s8gV_entry:
_cfCM:
	leaq -120(%rbp),%rax
	cmpq %r15,%rax
	jb _cfCN
_cfCO:
	movq $block_cfBU_info,-88(%rbp)
	movq %rbx,%rax
	movq 2(%rbx),%rcx
	movq 10(%rbx),%rdx
	movq 18(%rbx),%r10
	movq 26(%rbx),%r11
	movq 34(%rbx),%rbx
	movq %rbx,64(%rsp)
	movq (%rbp),%rbx
	movq %rdx,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq 64(%rsp),%rdx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-88,%rbp
	testb $7,%bl
	jne _cfBU
_cfBV:
	movq (%rbx),%rax
	jmp *(%rax)
_cfCN:
	jmp *-8(%r13)
	.size $wgo_s8gV_entry, .-$wgo_s8gV_entry


==================== Asm code ====================
2018-03-16 15:54:46.262374615 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8gV_info:
	.quad	$wgo_s8gV_entry
	.quad	5
	.quad	8
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:46.263126521 UTC

.section .text
.align 8
_cfBU:
_cfBU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfCJ
_cfCK:
	movq $block_cfC0_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfC0
_cfC1:
	movq (%rbx),%rax
	jmp *(%rax)
_cfCJ:
	movq 80(%rbp),%r8
	movq 72(%rbp),%rdi
	movq 64(%rbp),%rsi
	movq 56(%rbp),%r14
	movq 48(%rbp),%rbx
	addq $96,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfBU, .-_cfBU


==================== Asm code ====================
2018-03-16 15:54:46.263799547 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfBU_info:
	.quad	_cfBU
	.quad	11
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.264477129 UTC

.section .text
.align 8
_cfC0:
_cfC0:
	movq 8(%rbp),%rax
	movq $block_cfC5_info,8(%rbp)
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 48(%rbp),%rbx
	movq %rax,(%rbp)
	jmp $wgo_s8gV_entry
	.size _cfC0, .-_cfC0


==================== Asm code ====================
2018-03-16 15:54:46.265084824 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfC0_info:
	.quad	_cfC0
	.quad	12
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.265837445 UTC

.section .text
.align 8
_cfC5:
_cfC5:
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %r14,(%rbp)
	movq %rbx,40(%rbp)
	addq $-32,%rbp
	jmp _cfC6
	.size _cfC5, .-_cfC5


==================== Asm code ====================
2018-03-16 15:54:46.26643587 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfC5_info:
	.quad	_cfC5
	.quad	1035
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.26728344 UTC

.section .text
.align 8
_cfC6:
_cfC6:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _cfCV
_cfCU:
	movq $sat_s8hl_info,-192(%r12)
	movq 64(%rbp),%rax
	movq %rax,-176(%r12)
	movq 112(%rbp),%rax
	movq %rax,-168(%r12)
	movq 24(%rbp),%rax
	movq %rax,-160(%r12)
	movq $sat_s8hk_info,-152(%r12)
	movq 56(%rbp),%rax
	movq %rax,-136(%r12)
	movq 104(%rbp),%rax
	movq %rax,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-120(%r12)
	movq $sat_s8hj_info,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-80(%r12)
	movq $sat_s8hi_info,-72(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq 88(%rbp),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq $sat_s8hh_info,-32(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 80(%rbp),%rax
	movq %rax,-8(%r12)
	movq 72(%rbp),%rax
	movq %rax,(%r12)
	leaq -192(%r12),%r8
	leaq -152(%r12),%rdi
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfCV:
	movq $200,904(%r13)
	movq $block_cfC6_info,(%rbp)
	jmp stg_gc_noregs
	.size _cfC6, .-_cfC6


==================== Asm code ====================
2018-03-16 15:54:46.268118676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfC6_info:
	.quad	_cfC6
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.2689103 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_entry
.type GHC.Base.$fMonoid(,,,,)_$csconcat_entry, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_entry:
_cfD0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfD6
_cfD7:
	movq $block_cfBF_info,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfBF
_cfBG:
	movq (%rbx),%rax
	jmp *(%rax)
_cfD6:
	movl $GHC.Base.$fMonoid(,,,,)_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$csconcat_entry, .-GHC.Base.$fMonoid(,,,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.270072354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_info
.type GHC.Base.$fMonoid(,,,,)_$csconcat_info, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:46.270845139 UTC

.section .text
.align 8
_cfBF:
_cfBF:
	movq $block_cfBK_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfBK
_cfBL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfBF, .-_cfBF


==================== Asm code ====================
2018-03-16 15:54:46.271482469 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfBF_info:
	.quad	_cfBF
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.272361028 UTC

.section .text
.align 8
_cfBK:
_cfBK:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cfDb
_cfDa:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $$wgo_s8gV_info,-40(%r12)
	movq 48(%rbp),%rdi
	movq %rdi,-32(%r12)
	movq 16(%rbp),%rdi
	movq %rdi,-24(%r12)
	movq 24(%rbp),%rdi
	movq %rdi,-16(%r12)
	movq 32(%rbp),%rdi
	movq %rdi,-8(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,(%r12)
	movq $block_cfD1_info,48(%rbp)
	movq %rbx,%r9
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	leaq -34(%r12),%rbx
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp $wgo_s8gV_entry
_cfDb:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfBK, .-_cfBK


==================== Asm code ====================
2018-03-16 15:54:46.273066155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfBK_info:
	.quad	_cfBK
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.273703925 UTC

.section .text
.align 8
_cfD1:
_cfD1:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cfD2
	.size _cfD1, .-_cfD1


==================== Asm code ====================
2018-03-16 15:54:46.274283407 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfD1_info:
	.quad	_cfD1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.2750284 UTC

.section .text
.align 8
_cfD2:
_cfD2:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cfDe
_cfDd:
	movq $(,,,,)_con_info,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfDe:
	movq $48,904(%r13)
	movq $block_cfD2_info,(%rbp)
	jmp stg_gc_noregs
	.size _cfD2, .-_cfD2


==================== Asm code ====================
2018-03-16 15:54:46.27565595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfD2_info:
	.quad	_cfD2
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.284779199 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_closure
.type GHC.Base.$fMonoid(,,,,)_$cstimes_closure, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.285583032 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_slow
.type GHC.Base.$fMonoid(,,,,)_$cstimes_slow, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_slow:
_cfEU:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
	.size GHC.Base.$fMonoid(,,,,)_$cstimes_slow, .-GHC.Base.$fMonoid(,,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:46.286380439 UTC

.section .text
.align 8
sat_s8hK_entry:
_cfF7:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfF8
_cfF9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfF8:
	jmp *-16(%r13)
	.size sat_s8hK_entry, .-sat_s8hK_entry


==================== Asm code ====================
2018-03-16 15:54:46.287006733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hK_info:
	.quad	sat_s8hK_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.287708044 UTC

.section .text
.align 8
sat_s8hJ_entry:
_cfFe:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfFf
_cfFg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfFf:
	jmp *-16(%r13)
	.size sat_s8hJ_entry, .-sat_s8hJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.288337985 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hJ_info:
	.quad	sat_s8hJ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.28903374 UTC

.section .text
.align 8
sat_s8hI_entry:
_cfFl:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfFm
_cfFn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfFm:
	jmp *-16(%r13)
	.size sat_s8hI_entry, .-sat_s8hI_entry


==================== Asm code ====================
2018-03-16 15:54:46.2897214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hI_info:
	.quad	sat_s8hI_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.290409005 UTC

.section .text
.align 8
sat_s8hH_entry:
_cfFs:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfFt
_cfFu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfFt:
	jmp *-16(%r13)
	.size sat_s8hH_entry, .-sat_s8hH_entry


==================== Asm code ====================
2018-03-16 15:54:46.291028483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hH_info:
	.quad	sat_s8hH_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.291737127 UTC

.section .text
.align 8
sat_s8hG_entry:
_cfFz:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfFA
_cfFB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfFA:
	jmp *-16(%r13)
	.size sat_s8hG_entry, .-sat_s8hG_entry


==================== Asm code ====================
2018-03-16 15:54:46.292385465 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hG_info:
	.quad	sat_s8hG_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.293182736 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_entry
.type GHC.Base.$fMonoid(,,,,)_$cstimes_entry, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_entry:
_cfFC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfFE
_cfFF:
	movq $block_cfEY_info,-40(%rbp)
	movq 16(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,16(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfEY
_cfEZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cfFE:
	movl $GHC.Base.$fMonoid(,,,,)_$cstimes_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cstimes_entry, .-GHC.Base.$fMonoid(,,,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.294179438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_info
.type GHC.Base.$fMonoid(,,,,)_$cstimes_info, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	8
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:46.295150493 UTC

.section .text
.align 8
_cfEY:
_cfEY:
	addq $288,%r12
	cmpq 856(%r13),%r12
	ja _cfFI
_cfFH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq $sat_s8hK_info,-280(%r12)
	movq 32(%rbp),%rdi
	movq %rdi,-264(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,-256(%r12)
	movq 48(%rbp),%r8
	movq %r8,-248(%r12)
	movq %rbx,-240(%r12)
	movq $sat_s8hJ_info,-232(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-216(%r12)
	movq %rdi,-208(%r12)
	movq %r8,-200(%r12)
	movq %rsi,-192(%r12)
	movq $sat_s8hI_info,-184(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-168(%r12)
	movq %rdi,-160(%r12)
	movq %r8,-152(%r12)
	movq %rdx,-144(%r12)
	movq $sat_s8hH_info,-136(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq %rdi,-112(%r12)
	movq %r8,-104(%r12)
	movq %rcx,-96(%r12)
	movq $sat_s8hG_info,-88(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %rax,-48(%r12)
	movq $(,,,,)_con_info,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	leaq -136(%r12),%rax
	movq %rax,-24(%r12)
	leaq -184(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -280(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfFI:
	movq $288,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfEY, .-_cfEY


==================== Asm code ====================
2018-03-16 15:54:46.296036647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfEY_info:
	.quad	_cfEY
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.30223544 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,,)_closure
.type GHC.Base.$fSemigroup(,,,,)_closure, @object
GHC.Base.$fSemigroup(,,,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.303123734 UTC

.section .text
.align 8
sat_s8hS_entry:
_cfGO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cfGP
_cfGQ:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
_cfGP:
	jmp *-8(%r13)
	.size sat_s8hS_entry, .-sat_s8hS_entry


==================== Asm code ====================
2018-03-16 15:54:46.303782486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hS_info:
	.quad	sat_s8hS_entry
	.quad	5
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.304526808 UTC

.section .text
.align 8
sat_s8hR_entry:
_cfGW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfGX
_cfGY:
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$csconcat_entry
_cfGX:
	jmp *-8(%r13)
	.size sat_s8hR_entry, .-sat_s8hR_entry


==================== Asm code ====================
2018-03-16 15:54:46.305147545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hR_info:
	.quad	sat_s8hR_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.305947865 UTC

.section .text
.align 8
sat_s8hQ_entry:
_cfH4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfH5
_cfH6:
	movq 38(%rbx),%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq %r14,%rcx
	movq 6(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
_cfH5:
	jmp *-8(%r13)
	.size sat_s8hQ_entry, .-sat_s8hQ_entry


==================== Asm code ====================
2018-03-16 15:54:46.306626167 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hQ_info:
	.quad	sat_s8hQ_entry
	.quad	5
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.307504447 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,,)_entry
.type GHC.Base.$fSemigroup(,,,,)_entry, @object
GHC.Base.$fSemigroup(,,,,)_entry:
_cfH8:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _cfHc
_cfHb:
	movq $sat_s8hS_info,-168(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %r8,-136(%r12)
	movq %r9,-128(%r12)
	movq $sat_s8hR_info,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %r8,-88(%r12)
	movq %r9,-80(%r12)
	movq $sat_s8hQ_info,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -70(%r12),%rax
	movq %rax,-16(%r12)
	leaq -119(%r12),%rax
	movq %rax,-8(%r12)
	leaq -165(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfHc:
	movq $176,904(%r13)
	movl $GHC.Base.$fSemigroup(,,,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,,)_entry, .-GHC.Base.$fSemigroup(,,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.308315324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,,)_info
.type GHC.Base.$fSemigroup(,,,,)_info, @object
GHC.Base.$fSemigroup(,,,,)_info:
	.quad	GHC.Base.$fSemigroup(,,,,)_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.323034755 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid1_closure
.type GHC.Base.$w$cp1Monoid1_closure, @object
GHC.Base.$w$cp1Monoid1_closure:
	.quad	GHC.Base.$w$cp1Monoid1_info


==================== Asm code ====================
2018-03-16 15:54:46.323873396 UTC

.section .text
.align 8
sat_s8ie_entry:
_cfHF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfHG
_cfHH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfHG:
	jmp *-16(%r13)
	.size sat_s8ie_entry, .-sat_s8ie_entry


==================== Asm code ====================
2018-03-16 15:54:46.324501166 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ie_info:
	.quad	sat_s8ie_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.325181564 UTC

.section .text
.align 8
sat_s8id_entry:
_cfHM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfHN
_cfHO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfHN:
	jmp *-16(%r13)
	.size sat_s8id_entry, .-sat_s8id_entry


==================== Asm code ====================
2018-03-16 15:54:46.325906118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8id_info:
	.quad	sat_s8id_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.326635997 UTC

.section .text
.align 8
sat_s8ic_entry:
_cfHT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfHU
_cfHV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfHU:
	jmp *-16(%r13)
	.size sat_s8ic_entry, .-sat_s8ic_entry


==================== Asm code ====================
2018-03-16 15:54:46.327722757 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ic_info:
	.quad	sat_s8ic_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.328464453 UTC

.section .text
.align 8
sat_s8ib_entry:
_cfI0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfI1
_cfI2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfI1:
	jmp *-16(%r13)
	.size sat_s8ib_entry, .-sat_s8ib_entry


==================== Asm code ====================
2018-03-16 15:54:46.329080775 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ib_info:
	.quad	sat_s8ib_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.329806668 UTC

.section .text
.align 8
sat_s8ia_entry:
_cfI7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfI8
_cfI9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfI8:
	jmp *-16(%r13)
	.size sat_s8ia_entry, .-sat_s8ia_entry


==================== Asm code ====================
2018-03-16 15:54:46.330405193 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ia_info:
	.quad	sat_s8ia_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.331183623 UTC

.section .text
.align 8
sat_s8if_entry:
_cfIf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIg
_cfIh:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
_cfIg:
	jmp *-8(%r13)
	.size sat_s8if_entry, .-sat_s8if_entry


==================== Asm code ====================
2018-03-16 15:54:46.331855579 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8if_info:
	.quad	sat_s8if_entry
	.quad	5
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.332554296 UTC

.section .text
.align 8
sat_s8i8_entry:
_cfIm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIn
_cfIo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfIn:
	jmp *-16(%r13)
	.size sat_s8i8_entry, .-sat_s8i8_entry


==================== Asm code ====================
2018-03-16 15:54:46.333146832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i8_info:
	.quad	sat_s8i8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.33381925 UTC

.section .text
.align 8
sat_s8i7_entry:
_cfIt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIu
_cfIv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfIu:
	jmp *-16(%r13)
	.size sat_s8i7_entry, .-sat_s8i7_entry


==================== Asm code ====================
2018-03-16 15:54:46.33434379 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i7_info:
	.quad	sat_s8i7_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.335046201 UTC

.section .text
.align 8
sat_s8i6_entry:
_cfIA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIB
_cfIC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfIB:
	jmp *-16(%r13)
	.size sat_s8i6_entry, .-sat_s8i6_entry


==================== Asm code ====================
2018-03-16 15:54:46.335645401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i6_info:
	.quad	sat_s8i6_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.336332542 UTC

.section .text
.align 8
sat_s8i5_entry:
_cfIH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfII
_cfIJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfII:
	jmp *-16(%r13)
	.size sat_s8i5_entry, .-sat_s8i5_entry


==================== Asm code ====================
2018-03-16 15:54:46.336954876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i5_info:
	.quad	sat_s8i5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.337845197 UTC

.section .text
.align 8
sat_s8i4_entry:
_cfIO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIP
_cfIQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfIP:
	jmp *-16(%r13)
	.size sat_s8i4_entry, .-sat_s8i4_entry


==================== Asm code ====================
2018-03-16 15:54:46.33848228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i4_info:
	.quad	sat_s8i4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.339186653 UTC

.section .text
.align 8
sat_s8i9_entry:
_cfIW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfIX
_cfIY:
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$csconcat_entry
_cfIX:
	jmp *-8(%r13)
	.size sat_s8i9_entry, .-sat_s8i9_entry


==================== Asm code ====================
2018-03-16 15:54:46.339860835 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i9_info:
	.quad	sat_s8i9_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.34059831 UTC

.section .text
.align 8
sat_s8i2_entry:
_cfJ3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJ4
_cfJ5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfJ4:
	jmp *-16(%r13)
	.size sat_s8i2_entry, .-sat_s8i2_entry


==================== Asm code ====================
2018-03-16 15:54:46.341690288 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i2_info:
	.quad	sat_s8i2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.342413257 UTC

.section .text
.align 8
sat_s8i1_entry:
_cfJa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJb
_cfJc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfJb:
	jmp *-16(%r13)
	.size sat_s8i1_entry, .-sat_s8i1_entry


==================== Asm code ====================
2018-03-16 15:54:46.343001243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i1_info:
	.quad	sat_s8i1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.343667407 UTC

.section .text
.align 8
sat_s8i0_entry:
_cfJh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJi
_cfJj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfJi:
	jmp *-16(%r13)
	.size sat_s8i0_entry, .-sat_s8i0_entry


==================== Asm code ====================
2018-03-16 15:54:46.34432659 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i0_info:
	.quad	sat_s8i0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.345047657 UTC

.section .text
.align 8
sat_s8hZ_entry:
_cfJo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJp
_cfJq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfJp:
	jmp *-16(%r13)
	.size sat_s8hZ_entry, .-sat_s8hZ_entry


==================== Asm code ====================
2018-03-16 15:54:46.345721949 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hZ_info:
	.quad	sat_s8hZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.346401859 UTC

.section .text
.align 8
sat_s8hY_entry:
_cfJv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJw
_cfJx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfJw:
	jmp *-16(%r13)
	.size sat_s8hY_entry, .-sat_s8hY_entry


==================== Asm code ====================
2018-03-16 15:54:46.347028696 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8hY_info:
	.quad	sat_s8hY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.347749374 UTC

.section .text
.align 8
sat_s8i3_entry:
_cfJD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfJE
_cfJF:
	movq 38(%rbx),%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq %r14,%rcx
	movq 6(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
_cfJE:
	jmp *-8(%r13)
	.size sat_s8i3_entry, .-sat_s8i3_entry


==================== Asm code ====================
2018-03-16 15:54:46.348394668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8i3_info:
	.quad	sat_s8i3_entry
	.quad	5
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.349454555 UTC

.section .text
.align 8
.globl GHC.Base.$w$cp1Monoid1_entry
.type GHC.Base.$w$cp1Monoid1_entry, @object
GHC.Base.$w$cp1Monoid1_entry:
_cfJG:
	addq $504,%r12
	cmpq 856(%r13),%r12
	ja _cfJK
_cfJJ:
	movq $sat_s8ie_info,-496(%r12)
	movq %r9,-480(%r12)
	movq $sat_s8id_info,-472(%r12)
	movq %r8,-456(%r12)
	movq $sat_s8ic_info,-448(%r12)
	movq %rdi,-432(%r12)
	movq $sat_s8ib_info,-424(%r12)
	movq %rsi,-408(%r12)
	movq $sat_s8ia_info,-400(%r12)
	movq %r14,-384(%r12)
	movq $sat_s8if_info,-376(%r12)
	leaq -400(%r12),%rax
	movq %rax,-368(%r12)
	leaq -424(%r12),%rax
	movq %rax,-360(%r12)
	leaq -448(%r12),%rax
	movq %rax,-352(%r12)
	leaq -472(%r12),%rax
	movq %rax,-344(%r12)
	leaq -496(%r12),%rax
	movq %rax,-336(%r12)
	movq $sat_s8i8_info,-328(%r12)
	movq %r9,-312(%r12)
	movq $sat_s8i7_info,-304(%r12)
	movq %r8,-288(%r12)
	movq $sat_s8i6_info,-280(%r12)
	movq %rdi,-264(%r12)
	movq $sat_s8i5_info,-256(%r12)
	movq %rsi,-240(%r12)
	movq $sat_s8i4_info,-232(%r12)
	movq %r14,-216(%r12)
	movq $sat_s8i9_info,-208(%r12)
	leaq -232(%r12),%rax
	movq %rax,-200(%r12)
	leaq -256(%r12),%rax
	movq %rax,-192(%r12)
	leaq -280(%r12),%rax
	movq %rax,-184(%r12)
	leaq -304(%r12),%rax
	movq %rax,-176(%r12)
	leaq -328(%r12),%rax
	movq %rax,-168(%r12)
	movq $sat_s8i2_info,-160(%r12)
	movq %r9,-144(%r12)
	movq $sat_s8i1_info,-136(%r12)
	movq %r8,-120(%r12)
	movq $sat_s8i0_info,-112(%r12)
	movq %rdi,-96(%r12)
	movq $sat_s8hZ_info,-88(%r12)
	movq %rsi,-72(%r12)
	movq $sat_s8hY_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8i3_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -136(%r12),%rax
	movq %rax,-8(%r12)
	leaq -160(%r12),%rax
	movq %rax,(%r12)
	leaq -373(%r12),%rsi
	leaq -207(%r12),%r14
	leaq -38(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfJK:
	movq $504,904(%r13)
	movl $GHC.Base.$w$cp1Monoid1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$cp1Monoid1_entry, .-GHC.Base.$w$cp1Monoid1_entry


==================== Asm code ====================
2018-03-16 15:54:46.350496894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid1_info
.type GHC.Base.$w$cp1Monoid1_info, @object
GHC.Base.$w$cp1Monoid1_info:
	.quad	GHC.Base.$w$cp1Monoid1_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.353987012 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.355200009 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry:
_cfLm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfLn
_cfLo:
	movq $block_cfLj_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_cfLn:
	movl $GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.355875424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.356614871 UTC

.section .text
.align 8
_cfLj:
_cfLj:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cfLr
_cfLq:
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfLr:
	movq $32,904(%r13)
	jmp stg_gc_ppp
	.size _cfLj, .-_cfLj


==================== Asm code ====================
2018-03-16 15:54:46.357655215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfLj_info:
	.quad	_cfLj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.360812633 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:46.361610211 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_entry:
_cfLH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfLI
_cfLJ:
	movq $block_cfLF_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_cfLI:
	movl $GHC.Base.$fMonoid(,,,,)_$cmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:46.362243711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.362873547 UTC

.section .text
.align 8
_cfLF:
_cfLF:
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cfLF, .-_cfLF


==================== Asm code ====================
2018-03-16 15:54:46.363440166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfLF_info:
	.quad	_cfLF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.379446313 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.380374139 UTC

.section .text
.align 8
k_s8iD_entry:
_cfM4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfM5
_cfM6:
	movq $block_cfM1_info,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_cfM5:
	jmp *-16(%r13)
	.size k_s8iD_entry, .-k_s8iD_entry


==================== Asm code ====================
2018-03-16 15:54:46.380997101 UTC

.section .data.rel.ro
.align 8
.align 1
k_s8iD_info:
	.quad	k_s8iD_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.38185625 UTC

.section .text
.align 8
_cfM1:
_cfM1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cfM9
_cfM8:
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfM9:
	movq $32,904(%r13)
	jmp stg_gc_ppp
	.size _cfM1, .-_cfM1


==================== Asm code ====================
2018-03-16 15:54:46.382446146 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfM1_info:
	.quad	_cfM1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.383158002 UTC

.section .text
.align 8
k1_s8iI_entry:
_cfMe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMf
_cfMg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.<>_entry
_cfMf:
	jmp *-16(%r13)
	.size k1_s8iI_entry, .-k1_s8iI_entry


==================== Asm code ====================
2018-03-16 15:54:46.383775858 UTC

.section .data.rel.ro
.align 8
.align 1
k1_s8iI_info:
	.quad	k1_s8iI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.384470632 UTC

.section .text
.align 8
z_s8iJ_entry:
_cfMl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMm
_cfMn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfMm:
	jmp *-16(%r13)
	.size z_s8iJ_entry, .-z_s8iJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.385093784 UTC

.section .data.rel.ro
.align 8
.align 1
z_s8iJ_info:
	.quad	z_s8iJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.386765073 UTC

.section .text
.align 8
z1_s8iK_entry:
_cfMs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMt
_cfMu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfMt:
	jmp *-16(%r13)
	.size z1_s8iK_entry, .-z1_s8iK_entry


==================== Asm code ====================
2018-03-16 15:54:46.387763364 UTC

.section .data.rel.ro
.align 8
.align 1
z1_s8iK_info:
	.quad	z1_s8iK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.388833 UTC

.section .text
.align 8
z2_s8iL_entry:
_cfMz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMA
_cfMB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfMA:
	jmp *-16(%r13)
	.size z2_s8iL_entry, .-z2_s8iL_entry


==================== Asm code ====================
2018-03-16 15:54:46.389749776 UTC

.section .data.rel.ro
.align 8
.align 1
z2_s8iL_info:
	.quad	z2_s8iL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.390809014 UTC

.section .text
.align 8
z3_s8iM_entry:
_cfMG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMH
_cfMI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfMH:
	jmp *-16(%r13)
	.size z3_s8iM_entry, .-z3_s8iM_entry


==================== Asm code ====================
2018-03-16 15:54:46.391795083 UTC

.section .data.rel.ro
.align 8
.align 1
z3_s8iM_info:
	.quad	z3_s8iM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.393523482 UTC

.section .text
.align 8
z4_s8iN_entry:
_cfMN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfMO
_cfMP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cfMO:
	jmp *-16(%r13)
	.size z4_s8iN_entry, .-z4_s8iN_entry


==================== Asm code ====================
2018-03-16 15:54:46.394569071 UTC

.section .data.rel.ro
.align 8
.align 1
z4_s8iN_info:
	.quad	z4_s8iN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.395498243 UTC

.section .text
.align 8
go_s8iP_entry:
_cfN3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cfN4
_cfN5:
	movq $block_cfMW_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cfMW
_cfMX:
	movq (%rbx),%rax
	jmp *(%rax)
_cfN4:
	jmp *-8(%r13)
	.size go_s8iP_entry, .-go_s8iP_entry


==================== Asm code ====================
2018-03-16 15:54:46.396307613 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8iP_info:
	.quad	go_s8iP_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.397118973 UTC

.section .text
.align 8
_cfMW:
_cfMW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfN0
_cfN1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cfNe
_cfNd:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_cfNe:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cfN0:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfMW, .-_cfMW


==================== Asm code ====================
2018-03-16 15:54:46.397893621 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfMW_info:
	.quad	_cfMW
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.398815317 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_entry:
_cfNg:
	addq $272,%r12
	cmpq 856(%r13),%r12
	ja _cfNk
_cfNj:
	movq $k_s8iD_info,-264(%r12)
	movq %r14,-248(%r12)
	movq %rsi,-240(%r12)
	movq %rdi,-232(%r12)
	movq %r8,-224(%r12)
	movq %r9,-216(%r12)
	movq $k1_s8iI_info,-208(%r12)
	leaq -264(%r12),%rax
	movq %rax,-192(%r12)
	movq $z_s8iJ_info,-184(%r12)
	movq %r14,-168(%r12)
	movq $z1_s8iK_info,-160(%r12)
	movq %rsi,-144(%r12)
	movq $z2_s8iL_info,-136(%r12)
	movq %rdi,-120(%r12)
	movq $z3_s8iM_info,-112(%r12)
	movq %r8,-96(%r12)
	movq $z4_s8iN_info,-88(%r12)
	movq %r9,-72(%r12)
	movq $(,,,,)_con_info,-64(%r12)
	leaq -184(%r12),%rax
	movq %rax,-56(%r12)
	leaq -160(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -112(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	movq $go_s8iP_info,-16(%r12)
	leaq -208(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfNk:
	movq $272,904(%r13)
	movl $GHC.Base.$fMonoid(,,,,)_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.399680719 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.405956362 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_closure
.type GHC.Base.$fMonoid(,,,,)_closure, @object
GHC.Base.$fMonoid(,,,,)_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.40678976 UTC

.section .text
.align 8
sat_s8j3_entry:
_cfOo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfOp
_cfOq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
_cfOp:
	jmp *-16(%r13)
	.size sat_s8j3_entry, .-sat_s8j3_entry


==================== Asm code ====================
2018-03-16 15:54:46.407418601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8j3_info:
	.quad	sat_s8j3_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.408558438 UTC

.section .text
.align 8
sat_s8j2_entry:
_cfOv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfOw
_cfOx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmappend_entry
_cfOw:
	jmp *-16(%r13)
	.size sat_s8j2_entry, .-sat_s8j2_entry


==================== Asm code ====================
2018-03-16 15:54:46.409274136 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8j2_info:
	.quad	sat_s8j2_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.409975021 UTC

.section .text
.align 8
sat_s8j1_entry:
_cfOC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfOD
_cfOE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmempty_entry
_cfOD:
	jmp *-16(%r13)
	.size sat_s8j1_entry, .-sat_s8j1_entry


==================== Asm code ====================
2018-03-16 15:54:46.410675807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8j1_info:
	.quad	sat_s8j1_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.411447427 UTC

.section .text
.align 8
sat_s8j0_entry:
_cfOJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfOK
_cfOL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
_cfOK:
	jmp *-16(%r13)
	.size sat_s8j0_entry, .-sat_s8j0_entry


==================== Asm code ====================
2018-03-16 15:54:46.412116365 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8j0_info:
	.quad	sat_s8j0_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.412989302 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_entry
.type GHC.Base.$fMonoid(,,,,)_entry, @object
GHC.Base.$fMonoid(,,,,)_entry:
_cfON:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _cfOR
_cfOQ:
	movq $sat_s8j3_info,-256(%r12)
	movq %r14,-240(%r12)
	movq %rsi,-232(%r12)
	movq %rdi,-224(%r12)
	movq %r8,-216(%r12)
	movq %r9,-208(%r12)
	movq $sat_s8j2_info,-200(%r12)
	movq %r14,-184(%r12)
	movq %rsi,-176(%r12)
	movq %rdi,-168(%r12)
	movq %r8,-160(%r12)
	movq %r9,-152(%r12)
	movq $sat_s8j1_info,-144(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq %rdi,-112(%r12)
	movq %r8,-104(%r12)
	movq %r9,-96(%r12)
	movq $sat_s8j0_info,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -144(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfOR:
	movq $264,904(%r13)
	movl $GHC.Base.$fMonoid(,,,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_entry, .-GHC.Base.$fMonoid(,,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.413881019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_info
.type GHC.Base.$fMonoid(,,,,)_info, @object
GHC.Base.$fMonoid(,,,,)_info:
	.quad	GHC.Base.$fMonoid(,,,,)_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.421573515 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.42291008 UTC

.section .text
.align 8
sat_s8jn_entry:
_cfPz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfPA
_cfPB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfPA:
	jmp *-16(%r13)
	.size sat_s8jn_entry, .-sat_s8jn_entry


==================== Asm code ====================
2018-03-16 15:54:46.423564974 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jn_info:
	.quad	sat_s8jn_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.424282425 UTC

.section .text
.align 8
sat_s8jm_entry:
_cfPG:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfPH
_cfPI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfPH:
	jmp *-16(%r13)
	.size sat_s8jm_entry, .-sat_s8jm_entry


==================== Asm code ====================
2018-03-16 15:54:46.424934555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jm_info:
	.quad	sat_s8jm_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.425730951 UTC

.section .text
.align 8
sat_s8jl_entry:
_cfPN:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfPO
_cfPP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfPO:
	jmp *-16(%r13)
	.size sat_s8jl_entry, .-sat_s8jl_entry


==================== Asm code ====================
2018-03-16 15:54:46.426383768 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jl_info:
	.quad	sat_s8jl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.427114397 UTC

.section .text
.align 8
sat_s8jk_entry:
_cfPU:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfPV
_cfPW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfPV:
	jmp *-16(%r13)
	.size sat_s8jk_entry, .-sat_s8jk_entry


==================== Asm code ====================
2018-03-16 15:54:46.427803366 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jk_info:
	.quad	sat_s8jk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.428579453 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,,)_$c<>_entry:
_cfPX:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cfPZ
_cfQ0:
	movq $block_cfPl_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfPl
_cfPm:
	movq (%rbx),%rax
	jmp *(%rax)
_cfPZ:
	movl $GHC.Base.$fMonoid(,,,)_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.429180091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$c<>_info
.type GHC.Base.$fMonoid(,,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:46.429984401 UTC

.section .text
.align 8
_cfPl:
_cfPl:
	movq $block_cfPq_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq 40(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,40(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cfPq
_cfPr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfPl, .-_cfPl


==================== Asm code ====================
2018-03-16 15:54:46.430635401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfPl_info:
	.quad	_cfPl
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.431487171 UTC

.section .text
.align 8
_cfPq:
_cfPq:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _cfQ4
_cfQ3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_s8jn_info,-192(%r12)
	movq 56(%rbp),%rsi
	movq %rsi,-176(%r12)
	movq 16(%rbp),%rsi
	movq %rsi,-168(%r12)
	movq %rbx,-160(%r12)
	movq $sat_s8jm_info,-152(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq %rdx,-120(%r12)
	movq $sat_s8jl_info,-112(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rcx,-80(%r12)
	movq $sat_s8jk_info,-72(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -152(%r12),%rax
	movq %rax,-8(%r12)
	leaq -192(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfQ4:
	movq $200,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfPq, .-_cfPq


==================== Asm code ====================
2018-03-16 15:54:46.432340569 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfPq_info:
	.quad	_cfPq
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.442904435 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat2_closure
.type GHC.Base.$w$csconcat2_closure, @object
GHC.Base.$w$csconcat2_closure:
	.quad	GHC.Base.$w$csconcat2_info


==================== Asm code ====================
2018-03-16 15:54:46.443696434 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat2_slow
.type GHC.Base.$w$csconcat2_slow, @object
GHC.Base.$w$csconcat2_slow:
_cfQW:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size GHC.Base.$w$csconcat2_slow, .-GHC.Base.$w$csconcat2_slow


==================== Asm code ====================
2018-03-16 15:54:46.444500824 UTC

.section .text
.align 8
sat_s8jT_entry:
_cfRm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfRn
_cfRo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfRn:
	jmp *-16(%r13)
	.size sat_s8jT_entry, .-sat_s8jT_entry


==================== Asm code ====================
2018-03-16 15:54:46.445110542 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jT_info:
	.quad	sat_s8jT_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.445861403 UTC

.section .text
.align 8
sat_s8jS_entry:
_cfRt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfRu
_cfRv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfRu:
	jmp *-16(%r13)
	.size sat_s8jS_entry, .-sat_s8jS_entry


==================== Asm code ====================
2018-03-16 15:54:46.4465028 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jS_info:
	.quad	sat_s8jS_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.44717788 UTC

.section .text
.align 8
sat_s8jR_entry:
_cfRA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfRB
_cfRC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfRB:
	jmp *-16(%r13)
	.size sat_s8jR_entry, .-sat_s8jR_entry


==================== Asm code ====================
2018-03-16 15:54:46.447821432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jR_info:
	.quad	sat_s8jR_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.448528623 UTC

.section .text
.align 8
sat_s8jQ_entry:
_cfRH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfRI
_cfRJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cfRI:
	jmp *-16(%r13)
	.size sat_s8jQ_entry, .-sat_s8jQ_entry


==================== Asm code ====================
2018-03-16 15:54:46.449188489 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8jQ_info:
	.quad	sat_s8jQ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.450094485 UTC

.section .text
.align 8
$wgo_s8jx_entry:
_cfRO:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cfRP
_cfRQ:
	movq $block_cfR5_info,-80(%rbp)
	movq %rbx,%rax
	movq 3(%rbx),%rcx
	movq 11(%rbx),%rdx
	movq 19(%rbx),%r10
	movq 27(%rbx),%rbx
	movq %rbx,%r11
	movq %r9,%rbx
	movq %rcx,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %r10,-56(%rbp)
	movq %r11,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-80,%rbp
	testb $7,%bl
	jne _cfR5
_cfR6:
	movq (%rbx),%rax
	jmp *(%rax)
_cfRP:
	jmp *-8(%r13)
	.size $wgo_s8jx_entry, .-$wgo_s8jx_entry


==================== Asm code ====================
2018-03-16 15:54:46.451262131 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8jx_info:
	.quad	$wgo_s8jx_entry
	.quad	4
	.quad	8
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.452061566 UTC

.section .text
.align 8
_cfR5:
_cfR5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cfRL
_cfRM:
	movq $block_cfRb_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfRb
_cfRc:
	movq (%rbx),%rax
	jmp *(%rax)
_cfRL:
	movq 72(%rbp),%rdi
	movq 64(%rbp),%rsi
	movq 56(%rbp),%r14
	movq 48(%rbp),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cfR5, .-_cfR5


==================== Asm code ====================
2018-03-16 15:54:46.45269627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfR5_info:
	.quad	_cfR5
	.quad	9
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.453398789 UTC

.section .text
.align 8
_cfRb:
_cfRb:
	movq 8(%rbp),%rax
	movq $block_cfRg_info,8(%rbp)
	movq %rax,%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 48(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_s8jx_entry
	.size _cfRb, .-_cfRb


==================== Asm code ====================
2018-03-16 15:54:46.453993766 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfRb_info:
	.quad	_cfRb
	.quad	10
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.454760573 UTC

.section .text
.align 8
_cfRg:
_cfRg:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _cfRX
_cfRW:
	movq $sat_s8jT_info,-152(%r12)
	movq 32(%rbp),%rax
	movq %rax,-136(%r12)
	movq 72(%rbp),%rax
	movq %rax,-128(%r12)
	movq %rdi,-120(%r12)
	movq $sat_s8jS_info,-112(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq %rsi,-80(%r12)
	movq $sat_s8jR_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 56(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s8jQ_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rdi
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfRX:
	movq $160,904(%r13)
	jmp stg_gc_pppp
	.size _cfRg, .-_cfRg


==================== Asm code ====================
2018-03-16 15:54:46.455514638 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfRg_info:
	.quad	_cfRg
	.quad	1033
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.456291596 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat2_entry
.type GHC.Base.$w$csconcat2_entry, @object
GHC.Base.$w$csconcat2_entry:
_cfS0:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cfS4
_cfS3:
	movq $$wgo_s8jx_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	leaq -27(%r12),%rbx
	addq $32,%rbp
	jmp $wgo_s8jx_entry
_cfS4:
	movq $40,904(%r13)
	movl $GHC.Base.$w$csconcat2_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat2_entry, .-GHC.Base.$w$csconcat2_entry


==================== Asm code ====================
2018-03-16 15:54:46.4569975 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat2_info
.type GHC.Base.$w$csconcat2_info, @object
GHC.Base.$w$csconcat2_info:
	.quad	GHC.Base.$w$csconcat2_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	GHC.Base.$w$csconcat2_slow


==================== Asm code ====================
2018-03-16 15:54:46.461577035 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,,,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.462374874 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,,,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_entry:
_cfT7:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfTi
_cfTj:
	movq $block_cfT4_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfT4
_cfT5:
	movq (%rbx),%rax
	jmp *(%rax)
_cfTi:
	movl $GHC.Base.$fSemigroup(,,,)_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.463066211 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_info
.type GHC.Base.$fSemigroup(,,,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.463802776 UTC

.section .text
.align 8
_cfT4:
_cfT4:
	movq $block_cfTa_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfTa
_cfTb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfT4, .-_cfT4


==================== Asm code ====================
2018-03-16 15:54:46.464790138 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfT4_info:
	.quad	_cfT4
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.466066964 UTC

.section .text
.align 8
_cfTa:
_cfTa:
	movq 40(%rbp),%rax
	movq $block_cfTf_info,40(%rbp)
	movq 7(%rbx),%r9
	movq %rax,%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 23(%rbx),%rcx
	movq %rcx,16(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size _cfTa, .-_cfTa


==================== Asm code ====================
2018-03-16 15:54:46.46669036 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfTa_info:
	.quad	_cfTa
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.467399164 UTC

.section .text
.align 8
_cfTf:
_cfTf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cfTo
_cfTn:
	movq $(,,,)_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfTo:
	movq $40,904(%r13)
	jmp stg_gc_pppp
	.size _cfTf, .-_cfTf


==================== Asm code ====================
2018-03-16 15:54:46.468034385 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfTf_info:
	.quad	_cfTf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.475213238 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,,,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.475959973 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_slow
.type GHC.Base.$fSemigroup(,,,)_$cstimes_slow, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_slow:
_cfTM:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fSemigroup(,,,)_$cstimes_entry
	.size GHC.Base.$fSemigroup(,,,)_$cstimes_slow, .-GHC.Base.$fSemigroup(,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:46.476783194 UTC

.section .text
.align 8
sat_s8kr_entry:
_cfTZ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfU0
_cfU1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfU0:
	jmp *-16(%r13)
	.size sat_s8kr_entry, .-sat_s8kr_entry


==================== Asm code ====================
2018-03-16 15:54:46.477499459 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kr_info:
	.quad	sat_s8kr_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.47828379 UTC

.section .text
.align 8
sat_s8kq_entry:
_cfU6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfU7
_cfU8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfU7:
	jmp *-16(%r13)
	.size sat_s8kq_entry, .-sat_s8kq_entry


==================== Asm code ====================
2018-03-16 15:54:46.479340934 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kq_info:
	.quad	sat_s8kq_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.480068848 UTC

.section .text
.align 8
sat_s8kp_entry:
_cfUd:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfUe
_cfUf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfUe:
	jmp *-16(%r13)
	.size sat_s8kp_entry, .-sat_s8kp_entry


==================== Asm code ====================
2018-03-16 15:54:46.480692747 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kp_info:
	.quad	sat_s8kp_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.481750301 UTC

.section .text
.align 8
sat_s8ko_entry:
_cfUk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfUl
_cfUm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfUl:
	jmp *-16(%r13)
	.size sat_s8ko_entry, .-sat_s8ko_entry


==================== Asm code ====================
2018-03-16 15:54:46.482427019 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ko_info:
	.quad	sat_s8ko_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.483189056 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,,,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_entry:
_cfUn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cfUp
_cfUq:
	movq $block_cfTQ_info,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfTQ
_cfTR:
	movq (%rbx),%rax
	jmp *(%rax)
_cfUp:
	movl $GHC.Base.$fSemigroup(,,,)_$cstimes_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.483882081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_info
.type GHC.Base.$fSemigroup(,,,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:46.484767556 UTC

.section .text
.align 8
_cfTQ:
_cfTQ:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _cfUt
_cfUs:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_s8kr_info,-224(%r12)
	movq 24(%rbp),%rsi
	movq %rsi,-208(%r12)
	movq 32(%rbp),%rsi
	movq %rsi,-200(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,-192(%r12)
	movq %rbx,-184(%r12)
	movq $sat_s8kq_info,-176(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %rdx,-136(%r12)
	movq $sat_s8kp_info,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %rcx,-88(%r12)
	movq $sat_s8ko_info,-80(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfUt:
	movq $232,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfTQ, .-_cfTQ


==================== Asm code ====================
2018-03-16 15:54:46.485615776 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfTQ_info:
	.quad	_cfTQ
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.490773578 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_closure
.type GHC.Base.$fSemigroup(,,,)_closure, @object
GHC.Base.$fSemigroup(,,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.491631838 UTC

.section .text
.align 8
sat_s8ky_entry:
_cfVq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfVr
_cfVs:
	movq %r14,%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroup(,,,)_$cstimes_entry
_cfVr:
	jmp *-8(%r13)
	.size sat_s8ky_entry, .-sat_s8ky_entry


==================== Asm code ====================
2018-03-16 15:54:46.492305467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ky_info:
	.quad	sat_s8ky_entry
	.quad	4
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.493334407 UTC

.section .text
.align 8
sat_s8kx_entry:
_cfVy:
	movq %r14,%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,,,)_$csconcat_entry
	.size sat_s8kx_entry, .-sat_s8kx_entry


==================== Asm code ====================
2018-03-16 15:54:46.493938589 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kx_info:
	.quad	sat_s8kx_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.49464935 UTC

.section .text
.align 8
sat_s8kw_entry:
_cfVG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfVH
_cfVI:
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$c<>_entry
_cfVH:
	jmp *-8(%r13)
	.size sat_s8kw_entry, .-sat_s8kw_entry


==================== Asm code ====================
2018-03-16 15:54:46.495228863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kw_info:
	.quad	sat_s8kw_entry
	.quad	4
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.496019857 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_entry
.type GHC.Base.$fSemigroup(,,,)_entry, @object
GHC.Base.$fSemigroup(,,,)_entry:
_cfVK:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cfVO
_cfVN:
	movq $sat_s8ky_info,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	movq %r8,-112(%r12)
	movq $sat_s8kx_info,-104(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq $sat_s8kw_info,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -62(%r12),%rax
	movq %rax,-16(%r12)
	leaq -103(%r12),%rax
	movq %rax,-8(%r12)
	leaq -141(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfVO:
	movq $152,904(%r13)
	movl $GHC.Base.$fSemigroup(,,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_entry, .-GHC.Base.$fSemigroup(,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.496785498 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_info
.type GHC.Base.$fSemigroup(,,,)_info, @object
GHC.Base.$fSemigroup(,,,)_info:
	.quad	GHC.Base.$fSemigroup(,,,)_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.515276256 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid_closure
.type GHC.Base.$w$cp1Monoid_closure, @object
GHC.Base.$w$cp1Monoid_closure:
	.quad	GHC.Base.$w$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.516114721 UTC

.section .text
.align 8
w4_s8l1_entry:
_cfWg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfWh
_cfWi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfWh:
	jmp *-16(%r13)
	.size w4_s8l1_entry, .-w4_s8l1_entry


==================== Asm code ====================
2018-03-16 15:54:46.516736542 UTC

.section .data.rel.ro
.align 8
.align 1
w4_s8l1_info:
	.quad	w4_s8l1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.517636197 UTC

.section .text
.align 8
w5_s8l2_entry:
_cfWn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfWo
_cfWp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfWo:
	jmp *-16(%r13)
	.size w5_s8l2_entry, .-w5_s8l2_entry


==================== Asm code ====================
2018-03-16 15:54:46.518231665 UTC

.section .data.rel.ro
.align 8
.align 1
w5_s8l2_info:
	.quad	w5_s8l2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.518935037 UTC

.section .text
.align 8
w6_s8l3_entry:
_cfWu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfWv
_cfWw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfWv:
	jmp *-16(%r13)
	.size w6_s8l3_entry, .-w6_s8l3_entry


==================== Asm code ====================
2018-03-16 15:54:46.519593615 UTC

.section .data.rel.ro
.align 8
.align 1
w6_s8l3_info:
	.quad	w6_s8l3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.520240594 UTC

.section .text
.align 8
w7_s8l4_entry:
_cfWB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfWC
_cfWD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfWC:
	jmp *-16(%r13)
	.size w7_s8l4_entry, .-w7_s8l4_entry


==================== Asm code ====================
2018-03-16 15:54:46.521410542 UTC

.section .data.rel.ro
.align 8
.align 1
w7_s8l4_info:
	.quad	w7_s8l4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.522176119 UTC

.section .text
.align 8
sat_s8lg_entry:
_cfWS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfWT
_cfWU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfWT:
	jmp *-16(%r13)
	.size sat_s8lg_entry, .-sat_s8lg_entry


==================== Asm code ====================
2018-03-16 15:54:46.522854124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lg_info:
	.quad	sat_s8lg_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.523551295 UTC

.section .text
.align 8
sat_s8lf_entry:
_cfWZ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfX0
_cfX1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfX0:
	jmp *-16(%r13)
	.size sat_s8lf_entry, .-sat_s8lf_entry


==================== Asm code ====================
2018-03-16 15:54:46.524212995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lf_info:
	.quad	sat_s8lf_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.524954852 UTC

.section .text
.align 8
sat_s8le_entry:
_cfX6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfX7
_cfX8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfX7:
	jmp *-16(%r13)
	.size sat_s8le_entry, .-sat_s8le_entry


==================== Asm code ====================
2018-03-16 15:54:46.525660421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8le_info:
	.quad	sat_s8le_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.52635396 UTC

.section .text
.align 8
sat_s8ld_entry:
_cfXd:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXe
_cfXf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cfXe:
	jmp *-16(%r13)
	.size sat_s8ld_entry, .-sat_s8ld_entry


==================== Asm code ====================
2018-03-16 15:54:46.526987243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ld_info:
	.quad	sat_s8ld_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.527765038 UTC

.section .text
.align 8
sat_s8lh_entry:
_cfXg:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXi
_cfXj:
	movq $block_cfWJ_info,-56(%rbp)
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rdx
	movq 29(%rbx),%rbx
	movq %rbx,%r8
	movq %rdi,%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _cfWJ
_cfWK:
	movq (%rbx),%rax
	jmp *(%rax)
_cfXi:
	jmp *-8(%r13)
	.size sat_s8lh_entry, .-sat_s8lh_entry


==================== Asm code ====================
2018-03-16 15:54:46.528434035 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lh_info:
	.quad	sat_s8lh_entry
	.quad	4
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.529555905 UTC

.section .text
.align 8
_cfWJ:
_cfWJ:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _cfXm
_cfXl:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_s8lg_info,-224(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-208(%r12)
	movq 40(%rbp),%rsi
	movq %rsi,-200(%r12)
	movq 48(%rbp),%rdi
	movq %rdi,-192(%r12)
	movq %rbx,-184(%r12)
	movq $sat_s8lf_info,-176(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %rdx,-136(%r12)
	movq $sat_s8le_info,-128(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %rcx,-88(%r12)
	movq $sat_s8ld_info,-80(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfXm:
	movq $232,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cfWJ, .-_cfWJ


==================== Asm code ====================
2018-03-16 15:54:46.530352985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfWJ_info:
	.quad	_cfWJ
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.530993404 UTC

.section .text
.align 8
w4_s8kI_entry:
_cfXs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXt
_cfXu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfXt:
	jmp *-16(%r13)
	.size w4_s8kI_entry, .-w4_s8kI_entry


==================== Asm code ====================
2018-03-16 15:54:46.531640452 UTC

.section .data.rel.ro
.align 8
.align 1
w4_s8kI_info:
	.quad	w4_s8kI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.532265048 UTC

.section .text
.align 8
w5_s8kJ_entry:
_cfXz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXA
_cfXB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfXA:
	jmp *-16(%r13)
	.size w5_s8kJ_entry, .-w5_s8kJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.532854135 UTC

.section .data.rel.ro
.align 8
.align 1
w5_s8kJ_info:
	.quad	w5_s8kJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.533519459 UTC

.section .text
.align 8
w6_s8kK_entry:
_cfXG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXH
_cfXI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfXH:
	jmp *-16(%r13)
	.size w6_s8kK_entry, .-w6_s8kK_entry


==================== Asm code ====================
2018-03-16 15:54:46.534152534 UTC

.section .data.rel.ro
.align 8
.align 1
w6_s8kK_info:
	.quad	w6_s8kK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.535238531 UTC

.section .text
.align 8
w7_s8kL_entry:
_cfXN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfXO
_cfXP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfXO:
	jmp *-16(%r13)
	.size w7_s8kL_entry, .-w7_s8kL_entry


==================== Asm code ====================
2018-03-16 15:54:46.535879716 UTC

.section .data.rel.ro
.align 8
.align 1
w7_s8kL_info:
	.quad	w7_s8kL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.536644939 UTC

.section .text
.align 8
sat_s8l0_entry:
_cfXY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cfY9
_cfYa:
	movq $block_cfXV_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cfXV
_cfXW:
	movq (%rbx),%rax
	jmp *(%rax)
_cfY9:
	jmp *-8(%r13)
	.size sat_s8l0_entry, .-sat_s8l0_entry


==================== Asm code ====================
2018-03-16 15:54:46.537357604 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8l0_info:
	.quad	sat_s8l0_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.538040006 UTC

.section .text
.align 8
_cfXV:
_cfXV:
	movq $block_cfY1_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cfY1
_cfY2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cfXV, .-_cfXV


==================== Asm code ====================
2018-03-16 15:54:46.538657583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfXV_info:
	.quad	_cfXV
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.539336031 UTC

.section .text
.align 8
_cfY1:
_cfY1:
	movq 40(%rbp),%rax
	movq $block_cfY6_info,40(%rbp)
	movq 7(%rbx),%r9
	movq 16(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 23(%rbx),%rcx
	movq %rcx,16(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size _cfY1, .-_cfY1


==================== Asm code ====================
2018-03-16 15:54:46.539980977 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfY1_info:
	.quad	_cfY1
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.540703159 UTC

.section .text
.align 8
_cfY6:
_cfY6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cfYf
_cfYe:
	movq $(,,,)_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cfYf:
	movq $40,904(%r13)
	jmp stg_gc_pppp
	.size _cfY6, .-_cfY6


==================== Asm code ====================
2018-03-16 15:54:46.5414115 UTC

.section .data.rel.ro
.align 8
.align 1
block_cfY6_info:
	.quad	_cfY6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.54210329 UTC

.section .text
.align 8
sat_s8kG_entry:
_cfYm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfYn
_cfYo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfYn:
	jmp *-16(%r13)
	.size sat_s8kG_entry, .-sat_s8kG_entry


==================== Asm code ====================
2018-03-16 15:54:46.542696062 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kG_info:
	.quad	sat_s8kG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.543408579 UTC

.section .text
.align 8
sat_s8kF_entry:
_cfYt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfYu
_cfYv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfYu:
	jmp *-16(%r13)
	.size sat_s8kF_entry, .-sat_s8kF_entry


==================== Asm code ====================
2018-03-16 15:54:46.544010159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kF_info:
	.quad	sat_s8kF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.54470643 UTC

.section .text
.align 8
sat_s8kE_entry:
_cfYA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfYB
_cfYC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfYB:
	jmp *-16(%r13)
	.size sat_s8kE_entry, .-sat_s8kE_entry


==================== Asm code ====================
2018-03-16 15:54:46.545519891 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kE_info:
	.quad	sat_s8kE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.546202619 UTC

.section .text
.align 8
sat_s8kD_entry:
_cfYH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cfYI
_cfYJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cfYI:
	jmp *-16(%r13)
	.size sat_s8kD_entry, .-sat_s8kD_entry


==================== Asm code ====================
2018-03-16 15:54:46.54684356 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kD_info:
	.quad	sat_s8kD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.547573808 UTC

.section .text
.align 8
sat_s8kH_entry:
_cfYP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cfYQ
_cfYR:
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$c<>_entry
_cfYQ:
	jmp *-8(%r13)
	.size sat_s8kH_entry, .-sat_s8kH_entry


==================== Asm code ====================
2018-03-16 15:54:46.548620054 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8kH_info:
	.quad	sat_s8kH_entry
	.quad	4
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.549649552 UTC

.section .text
.align 8
.globl GHC.Base.$w$cp1Monoid_entry
.type GHC.Base.$w$cp1Monoid_entry, @object
GHC.Base.$w$cp1Monoid_entry:
_cfYS:
	addq $408,%r12
	cmpq 856(%r13),%r12
	ja _cfYW
_cfYV:
	movq $w4_s8l1_info,-400(%r12)
	movq %r8,-384(%r12)
	movq $w5_s8l2_info,-376(%r12)
	movq %rdi,-360(%r12)
	movq $w6_s8l3_info,-352(%r12)
	movq %rsi,-336(%r12)
	movq $w7_s8l4_info,-328(%r12)
	movq %r14,-312(%r12)
	movq $sat_s8lh_info,-304(%r12)
	leaq -400(%r12),%rax
	movq %rax,-296(%r12)
	leaq -376(%r12),%rax
	movq %rax,-288(%r12)
	leaq -352(%r12),%rax
	movq %rax,-280(%r12)
	leaq -328(%r12),%rax
	movq %rax,-272(%r12)
	movq $w4_s8kI_info,-264(%r12)
	movq %r8,-248(%r12)
	movq $w5_s8kJ_info,-240(%r12)
	movq %rdi,-224(%r12)
	movq $w6_s8kK_info,-216(%r12)
	movq %rsi,-200(%r12)
	movq $w7_s8kL_info,-192(%r12)
	movq %r14,-176(%r12)
	movq $sat_s8l0_info,-168(%r12)
	leaq -264(%r12),%rax
	movq %rax,-160(%r12)
	leaq -240(%r12),%rax
	movq %rax,-152(%r12)
	leaq -216(%r12),%rax
	movq %rax,-144(%r12)
	leaq -192(%r12),%rax
	movq %rax,-136(%r12)
	movq $sat_s8kG_info,-128(%r12)
	movq %r8,-112(%r12)
	movq $sat_s8kF_info,-104(%r12)
	movq %rdi,-88(%r12)
	movq $sat_s8kE_info,-80(%r12)
	movq %rsi,-64(%r12)
	movq $sat_s8kD_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $sat_s8kH_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -301(%r12),%rsi
	leaq -167(%r12),%r14
	leaq -30(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cfYW:
	movq $408,904(%r13)
	movl $GHC.Base.$w$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$cp1Monoid_entry, .-GHC.Base.$w$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.550618339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid_info
.type GHC.Base.$w$cp1Monoid_info, @object
GHC.Base.$w$cp1Monoid_info:
	.quad	GHC.Base.$w$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.554223849 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.554986693 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry:
_cg1d:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg1e
_cg1f:
	movq $block_cg1a_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_cg1e:
	movl $GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.555613705 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.55633746 UTC

.section .text
.align 8
_cg1a:
_cg1a:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg1i
_cg1h:
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg1i:
	movq $32,904(%r13)
	jmp stg_gc_ppp
	.size _cg1a, .-_cg1a


==================== Asm code ====================
2018-03-16 15:54:46.556935505 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg1a_info:
	.quad	_cg1a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.559853731 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:46.560643398 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,,)_$cmappend_entry:
_cg1y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg1z
_cg1A:
	movq $block_cg1w_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_cg1z:
	movl $GHC.Base.$fMonoid(,,,)_$cmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:46.561339531 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.562364963 UTC

.section .text
.align 8
_cg1w:
_cg1w:
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _cg1w, .-_cg1w


==================== Asm code ====================
2018-03-16 15:54:46.562999304 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg1w_info:
	.quad	_cg1w
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.572255825 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.573066027 UTC

.section .text
.align 8
k_s8lC_entry:
_cg1V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cg1W
_cg1X:
	movq $block_cg1S_info,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_cg1W:
	jmp *-16(%r13)
	.size k_s8lC_entry, .-k_s8lC_entry


==================== Asm code ====================
2018-03-16 15:54:46.573732322 UTC

.section .data.rel.ro
.align 8
.align 1
k_s8lC_info:
	.quad	k_s8lC_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.574481877 UTC

.section .text
.align 8
_cg1S:
_cg1S:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg20
_cg1Z:
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg20:
	movq $32,904(%r13)
	jmp stg_gc_ppp
	.size _cg1S, .-_cg1S


==================== Asm code ====================
2018-03-16 15:54:46.575148988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg1S_info:
	.quad	_cg1S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.57589746 UTC

.section .text
.align 8
k1_s8lH_entry:
_cg25:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg26
_cg27:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.<>_entry
_cg26:
	jmp *-16(%r13)
	.size k1_s8lH_entry, .-k1_s8lH_entry


==================== Asm code ====================
2018-03-16 15:54:46.576954726 UTC

.section .data.rel.ro
.align 8
.align 1
k1_s8lH_info:
	.quad	k1_s8lH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.577676781 UTC

.section .text
.align 8
z_s8lI_entry:
_cg2c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg2d
_cg2e:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cg2d:
	jmp *-16(%r13)
	.size z_s8lI_entry, .-z_s8lI_entry


==================== Asm code ====================
2018-03-16 15:54:46.578327191 UTC

.section .data.rel.ro
.align 8
.align 1
z_s8lI_info:
	.quad	z_s8lI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.578999235 UTC

.section .text
.align 8
z1_s8lJ_entry:
_cg2j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg2k
_cg2l:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cg2k:
	jmp *-16(%r13)
	.size z1_s8lJ_entry, .-z1_s8lJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.579618226 UTC

.section .data.rel.ro
.align 8
.align 1
z1_s8lJ_info:
	.quad	z1_s8lJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.58029818 UTC

.section .text
.align 8
z2_s8lK_entry:
_cg2q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg2r
_cg2s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cg2r:
	jmp *-16(%r13)
	.size z2_s8lK_entry, .-z2_s8lK_entry


==================== Asm code ====================
2018-03-16 15:54:46.580904379 UTC

.section .data.rel.ro
.align 8
.align 1
z2_s8lK_info:
	.quad	z2_s8lK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.581659484 UTC

.section .text
.align 8
z3_s8lL_entry:
_cg2x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg2y
_cg2z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cg2y:
	jmp *-16(%r13)
	.size z3_s8lL_entry, .-z3_s8lL_entry


==================== Asm code ====================
2018-03-16 15:54:46.582296666 UTC

.section .data.rel.ro
.align 8
.align 1
z3_s8lL_info:
	.quad	z3_s8lL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.583058361 UTC

.section .text
.align 8
go_s8lN_entry:
_cg2N:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cg2O
_cg2P:
	movq $block_cg2G_info,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg2G
_cg2H:
	movq (%rbx),%rax
	jmp *(%rax)
_cg2O:
	jmp *-8(%r13)
	.size go_s8lN_entry, .-go_s8lN_entry


==================== Asm code ====================
2018-03-16 15:54:46.583743473 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8lN_info:
	.quad	go_s8lN_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.584531882 UTC

.section .text
.align 8
_cg2G:
_cg2G:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg2K
_cg2L:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg2Y
_cg2X:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $stg_ap_2_upd_info,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_cg2Y:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cg2K:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg2G, .-_cg2G


==================== Asm code ====================
2018-03-16 15:54:46.585233372 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg2G_info:
	.quad	_cg2G
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.586105078 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_entry:
_cg30:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _cg34
_cg33:
	movq $k_s8lC_info,-224(%r12)
	movq %r14,-208(%r12)
	movq %rsi,-200(%r12)
	movq %rdi,-192(%r12)
	movq %r8,-184(%r12)
	movq $k1_s8lH_info,-176(%r12)
	leaq -224(%r12),%rax
	movq %rax,-160(%r12)
	movq $z_s8lI_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $z1_s8lJ_info,-128(%r12)
	movq %rsi,-112(%r12)
	movq $z2_s8lK_info,-104(%r12)
	movq %rdi,-88(%r12)
	movq $z3_s8lL_info,-80(%r12)
	movq %r8,-64(%r12)
	movq $(,,,)_con_info,-56(%r12)
	leaq -152(%r12),%rax
	movq %rax,-48(%r12)
	leaq -128(%r12),%rax
	movq %rax,-40(%r12)
	leaq -104(%r12),%rax
	movq %rax,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	movq $go_s8lN_info,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg34:
	movq $232,904(%r13)
	movl $GHC.Base.$fMonoid(,,,)_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.586925446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.593534154 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_closure
.type GHC.Base.$fMonoid(,,,)_closure, @object
GHC.Base.$fMonoid(,,,)_closure:
	.quad	GHC.Base.$fMonoid(,,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.594348596 UTC

.section .text
.align 8
sat_s8m0_entry:
_cg43:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg44
_cg45:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmconcat_entry
_cg44:
	jmp *-16(%r13)
	.size sat_s8m0_entry, .-sat_s8m0_entry


==================== Asm code ====================
2018-03-16 15:54:46.594994725 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8m0_info:
	.quad	sat_s8m0_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.595682798 UTC

.section .text
.align 8
sat_s8lZ_entry:
_cg4a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg4b
_cg4c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmappend_entry
_cg4b:
	jmp *-16(%r13)
	.size sat_s8lZ_entry, .-sat_s8lZ_entry


==================== Asm code ====================
2018-03-16 15:54:46.596311795 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lZ_info:
	.quad	sat_s8lZ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.596982376 UTC

.section .text
.align 8
sat_s8lY_entry:
_cg4h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg4i
_cg4j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmempty_entry
_cg4i:
	jmp *-16(%r13)
	.size sat_s8lY_entry, .-sat_s8lY_entry


==================== Asm code ====================
2018-03-16 15:54:46.597686811 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lY_info:
	.quad	sat_s8lY_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.59838152 UTC

.section .text
.align 8
sat_s8lX_entry:
_cg4o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cg4p
_cg4q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
_cg4p:
	jmp *-16(%r13)
	.size sat_s8lX_entry, .-sat_s8lX_entry


==================== Asm code ====================
2018-03-16 15:54:46.599002271 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8lX_info:
	.quad	sat_s8lX_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.599840277 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_entry
.type GHC.Base.$fMonoid(,,,)_entry, @object
GHC.Base.$fMonoid(,,,)_entry:
_cg4s:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _cg4w
_cg4v:
	movq $sat_s8m0_info,-224(%r12)
	movq %r14,-208(%r12)
	movq %rsi,-200(%r12)
	movq %rdi,-192(%r12)
	movq %r8,-184(%r12)
	movq $sat_s8lZ_info,-176(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %r8,-136(%r12)
	movq $sat_s8lY_info,-128(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %r8,-88(%r12)
	movq $sat_s8lX_info,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cg4w:
	movq $232,904(%r13)
	movl $GHC.Base.$fMonoid(,,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_entry, .-GHC.Base.$fMonoid(,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.600639527 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_info
.type GHC.Base.$fMonoid(,,,)_info, @object
GHC.Base.$fMonoid(,,,)_info:
	.quad	GHC.Base.$fMonoid(,,,)_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.607590574 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.608416496 UTC

.section .text
.align 8
sat_s8mg_entry:
_cg5e:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg5f
_cg5g:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg5f:
	jmp *-16(%r13)
	.size sat_s8mg_entry, .-sat_s8mg_entry


==================== Asm code ====================
2018-03-16 15:54:46.609074555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8mg_info:
	.quad	sat_s8mg_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.609809666 UTC

.section .text
.align 8
sat_s8mf_entry:
_cg5l:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg5m
_cg5n:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg5m:
	jmp *-16(%r13)
	.size sat_s8mf_entry, .-sat_s8mf_entry


==================== Asm code ====================
2018-03-16 15:54:46.610435275 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8mf_info:
	.quad	sat_s8mf_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.61113878 UTC

.section .text
.align 8
sat_s8me_entry:
_cg5s:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg5t
_cg5u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg5t:
	jmp *-16(%r13)
	.size sat_s8me_entry, .-sat_s8me_entry


==================== Asm code ====================
2018-03-16 15:54:46.611763154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8me_info:
	.quad	sat_s8me_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.612488712 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,)_$c<>_entry:
_cg5v:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg5x
_cg5y:
	movq $block_cg50_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg50
_cg51:
	movq (%rbx),%rax
	jmp *(%rax)
_cg5x:
	movl $GHC.Base.$fMonoid(,,)_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.61318711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$c<>_info
.type GHC.Base.$fMonoid(,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.614381181 UTC

.section .text
.align 8
_cg50:
_cg50:
	movq $block_cg55_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cg55
_cg56:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg50, .-_cg50


==================== Asm code ====================
2018-03-16 15:54:46.615019997 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg50_info:
	.quad	_cg50
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.615839704 UTC

.section .text
.align 8
_cg55:
_cg55:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cg5C
_cg5B:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_s8mg_info,-144(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	movq $sat_s8mf_info,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	movq $sat_s8me_info,-64(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg5C:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg55, .-_cg55


==================== Asm code ====================
2018-03-16 15:54:46.616659549 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg55_info:
	.quad	_cg55
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.625590728 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat1_closure
.type GHC.Base.$w$csconcat1_closure, @object
GHC.Base.$w$csconcat1_closure:
	.quad	GHC.Base.$w$csconcat1_info


==================== Asm code ====================
2018-03-16 15:54:46.626317398 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat1_slow
.type GHC.Base.$w$csconcat1_slow, @object
GHC.Base.$w$csconcat1_slow:
_cg6l:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$w$csconcat1_entry
	.size GHC.Base.$w$csconcat1_slow, .-GHC.Base.$w$csconcat1_slow


==================== Asm code ====================
2018-03-16 15:54:46.627106831 UTC

.section .text
.align 8
sat_s8mG_entry:
_cg6L:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg6M
_cg6N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg6M:
	jmp *-16(%r13)
	.size sat_s8mG_entry, .-sat_s8mG_entry


==================== Asm code ====================
2018-03-16 15:54:46.627776032 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8mG_info:
	.quad	sat_s8mG_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.62848266 UTC

.section .text
.align 8
sat_s8mF_entry:
_cg6S:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg6T
_cg6U:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg6T:
	jmp *-16(%r13)
	.size sat_s8mF_entry, .-sat_s8mF_entry


==================== Asm code ====================
2018-03-16 15:54:46.629093788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8mF_info:
	.quad	sat_s8mF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.63015444 UTC

.section .text
.align 8
sat_s8mE_entry:
_cg6Z:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg70
_cg71:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cg70:
	jmp *-16(%r13)
	.size sat_s8mE_entry, .-sat_s8mE_entry


==================== Asm code ====================
2018-03-16 15:54:46.630803115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8mE_info:
	.quad	sat_s8mE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.631599043 UTC

.section .text
.align 8
$wgo_s8mo_entry:
_cg76:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cg77
_cg78:
	movq $block_cg6u_info,-64(%rbp)
	movq %rbx,%rax
	movq 4(%rbx),%rcx
	movq 12(%rbx),%rdx
	movq 20(%rbx),%rbx
	movq %rbx,%r9
	movq %r8,%rbx
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cg6u
_cg6v:
	movq (%rbx),%rax
	jmp *(%rax)
_cg77:
	jmp *-8(%r13)
	.size $wgo_s8mo_entry, .-$wgo_s8mo_entry


==================== Asm code ====================
2018-03-16 15:54:46.632668091 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8mo_info:
	.quad	$wgo_s8mo_entry
	.quad	3
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.633517736 UTC

.section .text
.align 8
_cg6u:
_cg6u:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cg73
_cg74:
	movq $block_cg6A_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg6A
_cg6B:
	movq (%rbx),%rax
	jmp *(%rax)
_cg73:
	movq 56(%rbp),%rsi
	movq 48(%rbp),%r14
	movq 40(%rbp),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cg6u, .-_cg6u


==================== Asm code ====================
2018-03-16 15:54:46.634186509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg6u_info:
	.quad	_cg6u
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.634847853 UTC

.section .text
.align 8
_cg6A:
_cg6A:
	movq 8(%rbp),%rax
	movq $block_cg6F_info,8(%rbp)
	movq %rax,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 40(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_s8mo_entry
	.size _cg6A, .-_cg6A


==================== Asm code ====================
2018-03-16 15:54:46.635468475 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg6A_info:
	.quad	_cg6A
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.636252186 UTC

.section .text
.align 8
_cg6F:
_cg6F:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cg7f
_cg7e:
	movq $sat_s8mG_info,-112(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 56(%rbp),%rax
	movq %rax,-88(%r12)
	movq %rsi,-80(%r12)
	movq $sat_s8mF_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 48(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq $sat_s8mE_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg7f:
	movq $120,904(%r13)
	jmp stg_gc_ppp
	.size _cg6F, .-_cg6F


==================== Asm code ====================
2018-03-16 15:54:46.636934763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg6F_info:
	.quad	_cg6F
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.637729306 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat1_entry
.type GHC.Base.$w$csconcat1_entry, @object
GHC.Base.$w$csconcat1_entry:
_cg7i:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg7m
_cg7l:
	movq $$wgo_s8mo_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r8,%rax
	movq 8(%rbp),%r8
	movq (%rbp),%rdi
	movq %r9,%rsi
	movq %rax,%r14
	leaq -20(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_s8mo_entry
_cg7m:
	movq $32,904(%r13)
	movl $GHC.Base.$w$csconcat1_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat1_entry, .-GHC.Base.$w$csconcat1_entry


==================== Asm code ====================
2018-03-16 15:54:46.638448653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat1_info
.type GHC.Base.$w$csconcat1_info, @object
GHC.Base.$w$csconcat1_info:
	.quad	GHC.Base.$w$csconcat1_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$w$csconcat1_slow


==================== Asm code ====================
2018-03-16 15:54:46.642927448 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.643779543 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,,)_$csconcat_entry:
_cg8h:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg8s
_cg8t:
	movq $block_cg8e_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cg8e
_cg8f:
	movq (%rbx),%rax
	jmp *(%rax)
_cg8s:
	movl $GHC.Base.$fSemigroup(,,)_$csconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.644483207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$csconcat_info
.type GHC.Base.$fSemigroup(,,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.645167134 UTC

.section .text
.align 8
_cg8e:
_cg8e:
	movq $block_cg8k_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cg8k
_cg8l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8e, .-_cg8e


==================== Asm code ====================
2018-03-16 15:54:46.646137056 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8e_info:
	.quad	_cg8e
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.647192721 UTC

.section .text
.align 8
_cg8k:
_cg8k:
	movq 32(%rbp),%rax
	movq $block_cg8p_info,32(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 23(%rbx),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat1_entry
	.size _cg8k, .-_cg8k


==================== Asm code ====================
2018-03-16 15:54:46.647878669 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8k_info:
	.quad	_cg8k
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.648573553 UTC

.section .text
.align 8
_cg8p:
_cg8p:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cg8y
_cg8x:
	movq $(,,)_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg8y:
	movq $32,904(%r13)
	jmp stg_gc_ppp
	.size _cg8p, .-_cg8p


==================== Asm code ====================
2018-03-16 15:54:46.649181763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8p_info:
	.quad	_cg8p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.656294779 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:46.65712149 UTC

.section .text
.align 8
sat_s8ne_entry:
_cg9e:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9f
_cg9g:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9c_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cg9f:
	jmp *-16(%r13)
	.size sat_s8ne_entry, .-sat_s8ne_entry


==================== Asm code ====================
2018-03-16 15:54:46.657756643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ne_info:
	.quad	sat_s8ne_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.658396013 UTC

.section .text
.align 8
_cg9c:
_cg9c:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cg9c, .-_cg9c


==================== Asm code ====================
2018-03-16 15:54:46.658950717 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9c_info:
	.quad	_cg9c
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.65971565 UTC

.section .text
.align 8
sat_s8nc_entry:
_cg9q:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9r
_cg9s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9o_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cg9r:
	jmp *-16(%r13)
	.size sat_s8nc_entry, .-sat_s8nc_entry


==================== Asm code ====================
2018-03-16 15:54:46.66033745 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nc_info:
	.quad	sat_s8nc_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.661704296 UTC

.section .text
.align 8
_cg9o:
_cg9o:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cg9o, .-_cg9o


==================== Asm code ====================
2018-03-16 15:54:46.662288651 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9o_info:
	.quad	_cg9o
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.662996373 UTC

.section .text
.align 8
sat_s8na_entry:
_cg9C:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9D
_cg9E:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cg9A_info,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cg9D:
	jmp *-16(%r13)
	.size sat_s8na_entry, .-sat_s8na_entry


==================== Asm code ====================
2018-03-16 15:54:46.663657036 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8na_info:
	.quad	sat_s8na_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.664231189 UTC

.section .text
.align 8
_cg9A:
_cg9A:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cg9A, .-_cg9A


==================== Asm code ====================
2018-03-16 15:54:46.664765463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg9A_info:
	.quad	_cg9A
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.665538197 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,)_$cmappend_entry:
_cg9I:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cg9K
_cg9L:
	movq $block_cg8Y_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cg8Y
_cg8Z:
	movq (%rbx),%rax
	jmp *(%rax)
_cg9K:
	movl $GHC.Base.$fMonoid(,,)_$cmappend_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:46.66624062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.666917399 UTC

.section .text
.align 8
_cg8Y:
_cg8Y:
	movq $block_cg93_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cg93
_cg94:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cg8Y, .-_cg8Y


==================== Asm code ====================
2018-03-16 15:54:46.667500097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg8Y_info:
	.quad	_cg8Y
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.668299959 UTC

.section .text
.align 8
_cg93:
_cg93:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cg9P
_cg9O:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_s8ne_info,-144(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	movq $sat_s8nc_info,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	movq $sat_s8na_info,-64(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cg9P:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cg93, .-_cg93


==================== Asm code ====================
2018-03-16 15:54:46.669017706 UTC

.section .data.rel.ro
.align 8
.align 1
block_cg93_info:
	.quad	_cg93
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.680822919 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.681646811 UTC

.section .text
.align 8
$dSemigroup_s8nj_entry:
_cgaO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaP
_cgaQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgaP:
	jmp *-16(%r13)
	.size $dSemigroup_s8nj_entry, .-$dSemigroup_s8nj_entry


==================== Asm code ====================
2018-03-16 15:54:46.682239987 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_s8nj_info:
	.quad	$dSemigroup_s8nj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.682951558 UTC

.section .text
.align 8
$dSemigroup1_s8nk_entry:
_cgaV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgaW
_cgaX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgaW:
	jmp *-16(%r13)
	.size $dSemigroup1_s8nk_entry, .-$dSemigroup1_s8nk_entry


==================== Asm code ====================
2018-03-16 15:54:46.683539515 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup1_s8nk_info:
	.quad	$dSemigroup1_s8nk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.684171015 UTC

.section .text
.align 8
$dSemigroup2_s8nl_entry:
_cgb2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgb3
_cgb4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgb3:
	jmp *-16(%r13)
	.size $dSemigroup2_s8nl_entry, .-$dSemigroup2_s8nl_entry


==================== Asm code ====================
2018-03-16 15:54:46.684779602 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup2_s8nl_info:
	.quad	$dSemigroup2_s8nl_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.685494585 UTC

.section .text
.align 8
z_s8nm_entry:
_cgb9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgba
_cgbb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgba:
	jmp *-16(%r13)
	.size z_s8nm_entry, .-z_s8nm_entry


==================== Asm code ====================
2018-03-16 15:54:46.686123001 UTC

.section .data.rel.ro
.align 8
.align 1
z_s8nm_info:
	.quad	z_s8nm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.686858057 UTC

.section .text
.align 8
z1_s8nn_entry:
_cgbg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbh
_cgbi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgbh:
	jmp *-16(%r13)
	.size z1_s8nn_entry, .-z1_s8nn_entry


==================== Asm code ====================
2018-03-16 15:54:46.68746564 UTC

.section .data.rel.ro
.align 8
.align 1
z1_s8nn_info:
	.quad	z1_s8nn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.688101112 UTC

.section .text
.align 8
z2_s8no_entry:
_cgbn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbo
_cgbp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgbo:
	jmp *-16(%r13)
	.size z2_s8no_entry, .-z2_s8no_entry


==================== Asm code ====================
2018-03-16 15:54:46.688717397 UTC

.section .data.rel.ro
.align 8
.align 1
z2_s8no_info:
	.quad	z2_s8no_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.690238802 UTC

.section .text
.align 8
sat_s8nF_entry:
_cgbP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbQ
_cgbR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cgbQ:
	jmp *-16(%r13)
	.size sat_s8nF_entry, .-sat_s8nF_entry


==================== Asm code ====================
2018-03-16 15:54:46.690913588 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nF_info:
	.quad	sat_s8nF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.691582318 UTC

.section .text
.align 8
sat_s8nE_entry:
_cgbW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgbX
_cgbY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cgbX:
	jmp *-16(%r13)
	.size sat_s8nE_entry, .-sat_s8nE_entry


==================== Asm code ====================
2018-03-16 15:54:46.692217074 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nE_info:
	.quad	sat_s8nE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.692914968 UTC

.section .text
.align 8
sat_s8nD_entry:
_cgc3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgc4
_cgc5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cgc4:
	jmp *-16(%r13)
	.size sat_s8nD_entry, .-sat_s8nD_entry


==================== Asm code ====================
2018-03-16 15:54:46.693617188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nD_info:
	.quad	sat_s8nD_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.694391773 UTC

.section .text
.align 8
go_s8nq_entry:
_cgca:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cgcb
_cgcc:
	movq $block_cgbw_info,-48(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cgbw
_cgbx:
	movq (%rbx),%rax
	jmp *(%rax)
_cgcb:
	jmp *-8(%r13)
	.size go_s8nq_entry, .-go_s8nq_entry


==================== Asm code ====================
2018-03-16 15:54:46.69506214 UTC

.section .data.rel.ro
.align 8
.align 1
go_s8nq_info:
	.quad	go_s8nq_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.695804559 UTC

.section .text
.align 8
_cgbw:
_cgbw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgc7
_cgc8:
	movq $block_cgbC_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cgbC
_cgbD:
	movq (%rbx),%rax
	jmp *(%rax)
_cgc7:
	movq 32(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgbw, .-_cgbw


==================== Asm code ====================
2018-03-16 15:54:46.696459537 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbw_info:
	.quad	_cgbw
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.697116392 UTC

.section .text
.align 8
_cgbC:
_cgbC:
	movq $block_cgbH_info,-8(%rbp)
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 40(%rbp),%rbx
	movq %rdx,(%rbp)
	movq %rcx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp go_s8nq_entry
	.size _cgbC, .-_cgbC


==================== Asm code ====================
2018-03-16 15:54:46.697743989 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbC_info:
	.quad	_cgbC
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.698559918 UTC

.section .text
.align 8
_cgbH:
_cgbH:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cgck
_cgcj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_s8nF_info,-144(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	movq $sat_s8nE_info,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	movq $sat_s8nD_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgck:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgbH, .-_cgbH


==================== Asm code ====================
2018-03-16 15:54:46.699319188 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgbH_info:
	.quad	_cgbH
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.700139451 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,)_$cmconcat_entry:
_cgcn:
	addq $216,%r12
	cmpq 856(%r13),%r12
	ja _cgcr
_cgcq:
	movq $$dSemigroup_s8nj_info,-208(%r12)
	movq %r14,-192(%r12)
	movq $$dSemigroup1_s8nk_info,-184(%r12)
	movq %rsi,-168(%r12)
	movq $$dSemigroup2_s8nl_info,-160(%r12)
	movq %rdi,-144(%r12)
	movq $z_s8nm_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $z1_s8nn_info,-112(%r12)
	movq %rsi,-96(%r12)
	movq $z2_s8no_info,-88(%r12)
	movq %rdi,-72(%r12)
	movq $(,,)_con_info,-64(%r12)
	leaq -136(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -88(%r12),%rax
	movq %rax,-40(%r12)
	movq $go_s8nq_info,-32(%r12)
	leaq -208(%r12),%rax
	movq %rax,-24(%r12)
	leaq -184(%r12),%rax
	movq %rax,-16(%r12)
	leaq -160(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	movq %r8,%r14
	leaq -31(%r12),%rbx
	jmp go_s8nq_entry
_cgcr:
	movq $216,904(%r13)
	movl $GHC.Base.$fMonoid(,,)_$cmconcat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.700929494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.707387469 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.708208298 UTC

.section .text
.align 8
sat_s8nS_entry:
_cgdY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgdZ
_cge0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cgdZ:
	jmp *-16(%r13)
	.size sat_s8nS_entry, .-sat_s8nS_entry


==================== Asm code ====================
2018-03-16 15:54:46.708869986 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nS_info:
	.quad	sat_s8nS_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.70964014 UTC

.section .text
.align 8
sat_s8nR_entry:
_cge5:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cge6
_cge7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cge6:
	jmp *-16(%r13)
	.size sat_s8nR_entry, .-sat_s8nR_entry


==================== Asm code ====================
2018-03-16 15:54:46.710288155 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nR_info:
	.quad	sat_s8nR_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.711000357 UTC

.section .text
.align 8
sat_s8nQ_entry:
_cgec:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cged
_cgee:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cged:
	jmp *-16(%r13)
	.size sat_s8nQ_entry, .-sat_s8nQ_entry


==================== Asm code ====================
2018-03-16 15:54:46.711670633 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nQ_info:
	.quad	sat_s8nQ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.712456694 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,,)_$cstimes_entry:
_cgef:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgeh
_cgei:
	movq $block_cgdP_info,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgdP
_cgdQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cgeh:
	movl $GHC.Base.$fSemigroup(,,)_$cstimes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.713167269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$cstimes_info
.type GHC.Base.$fSemigroup(,,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:46.71406058 UTC

.section .text
.align 8
_cgdP:
_cgdP:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _cgel
_cgek:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_s8nS_info,-168(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-152(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-144(%r12)
	movq 32(%rbp),%rsi
	movq %rsi,-136(%r12)
	movq %rbx,-128(%r12)
	movq $sat_s8nR_info,-120(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq %rdx,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rcx,-80(%r12)
	movq $sat_s8nQ_info,-72(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	leaq -120(%r12),%rax
	movq %rax,-8(%r12)
	leaq -168(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgel:
	movq $176,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgdP, .-_cgdP


==================== Asm code ====================
2018-03-16 15:54:46.714854722 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgdP_info:
	.quad	_cgdP
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.719884288 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_closure
.type GHC.Base.$fSemigroup(,,)_closure, @object
GHC.Base.$fSemigroup(,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.720627941 UTC

.section .text
.align 8
sat_s8nY_entry:
_cgf7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgf8
_cgf9:
	movq %rsi,%r9
	movq %r14,%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fSemigroup(,,)_$cstimes_entry
_cgf8:
	jmp *-8(%r13)
	.size sat_s8nY_entry, .-sat_s8nY_entry


==================== Asm code ====================
2018-03-16 15:54:46.7217859 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nY_info:
	.quad	sat_s8nY_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.722425579 UTC

.section .text
.align 8
sat_s8nX_entry:
_cgff:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,,)_$csconcat_entry
	.size sat_s8nX_entry, .-sat_s8nX_entry


==================== Asm code ====================
2018-03-16 15:54:46.723035314 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nX_info:
	.quad	sat_s8nX_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.723698057 UTC

.section .text
.align 8
sat_s8nW_entry:
_cgfn:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$c<>_entry
	.size sat_s8nW_entry, .-sat_s8nW_entry


==================== Asm code ====================
2018-03-16 15:54:46.72429905 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8nW_info:
	.quad	sat_s8nW_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.725047735 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_entry
.type GHC.Base.$fSemigroup(,,)_entry, @object
GHC.Base.$fSemigroup(,,)_entry:
_cgfr:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cgfv
_cgfu:
	movq $sat_s8nY_info,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq $sat_s8nX_info,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	movq $sat_s8nW_info,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -54(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -117(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgfv:
	movq $128,904(%r13)
	movl $GHC.Base.$fSemigroup(,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_entry, .-GHC.Base.$fSemigroup(,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.725823825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_info
.type GHC.Base.$fSemigroup(,,)_info, @object
GHC.Base.$fSemigroup(,,)_info:
	.quad	GHC.Base.$fSemigroup(,,)_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.730088245 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.731251011 UTC

.section .text
.align 8
sat_s8o4_entry:
_cgfW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgfX
_cgfY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgfX:
	jmp *-16(%r13)
	.size sat_s8o4_entry, .-sat_s8o4_entry


==================== Asm code ====================
2018-03-16 15:54:46.731891613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8o4_info:
	.quad	sat_s8o4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.732562956 UTC

.section .text
.align 8
sat_s8o3_entry:
_cgg3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgg4
_cgg5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgg4:
	jmp *-16(%r13)
	.size sat_s8o3_entry, .-sat_s8o3_entry


==================== Asm code ====================
2018-03-16 15:54:46.73320607 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8o3_info:
	.quad	sat_s8o3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.733919049 UTC

.section .text
.align 8
sat_s8o2_entry:
_cgga:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cggb
_cggc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cggb:
	jmp *-16(%r13)
	.size sat_s8o2_entry, .-sat_s8o2_entry


==================== Asm code ====================
2018-03-16 15:54:46.734559436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8o2_info:
	.quad	sat_s8o2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.73532766 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_entry:
_cggd:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cggh
_cggg:
	movq $sat_s8o4_info,-64(%r12)
	movq %rdi,-48(%r12)
	movq $sat_s8o3_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_s8o2_info,-16(%r12)
	movq %r14,(%r12)
	leaq -64(%r12),%rdi
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(,,)_entry
_cggh:
	movq $72,904(%r13)
	movl $GHC.Base.$fMonoid(,,)_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.735991471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.741145569 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_closure
.type GHC.Base.$fMonoid(,,)_closure, @object
GHC.Base.$fMonoid(,,)_closure:
	.quad	GHC.Base.$fMonoid(,,)_info


==================== Asm code ====================
2018-03-16 15:54:46.742217238 UTC

.section .text
.align 8
sat_s8ob_entry:
_cggH:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$cmconcat_entry
	.size sat_s8ob_entry, .-sat_s8ob_entry


==================== Asm code ====================
2018-03-16 15:54:46.742815059 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ob_info:
	.quad	sat_s8ob_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.743473946 UTC

.section .text
.align 8
sat_s8oa_entry:
_cggP:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$cmappend_entry
	.size sat_s8oa_entry, .-sat_s8oa_entry


==================== Asm code ====================
2018-03-16 15:54:46.744460684 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oa_info:
	.quad	sat_s8oa_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.745185403 UTC

.section .text
.align 8
sat_s8o9_entry:
_cggW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cggX
_cggY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,)_$cmempty_entry
_cggX:
	jmp *-16(%r13)
	.size sat_s8o9_entry, .-sat_s8o9_entry


==================== Asm code ====================
2018-03-16 15:54:46.745816378 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8o9_info:
	.quad	sat_s8o9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.746529417 UTC

.section .text
.align 8
sat_s8o8_entry:
_cgh3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgh4
_cgh5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
_cgh4:
	jmp *-16(%r13)
	.size sat_s8o8_entry, .-sat_s8o8_entry


==================== Asm code ====================
2018-03-16 15:54:46.747198103 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8o8_info:
	.quad	sat_s8o8_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.74800324 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_entry
.type GHC.Base.$fMonoid(,,)_entry, @object
GHC.Base.$fMonoid(,,)_entry:
_cgh7:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _cghb
_cgha:
	movq $sat_s8ob_info,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	movq %rdi,-152(%r12)
	movq $sat_s8oa_info,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	movq $sat_s8o9_info,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq $sat_s8o8_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -142(%r12),%rax
	movq %rax,-8(%r12)
	leaq -175(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cghb:
	movq $184,904(%r13)
	movl $GHC.Base.$fMonoid(,,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_entry, .-GHC.Base.$fMonoid(,,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.748781119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_info
.type GHC.Base.$fMonoid(,,)_info, @object
GHC.Base.$fMonoid(,,)_info:
	.quad	GHC.Base.$fMonoid(,,)_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.754336765 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$c<>_closure
.type GHC.Base.$fSemigroup(,)_$c<>_closure, @object
GHC.Base.$fSemigroup(,)_$c<>_closure:
	.quad	GHC.Base.$fSemigroup(,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.75510654 UTC

.section .text
.align 8
sat_s8on_entry:
_cghR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cghS
_cghT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cghS:
	jmp *-16(%r13)
	.size sat_s8on_entry, .-sat_s8on_entry


==================== Asm code ====================
2018-03-16 15:54:46.755747887 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8on_info:
	.quad	sat_s8on_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.756500409 UTC

.section .text
.align 8
sat_s8om_entry:
_cghY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cghZ
_cgi0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cghZ:
	jmp *-16(%r13)
	.size sat_s8om_entry, .-sat_s8om_entry


==================== Asm code ====================
2018-03-16 15:54:46.757159949 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8om_info:
	.quad	sat_s8om_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.758335556 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$c<>_entry
.type GHC.Base.$fSemigroup(,)_$c<>_entry, @object
GHC.Base.$fSemigroup(,)_$c<>_entry:
_cgi1:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgi3
_cgi4:
	movq $block_cghD_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cghD
_cghE:
	movq (%rbx),%rax
	jmp *(%rax)
_cgi3:
	movl $GHC.Base.$fSemigroup(,)_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$c<>_entry, .-GHC.Base.$fSemigroup(,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.758989203 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$c<>_info
.type GHC.Base.$fSemigroup(,)_$c<>_info, @object
GHC.Base.$fSemigroup(,)_$c<>_info:
	.quad	GHC.Base.$fSemigroup(,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.759704226 UTC

.section .text
.align 8
_cghD:
_cghD:
	movq $block_cghI_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cghI
_cghJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cghD, .-_cghD


==================== Asm code ====================
2018-03-16 15:54:46.760299387 UTC

.section .data.rel.ro
.align 8
.align 1
block_cghD_info:
	.quad	_cghD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.761075459 UTC

.section .text
.align 8
_cghI:
_cghI:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgi8
_cgi7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8on_info,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq $sat_s8om_info,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgi8:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cghI, .-_cghI


==================== Asm code ====================
2018-03-16 15:54:46.761838049 UTC

.section .data.rel.ro
.align 8
.align 1
block_cghI_info:
	.quad	_cghI
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.767157577 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.767989567 UTC

.section .text
.align 8
sat_s8ox_entry:
_cgiU:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgiV
_cgiW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cgiV:
	jmp *-16(%r13)
	.size sat_s8ox_entry, .-sat_s8ox_entry


==================== Asm code ====================
2018-03-16 15:54:46.768633963 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ox_info:
	.quad	sat_s8ox_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.76945354 UTC

.section .text
.align 8
sat_s8ow_entry:
_cgj1:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgj2
_cgj3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_cgj2:
	jmp *-16(%r13)
	.size sat_s8ow_entry, .-sat_s8ow_entry


==================== Asm code ====================
2018-03-16 15:54:46.770123285 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ow_info:
	.quad	sat_s8ow_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:46.770918428 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,)_$cstimes_entry:
_cgj4:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cgj6
_cgj7:
	movq $block_cgiL_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cgiL
_cgiM:
	movq (%rbx),%rax
	jmp *(%rax)
_cgj6:
	movl $GHC.Base.$fSemigroup(,)_$cstimes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.772021805 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$cstimes_info
.type GHC.Base.$fSemigroup(,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.772844548 UTC

.section .text
.align 8
_cgiL:
_cgiL:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _cgja
_cgj9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8ox_info,-112(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	movq $sat_s8ow_info,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgja:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgiL, .-_cgiL


==================== Asm code ====================
2018-03-16 15:54:46.773635605 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgiL_info:
	.quad	_cgiL
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.77777933 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_closure
.type GHC.Base.$fSemigroup(,)_closure, @object
GHC.Base.$fSemigroup(,)_closure:
	.quad	GHC.Base.$fSemigroup(,)_info


==================== Asm code ====================
2018-03-16 15:54:46.778401444 UTC

.section .text
.align 8
sat_s8oC_entry:
_cgjN:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$cstimes_entry
	.size sat_s8oC_entry, .-sat_s8oC_entry


==================== Asm code ====================
2018-03-16 15:54:46.779007323 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oC_info:
	.quad	sat_s8oC_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.779611598 UTC

.section .text
.align 8
sat_s8oB_entry:
_cgjV:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$csconcat_entry
	.size sat_s8oB_entry, .-sat_s8oB_entry


==================== Asm code ====================
2018-03-16 15:54:46.780215942 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oB_info:
	.quad	sat_s8oB_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.780861575 UTC

.section .text
.align 8
sat_s8oA_entry:
_cgk3:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$c<>_entry
	.size sat_s8oA_entry, .-sat_s8oA_entry


==================== Asm code ====================
2018-03-16 15:54:46.781669543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oA_info:
	.quad	sat_s8oA_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.782494933 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_entry
.type GHC.Base.$fSemigroup(,)_entry, @object
GHC.Base.$fSemigroup(,)_entry:
_cgk7:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cgkb
_cgka:
	movq $sat_s8oC_info,-96(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	movq $sat_s8oB_info,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq $sat_s8oA_info,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -46(%r12),%rax
	movq %rax,-16(%r12)
	leaq -71(%r12),%rax
	movq %rax,-8(%r12)
	leaq -93(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgkb:
	movq $104,904(%r13)
	movl $GHC.Base.$fSemigroup(,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_entry, .-GHC.Base.$fSemigroup(,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.783271667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_info
.type GHC.Base.$fSemigroup(,)_info, @object
GHC.Base.$fSemigroup(,)_info:
	.quad	GHC.Base.$fSemigroup(,)_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.787553541 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.788355592 UTC

.section .text
.align 8
sat_s8oG_entry:
_cgkB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgkC
_cgkD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgkC:
	jmp *-16(%r13)
	.size sat_s8oG_entry, .-sat_s8oG_entry


==================== Asm code ====================
2018-03-16 15:54:46.788984146 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oG_info:
	.quad	sat_s8oG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.789805163 UTC

.section .text
.align 8
sat_s8oF_entry:
_cgkI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgkJ
_cgkK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgkJ:
	jmp *-16(%r13)
	.size sat_s8oF_entry, .-sat_s8oF_entry


==================== Asm code ====================
2018-03-16 15:54:46.790403691 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oF_info:
	.quad	sat_s8oF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.791139258 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_entry:
_cgkL:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgkP
_cgkO:
	movq $sat_s8oG_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_s8oF_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(,)_entry
_cgkP:
	movq $48,904(%r13)
	movl $GHC.Base.$fMonoid(,)_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.791800084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.79665001 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_closure
.type GHC.Base.$fMonoid(,)_closure, @object
GHC.Base.$fMonoid(,)_closure:
	.quad	GHC.Base.$fMonoid(,)_info


==================== Asm code ====================
2018-03-16 15:54:46.797353508 UTC

.section .text
.align 8
sat_s8oM_entry:
_cglb:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoid(,)_$cmconcat_entry
	.size sat_s8oM_entry, .-sat_s8oM_entry


==================== Asm code ====================
2018-03-16 15:54:46.797946359 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oM_info:
	.quad	sat_s8oM_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.798685633 UTC

.section .text
.align 8
sat_s8oL_entry:
_cglj:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,)_$cmappend_entry
	.size sat_s8oL_entry, .-sat_s8oL_entry


==================== Asm code ====================
2018-03-16 15:54:46.799703916 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oL_info:
	.quad	sat_s8oL_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.80047086 UTC

.section .text
.align 8
sat_s8oK_entry:
_cglq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cglr
_cgls:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,)_$cmempty_entry
_cglr:
	jmp *-16(%r13)
	.size sat_s8oK_entry, .-sat_s8oK_entry


==================== Asm code ====================
2018-03-16 15:54:46.801056457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oK_info:
	.quad	sat_s8oK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:46.801758772 UTC

.section .text
.align 8
sat_s8oJ_entry:
_cglx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgly
_cglz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,)_$cp1Monoid_entry
_cgly:
	jmp *-16(%r13)
	.size sat_s8oJ_entry, .-sat_s8oJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.802405042 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8oJ_info:
	.quad	sat_s8oJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:46.803201048 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_entry
.type GHC.Base.$fMonoid(,)_entry, @object
GHC.Base.$fMonoid(,)_entry:
_cglB:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cglF
_cglE:
	movq $sat_s8oM_info,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq $sat_s8oL_info,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq $sat_s8oK_info,-96(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq $sat_s8oJ_info,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -96(%r12),%rax
	movq %rax,-16(%r12)
	leaq -118(%r12),%rax
	movq %rax,-8(%r12)
	leaq -143(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cglF:
	movq $152,904(%r13)
	movl $GHC.Base.$fMonoid(,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_entry, .-GHC.Base.$fMonoid(,)_entry


==================== Asm code ====================
2018-03-16 15:54:46.803948045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_info
.type GHC.Base.$fMonoid(,)_info, @object
GHC.Base.$fMonoid(,)_info:
	.quad	GHC.Base.$fMonoid(,)_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.806621075 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$c<>_closure
.type GHC.Base.$fMonoid()_$c<>_closure, @object
GHC.Base.$fMonoid()_$c<>_closure:
	.quad	GHC.Base.$fMonoid()_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.807287236 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid()_$c<>_entry
.type GHC.Base.$fMonoid()_$c<>_entry, @object
GHC.Base.$fMonoid()_$c<>_entry:
_cgm7:
	movl $()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonoid()_$c<>_entry, .-GHC.Base.$fMonoid()_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.807884664 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$c<>_info
.type GHC.Base.$fMonoid()_$c<>_info, @object
GHC.Base.$fMonoid()_$c<>_info:
	.quad	GHC.Base.$fMonoid()_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.810023483 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$csconcat_closure
.type GHC.Base.$fSemigroup()_$csconcat_closure, @object
GHC.Base.$fSemigroup()_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup()_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:46.810719424 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup()_$csconcat_entry
.type GHC.Base.$fSemigroup()_$csconcat_entry, @object
GHC.Base.$fSemigroup()_$csconcat_entry:
_cgmj:
	movl $()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fSemigroup()_$csconcat_entry, .-GHC.Base.$fSemigroup()_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:46.811327697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$csconcat_info
.type GHC.Base.$fSemigroup()_$csconcat_info, @object
GHC.Base.$fSemigroup()_$csconcat_info:
	.quad	GHC.Base.$fSemigroup()_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.813901447 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$cstimes_closure
.type GHC.Base.$fSemigroup()_$cstimes_closure, @object
GHC.Base.$fSemigroup()_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup()_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.814560823 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup()_$cstimes_entry
.type GHC.Base.$fSemigroup()_$cstimes_entry, @object
GHC.Base.$fSemigroup()_$cstimes_entry:
_cgmv:
	movl $()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fSemigroup()_$cstimes_entry, .-GHC.Base.$fSemigroup()_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.815211729 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$cstimes_info
.type GHC.Base.$fSemigroup()_$cstimes_info, @object
GHC.Base.$fSemigroup()_$cstimes_info:
	.quad	GHC.Base.$fSemigroup()_$cstimes_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.816979972 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_closure
.type GHC.Base.$fSemigroup()_closure, @object
GHC.Base.$fSemigroup()_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fMonoid()_$c<>_closure+2
	.quad	GHC.Base.$fSemigroup()_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroup()_$cstimes_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:46.818874776 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_closure
.type GHC.Base.$fMonoid()_closure, @object
GHC.Base.$fMonoid()_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroup()_closure+1
	.quad	GHC.Tuple.()_closure+1
	.quad	GHC.Base.$fMonoid()_$c<>_closure+2
	.quad	GHC.Base.$fMonoid()_$cmconcat_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:46.821896253 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$c<>_closure
.type GHC.Base.$fSemigroup(->)_$c<>_closure, @object
GHC.Base.$fSemigroup(->)_$c<>_closure:
	.quad	GHC.Base.$fSemigroup(->)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:46.822850145 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$c<>_entry
.type GHC.Base.$fSemigroup(->)_$c<>_entry, @object
GHC.Base.$fSemigroup(->)_$c<>_entry:
_cgmL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgmM
_cgmN:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgmP
_cgmO:
	movq $stg_ap_2_upd_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<>_entry
_cgmP:
	movq $64,904(%r13)
_cgmM:
	movl $GHC.Base.$fSemigroup(->)_$c<>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$c<>_entry, .-GHC.Base.$fSemigroup(->)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:46.823564146 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$c<>_info
.type GHC.Base.$fSemigroup(->)_$c<>_info, @object
GHC.Base.$fSemigroup(->)_$c<>_info:
	.quad	GHC.Base.$fSemigroup(->)_$c<>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.82738502 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$cstimes_closure
.type GHC.Base.$fSemigroup(->)_$cstimes_closure, @object
GHC.Base.$fSemigroup(->)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(->)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:46.828290884 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$cstimes_entry
.type GHC.Base.$fSemigroup(->)_$cstimes_entry, @object
GHC.Base.$fSemigroup(->)_$cstimes_entry:
_cgn2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgn3
_cgn4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgn6
_cgn5:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq $stg_ap_ppp_info,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.stimes_entry
_cgn6:
	movq $32,904(%r13)
_cgn3:
	movl $GHC.Base.$fSemigroup(->)_$cstimes_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$cstimes_entry, .-GHC.Base.$fSemigroup(->)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.828954388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$cstimes_info
.type GHC.Base.$fSemigroup(->)_$cstimes_info, @object
GHC.Base.$fSemigroup(->)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(->)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:46.833158125 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_closure
.type GHC.Base.$fSemigroup(->)_closure, @object
GHC.Base.$fSemigroup(->)_closure:
	.quad	GHC.Base.$fSemigroup(->)_info


==================== Asm code ====================
2018-03-16 15:54:46.833884293 UTC

.section .text
.align 8
sat_s8p8_entry:
_cgnm:
	movq %r8,%r9
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 4(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$cstimes_entry
	.size sat_s8p8_entry, .-sat_s8p8_entry


==================== Asm code ====================
2018-03-16 15:54:46.834439207 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8p8_info:
	.quad	sat_s8p8_entry
	.quad	1
	.quad	9
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.835071215 UTC

.section .text
.align 8
sat_s8p7_entry:
_cgnu:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$csconcat_entry
	.size sat_s8p7_entry, .-sat_s8p7_entry


==================== Asm code ====================
2018-03-16 15:54:46.835619282 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8p7_info:
	.quad	sat_s8p7_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.836231954 UTC

.section .text
.align 8
sat_s8p6_entry:
_cgnC:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$c<>_entry
	.size sat_s8p6_entry, .-sat_s8p6_entry


==================== Asm code ====================
2018-03-16 15:54:46.836807682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8p6_info:
	.quad	sat_s8p6_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.837682131 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_entry
.type GHC.Base.$fSemigroup(->)_entry, @object
GHC.Base.$fSemigroup(->)_entry:
_cgnG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cgnK
_cgnJ:
	movq $sat_s8p8_info,-72(%r12)
	movq %r14,-64(%r12)
	movq $sat_s8p7_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8p6_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	leaq -37(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -68(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgnK:
	movq $80,904(%r13)
	movl $GHC.Base.$fSemigroup(->)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_entry, .-GHC.Base.$fSemigroup(->)_entry


==================== Asm code ====================
2018-03-16 15:54:46.838402294 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_info
.type GHC.Base.$fSemigroup(->)_info, @object
GHC.Base.$fSemigroup(->)_info:
	.quad	GHC.Base.$fSemigroup(->)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.842085225 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(->)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(->)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:46.842798434 UTC

.section .text
.align 8
sat_s8pa_entry:
_cgoa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgob
_cgoc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cgob:
	jmp *-16(%r13)
	.size sat_s8pa_entry, .-sat_s8pa_entry


==================== Asm code ====================
2018-03-16 15:54:46.843441695 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pa_info:
	.quad	sat_s8pa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.844165197 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(->)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_entry:
_cgod:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgoh
_cgog:
	movq $sat_s8pa_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(->)_entry
_cgoh:
	movq $24,904(%r13)
	movl $GHC.Base.$fMonoid(->)_$cp1Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(->)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:46.844823249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_info
.type GHC.Base.$fMonoid(->)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(->)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.850277994 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_closure
.type GHC.Base.$fMonoid(->)_closure, @object
GHC.Base.$fMonoid(->)_closure:
	.quad	GHC.Base.$fMonoid(->)_info


==================== Asm code ====================
2018-03-16 15:54:46.851084211 UTC

.section .text
.align 8
lvl3_s8pc_entry:
_cgoy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgoz
_cgoA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgoz:
	jmp *-16(%r13)
	.size lvl3_s8pc_entry, .-lvl3_s8pc_entry


==================== Asm code ====================
2018-03-16 15:54:46.851721679 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_s8pc_info:
	.quad	lvl3_s8pc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.852339914 UTC

.section .text
.align 8
sat_s8ph_entry:
_cgoG:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(->)_$cmconcat_entry
	.size sat_s8ph_entry, .-sat_s8ph_entry


==================== Asm code ====================
2018-03-16 15:54:46.852967811 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ph_info:
	.quad	sat_s8ph_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.853660645 UTC

.section .text
.align 8
sat_s8pg_entry:
_cgoO:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fMonoid(->)_$cmappend_entry
	.size sat_s8pg_entry, .-sat_s8pg_entry


==================== Asm code ====================
2018-03-16 15:54:46.854603937 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pg_info:
	.quad	sat_s8pg_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.855284738 UTC

.section .text
.align 8
sat_s8pf_entry:
_cgoW:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s8pf_entry, .-sat_s8pf_entry


==================== Asm code ====================
2018-03-16 15:54:46.855866182 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pf_info:
	.quad	sat_s8pf_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.856591472 UTC

.section .text
.align 8
sat_s8pd_entry:
_cgp3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgp4
_cgp5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(->)_$cp1Monoid_entry
_cgp4:
	jmp *-16(%r13)
	.size sat_s8pd_entry, .-sat_s8pd_entry


==================== Asm code ====================
2018-03-16 15:54:46.857189494 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pd_info:
	.quad	sat_s8pd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.857991909 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_entry
.type GHC.Base.$fMonoid(->)_entry, @object
GHC.Base.$fMonoid(->)_entry:
_cgp7:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cgpb
_cgpa:
	movq $lvl3_s8pc_info,-128(%r12)
	movq %r14,-112(%r12)
	movq $sat_s8ph_info,-104(%r12)
	movq %r14,-96(%r12)
	movq $sat_s8pg_info,-88(%r12)
	movq %r14,-80(%r12)
	movq $sat_s8pf_info,-72(%r12)
	leaq -128(%r12),%rax
	movq %rax,-64(%r12)
	movq $sat_s8pd_info,-56(%r12)
	movq %r14,-40(%r12)
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -71(%r12),%rax
	movq %rax,-16(%r12)
	leaq -85(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgpb:
	movq $136,904(%r13)
	movl $GHC.Base.$fMonoid(->)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_entry, .-GHC.Base.$fMonoid(->)_entry


==================== Asm code ====================
2018-03-16 15:54:46.858773063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_info
.type GHC.Base.$fMonoid(->)_info, @object
GHC.Base.$fMonoid(->)_info:
	.quad	GHC.Base.$fMonoid(->)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.861309115 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$cstimes_closure
.type GHC.Base.$fSemigroup[]_$cstimes_closure, @object
GHC.Base.$fSemigroup[]_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup[]_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.861976654 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]_$cstimes_entry
.type GHC.Base.$fSemigroup[]_$cstimes_entry, @object
GHC.Base.$fSemigroup[]_$cstimes_entry:
_cgpH:
	movl $Data.Semigroup.Internal.stimesList_closure,%ebx
	jmp stg_ap_p_fast
	.size GHC.Base.$fSemigroup[]_$cstimes_entry, .-GHC.Base.$fSemigroup[]_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:46.862573507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$cstimes_info
.type GHC.Base.$fSemigroup[]_$cstimes_info, @object
GHC.Base.$fSemigroup[]_$cstimes_info:
	.quad	GHC.Base.$fSemigroup[]_$cstimes_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8R0_srt+128


==================== Asm code ====================
2018-03-16 15:54:46.864340649 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_closure
.type GHC.Base.$fSemigroup[]_closure, @object
GHC.Base.$fSemigroup[]_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fSemigroup[]_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroup[]_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.866159089 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_closure
.type GHC.Base.$fMonoid[]_closure, @object
GHC.Base.$fMonoid[]_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroup[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fMonoid[]_$cmconcat_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.869592451 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_closure
.type GHC.Base.$fApplicativeNonEmpty_$cpure_closure, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_info


==================== Asm code ====================
2018-03-16 15:54:46.870440575 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_entry
.type GHC.Base.$fApplicativeNonEmpty_$cpure_entry, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_entry:
_cgpV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgpZ
_cgpY:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq $GHC.Types.[]_closure+1,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgpZ:
	movq $24,904(%r13)
	movl $GHC.Base.$fApplicativeNonEmpty_$cpure_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$cpure_entry, .-GHC.Base.$fApplicativeNonEmpty_$cpure_entry


==================== Asm code ====================
2018-03-16 15:54:46.8711353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_info
.type GHC.Base.$fApplicativeNonEmpty_$cpure_info, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.875958031 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cliftA2_closure
.type GHC.Base.$w$cliftA2_closure, @object
GHC.Base.$w$cliftA2_closure:
	.quad	GHC.Base.$w$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:46.876818521 UTC

.section .text
.align 8
sat_s8pq_entry:
_cgql:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgqp
_cgqo:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_3_upd_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq $GHC.Types.[]_closure+1,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgqp:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8pq_entry, .-sat_s8pq_entry


==================== Asm code ====================
2018-03-16 15:54:46.877615956 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pq_info:
	.quad	sat_s8pq_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.878407294 UTC

.section .text
.align 8
sat_s8pu_entry:
_cgqt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgqu
_cgqv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgqx
_cgqw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8pq_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq $block_cgqq_info,-8(%rbp)
	leaq -15(%r12),%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cgqx:
	movq $24,904(%r13)
_cgqu:
	jmp *-8(%r13)
	.size sat_s8pu_entry, .-sat_s8pu_entry


==================== Asm code ====================
2018-03-16 15:54:46.879103543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pu_info:
	.quad	sat_s8pu_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.879833584 UTC

.section .text
.align 8
_cgqq:
_cgqq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgqA
_cgqz:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgqA:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgqq, .-_cgqq


==================== Asm code ====================
2018-03-16 15:54:46.880478083 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgqq_info:
	.quad	_cgqq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.88120598 UTC

.section .text
.align 8
.globl GHC.Base.$w$cliftA2_entry
.type GHC.Base.$w$cliftA2_entry, @object
GHC.Base.$w$cliftA2_entry:
_cgqB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgqF
_cgqE:
	movq $sat_s8pu_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%rax
	leaq -15(%r12),%rsi
	movq %rax,%r14
	jmp GHC.Base.$w$c>>=_entry
_cgqF:
	movq $24,904(%r13)
	movl $GHC.Base.$w$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$cliftA2_entry, .-GHC.Base.$w$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:46.88229465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cliftA2_info
.type GHC.Base.$w$cliftA2_info, @object
GHC.Base.$w$cliftA2_info:
	.quad	GHC.Base.$w$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.885532766 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:46.886365332 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry:
_cgr4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgr5
_cgr6:
	movq $block_cgr1_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cliftA2_entry
_cgr5:
	movl $GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry, .-GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:46.886994455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_info
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_info, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.887719347 UTC

.section .text
.align 8
_cgr1:
_cgr1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgr9
_cgr8:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgr9:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgr1, .-_cgr1


==================== Asm code ====================
2018-03-16 15:54:46.888351307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgr1_info:
	.quad	_cgr1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.892737179 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<*_closure
.type GHC.Base.$w$c<*_closure, @object
GHC.Base.$w$c<*_closure:
	.quad	GHC.Base.$w$c<*_info


==================== Asm code ====================
2018-03-16 15:54:46.89350755 UTC

.section .text
.align 8
sat_s8pG_entry:
_cgry:
	movq 7(%rbx),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8pG_entry, .-sat_s8pG_entry


==================== Asm code ====================
2018-03-16 15:54:46.8940964 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pG_info:
	.quad	sat_s8pG_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.894952404 UTC

.section .text
.align 8
sat_s8pK_entry:
_cgrE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgrF
_cgrG:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgrI
_cgrH:
	movq 7(%rbx),%rax
	movq $GHC.Base.:|_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Types.[]_closure+1,-16(%r12)
	movq $sat_s8pG_info,-8(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_cgrB_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cgrI:
	movq $40,904(%r13)
_cgrF:
	jmp *-8(%r13)
	.size sat_s8pK_entry, .-sat_s8pK_entry


==================== Asm code ====================
2018-03-16 15:54:46.896089769 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pK_info:
	.quad	sat_s8pK_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.896856313 UTC

.section .text
.align 8
_cgrB:
_cgrB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgrL
_cgrK:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgrL:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgrB, .-_cgrB


==================== Asm code ====================
2018-03-16 15:54:46.897526565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgrB_info:
	.quad	_cgrB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.898190661 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<*_entry
.type GHC.Base.$w$c<*_entry, @object
GHC.Base.$w$c<*_entry:
_cgrM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgrQ
_cgrP:
	movq $sat_s8pK_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rsi
	jmp GHC.Base.$w$c>>=_entry
_cgrQ:
	movq $16,904(%r13)
	movl $GHC.Base.$w$c<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<*_entry, .-GHC.Base.$w$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:46.898857641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<*_info
.type GHC.Base.$w$c<*_info, @object
GHC.Base.$w$c<*_info:
	.quad	GHC.Base.$w$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.902452337 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_closure
.type GHC.Base.$fApplicativeNonEmpty_$c<*_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:46.903263848 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_entry
.type GHC.Base.$fApplicativeNonEmpty_$c<*_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_entry:
_cgsf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgsg
_cgsh:
	movq $block_cgsc_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*_entry
_cgsg:
	movl $GHC.Base.$fApplicativeNonEmpty_$c<*_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c<*_entry, .-GHC.Base.$fApplicativeNonEmpty_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:46.903912804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_info
.type GHC.Base.$fApplicativeNonEmpty_$c<*_info, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.904620307 UTC

.section .text
.align 8
_cgsc:
_cgsc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgsk
_cgsj:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgsk:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgsc, .-_cgsc


==================== Asm code ====================
2018-03-16 15:54:46.9052932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgsc_info:
	.quad	_cgsc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.910417444 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<*>_closure
.type GHC.Base.$w$c<*>_closure, @object
GHC.Base.$w$c<*>_closure:
	.quad	GHC.Base.$w$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:46.9113234 UTC

.section .text
.align 8
sat_s8pV_entry:
_cgsK:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgsO
_cgsN:
	movq 7(%rbx),%rax
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq $GHC.Types.[]_closure+1,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgsO:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s8pV_entry, .-sat_s8pV_entry


==================== Asm code ====================
2018-03-16 15:54:46.911966271 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pV_info:
	.quad	sat_s8pV_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.912766859 UTC

.section .text
.align 8
sat_s8pZ_entry:
_cgsS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgsT
_cgsU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgsW
_cgsV:
	movq 7(%rbx),%rax
	movq $sat_s8pV_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_cgsP_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cgsW:
	movq $16,904(%r13)
_cgsT:
	jmp *-8(%r13)
	.size sat_s8pZ_entry, .-sat_s8pZ_entry


==================== Asm code ====================
2018-03-16 15:54:46.913446486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8pZ_info:
	.quad	sat_s8pZ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:46.914125256 UTC

.section .text
.align 8
_cgsP:
_cgsP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgsZ
_cgsY:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgsZ:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgsP, .-_cgsP


==================== Asm code ====================
2018-03-16 15:54:46.914741906 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgsP_info:
	.quad	_cgsP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.915460105 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<*>_entry
.type GHC.Base.$w$c<*>_entry, @object
GHC.Base.$w$c<*>_entry:
_cgt0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgt4
_cgt3:
	movq $sat_s8pZ_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rsi
	jmp GHC.Base.$w$c>>=_entry
_cgt4:
	movq $16,904(%r13)
	movl $GHC.Base.$w$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<*>_entry, .-GHC.Base.$w$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.916104973 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<*>_info
.type GHC.Base.$w$c<*>_info, @object
GHC.Base.$w$c<*>_info:
	.quad	GHC.Base.$w$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.919181787 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_closure
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:46.919961231 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_entry
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_entry:
_cgtt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgtu
_cgtv:
	movq $block_cgtq_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*>_entry
_cgtu:
	movl $GHC.Base.$fApplicativeNonEmpty_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c<*>_entry, .-GHC.Base.$fApplicativeNonEmpty_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.92058213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_info
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_info, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.921386862 UTC

.section .text
.align 8
_cgtq:
_cgtq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgty
_cgtx:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgty:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cgtq, .-_cgtq


==================== Asm code ====================
2018-03-16 15:54:46.922055505 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgtq_info:
	.quad	_cgtq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.924670905 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty1_closure
.type GHC.Base.$fApplicativeNonEmpty1_closure, @object
GHC.Base.$fApplicativeNonEmpty1_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty1_info


==================== Asm code ====================
2018-03-16 15:54:46.925905728 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty1_entry
.type GHC.Base.$fApplicativeNonEmpty1_entry, @object
GHC.Base.$fApplicativeNonEmpty1_entry:
_cgtM:
	movq %rsi,%rbx
	jmp stg_ap_0_fast
	.size GHC.Base.$fApplicativeNonEmpty1_entry, .-GHC.Base.$fApplicativeNonEmpty1_entry


==================== Asm code ====================
2018-03-16 15:54:46.926457137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty1_info
.type GHC.Base.$fApplicativeNonEmpty1_info, @object
GHC.Base.$fApplicativeNonEmpty1_info:
	.quad	GHC.Base.$fApplicativeNonEmpty1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.930846898 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_closure
.type GHC.Base.$fApplicativeNonEmpty_$c*>_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:46.931636352 UTC

.section .text
.align 8
sat_s8qc_entry:
_cgu4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgu5
_cgu6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cgu1_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cgu1
_cgu2:
	movq (%rbx),%rax
	jmp *(%rax)
_cgu5:
	jmp *-16(%r13)
	.size sat_s8qc_entry, .-sat_s8qc_entry


==================== Asm code ====================
2018-03-16 15:54:46.932234836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8qc_info:
	.quad	sat_s8qc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:46.932877674 UTC

.section .text
.align 8
_cgu1:
_cgu1:
	movq 15(%rbx),%rsi
	movl $GHC.Base.$fApplicativeNonEmpty1_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _cgu1, .-_cgu1


==================== Asm code ====================
2018-03-16 15:54:46.933543365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgu1_info:
	.quad	_cgu1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.93434987 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_entry
.type GHC.Base.$fApplicativeNonEmpty_$c*>_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_entry:
_cguf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cgug
_cguh:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cguj
_cgui:
	movq $sat_s8qc_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq $GHC.Base.breakpoint_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_cguc_info,-8(%rbp)
	leaq -15(%r12),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*>_entry
_cguj:
	movq $48,904(%r13)
_cgug:
	movl $GHC.Base.$fApplicativeNonEmpty_$c*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c*>_entry, .-GHC.Base.$fApplicativeNonEmpty_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.935069349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_info
.type GHC.Base.$fApplicativeNonEmpty_$c*>_info, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.935807351 UTC

.section .text
.align 8
_cguc:
_cguc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgum
_cgul:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgum:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cguc, .-_cguc


==================== Asm code ====================
2018-03-16 15:54:46.936459202 UTC

.section .data.rel.ro
.align 8
.align 1
block_cguc_info:
	.quad	_cguc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.938978209 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_closure
.type GHC.Base.$fApplicativeNonEmpty_closure, @object
GHC.Base.$fApplicativeNonEmpty_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorNonEmpty_closure+1
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_closure+1
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:46.941218638 UTC

.section .data
.align 8
.align 1
lvl_r7PJ_closure:
	.quad	lvl_r7PJ_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.941838171 UTC

.section .text
.align 8
lvl_r7PJ_entry:
_cguK:
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size lvl_r7PJ_entry, .-lvl_r7PJ_entry


==================== Asm code ====================
2018-03-16 15:54:46.942378373 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r7PJ_info:
	.quad	lvl_r7PJ_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8R0_srt+72


==================== Asm code ====================
2018-03-16 15:54:46.944232817 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_closure
.type GHC.Base.$fMonadNonEmpty_closure, @object
GHC.Base.$fMonadNonEmpty_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeNonEmpty_closure+1
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_closure+2
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_closure+1
	.quad	lvl_r7PJ_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.945947857 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$fAlternativeIO4_bytes
.type GHC.Base.$fAlternativeIO4_bytes, @object
GHC.Base.$fAlternativeIO4_bytes:
	.asciz "mzero"


==================== Asm code ====================
2018-03-16 15:54:46.948633924 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO3_closure
.type GHC.Base.$fAlternativeIO3_closure, @object
GHC.Base.$fAlternativeIO3_closure:
	.quad	GHC.Base.$fAlternativeIO3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.949605895 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO3_entry
.type GHC.Base.$fAlternativeIO3_entry, @object
GHC.Base.$fAlternativeIO3_entry:
_cguZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgv0
_cgv1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cguY
_cguX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Base.$fAlternativeIO4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cgv0:
	jmp *-16(%r13)
_cguY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO3_entry, .-GHC.Base.$fAlternativeIO3_entry


==================== Asm code ====================
2018-03-16 15:54:46.950315956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO3_info
.type GHC.Base.$fAlternativeIO3_info, @object
GHC.Base.$fAlternativeIO3_info:
	.quad	GHC.Base.$fAlternativeIO3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:54:46.953968481 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cempty_closure
.type GHC.Base.$fAlternativeIO_$cempty_closure, @object
GHC.Base.$fAlternativeIO_$cempty_closure:
	.quad	GHC.Base.$fAlternativeIO_$cempty_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.954837093 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO_$cempty_entry
.type GHC.Base.$fAlternativeIO_$cempty_entry, @object
GHC.Base.$fAlternativeIO_$cempty_entry:
_cgvf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgvg
_cgvh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cgve
_cgvd:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Base.$fAlternativeIO3_closure,%r14d
	movl $GHC.IO.failIO_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_cgvg:
	jmp *-16(%r13)
_cgve:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO_$cempty_entry, .-GHC.Base.$fAlternativeIO_$cempty_entry


==================== Asm code ====================
2018-03-16 15:54:46.955535045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cempty_info
.type GHC.Base.$fAlternativeIO_$cempty_info, @object
GHC.Base.$fAlternativeIO_$cempty_info:
	.quad	GHC.Base.$fAlternativeIO_$cempty_entry
	.quad	0
	.quad	554050781205
	.quad	S8R0_srt+80


==================== Asm code ====================
2018-03-16 15:54:46.957389472 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_closure
.type GHC.Base.$fAlternativeIO_closure, @object
GHC.Base.$fAlternativeIO_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicativeIO_closure+1
	.quad	GHC.Base.$fAlternativeIO_$cempty_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	GHC.Base.$fAlternativeIO2_closure+2
	.quad	GHC.Base.$fAlternativeIO_$cmany_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.959098091 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlusIO_closure
.type GHC.Base.$fMonadPlusIO_closure, @object
GHC.Base.$fMonadPlusIO_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternativeIO_closure+1
	.quad	GHC.Base.$fMonadIO_closure+1
	.quad	GHC.Base.$fAlternativeIO_$cempty_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.962292602 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$c<|>_closure
.type GHC.Base.$fAlternativeMaybe_$c<|>_closure, @object
GHC.Base.$fAlternativeMaybe_$c<|>_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_info


==================== Asm code ====================
2018-03-16 15:54:46.963159637 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$c<|>_entry
.type GHC.Base.$fAlternativeMaybe_$c<|>_entry, @object
GHC.Base.$fAlternativeMaybe_$c<|>_entry:
_cgvC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgvD
_cgvE:
	movq $block_cgvv_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgvv
_cgvw:
	movq (%rbx),%rax
	jmp *(%rax)
_cgvD:
	movl $GHC.Base.$fAlternativeMaybe_$c<|>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$c<|>_entry, .-GHC.Base.$fAlternativeMaybe_$c<|>_entry


==================== Asm code ====================
2018-03-16 15:54:46.963783831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$c<|>_info
.type GHC.Base.$fAlternativeMaybe_$c<|>_info, @object
GHC.Base.$fAlternativeMaybe_$c<|>_info:
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.964552236 UTC

.section .text
.align 8
_cgvv:
_cgvv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgvz
_cgvA:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cgvz:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cgvv, .-_cgvv


==================== Asm code ====================
2018-03-16 15:54:46.965756451 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgvv_info:
	.quad	_cgvv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.970217197 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_closure
.type GHC.Base.$fApplicativeMaybe_$cliftA2_closure, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:46.971127975 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_entry
.type GHC.Base.$fApplicativeMaybe_$cliftA2_entry, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_entry:
_cgwc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgwd
_cgwe:
	movq $block_cgw5_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cgw5
_cgw6:
	movq (%rbx),%rax
	jmp *(%rax)
_cgwd:
	movl $GHC.Base.$fApplicativeMaybe_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$cliftA2_entry, .-GHC.Base.$fApplicativeMaybe_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:46.971782278 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_info
.type GHC.Base.$fApplicativeMaybe_$cliftA2_info, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.972571319 UTC

.section .text
.align 8
_cgw5:
_cgw5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugwC
_cgwa:
	movq $block_cgwk_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cgwk
_cgwm:
	movq (%rbx),%rax
	jmp *(%rax)
_ugwC:
	addq $24,%rbp
	jmp _cgws
	.size _cgw5, .-_cgw5


==================== Asm code ====================
2018-03-16 15:54:46.973207653 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgw5_info:
	.quad	_cgw5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.974071634 UTC

.section .text
.align 8
_cgwk:
_cgwk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugwD
_cgwx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgwA
_cgwz:
	movq 6(%rbx),%rax
	movq $stg_ap_3_upd_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ugwD:
	addq $24,%rbp
	jmp _cgws
_cgwA:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgwk, .-_cgwk


==================== Asm code ====================
2018-03-16 15:54:46.974789418 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgwk_info:
	.quad	_cgwk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.975426362 UTC

.section .text
.align 8
_cgws:
_cgws:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgws, .-_cgws


==================== Asm code ====================
2018-03-16 15:54:46.978650116 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c*>_closure
.type GHC.Base.$fApplicativeMaybe_$c*>_closure, @object
GHC.Base.$fApplicativeMaybe_$c*>_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:46.979915773 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c*>_entry
.type GHC.Base.$fApplicativeMaybe_$c*>_entry, @object
GHC.Base.$fApplicativeMaybe_$c*>_entry:
_cgxh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgxi
_cgxj:
	movq $block_cgxa_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgxa
_cgxb:
	movq (%rbx),%rax
	jmp *(%rax)
_cgxi:
	movl $GHC.Base.$fApplicativeMaybe_$c*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c*>_entry, .-GHC.Base.$fApplicativeMaybe_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.980637825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c*>_info
.type GHC.Base.$fApplicativeMaybe_$c*>_info, @object
GHC.Base.$fApplicativeMaybe_$c*>_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:46.981742049 UTC

.section .text
.align 8
_cgxa:
_cgxa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cgxe
_cgxf:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cgxe:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgxa, .-_cgxa


==================== Asm code ====================
2018-03-16 15:54:46.982346178 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgxa_info:
	.quad	_cgxa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:46.98505853 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*>_closure
.type GHC.Base.$fApplicative(->)_$c<*>_closure, @object
GHC.Base.$fApplicative(->)_$c<*>_closure:
	.quad	GHC.Base.$fApplicative(->)_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:46.985948254 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c<*>_entry
.type GHC.Base.$fApplicative(->)_$c<*>_entry, @object
GHC.Base.$fApplicative(->)_$c<*>_entry:
_cgxK:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgxO
_cgxN:
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -24(%r12),%rsi
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cgxO:
	movq $32,904(%r13)
	movl $GHC.Base.$fApplicative(->)_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(->)_$c<*>_entry, .-GHC.Base.$fApplicative(->)_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:46.986611841 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*>_info
.type GHC.Base.$fApplicative(->)_$c<*>_info, @object
GHC.Base.$fApplicative(->)_$c<*>_info:
	.quad	GHC.Base.$fApplicative(->)_$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:46.989298629 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$cliftA2_closure
.type GHC.Base.$fApplicative(->)_$cliftA2_closure, @object
GHC.Base.$fApplicative(->)_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:46.990100531 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$cliftA2_entry
.type GHC.Base.$fApplicative(->)_$cliftA2_entry, @object
GHC.Base.$fApplicative(->)_$cliftA2_entry:
_cgxZ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgy3
_cgy2:
	movq $stg_ap_2_upd_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $stg_ap_2_upd_info,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	leaq -56(%r12),%rsi
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_cgy3:
	movq $64,904(%r13)
	movl $GHC.Base.$fApplicative(->)_$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(->)_$cliftA2_entry, .-GHC.Base.$fApplicative(->)_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:46.990787459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$cliftA2_info
.type GHC.Base.$fApplicative(->)_$cliftA2_info, @object
GHC.Base.$fApplicative(->)_$cliftA2_info:
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:46.992716295 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_closure
.type GHC.Base.$fApplicative(->)_closure, @object
GHC.Base.$fApplicative(->)_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctor(->)_closure+1
	.quad	GHC.Base.const_closure+2
	.quad	GHC.Base.$fApplicative(->)_$c<*>_closure+3
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_closure+4
	.quad	GHC.Base.$fApplicative(->)_$c*>_closure+3
	.quad	GHC.Base.$fApplicative(->)_$c<*_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.99542238 UTC

.section .data
.align 8
.align 1
lvl1_r7PK_closure:
	.quad	lvl1_r7PK_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:46.996055389 UTC

.section .text
.align 8
lvl1_r7PK_entry:
_cgyd:
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size lvl1_r7PK_entry, .-lvl1_r7PK_entry


==================== Asm code ====================
2018-03-16 15:54:46.996581529 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_r7PK_info:
	.quad	lvl1_r7PK_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8R0_srt+72


==================== Asm code ====================
2018-03-16 15:54:46.998313839 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_closure
.type GHC.Base.$fMonad(->)_closure, @object
GHC.Base.$fMonad(->)_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicative(->)_closure+1
	.quad	GHC.Base.$fMonad(->)_$c>>=_closure+3
	.quad	GHC.Base.$fMonad(->)_$c>>_closure+3
	.quad	GHC.Base.const_closure+2
	.quad	lvl1_r7PK_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:47.001843646 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cfmap_closure
.type GHC.Base.$fApplicativeMaybe_$cfmap_closure, @object
GHC.Base.$fApplicativeMaybe_$cfmap_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:47.002698963 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$cfmap_entry
.type GHC.Base.$fApplicativeMaybe_$cfmap_entry, @object
GHC.Base.$fApplicativeMaybe_$cfmap_entry:
_cgyw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgyx
_cgyy:
	movq $block_cgyp_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgyp
_cgyq:
	movq (%rbx),%rax
	jmp *(%rax)
_cgyx:
	movl $GHC.Base.$fApplicativeMaybe_$cfmap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$cfmap_entry, .-GHC.Base.$fApplicativeMaybe_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:47.003360784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cfmap_info
.type GHC.Base.$fApplicativeMaybe_$cfmap_info, @object
GHC.Base.$fApplicativeMaybe_$cfmap_info:
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.004141769 UTC

.section .text
.align 8
_cgyp:
_cgyp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgyt
_cgyu:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgyI
_cgyH:
	movq 6(%rbx),%rax
	movq $stg_ap_2_upd_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgyI:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_cgyt:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgyp, .-_cgyp


==================== Asm code ====================
2018-03-16 15:54:47.004889363 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgyp_info:
	.quad	_cgyp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.007047713 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_closure
.type GHC.Base.$fFunctorMaybe_closure, @object
GHC.Base.$fFunctorMaybe_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_closure+2
	.quad	GHC.Base.$fFunctorMaybe_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.010324121 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*>_closure
.type GHC.Base.$fApplicativeMaybe_$c<*>_closure, @object
GHC.Base.$fApplicativeMaybe_$c<*>_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:47.011188281 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c<*>_entry
.type GHC.Base.$fApplicativeMaybe_$c<*>_entry, @object
GHC.Base.$fApplicativeMaybe_$c<*>_entry:
_cgzb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgzc
_cgzd:
	movq $block_cgz4_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgz4
_cgz5:
	movq (%rbx),%rax
	jmp *(%rax)
_cgzc:
	movl $GHC.Base.$fApplicativeMaybe_$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c<*>_entry, .-GHC.Base.$fApplicativeMaybe_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:47.011868344 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*>_info
.type GHC.Base.$fApplicativeMaybe_$c<*>_info, @object
GHC.Base.$fApplicativeMaybe_$c<*>_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.012588689 UTC

.section .text
.align 8
_cgz4:
_cgz4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cgz8
_cgz9:
	movq 8(%rbp),%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Base.$fApplicativeMaybe_$cfmap_entry
_cgz8:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgz4, .-_cgz4


==================== Asm code ====================
2018-03-16 15:54:47.013225976 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgz4_info:
	.quad	_cgz4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.015052486 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_closure
.type GHC.Base.$fApplicativeMaybe_closure, @object
GHC.Base.$fApplicativeMaybe_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorMaybe_closure+1
	.quad	GHC.Base.Just_closure+1
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.016856767 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_closure
.type GHC.Base.$fMonadMaybe_closure, @object
GHC.Base.$fMonadMaybe_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeMaybe_closure+1
	.quad	GHC.Base.$fMonadMaybe_$c>>=_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_closure+2
	.quad	GHC.Base.Just_closure+1
	.quad	GHC.Base.$fMonadMaybe_$cfail_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.019098631 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_closure
.type GHC.Base.$fAlternativeMaybe_closure, @object
GHC.Base.$fAlternativeMaybe_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicativeMaybe_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_closure+2
	.quad	GHC.Base.$fAlternativeMaybe_$csome_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.021488186 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlusMaybe_closure
.type GHC.Base.$fMonadPlusMaybe_closure, @object
GHC.Base.$fMonadPlusMaybe_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternativeMaybe_closure+1
	.quad	GHC.Base.$fMonadMaybe_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.026656227 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA3_closure
.type GHC.Base.liftA3_$sliftA3_closure, @object
GHC.Base.liftA3_$sliftA3_closure:
	.quad	GHC.Base.liftA3_$sliftA3_info


==================== Asm code ====================
2018-03-16 15:54:47.027549941 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_$sliftA3_entry
.type GHC.Base.liftA3_$sliftA3_entry, @object
GHC.Base.liftA3_$sliftA3_entry:
_cgzM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgzN
_cgzO:
	movq $block_cgzF_info,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cgzF
_cgzG:
	movq (%rbx),%rax
	jmp *(%rax)
_cgzN:
	movl $GHC.Base.liftA3_$sliftA3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftA3_$sliftA3_entry, .-GHC.Base.liftA3_$sliftA3_entry


==================== Asm code ====================
2018-03-16 15:54:47.028200009 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA3_info
.type GHC.Base.liftA3_$sliftA3_info, @object
GHC.Base.liftA3_$sliftA3_info:
	.quad	GHC.Base.liftA3_$sliftA3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:47.028914082 UTC

.section .text
.align 8
_cgzF:
_cgzF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugAp
_cgzK:
	movq $block_cgzU_info,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cgzU
_cgzW:
	movq (%rbx),%rax
	jmp *(%rax)
_ugAp:
	addq $32,%rbp
	jmp _cgAe
	.size _cgzF, .-_cgzF


==================== Asm code ====================
2018-03-16 15:54:47.029595607 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgzF_info:
	.quad	_cgzF
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.030368423 UTC

.section .text
.align 8
_cgzU:
_cgzU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugAq
_cgA7:
	movq $block_cgA5_info,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cgA5
_cgA8:
	movq (%rbx),%rax
	jmp *(%rax)
_ugAq:
	addq $32,%rbp
	jmp _cgAe
	.size _cgzU, .-_cgzU


==================== Asm code ====================
2018-03-16 15:54:47.031020881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgzU_info:
	.quad	_cgzU
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.031861362 UTC

.section .text
.align 8
_cgA5:
_cgA5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ugAr
_cgAj:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cgAm
_cgAl:
	movq 6(%rbx),%rax
	movq $stg_ap_4_upd_info,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ugAr:
	addq $32,%rbp
	jmp _cgAe
_cgAm:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgA5, .-_cgA5


==================== Asm code ====================
2018-03-16 15:54:47.03259561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgA5_info:
	.quad	_cgA5
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.033231915 UTC

.section .text
.align 8
_cgAe:
_cgAe:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cgAe, .-_cgAe


==================== Asm code ====================
2018-03-16 15:54:47.038222912 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_closure
.type GHC.Base.liftA3_closure, @object
GHC.Base.liftA3_closure:
	.quad	GHC.Base.liftA3_info


==================== Asm code ====================
2018-03-16 15:54:47.038984643 UTC

.section .text
.align 8
sat_s8r8_entry:
_cgBb:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cgBc
_cgBd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_ppp_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cgBc:
	jmp *-16(%r13)
	.size sat_s8r8_entry, .-sat_s8r8_entry


==================== Asm code ====================
2018-03-16 15:54:47.03965543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8r8_info:
	.quad	sat_s8r8_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:47.040483728 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_entry
.type GHC.Base.liftA3_entry, @object
GHC.Base.liftA3_entry:
_cgBe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgBf
_cgBg:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgBi
_cgBh:
	movq $sat_s8r8_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_cgBi:
	movq $48,904(%r13)
_cgBf:
	movl $GHC.Base.liftA3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftA3_entry, .-GHC.Base.liftA3_entry


==================== Asm code ====================
2018-03-16 15:54:47.041168023 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_info
.type GHC.Base.liftA3_info, @object
GHC.Base.liftA3_info:
	.quad	GHC.Base.liftA3_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:47.043413244 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA_closure
.type GHC.Base.liftA_$sliftA_closure, @object
GHC.Base.liftA_$sliftA_closure:
	.quad	GHC.Base.liftA_$sliftA_info


==================== Asm code ====================
2018-03-16 15:54:47.044034759 UTC

.section .text
.align 8
.globl GHC.Base.liftA_$sliftA_entry
.type GHC.Base.liftA_$sliftA_entry, @object
GHC.Base.liftA_$sliftA_entry:
_cgBA:
	jmp GHC.Base.$fApplicativeMaybe_$cfmap_entry
	.size GHC.Base.liftA_$sliftA_entry, .-GHC.Base.liftA_$sliftA_entry


==================== Asm code ====================
2018-03-16 15:54:47.044646576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA_info
.type GHC.Base.liftA_$sliftA_info, @object
GHC.Base.liftA_$sliftA_info:
	.quad	GHC.Base.liftA_$sliftA_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.048174401 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_closure
.type GHC.Base.liftA_closure, @object
GHC.Base.liftA_closure:
	.quad	GHC.Base.liftA_info


==================== Asm code ====================
2018-03-16 15:54:47.049499172 UTC

.section .text
.align 8
sat_s8rc_entry:
_cgBP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cgBQ
_cgBR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_cgBQ:
	jmp *-16(%r13)
	.size sat_s8rc_entry, .-sat_s8rc_entry


==================== Asm code ====================
2018-03-16 15:54:47.050140999 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rc_info:
	.quad	sat_s8rc_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:47.050970541 UTC

.section .text
.align 8
.globl GHC.Base.liftA_entry
.type GHC.Base.liftA_entry, @object
GHC.Base.liftA_entry:
_cgBS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cgBT
_cgBU:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgBW
_cgBV:
	movq $sat_s8rc_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_cgBW:
	movq $32,904(%r13)
_cgBT:
	movl $GHC.Base.liftA_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.liftA_entry, .-GHC.Base.liftA_entry


==================== Asm code ====================
2018-03-16 15:54:47.051705599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_info
.type GHC.Base.liftA_info, @object
GHC.Base.liftA_info:
	.quad	GHC.Base.liftA_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:47.055174897 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$cfmap_closure
.type GHC.Base.$fFunctor(,)_$cfmap_closure, @object
GHC.Base.$fFunctor(,)_$cfmap_closure:
	.quad	GHC.Base.$fFunctor(,)_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:47.056019803 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(,)_$cfmap_entry
.type GHC.Base.$fFunctor(,)_$cfmap_entry, @object
GHC.Base.$fFunctor(,)_$cfmap_entry:
_cgCf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgCk
_cgCl:
	movq $block_cgCc_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cgCc
_cgCd:
	movq (%rbx),%rax
	jmp *(%rax)
_cgCk:
	movl $GHC.Base.$fFunctor(,)_$cfmap_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor(,)_$cfmap_entry, .-GHC.Base.$fFunctor(,)_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:47.056683399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$cfmap_info
.type GHC.Base.$fFunctor(,)_$cfmap_info, @object
GHC.Base.$fFunctor(,)_$cfmap_info:
	.quad	GHC.Base.$fFunctor(,)_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.057485066 UTC

.section .text
.align 8
_cgCc:
_cgCc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgCo
_cgCn:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $stg_ap_2_upd_info,-48(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgCo:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cgCc, .-_cgCc


==================== Asm code ====================
2018-03-16 15:54:47.058168549 UTC

.section .data.rel.ro
.align 8
.align 1
block_cgCc_info:
	.quad	_cgCc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:47.059929541 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_closure
.type GHC.Base.$fFunctor(,)_closure, @object
GHC.Base.$fFunctor(,)_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctor(,)_$cfmap_closure+2
	.quad	GHC.Base.$fFunctor(,)_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:47.066779242 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_closure
.type GHC.Base.$fApplicative(,)_closure, @object
GHC.Base.$fApplicative(,)_closure:
	.quad	GHC.Base.$fApplicative(,)_info


==================== Asm code ====================
2018-03-16 15:54:47.067598445 UTC

.section .text
.align 8
lvl3_s8rk_entry:
_cgCL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgCM
_cgCN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgCM:
	jmp *-16(%r13)
	.size lvl3_s8rk_entry, .-lvl3_s8rk_entry


==================== Asm code ====================
2018-03-16 15:54:47.068218246 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_s8rk_info:
	.quad	lvl3_s8rk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:47.068874025 UTC

.section .text
.align 8
sat_s8rq_entry:
_cgCT:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c<*_entry
	.size sat_s8rq_entry, .-sat_s8rq_entry


==================== Asm code ====================
2018-03-16 15:54:47.069464601 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rq_info:
	.quad	sat_s8rq_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.070083262 UTC

.section .text
.align 8
sat_s8rp_entry:
_cgD1:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c*>_entry
	.size sat_s8rp_entry, .-sat_s8rp_entry


==================== Asm code ====================
2018-03-16 15:54:47.070665058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rp_info:
	.quad	sat_s8rp_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.071314003 UTC

.section .text
.align 8
sat_s8ro_entry:
_cgD9:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$cliftA2_entry
	.size sat_s8ro_entry, .-sat_s8ro_entry


==================== Asm code ====================
2018-03-16 15:54:47.071908461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ro_info:
	.quad	sat_s8ro_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:47.072513264 UTC

.section .text
.align 8
sat_s8rn_entry:
_cgDh:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c<*>_entry
	.size sat_s8rn_entry, .-sat_s8rn_entry


==================== Asm code ====================
2018-03-16 15:54:47.073090645 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rn_info:
	.quad	sat_s8rn_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.073887899 UTC

.section .text
.align 8
sat_s8rm_entry:
_cgDq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgDu
_cgDt:
	movq 7(%rbx),%rax
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgDu:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8rm_entry, .-sat_s8rm_entry


==================== Asm code ====================
2018-03-16 15:54:47.074552505 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rm_info:
	.quad	sat_s8rm_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:47.075419634 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_entry
.type GHC.Base.$fApplicative(,)_entry, @object
GHC.Base.$fApplicative(,)_entry:
_cgDw:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _cgDA
_cgDz:
	movq $lvl3_s8rk_info,-152(%r12)
	movq %r14,-136(%r12)
	movq $sat_s8rq_info,-128(%r12)
	movq %r14,-120(%r12)
	movq $sat_s8rp_info,-112(%r12)
	movq %r14,-104(%r12)
	movq $sat_s8ro_info,-96(%r12)
	movq %r14,-88(%r12)
	movq $sat_s8rn_info,-80(%r12)
	movq %r14,-72(%r12)
	movq $sat_s8rm_info,-64(%r12)
	leaq -152(%r12),%rax
	movq %rax,-56(%r12)
	movq $GHC.Base.C:Applicative_con_info,-48(%r12)
	movq $GHC.Base.$fFunctor(,)_closure+1,-40(%r12)
	leaq -63(%r12),%rax
	movq %rax,-32(%r12)
	leaq -78(%r12),%rax
	movq %rax,-24(%r12)
	leaq -93(%r12),%rax
	movq %rax,-16(%r12)
	leaq -110(%r12),%rax
	movq %rax,-8(%r12)
	leaq -126(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgDA:
	movq $160,904(%r13)
	movl $GHC.Base.$fApplicative(,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_entry, .-GHC.Base.$fApplicative(,)_entry


==================== Asm code ====================
2018-03-16 15:54:47.076625644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_info
.type GHC.Base.$fApplicative(,)_info, @object
GHC.Base.$fApplicative(,)_info:
	.quad	GHC.Base.$fApplicative(,)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:47.078903129 UTC

.section .data
.align 8
.align 1
lvl2_r7PL_closure:
	.quad	lvl2_r7PL_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:47.07951928 UTC

.section .text
.align 8
lvl2_r7PL_entry:
_cgEa:
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size lvl2_r7PL_entry, .-lvl2_r7PL_entry


==================== Asm code ====================
2018-03-16 15:54:47.080087238 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r7PL_info:
	.quad	lvl2_r7PL_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8R0_srt+72


==================== Asm code ====================
2018-03-16 15:54:47.085718369 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_closure
.type GHC.Base.$fMonad(,)_closure, @object
GHC.Base.$fMonad(,)_closure:
	.quad	GHC.Base.$fMonad(,)_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:47.086557528 UTC

.section .text
.align 8
lvl3_s8rt_entry:
_cgEp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgEq
_cgEr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cgEq:
	jmp *-16(%r13)
	.size lvl3_s8rt_entry, .-lvl3_s8rt_entry


==================== Asm code ====================
2018-03-16 15:54:47.087175162 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_s8rt_info:
	.quad	lvl3_s8rt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:47.087897944 UTC

.section .text
.align 8
sat_s8ry_entry:
_cgEy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgEC
_cgEB:
	movq 7(%rbx),%rax
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgEC:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8ry_entry, .-sat_s8ry_entry


==================== Asm code ====================
2018-03-16 15:54:47.088583255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ry_info:
	.quad	sat_s8ry_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:47.089232549 UTC

.section .text
.align 8
sat_s8rw_entry:
_cgEI:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonad(,)_$c>>_entry
	.size sat_s8rw_entry, .-sat_s8rw_entry


==================== Asm code ====================
2018-03-16 15:54:47.089896673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rw_info:
	.quad	sat_s8rw_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.090970032 UTC

.section .text
.align 8
sat_s8rv_entry:
_cgEQ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonad(,)_$c>>=_entry
	.size sat_s8rv_entry, .-sat_s8rv_entry


==================== Asm code ====================
2018-03-16 15:54:47.091570629 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8rv_info:
	.quad	sat_s8rv_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.092289504 UTC

.section .text
.align 8
sat_s8ru_entry:
_cgEX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cgEY
_cgEZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fApplicative(,)_entry
_cgEY:
	jmp *-16(%r13)
	.size sat_s8ru_entry, .-sat_s8ru_entry


==================== Asm code ====================
2018-03-16 15:54:47.092889905 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ru_info:
	.quad	sat_s8ru_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:47.093954407 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_entry
.type GHC.Base.$fMonad(,)_entry, @object
GHC.Base.$fMonad(,)_entry:
_cgF1:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _cgF5
_cgF4:
	movq $lvl3_s8rt_info,-136(%r12)
	movq %r14,-120(%r12)
	movq $sat_s8ry_info,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-104(%r12)
	movq $sat_s8rw_info,-96(%r12)
	movq %r14,-88(%r12)
	movq $sat_s8rv_info,-80(%r12)
	movq %r14,-72(%r12)
	movq $sat_s8ru_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $GHC.Base.C:Monad_con_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -78(%r12),%rax
	movq %rax,-24(%r12)
	leaq -94(%r12),%rax
	movq %rax,-16(%r12)
	leaq -111(%r12),%rax
	movq %rax,-8(%r12)
	movq $lvl2_r7PL_closure+1,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgF5:
	movq $144,904(%r13)
	movl $GHC.Base.$fMonad(,)_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_entry, .-GHC.Base.$fMonad(,)_entry


==================== Asm code ====================
2018-03-16 15:54:47.094744912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_info
.type GHC.Base.$fMonad(,)_info, @object
GHC.Base.$fMonad(,)_info:
	.quad	GHC.Base.$fMonad(,)_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8R0_srt+144


==================== Asm code ====================
2018-03-16 15:54:47.097537735 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Monad_closure
.type GHC.Base.C:Monad_closure, @object
GHC.Base.C:Monad_closure:
	.quad	GHC.Base.C:Monad_info


==================== Asm code ====================
2018-03-16 15:54:47.098350796 UTC

.section .text
.align 8
GHC.Base.C:Monad_entry:
_cgFD:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgFH
_cgFG:
	movq $GHC.Base.C:Monad_con_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgFH:
	movq $48,904(%r13)
	movl $GHC.Base.C:Monad_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Monad_entry, .-GHC.Base.C:Monad_entry


==================== Asm code ====================
2018-03-16 15:54:47.098973124 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Monad_info:
	.quad	GHC.Base.C:Monad_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:47.101508435 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Functor_closure
.type GHC.Base.C:Functor_closure, @object
GHC.Base.C:Functor_closure:
	.quad	GHC.Base.C:Functor_info


==================== Asm code ====================
2018-03-16 15:54:47.102359842 UTC

.section .text
.align 8
GHC.Base.C:Functor_entry:
_cgFS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgFW
_cgFV:
	movq $GHC.Base.C:Functor_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgFW:
	movq $24,904(%r13)
	movl $GHC.Base.C:Functor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Functor_entry, .-GHC.Base.C:Functor_entry


==================== Asm code ====================
2018-03-16 15:54:47.103047367 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Functor_info:
	.quad	GHC.Base.C:Functor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.106362352 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Applicative_closure
.type GHC.Base.C:Applicative_closure, @object
GHC.Base.C:Applicative_closure:
	.quad	GHC.Base.C:Applicative_info


==================== Asm code ====================
2018-03-16 15:54:47.107196377 UTC

.section .text
.align 8
GHC.Base.C:Applicative_entry:
_cgG7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cgGb
_cgGa:
	movq $GHC.Base.C:Applicative_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cgGb:
	movq $56,904(%r13)
	movl $GHC.Base.C:Applicative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Applicative_entry, .-GHC.Base.C:Applicative_entry


==================== Asm code ====================
2018-03-16 15:54:47.107850003 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Applicative_info:
	.quad	GHC.Base.C:Applicative_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:47.110439772 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Semigroup_closure
.type GHC.Base.C:Semigroup_closure, @object
GHC.Base.C:Semigroup_closure:
	.quad	GHC.Base.C:Semigroup_info


==================== Asm code ====================
2018-03-16 15:54:47.111208527 UTC

.section .text
.align 8
GHC.Base.C:Semigroup_entry:
_cgGn:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cgGr
_cgGq:
	movq $GHC.Base.C:Semigroup_con_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgGr:
	movq $32,904(%r13)
	movl $GHC.Base.C:Semigroup_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Semigroup_entry, .-GHC.Base.C:Semigroup_entry


==================== Asm code ====================
2018-03-16 15:54:47.111868349 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Semigroup_info:
	.quad	GHC.Base.C:Semigroup_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:47.114512785 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Monoid_closure
.type GHC.Base.C:Monoid_closure, @object
GHC.Base.C:Monoid_closure:
	.quad	GHC.Base.C:Monoid_info


==================== Asm code ====================
2018-03-16 15:54:47.115369293 UTC

.section .text
.align 8
GHC.Base.C:Monoid_entry:
_cgGC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgGG
_cgGF:
	movq $GHC.Base.C:Monoid_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgGG:
	movq $40,904(%r13)
	movl $GHC.Base.C:Monoid_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Monoid_entry, .-GHC.Base.C:Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:47.115970231 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Monoid_info:
	.quad	GHC.Base.C:Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:47.118726575 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.Nothing_closure
.type GHC.Base.Nothing_closure, @object
GHC.Base.Nothing_closure:
	.quad	GHC.Base.Nothing_con_info


==================== Asm code ====================
2018-03-16 15:54:47.121399047 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.Just_closure
.type GHC.Base.Just_closure, @object
GHC.Base.Just_closure:
	.quad	GHC.Base.Just_info


==================== Asm code ====================
2018-03-16 15:54:47.122246873 UTC

.section .text
.align 8
GHC.Base.Just_entry:
_cgGS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgGW
_cgGV:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgGW:
	movq $16,904(%r13)
	movl $GHC.Base.Just_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.Just_entry, .-GHC.Base.Just_entry


==================== Asm code ====================
2018-03-16 15:54:47.122892258 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.Just_info:
	.quad	GHC.Base.Just_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:47.125380864 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.O_closure
.type GHC.Base.O_closure, @object
GHC.Base.O_closure:
	.quad	GHC.Base.O_info


==================== Asm code ====================
2018-03-16 15:54:47.126128928 UTC

.section .text
.align 8
GHC.Base.O_entry:
_cgH7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cgHb
_cgHa:
	movq $GHC.Base.O_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgHb:
	movq $16,904(%r13)
	movl $GHC.Base.O_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.O_entry, .-GHC.Base.O_entry


==================== Asm code ====================
2018-03-16 15:54:47.126747211 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.O_info:
	.quad	GHC.Base.O_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:47.129379375 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.:|_closure
.type GHC.Base.:|_closure, @object
GHC.Base.:|_closure:
	.quad	GHC.Base.:|_info


==================== Asm code ====================
2018-03-16 15:54:47.130191242 UTC

.section .text
.align 8
GHC.Base.:|_entry:
_cgHm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cgHq
_cgHp:
	movq $GHC.Base.:|_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgHq:
	movq $24,904(%r13)
	movl $GHC.Base.:|_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.:|_entry, .-GHC.Base.:|_entry


==================== Asm code ====================
2018-03-16 15:54:47.1308704 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.:|_info:
	.quad	GHC.Base.:|_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:47.134574094 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:MonadPlus_closure
.type GHC.Base.C:MonadPlus_closure, @object
GHC.Base.C:MonadPlus_closure:
	.quad	GHC.Base.C:MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:47.135379069 UTC

.section .text
.align 8
GHC.Base.C:MonadPlus_entry:
_cgHB:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cgHF
_cgHE:
	movq $GHC.Base.C:MonadPlus_con_info,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgHF:
	movq $40,904(%r13)
	movl $GHC.Base.C:MonadPlus_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:MonadPlus_entry, .-GHC.Base.C:MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:47.13605753 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:MonadPlus_info:
	.quad	GHC.Base.C:MonadPlus_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:47.138782699 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Alternative_closure
.type GHC.Base.C:Alternative_closure, @object
GHC.Base.C:Alternative_closure:
	.quad	GHC.Base.C:Alternative_info


==================== Asm code ====================
2018-03-16 15:54:47.139611165 UTC

.section .text
.align 8
GHC.Base.C:Alternative_entry:
_cgHQ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cgHU
_cgHT:
	movq $GHC.Base.C:Alternative_con_info,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cgHU:
	movq $48,904(%r13)
	movl $GHC.Base.C:Alternative_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Base.C:Alternative_entry, .-GHC.Base.C:Alternative_entry


==================== Asm code ====================
2018-03-16 15:54:47.140263343 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Alternative_info:
	.quad	GHC.Base.C:Alternative_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:47.142419484 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id02_str:
	.asciz "base:GHC.Base.C:Monad"


==================== Asm code ====================
2018-03-16 15:54:47.143047802 UTC

.section .text
.align 8
.globl GHC.Base.C:Monad_con_entry
.type GHC.Base.C:Monad_con_entry, @object
GHC.Base.C:Monad_con_entry:
_cgI0:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Monad_con_entry, .-GHC.Base.C:Monad_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.143602001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Monad_con_info
.type GHC.Base.C:Monad_con_info, @object
GHC.Base.C:Monad_con_info:
	.quad	GHC.Base.C:Monad_con_entry
	.quad	5
	.quad	1
	.quad	id02_str


==================== Asm code ====================
2018-03-16 15:54:47.145627453 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id04_str:
	.asciz "base:GHC.Base.C:Functor"


==================== Asm code ====================
2018-03-16 15:54:47.146334794 UTC

.section .text
.align 8
.globl GHC.Base.C:Functor_con_entry
.type GHC.Base.C:Functor_con_entry, @object
GHC.Base.C:Functor_con_entry:
_cgI6:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Functor_con_entry, .-GHC.Base.C:Functor_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.147266465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Functor_con_info
.type GHC.Base.C:Functor_con_info, @object
GHC.Base.C:Functor_con_info:
	.quad	GHC.Base.C:Functor_con_entry
	.quad	2
	.quad	4
	.quad	id04_str


==================== Asm code ====================
2018-03-16 15:54:47.149358252 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id06_str:
	.asciz "base:GHC.Base.C:Applicative"


==================== Asm code ====================
2018-03-16 15:54:47.150041737 UTC

.section .text
.align 8
.globl GHC.Base.C:Applicative_con_entry
.type GHC.Base.C:Applicative_con_entry, @object
GHC.Base.C:Applicative_con_entry:
_cgIc:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Applicative_con_entry, .-GHC.Base.C:Applicative_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.150606945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Applicative_con_info
.type GHC.Base.C:Applicative_con_info, @object
GHC.Base.C:Applicative_con_info:
	.quad	GHC.Base.C:Applicative_con_entry
	.quad	6
	.quad	1
	.quad	id06_str


==================== Asm code ====================
2018-03-16 15:54:47.152658463 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id08_str:
	.asciz "base:GHC.Base.C:Semigroup"


==================== Asm code ====================
2018-03-16 15:54:47.153326898 UTC

.section .text
.align 8
.globl GHC.Base.C:Semigroup_con_entry
.type GHC.Base.C:Semigroup_con_entry, @object
GHC.Base.C:Semigroup_con_entry:
_cgIi:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Semigroup_con_entry, .-GHC.Base.C:Semigroup_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.15389319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Semigroup_con_info
.type GHC.Base.C:Semigroup_con_info, @object
GHC.Base.C:Semigroup_con_info:
	.quad	GHC.Base.C:Semigroup_con_entry
	.quad	3
	.quad	1
	.quad	id08_str


==================== Asm code ====================
2018-03-16 15:54:47.155853787 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0a_str:
	.asciz "base:GHC.Base.C:Monoid"


==================== Asm code ====================
2018-03-16 15:54:47.156526756 UTC

.section .text
.align 8
.globl GHC.Base.C:Monoid_con_entry
.type GHC.Base.C:Monoid_con_entry, @object
GHC.Base.C:Monoid_con_entry:
_cgIo:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Monoid_con_entry, .-GHC.Base.C:Monoid_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.157079064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Monoid_con_info
.type GHC.Base.C:Monoid_con_info, @object
GHC.Base.C:Monoid_con_info:
	.quad	GHC.Base.C:Monoid_con_entry
	.quad	4
	.quad	1
	.quad	id0a_str


==================== Asm code ====================
2018-03-16 15:54:47.159164772 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0c_str:
	.asciz "base:GHC.Base.Nothing"


==================== Asm code ====================
2018-03-16 15:54:47.159890586 UTC

.section .text
.align 8
.globl GHC.Base.Nothing_con_entry
.type GHC.Base.Nothing_con_entry, @object
GHC.Base.Nothing_con_entry:
_cgIu:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.Nothing_con_entry, .-GHC.Base.Nothing_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.160885581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.Nothing_con_info
.type GHC.Base.Nothing_con_info, @object
GHC.Base.Nothing_con_info:
	.quad	GHC.Base.Nothing_con_entry
	.quad	4294967296
	.quad	3
	.quad	id0c_str


==================== Asm code ====================
2018-03-16 15:54:47.163059836 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0e_str:
	.asciz "base:GHC.Base.Just"


==================== Asm code ====================
2018-03-16 15:54:47.163772221 UTC

.section .text
.align 8
.globl GHC.Base.Just_con_entry
.type GHC.Base.Just_con_entry, @object
GHC.Base.Just_con_entry:
_cgIA:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.Just_con_entry, .-GHC.Base.Just_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.164369739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.Just_con_info
.type GHC.Base.Just_con_info, @object
GHC.Base.Just_con_info:
	.quad	GHC.Base.Just_con_entry
	.quad	1
	.quad	4294967298
	.quad	id0e_str


==================== Asm code ====================
2018-03-16 15:54:47.16678095 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0g_str:
	.asciz "base:GHC.Base.O"


==================== Asm code ====================
2018-03-16 15:54:47.167388543 UTC

.section .text
.align 8
.globl GHC.Base.O_con_entry
.type GHC.Base.O_con_entry, @object
GHC.Base.O_con_entry:
_cgIG:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.O_con_entry, .-GHC.Base.O_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.167980842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.O_con_info
.type GHC.Base.O_con_info, @object
GHC.Base.O_con_info:
	.quad	GHC.Base.O_con_entry
	.quad	1
	.quad	2
	.quad	id0g_str


==================== Asm code ====================
2018-03-16 15:54:47.170041178 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0i_str:
	.asciz "base:GHC.Base.:|"


==================== Asm code ====================
2018-03-16 15:54:47.170715945 UTC

.section .text
.align 8
.globl GHC.Base.:|_con_entry
.type GHC.Base.:|_con_entry, @object
GHC.Base.:|_con_entry:
_cgIM:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.:|_con_entry, .-GHC.Base.:|_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.171283194 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.:|_con_info
.type GHC.Base.:|_con_info, @object
GHC.Base.:|_con_info:
	.quad	GHC.Base.:|_con_entry
	.quad	2
	.quad	4
	.quad	id0i_str


==================== Asm code ====================
2018-03-16 15:54:47.17387632 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0k_str:
	.asciz "base:GHC.Base.C:MonadPlus"


==================== Asm code ====================
2018-03-16 15:54:47.174551586 UTC

.section .text
.align 8
.globl GHC.Base.C:MonadPlus_con_entry
.type GHC.Base.C:MonadPlus_con_entry, @object
GHC.Base.C:MonadPlus_con_entry:
_cgIS:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:MonadPlus_con_entry, .-GHC.Base.C:MonadPlus_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.175220634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:MonadPlus_con_info
.type GHC.Base.C:MonadPlus_con_info, @object
GHC.Base.C:MonadPlus_con_info:
	.quad	GHC.Base.C:MonadPlus_con_entry
	.quad	4
	.quad	1
	.quad	id0k_str


==================== Asm code ====================
2018-03-16 15:54:47.178020738 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
id0m_str:
	.asciz "base:GHC.Base.C:Alternative"


==================== Asm code ====================
2018-03-16 15:54:47.178761982 UTC

.section .text
.align 8
.globl GHC.Base.C:Alternative_con_entry
.type GHC.Base.C:Alternative_con_entry, @object
GHC.Base.C:Alternative_con_entry:
_cgIY:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Alternative_con_entry, .-GHC.Base.C:Alternative_con_entry


==================== Asm code ====================
2018-03-16 15:54:47.179353645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Alternative_con_info
.type GHC.Base.C:Alternative_con_info, @object
GHC.Base.C:Alternative_con_info:
	.quad	GHC.Base.C:Alternative_con_entry
	.quad	5
	.quad	1
	.quad	id0m_str


==================== Asm code ====================
2018-03-16 15:54:47.18137012 UTC

.section .data.rel.ro
.align 8
.align 1
S8R0_srt:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_closure
	.quad	GHC.Base.$fSemigroupIO_closure
	.quad	Data.Semigroup.Internal.stimesDefault_closure
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	GHC.Base.$fAlternativeIO2_closure
	.quad	GHC.Base.$fAlternativeIO_$cmany_closure
	.quad	GHC.Base.$fSemigroupNonEmpty_closure
	.quad	GHC.Base.$fMonoidIO_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.failIO_closure
	.quad	Data.Semigroup.Internal.stimesMaybe_closure
	.quad	GHC.Base.$fSemigroupMaybe_closure
	.quad	GHC.Base.$fMonoidMaybe_closure
	.quad	Data.Semigroup.Internal.stimesIdempotentMonoid_closure
	.quad	GHC.Base.$fMonoidOrdering_closure
	.quad	Data.Semigroup.Internal.stimesList_closure
	.quad	GHC.Base.$fAlternativeIO3_closure
	.quad	GHC.Base.$fMonad(,)_closure
	.quad	lvl2_r7PL_closure


==================== Asm code ====================
2018-03-16 15:54:56.266781283 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Monad_closure
.type GHC.Base.$p1Monad_closure, @object
GHC.Base.$p1Monad_closure:
	.quad	GHC.Base.$p1Monad_info


==================== Asm code ====================
2018-03-16 15:54:56.267607386 UTC

.section .text
.align 8
.globl GHC.Base.$p1Monad_entry
.type GHC.Base.$p1Monad_entry, @object
GHC.Base.$p1Monad_entry:
_chkY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chkZ
_chl0:
	leaq block_chkV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chkV
_chkW:
	movq (%rbx),%rax
	jmp *(%rax)
_chkZ:
	leaq GHC.Base.$p1Monad_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p1Monad_entry, .-GHC.Base.$p1Monad_entry


==================== Asm code ====================
2018-03-16 15:54:56.268233625 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Monad_info
.type GHC.Base.$p1Monad_info, @object
GHC.Base.$p1Monad_info:
	.quad	GHC.Base.$p1Monad_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.268856965 UTC

.section .text
.align 8
_chkV:
_chkV:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chkV, .-_chkV


==================== Asm code ====================
2018-03-16 15:54:56.269449949 UTC

.section .data.rel.ro
.align 8
.align 1
block_chkV_info:
	.quad	_chkV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.272001104 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.>>=_closure
.type GHC.Base.>>=_closure, @object
GHC.Base.>>=_closure:
	.quad	GHC.Base.>>=_info


==================== Asm code ====================
2018-03-16 15:54:56.272731263 UTC

.section .text
.align 8
.globl GHC.Base.>>=_entry
.type GHC.Base.>>=_entry, @object
GHC.Base.>>=_entry:
_chlo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chlp
_chlq:
	leaq block_chll_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chll
_chlm:
	movq (%rbx),%rax
	jmp *(%rax)
_chlp:
	leaq GHC.Base.>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.>>=_entry, .-GHC.Base.>>=_entry


==================== Asm code ====================
2018-03-16 15:54:56.273422136 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.>>=_info
.type GHC.Base.>>=_info, @object
GHC.Base.>>=_info:
	.quad	GHC.Base.>>=_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.274032325 UTC

.section .text
.align 8
_chll:
_chll:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chll, .-_chll


==================== Asm code ====================
2018-03-16 15:54:56.274581059 UTC

.section .data.rel.ro
.align 8
.align 1
block_chll_info:
	.quad	_chll
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.277193469 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.>>_closure
.type GHC.Base.>>_closure, @object
GHC.Base.>>_closure:
	.quad	GHC.Base.>>_info


==================== Asm code ====================
2018-03-16 15:54:56.277981617 UTC

.section .text
.align 8
.globl GHC.Base.>>_entry
.type GHC.Base.>>_entry, @object
GHC.Base.>>_entry:
_chlM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chlN
_chlO:
	leaq block_chlJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chlJ
_chlK:
	movq (%rbx),%rax
	jmp *(%rax)
_chlN:
	leaq GHC.Base.>>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.>>_entry, .-GHC.Base.>>_entry


==================== Asm code ====================
2018-03-16 15:54:56.278634947 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.>>_info
.type GHC.Base.>>_info, @object
GHC.Base.>>_info:
	.quad	GHC.Base.>>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.27926486 UTC

.section .text
.align 8
_chlJ:
_chlJ:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chlJ, .-_chlJ


==================== Asm code ====================
2018-03-16 15:54:56.279818142 UTC

.section .data.rel.ro
.align 8
.align 1
block_chlJ_info:
	.quad	_chlJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.282440282 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.return_closure
.type GHC.Base.return_closure, @object
GHC.Base.return_closure:
	.quad	GHC.Base.return_info


==================== Asm code ====================
2018-03-16 15:54:56.283198988 UTC

.section .text
.align 8
.globl GHC.Base.return_entry
.type GHC.Base.return_entry, @object
GHC.Base.return_entry:
_chma:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chmb
_chmc:
	leaq block_chm7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chm7
_chm8:
	movq (%rbx),%rax
	jmp *(%rax)
_chmb:
	leaq GHC.Base.return_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.return_entry, .-GHC.Base.return_entry


==================== Asm code ====================
2018-03-16 15:54:56.28382984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.return_info
.type GHC.Base.return_info, @object
GHC.Base.return_info:
	.quad	GHC.Base.return_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.284453604 UTC

.section .text
.align 8
_chm7:
_chm7:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chm7, .-_chm7


==================== Asm code ====================
2018-03-16 15:54:56.28505991 UTC

.section .data.rel.ro
.align 8
.align 1
block_chm7_info:
	.quad	_chm7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.305112507 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.fail_closure
.type GHC.Base.fail_closure, @object
GHC.Base.fail_closure:
	.quad	GHC.Base.fail_info


==================== Asm code ====================
2018-03-16 15:54:56.306045803 UTC

.section .text
.align 8
.globl GHC.Base.fail_entry
.type GHC.Base.fail_entry, @object
GHC.Base.fail_entry:
_chmy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chmz
_chmA:
	leaq block_chmv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chmv
_chmw:
	movq (%rbx),%rax
	jmp *(%rax)
_chmz:
	leaq GHC.Base.fail_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.fail_entry, .-GHC.Base.fail_entry


==================== Asm code ====================
2018-03-16 15:54:56.306737654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.fail_info
.type GHC.Base.fail_info, @object
GHC.Base.fail_info:
	.quad	GHC.Base.fail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.307323576 UTC

.section .text
.align 8
_chmv:
_chmv:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chmv, .-_chmv


==================== Asm code ====================
2018-03-16 15:54:56.307849761 UTC

.section .data.rel.ro
.align 8
.align 1
block_chmv_info:
	.quad	_chmv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.310626826 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.fmap_closure
.type GHC.Base.fmap_closure, @object
GHC.Base.fmap_closure:
	.quad	GHC.Base.fmap_info


==================== Asm code ====================
2018-03-16 15:54:56.311379423 UTC

.section .text
.align 8
.globl GHC.Base.fmap_entry
.type GHC.Base.fmap_entry, @object
GHC.Base.fmap_entry:
_chmW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chmX
_chmY:
	leaq block_chmT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chmT
_chmU:
	movq (%rbx),%rax
	jmp *(%rax)
_chmX:
	leaq GHC.Base.fmap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.fmap_entry, .-GHC.Base.fmap_entry


==================== Asm code ====================
2018-03-16 15:54:56.311994018 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.fmap_info
.type GHC.Base.fmap_info, @object
GHC.Base.fmap_info:
	.quad	GHC.Base.fmap_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.312622045 UTC

.section .text
.align 8
_chmT:
_chmT:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chmT, .-_chmT


==================== Asm code ====================
2018-03-16 15:54:56.313177833 UTC

.section .data.rel.ro
.align 8
.align 1
block_chmT_info:
	.quad	_chmT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.315861062 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<$_closure
.type GHC.Base.<$_closure, @object
GHC.Base.<$_closure:
	.quad	GHC.Base.<$_info


==================== Asm code ====================
2018-03-16 15:54:56.316593167 UTC

.section .text
.align 8
.globl GHC.Base.<$_entry
.type GHC.Base.<$_entry, @object
GHC.Base.<$_entry:
_chnk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chnl
_chnm:
	leaq block_chnh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chnh
_chni:
	movq (%rbx),%rax
	jmp *(%rax)
_chnl:
	leaq GHC.Base.<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<$_entry, .-GHC.Base.<$_entry


==================== Asm code ====================
2018-03-16 15:54:56.317285293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<$_info
.type GHC.Base.<$_info, @object
GHC.Base.<$_info:
	.quad	GHC.Base.<$_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.317922822 UTC

.section .text
.align 8
_chnh:
_chnh:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chnh, .-_chnh


==================== Asm code ====================
2018-03-16 15:54:56.318499871 UTC

.section .data.rel.ro
.align 8
.align 1
block_chnh_info:
	.quad	_chnh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.321327505 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Applicative_closure
.type GHC.Base.$p1Applicative_closure, @object
GHC.Base.$p1Applicative_closure:
	.quad	GHC.Base.$p1Applicative_info


==================== Asm code ====================
2018-03-16 15:54:56.322078822 UTC

.section .text
.align 8
.globl GHC.Base.$p1Applicative_entry
.type GHC.Base.$p1Applicative_entry, @object
GHC.Base.$p1Applicative_entry:
_chnI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chnJ
_chnK:
	leaq block_chnF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chnF
_chnG:
	movq (%rbx),%rax
	jmp *(%rax)
_chnJ:
	leaq GHC.Base.$p1Applicative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p1Applicative_entry, .-GHC.Base.$p1Applicative_entry


==================== Asm code ====================
2018-03-16 15:54:56.322689097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Applicative_info
.type GHC.Base.$p1Applicative_info, @object
GHC.Base.$p1Applicative_info:
	.quad	GHC.Base.$p1Applicative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.323308139 UTC

.section .text
.align 8
_chnF:
_chnF:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chnF, .-_chnF


==================== Asm code ====================
2018-03-16 15:54:56.323858308 UTC

.section .data.rel.ro
.align 8
.align 1
block_chnF_info:
	.quad	_chnF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.326488621 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.pure_closure
.type GHC.Base.pure_closure, @object
GHC.Base.pure_closure:
	.quad	GHC.Base.pure_info


==================== Asm code ====================
2018-03-16 15:54:56.327204019 UTC

.section .text
.align 8
.globl GHC.Base.pure_entry
.type GHC.Base.pure_entry, @object
GHC.Base.pure_entry:
_cho8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cho9
_choa:
	leaq block_cho5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cho5
_cho6:
	movq (%rbx),%rax
	jmp *(%rax)
_cho9:
	leaq GHC.Base.pure_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.pure_entry, .-GHC.Base.pure_entry


==================== Asm code ====================
2018-03-16 15:54:56.327849232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.pure_info
.type GHC.Base.pure_info, @object
GHC.Base.pure_info:
	.quad	GHC.Base.pure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.328466064 UTC

.section .text
.align 8
_cho5:
_cho5:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cho5, .-_cho5


==================== Asm code ====================
2018-03-16 15:54:56.328973076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cho5_info:
	.quad	_cho5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.331673206 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<*>_closure
.type GHC.Base.<*>_closure, @object
GHC.Base.<*>_closure:
	.quad	GHC.Base.<*>_info


==================== Asm code ====================
2018-03-16 15:54:56.332433707 UTC

.section .text
.align 8
.globl GHC.Base.<*>_entry
.type GHC.Base.<*>_entry, @object
GHC.Base.<*>_entry:
_chow:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chox
_choy:
	leaq block_chot_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chot
_chou:
	movq (%rbx),%rax
	jmp *(%rax)
_chox:
	leaq GHC.Base.<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<*>_entry, .-GHC.Base.<*>_entry


==================== Asm code ====================
2018-03-16 15:54:56.333089028 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<*>_info
.type GHC.Base.<*>_info, @object
GHC.Base.<*>_info:
	.quad	GHC.Base.<*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.334190338 UTC

.section .text
.align 8
_chot:
_chot:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chot, .-_chot


==================== Asm code ====================
2018-03-16 15:54:56.334732951 UTC

.section .data.rel.ro
.align 8
.align 1
block_chot_info:
	.quad	_chot
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.337945238 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA2_closure
.type GHC.Base.liftA2_closure, @object
GHC.Base.liftA2_closure:
	.quad	GHC.Base.liftA2_info


==================== Asm code ====================
2018-03-16 15:54:56.33869751 UTC

.section .text
.align 8
.globl GHC.Base.liftA2_entry
.type GHC.Base.liftA2_entry, @object
GHC.Base.liftA2_entry:
_choU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _choV
_choW:
	leaq block_choR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _choR
_choS:
	movq (%rbx),%rax
	jmp *(%rax)
_choV:
	leaq GHC.Base.liftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftA2_entry, .-GHC.Base.liftA2_entry


==================== Asm code ====================
2018-03-16 15:54:56.339333813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA2_info
.type GHC.Base.liftA2_info, @object
GHC.Base.liftA2_info:
	.quad	GHC.Base.liftA2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.339960497 UTC

.section .text
.align 8
_choR:
_choR:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _choR, .-_choR


==================== Asm code ====================
2018-03-16 15:54:56.34051045 UTC

.section .data.rel.ro
.align 8
.align 1
block_choR_info:
	.quad	_choR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.343192139 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.*>_closure
.type GHC.Base.*>_closure, @object
GHC.Base.*>_closure:
	.quad	GHC.Base.*>_info


==================== Asm code ====================
2018-03-16 15:54:56.343974949 UTC

.section .text
.align 8
.globl GHC.Base.*>_entry
.type GHC.Base.*>_entry, @object
GHC.Base.*>_entry:
_chpi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chpj
_chpk:
	leaq block_chpf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chpf
_chpg:
	movq (%rbx),%rax
	jmp *(%rax)
_chpj:
	leaq GHC.Base.*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.*>_entry, .-GHC.Base.*>_entry


==================== Asm code ====================
2018-03-16 15:54:56.344657797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.*>_info
.type GHC.Base.*>_info, @object
GHC.Base.*>_info:
	.quad	GHC.Base.*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.345325423 UTC

.section .text
.align 8
_chpf:
_chpf:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chpf, .-_chpf


==================== Asm code ====================
2018-03-16 15:54:56.345871268 UTC

.section .data.rel.ro
.align 8
.align 1
block_chpf_info:
	.quad	_chpf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.348492986 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<*_closure
.type GHC.Base.<*_closure, @object
GHC.Base.<*_closure:
	.quad	GHC.Base.<*_info


==================== Asm code ====================
2018-03-16 15:54:56.349662833 UTC

.section .text
.align 8
.globl GHC.Base.<*_entry
.type GHC.Base.<*_entry, @object
GHC.Base.<*_entry:
_chpG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chpH
_chpI:
	leaq block_chpD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chpD
_chpE:
	movq (%rbx),%rax
	jmp *(%rax)
_chpH:
	leaq GHC.Base.<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<*_entry, .-GHC.Base.<*_entry


==================== Asm code ====================
2018-03-16 15:54:56.350281907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<*_info
.type GHC.Base.<*_info, @object
GHC.Base.<*_info:
	.quad	GHC.Base.<*_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.350902746 UTC

.section .text
.align 8
_chpD:
_chpD:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chpD, .-_chpD


==================== Asm code ====================
2018-03-16 15:54:56.35144594 UTC

.section .data.rel.ro
.align 8
.align 1
block_chpD_info:
	.quad	_chpD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.354129208 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<>_closure
.type GHC.Base.<>_closure, @object
GHC.Base.<>_closure:
	.quad	GHC.Base.<>_info


==================== Asm code ====================
2018-03-16 15:54:56.354881918 UTC

.section .text
.align 8
.globl GHC.Base.<>_entry
.type GHC.Base.<>_entry, @object
GHC.Base.<>_entry:
_chq4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chq5
_chq6:
	leaq block_chq1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chq1
_chq2:
	movq (%rbx),%rax
	jmp *(%rax)
_chq5:
	leaq GHC.Base.<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<>_entry, .-GHC.Base.<>_entry


==================== Asm code ====================
2018-03-16 15:54:56.355523585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<>_info
.type GHC.Base.<>_info, @object
GHC.Base.<>_info:
	.quad	GHC.Base.<>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.356096251 UTC

.section .text
.align 8
_chq1:
_chq1:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chq1, .-_chq1


==================== Asm code ====================
2018-03-16 15:54:56.356623587 UTC

.section .data.rel.ro
.align 8
.align 1
block_chq1_info:
	.quad	_chq1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.359293179 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.sconcat_closure
.type GHC.Base.sconcat_closure, @object
GHC.Base.sconcat_closure:
	.quad	GHC.Base.sconcat_info


==================== Asm code ====================
2018-03-16 15:54:56.360049099 UTC

.section .text
.align 8
.globl GHC.Base.sconcat_entry
.type GHC.Base.sconcat_entry, @object
GHC.Base.sconcat_entry:
_chqs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chqt
_chqu:
	leaq block_chqp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chqp
_chqq:
	movq (%rbx),%rax
	jmp *(%rax)
_chqt:
	leaq GHC.Base.sconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.sconcat_entry, .-GHC.Base.sconcat_entry


==================== Asm code ====================
2018-03-16 15:54:56.360687865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.sconcat_info
.type GHC.Base.sconcat_info, @object
GHC.Base.sconcat_info:
	.quad	GHC.Base.sconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.36175213 UTC

.section .text
.align 8
_chqp:
_chqp:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chqp, .-_chqp


==================== Asm code ====================
2018-03-16 15:54:56.362293246 UTC

.section .data.rel.ro
.align 8
.align 1
block_chqp_info:
	.quad	_chqp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.364900908 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.stimes_closure
.type GHC.Base.stimes_closure, @object
GHC.Base.stimes_closure:
	.quad	GHC.Base.stimes_info


==================== Asm code ====================
2018-03-16 15:54:56.365698518 UTC

.section .text
.align 8
.globl GHC.Base.stimes_entry
.type GHC.Base.stimes_entry, @object
GHC.Base.stimes_entry:
_chqQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chqR
_chqS:
	leaq block_chqN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chqN
_chqO:
	movq (%rbx),%rax
	jmp *(%rax)
_chqR:
	leaq GHC.Base.stimes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.stimes_entry, .-GHC.Base.stimes_entry


==================== Asm code ====================
2018-03-16 15:54:56.366372577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.stimes_info
.type GHC.Base.stimes_info, @object
GHC.Base.stimes_info:
	.quad	GHC.Base.stimes_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.367010656 UTC

.section .text
.align 8
_chqN:
_chqN:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chqN, .-_chqN


==================== Asm code ====================
2018-03-16 15:54:56.367572141 UTC

.section .data.rel.ro
.align 8
.align 1
block_chqN_info:
	.quad	_chqN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.370684936 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Monoid_closure
.type GHC.Base.$p1Monoid_closure, @object
GHC.Base.$p1Monoid_closure:
	.quad	GHC.Base.$p1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:56.371441521 UTC

.section .text
.align 8
.globl GHC.Base.$p1Monoid_entry
.type GHC.Base.$p1Monoid_entry, @object
GHC.Base.$p1Monoid_entry:
_chre:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chrf
_chrg:
	leaq block_chrb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chrb
_chrc:
	movq (%rbx),%rax
	jmp *(%rax)
_chrf:
	leaq GHC.Base.$p1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p1Monoid_entry, .-GHC.Base.$p1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:56.372082089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Monoid_info
.type GHC.Base.$p1Monoid_info, @object
GHC.Base.$p1Monoid_info:
	.quad	GHC.Base.$p1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.372734508 UTC

.section .text
.align 8
_chrb:
_chrb:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chrb, .-_chrb


==================== Asm code ====================
2018-03-16 15:54:56.373671407 UTC

.section .data.rel.ro
.align 8
.align 1
block_chrb_info:
	.quad	_chrb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.376355222 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mempty_closure
.type GHC.Base.mempty_closure, @object
GHC.Base.mempty_closure:
	.quad	GHC.Base.mempty_info


==================== Asm code ====================
2018-03-16 15:54:56.377131081 UTC

.section .text
.align 8
.globl GHC.Base.mempty_entry
.type GHC.Base.mempty_entry, @object
GHC.Base.mempty_entry:
_chrE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chrF
_chrG:
	leaq block_chrB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chrB
_chrC:
	movq (%rbx),%rax
	jmp *(%rax)
_chrF:
	leaq GHC.Base.mempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mempty_entry, .-GHC.Base.mempty_entry


==================== Asm code ====================
2018-03-16 15:54:56.377812876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mempty_info
.type GHC.Base.mempty_info, @object
GHC.Base.mempty_info:
	.quad	GHC.Base.mempty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.378414944 UTC

.section .text
.align 8
_chrB:
_chrB:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chrB, .-_chrB


==================== Asm code ====================
2018-03-16 15:54:56.378959504 UTC

.section .data.rel.ro
.align 8
.align 1
block_chrB_info:
	.quad	_chrB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.381732204 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mappend_closure
.type GHC.Base.mappend_closure, @object
GHC.Base.mappend_closure:
	.quad	GHC.Base.mappend_info


==================== Asm code ====================
2018-03-16 15:54:56.382528624 UTC

.section .text
.align 8
.globl GHC.Base.mappend_entry
.type GHC.Base.mappend_entry, @object
GHC.Base.mappend_entry:
_chs2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chs3
_chs4:
	leaq block_chrZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chrZ
_chs0:
	movq (%rbx),%rax
	jmp *(%rax)
_chs3:
	leaq GHC.Base.mappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mappend_entry, .-GHC.Base.mappend_entry


==================== Asm code ====================
2018-03-16 15:54:56.383178472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mappend_info
.type GHC.Base.mappend_info, @object
GHC.Base.mappend_info:
	.quad	GHC.Base.mappend_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.383812332 UTC

.section .text
.align 8
_chrZ:
_chrZ:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chrZ, .-_chrZ


==================== Asm code ====================
2018-03-16 15:54:56.384417846 UTC

.section .data.rel.ro
.align 8
.align 1
block_chrZ_info:
	.quad	_chrZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.387022631 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mconcat_closure
.type GHC.Base.mconcat_closure, @object
GHC.Base.mconcat_closure:
	.quad	GHC.Base.mconcat_info


==================== Asm code ====================
2018-03-16 15:54:56.387805696 UTC

.section .text
.align 8
.globl GHC.Base.mconcat_entry
.type GHC.Base.mconcat_entry, @object
GHC.Base.mconcat_entry:
_chsq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chsr
_chss:
	leaq block_chsn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chsn
_chso:
	movq (%rbx),%rax
	jmp *(%rax)
_chsr:
	leaq GHC.Base.mconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mconcat_entry, .-GHC.Base.mconcat_entry


==================== Asm code ====================
2018-03-16 15:54:56.388433732 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mconcat_info
.type GHC.Base.mconcat_info, @object
GHC.Base.mconcat_info:
	.quad	GHC.Base.mconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.38903452 UTC

.section .text
.align 8
_chsn:
_chsn:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chsn, .-_chsn


==================== Asm code ====================
2018-03-16 15:54:56.389636413 UTC

.section .data.rel.ro
.align 8
.align 1
block_chsn_info:
	.quad	_chsn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.39235771 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1MonadPlus_closure
.type GHC.Base.$p1MonadPlus_closure, @object
GHC.Base.$p1MonadPlus_closure:
	.quad	GHC.Base.$p1MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:56.393150323 UTC

.section .text
.align 8
.globl GHC.Base.$p1MonadPlus_entry
.type GHC.Base.$p1MonadPlus_entry, @object
GHC.Base.$p1MonadPlus_entry:
_chsO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chsP
_chsQ:
	leaq block_chsL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chsL
_chsM:
	movq (%rbx),%rax
	jmp *(%rax)
_chsP:
	leaq GHC.Base.$p1MonadPlus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p1MonadPlus_entry, .-GHC.Base.$p1MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:56.394172359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1MonadPlus_info
.type GHC.Base.$p1MonadPlus_info, @object
GHC.Base.$p1MonadPlus_info:
	.quad	GHC.Base.$p1MonadPlus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.394832757 UTC

.section .text
.align 8
_chsL:
_chsL:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chsL, .-_chsL


==================== Asm code ====================
2018-03-16 15:54:56.395390031 UTC

.section .data.rel.ro
.align 8
.align 1
block_chsL_info:
	.quad	_chsL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.398134497 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p2MonadPlus_closure
.type GHC.Base.$p2MonadPlus_closure, @object
GHC.Base.$p2MonadPlus_closure:
	.quad	GHC.Base.$p2MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:56.398895232 UTC

.section .text
.align 8
.globl GHC.Base.$p2MonadPlus_entry
.type GHC.Base.$p2MonadPlus_entry, @object
GHC.Base.$p2MonadPlus_entry:
_chte:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chtf
_chtg:
	leaq block_chtb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chtb
_chtc:
	movq (%rbx),%rax
	jmp *(%rax)
_chtf:
	leaq GHC.Base.$p2MonadPlus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p2MonadPlus_entry, .-GHC.Base.$p2MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:56.399511416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p2MonadPlus_info
.type GHC.Base.$p2MonadPlus_info, @object
GHC.Base.$p2MonadPlus_info:
	.quad	GHC.Base.$p2MonadPlus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.400092266 UTC

.section .text
.align 8
_chtb:
_chtb:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chtb, .-_chtb


==================== Asm code ====================
2018-03-16 15:54:56.400628792 UTC

.section .data.rel.ro
.align 8
.align 1
block_chtb_info:
	.quad	_chtb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.403321166 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mzero_closure
.type GHC.Base.mzero_closure, @object
GHC.Base.mzero_closure:
	.quad	GHC.Base.mzero_info


==================== Asm code ====================
2018-03-16 15:54:56.404584803 UTC

.section .text
.align 8
.globl GHC.Base.mzero_entry
.type GHC.Base.mzero_entry, @object
GHC.Base.mzero_entry:
_chtE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chtF
_chtG:
	leaq block_chtB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chtB
_chtC:
	movq (%rbx),%rax
	jmp *(%rax)
_chtF:
	leaq GHC.Base.mzero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mzero_entry, .-GHC.Base.mzero_entry


==================== Asm code ====================
2018-03-16 15:54:56.405209047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mzero_info
.type GHC.Base.mzero_info, @object
GHC.Base.mzero_info:
	.quad	GHC.Base.mzero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.405913907 UTC

.section .text
.align 8
_chtB:
_chtB:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chtB, .-_chtB


==================== Asm code ====================
2018-03-16 15:54:56.406494627 UTC

.section .data.rel.ro
.align 8
.align 1
block_chtB_info:
	.quad	_chtB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.409124314 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mplus_closure
.type GHC.Base.mplus_closure, @object
GHC.Base.mplus_closure:
	.quad	GHC.Base.mplus_info


==================== Asm code ====================
2018-03-16 15:54:56.410454281 UTC

.section .text
.align 8
.globl GHC.Base.mplus_entry
.type GHC.Base.mplus_entry, @object
GHC.Base.mplus_entry:
_chu2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chu3
_chu4:
	leaq block_chtZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chtZ
_chu0:
	movq (%rbx),%rax
	jmp *(%rax)
_chu3:
	leaq GHC.Base.mplus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mplus_entry, .-GHC.Base.mplus_entry


==================== Asm code ====================
2018-03-16 15:54:56.411089563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mplus_info
.type GHC.Base.mplus_info, @object
GHC.Base.mplus_info:
	.quad	GHC.Base.mplus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.411725185 UTC

.section .text
.align 8
_chtZ:
_chtZ:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chtZ, .-_chtZ


==================== Asm code ====================
2018-03-16 15:54:56.412290995 UTC

.section .data.rel.ro
.align 8
.align 1
block_chtZ_info:
	.quad	_chtZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.415085616 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$p1Alternative_closure
.type GHC.Base.$p1Alternative_closure, @object
GHC.Base.$p1Alternative_closure:
	.quad	GHC.Base.$p1Alternative_info


==================== Asm code ====================
2018-03-16 15:54:56.415826769 UTC

.section .text
.align 8
.globl GHC.Base.$p1Alternative_entry
.type GHC.Base.$p1Alternative_entry, @object
GHC.Base.$p1Alternative_entry:
_chuq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chur
_chus:
	leaq block_chun_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chun
_chuo:
	movq (%rbx),%rax
	jmp *(%rax)
_chur:
	leaq GHC.Base.$p1Alternative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$p1Alternative_entry, .-GHC.Base.$p1Alternative_entry


==================== Asm code ====================
2018-03-16 15:54:56.41650297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$p1Alternative_info
.type GHC.Base.$p1Alternative_info, @object
GHC.Base.$p1Alternative_info:
	.quad	GHC.Base.$p1Alternative_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.417109622 UTC

.section .text
.align 8
_chun:
_chun:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chun, .-_chun


==================== Asm code ====================
2018-03-16 15:54:56.417739789 UTC

.section .data.rel.ro
.align 8
.align 1
block_chun_info:
	.quad	_chun
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.42043103 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.empty_closure
.type GHC.Base.empty_closure, @object
GHC.Base.empty_closure:
	.quad	GHC.Base.empty_info


==================== Asm code ====================
2018-03-16 15:54:56.421197419 UTC

.section .text
.align 8
.globl GHC.Base.empty_entry
.type GHC.Base.empty_entry, @object
GHC.Base.empty_entry:
_chuQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chuR
_chuS:
	leaq block_chuN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chuN
_chuO:
	movq (%rbx),%rax
	jmp *(%rax)
_chuR:
	leaq GHC.Base.empty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.empty_entry, .-GHC.Base.empty_entry


==================== Asm code ====================
2018-03-16 15:54:56.422313917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.empty_info
.type GHC.Base.empty_info, @object
GHC.Base.empty_info:
	.quad	GHC.Base.empty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.42295415 UTC

.section .text
.align 8
_chuN:
_chuN:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chuN, .-_chuN


==================== Asm code ====================
2018-03-16 15:54:56.423493946 UTC

.section .data.rel.ro
.align 8
.align 1
block_chuN_info:
	.quad	_chuN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.426200505 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<|>_closure
.type GHC.Base.<|>_closure, @object
GHC.Base.<|>_closure:
	.quad	GHC.Base.<|>_info


==================== Asm code ====================
2018-03-16 15:54:56.426975562 UTC

.section .text
.align 8
.globl GHC.Base.<|>_entry
.type GHC.Base.<|>_entry, @object
GHC.Base.<|>_entry:
_chve:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chvf
_chvg:
	leaq block_chvb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chvb
_chvc:
	movq (%rbx),%rax
	jmp *(%rax)
_chvf:
	leaq GHC.Base.<|>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<|>_entry, .-GHC.Base.<|>_entry


==================== Asm code ====================
2018-03-16 15:54:56.427652459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<|>_info
.type GHC.Base.<|>_info, @object
GHC.Base.<|>_info:
	.quad	GHC.Base.<|>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.428292871 UTC

.section .text
.align 8
_chvb:
_chvb:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chvb, .-_chvb


==================== Asm code ====================
2018-03-16 15:54:56.42887381 UTC

.section .data.rel.ro
.align 8
.align 1
block_chvb_info:
	.quad	_chvb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.431513521 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.some_closure
.type GHC.Base.some_closure, @object
GHC.Base.some_closure:
	.quad	GHC.Base.some_info


==================== Asm code ====================
2018-03-16 15:54:56.432288779 UTC

.section .text
.align 8
.globl GHC.Base.some_entry
.type GHC.Base.some_entry, @object
GHC.Base.some_entry:
_chvC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chvD
_chvE:
	leaq block_chvz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chvz
_chvA:
	movq (%rbx),%rax
	jmp *(%rax)
_chvD:
	leaq GHC.Base.some_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.some_entry, .-GHC.Base.some_entry


==================== Asm code ====================
2018-03-16 15:54:56.432960854 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.some_info
.type GHC.Base.some_info, @object
GHC.Base.some_info:
	.quad	GHC.Base.some_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.433662243 UTC

.section .text
.align 8
_chvz:
_chvz:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chvz, .-_chvz


==================== Asm code ====================
2018-03-16 15:54:56.434227132 UTC

.section .data.rel.ro
.align 8
.align 1
block_chvz_info:
	.quad	_chvz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.436975507 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.many_closure
.type GHC.Base.many_closure, @object
GHC.Base.many_closure:
	.quad	GHC.Base.many_info


==================== Asm code ====================
2018-03-16 15:54:56.438189275 UTC

.section .text
.align 8
.globl GHC.Base.many_entry
.type GHC.Base.many_entry, @object
GHC.Base.many_entry:
_chw0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chw1
_chw2:
	leaq block_chvX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _chvX
_chvY:
	movq (%rbx),%rax
	jmp *(%rax)
_chw1:
	leaq GHC.Base.many_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.many_entry, .-GHC.Base.many_entry


==================== Asm code ====================
2018-03-16 15:54:56.438841206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.many_info
.type GHC.Base.many_info, @object
GHC.Base.many_info:
	.quad	GHC.Base.many_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.439465754 UTC

.section .text
.align 8
_chvX:
_chvX:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _chvX, .-_chvX


==================== Asm code ====================
2018-03-16 15:54:56.440032224 UTC

.section .data.rel.ro
.align 8
.align 1
block_chvX_info:
	.quad	_chvX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.446320845 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.eqString_closure
.type GHC.Base.eqString_closure, @object
GHC.Base.eqString_closure:
	.quad	GHC.Base.eqString_info


==================== Asm code ====================
2018-03-16 15:54:56.447084999 UTC

.section .text
.align 8
.globl GHC.Base.eqString_entry
.type GHC.Base.eqString_entry, @object
GHC.Base.eqString_entry:
_chws:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _chwt
_uhxi:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _chwi
_chwt:
	leaq GHC.Base.eqString_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.eqString_entry, .-GHC.Base.eqString_entry


==================== Asm code ====================
2018-03-16 15:54:56.447748096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.eqString_info
.type GHC.Base.eqString_info, @object
GHC.Base.eqString_info:
	.quad	GHC.Base.eqString_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.448423294 UTC

.section .text
.align 8
_chwi:
_chwi:
	movq (%rbp),%rax
	leaq block_chwl_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _chwl
_chwm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chwi, .-_chwi


==================== Asm code ====================
2018-03-16 15:54:56.449301731 UTC

.section .text
.align 8
_chwl:
_chwl:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _chwp
_chwq:
	leaq block_chwM_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _chwM
_chwO:
	movq (%rbx),%rax
	jmp *(%rax)
_chwp:
	leaq block_chwx_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _chwx
_chwz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chwl, .-_chwl


==================== Asm code ====================
2018-03-16 15:54:56.449985944 UTC

.section .data.rel.ro
.align 8
.align 1
block_chwl_info:
	.quad	_chwl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.45065485 UTC

.section .text
.align 8
_chwx:
_chwx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _chwF
_uhxm:
	addq $8,%rbp
	jmp _chxe
_chwF:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chwx, .-_chwx


==================== Asm code ====================
2018-03-16 15:54:56.451260044 UTC

.section .data.rel.ro
.align 8
.align 1
block_chwx_info:
	.quad	_chwx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.451986441 UTC

.section .text
.align 8
_chwM:
_chwM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhxj
_chx4:
	leaq block_chwX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _chwX
_chwY:
	movq (%rbx),%rax
	jmp *(%rax)
_uhxj:
	addq $24,%rbp
	jmp _chxe
	.size _chwM, .-_chwM


==================== Asm code ====================
2018-03-16 15:54:56.452635358 UTC

.section .data.rel.ro
.align 8
.align 1
block_chwM_info:
	.quad	_chwM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.453363063 UTC

.section .text
.align 8
_chwX:
_chwX:
	leaq block_chx2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _chx2
_chx6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chwX, .-_chwX


==================== Asm code ====================
2018-03-16 15:54:56.45393378 UTC

.section .data.rel.ro
.align 8
.align 1
block_chwX_info:
	.quad	_chwX
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.454617018 UTC

.section .text
.align 8
_chx2:
_chx2:
	movq 24(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _chxf
_uhxk:
	addq $32,%rbp
	jmp _chxe
_chxf:
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _chwi
	.size _chx2, .-_chx2


==================== Asm code ====================
2018-03-16 15:54:56.455161684 UTC

.section .data.rel.ro
.align 8
.align 1
block_chx2_info:
	.quad	_chx2
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.455758399 UTC

.section .text
.align 8
_chxe:
_chxe:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chxe, .-_chxe


==================== Asm code ====================
2018-03-16 15:54:56.459172165 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when2_closure
.type GHC.Base.when2_closure, @object
GHC.Base.when2_closure:
	.quad	GHC.Base.when2_info


==================== Asm code ====================
2018-03-16 15:54:56.459943604 UTC

.section .text
.align 8
.globl GHC.Base.when2_entry
.type GHC.Base.when2_entry, @object
GHC.Base.when2_entry:
_chyt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chyu
_chyv:
	leaq block_chym_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chym
_chyn:
	movq (%rbx),%rax
	jmp *(%rax)
_chyu:
	leaq GHC.Base.when2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.when2_entry, .-GHC.Base.when2_entry


==================== Asm code ====================
2018-03-16 15:54:56.46062827 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when2_info
.type GHC.Base.when2_info, @object
GHC.Base.when2_info:
	.quad	GHC.Base.when2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.461365771 UTC

.section .text
.align 8
_chym:
_chym:
	andl $7,%ebx
	cmpq $1,%rbx
	je _chyq
_chyr:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chyq:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chym, .-_chym


==================== Asm code ====================
2018-03-16 15:54:56.461982372 UTC

.section .data.rel.ro
.align 8
.align 1
block_chym_info:
	.quad	_chym
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.464064829 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_$swhen1_closure
.type GHC.Base.when_$swhen1_closure, @object
GHC.Base.when_$swhen1_closure:
	.quad	GHC.Base.when_$swhen1_info


==================== Asm code ====================
2018-03-16 15:54:56.464658276 UTC

.section .text
.align 8
.globl GHC.Base.when_$swhen1_entry
.type GHC.Base.when_$swhen1_entry, @object
GHC.Base.when_$swhen1_entry:
_chyV:
	jmp GHC.Base.when2_entry
	.size GHC.Base.when_$swhen1_entry, .-GHC.Base.when_$swhen1_entry


==================== Asm code ====================
2018-03-16 15:54:56.465196343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_$swhen1_info
.type GHC.Base.when_$swhen1_info, @object
GHC.Base.when_$swhen1_info:
	.quad	GHC.Base.when_$swhen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.468084392 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO2_closure
.type GHC.Base.$fFunctorIO2_closure, @object
GHC.Base.$fFunctorIO2_closure:
	.quad	GHC.Base.$fFunctorIO2_info


==================== Asm code ====================
2018-03-16 15:54:56.468846729 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorIO2_entry
.type GHC.Base.$fFunctorIO2_entry, @object
GHC.Base.$fFunctorIO2_entry:
_chz9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chza
_chzb:
	leaq block_chz6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chza:
	leaq GHC.Base.$fFunctorIO2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorIO2_entry, .-GHC.Base.$fFunctorIO2_entry


==================== Asm code ====================
2018-03-16 15:54:56.469562299 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorIO2_info
.type GHC.Base.$fFunctorIO2_info, @object
GHC.Base.$fFunctorIO2_info:
	.quad	GHC.Base.$fFunctorIO2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.470254934 UTC

.section .text
.align 8
_chz6:
_chz6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chze
_chzd:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chze:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chz6, .-_chz6


==================== Asm code ====================
2018-03-16 15:54:56.470839967 UTC

.section .data.rel.ro
.align 8
.align 1
block_chz6_info:
	.quad	_chz6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.473541722 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO1_closure
.type GHC.Base.$fFunctorIO1_closure, @object
GHC.Base.$fFunctorIO1_closure:
	.quad	GHC.Base.$fFunctorIO1_info


==================== Asm code ====================
2018-03-16 15:54:56.4747109 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorIO1_entry
.type GHC.Base.$fFunctorIO1_entry, @object
GHC.Base.$fFunctorIO1_entry:
_chzx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chzy
_chzz:
	leaq block_chzv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chzy:
	leaq GHC.Base.$fFunctorIO1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorIO1_entry, .-GHC.Base.$fFunctorIO1_entry


==================== Asm code ====================
2018-03-16 15:54:56.47533933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorIO1_info
.type GHC.Base.$fFunctorIO1_info, @object
GHC.Base.$fFunctorIO1_info:
	.quad	GHC.Base.$fFunctorIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.475984686 UTC

.section .text
.align 8
_chzv:
_chzv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chzv, .-_chzv


==================== Asm code ====================
2018-03-16 15:54:56.476548288 UTC

.section .data.rel.ro
.align 8
.align 1
block_chzv_info:
	.quad	_chzv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.478251923 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorIO_closure
.type GHC.Base.$fFunctorIO_closure, @object
GHC.Base.$fFunctorIO_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctorIO2_closure+3
	.quad	GHC.Base.$fFunctorIO1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.479842972 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe1_closure
.type GHC.Base.$fAlternativeMaybe1_closure, @object
GHC.Base.$fAlternativeMaybe1_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.484958413 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$cmany_closure
.type GHC.Base.$fAlternativeMaybe_$cmany_closure, @object
GHC.Base.$fAlternativeMaybe_$cmany_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_info


==================== Asm code ====================
2018-03-16 15:54:56.485852737 UTC

.section .text
.align 8
many_v_sgMG_entry:
_chA2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _chA3
_chA4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_chzV_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _chzV
_chzW:
	movq (%rbx),%rax
	jmp *(%rax)
_chA3:
	jmp *-16(%r13)
	.size many_v_sgMG_entry, .-many_v_sgMG_entry


==================== Asm code ====================
2018-03-16 15:54:56.486494535 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_sgMG_info:
	.quad	many_v_sgMG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:56.487207978 UTC

.section .text
.align 8
_chzV:
_chzV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhAs
_chA0:
	leaq block_chAa_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chAa
_chAc:
	movq (%rbx),%rax
	jmp *(%rax)
_uhAs:
	addq $16,%rbp
	jmp _chAi
	.size _chzV, .-_chzV


==================== Asm code ====================
2018-03-16 15:54:56.48778932 UTC

.section .data.rel.ro
.align 8
.align 1
block_chzV_info:
	.quad	_chzV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.4885237 UTC

.section .text
.align 8
_chAa:
_chAa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhAt
_chAn:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chAq
_chAp:
	movq 6(%rbx),%rax
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhAt:
	addq $16,%rbp
	jmp _chAi
_chAq:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chAa, .-_chAa


==================== Asm code ====================
2018-03-16 15:54:56.489168894 UTC

.section .data.rel.ro
.align 8
.align 1
block_chAa_info:
	.quad	_chAa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.48981863 UTC

.section .text
.align 8
_chAi:
_chAi:
	leaq GHC.Base.$fAlternativeMaybe1_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chAi, .-_chAi


==================== Asm code ====================
2018-03-16 15:54:56.490548764 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$cmany_entry
.type GHC.Base.$fAlternativeMaybe_$cmany_entry, @object
GHC.Base.$fAlternativeMaybe_$cmany_entry:
_chAy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _chAC
_chAB:
	leaq many_v_sgMG_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_chAC:
	movq $24,904(%r13)
	leaq GHC.Base.$fAlternativeMaybe_$cmany_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$cmany_entry, .-GHC.Base.$fAlternativeMaybe_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:56.491205758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$cmany_info
.type GHC.Base.$fAlternativeMaybe_$cmany_info, @object
GHC.Base.$fAlternativeMaybe_$cmany_info:
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.496124403 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$csome_closure
.type GHC.Base.$fAlternativeMaybe_$csome_closure, @object
GHC.Base.$fAlternativeMaybe_$csome_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$csome_info


==================== Asm code ====================
2018-03-16 15:54:56.496892526 UTC

.section .text
.align 8
some_v_sgMN_entry:
_chBq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _chBr
_chBs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_chBj_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _chBj
_chBk:
	movq (%rbx),%rax
	jmp *(%rax)
_chBr:
	jmp *-16(%r13)
	.size some_v_sgMN_entry, .-some_v_sgMN_entry


==================== Asm code ====================
2018-03-16 15:54:56.497979545 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_sgMN_info:
	.quad	some_v_sgMN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:56.498737251 UTC

.section .text
.align 8
_chBj:
_chBj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _chBn
_chBo:
	leaq block_chBy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chBy
_chBA:
	movq (%rbx),%rax
	jmp *(%rax)
_chBn:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chBj, .-_chBj


==================== Asm code ====================
2018-03-16 15:54:56.499332119 UTC

.section .data.rel.ro
.align 8
.align 1
block_chBj_info:
	.quad	_chBj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.500135956 UTC

.section .text
.align 8
_chBy:
_chBy:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _chBH
_chBP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chBS
_chBR:
	movq 6(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chBS:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_chBH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chBS
_chBJ:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chBy, .-_chBy


==================== Asm code ====================
2018-03-16 15:54:56.500894647 UTC

.section .data.rel.ro
.align 8
.align 1
block_chBy_info:
	.quad	_chBy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.501650447 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$csome_entry
.type GHC.Base.$fAlternativeMaybe_$csome_entry, @object
GHC.Base.$fAlternativeMaybe_$csome_entry:
_chBW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _chC0
_chBZ:
	leaq some_v_sgMN_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_chC0:
	movq $24,904(%r13)
	leaq GHC.Base.$fAlternativeMaybe_$csome_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$csome_entry, .-GHC.Base.$fAlternativeMaybe_$csome_entry


==================== Asm code ====================
2018-03-16 15:54:56.502352318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$csome_info
.type GHC.Base.$fAlternativeMaybe_$csome_info, @object
GHC.Base.$fAlternativeMaybe_$csome_info:
	.quad	GHC.Base.$fAlternativeMaybe_$csome_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.50648909 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_$sap_closure
.type GHC.Base.ap_$sap_closure, @object
GHC.Base.ap_$sap_closure:
	.quad	GHC.Base.ap_$sap_info


==================== Asm code ====================
2018-03-16 15:54:56.507277571 UTC

.section .text
.align 8
.globl GHC.Base.ap_$sap_entry
.type GHC.Base.ap_$sap_entry, @object
GHC.Base.ap_$sap_entry:
_chCN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chCO
_chCP:
	leaq block_chCG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chCG
_chCH:
	movq (%rbx),%rax
	jmp *(%rax)
_chCO:
	leaq GHC.Base.ap_$sap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.ap_$sap_entry, .-GHC.Base.ap_$sap_entry


==================== Asm code ====================
2018-03-16 15:54:56.507943284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_$sap_info
.type GHC.Base.ap_$sap_info, @object
GHC.Base.ap_$sap_info:
	.quad	GHC.Base.ap_$sap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.50865181 UTC

.section .text
.align 8
_chCG:
_chCG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhDd
_chCL:
	leaq block_chCV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chCV
_chCX:
	movq (%rbx),%rax
	jmp *(%rax)
_uhDd:
	addq $16,%rbp
	jmp _chD3
	.size _chCG, .-_chCG


==================== Asm code ====================
2018-03-16 15:54:56.509441157 UTC

.section .data.rel.ro
.align 8
.align 1
block_chCG_info:
	.quad	_chCG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.510242543 UTC

.section .text
.align 8
_chCV:
_chCV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhDe
_chD8:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _chDb
_chDa:
	movq 6(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhDe:
	addq $16,%rbp
	jmp _chD3
_chDb:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chCV, .-_chCV


==================== Asm code ====================
2018-03-16 15:54:56.510951796 UTC

.section .data.rel.ro
.align 8
.align 1
block_chCV_info:
	.quad	_chCV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.511546789 UTC

.section .text
.align 8
_chD3:
_chD3:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chD3, .-_chD3


==================== Asm code ====================
2018-03-16 15:54:56.518564165 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM5_closure
.type GHC.Base.liftM5_$sliftM5_closure, @object
GHC.Base.liftM5_$sliftM5_closure:
	.quad	GHC.Base.liftM5_$sliftM5_info


==================== Asm code ====================
2018-03-16 15:54:56.519436307 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_$sliftM5_entry
.type GHC.Base.liftM5_$sliftM5_entry, @object
GHC.Base.liftM5_$sliftM5_entry:
_chDV:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _chDW
_chDX:
	leaq block_chDO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _chDO
_chDP:
	movq (%rbx),%rax
	jmp *(%rax)
_chDW:
	leaq GHC.Base.liftM5_$sliftM5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM5_$sliftM5_entry, .-GHC.Base.liftM5_$sliftM5_entry


==================== Asm code ====================
2018-03-16 15:54:56.520082058 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM5_info
.type GHC.Base.liftM5_$sliftM5_info, @object
GHC.Base.liftM5_$sliftM5_info:
	.quad	GHC.Base.liftM5_$sliftM5_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:56.520872483 UTC

.section .text
.align 8
_chDO:
_chDO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhEY
_chDT:
	leaq block_chE3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _chE3
_chE5:
	movq (%rbx),%rax
	jmp *(%rax)
_uhEY:
	addq $48,%rbp
	jmp _chEL
	.size _chDO, .-_chDO


==================== Asm code ====================
2018-03-16 15:54:56.521561049 UTC

.section .data.rel.ro
.align 8
.align 1
block_chDO_info:
	.quad	_chDO
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.522260892 UTC

.section .text
.align 8
_chE3:
_chE3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhEZ
_chEg:
	leaq block_chEe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _chEe
_chEh:
	movq (%rbx),%rax
	jmp *(%rax)
_uhEZ:
	addq $48,%rbp
	jmp _chEL
	.size _chE3, .-_chE3


==================== Asm code ====================
2018-03-16 15:54:56.522882168 UTC

.section .data.rel.ro
.align 8
.align 1
block_chE3_info:
	.quad	_chE3
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.523599347 UTC

.section .text
.align 8
_chEe:
_chEe:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhF0
_chEs:
	leaq block_chEq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _chEq
_chEt:
	movq (%rbx),%rax
	jmp *(%rax)
_uhF0:
	addq $48,%rbp
	jmp _chEL
	.size _chEe, .-_chEe


==================== Asm code ====================
2018-03-16 15:54:56.52424822 UTC

.section .data.rel.ro
.align 8
.align 1
block_chEe_info:
	.quad	_chEe
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.52497909 UTC

.section .text
.align 8
_chEq:
_chEq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhF1
_chEE:
	leaq block_chEC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _chEC
_chEF:
	movq (%rbx),%rax
	jmp *(%rax)
_uhF1:
	addq $48,%rbp
	jmp _chEL
	.size _chEq, .-_chEq


==================== Asm code ====================
2018-03-16 15:54:56.525672799 UTC

.section .data.rel.ro
.align 8
.align 1
block_chEq_info:
	.quad	_chEq
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.526495729 UTC

.section .text
.align 8
_chEC:
_chEC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhF2
_chEQ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _chET
_chES:
	movq 6(%rbx),%rax
	movq stg_ap_6_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-72(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhF2:
	addq $48,%rbp
	jmp _chEL
_chET:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chEC, .-_chEC


==================== Asm code ====================
2018-03-16 15:54:56.527212053 UTC

.section .data.rel.ro
.align 8
.align 1
block_chEC_info:
	.quad	_chEC
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.527829268 UTC

.section .text
.align 8
_chEL:
_chEL:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chEL, .-_chEL


==================== Asm code ====================
2018-03-16 15:54:56.533573363 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM4_closure
.type GHC.Base.liftM4_$sliftM4_closure, @object
GHC.Base.liftM4_$sliftM4_closure:
	.quad	GHC.Base.liftM4_$sliftM4_info


==================== Asm code ====================
2018-03-16 15:54:56.534427963 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_$sliftM4_entry
.type GHC.Base.liftM4_$sliftM4_entry, @object
GHC.Base.liftM4_$sliftM4_entry:
_chGe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _chGf
_chGg:
	leaq block_chG7_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _chG7
_chG8:
	movq (%rbx),%rax
	jmp *(%rax)
_chGf:
	leaq GHC.Base.liftM4_$sliftM4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM4_$sliftM4_entry, .-GHC.Base.liftM4_$sliftM4_entry


==================== Asm code ====================
2018-03-16 15:54:56.535072879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM4_info
.type GHC.Base.liftM4_$sliftM4_info, @object
GHC.Base.liftM4_$sliftM4_info:
	.quad	GHC.Base.liftM4_$sliftM4_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:56.535829608 UTC

.section .text
.align 8
_chG7:
_chG7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhH4
_chGc:
	leaq block_chGm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _chGm
_chGo:
	movq (%rbx),%rax
	jmp *(%rax)
_uhH4:
	addq $40,%rbp
	jmp _chGS
	.size _chG7, .-_chG7


==================== Asm code ====================
2018-03-16 15:54:56.536462949 UTC

.section .data.rel.ro
.align 8
.align 1
block_chG7_info:
	.quad	_chG7
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.537178803 UTC

.section .text
.align 8
_chGm:
_chGm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhH5
_chGz:
	leaq block_chGx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _chGx
_chGA:
	movq (%rbx),%rax
	jmp *(%rax)
_uhH5:
	addq $40,%rbp
	jmp _chGS
	.size _chGm, .-_chGm


==================== Asm code ====================
2018-03-16 15:54:56.537880015 UTC

.section .data.rel.ro
.align 8
.align 1
block_chGm_info:
	.quad	_chGm
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.538553311 UTC

.section .text
.align 8
_chGx:
_chGx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhH6
_chGL:
	leaq block_chGJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _chGJ
_chGM:
	movq (%rbx),%rax
	jmp *(%rax)
_uhH6:
	addq $40,%rbp
	jmp _chGS
	.size _chGx, .-_chGx


==================== Asm code ====================
2018-03-16 15:54:56.539181788 UTC

.section .data.rel.ro
.align 8
.align 1
block_chGx_info:
	.quad	_chGx
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.539991341 UTC

.section .text
.align 8
_chGJ:
_chGJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhH7
_chGX:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _chH0
_chGZ:
	movq 6(%rbx),%rax
	movq stg_ap_5_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhH7:
	addq $40,%rbp
	jmp _chGS
_chH0:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chGJ, .-_chGJ


==================== Asm code ====================
2018-03-16 15:54:56.540720409 UTC

.section .data.rel.ro
.align 8
.align 1
block_chGJ_info:
	.quad	_chGJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.541367725 UTC

.section .text
.align 8
_chGS:
_chGS:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chGS, .-_chGS


==================== Asm code ====================
2018-03-16 15:54:56.546294607 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM3_closure
.type GHC.Base.liftM3_$sliftM3_closure, @object
GHC.Base.liftM3_$sliftM3_closure:
	.quad	GHC.Base.liftM3_$sliftM3_info


==================== Asm code ====================
2018-03-16 15:54:56.547131837 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_$sliftM3_entry
.type GHC.Base.liftM3_$sliftM3_entry, @object
GHC.Base.liftM3_$sliftM3_entry:
_chI9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _chIa
_chIb:
	leaq block_chI2_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _chI2
_chI3:
	movq (%rbx),%rax
	jmp *(%rax)
_chIa:
	leaq GHC.Base.liftM3_$sliftM3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM3_$sliftM3_entry, .-GHC.Base.liftM3_$sliftM3_entry


==================== Asm code ====================
2018-03-16 15:54:56.5478096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM3_info
.type GHC.Base.liftM3_$sliftM3_info, @object
GHC.Base.liftM3_$sliftM3_info:
	.quad	GHC.Base.liftM3_$sliftM3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:56.548537775 UTC

.section .text
.align 8
_chI2:
_chI2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhIM
_chI7:
	leaq block_chIh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _chIh
_chIj:
	movq (%rbx),%rax
	jmp *(%rax)
_uhIM:
	addq $32,%rbp
	jmp _chIB
	.size _chI2, .-_chI2


==================== Asm code ====================
2018-03-16 15:54:56.54915279 UTC

.section .data.rel.ro
.align 8
.align 1
block_chI2_info:
	.quad	_chI2
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.550572284 UTC

.section .text
.align 8
_chIh:
_chIh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhIN
_chIu:
	leaq block_chIs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _chIs
_chIv:
	movq (%rbx),%rax
	jmp *(%rax)
_uhIN:
	addq $32,%rbp
	jmp _chIB
	.size _chIh, .-_chIh


==================== Asm code ====================
2018-03-16 15:54:56.551218989 UTC

.section .data.rel.ro
.align 8
.align 1
block_chIh_info:
	.quad	_chIh
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.5520391 UTC

.section .text
.align 8
_chIs:
_chIs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhIO
_chIG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _chIJ
_chII:
	movq 6(%rbx),%rax
	movq stg_ap_4_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhIO:
	addq $32,%rbp
	jmp _chIB
_chIJ:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chIs, .-_chIs


==================== Asm code ====================
2018-03-16 15:54:56.552751022 UTC

.section .data.rel.ro
.align 8
.align 1
block_chIs_info:
	.quad	_chIs
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.553394016 UTC

.section .text
.align 8
_chIB:
_chIB:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chIB, .-_chIB


==================== Asm code ====================
2018-03-16 15:54:56.558196031 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM2_closure
.type GHC.Base.liftM2_$sliftM2_closure, @object
GHC.Base.liftM2_$sliftM2_closure:
	.quad	GHC.Base.liftM2_$sliftM2_info


==================== Asm code ====================
2018-03-16 15:54:56.559016309 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_$sliftM2_entry
.type GHC.Base.liftM2_$sliftM2_entry, @object
GHC.Base.liftM2_$sliftM2_entry:
_chJG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chJH
_chJI:
	leaq block_chJz_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _chJz
_chJA:
	movq (%rbx),%rax
	jmp *(%rax)
_chJH:
	leaq GHC.Base.liftM2_$sliftM2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM2_$sliftM2_entry, .-GHC.Base.liftM2_$sliftM2_entry


==================== Asm code ====================
2018-03-16 15:54:56.559679315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM2_info
.type GHC.Base.liftM2_$sliftM2_info, @object
GHC.Base.liftM2_$sliftM2_info:
	.quad	GHC.Base.liftM2_$sliftM2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:56.560446489 UTC

.section .text
.align 8
_chJz:
_chJz:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhK6
_chJE:
	leaq block_chJO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _chJO
_chJQ:
	movq (%rbx),%rax
	jmp *(%rax)
_uhK6:
	addq $24,%rbp
	jmp _chJW
	.size _chJz, .-_chJz


==================== Asm code ====================
2018-03-16 15:54:56.561106715 UTC

.section .data.rel.ro
.align 8
.align 1
block_chJz_info:
	.quad	_chJz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.561929132 UTC

.section .text
.align 8
_chJO:
_chJO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhK7
_chK1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _chK4
_chK3:
	movq 6(%rbx),%rax
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uhK7:
	addq $24,%rbp
	jmp _chJW
_chK4:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chJO, .-_chJO


==================== Asm code ====================
2018-03-16 15:54:56.562681427 UTC

.section .data.rel.ro
.align 8
.align 1
block_chJO_info:
	.quad	_chJO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.563328842 UTC

.section .text
.align 8
_chJW:
_chJW:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chJW, .-_chJW


==================== Asm code ====================
2018-03-16 15:54:56.56708586 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM_closure
.type GHC.Base.liftM_$sliftM_closure, @object
GHC.Base.liftM_$sliftM_closure:
	.quad	GHC.Base.liftM_$sliftM_info


==================== Asm code ====================
2018-03-16 15:54:56.567831724 UTC

.section .text
.align 8
.globl GHC.Base.liftM_$sliftM_entry
.type GHC.Base.liftM_$sliftM_entry, @object
GHC.Base.liftM_$sliftM_entry:
_chKP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chKQ
_chKR:
	leaq block_chKI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chKI
_chKJ:
	movq (%rbx),%rax
	jmp *(%rax)
_chKQ:
	leaq GHC.Base.liftM_$sliftM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM_$sliftM_entry, .-GHC.Base.liftM_$sliftM_entry


==================== Asm code ====================
2018-03-16 15:54:56.568492725 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM_info
.type GHC.Base.liftM_$sliftM_info, @object
GHC.Base.liftM_$sliftM_info:
	.quad	GHC.Base.liftM_$sliftM_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.569217581 UTC

.section .text
.align 8
_chKI:
_chKI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _chKM
_chKN:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _chL1
_chL0:
	movq 6(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chL1:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_chKM:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chKI, .-_chKI


==================== Asm code ====================
2018-03-16 15:54:56.569961009 UTC

.section .data.rel.ro
.align 8
.align 1
block_chKI_info:
	.quad	_chKI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.571636023 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when1_closure
.type GHC.Base.when1_closure, @object
GHC.Base.when1_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.Tuple.()_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.574653872 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_$swhen_closure
.type GHC.Base.when_$swhen_closure, @object
GHC.Base.when_$swhen_closure:
	.quad	GHC.Base.when_$swhen_info


==================== Asm code ====================
2018-03-16 15:54:56.575461513 UTC

.section .text
.align 8
.globl GHC.Base.when_$swhen_entry
.type GHC.Base.when_$swhen_entry, @object
GHC.Base.when_$swhen_entry:
_chLx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chLy
_chLz:
	leaq block_chLq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chLq
_chLr:
	movq (%rbx),%rax
	jmp *(%rax)
_chLy:
	leaq GHC.Base.when_$swhen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.when_$swhen_entry, .-GHC.Base.when_$swhen_entry


==================== Asm code ====================
2018-03-16 15:54:56.576139836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_$swhen_info
.type GHC.Base.when_$swhen_info, @object
GHC.Base.when_$swhen_info:
	.quad	GHC.Base.when_$swhen_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.576888569 UTC

.section .text
.align 8
_chLq:
_chLq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _chLu
_chLv:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_chLu:
	leaq GHC.Base.when1_closure+2(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chLq, .-_chLq


==================== Asm code ====================
2018-03-16 15:54:56.577540895 UTC

.section .data.rel.ro
.align 8
.align 1
block_chLq_info:
	.quad	_chLq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.580570312 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.when_closure
.type GHC.Base.when_closure, @object
GHC.Base.when_closure:
	.quad	GHC.Base.when_info


==================== Asm code ====================
2018-03-16 15:54:56.581339841 UTC

.section .text
.align 8
.globl GHC.Base.when_entry
.type GHC.Base.when_entry, @object
GHC.Base.when_entry:
_chM7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chM8
_chM9:
	leaq block_chM0_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _chM0
_chM1:
	movq (%rbx),%rax
	jmp *(%rax)
_chM8:
	leaq GHC.Base.when_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.when_entry, .-GHC.Base.when_entry


==================== Asm code ====================
2018-03-16 15:54:56.582033233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.when_info
.type GHC.Base.when_info, @object
GHC.Base.when_info:
	.quad	GHC.Base.when_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:56.582820218 UTC

.section .text
.align 8
_chM0:
_chM0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _chM4
_chM5:
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_chM4:
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Base.pure_entry
	.size _chM0, .-_chM0


==================== Asm code ====================
2018-03-16 15:54:56.583477023 UTC

.section .data.rel.ro
.align 8
.align 1
block_chM0_info:
	.quad	_chM0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.587647675 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*_closure
.type GHC.Base.$fApplicativeMaybe_$c<*_closure, @object
GHC.Base.$fApplicativeMaybe_$c<*_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:56.588413321 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c<*_entry
.type GHC.Base.$fApplicativeMaybe_$c<*_entry, @object
GHC.Base.$fApplicativeMaybe_$c<*_entry:
_chMH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chMI
_chMJ:
	leaq block_chMA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chMA
_chMB:
	movq (%rbx),%rax
	jmp *(%rax)
_chMI:
	leaq GHC.Base.$fApplicativeMaybe_$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c<*_entry, .-GHC.Base.$fApplicativeMaybe_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:56.589088253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*_info
.type GHC.Base.$fApplicativeMaybe_$c<*_info, @object
GHC.Base.$fApplicativeMaybe_$c<*_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.589877922 UTC

.section .text
.align 8
_chMA:
_chMA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uhN3
_chMF:
	leaq block_chMP_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chMP
_chMR:
	movq (%rbx),%rax
	jmp *(%rax)
_uhN3:
	addq $16,%rbp
	jmp _chMX
	.size _chMA, .-_chMA


==================== Asm code ====================
2018-03-16 15:54:56.590533729 UTC

.section .data.rel.ro
.align 8
.align 1
block_chMA_info:
	.quad	_chMA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.591213626 UTC

.section .text
.align 8
_chMP:
_chMP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uhN4
_chN1:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_uhN4:
	addq $16,%rbp
	jmp _chMX
	.size _chMP, .-_chMP


==================== Asm code ====================
2018-03-16 15:54:56.591852912 UTC

.section .data.rel.ro
.align 8
.align 1
block_chMP_info:
	.quad	_chMP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.592880175 UTC

.section .text
.align 8
_chMX:
_chMX:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chMX, .-_chMX


==================== Asm code ====================
2018-03-16 15:54:56.594615311 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'O3_bytes
.type GHC.Base.$tc'O3_bytes, @object
GHC.Base.$tc'O3_bytes:
	.asciz "'O"


==================== Asm code ====================
2018-03-16 15:54:56.596222281 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O2_closure
.type GHC.Base.$tc'O2_closure, @object
GHC.Base.$tc'O2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'O3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.598343073 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcOpaque2_bytes
.type GHC.Base.$tcOpaque2_bytes, @object
GHC.Base.$tcOpaque2_bytes:
	.asciz "Opaque"


==================== Asm code ====================
2018-03-16 15:54:56.599926302 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcOpaque1_closure
.type GHC.Base.$tcOpaque1_closure, @object
GHC.Base.$tcOpaque1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcOpaque2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.601572757 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonadPlus2_bytes
.type GHC.Base.$tcMonadPlus2_bytes, @object
GHC.Base.$tcMonadPlus2_bytes:
	.asciz "MonadPlus"


==================== Asm code ====================
2018-03-16 15:54:56.603173463 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonadPlus1_closure
.type GHC.Base.$tcMonadPlus1_closure, @object
GHC.Base.$tcMonadPlus1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonadPlus2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.604794992 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonad2_bytes
.type GHC.Base.$tcMonad2_bytes, @object
GHC.Base.$tcMonad2_bytes:
	.asciz "Monad"


==================== Asm code ====================
2018-03-16 15:54:56.606503138 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonad1_closure
.type GHC.Base.$tcMonad1_closure, @object
GHC.Base.$tcMonad1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonad2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.608114365 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'C:Monoid3_bytes
.type GHC.Base.$tc'C:Monoid3_bytes, @object
GHC.Base.$tc'C:Monoid3_bytes:
	.asciz "'C:Monoid"


==================== Asm code ====================
2018-03-16 15:54:56.609786809 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid2_closure
.type GHC.Base.$tc'C:Monoid2_closure, @object
GHC.Base.$tc'C:Monoid2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'C:Monoid3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.611433389 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMonoid3_bytes
.type GHC.Base.$tcMonoid3_bytes, @object
GHC.Base.$tcMonoid3_bytes:
	.asciz "Monoid"


==================== Asm code ====================
2018-03-16 15:54:56.613176599 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid2_closure
.type GHC.Base.$tcMonoid2_closure, @object
GHC.Base.$tcMonoid2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMonoid3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.615274588 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcSemigroup2_bytes
.type GHC.Base.$tcSemigroup2_bytes, @object
GHC.Base.$tcSemigroup2_bytes:
	.asciz "Semigroup"


==================== Asm code ====================
2018-03-16 15:54:56.616962173 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcSemigroup1_closure
.type GHC.Base.$tcSemigroup1_closure, @object
GHC.Base.$tcSemigroup1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcSemigroup2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.619135069 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc':|3_bytes
.type GHC.Base.$tc':|3_bytes, @object
GHC.Base.$tc':|3_bytes:
	.asciz "':|"


==================== Asm code ====================
2018-03-16 15:54:56.62082418 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|2_closure
.type GHC.Base.$tc':|2_closure, @object
GHC.Base.$tc':|2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc':|3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.622460996 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcNonEmpty2_bytes
.type GHC.Base.$tcNonEmpty2_bytes, @object
GHC.Base.$tcNonEmpty2_bytes:
	.asciz "NonEmpty"


==================== Asm code ====================
2018-03-16 15:54:56.624153398 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcNonEmpty1_closure
.type GHC.Base.$tcNonEmpty1_closure, @object
GHC.Base.$tcNonEmpty1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcNonEmpty2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.625835489 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcAlternative3_bytes
.type GHC.Base.$tcAlternative3_bytes, @object
GHC.Base.$tcAlternative3_bytes:
	.asciz "Alternative"


==================== Asm code ====================
2018-03-16 15:54:56.627426992 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative2_closure
.type GHC.Base.$tcAlternative2_closure, @object
GHC.Base.$tcAlternative2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcAlternative3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.628995286 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcApplicative2_bytes
.type GHC.Base.$tcApplicative2_bytes, @object
GHC.Base.$tcApplicative2_bytes:
	.asciz "Applicative"


==================== Asm code ====================
2018-03-16 15:54:56.630686003 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcApplicative1_closure
.type GHC.Base.$tcApplicative1_closure, @object
GHC.Base.$tcApplicative1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcApplicative2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.632350656 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcFunctor2_bytes
.type GHC.Base.$tcFunctor2_bytes, @object
GHC.Base.$tcFunctor2_bytes:
	.asciz "Functor"


==================== Asm code ====================
2018-03-16 15:54:56.63405049 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcFunctor1_closure
.type GHC.Base.$tcFunctor1_closure, @object
GHC.Base.$tcFunctor1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcFunctor2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.635723839 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'Just3_bytes
.type GHC.Base.$tc'Just3_bytes, @object
GHC.Base.$tc'Just3_bytes:
	.asciz "'Just"


==================== Asm code ====================
2018-03-16 15:54:56.637416299 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just2_closure
.type GHC.Base.$tc'Just2_closure, @object
GHC.Base.$tc'Just2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'Just3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.639113347 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tc'Nothing3_bytes
.type GHC.Base.$tc'Nothing3_bytes, @object
GHC.Base.$tc'Nothing3_bytes:
	.asciz "'Nothing"


==================== Asm code ====================
2018-03-16 15:54:56.64075468 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing2_closure
.type GHC.Base.$tc'Nothing2_closure, @object
GHC.Base.$tc'Nothing2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tc'Nothing3_bytes


==================== Asm code ====================
2018-03-16 15:54:56.642883119 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$tcMaybe2_bytes
.type GHC.Base.$tcMaybe2_bytes, @object
GHC.Base.$tcMaybe2_bytes:
	.asciz "Maybe"


==================== Asm code ====================
2018-03-16 15:54:56.644467157 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMaybe1_closure
.type GHC.Base.$tcMaybe1_closure, @object
GHC.Base.$tcMaybe1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$tcMaybe2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.646899506 UTC

.section .data
.align 8
.align 1
$krep_r7Pr_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.648568181 UTC

.section .data
.align 8
.align 1
$krep1_r7Ps_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep_r7Pr_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.65034816 UTC

.section .data
.align 8
.align 1
$krep2_r7Pt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep1_r7Ps_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.65195185 UTC

.section .data
.align 8
.align 1
$krep3_r7Pu_closure:
	.quad	:_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.653923855 UTC

.section .data
.align 8
.align 1
$krep4_r7Pv_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.655563283 UTC

.section .data
.align 8
.align 1
$krep5_r7Pw_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r7Pv_closure+1
	.quad	$krep_r7Pr_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.657212347 UTC

.section .data
.align 8
.align 1
$krep6_r7Px_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.6589873 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid1_closure
.type GHC.Base.$tcMonoid1_closure, @object
GHC.Base.$tcMonoid1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep6_r7Px_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.660602079 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative1_closure
.type GHC.Base.$tcAlternative1_closure, @object
GHC.Base.$tcAlternative1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	$krep6_r7Px_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.662318503 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$trModule2_bytes
.type GHC.Base.$trModule2_bytes, @object
GHC.Base.$trModule2_bytes:
	.asciz "GHC.Base"


==================== Asm code ====================
2018-03-16 15:54:56.663887072 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule1_closure
.type GHC.Base.$trModule1_closure, @object
GHC.Base.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:54:56.665499017 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$trModule4_bytes
.type GHC.Base.$trModule4_bytes, @object
GHC.Base.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:54:56.667575438 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule3_closure
.type GHC.Base.$trModule3_closure, @object
GHC.Base.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Base.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:54:56.669183476 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$trModule_closure
.type GHC.Base.$trModule_closure, @object
GHC.Base.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Base.$trModule3_closure+1
	.quad	GHC.Base.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.671597416 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMaybe_closure
.type GHC.Base.$tcMaybe_closure, @object
GHC.Base.$tcMaybe_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMaybe1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	625655543500963593
	.quad	6391758309165051762
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.67329924 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing1_closure
.type GHC.Base.$tc'Nothing1_closure, @object
GHC.Base.$tc'Nothing1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.674948886 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just1_closure
.type GHC.Base.$tc'Just1_closure, @object
GHC.Base.$tc'Just1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	GHC.Base.$tc'Nothing1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.676684775 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Nothing_closure
.type GHC.Base.$tc'Nothing_closure, @object
GHC.Base.$tc'Nothing_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'Nothing2_closure+1
	.quad	GHC.Base.$tc'Nothing1_closure+1
	.quad	-3813454545525139424
	.quad	-5673617917288009146
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.678455662 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'Just_closure
.type GHC.Base.$tc'Just_closure, @object
GHC.Base.$tc'Just_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'Just2_closure+1
	.quad	GHC.Base.$tc'Just1_closure+4
	.quad	5794512144280699493
	.quad	-9012320612731333499
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.680192717 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcFunctor_closure
.type GHC.Base.$tcFunctor_closure, @object
GHC.Base.$tcFunctor_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcFunctor1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	211182333006544237
	.quad	5556320544348084514
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.681996947 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcApplicative_closure
.type GHC.Base.$tcApplicative_closure, @object
GHC.Base.$tcApplicative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcApplicative1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	-5741688852878308019
	.quad	2963353171490466073
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.683800551 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcAlternative_closure
.type GHC.Base.$tcAlternative_closure, @object
GHC.Base.$tcAlternative_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcAlternative2_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	1073491102990665358
	.quad	-4125971318004742668
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.685677463 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcNonEmpty_closure
.type GHC.Base.$tcNonEmpty_closure, @object
GHC.Base.$tcNonEmpty_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcNonEmpty1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-5239727201064083331
	.quad	3455542966739695982
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.687395085 UTC

.section .data
.align 8
.align 1
$krep7_r7Py_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcNonEmpty_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.689067204 UTC

.section .data
.align 8
.align 1
$krep8_r7Pz_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_r7Pv_closure+1
	.quad	$krep7_r7Py_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.69110912 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|1_closure
.type GHC.Base.$tc':|1_closure, @object
GHC.Base.$tc':|1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep8_r7Pz_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.69329335 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc':|_closure
.type GHC.Base.$tc':|_closure, @object
GHC.Base.$tc':|_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc':|2_closure+1
	.quad	GHC.Base.$tc':|1_closure+4
	.quad	-9005911638525740851
	.quad	3053237465234607583
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.69506363 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcSemigroup_closure
.type GHC.Base.$tcSemigroup_closure, @object
GHC.Base.$tcSemigroup_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcSemigroup1_closure+1
	.quad	GHC.Base.$tcMonoid1_closure+4
	.quad	-2251391887345253339
	.quad	3285685594139281062
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.696789791 UTC

.section .data
.align 8
.align 1
$krep9_r7PA_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcSemigroup_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.698606297 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonoid_closure
.type GHC.Base.$tcMonoid_closure, @object
GHC.Base.$tcMonoid_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonoid2_closure+1
	.quad	GHC.Base.$tcMonoid1_closure+4
	.quad	-4608184027813807840
	.quad	1291018260833769143
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.700295504 UTC

.section .data
.align 8
.align 1
$krep10_r7PB_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMonoid_closure+1
	.quad	$krep3_r7Pu_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.702419254 UTC

.section .data
.align 8
.align 1
$krep11_r7PC_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r7Pw_closure+4
	.quad	$krep10_r7PB_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.704341111 UTC

.section .data
.align 8
.align 1
$krep12_r7PD_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r7Pt_closure+4
	.quad	$krep11_r7PC_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.70607086 UTC

.section .data
.align 8
.align 1
$krep13_r7PE_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep12_r7PD_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.707768692 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid1_closure
.type GHC.Base.$tc'C:Monoid1_closure, @object
GHC.Base.$tc'C:Monoid1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r7PA_closure+1
	.quad	$krep13_r7PE_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.709568297 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'C:Monoid_closure
.type GHC.Base.$tc'C:Monoid_closure, @object
GHC.Base.$tc'C:Monoid_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'C:Monoid2_closure+1
	.quad	GHC.Base.$tc'C:Monoid1_closure+4
	.quad	-2347447984602041273
	.quad	5895832073319104984
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.711324914 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonad_closure
.type GHC.Base.$tcMonad_closure, @object
GHC.Base.$tcMonad_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonad1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	3168880480603756299
	.quad	8398240611646296094
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.713051553 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcMonadPlus_closure
.type GHC.Base.$tcMonadPlus_closure, @object
GHC.Base.$tcMonadPlus_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcMonadPlus1_closure+1
	.quad	GHC.Base.$tcAlternative1_closure+4
	.quad	-4331070822089179066
	.quad	-4291386747640162226
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.714899734 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tcOpaque_closure
.type GHC.Base.$tcOpaque_closure, @object
GHC.Base.$tcOpaque_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tcOpaque1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-9107018667880310430
	.quad	-2896510572084651045
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.716655343 UTC

.section .data
.align 8
.align 1
$krep14_r7PF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcOpaque_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.719418442 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O1_closure
.type GHC.Base.$tc'O1_closure, @object
GHC.Base.$tc'O1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_r7Pr_closure+2
	.quad	$krep14_r7PF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.721327207 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$tc'O_closure
.type GHC.Base.$tc'O_closure, @object
GHC.Base.$tc'O_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Base.$trModule_closure+1
	.quad	GHC.Base.$tc'O2_closure+1
	.quad	GHC.Base.$tc'O1_closure+4
	.quad	-5895469461314716811
	.quad	-5446079599561417287
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:56.725293194 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.quotRemInt_closure
.type GHC.Base.quotRemInt_closure, @object
GHC.Base.quotRemInt_closure:
	.quad	GHC.Base.quotRemInt_info


==================== Asm code ====================
2018-03-16 15:54:56.726135121 UTC

.section .text
.align 8
.globl GHC.Base.quotRemInt_entry
.type GHC.Base.quotRemInt_entry, @object
GHC.Base.quotRemInt_entry:
_chOO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chOZ
_chP0:
	leaq block_chOL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chOL
_chOM:
	movq (%rbx),%rax
	jmp *(%rax)
_chOZ:
	leaq GHC.Base.quotRemInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.quotRemInt_entry, .-GHC.Base.quotRemInt_entry


==================== Asm code ====================
2018-03-16 15:54:56.726777186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.quotRemInt_info
.type GHC.Base.quotRemInt_info, @object
GHC.Base.quotRemInt_info:
	.quad	GHC.Base.quotRemInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.727466285 UTC

.section .text
.align 8
_chOL:
_chOL:
	leaq block_chOR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chOR
_chOS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chOL, .-_chOL


==================== Asm code ====================
2018-03-16 15:54:56.728031173 UTC

.section .data.rel.ro
.align 8
.align 1
block_chOL_info:
	.quad	_chOL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.728810175 UTC

.section .text
.align 8
_chOR:
_chOR:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _chP4
_chP3:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chP4:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chOR, .-_chOR


==================== Asm code ====================
2018-03-16 15:54:56.729533612 UTC

.section .data.rel.ro
.align 8
.align 1
block_chOR_info:
	.quad	_chOR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.733633256 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.modInt_closure
.type GHC.Base.modInt_closure, @object
GHC.Base.modInt_closure:
	.quad	GHC.Base.modInt_info


==================== Asm code ====================
2018-03-16 15:54:56.734415349 UTC

.section .text
.align 8
.globl GHC.Base.modInt_entry
.type GHC.Base.modInt_entry, @object
GHC.Base.modInt_entry:
_chPz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chPM
_chPN:
	leaq block_chPw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chPw
_chPx:
	movq (%rbx),%rax
	jmp *(%rax)
_chPM:
	leaq GHC.Base.modInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.modInt_entry, .-GHC.Base.modInt_entry


==================== Asm code ====================
2018-03-16 15:54:56.735098137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.modInt_info
.type GHC.Base.modInt_info, @object
GHC.Base.modInt_info:
	.quad	GHC.Base.modInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.735784918 UTC

.section .text
.align 8
_chPw:
_chPw:
	leaq block_chPC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chPC
_chPD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chPw, .-_chPw


==================== Asm code ====================
2018-03-16 15:54:56.736375222 UTC

.section .data.rel.ro
.align 8
.align 1
block_chPw_info:
	.quad	_chPw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.737012762 UTC

.section .text
.align 8
_chPC:
_chPC:
	movq 8(%rbp),%rax
	leaq block_chPH_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Classes.modInt#_entry@gotpcrel(%rip)
	.size _chPC, .-_chPC


==================== Asm code ====================
2018-03-16 15:54:56.737644694 UTC

.section .data.rel.ro
.align 8
.align 1
block_chPC_info:
	.quad	_chPC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.738371789 UTC

.section .text
.align 8
_chPH:
_chPH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _chPS
_chPR:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chPS:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _chPH, .-_chPH


==================== Asm code ====================
2018-03-16 15:54:56.739020962 UTC

.section .data.rel.ro
.align 8
.align 1
block_chPH_info:
	.quad	_chPH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.743003244 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divInt_closure
.type GHC.Base.divInt_closure, @object
GHC.Base.divInt_closure:
	.quad	GHC.Base.divInt_info


==================== Asm code ====================
2018-03-16 15:54:56.743772962 UTC

.section .text
.align 8
.globl GHC.Base.divInt_entry
.type GHC.Base.divInt_entry, @object
GHC.Base.divInt_entry:
_chQn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chQA
_chQB:
	leaq block_chQk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chQk
_chQl:
	movq (%rbx),%rax
	jmp *(%rax)
_chQA:
	leaq GHC.Base.divInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.divInt_entry, .-GHC.Base.divInt_entry


==================== Asm code ====================
2018-03-16 15:54:56.744429422 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divInt_info
.type GHC.Base.divInt_info, @object
GHC.Base.divInt_info:
	.quad	GHC.Base.divInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.745145731 UTC

.section .text
.align 8
_chQk:
_chQk:
	leaq block_chQq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chQq
_chQr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chQk, .-_chQk


==================== Asm code ====================
2018-03-16 15:54:56.745784696 UTC

.section .data.rel.ro
.align 8
.align 1
block_chQk_info:
	.quad	_chQk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.746400145 UTC

.section .text
.align 8
_chQq:
_chQq:
	movq 8(%rbp),%rax
	leaq block_chQv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Classes.divInt#_entry@gotpcrel(%rip)
	.size _chQq, .-_chQq


==================== Asm code ====================
2018-03-16 15:54:56.747014629 UTC

.section .data.rel.ro
.align 8
.align 1
block_chQq_info:
	.quad	_chQq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.747708999 UTC

.section .text
.align 8
_chQv:
_chQv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _chQG
_chQF:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chQG:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _chQv, .-_chQv


==================== Asm code ====================
2018-03-16 15:54:56.748329432 UTC

.section .data.rel.ro
.align 8
.align 1
block_chQv_info:
	.quad	_chQv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.751960894 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.remInt_closure
.type GHC.Base.remInt_closure, @object
GHC.Base.remInt_closure:
	.quad	GHC.Base.remInt_info


==================== Asm code ====================
2018-03-16 15:54:56.752791114 UTC

.section .text
.align 8
.globl GHC.Base.remInt_entry
.type GHC.Base.remInt_entry, @object
GHC.Base.remInt_entry:
_chRb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chRn
_chRo:
	leaq block_chR8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chR8
_chR9:
	movq (%rbx),%rax
	jmp *(%rax)
_chRn:
	leaq GHC.Base.remInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.remInt_entry, .-GHC.Base.remInt_entry


==================== Asm code ====================
2018-03-16 15:54:56.7540959 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.remInt_info
.type GHC.Base.remInt_info, @object
GHC.Base.remInt_info:
	.quad	GHC.Base.remInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.754754483 UTC

.section .text
.align 8
_chR8:
_chR8:
	leaq block_chRe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chRe
_chRf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chR8, .-_chR8


==================== Asm code ====================
2018-03-16 15:54:56.755363497 UTC

.section .data.rel.ro
.align 8
.align 1
block_chR8_info:
	.quad	_chR8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.756080391 UTC

.section .text
.align 8
_chRe:
_chRe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _chRs
_chRr:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chRs:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chRe, .-_chRe


==================== Asm code ====================
2018-03-16 15:54:56.757157735 UTC

.section .data.rel.ro
.align 8
.align 1
block_chRe_info:
	.quad	_chRe
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.76086875 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.quotInt_closure
.type GHC.Base.quotInt_closure, @object
GHC.Base.quotInt_closure:
	.quad	GHC.Base.quotInt_info


==================== Asm code ====================
2018-03-16 15:54:56.761600013 UTC

.section .text
.align 8
.globl GHC.Base.quotInt_entry
.type GHC.Base.quotInt_entry, @object
GHC.Base.quotInt_entry:
_chRT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chS5
_chS6:
	leaq block_chRQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _chRQ
_chRR:
	movq (%rbx),%rax
	jmp *(%rax)
_chS5:
	leaq GHC.Base.quotInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.quotInt_entry, .-GHC.Base.quotInt_entry


==================== Asm code ====================
2018-03-16 15:54:56.7622431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.quotInt_info
.type GHC.Base.quotInt_info, @object
GHC.Base.quotInt_info:
	.quad	GHC.Base.quotInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:56.76290006 UTC

.section .text
.align 8
_chRQ:
_chRQ:
	leaq block_chRW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _chRW
_chRX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _chRQ, .-_chRQ


==================== Asm code ====================
2018-03-16 15:54:56.76349185 UTC

.section .data.rel.ro
.align 8
.align 1
block_chRQ_info:
	.quad	_chRQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.764207086 UTC

.section .text
.align 8
_chRW:
_chRW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _chSa
_chS9:
	movq 8(%rbp),%rax
	cqto
	idivq 7(%rbx)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chSa:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chRW, .-_chRW


==================== Asm code ====================
2018-03-16 15:54:56.764871479 UTC

.section .data.rel.ro
.align 8
.align 1
block_chRW_info:
	.quad	_chRW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.76780238 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.getTag_closure
.type GHC.Base.getTag_closure, @object
GHC.Base.getTag_closure:
	.quad	GHC.Base.getTag_info


==================== Asm code ====================
2018-03-16 15:54:56.76851193 UTC

.section .text
.align 8
.globl GHC.Base.getTag_entry
.type GHC.Base.getTag_entry, @object
GHC.Base.getTag_entry:
_chSB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _chSC
_chSD:
	leaq block_chSy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_chSC:
	leaq GHC.Base.getTag_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.getTag_entry, .-GHC.Base.getTag_entry


==================== Asm code ====================
2018-03-16 15:54:56.769135543 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.getTag_info
.type GHC.Base.getTag_info, @object
GHC.Base.getTag_info:
	.quad	GHC.Base.getTag_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.769803414 UTC

.section .text
.align 8
_chSy:
_chSy:
	andq $-8,%rbx
	movq (%rbx),%rax
	movl 20(%rax),%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _chSy, .-_chSy


==================== Asm code ====================
2018-03-16 15:54:56.770420942 UTC

.section .data.rel.ro
.align 8
.align 1
block_chSy_info:
	.quad	_chSy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.773097347 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO1_closure
.type GHC.Base.$fMonadIO1_closure, @object
GHC.Base.$fMonadIO1_closure:
	.quad	GHC.Base.$fMonadIO1_info


==================== Asm code ====================
2018-03-16 15:54:56.773848202 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadIO1_entry
.type GHC.Base.$fMonadIO1_entry, @object
GHC.Base.$fMonadIO1_entry:
_chSY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chSZ
_chT0:
	leaq block_chSW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chSZ:
	leaq GHC.Base.$fMonadIO1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadIO1_entry, .-GHC.Base.$fMonadIO1_entry


==================== Asm code ====================
2018-03-16 15:54:56.774502109 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadIO1_info
.type GHC.Base.$fMonadIO1_info, @object
GHC.Base.$fMonadIO1_info:
	.quad	GHC.Base.$fMonadIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.775167694 UTC

.section .text
.align 8
_chSW:
_chSW:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _chSW, .-_chSW


==================== Asm code ====================
2018-03-16 15:54:56.775741926 UTC

.section .data.rel.ro
.align 8
.align 1
block_chSW_info:
	.quad	_chSW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.777944711 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.bindIO_closure
.type GHC.Base.bindIO_closure, @object
GHC.Base.bindIO_closure:
	.quad	GHC.Base.bindIO_info


==================== Asm code ====================
2018-03-16 15:54:56.778573335 UTC

.section .text
.align 8
.globl GHC.Base.bindIO_entry
.type GHC.Base.bindIO_entry, @object
GHC.Base.bindIO_entry:
_chTf:
	jmp GHC.Base.$fMonadIO1_entry
	.size GHC.Base.bindIO_entry, .-GHC.Base.bindIO_entry


==================== Asm code ====================
2018-03-16 15:54:56.779097045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.bindIO_info
.type GHC.Base.bindIO_info, @object
GHC.Base.bindIO_info:
	.quad	GHC.Base.bindIO_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.782251784 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO2_closure
.type GHC.Base.$fApplicativeIO2_closure, @object
GHC.Base.$fApplicativeIO2_closure:
	.quad	GHC.Base.$fApplicativeIO2_info


==================== Asm code ====================
2018-03-16 15:54:56.78299681 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO2_entry
.type GHC.Base.$fApplicativeIO2_entry, @object
GHC.Base.$fApplicativeIO2_entry:
_chTs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chTt
_chTu:
	leaq block_chTq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chTt:
	leaq GHC.Base.$fApplicativeIO2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO2_entry, .-GHC.Base.$fApplicativeIO2_entry


==================== Asm code ====================
2018-03-16 15:54:56.783680472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO2_info
.type GHC.Base.$fApplicativeIO2_info, @object
GHC.Base.$fApplicativeIO2_info:
	.quad	GHC.Base.$fApplicativeIO2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.784299088 UTC

.section .text
.align 8
_chTq:
_chTq:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chTq, .-_chTq


==================== Asm code ====================
2018-03-16 15:54:56.784872079 UTC

.section .data.rel.ro
.align 8
.align 1
block_chTq_info:
	.quad	_chTq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.787016281 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.thenIO_closure
.type GHC.Base.thenIO_closure, @object
GHC.Base.thenIO_closure:
	.quad	GHC.Base.thenIO_info


==================== Asm code ====================
2018-03-16 15:54:56.787603748 UTC

.section .text
.align 8
.globl GHC.Base.thenIO_entry
.type GHC.Base.thenIO_entry, @object
GHC.Base.thenIO_entry:
_chTJ:
	jmp GHC.Base.$fApplicativeIO2_entry
	.size GHC.Base.thenIO_entry, .-GHC.Base.thenIO_entry


==================== Asm code ====================
2018-03-16 15:54:56.788202962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.thenIO_info
.type GHC.Base.thenIO_info, @object
GHC.Base.thenIO_info:
	.quad	GHC.Base.thenIO_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.790725838 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unIO1_closure
.type GHC.Base.unIO1_closure, @object
GHC.Base.unIO1_closure:
	.quad	GHC.Base.unIO1_info


==================== Asm code ====================
2018-03-16 15:54:56.791353447 UTC

.section .text
.align 8
.globl GHC.Base.unIO1_entry
.type GHC.Base.unIO1_entry, @object
GHC.Base.unIO1_entry:
_chTU:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.unIO1_entry, .-GHC.Base.unIO1_entry


==================== Asm code ====================
2018-03-16 15:54:56.791917413 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unIO1_info
.type GHC.Base.unIO1_info, @object
GHC.Base.unIO1_info:
	.quad	GHC.Base.unIO1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.794003982 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unIO_closure
.type GHC.Base.unIO_closure, @object
GHC.Base.unIO_closure:
	.quad	GHC.Base.unIO_info


==================== Asm code ====================
2018-03-16 15:54:56.794593849 UTC

.section .text
.align 8
.globl GHC.Base.unIO_entry
.type GHC.Base.unIO_entry, @object
GHC.Base.unIO_entry:
_chU5:
	jmp GHC.Base.unIO1_entry
	.size GHC.Base.unIO_entry, .-GHC.Base.unIO_entry


==================== Asm code ====================
2018-03-16 15:54:56.795174358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unIO_info
.type GHC.Base.unIO_info, @object
GHC.Base.unIO_info:
	.quad	GHC.Base.unIO_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.797258223 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO4_closure
.type GHC.Base.$fApplicativeIO4_closure, @object
GHC.Base.$fApplicativeIO4_closure:
	.quad	GHC.Base.$fApplicativeIO4_info


==================== Asm code ====================
2018-03-16 15:54:56.797911556 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO4_entry
.type GHC.Base.$fApplicativeIO4_entry, @object
GHC.Base.$fApplicativeIO4_entry:
_chUg:
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fApplicativeIO4_entry, .-GHC.Base.$fApplicativeIO4_entry


==================== Asm code ====================
2018-03-16 15:54:56.798471182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO4_info
.type GHC.Base.$fApplicativeIO4_info, @object
GHC.Base.$fApplicativeIO4_info:
	.quad	GHC.Base.$fApplicativeIO4_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:56.800455831 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.returnIO_closure
.type GHC.Base.returnIO_closure, @object
GHC.Base.returnIO_closure:
	.quad	GHC.Base.returnIO_info


==================== Asm code ====================
2018-03-16 15:54:56.801019614 UTC

.section .text
.align 8
.globl GHC.Base.returnIO_entry
.type GHC.Base.returnIO_entry, @object
GHC.Base.returnIO_entry:
_chUs:
	jmp GHC.Base.$fApplicativeIO4_entry
	.size GHC.Base.returnIO_entry, .-GHC.Base.returnIO_entry


==================== Asm code ====================
2018-03-16 15:54:56.80162574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.returnIO_info
.type GHC.Base.returnIO_info, @object
GHC.Base.returnIO_info:
	.quad	GHC.Base.returnIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:56.80473978 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO3_closure
.type GHC.Base.$fApplicativeIO3_closure, @object
GHC.Base.$fApplicativeIO3_closure:
	.quad	GHC.Base.$fApplicativeIO3_info


==================== Asm code ====================
2018-03-16 15:54:56.805692049 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO3_entry
.type GHC.Base.$fApplicativeIO3_entry, @object
GHC.Base.$fApplicativeIO3_entry:
_chUI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chUJ
_chUK:
	leaq block_chUD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chUJ:
	leaq GHC.Base.$fApplicativeIO3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO3_entry, .-GHC.Base.$fApplicativeIO3_entry


==================== Asm code ====================
2018-03-16 15:54:56.806314623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO3_info
.type GHC.Base.$fApplicativeIO3_info, @object
GHC.Base.$fApplicativeIO3_info:
	.quad	GHC.Base.$fApplicativeIO3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.806958159 UTC

.section .text
.align 8
_chUD:
_chUD:
	leaq block_chUF_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chUD, .-_chUD


==================== Asm code ====================
2018-03-16 15:54:56.807583724 UTC

.section .data.rel.ro
.align 8
.align 1
block_chUD_info:
	.quad	_chUD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.808261826 UTC

.section .text
.align 8
_chUF:
_chUF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chUO
_chUN:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chUO:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chUF, .-_chUF


==================== Asm code ====================
2018-03-16 15:54:56.808892508 UTC

.section .data.rel.ro
.align 8
.align 1
block_chUF_info:
	.quad	_chUF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.811033569 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA1_closure
.type GHC.Base.liftA_$sliftA1_closure, @object
GHC.Base.liftA_$sliftA1_closure:
	.quad	GHC.Base.liftA_$sliftA1_info


==================== Asm code ====================
2018-03-16 15:54:56.811635054 UTC

.section .text
.align 8
.globl GHC.Base.liftA_$sliftA1_entry
.type GHC.Base.liftA_$sliftA1_entry, @object
GHC.Base.liftA_$sliftA1_entry:
_chV9:
	jmp GHC.Base.$fFunctorIO2_entry
	.size GHC.Base.liftA_$sliftA1_entry, .-GHC.Base.liftA_$sliftA1_entry


==================== Asm code ====================
2018-03-16 15:54:56.812205437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA1_info
.type GHC.Base.liftA_$sliftA1_info, @object
GHC.Base.liftA_$sliftA1_info:
	.quad	GHC.Base.liftA_$sliftA1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.815422074 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap1_closure
.type GHC.Base.ap1_closure, @object
GHC.Base.ap1_closure:
	.quad	GHC.Base.ap1_info


==================== Asm code ====================
2018-03-16 15:54:56.816197234 UTC

.section .text
.align 8
.globl GHC.Base.ap1_entry
.type GHC.Base.ap1_entry, @object
GHC.Base.ap1_entry:
_chVp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chVq
_chVr:
	leaq block_chVk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chVq:
	leaq GHC.Base.ap1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.ap1_entry, .-GHC.Base.ap1_entry


==================== Asm code ====================
2018-03-16 15:54:56.81682769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap1_info
.type GHC.Base.ap1_info, @object
GHC.Base.ap1_info:
	.quad	GHC.Base.ap1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.817575575 UTC

.section .text
.align 8
_chVk:
_chVk:
	leaq block_chVm_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chVk, .-_chVk


==================== Asm code ====================
2018-03-16 15:54:56.818120159 UTC

.section .data.rel.ro
.align 8
.align 1
block_chVk_info:
	.quad	_chVk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.818828007 UTC

.section .text
.align 8
_chVm:
_chVm:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chVv
_chVu:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chVv:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chVm, .-_chVm


==================== Asm code ====================
2018-03-16 15:54:56.819446582 UTC

.section .data.rel.ro
.align 8
.align 1
block_chVm_info:
	.quad	_chVm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.822065979 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_$sap1_closure
.type GHC.Base.ap_$sap1_closure, @object
GHC.Base.ap_$sap1_closure:
	.quad	GHC.Base.ap_$sap1_info


==================== Asm code ====================
2018-03-16 15:54:56.822692051 UTC

.section .text
.align 8
.globl GHC.Base.ap_$sap1_entry
.type GHC.Base.ap_$sap1_entry, @object
GHC.Base.ap_$sap1_entry:
_chVQ:
	jmp GHC.Base.ap1_entry
	.size GHC.Base.ap_$sap1_entry, .-GHC.Base.ap_$sap1_entry


==================== Asm code ====================
2018-03-16 15:54:56.823272448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_$sap1_info
.type GHC.Base.ap_$sap1_info, @object
GHC.Base.ap_$sap1_info:
	.quad	GHC.Base.ap_$sap1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.8275643 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ap_closure
.type GHC.Base.ap_closure, @object
GHC.Base.ap_closure:
	.quad	GHC.Base.ap_info


==================== Asm code ====================
2018-03-16 15:54:56.82836449 UTC

.section .text
.align 8
sat_sgPq_entry:
_chWc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chWd
_chWe:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chWg
_chWf:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_chWg:
	movq $32,904(%r13)
_chWd:
	jmp *-8(%r13)
	.size sat_sgPq_entry, .-sat_sgPq_entry


==================== Asm code ====================
2018-03-16 15:54:56.829055681 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgPq_info:
	.quad	sat_sgPq_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.830148907 UTC

.section .text
.align 8
sat_sgPr_entry:
_chWh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chWi
_chWj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _chWl
_chWk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgPq_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_chWl:
	movq $24,904(%r13)
_chWi:
	jmp *-8(%r13)
	.size sat_sgPr_entry, .-sat_sgPr_entry


==================== Asm code ====================
2018-03-16 15:54:56.830833828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgPr_info:
	.quad	sat_sgPr_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.831604401 UTC

.section .text
.align 8
.globl GHC.Base.ap_entry
.type GHC.Base.ap_entry, @object
GHC.Base.ap_entry:
_chWm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chWn
_chWo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _chWq
_chWp:
	leaq sat_sgPr_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_chWq:
	movq $24,904(%r13)
_chWn:
	leaq GHC.Base.ap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.ap_entry, .-GHC.Base.ap_entry


==================== Asm code ====================
2018-03-16 15:54:56.832311798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ap_info
.type GHC.Base.ap_info, @object
GHC.Base.ap_info:
	.quad	GHC.Base.ap_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:56.835564612 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM1_closure
.type GHC.Base.liftM1_closure, @object
GHC.Base.liftM1_closure:
	.quad	GHC.Base.liftM1_info


==================== Asm code ====================
2018-03-16 15:54:56.836269973 UTC

.section .text
.align 8
.globl GHC.Base.liftM1_entry
.type GHC.Base.liftM1_entry, @object
GHC.Base.liftM1_entry:
_chWW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chWX
_chWY:
	leaq block_chWR_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chWX:
	leaq GHC.Base.liftM1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM1_entry, .-GHC.Base.liftM1_entry


==================== Asm code ====================
2018-03-16 15:54:56.836944858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM1_info
.type GHC.Base.liftM1_info, @object
GHC.Base.liftM1_info:
	.quad	GHC.Base.liftM1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.838273061 UTC

.section .text
.align 8
_chWR:
_chWR:
	leaq block_chWT_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chWR, .-_chWR


==================== Asm code ====================
2018-03-16 15:54:56.83883655 UTC

.section .data.rel.ro
.align 8
.align 1
block_chWR_info:
	.quad	_chWR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.839511283 UTC

.section .text
.align 8
_chWT:
_chWT:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chX2
_chX1:
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chX2:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chWT, .-_chWT


==================== Asm code ====================
2018-03-16 15:54:56.840099802 UTC

.section .data.rel.ro
.align 8
.align 1
block_chWT_info:
	.quad	_chWT
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.842271992 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM1_closure
.type GHC.Base.liftM2_$sliftM1_closure, @object
GHC.Base.liftM2_$sliftM1_closure:
	.quad	GHC.Base.liftM2_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:56.842820684 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_$sliftM1_entry
.type GHC.Base.liftM2_$sliftM1_entry, @object
GHC.Base.liftM2_$sliftM1_entry:
_chXo:
	jmp GHC.Base.liftM1_entry
	.size GHC.Base.liftM2_$sliftM1_entry, .-GHC.Base.liftM2_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:56.84337018 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_$sliftM1_info
.type GHC.Base.liftM2_$sliftM1_info, @object
GHC.Base.liftM2_$sliftM1_info:
	.quad	GHC.Base.liftM2_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.848362796 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM2_closure
.type GHC.Base.liftM2_closure, @object
GHC.Base.liftM2_closure:
	.quad	GHC.Base.liftM2_info


==================== Asm code ====================
2018-03-16 15:54:56.849282727 UTC

.section .text
.align 8
sat_sgPK_entry:
_chXK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _chXL
_chXM:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chXO
_chXN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_chXO:
	movq $40,904(%r13)
_chXL:
	jmp *-8(%r13)
	.size sat_sgPK_entry, .-sat_sgPK_entry


==================== Asm code ====================
2018-03-16 15:54:56.850006996 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgPK_info:
	.quad	sat_sgPK_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.850798051 UTC

.section .text
.align 8
sat_sgPL_entry:
_chXP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chXQ
_chXR:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chXT
_chXS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sgPK_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -23(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_chXT:
	movq $32,904(%r13)
_chXQ:
	jmp *-8(%r13)
	.size sat_sgPL_entry, .-sat_sgPL_entry


==================== Asm code ====================
2018-03-16 15:54:56.851514625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgPL_info:
	.quad	sat_sgPL_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.85231631 UTC

.section .text
.align 8
.globl GHC.Base.liftM2_entry
.type GHC.Base.liftM2_entry, @object
GHC.Base.liftM2_entry:
_chXU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chXV
_chXW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _chXY
_chXX:
	leaq sat_sgPL_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -23(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_chXY:
	movq $32,904(%r13)
_chXV:
	leaq GHC.Base.liftM2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM2_entry, .-GHC.Base.liftM2_entry


==================== Asm code ====================
2018-03-16 15:54:56.853042514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM2_info
.type GHC.Base.liftM2_info, @object
GHC.Base.liftM2_info:
	.quad	GHC.Base.liftM2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:56.856438616 UTC

.section .data
.align 8
.align 1
$cliftA2_r7PG_closure:
	.quad	$cliftA2_r7PG_info


==================== Asm code ====================
2018-03-16 15:54:56.857128286 UTC

.section .text
.align 8
$cliftA2_r7PG_entry:
_chYu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _chYv
_chYw:
	leaq block_chYp_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chYv:
	leaq $cliftA2_r7PG_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $cliftA2_r7PG_entry, .-$cliftA2_r7PG_entry


==================== Asm code ====================
2018-03-16 15:54:56.858112344 UTC

.section .data.rel.ro
.align 8
.align 1
$cliftA2_r7PG_info:
	.quad	$cliftA2_r7PG_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.858703957 UTC

.section .text
.align 8
_chYp:
_chYp:
	leaq block_chYr_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chYp, .-_chYp


==================== Asm code ====================
2018-03-16 15:54:56.859276125 UTC

.section .data.rel.ro
.align 8
.align 1
block_chYp_info:
	.quad	_chYp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.860393744 UTC

.section .text
.align 8
_chYr:
_chYr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _chYA
_chYz:
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chYA:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chYr, .-_chYr


==================== Asm code ====================
2018-03-16 15:54:56.861059386 UTC

.section .data.rel.ro
.align 8
.align 1
block_chYr_info:
	.quad	_chYr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.863300884 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_$cliftA2_closure
.type GHC.Base.$fApplicativeIO_$cliftA2_closure, @object
GHC.Base.$fApplicativeIO_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:56.863900317 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO_$cliftA2_entry
.type GHC.Base.$fApplicativeIO_$cliftA2_entry, @object
GHC.Base.$fApplicativeIO_$cliftA2_entry:
_chYW:
	jmp $cliftA2_r7PG_entry
	.size GHC.Base.$fApplicativeIO_$cliftA2_entry, .-GHC.Base.$fApplicativeIO_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:56.864472486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_$cliftA2_info
.type GHC.Base.$fApplicativeIO_$cliftA2_info, @object
GHC.Base.$fApplicativeIO_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.868126705 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA1_closure
.type GHC.Base.liftA1_closure, @object
GHC.Base.liftA1_closure:
	.quad	GHC.Base.liftA1_info


==================== Asm code ====================
2018-03-16 15:54:56.868873326 UTC

.section .text
.align 8
.globl GHC.Base.liftA1_entry
.type GHC.Base.liftA1_entry, @object
GHC.Base.liftA1_entry:
_chZe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _chZf
_chZg:
	leaq block_chZ7_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_chZf:
	leaq GHC.Base.liftA1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftA1_entry, .-GHC.Base.liftA1_entry


==================== Asm code ====================
2018-03-16 15:54:56.869775349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA1_info
.type GHC.Base.liftA1_info, @object
GHC.Base.liftA1_info:
	.quad	GHC.Base.liftA1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:56.870465937 UTC

.section .text
.align 8
_chZ7:
_chZ7:
	leaq block_chZ9_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chZ7, .-_chZ7


==================== Asm code ====================
2018-03-16 15:54:56.87102617 UTC

.section .data.rel.ro
.align 8
.align 1
block_chZ7_info:
	.quad	_chZ7
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.871656809 UTC

.section .text
.align 8
_chZ9:
_chZ9:
	leaq block_chZb_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chZ9, .-_chZ9


==================== Asm code ====================
2018-03-16 15:54:56.872214312 UTC

.section .data.rel.ro
.align 8
.align 1
block_chZ9_info:
	.quad	_chZ9
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.872906378 UTC

.section .text
.align 8
_chZb:
_chZb:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _chZl
_chZk:
	movq stg_ap_4_upd_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_chZl:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chZb, .-_chZb


==================== Asm code ====================
2018-03-16 15:54:56.873582529 UTC

.section .data.rel.ro
.align 8
.align 1
block_chZb_info:
	.quad	_chZb
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.875724873 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA1_closure
.type GHC.Base.liftA3_$sliftA1_closure, @object
GHC.Base.liftA3_$sliftA1_closure:
	.quad	GHC.Base.liftA3_$sliftA1_info


==================== Asm code ====================
2018-03-16 15:54:56.87634609 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_$sliftA1_entry
.type GHC.Base.liftA3_$sliftA1_entry, @object
GHC.Base.liftA3_$sliftA1_entry:
_chZM:
	jmp GHC.Base.liftA1_entry
	.size GHC.Base.liftA3_$sliftA1_entry, .-GHC.Base.liftA3_$sliftA1_entry


==================== Asm code ====================
2018-03-16 15:54:56.876872346 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA1_info
.type GHC.Base.liftA3_$sliftA1_info, @object
GHC.Base.liftA3_$sliftA1_info:
	.quad	GHC.Base.liftA3_$sliftA1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:56.880727994 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO2_closure
.type GHC.Base.$fSemigroupIO2_closure, @object
GHC.Base.$fSemigroupIO2_closure:
	.quad	GHC.Base.$fSemigroupIO2_info


==================== Asm code ====================
2018-03-16 15:54:56.881644677 UTC

.section .text
.align 8
sat_sgQm_entry:
_ci05:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ci06
_ci07:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ci06:
	jmp *-16(%r13)
	.size sat_sgQm_entry, .-sat_sgQm_entry


==================== Asm code ====================
2018-03-16 15:54:56.88230159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQm_info:
	.quad	sat_sgQm_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:56.882960632 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO2_entry
.type GHC.Base.$fSemigroupIO2_entry, @object
GHC.Base.$fSemigroupIO2_entry:
_ci08:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci09
_ci0a:
	leaq block_chZX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci09:
	leaq GHC.Base.$fSemigroupIO2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO2_entry, .-GHC.Base.$fSemigroupIO2_entry


==================== Asm code ====================
2018-03-16 15:54:56.883596763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO2_info
.type GHC.Base.$fSemigroupIO2_info, @object
GHC.Base.$fSemigroupIO2_info:
	.quad	GHC.Base.$fSemigroupIO2_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.884246032 UTC

.section .text
.align 8
_chZX:
_chZX:
	leaq block_chZZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _chZX, .-_chZX


==================== Asm code ====================
2018-03-16 15:54:56.884804703 UTC

.section .data.rel.ro
.align 8
.align 1
block_chZX_info:
	.quad	_chZX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.885566328 UTC

.section .text
.align 8
_chZZ:
_chZZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ci0e
_ci0d:
	leaq sat_sgQm_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci0e:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _chZZ, .-_chZZ


==================== Asm code ====================
2018-03-16 15:54:56.886218296 UTC

.section .data.rel.ro
.align 8
.align 1
block_chZZ_info:
	.quad	_chZZ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.891791723 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat4_closure
.type GHC.Base.$w$csconcat4_closure, @object
GHC.Base.$w$csconcat4_closure:
	.quad	GHC.Base.$w$csconcat4_info


==================== Asm code ====================
2018-03-16 15:54:56.892567412 UTC

.section .text
.align 8
sat_sgQE_entry:
_ci11:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ci12
_ci13:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ci12:
	jmp *-16(%r13)
	.size sat_sgQE_entry, .-sat_sgQE_entry


==================== Asm code ====================
2018-03-16 15:54:56.893204338 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQE_info:
	.quad	sat_sgQE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:56.894262856 UTC

.section .text
.align 8
go_sgQr_entry:
_ci18:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ci19
_ci1a:
	leaq block_ci0N_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ci0N
_ci0O:
	movq (%rbx),%rax
	jmp *(%rax)
_ci19:
	jmp *-8(%r13)
	.size go_sgQr_entry, .-go_sgQr_entry


==================== Asm code ====================
2018-03-16 15:54:56.894906606 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgQr_info:
	.quad	go_sgQr_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.895639124 UTC

.section .text
.align 8
_ci0N:
_ci0N:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ci15
_ci16:
	leaq block_ci0T_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,24(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci15:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci0N, .-_ci0N


==================== Asm code ====================
2018-03-16 15:54:56.896282049 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci0N_info:
	.quad	_ci0N
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.89747738 UTC

.section .text
.align 8
_ci0T:
_ci0T:
	movq 8(%rbp),%rax
	leaq block_ci0V_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp go_sgQr_entry
	.size _ci0T, .-_ci0T


==================== Asm code ====================
2018-03-16 15:54:56.898118057 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci0T_info:
	.quad	_ci0T
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.89886925 UTC

.section .text
.align 8
_ci0V:
_ci0V:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ci1h
_ci1g:
	leaq sat_sgQE_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci1h:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ci0V, .-_ci0V


==================== Asm code ====================
2018-03-16 15:54:56.899479206 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci0V_info:
	.quad	_ci0V
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.900216443 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat4_entry
.type GHC.Base.$w$csconcat4_entry, @object
GHC.Base.$w$csconcat4_entry:
_ci1j:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ci1n
_ci1m:
	leaq go_sgQr_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -5(%r12),%rbx
	jmp go_sgQr_entry
_ci1n:
	movq $16,904(%r13)
	leaq GHC.Base.$w$csconcat4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat4_entry, .-GHC.Base.$w$csconcat4_entry


==================== Asm code ====================
2018-03-16 15:54:56.900867298 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat4_info
.type GHC.Base.$w$csconcat4_info, @object
GHC.Base.$w$csconcat4_info:
	.quad	GHC.Base.$w$csconcat4_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.903828151 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO1_closure
.type GHC.Base.$fSemigroupIO1_closure, @object
GHC.Base.$fSemigroupIO1_closure:
	.quad	GHC.Base.$fSemigroupIO1_info


==================== Asm code ====================
2018-03-16 15:54:56.904580547 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO1_entry
.type GHC.Base.$fSemigroupIO1_entry, @object
GHC.Base.$fSemigroupIO1_entry:
_ci25:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci26
_ci27:
	leaq block_ci22_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ci22
_ci23:
	movq (%rbx),%rax
	jmp *(%rax)
_ci26:
	leaq GHC.Base.$fSemigroupIO1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO1_entry, .-GHC.Base.$fSemigroupIO1_entry


==================== Asm code ====================
2018-03-16 15:54:56.905229268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO1_info
.type GHC.Base.$fSemigroupIO1_info, @object
GHC.Base.$fSemigroupIO1_info:
	.quad	GHC.Base.$fSemigroupIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.905928742 UTC

.section .text
.align 8
_ci22:
_ci22:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat4_entry
	.size _ci22, .-_ci22


==================== Asm code ====================
2018-03-16 15:54:56.906533023 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci22_info:
	.quad	_ci22
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.911916574 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_closure
.type GHC.Base.$fSemigroupIO_closure, @object
GHC.Base.$fSemigroupIO_closure:
	.quad	GHC.Base.$fSemigroupIO_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.912550396 UTC

.section .text
.align 8
sat_sgQO_entry:
_ci2v:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO_$cstimes_entry
	.size sat_sgQO_entry, .-sat_sgQO_entry


==================== Asm code ====================
2018-03-16 15:54:56.913087841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQO_info:
	.quad	sat_sgQO_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	Si3a_srt


==================== Asm code ====================
2018-03-16 15:54:56.913749705 UTC

.section .text
.align 8
sat_sgQN_entry:
_ci2D:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO1_entry
	.size sat_sgQN_entry, .-sat_sgQN_entry


==================== Asm code ====================
2018-03-16 15:54:56.914294761 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQN_info:
	.quad	sat_sgQN_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:56.914891934 UTC

.section .text
.align 8
sat_sgQM_entry:
_ci2L:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroupIO2_entry
	.size sat_sgQM_entry, .-sat_sgQM_entry


==================== Asm code ====================
2018-03-16 15:54:56.915455268 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQM_info:
	.quad	sat_sgQM_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:56.916275834 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO_entry
.type GHC.Base.$fSemigroupIO_entry, @object
GHC.Base.$fSemigroupIO_entry:
_ci2P:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ci2T
_ci2S:
	leaq sat_sgQO_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_sgQN_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_sgQM_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -37(%r12),%rax
	movq %rax,-16(%r12)
	leaq -54(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ci2T:
	movq $80,904(%r13)
	leaq GHC.Base.$fSemigroupIO_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO_entry, .-GHC.Base.$fSemigroupIO_entry


==================== Asm code ====================
2018-03-16 15:54:56.916986076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_info
.type GHC.Base.$fSemigroupIO_info, @object
GHC.Base.$fSemigroupIO_info:
	.quad	GHC.Base.$fSemigroupIO_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Si3a_srt


==================== Asm code ====================
2018-03-16 15:54:56.917601142 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_$cstimes_closure
.type GHC.Base.$fSemigroupIO_$cstimes_closure, @object
GHC.Base.$fSemigroupIO_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.918280737 UTC

.section .text
.align 8
sat_sgQR_entry:
_ci32:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci33
_ci34:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroupIO_entry
_ci33:
	jmp *-16(%r13)
	.size sat_sgQR_entry, .-sat_sgQR_entry


==================== Asm code ====================
2018-03-16 15:54:56.918925057 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQR_info:
	.quad	sat_sgQR_entry
	.quad	1
	.quad	4294967312
	.quad	Si3a_srt+8


==================== Asm code ====================
2018-03-16 15:54:56.919621716 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupIO_$cstimes_entry
.type GHC.Base.$fSemigroupIO_$cstimes_entry, @object
GHC.Base.$fSemigroupIO_$cstimes_entry:
_ci35:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci39
_ci38:
	leaq sat_sgQR_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	leaq -16(%r12),%rsi
	movq %rax,%r14
	movq Data.Semigroup.Internal.stimesDefault_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ci39:
	movq $24,904(%r13)
	leaq GHC.Base.$fSemigroupIO_$cstimes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupIO_$cstimes_entry, .-GHC.Base.$fSemigroupIO_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:56.920302365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupIO_$cstimes_info
.type GHC.Base.$fSemigroupIO_$cstimes_info, @object
GHC.Base.$fSemigroupIO_$cstimes_info:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	Si3a_srt


==================== Asm code ====================
2018-03-16 15:54:56.923540176 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cp1Monoid_closure
.type GHC.Base.$fMonoidIO_$cp1Monoid_closure, @object
GHC.Base.$fMonoidIO_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.924265064 UTC

.section .text
.align 8
sat_sgQT_entry:
_ci3O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci3P
_ci3Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ci3P:
	jmp *-16(%r13)
	.size sat_sgQT_entry, .-sat_sgQT_entry


==================== Asm code ====================
2018-03-16 15:54:56.924885205 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgQT_info:
	.quad	sat_sgQT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:56.925606506 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_$cp1Monoid_entry
.type GHC.Base.$fMonoidIO_$cp1Monoid_entry, @object
GHC.Base.$fMonoidIO_$cp1Monoid_entry:
_ci3R:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci3V
_ci3U:
	leaq sat_sgQT_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroupIO_entry
_ci3V:
	movq $24,904(%r13)
	leaq GHC.Base.$fMonoidIO_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO_$cp1Monoid_entry, .-GHC.Base.$fMonoidIO_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:56.926199817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cp1Monoid_info
.type GHC.Base.$fMonoidIO_$cp1Monoid_info, @object
GHC.Base.$fMonoidIO_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	Si3a_srt+8


==================== Asm code ====================
2018-03-16 15:54:56.930363461 UTC

.section .data
.align 8
.align 1
$cmappend_r7PH_closure:
	.quad	$cmappend_r7PH_info


==================== Asm code ====================
2018-03-16 15:54:56.931108895 UTC

.section .text
.align 8
sat_sgR5_entry:
_ci4k:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ci4l
_ci4m:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ci4i_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ci4l:
	jmp *-16(%r13)
	.size sat_sgR5_entry, .-sat_sgR5_entry


==================== Asm code ====================
2018-03-16 15:54:56.931760131 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgR5_info:
	.quad	sat_sgR5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:56.93235657 UTC

.section .text
.align 8
_ci4i:
_ci4i:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _ci4i, .-_ci4i


==================== Asm code ====================
2018-03-16 15:54:56.933423705 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci4i_info:
	.quad	_ci4i
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.93416661 UTC

.section .text
.align 8
$cmappend_r7PH_entry:
_ci4q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci4r
_ci4s:
	leaq block_ci4a_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci4r:
	leaq $cmappend_r7PH_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $cmappend_r7PH_entry, .-$cmappend_r7PH_entry


==================== Asm code ====================
2018-03-16 15:54:56.934786509 UTC

.section .data.rel.ro
.align 8
.align 1
$cmappend_r7PH_info:
	.quad	$cmappend_r7PH_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.935402745 UTC

.section .text
.align 8
_ci4a:
_ci4a:
	leaq block_ci4c_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci4a, .-_ci4a


==================== Asm code ====================
2018-03-16 15:54:56.935976084 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci4a_info:
	.quad	_ci4a
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.936681679 UTC

.section .text
.align 8
_ci4c:
_ci4c:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ci4w
_ci4v:
	leaq sat_sgR5_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci4w:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ci4c, .-_ci4c


==================== Asm code ====================
2018-03-16 15:54:56.937932932 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci4c_info:
	.quad	_ci4c
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.940078532 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cmappend_closure
.type GHC.Base.$fMonoidIO_$cmappend_closure, @object
GHC.Base.$fMonoidIO_$cmappend_closure:
	.quad	GHC.Base.$fMonoidIO_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:56.940699668 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_$cmappend_entry
.type GHC.Base.$fMonoidIO_$cmappend_entry, @object
GHC.Base.$fMonoidIO_$cmappend_entry:
_ci54:
	jmp $cmappend_r7PH_entry
	.size GHC.Base.$fMonoidIO_$cmappend_entry, .-GHC.Base.$fMonoidIO_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:56.941319324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_$cmappend_info
.type GHC.Base.$fMonoidIO_$cmappend_info, @object
GHC.Base.$fMonoidIO_$cmappend_info:
	.quad	GHC.Base.$fMonoidIO_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 15:54:56.943282651 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO1_closure
.type GHC.Base.$fAlternativeIO1_closure, @object
GHC.Base.$fAlternativeIO1_closure:
	.quad	GHC.Base.$fAlternativeIO1_info


==================== Asm code ====================
2018-03-16 15:54:56.943935777 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO1_entry
.type GHC.Base.$fAlternativeIO1_entry, @object
GHC.Base.$fAlternativeIO1_entry:
_ci5f:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO1_entry, .-GHC.Base.$fAlternativeIO1_entry


==================== Asm code ====================
2018-03-16 15:54:56.944532096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO1_info
.type GHC.Base.$fAlternativeIO1_info, @object
GHC.Base.$fAlternativeIO1_info:
	.quad	GHC.Base.$fAlternativeIO1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:56.948373765 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO2_closure
.type GHC.Base.$fAlternativeIO2_closure, @object
GHC.Base.$fAlternativeIO2_closure:
	.quad	GHC.Base.$fAlternativeIO2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.94910761 UTC

.section .text
.align 8
some_v_sgR9_entry:
_ci5C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci5D
_ci5E:
	leaq block_ci5x_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci5D:
	jmp *-8(%r13)
	.size some_v_sgR9_entry, .-some_v_sgR9_entry


==================== Asm code ====================
2018-03-16 15:54:56.950081691 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_sgR9_info:
	.quad	some_v_sgR9_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	Si3a_srt+32


==================== Asm code ====================
2018-03-16 15:54:56.950739113 UTC

.section .text
.align 8
_ci5x:
_ci5x:
	leaq block_ci5z_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Base.$fAlternativeIO1_closure+1(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movq GHC.IO.mplusIO_closure@gotpcrel(%rip),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _ci5x, .-_ci5x


==================== Asm code ====================
2018-03-16 15:54:56.95131751 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci5x_info:
	.quad	_ci5x
	.quad	1
	.quad	4294967326
	.quad	Si3a_srt+32


==================== Asm code ====================
2018-03-16 15:54:56.952037664 UTC

.section .text
.align 8
_ci5z:
_ci5z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci5I
_ci5H:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci5I:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ci5z, .-_ci5z


==================== Asm code ====================
2018-03-16 15:54:56.952653759 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci5z_info:
	.quad	_ci5z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.953384427 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO2_entry
.type GHC.Base.$fAlternativeIO2_entry, @object
GHC.Base.$fAlternativeIO2_entry:
_ci5J:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ci5N
_ci5M:
	leaq some_v_sgR9_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	jmp some_v_sgR9_entry
_ci5N:
	movq $16,904(%r13)
	leaq GHC.Base.$fAlternativeIO2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeIO2_entry, .-GHC.Base.$fAlternativeIO2_entry


==================== Asm code ====================
2018-03-16 15:54:56.954038882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO2_info
.type GHC.Base.$fAlternativeIO2_info, @object
GHC.Base.$fAlternativeIO2_info:
	.quad	GHC.Base.$fAlternativeIO2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Si3a_srt+32


==================== Asm code ====================
2018-03-16 15:54:56.958812322 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cmany_closure
.type GHC.Base.$fAlternativeIO_$cmany_closure, @object
GHC.Base.$fAlternativeIO_$cmany_closure:
	.quad	GHC.Base.$fAlternativeIO_$cmany_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:56.959608452 UTC

.section .text
.align 8
sat_sgRs_entry:
_ci6q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci6r
_ci6s:
	leaq block_ci6l_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci6r:
	jmp *-8(%r13)
	.size sat_sgRs_entry, .-sat_sgRs_entry


==================== Asm code ====================
2018-03-16 15:54:56.960215187 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgRs_info:
	.quad	sat_sgRs_entry
	.quad	2
	.quad	11
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:56.960842928 UTC

.section .text
.align 8
_ci6l:
_ci6l:
	leaq block_ci6n_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci6l, .-_ci6l


==================== Asm code ====================
2018-03-16 15:54:56.961436972 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci6l_info:
	.quad	_ci6l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.962156121 UTC

.section .text
.align 8
_ci6n:
_ci6n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci6w
_ci6v:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci6w:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ci6n, .-_ci6n


==================== Asm code ====================
2018-03-16 15:54:56.96275647 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci6n_info:
	.quad	_ci6n
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.963533433 UTC

.section .text
.align 8
many_v_sgRj_entry:
_ci6x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci6y
_ci6z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci6B
_ci6A:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_sgRs_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq GHC.Base.$fAlternativeIO1_closure+1(%rip),%rsi
	leaq -15(%r12),%r14
	movq GHC.IO.mplusIO_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ci6B:
	movq $24,904(%r13)
_ci6y:
	jmp *-16(%r13)
	.size many_v_sgRj_entry, .-many_v_sgRj_entry


==================== Asm code ====================
2018-03-16 15:54:56.964251426 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_sgRj_info:
	.quad	many_v_sgRj_entry
	.quad	1
	.quad	4294967312
	.quad	Si3a_srt+32


==================== Asm code ====================
2018-03-16 15:54:56.964900174 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO_$cmany_entry
.type GHC.Base.$fAlternativeIO_$cmany_entry, @object
GHC.Base.$fAlternativeIO_$cmany_entry:
_ci6C:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ci6G
_ci6F:
	leaq many_v_sgRj_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ci6G:
	movq $24,904(%r13)
	leaq GHC.Base.$fAlternativeIO_$cmany_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeIO_$cmany_entry, .-GHC.Base.$fAlternativeIO_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:56.96559303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cmany_info
.type GHC.Base.$fAlternativeIO_$cmany_info, @object
GHC.Base.$fAlternativeIO_$cmany_info:
	.quad	GHC.Base.$fAlternativeIO_$cmany_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	Si3a_srt+32


==================== Asm code ====================
2018-03-16 15:54:56.970909694 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM9_closure
.type GHC.Base.liftM9_closure, @object
GHC.Base.liftM9_closure:
	.quad	GHC.Base.liftM9_info


==================== Asm code ====================
2018-03-16 15:54:56.971748726 UTC

.section .text
.align 8
.globl GHC.Base.liftM9_entry
.type GHC.Base.liftM9_entry, @object
GHC.Base.liftM9_entry:
_ci7m:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ci7n
_ci7o:
	leaq block_ci7b_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ci7n:
	leaq GHC.Base.liftM9_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM9_entry, .-GHC.Base.liftM9_entry


==================== Asm code ====================
2018-03-16 15:54:56.972421121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM9_info
.type GHC.Base.liftM9_info, @object
GHC.Base.liftM9_info:
	.quad	GHC.Base.liftM9_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 15:54:56.973087774 UTC

.section .text
.align 8
_ci7b:
_ci7b:
	leaq block_ci7d_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci7b, .-_ci7b


==================== Asm code ====================
2018-03-16 15:54:56.973684889 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci7b_info:
	.quad	_ci7b
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.974267265 UTC

.section .text
.align 8
_ci7d:
_ci7d:
	leaq block_ci7f_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci7d, .-_ci7d


==================== Asm code ====================
2018-03-16 15:54:56.974847665 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci7d_info:
	.quad	_ci7d
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.975437518 UTC

.section .text
.align 8
_ci7f:
_ci7f:
	leaq block_ci7h_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci7f, .-_ci7f


==================== Asm code ====================
2018-03-16 15:54:56.975990841 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci7f_info:
	.quad	_ci7f
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.976615376 UTC

.section .text
.align 8
_ci7h:
_ci7h:
	leaq block_ci7j_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ci7h, .-_ci7h


==================== Asm code ====================
2018-03-16 15:54:56.977181845 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci7h_info:
	.quad	_ci7h
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.978324945 UTC

.section .text
.align 8
_ci7j:
_ci7j:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ci7v
_ci7u:
	movq stg_ap_6_upd_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ci7v:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ci7j, .-_ci7j


==================== Asm code ====================
2018-03-16 15:54:56.978972652 UTC

.section .data.rel.ro
.align 8
.align 1
block_ci7j_info:
	.quad	_ci7j
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:56.981271764 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM1_closure
.type GHC.Base.liftM5_$sliftM1_closure, @object
GHC.Base.liftM5_$sliftM1_closure:
	.quad	GHC.Base.liftM5_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:56.981919263 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_$sliftM1_entry
.type GHC.Base.liftM5_$sliftM1_entry, @object
GHC.Base.liftM5_$sliftM1_entry:
_ci86:
	jmp GHC.Base.liftM9_entry
	.size GHC.Base.liftM5_$sliftM1_entry, .-GHC.Base.liftM5_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:56.982460509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_$sliftM1_info
.type GHC.Base.liftM5_$sliftM1_info, @object
GHC.Base.liftM5_$sliftM1_info:
	.quad	GHC.Base.liftM5_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 15:54:56.991167265 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM5_closure
.type GHC.Base.liftM5_closure, @object
GHC.Base.liftM5_closure:
	.quad	GHC.Base.liftM5_info


==================== Asm code ====================
2018-03-16 15:54:56.991855881 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_slow
.type GHC.Base.liftM5_slow, @object
GHC.Base.liftM5_slow:
_ci8e:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.liftM5_entry
	.size GHC.Base.liftM5_slow, .-GHC.Base.liftM5_slow


==================== Asm code ====================
2018-03-16 15:54:56.992763466 UTC

.section .text
.align 8
sat_sgS3_entry:
_ci8I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ci8J
_ci8K:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ci8M
_ci8L:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq stg_ap_6_upd_info@gotpcrel(%rip),%r8
	movq %r8,-56(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_ci8M:
	movq $64,904(%r13)
_ci8J:
	jmp *-8(%r13)
	.size sat_sgS3_entry, .-sat_sgS3_entry


==================== Asm code ====================
2018-03-16 15:54:56.993595106 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgS3_info:
	.quad	sat_sgS3_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.994429577 UTC

.section .text
.align 8
sat_sgS4_entry:
_ci8N:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci8O
_ci8P:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ci8R
_ci8Q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_sgS3_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ci8R:
	movq $56,904(%r13)
_ci8O:
	jmp *-8(%r13)
	.size sat_sgS4_entry, .-sat_sgS4_entry


==================== Asm code ====================
2018-03-16 15:54:56.995131177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgS4_info:
	.quad	sat_sgS4_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.995955579 UTC

.section .text
.align 8
sat_sgS5_entry:
_ci8S:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci8T
_ci8U:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ci8W
_ci8V:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_sgS4_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ci8W:
	movq $56,904(%r13)
_ci8T:
	jmp *-8(%r13)
	.size sat_sgS5_entry, .-sat_sgS5_entry


==================== Asm code ====================
2018-03-16 15:54:56.996647836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgS5_info:
	.quad	sat_sgS5_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.997493019 UTC

.section .text
.align 8
sat_sgS6_entry:
_ci8X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci8Y
_ci8Z:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ci91
_ci90:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_sgS5_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ci91:
	movq $56,904(%r13)
_ci8Y:
	jmp *-8(%r13)
	.size sat_sgS6_entry, .-sat_sgS6_entry


==================== Asm code ====================
2018-03-16 15:54:56.998193825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgS6_info:
	.quad	sat_sgS6_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:56.998966861 UTC

.section .text
.align 8
sat_sgS7_entry:
_ci92:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ci93
_ci94:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ci96
_ci95:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	leaq sat_sgS6_info(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -47(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ci96:
	movq $56,904(%r13)
_ci93:
	jmp *-8(%r13)
	.size sat_sgS7_entry, .-sat_sgS7_entry


==================== Asm code ====================
2018-03-16 15:54:56.999668967 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgS7_info:
	.quad	sat_sgS7_entry
	.quad	6
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.000545934 UTC

.section .text
.align 8
.globl GHC.Base.liftM5_entry
.type GHC.Base.liftM5_entry, @object
GHC.Base.liftM5_entry:
_ci97:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ci98
_ci99:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ci9b
_ci9a:
	leaq sat_sgS7_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r9,-16(%r12)
	movq (%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rdi,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.>>=_entry
_ci9b:
	movq $56,904(%r13)
_ci98:
	leaq GHC.Base.liftM5_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.liftM5_entry, .-GHC.Base.liftM5_entry


==================== Asm code ====================
2018-03-16 15:54:57.001555183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM5_info
.type GHC.Base.liftM5_info, @object
GHC.Base.liftM5_info:
	.quad	GHC.Base.liftM5_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.liftM5_slow


==================== Asm code ====================
2018-03-16 15:54:57.005651682 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM8_closure
.type GHC.Base.liftM8_closure, @object
GHC.Base.liftM8_closure:
	.quad	GHC.Base.liftM8_info


==================== Asm code ====================
2018-03-16 15:54:57.006428526 UTC

.section .text
.align 8
.globl GHC.Base.liftM8_entry
.type GHC.Base.liftM8_entry, @object
GHC.Base.liftM8_entry:
_ciaa:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ciab
_ciac:
	leaq block_cia1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ciab:
	leaq GHC.Base.liftM8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM8_entry, .-GHC.Base.liftM8_entry


==================== Asm code ====================
2018-03-16 15:54:57.007081504 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM8_info
.type GHC.Base.liftM8_info, @object
GHC.Base.liftM8_info:
	.quad	GHC.Base.liftM8_entry
	.quad	0
	.quad	14
	.quad	25769803801


==================== Asm code ====================
2018-03-16 15:54:57.007714817 UTC

.section .text
.align 8
_cia1:
_cia1:
	leaq block_cia3_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cia1, .-_cia1


==================== Asm code ====================
2018-03-16 15:54:57.008308118 UTC

.section .data.rel.ro
.align 8
.align 1
block_cia1_info:
	.quad	_cia1
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.00889821 UTC

.section .text
.align 8
_cia3:
_cia3:
	leaq block_cia5_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cia3, .-_cia3


==================== Asm code ====================
2018-03-16 15:54:57.009517889 UTC

.section .data.rel.ro
.align 8
.align 1
block_cia3_info:
	.quad	_cia3
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.010663349 UTC

.section .text
.align 8
_cia5:
_cia5:
	leaq block_cia7_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cia5, .-_cia5


==================== Asm code ====================
2018-03-16 15:54:57.01127272 UTC

.section .data.rel.ro
.align 8
.align 1
block_cia5_info:
	.quad	_cia5
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.011979773 UTC

.section .text
.align 8
_cia7:
_cia7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciai
_ciah:
	movq stg_ap_5_upd_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciai:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cia7, .-_cia7


==================== Asm code ====================
2018-03-16 15:54:57.012635985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cia7_info:
	.quad	_cia7
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.014995668 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM1_closure
.type GHC.Base.liftM4_$sliftM1_closure, @object
GHC.Base.liftM4_$sliftM1_closure:
	.quad	GHC.Base.liftM4_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:57.015592804 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_$sliftM1_entry
.type GHC.Base.liftM4_$sliftM1_entry, @object
GHC.Base.liftM4_$sliftM1_entry:
_ciaO:
	jmp GHC.Base.liftM8_entry
	.size GHC.Base.liftM4_$sliftM1_entry, .-GHC.Base.liftM4_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:57.016133578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_$sliftM1_info
.type GHC.Base.liftM4_$sliftM1_info, @object
GHC.Base.liftM4_$sliftM1_info:
	.quad	GHC.Base.liftM4_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	25769803801


==================== Asm code ====================
2018-03-16 15:54:57.02313023 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM4_closure
.type GHC.Base.liftM4_closure, @object
GHC.Base.liftM4_closure:
	.quad	GHC.Base.liftM4_info


==================== Asm code ====================
2018-03-16 15:54:57.0240492 UTC

.section .text
.align 8
sat_sgSC_entry:
_cibk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cibl
_cibm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cibo
_cibn:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq stg_ap_5_upd_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -48(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cibo:
	movq $56,904(%r13)
_cibl:
	jmp *-8(%r13)
	.size sat_sgSC_entry, .-sat_sgSC_entry


==================== Asm code ====================
2018-03-16 15:54:57.02470694 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSC_info:
	.quad	sat_sgSC_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.025529275 UTC

.section .text
.align 8
sat_sgSD_entry:
_cibp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cibq
_cibr:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cibt
_cibs:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_sgSC_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cibt:
	movq $48,904(%r13)
_cibq:
	jmp *-8(%r13)
	.size sat_sgSD_entry, .-sat_sgSD_entry


==================== Asm code ====================
2018-03-16 15:54:57.0262346 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSD_info:
	.quad	sat_sgSD_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.026987187 UTC

.section .text
.align 8
sat_sgSE_entry:
_cibu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cibv
_cibw:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ciby
_cibx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_sgSD_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ciby:
	movq $48,904(%r13)
_cibv:
	jmp *-8(%r13)
	.size sat_sgSE_entry, .-sat_sgSE_entry


==================== Asm code ====================
2018-03-16 15:54:57.027671024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSE_info:
	.quad	sat_sgSE_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.028431288 UTC

.section .text
.align 8
sat_sgSF_entry:
_cibz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cibA
_cibB:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cibD
_cibC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_sgSE_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -39(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cibD:
	movq $48,904(%r13)
_cibA:
	jmp *-8(%r13)
	.size sat_sgSF_entry, .-sat_sgSF_entry


==================== Asm code ====================
2018-03-16 15:54:57.029152206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSF_info:
	.quad	sat_sgSF_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.030001397 UTC

.section .text
.align 8
.globl GHC.Base.liftM4_entry
.type GHC.Base.liftM4_entry, @object
GHC.Base.liftM4_entry:
_cibE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cibF
_cibG:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cibI
_cibH:
	leaq sat_sgSF_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	leaq -39(%r12),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.>>=_entry
_cibI:
	movq $48,904(%r13)
_cibF:
	leaq GHC.Base.liftM4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM4_entry, .-GHC.Base.liftM4_entry


==================== Asm code ====================
2018-03-16 15:54:57.030707739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM4_info
.type GHC.Base.liftM4_info, @object
GHC.Base.liftM4_info:
	.quad	GHC.Base.liftM4_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:57.032925477 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM1_closure
.type GHC.Base.liftM3_$sliftM1_closure, @object
GHC.Base.liftM3_$sliftM1_closure:
	.quad	GHC.Base.liftM3_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:57.033567371 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_$sliftM1_entry
.type GHC.Base.liftM3_$sliftM1_entry, @object
GHC.Base.liftM3_$sliftM1_entry:
_cico:
	jmp GHC.Base.liftA1_entry
	.size GHC.Base.liftM3_$sliftM1_entry, .-GHC.Base.liftM3_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:57.034109535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_$sliftM1_info
.type GHC.Base.liftM3_$sliftM1_info, @object
GHC.Base.liftM3_$sliftM1_info:
	.quad	GHC.Base.liftM3_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 15:54:57.039698305 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM3_closure
.type GHC.Base.liftM3_closure, @object
GHC.Base.liftM3_closure:
	.quad	GHC.Base.liftM3_info


==================== Asm code ====================
2018-03-16 15:54:57.040595746 UTC

.section .text
.align 8
sat_sgSP_entry:
_cicP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cicQ
_cicR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cicT
_cicS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq stg_ap_4_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cicT:
	movq $48,904(%r13)
_cicQ:
	jmp *-8(%r13)
	.size sat_sgSP_entry, .-sat_sgSP_entry


==================== Asm code ====================
2018-03-16 15:54:57.041363247 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSP_info:
	.quad	sat_sgSP_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.04217161 UTC

.section .text
.align 8
sat_sgSQ_entry:
_cicU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cicV
_cicW:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cicY
_cicX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sgSP_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cicY:
	movq $40,904(%r13)
_cicV:
	jmp *-8(%r13)
	.size sat_sgSQ_entry, .-sat_sgSQ_entry


==================== Asm code ====================
2018-03-16 15:54:57.042864852 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSQ_info:
	.quad	sat_sgSQ_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.043645065 UTC

.section .text
.align 8
sat_sgSR_entry:
_cicZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cid0
_cid1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cid3
_cid2:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sgSQ_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cid3:
	movq $40,904(%r13)
_cid0:
	jmp *-8(%r13)
	.size sat_sgSR_entry, .-sat_sgSR_entry


==================== Asm code ====================
2018-03-16 15:54:57.044345791 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSR_info:
	.quad	sat_sgSR_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.045139687 UTC

.section .text
.align 8
.globl GHC.Base.liftM3_entry
.type GHC.Base.liftM3_entry, @object
GHC.Base.liftM3_entry:
_cid4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cid5
_cid6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cid8
_cid7:
	leaq sat_sgSR_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cid8:
	movq $40,904(%r13)
_cid5:
	leaq GHC.Base.liftM3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM3_entry, .-GHC.Base.liftM3_entry


==================== Asm code ====================
2018-03-16 15:54:57.045874583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM3_info
.type GHC.Base.liftM3_info, @object
GHC.Base.liftM3_info:
	.quad	GHC.Base.liftM3_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.048063068 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM1_closure
.type GHC.Base.liftM_$sliftM1_closure, @object
GHC.Base.liftM_$sliftM1_closure:
	.quad	GHC.Base.liftM_$sliftM1_info


==================== Asm code ====================
2018-03-16 15:54:57.048632213 UTC

.section .text
.align 8
.globl GHC.Base.liftM_$sliftM1_entry
.type GHC.Base.liftM_$sliftM1_entry, @object
GHC.Base.liftM_$sliftM1_entry:
_cidG:
	jmp GHC.Base.$fFunctorIO2_entry
	.size GHC.Base.liftM_$sliftM1_entry, .-GHC.Base.liftM_$sliftM1_entry


==================== Asm code ====================
2018-03-16 15:54:57.049622128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_$sliftM1_info
.type GHC.Base.liftM_$sliftM1_info, @object
GHC.Base.liftM_$sliftM1_info:
	.quad	GHC.Base.liftM_$sliftM1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:57.053083752 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftM_closure
.type GHC.Base.liftM_closure, @object
GHC.Base.liftM_closure:
	.quad	GHC.Base.liftM_info


==================== Asm code ====================
2018-03-16 15:54:57.054172087 UTC

.section .text
.align 8
sat_sgSX_entry:
_cidX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cidY
_cidZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cie1
_cie0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_cie1:
	movq $32,904(%r13)
_cidY:
	jmp *-8(%r13)
	.size sat_sgSX_entry, .-sat_sgSX_entry


==================== Asm code ====================
2018-03-16 15:54:57.054845522 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgSX_info:
	.quad	sat_sgSX_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.055647878 UTC

.section .text
.align 8
.globl GHC.Base.liftM_entry
.type GHC.Base.liftM_entry, @object
GHC.Base.liftM_entry:
_cie2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cie3
_cie4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cie6
_cie5:
	leaq sat_sgSX_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cie6:
	movq $24,904(%r13)
_cie3:
	leaq GHC.Base.liftM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftM_entry, .-GHC.Base.liftM_entry


==================== Asm code ====================
2018-03-16 15:54:57.056333326 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftM_info
.type GHC.Base.liftM_info, @object
GHC.Base.liftM_info:
	.quad	GHC.Base.liftM_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.059024124 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$!_closure
.type GHC.Base.$!_closure, @object
GHC.Base.$!_closure:
	.quad	GHC.Base.$!_info


==================== Asm code ====================
2018-03-16 15:54:57.059707062 UTC

.section .text
.align 8
.globl GHC.Base.$!_entry
.type GHC.Base.$!_entry, @object
GHC.Base.$!_entry:
_cies:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciet
_cieu:
	leaq block_cieq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ciet:
	leaq GHC.Base.$!_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$!_entry, .-GHC.Base.$!_entry


==================== Asm code ====================
2018-03-16 15:54:57.060307505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$!_info
.type GHC.Base.$!_info, @object
GHC.Base.$!_info:
	.quad	GHC.Base.$!_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.060958256 UTC

.section .text
.align 8
_cieq:
_cieq:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _cieq, .-_cieq


==================== Asm code ====================
2018-03-16 15:54:57.061532711 UTC

.section .data.rel.ro
.align 8
.align 1
block_cieq_info:
	.quad	_cieq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.063652148 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$_closure
.type GHC.Base.$_closure, @object
GHC.Base.$_closure:
	.quad	GHC.Base.$_info


==================== Asm code ====================
2018-03-16 15:54:57.064315494 UTC

.section .text
.align 8
.globl GHC.Base.$_entry
.type GHC.Base.$_entry, @object
GHC.Base.$_entry:
_cieJ:
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$_entry, .-GHC.Base.$_entry


==================== Asm code ====================
2018-03-16 15:54:57.064869991 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$_info
.type GHC.Base.$_info, @object
GHC.Base.$_info:
	.quad	GHC.Base.$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.067248613 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.flip_closure
.type GHC.Base.flip_closure, @object
GHC.Base.flip_closure:
	.quad	GHC.Base.flip_info


==================== Asm code ====================
2018-03-16 15:54:57.067918989 UTC

.section .text
.align 8
.globl GHC.Base.flip_entry
.type GHC.Base.flip_entry, @object
GHC.Base.flip_entry:
_cieU:
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.flip_entry, .-GHC.Base.flip_entry


==================== Asm code ====================
2018-03-16 15:54:57.068508153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.flip_info
.type GHC.Base.flip_info, @object
GHC.Base.flip_info:
	.quad	GHC.Base.flip_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.070475905 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>_closure
.type GHC.Base.$fMonad(->)_$c>>_closure, @object
GHC.Base.$fMonad(->)_$c>>_closure:
	.quad	GHC.Base.$fMonad(->)_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:57.071093147 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(->)_$c>>_entry
.type GHC.Base.$fMonad(->)_$c>>_entry, @object
GHC.Base.$fMonad(->)_$c>>_entry:
_cif5:
	movq %rdi,%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$fMonad(->)_$c>>_entry, .-GHC.Base.$fMonad(->)_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:57.07164289 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>_info
.type GHC.Base.$fMonad(->)_$c>>_info, @object
GHC.Base.$fMonad(->)_$c>>_info:
	.quad	GHC.Base.$fMonad(->)_$c>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.073725001 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*_closure
.type GHC.Base.$fApplicative(->)_$c<*_closure, @object
GHC.Base.$fApplicative(->)_$c<*_closure:
	.quad	GHC.Base.$fApplicative(->)_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:57.074382383 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c<*_entry
.type GHC.Base.$fApplicative(->)_$c<*_entry, @object
GHC.Base.$fApplicative(->)_$c<*_entry:
_cifg:
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$fApplicative(->)_$c<*_entry, .-GHC.Base.$fApplicative(->)_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:57.074908884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*_info
.type GHC.Base.$fApplicative(->)_$c<*_info, @object
GHC.Base.$fApplicative(->)_$c<*_info:
	.quad	GHC.Base.$fApplicative(->)_$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.08018657 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>_closure
.type GHC.Base.$fMonad(,)_$c>>_closure, @object
GHC.Base.$fMonad(,)_$c>>_closure:
	.quad	GHC.Base.$fMonad(,)_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:57.080969054 UTC

.section .text
.align 8
sat_sgTm_entry:
_cifH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cifI
_cifJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cifF_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cifI:
	jmp *-16(%r13)
	.size sat_sgTm_entry, .-sat_sgTm_entry


==================== Asm code ====================
2018-03-16 15:54:57.081678372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgTm_info:
	.quad	sat_sgTm_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.082272436 UTC

.section .text
.align 8
_cifF:
_cifF:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cifF, .-_cifF


==================== Asm code ====================
2018-03-16 15:54:57.082831844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cifF_info:
	.quad	_cifF
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.08357787 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_$c>>_entry
.type GHC.Base.$fMonad(,)_$c>>_entry, @object
GHC.Base.$fMonad(,)_$c>>_entry:
_cifN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cifP
_cifQ:
	leaq block_cifr_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cifr
_cifs:
	movq (%rbx),%rax
	jmp *(%rax)
_cifP:
	leaq GHC.Base.$fMonad(,)_$c>>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_$c>>_entry, .-GHC.Base.$fMonad(,)_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:57.084719279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>_info
.type GHC.Base.$fMonad(,)_$c>>_info, @object
GHC.Base.$fMonad(,)_$c>>_info:
	.quad	GHC.Base.$fMonad(,)_$c>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.085578296 UTC

.section .text
.align 8
_cifr:
_cifr:
	leaq block_cifw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cifw
_cifx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cifr, .-_cifr


==================== Asm code ====================
2018-03-16 15:54:57.086161534 UTC

.section .data.rel.ro
.align 8
.align 1
block_cifr_info:
	.quad	_cifr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.086962161 UTC

.section .text
.align 8
_cifw:
_cifw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cifU
_cifT:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgTm_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cifU:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cifw, .-_cifw


==================== Asm code ====================
2018-03-16 15:54:57.087635783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cifw_info:
	.quad	_cifw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.092419337 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*_closure
.type GHC.Base.$fApplicative(,)_$c<*_closure, @object
GHC.Base.$fApplicative(,)_$c<*_closure:
	.quad	GHC.Base.$fApplicative(,)_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:57.093746272 UTC

.section .text
.align 8
sat_sgTx_entry:
_cigO:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cigP
_cigQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cigM_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cigP:
	jmp *-16(%r13)
	.size sat_sgTx_entry, .-sat_sgTx_entry


==================== Asm code ====================
2018-03-16 15:54:57.094369509 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgTx_info:
	.quad	sat_sgTx_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.094990982 UTC

.section .text
.align 8
_cigM:
_cigM:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cigM, .-_cigM


==================== Asm code ====================
2018-03-16 15:54:57.095581436 UTC

.section .data.rel.ro
.align 8
.align 1
block_cigM_info:
	.quad	_cigM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.096351732 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c<*_entry
.type GHC.Base.$fApplicative(,)_$c<*_entry, @object
GHC.Base.$fApplicative(,)_$c<*_entry:
_cigU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cigW
_cigX:
	leaq block_cigy_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cigy
_cigz:
	movq (%rbx),%rax
	jmp *(%rax)
_cigW:
	leaq GHC.Base.$fApplicative(,)_$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c<*_entry, .-GHC.Base.$fApplicative(,)_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:57.096977813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*_info
.type GHC.Base.$fApplicative(,)_$c<*_info, @object
GHC.Base.$fApplicative(,)_$c<*_info:
	.quad	GHC.Base.$fApplicative(,)_$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.097782054 UTC

.section .text
.align 8
_cigy:
_cigy:
	leaq block_cigD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cigD
_cigE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cigy, .-_cigy


==================== Asm code ====================
2018-03-16 15:54:57.098373628 UTC

.section .data.rel.ro
.align 8
.align 1
block_cigy_info:
	.quad	_cigy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.099152615 UTC

.section .text
.align 8
_cigD:
_cigD:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cih1
_cih0:
	movq 7(%rbx),%rax
	leaq sat_sgTx_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cih1:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cigD, .-_cigD


==================== Asm code ====================
2018-03-16 15:54:57.099815739 UTC

.section .data.rel.ro
.align 8
.align 1
block_cigD_info:
	.quad	_cigD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.103309513 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$c<$_closure
.type GHC.Base.$fFunctor(,)_$c<$_closure, @object
GHC.Base.$fFunctor(,)_$c<$_closure:
	.quad	GHC.Base.$fFunctor(,)_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:57.104088795 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(,)_$c<$_entry
.type GHC.Base.$fFunctor(,)_$c<$_entry, @object
GHC.Base.$fFunctor(,)_$c<$_entry:
_cihJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cihN
_cihO:
	leaq block_cihG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cihG
_cihH:
	movq (%rbx),%rax
	jmp *(%rax)
_cihN:
	leaq GHC.Base.$fFunctor(,)_$c<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor(,)_$c<$_entry, .-GHC.Base.$fFunctor(,)_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.104769052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$c<$_info
.type GHC.Base.$fFunctor(,)_$c<$_info, @object
GHC.Base.$fFunctor(,)_$c<$_info:
	.quad	GHC.Base.$fFunctor(,)_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.105539216 UTC

.section .text
.align 8
_cihG:
_cihG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cihR
_cihQ:
	movq 7(%rbx),%rax
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cihR:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cihG, .-_cihG


==================== Asm code ====================
2018-03-16 15:54:57.106161688 UTC

.section .data.rel.ro
.align 8
.align 1
block_cihG_info:
	.quad	_cihG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.109691013 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_$c<$_closure
.type GHC.Base.$fFunctorMaybe_$c<$_closure, @object
GHC.Base.$fFunctorMaybe_$c<$_closure:
	.quad	GHC.Base.$fFunctorMaybe_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:57.110458801 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorMaybe_$c<$_entry
.type GHC.Base.$fFunctorMaybe_$c<$_entry, @object
GHC.Base.$fFunctorMaybe_$c<$_entry:
_ciih:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciii
_ciij:
	leaq block_ciia_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciia
_ciib:
	movq (%rbx),%rax
	jmp *(%rax)
_ciii:
	leaq GHC.Base.$fFunctorMaybe_$c<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorMaybe_$c<$_entry, .-GHC.Base.$fFunctorMaybe_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.111088801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_$c<$_info
.type GHC.Base.$fFunctorMaybe_$c<$_info, @object
GHC.Base.$fFunctorMaybe_$c<$_info:
	.quad	GHC.Base.$fFunctorMaybe_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.111850637 UTC

.section .text
.align 8
_ciia:
_ciia:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciie
_ciif:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciis
_ciir:
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciis:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciie:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciia, .-_ciia


==================== Asm code ====================
2018-03-16 15:54:57.112560621 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciia_info:
	.quad	_ciia
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.115493062 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<$_closure
.type GHC.Base.$dm<$_closure, @object
GHC.Base.$dm<$_closure:
	.quad	GHC.Base.$dm<$_info


==================== Asm code ====================
2018-03-16 15:54:57.116095121 UTC

.section .text
.align 8
sat_sgTK_entry:
_ciiT:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_sgTK_entry, .-sat_sgTK_entry


==================== Asm code ====================
2018-03-16 15:54:57.116687382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgTK_info:
	.quad	sat_sgTK_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.117508838 UTC

.section .text
.align 8
.globl GHC.Base.$dm<$_entry
.type GHC.Base.$dm<$_entry, @object
GHC.Base.$dm<$_entry:
_ciiW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciiX
_ciiY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cij0
_ciiZ:
	leaq sat_sgTK_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.fmap_entry
_cij0:
	movq $16,904(%r13)
_ciiX:
	leaq GHC.Base.$dm<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dm<$_entry, .-GHC.Base.$dm<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.118265047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<$_info
.type GHC.Base.$dm<$_info, @object
GHC.Base.$dm<$_info:
	.quad	GHC.Base.$dm<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.12147252 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmappend_closure
.type GHC.Base.$fMonoid(->)_$cmappend_closure, @object
GHC.Base.$fMonoid(->)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(->)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:57.122314723 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cmappend_entry
.type GHC.Base.$fMonoid(->)_$cmappend_entry, @object
GHC.Base.$fMonoid(->)_$cmappend_entry:
_cijk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cijl
_cijm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cijo
_cijn:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	leaq block_ciji_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cijo:
	movq $64,904(%r13)
_cijl:
	leaq GHC.Base.$fMonoid(->)_$cmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cmappend_entry, .-GHC.Base.$fMonoid(->)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:57.123507806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmappend_info
.type GHC.Base.$fMonoid(->)_$cmappend_info, @object
GHC.Base.$fMonoid(->)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(->)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:57.124184223 UTC

.section .text
.align 8
_ciji:
_ciji:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Base.<>_entry
	.size _ciji, .-_ciji


==================== Asm code ====================
2018-03-16 15:54:57.124733874 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciji_info:
	.quad	_ciji
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.130589282 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmappend_closure
.type GHC.Base.$fMonoid(,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:57.131341392 UTC

.section .text
.align 8
sat_sgU5_entry:
_cik1:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cik2
_cik3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cijZ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cik2:
	jmp *-16(%r13)
	.size sat_sgU5_entry, .-sat_sgU5_entry


==================== Asm code ====================
2018-03-16 15:54:57.131995272 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgU5_info:
	.quad	sat_sgU5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.13262914 UTC

.section .text
.align 8
_cijZ:
_cijZ:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cijZ, .-_cijZ


==================== Asm code ====================
2018-03-16 15:54:57.133195318 UTC

.section .data.rel.ro
.align 8
.align 1
block_cijZ_info:
	.quad	_cijZ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.133959358 UTC

.section .text
.align 8
sat_sgU3_entry:
_cikd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cike
_cikf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cikb_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cike:
	jmp *-16(%r13)
	.size sat_sgU3_entry, .-sat_sgU3_entry


==================== Asm code ====================
2018-03-16 15:54:57.134602274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgU3_info:
	.quad	sat_sgU3_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.135200697 UTC

.section .text
.align 8
_cikb:
_cikb:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cikb, .-_cikb


==================== Asm code ====================
2018-03-16 15:54:57.135771932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cikb_info:
	.quad	_cikb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.136500268 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmappend_entry
.type GHC.Base.$fMonoid(,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,)_$cmappend_entry:
_cikj:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cikl
_cikm:
	leaq block_cijL_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cijL
_cijM:
	movq (%rbx),%rax
	jmp *(%rax)
_cikl:
	leaq GHC.Base.$fMonoid(,)_$cmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmappend_entry, .-GHC.Base.$fMonoid(,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:57.137178021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmappend_info
.type GHC.Base.$fMonoid(,)_$cmappend_info, @object
GHC.Base.$fMonoid(,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:57.137912127 UTC

.section .text
.align 8
_cijL:
_cijL:
	leaq block_cijQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cijQ
_cijR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cijL, .-_cijL


==================== Asm code ====================
2018-03-16 15:54:57.138534307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cijL_info:
	.quad	_cijL
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.139325079 UTC

.section .text
.align 8
_cijQ:
_cijQ:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cikq
_cikp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgU5_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sgU3_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cikq:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cijQ, .-_cijQ


==================== Asm code ====================
2018-03-16 15:54:57.140076077 UTC

.section .data.rel.ro
.align 8
.align 1
block_cijQ_info:
	.quad	_cijQ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.144213047 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_go_closure
.type GHC.Base.$fSemigroupOrdering_go_closure, @object
GHC.Base.$fSemigroupOrdering_go_closure:
	.quad	GHC.Base.$fSemigroupOrdering_go_info


==================== Asm code ====================
2018-03-16 15:54:57.144911497 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_go_entry
.type GHC.Base.$fSemigroupOrdering_go_entry, @object
GHC.Base.$fSemigroupOrdering_go_entry:
_cilr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cils
_uilS:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cilh
_cils:
	leaq GHC.Base.$fSemigroupOrdering_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupOrdering_go_entry, .-GHC.Base.$fSemigroupOrdering_go_entry


==================== Asm code ====================
2018-03-16 15:54:57.145875762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_go_info
.type GHC.Base.$fSemigroupOrdering_go_info, @object
GHC.Base.$fSemigroupOrdering_go_info:
	.quad	GHC.Base.$fSemigroupOrdering_go_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.146510007 UTC

.section .text
.align 8
_cilh:
_cilh:
	leaq block_cilk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cilk
_cill:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cilh, .-_cilh


==================== Asm code ====================
2018-03-16 15:54:57.147313945 UTC

.section .text
.align 8
_cilk:
_cilk:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cilo
_cilp:
	leaq block_cilz_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,8(%rbp)
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cilz
_cilB:
	movq (%rbx),%rax
	jmp *(%rax)
_cilo:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cilk, .-_cilk


==================== Asm code ====================
2018-03-16 15:54:57.147963066 UTC

.section .data.rel.ro
.align 8
.align 1
block_cilk_info:
	.quad	_cilk
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.148719835 UTC

.section .text
.align 8
_cilz:
_cilz:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uilR
_cilP:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uilR:
	cmpq $2,%rbx
	jb _cilH
_cilL:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _cilh
_cilH:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cilz, .-_cilz


==================== Asm code ====================
2018-03-16 15:54:57.149419818 UTC

.section .data.rel.ro
.align 8
.align 1
block_cilz_info:
	.quad	_cilz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.152167882 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$csconcat_closure
.type GHC.Base.$fSemigroupOrdering_$csconcat_closure, @object
GHC.Base.$fSemigroupOrdering_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.152920481 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_$csconcat_entry
.type GHC.Base.$fSemigroupOrdering_$csconcat_entry, @object
GHC.Base.$fSemigroupOrdering_$csconcat_entry:
_cimw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cimx
_cimy:
	leaq block_cimt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cimt
_cimu:
	movq (%rbx),%rax
	jmp *(%rax)
_cimx:
	leaq GHC.Base.$fSemigroupOrdering_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupOrdering_$csconcat_entry, .-GHC.Base.$fSemigroupOrdering_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.153893497 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$csconcat_info
.type GHC.Base.$fSemigroupOrdering_$csconcat_info, @object
GHC.Base.$fSemigroupOrdering_$csconcat_info:
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.154516212 UTC

.section .text
.align 8
_cimt:
_cimt:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroupOrdering_go_entry
	.size _cimt, .-_cimt


==================== Asm code ====================
2018-03-16 15:54:57.155065546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cimt_info:
	.quad	_cimt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.157551513 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.._closure
.type GHC.Base.._closure, @object
GHC.Base.._closure:
	.quad	GHC.Base.._info


==================== Asm code ====================
2018-03-16 15:54:57.158306596 UTC

.section .text
.align 8
.globl GHC.Base.._entry
.type GHC.Base.._entry, @object
GHC.Base.._entry:
_cimS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cimW
_cimV:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cimW:
	movq $32,904(%r13)
	leaq GHC.Base.._closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.._entry, .-GHC.Base.._entry


==================== Asm code ====================
2018-03-16 15:54:57.158960914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.._info
.type GHC.Base.._info, @object
GHC.Base.._info:
	.quad	GHC.Base.._entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.161843075 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mapFB_closure
.type GHC.Base.mapFB_closure, @object
GHC.Base.mapFB_closure:
	.quad	GHC.Base.mapFB_info


==================== Asm code ====================
2018-03-16 15:54:57.162577671 UTC

.section .text
.align 8
.globl GHC.Base.mapFB_entry
.type GHC.Base.mapFB_entry, @object
GHC.Base.mapFB_entry:
_cin7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cinb
_cina:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r8,%rsi
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cinb:
	movq $32,904(%r13)
	leaq GHC.Base.mapFB_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mapFB_entry, .-GHC.Base.mapFB_entry


==================== Asm code ====================
2018-03-16 15:54:57.163269622 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mapFB_info
.type GHC.Base.mapFB_info, @object
GHC.Base.mapFB_info:
	.quad	GHC.Base.mapFB_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:57.165302496 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_$c<$_closure
.type GHC.Base.$fFunctor(->)_$c<$_closure, @object
GHC.Base.$fFunctor(->)_$c<$_closure:
	.quad	GHC.Base.$fFunctor(->)_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:57.166008789 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(->)_$c<$_entry
.type GHC.Base.$fFunctor(->)_$c<$_entry, @object
GHC.Base.$fFunctor(->)_$c<$_entry:
_cinl:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.$fFunctor(->)_$c<$_entry, .-GHC.Base.$fFunctor(->)_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.166584727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_$c<$_info
.type GHC.Base.$fFunctor(->)_$c<$_info, @object
GHC.Base.$fFunctor(->)_$c<$_info:
	.quad	GHC.Base.$fFunctor(->)_$c<$_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.168299865 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(->)_closure
.type GHC.Base.$fFunctor(->)_closure, @object
GHC.Base.$fFunctor(->)_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.._closure+3
	.quad	GHC.Base.$fFunctor(->)_$c<$_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.170308665 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.const_closure
.type GHC.Base.const_closure, @object
GHC.Base.const_closure:
	.quad	GHC.Base.const_info


==================== Asm code ====================
2018-03-16 15:54:57.170959646 UTC

.section .text
.align 8
.globl GHC.Base.const_entry
.type GHC.Base.const_entry, @object
GHC.Base.const_entry:
_cinx:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.const_entry, .-GHC.Base.const_entry


==================== Asm code ====================
2018-03-16 15:54:57.171546875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.const_info
.type GHC.Base.const_info, @object
GHC.Base.const_info:
	.quad	GHC.Base.const_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.173905101 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.asTypeOf_closure
.type GHC.Base.asTypeOf_closure, @object
GHC.Base.asTypeOf_closure:
	.quad	GHC.Base.asTypeOf_info


==================== Asm code ====================
2018-03-16 15:54:57.174468823 UTC

.section .text
.align 8
.globl GHC.Base.asTypeOf_entry
.type GHC.Base.asTypeOf_entry, @object
GHC.Base.asTypeOf_entry:
_cinI:
	jmp GHC.Base.const_entry
	.size GHC.Base.asTypeOf_entry, .-GHC.Base.asTypeOf_entry


==================== Asm code ====================
2018-03-16 15:54:57.175034476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.asTypeOf_info
.type GHC.Base.asTypeOf_info, @object
GHC.Base.asTypeOf_info:
	.quad	GHC.Base.asTypeOf_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.177164806 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<*_closure
.type GHC.Base.$dm<*_closure, @object
GHC.Base.$dm<*_closure:
	.quad	GHC.Base.$dm<*_info


==================== Asm code ====================
2018-03-16 15:54:57.177960222 UTC

.section .text
.align 8
.globl GHC.Base.$dm<*_entry
.type GHC.Base.$dm<*_entry, @object
GHC.Base.$dm<*_entry:
_cinT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cinU
_cinV:
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Base.const_closure+2(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_cinU:
	leaq GHC.Base.$dm<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dm<*_entry, .-GHC.Base.$dm<*_entry


==================== Asm code ====================
2018-03-16 15:54:57.178583577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<*_info
.type GHC.Base.$dm<*_info, @object
GHC.Base.$dm<*_info:
	.quad	GHC.Base.$dm<*_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.181633519 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO1_closure
.type GHC.Base.$fApplicativeIO1_closure, @object
GHC.Base.$fApplicativeIO1_closure:
	.quad	GHC.Base.$fApplicativeIO1_info


==================== Asm code ====================
2018-03-16 15:54:57.182333289 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeIO1_entry
.type GHC.Base.$fApplicativeIO1_entry, @object
GHC.Base.$fApplicativeIO1_entry:
_ciob:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cioc
_ciod:
	leaq block_cio7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cioc:
	leaq GHC.Base.$fApplicativeIO1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeIO1_entry, .-GHC.Base.$fApplicativeIO1_entry


==================== Asm code ====================
2018-03-16 15:54:57.182953909 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO1_info
.type GHC.Base.$fApplicativeIO1_info, @object
GHC.Base.$fApplicativeIO1_info:
	.quad	GHC.Base.$fApplicativeIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:57.183620535 UTC

.section .text
.align 8
_cio7:
_cio7:
	leaq block_cio9_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cio7, .-_cio7


==================== Asm code ====================
2018-03-16 15:54:57.184201716 UTC

.section .data.rel.ro
.align 8
.align 1
block_cio7_info:
	.quad	_cio7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.184789998 UTC

.section .text
.align 8
_cio9:
_cio9:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cio9, .-_cio9


==================== Asm code ====================
2018-03-16 15:54:57.185390627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cio9_info:
	.quad	_cio9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.187127675 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeIO_closure
.type GHC.Base.$fApplicativeIO_closure, @object
GHC.Base.$fApplicativeIO_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorIO_closure+1
	.quad	GHC.Base.$fApplicativeIO4_closure+2
	.quad	GHC.Base.$fApplicativeIO3_closure+3
	.quad	GHC.Base.$fApplicativeIO_$cliftA2_closure+4
	.quad	GHC.Base.$fApplicativeIO2_closure+3
	.quad	GHC.Base.$fApplicativeIO1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.189229261 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.breakpointCond_closure
.type GHC.Base.breakpointCond_closure, @object
GHC.Base.breakpointCond_closure:
	.quad	GHC.Base.breakpointCond_info


==================== Asm code ====================
2018-03-16 15:54:57.190312686 UTC

.section .text
.align 8
.globl GHC.Base.breakpointCond_entry
.type GHC.Base.breakpointCond_entry, @object
GHC.Base.breakpointCond_entry:
_cioz:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.breakpointCond_entry, .-GHC.Base.breakpointCond_entry


==================== Asm code ====================
2018-03-16 15:54:57.19094818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.breakpointCond_info
.type GHC.Base.breakpointCond_info, @object
GHC.Base.breakpointCond_info:
	.quad	GHC.Base.breakpointCond_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.192872502 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.breakpoint_closure
.type GHC.Base.breakpoint_closure, @object
GHC.Base.breakpoint_closure:
	.quad	GHC.Base.breakpoint_info


==================== Asm code ====================
2018-03-16 15:54:57.193523872 UTC

.section .text
.align 8
.globl GHC.Base.breakpoint_entry
.type GHC.Base.breakpoint_entry, @object
GHC.Base.breakpoint_entry:
_cioK:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.breakpoint_entry, .-GHC.Base.breakpoint_entry


==================== Asm code ====================
2018-03-16 15:54:57.19405943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.breakpoint_info
.type GHC.Base.breakpoint_info, @object
GHC.Base.breakpoint_info:
	.quad	GHC.Base.breakpoint_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.196034169 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.assert_closure
.type GHC.Base.assert_closure, @object
GHC.Base.assert_closure:
	.quad	GHC.Base.assert_info


==================== Asm code ====================
2018-03-16 15:54:57.196623035 UTC

.section .text
.align 8
.globl GHC.Base.assert_entry
.type GHC.Base.assert_entry, @object
GHC.Base.assert_entry:
_cioV:
	jmp GHC.Base.breakpointCond_entry
	.size GHC.Base.assert_entry, .-GHC.Base.assert_entry


==================== Asm code ====================
2018-03-16 15:54:57.197163709 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.assert_info
.type GHC.Base.assert_info, @object
GHC.Base.assert_info:
	.quad	GHC.Base.assert_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.199649871 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.id_closure
.type GHC.Base.id_closure, @object
GHC.Base.id_closure:
	.quad	GHC.Base.id_info


==================== Asm code ====================
2018-03-16 15:54:57.200234351 UTC

.section .text
.align 8
.globl GHC.Base.id_entry
.type GHC.Base.id_entry, @object
GHC.Base.id_entry:
_cip6:
	jmp GHC.Base.breakpoint_entry
	.size GHC.Base.id_entry, .-GHC.Base.id_entry


==================== Asm code ====================
2018-03-16 15:54:57.2007888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.id_info
.type GHC.Base.id_info, @object
GHC.Base.id_info:
	.quad	GHC.Base.id_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.20303887 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.join_closure
.type GHC.Base.join_closure, @object
GHC.Base.join_closure:
	.quad	GHC.Base.join_info


==================== Asm code ====================
2018-03-16 15:54:57.203788161 UTC

.section .text
.align 8
.globl GHC.Base.join_entry
.type GHC.Base.join_entry, @object
GHC.Base.join_entry:
_ciph:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cipi
_cipj:
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq GHC.Base.breakpoint_closure+1(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cipi:
	leaq GHC.Base.join_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.join_entry, .-GHC.Base.join_entry


==================== Asm code ====================
2018-03-16 15:54:57.204460653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.join_info
.type GHC.Base.join_info, @object
GHC.Base.join_info:
	.quad	GHC.Base.join_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.206669084 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm<*>_closure
.type GHC.Base.$dm<*>_closure, @object
GHC.Base.$dm<*>_closure:
	.quad	GHC.Base.$dm<*>_info


==================== Asm code ====================
2018-03-16 15:54:57.20736196 UTC

.section .text
.align 8
.globl GHC.Base.$dm<*>_entry
.type GHC.Base.$dm<*>_entry, @object
GHC.Base.$dm<*>_entry:
_cipv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cipw
_cipx:
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Base.breakpoint_closure+1(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_cipw:
	leaq GHC.Base.$dm<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dm<*>_entry, .-GHC.Base.$dm<*>_entry


==================== Asm code ====================
2018-03-16 15:54:57.20795455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm<*>_info
.type GHC.Base.$dm<*>_info, @object
GHC.Base.$dm<*>_info:
	.quad	GHC.Base.$dm<*>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.211392622 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm*>_closure
.type GHC.Base.$dm*>_closure, @object
GHC.Base.$dm*>_closure:
	.quad	GHC.Base.$dm*>_info


==================== Asm code ====================
2018-03-16 15:54:57.212115504 UTC

.section .text
.align 8
sat_sgUO_entry:
_cipP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cipQ
_cipR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cipN_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cipQ:
	jmp *-16(%r13)
	.size sat_sgUO_entry, .-sat_sgUO_entry


==================== Asm code ====================
2018-03-16 15:54:57.21273268 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgUO_info:
	.quad	sat_sgUO_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.213716179 UTC

.section .text
.align 8
_cipN:
_cipN:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Base.breakpoint_closure+1(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.<$_entry
	.size _cipN, .-_cipN


==================== Asm code ====================
2018-03-16 15:54:57.214337494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cipN_info:
	.quad	_cipN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.215122764 UTC

.section .text
.align 8
.globl GHC.Base.$dm*>_entry
.type GHC.Base.$dm*>_entry, @object
GHC.Base.$dm*>_entry:
_cipV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cipW
_cipX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cipZ
_cipY:
	leaq sat_sgUO_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_cipZ:
	movq $32,904(%r13)
_cipW:
	leaq GHC.Base.$dm*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dm*>_entry, .-GHC.Base.$dm*>_entry


==================== Asm code ====================
2018-03-16 15:54:57.215813416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm*>_info
.type GHC.Base.$dm*>_info, @object
GHC.Base.$dm*>_info:
	.quad	GHC.Base.$dm*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.217909778 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c*>_closure
.type GHC.Base.$fApplicative(->)_$c*>_closure, @object
GHC.Base.$fApplicative(->)_$c*>_closure:
	.quad	GHC.Base.$fApplicative(->)_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:57.218566159 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c*>_entry
.type GHC.Base.$fApplicative(->)_$c*>_entry, @object
GHC.Base.$fApplicative(->)_$c*>_entry:
_ciqo:
	movq %rdi,%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$fApplicative(->)_$c*>_entry, .-GHC.Base.$fApplicative(->)_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:57.219140691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c*>_info
.type GHC.Base.$fApplicative(->)_$c*>_info, @object
GHC.Base.$fApplicative(->)_$c*>_info:
	.quad	GHC.Base.$fApplicative(->)_$c*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.221621843 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.maxInt_closure
.type GHC.Base.maxInt_closure, @object
GHC.Base.maxInt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:54:57.223219875 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.minInt_closure
.type GHC.Base.minInt_closure, @object
GHC.Base.minInt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:54:57.226212914 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.ord_closure
.type GHC.Base.ord_closure, @object
GHC.Base.ord_closure:
	.quad	GHC.Base.ord_info


==================== Asm code ====================
2018-03-16 15:54:57.227021631 UTC

.section .text
.align 8
.globl GHC.Base.ord_entry
.type GHC.Base.ord_entry, @object
GHC.Base.ord_entry:
_ciqE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ciqL
_ciqM:
	leaq block_ciqB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ciqB
_ciqC:
	movq (%rbx),%rax
	jmp *(%rax)
_ciqL:
	leaq GHC.Base.ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.ord_entry, .-GHC.Base.ord_entry


==================== Asm code ====================
2018-03-16 15:54:57.227700347 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.ord_info
.type GHC.Base.ord_info, @object
GHC.Base.ord_info:
	.quad	GHC.Base.ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.228410399 UTC

.section .text
.align 8
_ciqB:
_ciqB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciqP
_ciqO:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciqP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ciqB, .-_ciqB


==================== Asm code ====================
2018-03-16 15:54:57.229086413 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciqB_info:
	.quad	_ciqB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.232008177 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.unsafeChr_closure
.type GHC.Base.unsafeChr_closure, @object
GHC.Base.unsafeChr_closure:
	.quad	GHC.Base.unsafeChr_info


==================== Asm code ====================
2018-03-16 15:54:57.23274781 UTC

.section .text
.align 8
.globl GHC.Base.unsafeChr_entry
.type GHC.Base.unsafeChr_entry, @object
GHC.Base.unsafeChr_entry:
_cira:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cirh
_ciri:
	leaq block_cir7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cir7
_cir8:
	movq (%rbx),%rax
	jmp *(%rax)
_cirh:
	leaq GHC.Base.unsafeChr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.unsafeChr_entry, .-GHC.Base.unsafeChr_entry


==================== Asm code ====================
2018-03-16 15:54:57.233906997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.unsafeChr_info
.type GHC.Base.unsafeChr_info, @object
GHC.Base.unsafeChr_info:
	.quad	GHC.Base.unsafeChr_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.234625097 UTC

.section .text
.align 8
_cir7:
_cir7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cirl
_cirk:
	movq 7(%rbx),%rax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cirl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cir7, .-_cir7


==================== Asm code ====================
2018-03-16 15:54:57.235303246 UTC

.section .data.rel.ro
.align 8
.align 1
block_cir7_info:
	.quad	_cir7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.236910919 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.otherwise_closure
.type GHC.Base.otherwise_closure, @object
GHC.Base.otherwise_closure:
	.quad	GHC.Types.True_con_info


==================== Asm code ====================
2018-03-16 15:54:57.240456293 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.until_closure
.type GHC.Base.until_closure, @object
GHC.Base.until_closure:
	.quad	GHC.Base.until_info


==================== Asm code ====================
2018-03-16 15:54:57.241189364 UTC

.section .text
.align 8
.globl GHC.Base.until_entry
.type GHC.Base.until_entry, @object
GHC.Base.until_entry:
_cirG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cirH
_cirI:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _cirK
_cirH:
	leaq GHC.Base.until_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.until_entry, .-GHC.Base.until_entry


==================== Asm code ====================
2018-03-16 15:54:57.241855106 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.until_info
.type GHC.Base.until_info, @object
GHC.Base.until_info:
	.quad	GHC.Base.until_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.242500992 UTC

.section .text
.align 8
_cirK:
_cirK:
	leaq block_cirM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _cirK, .-_cirK


==================== Asm code ====================
2018-03-16 15:54:57.243293727 UTC

.section .text
.align 8
_cirM:
_cirM:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cirQ
_cirZ:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cirV:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cirQ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cirV
_cirU:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _cirK
	.size _cirM, .-_cirM


==================== Asm code ====================
2018-03-16 15:54:57.243935841 UTC

.section .data.rel.ro
.align 8
.align 1
block_cirM_info:
	.quad	_cirM
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.24796851 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divModInt#_closure
.type GHC.Base.divModInt#_closure, @object
GHC.Base.divModInt#_closure:
	.quad	GHC.Base.divModInt#_info


==================== Asm code ====================
2018-03-16 15:54:57.249037647 UTC

.section .text
.align 8
.globl GHC.Base.divModInt#_entry
.type GHC.Base.divModInt#_entry, @object
GHC.Base.divModInt#_entry:
_cisv:
	testq %r14,%r14
	jle _cist
_cisu:
	testq %rsi,%rsi
	jge _citc
_citd:
	leaq -1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq 1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_citc:
	testq %r14,%r14
	jge _cit0
_cita:
	testq %rsi,%rsi
	jle _cit8
_cit9:
	leaq 1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq -1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cit8:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cit0:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cist:
	testq %r14,%r14
	jge _cisF
_cisP:
	testq %rsi,%rsi
	jle _cisN
_cisO:
	leaq 1(%r14),%rax
	cqto
	idivq %rsi
	addq %rsi,%rdx
	leaq -1(%rdx),%r14
	leaq -1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cisN:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cisF:
	movq %r14,%rax
	cqto
	idivq %rsi
	movq %rdx,%r14
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.divModInt#_entry, .-GHC.Base.divModInt#_entry


==================== Asm code ====================
2018-03-16 15:54:57.250138557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divModInt#_info
.type GHC.Base.divModInt#_info, @object
GHC.Base.divModInt#_info:
	.quad	GHC.Base.divModInt#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.256614862 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.divModInt_closure
.type GHC.Base.divModInt_closure, @object
GHC.Base.divModInt_closure:
	.quad	GHC.Base.divModInt_info


==================== Asm code ====================
2018-03-16 15:54:57.257655144 UTC

.section .text
.align 8
.globl GHC.Base.divModInt_entry
.type GHC.Base.divModInt_entry, @object
GHC.Base.divModInt_entry:
_ciu9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciud
_ciue:
	leaq block_ciu6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciu6
_ciu7:
	movq (%rbx),%rax
	jmp *(%rax)
_ciud:
	leaq GHC.Base.divModInt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.divModInt_entry, .-GHC.Base.divModInt_entry


==================== Asm code ====================
2018-03-16 15:54:57.258296387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.divModInt_info
.type GHC.Base.divModInt_info, @object
GHC.Base.divModInt_info:
	.quad	GHC.Base.divModInt_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.259007017 UTC

.section .text
.align 8
_ciu6:
_ciu6:
	leaq block_ciuc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _ciuc
_ciug:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ciu6, .-_ciu6


==================== Asm code ====================
2018-03-16 15:54:57.25960755 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciu6_info:
	.quad	_ciu6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.26113953 UTC

.section .text
.align 8
_ciuc:
_ciuc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cium
_ciul:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rax,%rax
	jle _civ0
_civX:
	testq %rbx,%rbx
	jge _civF
_civW:
	decq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq 1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_civF:
	testq %rax,%rax
	jge _civc
_civD:
	testq %rbx,%rbx
	jle _civl
_civC:
	incq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_civl:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_civc:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_civ0:
	testq %rax,%rax
	jge _ciux
_ciuY:
	testq %rbx,%rbx
	jle _ciuG
_ciuX:
	incq %rax
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	addq %rbx,%rdx
	leaq -1(%rdx),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciuG:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciux:
	cqto
	idivq %rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cium:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ciuc, .-_ciuc


==================== Asm code ====================
2018-03-16 15:54:57.2630857 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciuc_info:
	.quad	_ciuc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.265731311 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.shiftL#_closure
.type GHC.Base.shiftL#_closure, @object
GHC.Base.shiftL#_closure:
	.quad	GHC.Base.shiftL#_info


==================== Asm code ====================
2018-03-16 15:54:57.266462563 UTC

.section .text
.align 8
.globl GHC.Base.shiftL#_entry
.type GHC.Base.shiftL#_entry, @object
GHC.Base.shiftL#_entry:
_cixg:
	cmpq $64,%rsi
	jl _cixe
_cixf:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_cixe:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.shiftL#_entry, .-GHC.Base.shiftL#_entry


==================== Asm code ====================
2018-03-16 15:54:57.267047077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.shiftL#_info
.type GHC.Base.shiftL#_info, @object
GHC.Base.shiftL#_info:
	.quad	GHC.Base.shiftL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.269347074 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.shiftRL#_closure
.type GHC.Base.shiftRL#_closure, @object
GHC.Base.shiftRL#_closure:
	.quad	GHC.Base.shiftRL#_info


==================== Asm code ====================
2018-03-16 15:54:57.270016896 UTC

.section .text
.align 8
.globl GHC.Base.shiftRL#_entry
.type GHC.Base.shiftRL#_entry, @object
GHC.Base.shiftRL#_entry:
_cixB:
	cmpq $64,%rsi
	jl _cixz
_cixA:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_cixz:
	movq %rsi,%rcx
	shrq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.shiftRL#_entry, .-GHC.Base.shiftRL#_entry


==================== Asm code ====================
2018-03-16 15:54:57.270620802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.shiftRL#_info
.type GHC.Base.shiftRL#_info, @object
GHC.Base.shiftRL#_info:
	.quad	GHC.Base.shiftRL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.272814918 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftL#_closure
.type GHC.Base.iShiftL#_closure, @object
GHC.Base.iShiftL#_closure:
	.quad	GHC.Base.iShiftL#_info


==================== Asm code ====================
2018-03-16 15:54:57.273519459 UTC

.section .text
.align 8
.globl GHC.Base.iShiftL#_entry
.type GHC.Base.iShiftL#_entry, @object
GHC.Base.iShiftL#_entry:
_cixW:
	cmpq $64,%rsi
	jl _cixU
_cixV:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_cixU:
	movq %rsi,%rcx
	shlq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftL#_entry, .-GHC.Base.iShiftL#_entry


==================== Asm code ====================
2018-03-16 15:54:57.274117607 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftL#_info
.type GHC.Base.iShiftL#_info, @object
GHC.Base.iShiftL#_info:
	.quad	GHC.Base.iShiftL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.276477651 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftRA#_closure
.type GHC.Base.iShiftRA#_closure, @object
GHC.Base.iShiftRA#_closure:
	.quad	GHC.Base.iShiftRA#_info


==================== Asm code ====================
2018-03-16 15:54:57.277208131 UTC

.section .text
.align 8
.globl GHC.Base.iShiftRA#_entry
.type GHC.Base.iShiftRA#_entry, @object
GHC.Base.iShiftRA#_entry:
_ciyh:
	cmpq $64,%rsi
	jl _ciyf
_ciyg:
	testq %r14,%r14
	jge _ciyq
_ciyr:
	movq $-1,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ciyq:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ciyf:
	movq %rsi,%rcx
	sarq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftRA#_entry, .-GHC.Base.iShiftRA#_entry


==================== Asm code ====================
2018-03-16 15:54:57.278014035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftRA#_info
.type GHC.Base.iShiftRA#_info, @object
GHC.Base.iShiftRA#_info:
	.quad	GHC.Base.iShiftRA#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.280175076 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.iShiftRL#_closure
.type GHC.Base.iShiftRL#_closure, @object
GHC.Base.iShiftRL#_closure:
	.quad	GHC.Base.iShiftRL#_info


==================== Asm code ====================
2018-03-16 15:54:57.280835813 UTC

.section .text
.align 8
.globl GHC.Base.iShiftRL#_entry
.type GHC.Base.iShiftRL#_entry, @object
GHC.Base.iShiftRL#_entry:
_ciyJ:
	cmpq $64,%rsi
	jl _ciyH
_ciyI:
	xorl %ebx,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_ciyH:
	movq %rsi,%rcx
	shrq %cl,%r14
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.iShiftRL#_entry, .-GHC.Base.iShiftRL#_entry


==================== Asm code ====================
2018-03-16 15:54:57.281474837 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.iShiftRL#_info
.type GHC.Base.iShiftRL#_info, @object
GHC.Base.iShiftRL#_info:
	.quad	GHC.Base.iShiftRL#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:54:57.283550053 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.build_closure
.type GHC.Base.build_closure, @object
GHC.Base.build_closure:
	.quad	GHC.Base.build_info


==================== Asm code ====================
2018-03-16 15:54:57.284198496 UTC

.section .text
.align 8
.globl GHC.Base.build_entry
.type GHC.Base.build_entry, @object
GHC.Base.build_entry:
_ciyZ:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.:_closure@gotpcrel(%rip),%rax
	movq %r14,%rbx
	leaq 2(%rax),%r14
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.build_entry, .-GHC.Base.build_entry


==================== Asm code ====================
2018-03-16 15:54:57.284811827 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.build_info
.type GHC.Base.build_info, @object
GHC.Base.build_info:
	.quad	GHC.Base.build_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.287115138 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cpure_closure
.type GHC.Base.$fApplicative[]_$cpure_closure, @object
GHC.Base.$fApplicative[]_$cpure_closure:
	.quad	GHC.Base.$fApplicative[]_$cpure_info


==================== Asm code ====================
2018-03-16 15:54:57.287819265 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$cpure_entry
.type GHC.Base.$fApplicative[]_$cpure_entry, @object
GHC.Base.$fApplicative[]_$cpure_entry:
_cizd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cizh
_cizg:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cizh:
	movq $24,904(%r13)
	leaq GHC.Base.$fApplicative[]_$cpure_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$cpure_entry, .-GHC.Base.$fApplicative[]_$cpure_entry


==================== Asm code ====================
2018-03-16 15:54:57.288444628 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cpure_info
.type GHC.Base.$fApplicative[]_$cpure_info, @object
GHC.Base.$fApplicative[]_$cpure_info:
	.quad	GHC.Base.$fApplicative[]_$cpure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.290522538 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.augment_closure
.type GHC.Base.augment_closure, @object
GHC.Base.augment_closure:
	.quad	GHC.Base.augment_info


==================== Asm code ====================
2018-03-16 15:54:57.291143909 UTC

.section .text
.align 8
.globl GHC.Base.augment_entry
.type GHC.Base.augment_entry, @object
GHC.Base.augment_entry:
_cizu:
	movq GHC.Types.:_closure@gotpcrel(%rip),%rax
	movq %r14,%rbx
	leaq 2(%rax),%r14
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.augment_entry, .-GHC.Base.augment_entry


==================== Asm code ====================
2018-03-16 15:54:57.291701751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.augment_info
.type GHC.Base.augment_info, @object
GHC.Base.augment_info:
	.quad	GHC.Base.augment_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.300976866 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.++_closure
.type GHC.Base.++_closure, @object
GHC.Base.++_closure:
	.quad	GHC.Base.++_info


==================== Asm code ====================
2018-03-16 15:54:57.302061697 UTC

.section .text
.align 8
sat_sgWW_entry:
_cizQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cizR
_cizS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cizR:
	jmp *-16(%r13)
	.size sat_sgWW_entry, .-sat_sgWW_entry


==================== Asm code ====================
2018-03-16 15:54:57.302692 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgWW_info:
	.quad	sat_sgWW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.303394576 UTC

.section .text
.align 8
.globl GHC.Base.++_entry
.type GHC.Base.++_entry, @object
GHC.Base.++_entry:
_cizX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cizY
_cizZ:
	leaq block_cizG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cizG
_cizH:
	movq (%rbx),%rax
	jmp *(%rax)
_cizY:
	leaq GHC.Base.++_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.++_entry, .-GHC.Base.++_entry


==================== Asm code ====================
2018-03-16 15:54:57.304067779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.++_info
.type GHC.Base.++_info, @object
GHC.Base.++_info:
	.quad	GHC.Base.++_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.304898593 UTC

.section .text
.align 8
_cizG:
_cizG:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cizU
_cizV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciA5
_ciA4:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	leaq sat_sgWW_info(%rip),%rdx
	movq %rdx,-48(%r12)
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciA5:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cizU:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cizG, .-_cizG


==================== Asm code ====================
2018-03-16 15:54:57.305678293 UTC

.section .data.rel.ro
.align 8
.align 1
block_cizG_info:
	.quad	_cizG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.306258747 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.foldr_closure
.type GHC.Base.foldr_closure, @object
GHC.Base.foldr_closure:
	.quad	GHC.Base.foldr_info


==================== Asm code ====================
2018-03-16 15:54:57.307054862 UTC

.section .text
.align 8
go_sgX0_entry:
_ciAn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciAo
_ciAp:
	leaq block_ciAg_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciAg
_ciAh:
	movq (%rbx),%rax
	jmp *(%rax)
_ciAo:
	jmp *-8(%r13)
	.size go_sgX0_entry, .-go_sgX0_entry


==================== Asm code ====================
2018-03-16 15:54:57.307723176 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgX0_info:
	.quad	go_sgX0_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.308447314 UTC

.section .text
.align 8
_ciAg:
_ciAg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciAk
_ciAl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ciAy
_ciAx:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ciAy:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciAk:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ciAg, .-_ciAg


==================== Asm code ====================
2018-03-16 15:54:57.309147076 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciAg_info:
	.quad	_ciAg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.309894549 UTC

.section .text
.align 8
.globl GHC.Base.foldr_entry
.type GHC.Base.foldr_entry, @object
GHC.Base.foldr_entry:
_ciAA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciAE
_ciAD:
	leaq go_sgX0_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq %rdi,%r14
	leaq -15(%r12),%rbx
	jmp go_sgX0_entry
_ciAE:
	movq $24,904(%r13)
	leaq GHC.Base.foldr_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.foldr_entry, .-GHC.Base.foldr_entry


==================== Asm code ====================
2018-03-16 15:54:57.310529895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.foldr_info
.type GHC.Base.foldr_info, @object
GHC.Base.foldr_info:
	.quad	GHC.Base.foldr_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.311082132 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.map_closure
.type GHC.Base.map_closure, @object
GHC.Base.map_closure:
	.quad	GHC.Base.map_info


==================== Asm code ====================
2018-03-16 15:54:57.311778932 UTC

.section .text
.align 8
sat_sgXc_entry:
_ciAT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciAU
_ciAV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_ciAU:
	jmp *-16(%r13)
	.size sat_sgXc_entry, .-sat_sgXc_entry


==================== Asm code ====================
2018-03-16 15:54:57.31238472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgXc_info:
	.quad	sat_sgXc_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.313074021 UTC

.section .text
.align 8
.globl GHC.Base.map_entry
.type GHC.Base.map_entry, @object
GHC.Base.map_entry:
_ciB0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciB1
_ciB2:
	leaq block_ciAJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciAJ
_ciAK:
	movq (%rbx),%rax
	jmp *(%rax)
_ciB1:
	leaq GHC.Base.map_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.map_entry, .-GHC.Base.map_entry


==================== Asm code ====================
2018-03-16 15:54:57.313765999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.map_info
.type GHC.Base.map_info, @object
GHC.Base.map_info:
	.quad	GHC.Base.map_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.314621276 UTC

.section .text
.align 8
_ciAJ:
_ciAJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciAX
_ciAY:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ciB9
_ciB8:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sgXc_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciB9:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciAX:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciAJ, .-_ciAJ


==================== Asm code ====================
2018-03-16 15:54:57.31538227 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciAJ_info:
	.quad	_ciAJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.319669311 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_closure
.type GHC.Base.$fSemigroupNonEmpty_$c<>_closure, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:57.320507197 UTC

.section .text
.align 8
sat_sgXr_entry:
_ciCv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciCw
_ciCx:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ciCz
_ciCy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ciCz:
	movq $72,904(%r13)
_ciCw:
	jmp *-16(%r13)
	.size sat_sgXr_entry, .-sat_sgXr_entry


==================== Asm code ====================
2018-03-16 15:54:57.321215305 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgXr_info:
	.quad	sat_sgXr_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.322324942 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_entry
.type GHC.Base.$fSemigroupNonEmpty_$c<>_entry, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_entry:
_ciCA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciCC
_ciCD:
	leaq block_ciCj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciCj
_ciCk:
	movq (%rbx),%rax
	jmp *(%rax)
_ciCC:
	leaq GHC.Base.$fSemigroupNonEmpty_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty_$c<>_entry, .-GHC.Base.$fSemigroupNonEmpty_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:57.322963671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$c<>_info
.type GHC.Base.$fSemigroupNonEmpty_$c<>_info, @object
GHC.Base.$fSemigroupNonEmpty_$c<>_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.323730816 UTC

.section .text
.align 8
_ciCj:
_ciCj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciCG
_ciCF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgXr_info(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciCG:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ciCj, .-_ciCj


==================== Asm code ====================
2018-03-16 15:54:57.324358252 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciCj_info:
	.quad	_ciCj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.330483813 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$wpoly_go_closure
.type GHC.Base.$wpoly_go_closure, @object
GHC.Base.$wpoly_go_closure:
	.quad	GHC.Base.$wpoly_go_info


==================== Asm code ====================
2018-03-16 15:54:57.331271568 UTC

.section .text
.align 8
ds_sgXy_entry:
_ciDs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciDy
_ciDz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ciDp_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciDp
_ciDq:
	movq (%rbx),%rax
	jmp *(%rax)
_ciDy:
	jmp *-16(%r13)
	.size ds_sgXy_entry, .-ds_sgXy_entry


==================== Asm code ====================
2018-03-16 15:54:57.331905697 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sgXy_info:
	.quad	ds_sgXy_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.332525307 UTC

.section .text
.align 8
_ciDp:
_ciDp:
	movq 8(%rbp),%rax
	leaq block_ciDv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$wpoly_go_entry
	.size _ciDp, .-_ciDp


==================== Asm code ====================
2018-03-16 15:54:57.333099341 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciDp_info:
	.quad	_ciDp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.334018965 UTC

.section .text
.align 8
_ciDv:
_ciDv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciDD
_ciDC:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciDD:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ciDv, .-_ciDv


==================== Asm code ====================
2018-03-16 15:54:57.33464383 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciDv_info:
	.quad	_ciDv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.335440637 UTC

.section .text
.align 8
sat_sgXO_entry:
_ciDI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciDJ
_ciDK:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ciDM
_ciDL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq ds_sgXy_info(%rip),%rdx
	movq %rdx,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ciDM:
	movq $104,904(%r13)
_ciDJ:
	jmp *-16(%r13)
	.size sat_sgXO_entry, .-sat_sgXO_entry


==================== Asm code ====================
2018-03-16 15:54:57.336222926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgXO_info:
	.quad	sat_sgXO_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.337002719 UTC

.section .text
.align 8
.globl GHC.Base.$wpoly_go_entry
.type GHC.Base.$wpoly_go_entry, @object
GHC.Base.$wpoly_go_entry:
_ciDR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciDS
_ciDT:
	leaq block_ciDb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ciDb
_ciDc:
	movq (%rbx),%rax
	jmp *(%rax)
_ciDS:
	leaq GHC.Base.$wpoly_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$wpoly_go_entry, .-GHC.Base.$wpoly_go_entry


==================== Asm code ====================
2018-03-16 15:54:57.337742235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$wpoly_go_info
.type GHC.Base.$wpoly_go_info, @object
GHC.Base.$wpoly_go_info:
	.quad	GHC.Base.$wpoly_go_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.339046436 UTC

.section .text
.align 8
_ciDb:
_ciDb:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _ciDO
_ciDP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ciDY
_ciDX:
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rbx
	leaq sat_sgXO_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciDY:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciDO:
	movq %rcx,%r14
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciDb, .-_ciDb


==================== Asm code ====================
2018-03-16 15:54:57.339807235 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciDb_info:
	.quad	_ciDb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.343657154 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty1_closure
.type GHC.Base.$fSemigroupNonEmpty1_closure, @object
GHC.Base.$fSemigroupNonEmpty1_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty1_info


==================== Asm code ====================
2018-03-16 15:54:57.344433943 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty1_entry
.type GHC.Base.$fSemigroupNonEmpty1_entry, @object
GHC.Base.$fSemigroupNonEmpty1_entry:
_ciEN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciET
_ciEU:
	leaq block_ciEK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciEK
_ciEL:
	movq (%rbx),%rax
	jmp *(%rax)
_ciET:
	leaq GHC.Base.$fSemigroupNonEmpty1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty1_entry, .-GHC.Base.$fSemigroupNonEmpty1_entry


==================== Asm code ====================
2018-03-16 15:54:57.345060287 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty1_info
.type GHC.Base.$fSemigroupNonEmpty1_info, @object
GHC.Base.$fSemigroupNonEmpty1_info:
	.quad	GHC.Base.$fSemigroupNonEmpty1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.345788927 UTC

.section .text
.align 8
_ciEK:
_ciEK:
	movq 8(%rbp),%rax
	leaq block_ciEQ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$wpoly_go_entry
	.size _ciEK, .-_ciEK


==================== Asm code ====================
2018-03-16 15:54:57.346413853 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciEK_info:
	.quad	_ciEK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.347144573 UTC

.section .text
.align 8
_ciEQ:
_ciEQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciEY
_ciEX:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciEY:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ciEQ, .-_ciEQ


==================== Asm code ====================
2018-03-16 15:54:57.347801618 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciEQ_info:
	.quad	_ciEQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.35057459 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_closure
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_closure, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.351348981 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_entry
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_entry, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_entry:
_ciFn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ciFo
_ciFp:
	leaq block_ciFk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ciFk
_ciFl:
	movq (%rbx),%rax
	jmp *(%rax)
_ciFo:
	leaq GHC.Base.$fSemigroupNonEmpty_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupNonEmpty_$csconcat_entry, .-GHC.Base.$fSemigroupNonEmpty_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.351978025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$csconcat_info
.type GHC.Base.$fSemigroupNonEmpty_$csconcat_info, @object
GHC.Base.$fSemigroupNonEmpty_$csconcat_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.352592861 UTC

.section .text
.align 8
_ciFk:
_ciFk:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroupNonEmpty1_entry
	.size _ciFk, .-_ciFk


==================== Asm code ====================
2018-03-16 15:54:57.353169607 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciFk_info:
	.quad	_ciFk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.355537267 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_closure
.type GHC.Base.$fSemigroupNonEmpty_closure, @object
GHC.Base.$fSemigroupNonEmpty_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fSemigroupNonEmpty_$c<>_closure+2
	.quad	GHC.Base.$fSemigroupNonEmpty_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.356122399 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_closure
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_closure, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.356797213 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_entry
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_entry, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_entry:
_ciFI:
	leaq GHC.Base.$fSemigroupNonEmpty_closure+1(%rip),%rsi
	movq Data.Semigroup.Internal.stimesDefault_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.$fSemigroupNonEmpty_$cstimes_entry, .-GHC.Base.$fSemigroupNonEmpty_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:57.357741338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupNonEmpty_$cstimes_info
.type GHC.Base.$fSemigroupNonEmpty_$cstimes_info, @object
GHC.Base.$fSemigroupNonEmpty_$cstimes_info:
	.quad	GHC.Base.$fSemigroupNonEmpty_$cstimes_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	Si3a_srt+16


==================== Asm code ====================
2018-03-16 15:54:57.361534239 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]1_closure
.type GHC.Base.$fSemigroup[]1_closure, @object
GHC.Base.$fSemigroup[]1_closure:
	.quad	GHC.Base.$fSemigroup[]1_info


==================== Asm code ====================
2018-03-16 15:54:57.362179232 UTC

.section .text
.align 8
sat_sgY7_entry:
_ciG4:
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	jmp GHC.Base.$fSemigroup[]1_entry
	.size sat_sgY7_entry, .-sat_sgY7_entry


==================== Asm code ====================
2018-03-16 15:54:57.362704256 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgY7_info:
	.quad	sat_sgY7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.363422049 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]1_entry
.type GHC.Base.$fSemigroup[]1_entry, @object
GHC.Base.$fSemigroup[]1_entry:
_ciGb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciGc
_ciGd:
	leaq block_ciFU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ciFU
_ciFV:
	movq (%rbx),%rax
	jmp *(%rax)
_ciGc:
	leaq GHC.Base.$fSemigroup[]1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup[]1_entry, .-GHC.Base.$fSemigroup[]1_entry


==================== Asm code ====================
2018-03-16 15:54:57.364050137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]1_info
.type GHC.Base.$fSemigroup[]1_info, @object
GHC.Base.$fSemigroup[]1_info:
	.quad	GHC.Base.$fSemigroup[]1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.364850682 UTC

.section .text
.align 8
_ciFU:
_ciFU:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ciG8
_ciG9:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ciGi
_ciGh:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	leaq sat_sgY7_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
_ciGi:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciG8:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ciFU, .-_ciFU


==================== Asm code ====================
2018-03-16 15:54:57.365816209 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciFU_info:
	.quad	_ciFU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.368517821 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$csconcat_closure
.type GHC.Base.$fSemigroup[]_$csconcat_closure, @object
GHC.Base.$fSemigroup[]_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup[]_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.369338268 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]_$csconcat_entry
.type GHC.Base.$fSemigroup[]_$csconcat_entry, @object
GHC.Base.$fSemigroup[]_$csconcat_entry:
_ciGJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ciGK
_ciGL:
	leaq block_ciGG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ciGG
_ciGH:
	movq (%rbx),%rax
	jmp *(%rax)
_ciGK:
	leaq GHC.Base.$fSemigroup[]_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup[]_$csconcat_entry, .-GHC.Base.$fSemigroup[]_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.369987242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$csconcat_info
.type GHC.Base.$fSemigroup[]_$csconcat_info, @object
GHC.Base.$fSemigroup[]_$csconcat_info:
	.quad	GHC.Base.$fSemigroup[]_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.370626928 UTC

.section .text
.align 8
_ciGG:
_ciGG:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Base.$fSemigroup[]1_entry
	.size _ciGG, .-_ciGG


==================== Asm code ====================
2018-03-16 15:54:57.371163874 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciGG_info:
	.quad	_ciGG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.378600358 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.mapM_closure
.type GHC.Base.mapM_closure, @object
GHC.Base.mapM_closure:
	.quad	GHC.Base.mapM_info


==================== Asm code ====================
2018-03-16 15:54:57.379507285 UTC

.section .text
.align 8
z_sgYf_entry:
_ciH8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciH9
_ciHa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.return_entry
_ciH9:
	jmp *-16(%r13)
	.size z_sgYf_entry, .-z_sgYf_entry


==================== Asm code ====================
2018-03-16 15:54:57.380170791 UTC

.section .data.rel.ro
.align 8
.align 1
z_sgYf_info:
	.quad	z_sgYf_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.380989746 UTC

.section .text
.align 8
sat_sgYq_entry:
_ciHy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciHz
_ciHA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciHC
_ciHB:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.return_entry
_ciHC:
	movq $24,904(%r13)
_ciHz:
	jmp *-8(%r13)
	.size sat_sgYq_entry, .-sat_sgYq_entry


==================== Asm code ====================
2018-03-16 15:54:57.381716024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgYq_info:
	.quad	sat_sgYq_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.382485415 UTC

.section .text
.align 8
sat_sgYr_entry:
_ciHD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciHE
_ciHF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciHH
_ciHG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sgYq_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ciHH:
	movq $24,904(%r13)
_ciHE:
	jmp *-8(%r13)
	.size sat_sgYr_entry, .-sat_sgYr_entry


==================== Asm code ====================
2018-03-16 15:54:57.383169436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgYr_info:
	.quad	sat_sgYr_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.383953709 UTC

.section .text
.align 8
go_sgYg_entry:
_ciHM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ciHN
_ciHO:
	leaq block_ciHg_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ciHg
_ciHh:
	movq (%rbx),%rax
	jmp *(%rax)
_ciHN:
	jmp *-8(%r13)
	.size go_sgYg_entry, .-go_sgYg_entry


==================== Asm code ====================
2018-03-16 15:54:57.384596815 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgYg_info:
	.quad	go_sgYg_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.385435705 UTC

.section .text
.align 8
_ciHg:
_ciHg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciHJ
_ciHK:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ciHT
_ciHS:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	leaq sat_sgYr_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	leaq -80(%r12),%rcx
	movq %rcx,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	leaq -47(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Base.>>=_entry
_ciHT:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciHJ:
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ciHg, .-_ciHg


==================== Asm code ====================
2018-03-16 15:54:57.386219638 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciHg_info:
	.quad	_ciHg
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.386935962 UTC

.section .text
.align 8
.globl GHC.Base.mapM_entry
.type GHC.Base.mapM_entry, @object
GHC.Base.mapM_entry:
_ciHW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciI0
_ciHZ:
	leaq z_sgYf_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	leaq go_sgYg_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq %rdi,%r14
	leaq -23(%r12),%rbx
	jmp go_sgYg_entry
_ciI0:
	movq $56,904(%r13)
	leaq GHC.Base.mapM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.mapM_entry, .-GHC.Base.mapM_entry


==================== Asm code ====================
2018-03-16 15:54:57.387603723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.mapM_info
.type GHC.Base.mapM_info, @object
GHC.Base.mapM_info:
	.quad	GHC.Base.mapM_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.389899329 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.sequence_closure
.type GHC.Base.sequence_closure, @object
GHC.Base.sequence_closure:
	.quad	GHC.Base.sequence_info


==================== Asm code ====================
2018-03-16 15:54:57.390548012 UTC

.section .text
.align 8
.globl GHC.Base.sequence_entry
.type GHC.Base.sequence_entry, @object
GHC.Base.sequence_entry:
_ciIS:
	movq %rsi,%rdi
	leaq GHC.Base.breakpoint_closure+1(%rip),%rsi
	jmp GHC.Base.mapM_entry
	.size GHC.Base.sequence_entry, .-GHC.Base.sequence_entry


==================== Asm code ====================
2018-03-16 15:54:57.391118716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.sequence_info
.type GHC.Base.sequence_info, @object
GHC.Base.sequence_info:
	.quad	GHC.Base.sequence_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.395737552 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmconcat_closure
.type GHC.Base.$dmmconcat_closure, @object
GHC.Base.$dmmconcat_closure:
	.quad	GHC.Base.$dmmconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.396466489 UTC

.section .text
.align 8
z_sgYv_entry:
_ciJ7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciJ8
_ciJ9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ciJ8:
	jmp *-16(%r13)
	.size z_sgYv_entry, .-z_sgYv_entry


==================== Asm code ====================
2018-03-16 15:54:57.397083942 UTC

.section .data.rel.ro
.align 8
.align 1
z_sgYv_info:
	.quad	z_sgYv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.398011345 UTC

.section .text
.align 8
go_sgYw_entry:
_ciJm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciJn
_ciJo:
	leaq block_ciJf_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciJf
_ciJg:
	movq (%rbx),%rax
	jmp *(%rax)
_ciJn:
	jmp *-8(%r13)
	.size go_sgYw_entry, .-go_sgYw_entry


==================== Asm code ====================
2018-03-16 15:54:57.398661493 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgYw_info:
	.quad	go_sgYw_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.39944281 UTC

.section .text
.align 8
_ciJf:
_ciJf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciJj
_ciJk:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ciJw
_ciJv:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Base.mappend_entry
_ciJw:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciJj:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ciJf, .-_ciJf


==================== Asm code ====================
2018-03-16 15:54:57.400127938 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciJf_info:
	.quad	_ciJf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.400810988 UTC

.section .text
.align 8
.globl GHC.Base.$dmmconcat_entry
.type GHC.Base.$dmmconcat_entry, @object
GHC.Base.$dmmconcat_entry:
_ciJz:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ciJD
_ciJC:
	leaq z_sgYv_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq go_sgYw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	leaq -15(%r12),%rbx
	jmp go_sgYw_entry
_ciJD:
	movq $48,904(%r13)
	leaq GHC.Base.$dmmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmmconcat_entry, .-GHC.Base.$dmmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.401511185 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmconcat_info
.type GHC.Base.$dmmconcat_info, @object
GHC.Base.$dmmconcat_info:
	.quad	GHC.Base.$dmmconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.40720285 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmconcat_closure
.type GHC.Base.$fMonoid(->)_$cmconcat_closure, @object
GHC.Base.$fMonoid(->)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(->)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.40794585 UTC

.section .text
.align 8
lvl3_sgYF_entry:
_ciKd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciKe
_ciKf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ciKe:
	jmp *-16(%r13)
	.size lvl3_sgYF_entry, .-lvl3_sgYF_entry


==================== Asm code ====================
2018-03-16 15:54:57.408579087 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_sgYF_info:
	.quad	lvl3_sgYF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.409298733 UTC

.section .text
.align 8
$dSemigroup_sgYG_entry:
_ciKk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciKl
_ciKm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ciKl:
	jmp *-16(%r13)
	.size $dSemigroup_sgYG_entry, .-$dSemigroup_sgYG_entry


==================== Asm code ====================
2018-03-16 15:54:57.409946471 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_sgYG_info:
	.quad	$dSemigroup_sgYG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.41075268 UTC

.section .text
.align 8
go_sgYH_entry:
_ciKz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ciKA
_ciKB:
	leaq block_ciKs_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ciKs
_ciKt:
	movq (%rbx),%rax
	jmp *(%rax)
_ciKA:
	jmp *-8(%r13)
	.size go_sgYH_entry, .-go_sgYH_entry


==================== Asm code ====================
2018-03-16 15:54:57.41137114 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgYH_info:
	.quad	go_sgYH_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.412180035 UTC

.section .text
.align 8
_ciKs:
_ciKs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciKw
_ciKx:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ciKJ
_ciKI:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-48(%r12)
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	leaq -64(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Base.<>_entry
_ciKJ:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciKw:
	movq 8(%rbp),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ciKs, .-_ciKs


==================== Asm code ====================
2018-03-16 15:54:57.41291774 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciKs_info:
	.quad	_ciKs
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.413738994 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cmconcat_entry
.type GHC.Base.$fMonoid(->)_$cmconcat_entry, @object
GHC.Base.$fMonoid(->)_$cmconcat_entry:
_ciKN:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ciKR
_ciKQ:
	leaq lvl3_sgYF_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq $dSemigroup_sgYG_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq go_sgYH_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -14(%r12),%rbx
	jmp go_sgYH_entry
_ciKR:
	movq $72,904(%r13)
	leaq GHC.Base.$fMonoid(->)_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cmconcat_entry, .-GHC.Base.$fMonoid(->)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.414418809 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cmconcat_info
.type GHC.Base.$fMonoid(->)_$cmconcat_info, @object
GHC.Base.$fMonoid(->)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(->)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.421940751 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO1_closure
.type GHC.Base.$fMonoidIO1_closure, @object
GHC.Base.$fMonoidIO1_closure:
	.quad	GHC.Base.$fMonoidIO1_info


==================== Asm code ====================
2018-03-16 15:54:57.422677528 UTC

.section .text
.align 8
$dSemigroup_sgYS_entry:
_ciLA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciLB
_ciLC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ciLB:
	jmp *-16(%r13)
	.size $dSemigroup_sgYS_entry, .-$dSemigroup_sgYS_entry


==================== Asm code ====================
2018-03-16 15:54:57.423279776 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_sgYS_info:
	.quad	$dSemigroup_sgYS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.423927041 UTC

.section .text
.align 8
lvl3_sgYT_entry:
_ciLH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciLI
_ciLJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ciLI:
	jmp *-16(%r13)
	.size lvl3_sgYT_entry, .-lvl3_sgYT_entry


==================== Asm code ====================
2018-03-16 15:54:57.42458933 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_sgYT_info:
	.quad	lvl3_sgYT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.425350263 UTC

.section .text
.align 8
sat_sgZ6_entry:
_ciM3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ciM4
_ciM5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ciM4:
	jmp *-16(%r13)
	.size sat_sgZ6_entry, .-sat_sgZ6_entry


==================== Asm code ====================
2018-03-16 15:54:57.426016138 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZ6_info:
	.quad	sat_sgZ6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.426780133 UTC

.section .text
.align 8
go_sgYU_entry:
_ciMa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciMb
_ciMc:
	leaq block_ciLP_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciLP
_ciLQ:
	movq (%rbx),%rax
	jmp *(%rax)
_ciMb:
	jmp *-8(%r13)
	.size go_sgYU_entry, .-go_sgYU_entry


==================== Asm code ====================
2018-03-16 15:54:57.427414251 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgYU_info:
	.quad	go_sgYU_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:57.428144216 UTC

.section .text
.align 8
_ciLP:
_ciLP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciM7
_ciM8:
	leaq block_ciLV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ciM7:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciLP, .-_ciLP


==================== Asm code ====================
2018-03-16 15:54:57.428737254 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciLP_info:
	.quad	_ciLP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.429647067 UTC

.section .text
.align 8
_ciLV:
_ciLV:
	leaq block_ciLX_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	jmp go_sgYU_entry
	.size _ciLV, .-_ciLV


==================== Asm code ====================
2018-03-16 15:54:57.430203215 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciLV_info:
	.quad	_ciLV
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.430919866 UTC

.section .text
.align 8
_ciLX:
_ciLX:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ciMj
_ciMi:
	leaq sat_sgZ6_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciMj:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ciLX, .-_ciLX


==================== Asm code ====================
2018-03-16 15:54:57.431542362 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciLX_info:
	.quad	_ciLX
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.432286424 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO1_entry
.type GHC.Base.$fMonoidIO1_entry, @object
GHC.Base.$fMonoidIO1_entry:
_ciMl:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ciMp
_ciMo:
	leaq $dSemigroup_sgYS_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq lvl3_sgYT_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq go_sgYU_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq %rsi,%r14
	leaq -14(%r12),%rbx
	jmp go_sgYU_entry
_ciMp:
	movq $72,904(%r13)
	leaq GHC.Base.$fMonoidIO1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO1_entry, .-GHC.Base.$fMonoidIO1_entry


==================== Asm code ====================
2018-03-16 15:54:57.43299677 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO1_info
.type GHC.Base.$fMonoidIO1_info, @object
GHC.Base.$fMonoidIO1_info:
	.quad	GHC.Base.$fMonoidIO1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:57.438192547 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_closure
.type GHC.Base.$fMonoidIO_closure, @object
GHC.Base.$fMonoidIO_closure:
	.quad	GHC.Base.$fMonoidIO_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.438884237 UTC

.section .text
.align 8
sat_sgZd_entry:
_ciNo:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidIO1_entry
	.size sat_sgZd_entry, .-sat_sgZd_entry


==================== Asm code ====================
2018-03-16 15:54:57.439467653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZd_info:
	.quad	sat_sgZd_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:54:57.44011548 UTC

.section .text
.align 8
sat_sgZc_entry:
_ciNw:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fMonoidIO_$cmappend_entry
	.size sat_sgZc_entry, .-sat_sgZc_entry


==================== Asm code ====================
2018-03-16 15:54:57.440656557 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZc_info:
	.quad	sat_sgZc_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:54:57.441400881 UTC

.section .text
.align 8
sat_sgZa_entry:
_ciNI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciNJ
_ciNK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ciNJ:
	jmp *-16(%r13)
	.size sat_sgZa_entry, .-sat_sgZa_entry


==================== Asm code ====================
2018-03-16 15:54:57.442069729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZa_info:
	.quad	sat_sgZa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.442785255 UTC

.section .text
.align 8
sat_sgZb_entry:
_ciNL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciNP
_ciNO:
	movq 7(%rbx),%rax
	leaq sat_sgZa_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ciNP:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_sgZb_entry, .-sat_sgZb_entry


==================== Asm code ====================
2018-03-16 15:54:57.443448654 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZb_info:
	.quad	sat_sgZb_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:54:57.444145156 UTC

.section .text
.align 8
sat_sgZ8_entry:
_ciNU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciNV
_ciNW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoidIO_$cp1Monoid_entry
_ciNV:
	jmp *-16(%r13)
	.size sat_sgZ8_entry, .-sat_sgZ8_entry


==================== Asm code ====================
2018-03-16 15:54:57.444729868 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZ8_info:
	.quad	sat_sgZ8_entry
	.quad	1
	.quad	4294967312
	.quad	Si3a_srt+24


==================== Asm code ====================
2018-03-16 15:54:57.445581238 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidIO_entry
.type GHC.Base.$fMonoidIO_entry, @object
GHC.Base.$fMonoidIO_entry:
_ciNY:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ciO2
_ciO1:
	leaq sat_sgZd_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_sgZc_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_sgZb_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_sgZ8_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -71(%r12),%rax
	movq %rax,-16(%r12)
	leaq -85(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ciO2:
	movq $112,904(%r13)
	leaq GHC.Base.$fMonoidIO_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidIO_entry, .-GHC.Base.$fMonoidIO_entry


==================== Asm code ====================
2018-03-16 15:54:57.446363476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidIO_info
.type GHC.Base.$fMonoidIO_info, @object
GHC.Base.$fMonoidIO_info:
	.quad	GHC.Base.$fMonoidIO_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	Si3a_srt+24


==================== Asm code ====================
2018-03-16 15:54:57.449232594 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_$c<$_closure
.type GHC.Base.$fFunctor[]_$c<$_closure, @object
GHC.Base.$fFunctor[]_$c<$_closure:
	.quad	GHC.Base.$fFunctor[]_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:57.449941525 UTC

.section .text
.align 8
sat_sgZh_entry:
_ciOL:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_sgZh_entry, .-sat_sgZh_entry


==================== Asm code ====================
2018-03-16 15:54:57.450500019 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZh_info:
	.quad	sat_sgZh_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.451231866 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor[]_$c<$_entry
.type GHC.Base.$fFunctor[]_$c<$_entry, @object
GHC.Base.$fFunctor[]_$c<$_entry:
_ciOO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciOS
_ciOR:
	leaq sat_sgZh_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.Base.map_entry
_ciOS:
	movq $16,904(%r13)
	leaq GHC.Base.$fFunctor[]_$c<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor[]_$c<$_entry, .-GHC.Base.$fFunctor[]_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.451878006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_$c<$_info
.type GHC.Base.$fFunctor[]_$c<$_info, @object
GHC.Base.$fFunctor[]_$c<$_info:
	.quad	GHC.Base.$fFunctor[]_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.45642219 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$c<$_closure
.type GHC.Base.$fFunctorNonEmpty_$c<$_closure, @object
GHC.Base.$fFunctorNonEmpty_$c<$_closure:
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_info


==================== Asm code ====================
2018-03-16 15:54:57.457685145 UTC

.section .text
.align 8
sat_sgZo_entry:
_ciPj:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_sgZo_entry, .-sat_sgZo_entry


==================== Asm code ====================
2018-03-16 15:54:57.458311688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZo_info:
	.quad	sat_sgZo_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.4590634 UTC

.section .text
.align 8
sat_sgZp_entry:
_ciPm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciPn
_ciPo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ciP9_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciP9
_ciPa:
	movq (%rbx),%rax
	jmp *(%rax)
_ciPn:
	jmp *-16(%r13)
	.size sat_sgZp_entry, .-sat_sgZp_entry


==================== Asm code ====================
2018-03-16 15:54:57.459719755 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZp_info:
	.quad	sat_sgZp_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.460446451 UTC

.section .text
.align 8
_ciP9:
_ciP9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciPr
_ciPq:
	movq 15(%rbx),%rax
	leaq sat_sgZo_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%rsi
	leaq -7(%r12),%r14
	addq $16,%rbp
	jmp GHC.Base.map_entry
_ciPr:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ciP9, .-_ciP9


==================== Asm code ====================
2018-03-16 15:54:57.461096596 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciP9_info:
	.quad	_ciP9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.46202395 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorNonEmpty_$c<$_entry
.type GHC.Base.$fFunctorNonEmpty_$c<$_entry, @object
GHC.Base.$fFunctorNonEmpty_$c<$_entry:
_ciPu:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciPy
_ciPx:
	leaq sat_sgZp_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ciPy:
	movq $56,904(%r13)
	leaq GHC.Base.$fFunctorNonEmpty_$c<$_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorNonEmpty_$c<$_entry, .-GHC.Base.$fFunctorNonEmpty_$c<$_entry


==================== Asm code ====================
2018-03-16 15:54:57.462663896 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$c<$_info
.type GHC.Base.$fFunctorNonEmpty_$c<$_info, @object
GHC.Base.$fFunctorNonEmpty_$c<$_info:
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.464412434 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor[]_closure
.type GHC.Base.$fFunctor[]_closure, @object
GHC.Base.$fFunctor[]_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.map_closure+2
	.quad	GHC.Base.$fFunctor[]_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:57.469342464 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$c>>=_closure
.type GHC.Base.$fMonad[]_$c>>=_closure, @object
GHC.Base.$fMonad[]_$c>>=_closure:
	.quad	GHC.Base.$fMonad[]_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:57.46997284 UTC

.section .text
.align 8
sat_sgZy_entry:
_ciQg:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_sgZs_entry
	.size sat_sgZy_entry, .-sat_sgZy_entry


==================== Asm code ====================
2018-03-16 15:54:57.470531193 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZy_info:
	.quad	sat_sgZy_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.471311153 UTC

.section .text
.align 8
go_sgZs_entry:
_ciQn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciQo
_ciQp:
	leaq block_ciQ6_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ciQ6
_ciQ7:
	movq (%rbx),%rax
	jmp *(%rax)
_ciQo:
	jmp *-8(%r13)
	.size go_sgZs_entry, .-go_sgZs_entry


==================== Asm code ====================
2018-03-16 15:54:57.471959948 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgZs_info:
	.quad	go_sgZs_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.472772402 UTC

.section .text
.align 8
_ciQ6:
_ciQ6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciQk
_ciQl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ciQv
_ciQu:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sgZy_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	leaq block_ciQs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ciQv:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciQk:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciQ6, .-_ciQ6


==================== Asm code ====================
2018-03-16 15:54:57.473851597 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciQ6_info:
	.quad	_ciQ6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.474452602 UTC

.section .text
.align 8
_ciQs:
_ciQs:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _ciQs, .-_ciQs


==================== Asm code ====================
2018-03-16 15:54:57.474992675 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciQs_info:
	.quad	_ciQs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.475748505 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad[]_$c>>=_entry
.type GHC.Base.$fMonad[]_$c>>=_entry, @object
GHC.Base.$fMonad[]_$c>>=_entry:
_ciQB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciQF
_ciQE:
	leaq go_sgZs_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_sgZs_entry
_ciQF:
	movq $16,904(%r13)
	leaq GHC.Base.$fMonad[]_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad[]_$c>>=_entry, .-GHC.Base.$fMonad[]_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:57.476355851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$c>>=_info
.type GHC.Base.$fMonad[]_$c>>=_info, @object
GHC.Base.$fMonad[]_$c>>=_info:
	.quad	GHC.Base.$fMonad[]_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.478661806 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.=<<_$s=<<_closure
.type GHC.Base.=<<_$s=<<_closure, @object
GHC.Base.=<<_$s=<<_closure:
	.quad	GHC.Base.=<<_$s=<<_info


==================== Asm code ====================
2018-03-16 15:54:57.479262916 UTC

.section .text
.align 8
.globl GHC.Base.=<<_$s=<<_entry
.type GHC.Base.=<<_$s=<<_entry, @object
GHC.Base.=<<_$s=<<_entry:
_ciRc:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.Base.$fMonad[]_$c>>=_entry
	.size GHC.Base.=<<_$s=<<_entry, .-GHC.Base.=<<_$s=<<_entry


==================== Asm code ====================
2018-03-16 15:54:57.479827879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.=<<_$s=<<_info
.type GHC.Base.=<<_$s=<<_info, @object
GHC.Base.=<<_$s=<<_info:
	.quad	GHC.Base.=<<_$s=<<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.482233621 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.=<<_closure
.type GHC.Base.=<<_closure, @object
GHC.Base.=<<_closure:
	.quad	GHC.Base.=<<_info


==================== Asm code ====================
2018-03-16 15:54:57.482979203 UTC

.section .text
.align 8
.globl GHC.Base.=<<_entry
.type GHC.Base.=<<_entry, @object
GHC.Base.=<<_entry:
_ciRn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciRo
_ciRp:
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_ciRo:
	leaq GHC.Base.=<<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.=<<_entry, .-GHC.Base.=<<_entry


==================== Asm code ====================
2018-03-16 15:54:57.483598512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.=<<_info
.type GHC.Base.=<<_info, @object
GHC.Base.=<<_info:
	.quad	GHC.Base.=<<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.487144146 UTC

.section .data
.align 8
.align 1
poly_go_r7PI_closure:
	.quad	poly_go_r7PI_info


==================== Asm code ====================
2018-03-16 15:54:57.487745133 UTC

.section .text
.align 8
sat_sgZI_entry:
_ciRK:
	movq 16(%rbx),%r14
	jmp poly_go_r7PI_entry
	.size sat_sgZI_entry, .-sat_sgZI_entry


==================== Asm code ====================
2018-03-16 15:54:57.488274082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sgZI_info:
	.quad	sat_sgZI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.489019505 UTC

.section .text
.align 8
poly_go_r7PI_entry:
_ciRR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ciRS
_ciRT:
	leaq block_ciRA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ciRA
_ciRB:
	movq (%rbx),%rax
	jmp *(%rax)
_ciRS:
	leaq poly_go_r7PI_closure(%rip),%rbx
	jmp *-8(%r13)
	.size poly_go_r7PI_entry, .-poly_go_r7PI_entry


==================== Asm code ====================
2018-03-16 15:54:57.489878193 UTC

.section .data.rel.ro
.align 8
.align 1
poly_go_r7PI_info:
	.quad	poly_go_r7PI_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.490616703 UTC

.section .text
.align 8
_ciRA:
_ciRA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciRO
_ciRP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciRY
_ciRX:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sgZI_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
_ciRY:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciRO:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciRA, .-_ciRA


==================== Asm code ====================
2018-03-16 15:54:57.491711055 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciRA_info:
	.quad	_ciRA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.493874542 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_$cmconcat_closure
.type GHC.Base.$fMonoid[]_$cmconcat_closure, @object
GHC.Base.$fMonoid[]_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid[]_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.494459087 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid[]_$cmconcat_entry
.type GHC.Base.$fMonoid[]_$cmconcat_entry, @object
GHC.Base.$fMonoid[]_$cmconcat_entry:
_ciSm:
	jmp poly_go_r7PI_entry
	.size GHC.Base.$fMonoid[]_$cmconcat_entry, .-GHC.Base.$fMonoid[]_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.495012987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_$cmconcat_info
.type GHC.Base.$fMonoid[]_$cmconcat_info, @object
GHC.Base.$fMonoid[]_$cmconcat_info:
	.quad	GHC.Base.$fMonoid[]_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.501008314 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*>_closure
.type GHC.Base.$fApplicative[]_$c<*>_closure, @object
GHC.Base.$fApplicative[]_$c<*>_closure:
	.quad	GHC.Base.$fApplicative[]_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:57.501923631 UTC

.section .text
.align 8
go1_sgZS_entry:
_ciSV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciSW
_ciSX:
	leaq block_ciSO_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciSO
_ciSP:
	movq (%rbx),%rax
	jmp *(%rax)
_ciSW:
	jmp *-8(%r13)
	.size go1_sgZS_entry, .-go1_sgZS_entry


==================== Asm code ====================
2018-03-16 15:54:57.502526852 UTC

.section .data.rel.ro
.align 8
.align 1
go1_sgZS_info:
	.quad	go1_sgZS_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.503320399 UTC

.section .text
.align 8
_ciSO:
_ciSO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciSS
_ciST:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ciT8
_ciT7:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciT8:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciSS:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ciSO, .-_ciSO


==================== Asm code ====================
2018-03-16 15:54:57.504053187 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciSO_info:
	.quad	_ciSO
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.504787634 UTC

.section .text
.align 8
go_sgZM_entry:
_ciTe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciTf
_ciTg:
	leaq block_ciSC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ciSC
_ciSD:
	movq (%rbx),%rax
	jmp *(%rax)
_ciTf:
	jmp *-8(%r13)
	.size go_sgZM_entry, .-go_sgZM_entry


==================== Asm code ====================
2018-03-16 15:54:57.505461532 UTC

.section .data.rel.ro
.align 8
.align 1
go_sgZM_info:
	.quad	go_sgZM_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.506255801 UTC

.section .text
.align 8
_ciSC:
_ciSC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciTb
_ciTc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciTl
_ciTk:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq go1_sgZS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_sgZS_entry
_ciTl:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciTb:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciSC, .-_ciSC


==================== Asm code ====================
2018-03-16 15:54:57.506959982 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciSC_info:
	.quad	_ciSC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.507666019 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c<*>_entry
.type GHC.Base.$fApplicative[]_$c<*>_entry, @object
GHC.Base.$fApplicative[]_$c<*>_entry:
_ciTn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciTr
_ciTq:
	leaq go_sgZM_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_sgZM_entry
_ciTr:
	movq $16,904(%r13)
	leaq GHC.Base.$fApplicative[]_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$c<*>_entry, .-GHC.Base.$fApplicative[]_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:57.50832432 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*>_info
.type GHC.Base.$fApplicative[]_$c<*>_info, @object
GHC.Base.$fApplicative[]_$c<*>_info:
	.quad	GHC.Base.$fApplicative[]_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.514974489 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cliftA2_closure
.type GHC.Base.$fApplicative[]_$cliftA2_closure, @object
GHC.Base.$fApplicative[]_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative[]_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:57.515835361 UTC

.section .text
.align 8
go1_sh08_entry:
_ciUB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ciUC
_ciUD:
	leaq block_ciUu_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ciUu
_ciUv:
	movq (%rbx),%rax
	jmp *(%rax)
_ciUC:
	jmp *-8(%r13)
	.size go1_sh08_entry, .-go1_sh08_entry


==================== Asm code ====================
2018-03-16 15:54:57.516486633 UTC

.section .data.rel.ro
.align 8
.align 1
go1_sh08_info:
	.quad	go1_sh08_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.5173607 UTC

.section .text
.align 8
_ciUu:
_ciUu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciUy
_ciUz:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ciUO
_ciUN:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciUO:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciUy:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ciUu, .-_ciUu


==================== Asm code ====================
2018-03-16 15:54:57.518093722 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciUu_info:
	.quad	_ciUu
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.518853325 UTC

.section .text
.align 8
go_sh02_entry:
_ciUU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciUV
_ciUW:
	leaq block_ciUi_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciUi
_ciUj:
	movq (%rbx),%rax
	jmp *(%rax)
_ciUV:
	jmp *-8(%r13)
	.size go_sh02_entry, .-go_sh02_entry


==================== Asm code ====================
2018-03-16 15:54:57.519506893 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh02_info:
	.quad	go_sh02_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.520332377 UTC

.section .text
.align 8
_ciUi:
_ciUi:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciUR
_ciUS:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _ciV1
_ciV0:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-56(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	leaq go1_sh08_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	leaq -23(%r12),%rbx
	addq $32,%rbp
	jmp go1_sh08_entry
_ciV1:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciUR:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciUi, .-_ciUi


==================== Asm code ====================
2018-03-16 15:54:57.52109259 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciUi_info:
	.quad	_ciUi
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.52195015 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$cliftA2_entry
.type GHC.Base.$fApplicative[]_$cliftA2_entry, @object
GHC.Base.$fApplicative[]_$cliftA2_entry:
_ciV3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciV7
_ciV6:
	leaq go_sh02_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%r14
	leaq -15(%r12),%rbx
	jmp go_sh02_entry
_ciV7:
	movq $24,904(%r13)
	leaq GHC.Base.$fApplicative[]_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$cliftA2_entry, .-GHC.Base.$fApplicative[]_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:57.522569985 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$cliftA2_info
.type GHC.Base.$fApplicative[]_$cliftA2_info, @object
GHC.Base.$fApplicative[]_$cliftA2_info:
	.quad	GHC.Base.$fApplicative[]_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.524802118 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*_closure
.type GHC.Base.$fApplicative[]_$c<*_closure, @object
GHC.Base.$fApplicative[]_$c<*_closure:
	.quad	GHC.Base.$fApplicative[]_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:57.525508463 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c<*_entry
.type GHC.Base.$fApplicative[]_$c<*_entry, @object
GHC.Base.$fApplicative[]_$c<*_entry:
_ciVV:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Base.const_closure+2(%rip),%r14
	jmp GHC.Base.$fApplicative[]_$cliftA2_entry
	.size GHC.Base.$fApplicative[]_$c<*_entry, .-GHC.Base.$fApplicative[]_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:57.526106546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c<*_info
.type GHC.Base.$fApplicative[]_$c<*_info, @object
GHC.Base.$fApplicative[]_$c<*_info:
	.quad	GHC.Base.$fApplicative[]_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.530795078 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c*>_closure
.type GHC.Base.$fApplicative[]_$c*>_closure, @object
GHC.Base.$fApplicative[]_$c*>_closure:
	.quad	GHC.Base.$fApplicative[]_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:57.531428355 UTC

.section .text
.align 8
sat_sh0m_entry:
_ciWl:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_sh0h_entry
	.size sat_sh0m_entry, .-sat_sh0m_entry


==================== Asm code ====================
2018-03-16 15:54:57.531946221 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh0m_info:
	.quad	sat_sh0m_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.532751189 UTC

.section .text
.align 8
go_sh0h_entry:
_ciWs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciWt
_ciWu:
	leaq block_ciWb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ciWb
_ciWc:
	movq (%rbx),%rax
	jmp *(%rax)
_ciWt:
	jmp *-8(%r13)
	.size go_sh0h_entry, .-go_sh0h_entry


==================== Asm code ====================
2018-03-16 15:54:57.533897339 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh0h_info:
	.quad	go_sh0h_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.534760693 UTC

.section .text
.align 8
_ciWb:
_ciWb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciWp
_ciWq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ciWz
_ciWy:
	movq 14(%rbx),%rax
	leaq sat_sh0m_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_ciWz:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciWp:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciWb, .-_ciWb


==================== Asm code ====================
2018-03-16 15:54:57.535499611 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciWb_info:
	.quad	_ciWb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.536220361 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative[]_$c*>_entry
.type GHC.Base.$fApplicative[]_$c*>_entry, @object
GHC.Base.$fApplicative[]_$c*>_entry:
_ciWB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ciWF
_ciWE:
	leaq go_sh0h_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rbx
	jmp go_sh0h_entry
_ciWF:
	movq $16,904(%r13)
	leaq GHC.Base.$fApplicative[]_$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative[]_$c*>_entry, .-GHC.Base.$fApplicative[]_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:57.536863748 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_$c*>_info
.type GHC.Base.$fApplicative[]_$c*>_info, @object
GHC.Base.$fApplicative[]_$c*>_info:
	.quad	GHC.Base.$fApplicative[]_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.538720142 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative[]_closure
.type GHC.Base.$fApplicative[]_closure, @object
GHC.Base.$fApplicative[]_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctor[]_closure+1
	.quad	GHC.Base.$fApplicative[]_$cpure_closure+1
	.quad	GHC.Base.$fApplicative[]_$c<*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicative[]_$c*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:57.543231487 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_closure
.type GHC.Base.$fFunctorNonEmpty_$cfmap_closure, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_closure:
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:57.544100747 UTC

.section .text
.align 8
sat_sh0x_entry:
_ciXf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciXg
_ciXh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ciXc_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciXc
_ciXd:
	movq (%rbx),%rax
	jmp *(%rax)
_ciXg:
	jmp *-16(%r13)
	.size sat_sh0x_entry, .-sat_sh0x_entry


==================== Asm code ====================
2018-03-16 15:54:57.544742573 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh0x_info:
	.quad	sat_sh0x_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.545652102 UTC

.section .text
.align 8
_ciXc:
_ciXc:
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.map_entry
	.size _ciXc, .-_ciXc


==================== Asm code ====================
2018-03-16 15:54:57.546174082 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciXc_info:
	.quad	_ciXc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.546926744 UTC

.section .text
.align 8
sat_sh0t_entry:
_ciXr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciXs
_ciXt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciXv
_ciXu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ciXv:
	movq $24,904(%r13)
_ciXs:
	jmp *-16(%r13)
	.size sat_sh0t_entry, .-sat_sh0t_entry


==================== Asm code ====================
2018-03-16 15:54:57.547596964 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh0t_info:
	.quad	sat_sh0t_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.548358138 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_entry
.type GHC.Base.$fFunctorNonEmpty_$cfmap_entry, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_entry:
_ciXx:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ciXB
_ciXA:
	leaq sat_sh0x_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	leaq sat_sh0t_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -80(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ciXB:
	movq $88,904(%r13)
	leaq GHC.Base.$fFunctorNonEmpty_$cfmap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctorNonEmpty_$cfmap_entry, .-GHC.Base.$fFunctorNonEmpty_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:57.549078762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_$cfmap_info
.type GHC.Base.$fFunctorNonEmpty_$cfmap_info, @object
GHC.Base.$fFunctorNonEmpty_$cfmap_info:
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.550835032 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorNonEmpty_closure
.type GHC.Base.$fFunctorNonEmpty_closure, @object
GHC.Base.$fFunctorNonEmpty_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctorNonEmpty_$cfmap_closure+2
	.quad	GHC.Base.$fFunctorNonEmpty_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:57.552438413 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]1_closure
.type GHC.Base.$fAlternative[]1_closure, @object
GHC.Base.$fAlternative[]1_closure:
	.quad	:_con_info
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:57.559946412 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$csome_closure
.type GHC.Base.$fAlternative[]_$csome_closure, @object
GHC.Base.$fAlternative[]_$csome_closure:
	.quad	GHC.Base.$fAlternative[]_$csome_info


==================== Asm code ====================
2018-03-16 15:54:57.560749779 UTC

.section .text
.align 8
ys_sh0A_entry:
_ciYg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciYh
_ciYi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Base.$fAlternative[]1_closure+2(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_ciYh:
	jmp *-16(%r13)
	.size ys_sh0A_entry, .-ys_sh0A_entry


==================== Asm code ====================
2018-03-16 15:54:57.561396286 UTC

.section .data.rel.ro
.align 8
.align 1
ys_sh0A_info:
	.quad	ys_sh0A_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.562178665 UTC

.section .text
.align 8
go1_sh0H_entry:
_ciYH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ciYI
_ciYJ:
	leaq block_ciYA_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ciYA
_ciYB:
	movq (%rbx),%rax
	jmp *(%rax)
_ciYI:
	jmp *-8(%r13)
	.size go1_sh0H_entry, .-go1_sh0H_entry


==================== Asm code ====================
2018-03-16 15:54:57.562854041 UTC

.section .data.rel.ro
.align 8
.align 1
go1_sh0H_info:
	.quad	go1_sh0H_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.563718672 UTC

.section .text
.align 8
_ciYA:
_ciYA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciYE
_ciYF:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ciYU
_ciYT:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ciYU:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciYE:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ciYA, .-_ciYA


==================== Asm code ====================
2018-03-16 15:54:57.564486965 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciYA_info:
	.quad	_ciYA
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.565234622 UTC

.section .text
.align 8
go_sh0B_entry:
_ciZ0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ciZ1
_ciZ2:
	leaq block_ciYo_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ciYo
_ciYp:
	movq (%rbx),%rax
	jmp *(%rax)
_ciZ1:
	jmp *-8(%r13)
	.size go_sh0B_entry, .-go_sh0B_entry


==================== Asm code ====================
2018-03-16 15:54:57.565900813 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh0B_info:
	.quad	go_sh0B_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.566730412 UTC

.section .text
.align 8
_ciYo:
_ciYo:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ciYX
_ciYY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ciZ7
_ciZ6:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq go1_sh0H_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_sh0H_entry
_ciZ7:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ciYX:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ciYo, .-_ciYo


==================== Asm code ====================
2018-03-16 15:54:57.567430817 UTC

.section .data.rel.ro
.align 8
.align 1
block_ciYo_info:
	.quad	_ciYo
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.568227163 UTC

.section .text
.align 8
some_v_sh0z_entry:
_ciZ9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ciZa
_ciZb:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ciZd
_ciZc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq ys_sh0A_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-16(%r12)
	leaq go_sh0B_info(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -32(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp go_sh0B_entry
_ciZd:
	movq $40,904(%r13)
_ciZa:
	jmp *-16(%r13)
	.size some_v_sh0z_entry, .-some_v_sh0z_entry


==================== Asm code ====================
2018-03-16 15:54:57.568924206 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_sh0z_info:
	.quad	some_v_sh0z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.569728188 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternative[]_$csome_entry
.type GHC.Base.$fAlternative[]_$csome_entry, @object
GHC.Base.$fAlternative[]_$csome_entry:
_ciZe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ciZi
_ciZh:
	leaq some_v_sh0z_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_ciZi:
	movq $24,904(%r13)
	leaq GHC.Base.$fAlternative[]_$csome_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternative[]_$csome_entry, .-GHC.Base.$fAlternative[]_$csome_entry


==================== Asm code ====================
2018-03-16 15:54:57.570370477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$csome_info
.type GHC.Base.$fAlternative[]_$csome_info, @object
GHC.Base.$fAlternative[]_$csome_info:
	.quad	GHC.Base.$fAlternative[]_$csome_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.578296391 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$cmany_closure
.type GHC.Base.$fAlternative[]_$cmany_closure, @object
GHC.Base.$fAlternative[]_$cmany_closure:
	.quad	GHC.Base.$fAlternative[]_$cmany_info


==================== Asm code ====================
2018-03-16 15:54:57.579196199 UTC

.section .text
.align 8
go1_sh0W_entry:
_cj0L:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cj0M
_cj0N:
	leaq block_cj0E_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cj0E
_cj0F:
	movq (%rbx),%rax
	jmp *(%rax)
_cj0M:
	jmp *-8(%r13)
	.size go1_sh0W_entry, .-go1_sh0W_entry


==================== Asm code ====================
2018-03-16 15:54:57.579842994 UTC

.section .data.rel.ro
.align 8
.align 1
go1_sh0W_info:
	.quad	go1_sh0W_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.58069721 UTC

.section .text
.align 8
_cj0E:
_cj0E:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cj0I
_cj0J:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cj0Y
_cj0X:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-72(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -38(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cj0Y:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cj0I:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cj0E, .-_cj0E


==================== Asm code ====================
2018-03-16 15:54:57.581717175 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj0E_info:
	.quad	_cj0E
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.582444778 UTC

.section .text
.align 8
go_sh0Q_entry:
_cj14:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cj15
_cj16:
	leaq block_cj0s_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cj0s
_cj0t:
	movq (%rbx),%rax
	jmp *(%rax)
_cj15:
	jmp *-8(%r13)
	.size go_sh0Q_entry, .-go_sh0Q_entry


==================== Asm code ====================
2018-03-16 15:54:57.58309554 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh0Q_info:
	.quad	go_sh0Q_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.583922109 UTC

.section .text
.align 8
_cj0s:
_cj0s:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cj11
_cj12:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cj1b
_cj1a:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq go1_sh0W_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	leaq -15(%r12),%rbx
	addq $24,%rbp
	jmp go1_sh0W_entry
_cj1b:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cj11:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cj0s, .-_cj0s


==================== Asm code ====================
2018-03-16 15:54:57.584644258 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj0s_info:
	.quad	_cj0s
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.585456909 UTC

.section .text
.align 8
many_v_sh0P_entry:
_cj1f:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cj1g
_cj1h:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cj1j
_cj1i:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq go_sh0Q_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_cj1d_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $-24,%rbp
	jmp go_sh0Q_entry
_cj1j:
	movq $16,904(%r13)
_cj1g:
	jmp *-16(%r13)
	.size many_v_sh0P_entry, .-many_v_sh0P_entry


==================== Asm code ====================
2018-03-16 15:54:57.586236675 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_sh0P_info:
	.quad	many_v_sh0P_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.586850459 UTC

.section .text
.align 8
_cj1d:
_cj1d:
	leaq GHC.Base.$fAlternative[]1_closure+2(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
	.size _cj1d, .-_cj1d


==================== Asm code ====================
2018-03-16 15:54:57.587463232 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj1d_info:
	.quad	_cj1d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.588155368 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternative[]_$cmany_entry
.type GHC.Base.$fAlternative[]_$cmany_entry, @object
GHC.Base.$fAlternative[]_$cmany_entry:
_cj1n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cj1r
_cj1q:
	leaq many_v_sh0P_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_cj1r:
	movq $24,904(%r13)
	leaq GHC.Base.$fAlternative[]_$cmany_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternative[]_$cmany_entry, .-GHC.Base.$fAlternative[]_$cmany_entry


==================== Asm code ====================
2018-03-16 15:54:57.588824219 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_$cmany_info
.type GHC.Base.$fAlternative[]_$cmany_info, @object
GHC.Base.$fAlternative[]_$cmany_info:
	.quad	GHC.Base.$fAlternative[]_$cmany_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.590715389 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternative[]_closure
.type GHC.Base.$fAlternative[]_closure, @object
GHC.Base.$fAlternative[]_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicative[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fAlternative[]_$csome_closure+1
	.quad	GHC.Base.$fAlternative[]_$cmany_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:57.599371724 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c>>=_closure
.type GHC.Base.$w$c>>=_closure, @object
GHC.Base.$w$c>>=_closure:
	.quad	GHC.Base.$w$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:57.600215671 UTC

.section .text
.align 8
ds_sh16_entry:
_cj2v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cj2w
_cj2x:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cj2z
_cj2y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cj2z:
	movq $24,904(%r13)
_cj2w:
	jmp *-16(%r13)
	.size ds_sh16_entry, .-ds_sh16_entry


==================== Asm code ====================
2018-03-16 15:54:57.600895267 UTC

.section .data.rel.ro
.align 8
.align 1
ds_sh16_info:
	.quad	ds_sh16_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.601735097 UTC

.section .text
.align 8
sat_sh1A_entry:
_cj38:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp go_sh1l_entry
	.size sat_sh1A_entry, .-sat_sh1A_entry


==================== Asm code ====================
2018-03-16 15:54:57.602312821 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh1A_info:
	.quad	sat_sh1A_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.60308982 UTC

.section .text
.align 8
go_sh1l_entry:
_cj3f:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cj3g
_cj3h:
	leaq block_cj2X_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cj2X
_cj2Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cj3g:
	jmp *-8(%r13)
	.size go_sh1l_entry, .-go_sh1l_entry


==================== Asm code ====================
2018-03-16 15:54:57.603719831 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh1l_info:
	.quad	go_sh1l_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.604614389 UTC

.section .text
.align 8
_cj2X:
_cj2X:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cj3c
_cj3d:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cj3p
_cj3o:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-128(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-112(%r12)
	movq %rax,-104(%r12)
	leaq sat_sh1A_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 16(%rbp),%rax
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -128(%r12),%rax
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -96(%r12),%rsi
	leaq -14(%r12),%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cj3p:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cj3c:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cj2X, .-_cj2X


==================== Asm code ====================
2018-03-16 15:54:57.605460947 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj2X_info:
	.quad	_cj2X
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.606216869 UTC

.section .text
.align 8
sat_sh1B_entry:
_cj3r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cj3s
_cj3t:
	leaq block_cj2N_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cj2N
_cj2O:
	movq (%rbx),%rax
	jmp *(%rax)
_cj3s:
	jmp *-16(%r13)
	.size sat_sh1B_entry, .-sat_sh1B_entry


==================== Asm code ====================
2018-03-16 15:54:57.6068336 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh1B_info:
	.quad	sat_sh1B_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.60747947 UTC

.section .text
.align 8
_cj2N:
_cj2N:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cj3w
_cj3v:
	movq 15(%rbx),%rax
	leaq go_sh1l_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp go_sh1l_entry
_cj3w:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cj2N, .-_cj2N


==================== Asm code ====================
2018-03-16 15:54:57.60811677 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj2N_info:
	.quad	_cj2N
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.608852495 UTC

.section .text
.align 8
sat_sh1C_entry:
_cj3y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cj3z
_cj3A:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cj2E_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cj2E
_cj2F:
	movq (%rbx),%rax
	jmp *(%rax)
_cj3z:
	jmp *-16(%r13)
	.size sat_sh1C_entry, .-sat_sh1C_entry


==================== Asm code ====================
2018-03-16 15:54:57.609586317 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh1C_info:
	.quad	sat_sh1C_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.610299864 UTC

.section .text
.align 8
_cj2E:
_cj2E:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cj3D
_cj3C:
	movq 15(%rbx),%rax
	leaq sat_sh1B_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cj3D:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cj2E, .-_cj2E


==================== Asm code ====================
2018-03-16 15:54:57.610965002 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj2E_info:
	.quad	_cj2E
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.611721305 UTC

.section .text
.align 8
.globl GHC.Base.$w$c>>=_entry
.type GHC.Base.$w$c>>=_entry, @object
GHC.Base.$w$c>>=_entry:
_cj3G:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cj3K
_cj3J:
	leaq ds_sh16_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	leaq sat_sh1C_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -56(%r12),%r14
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cj3K:
	movq $96,904(%r13)
	leaq GHC.Base.$w$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c>>=_entry, .-GHC.Base.$w$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:57.612389444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c>>=_info
.type GHC.Base.$w$c>>=_info, @object
GHC.Base.$w$c>>=_info:
	.quad	GHC.Base.$w$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.616051077 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>=_closure
.type GHC.Base.$fMonadNonEmpty_$c>>=_closure, @object
GHC.Base.$fMonadNonEmpty_$c>>=_closure:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:57.616860862 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadNonEmpty_$c>>=_entry
.type GHC.Base.$fMonadNonEmpty_$c>>=_entry, @object
GHC.Base.$fMonadNonEmpty_$c>>=_entry:
_cj4T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cj4U
_cj4V:
	leaq block_cj4Q_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cj4U:
	leaq GHC.Base.$fMonadNonEmpty_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadNonEmpty_$c>>=_entry, .-GHC.Base.$fMonadNonEmpty_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:57.617614361 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>=_info
.type GHC.Base.$fMonadNonEmpty_$c>>=_info, @object
GHC.Base.$fMonadNonEmpty_$c>>=_info:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.618326271 UTC

.section .text
.align 8
_cj4Q:
_cj4Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cj4Y
_cj4X:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cj4Y:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cj4Q, .-_cj4Q


==================== Asm code ====================
2018-03-16 15:54:57.618956224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj4Q_info:
	.quad	_cj4Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.622514671 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>_closure
.type GHC.Base.$fMonadNonEmpty_$c>>_closure, @object
GHC.Base.$fMonadNonEmpty_$c>>_closure:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_info


==================== Asm code ====================
2018-03-16 15:54:57.623222109 UTC

.section .text
.align 8
sat_sh1L_entry:
_cj5j:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size sat_sh1L_entry, .-sat_sh1L_entry


==================== Asm code ====================
2018-03-16 15:54:57.623835674 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh1L_info:
	.quad	sat_sh1L_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.624653424 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadNonEmpty_$c>>_entry
.type GHC.Base.$fMonadNonEmpty_$c>>_entry, @object
GHC.Base.$fMonadNonEmpty_$c>>_entry:
_cj5p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cj5q
_cj5r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cj5t
_cj5s:
	leaq sat_sh1L_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_cj5m_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cj5t:
	movq $16,904(%r13)
_cj5q:
	leaq GHC.Base.$fMonadNonEmpty_$c>>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadNonEmpty_$c>>_entry, .-GHC.Base.$fMonadNonEmpty_$c>>_entry


==================== Asm code ====================
2018-03-16 15:54:57.625360257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_$c>>_info
.type GHC.Base.$fMonadNonEmpty_$c>>_info, @object
GHC.Base.$fMonadNonEmpty_$c>>_info:
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.626067661 UTC

.section .text
.align 8
_cj5m:
_cj5m:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cj5w
_cj5v:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cj5w:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cj5m, .-_cj5m


==================== Asm code ====================
2018-03-16 15:54:57.626696851 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj5m_info:
	.quad	_cj5m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.628816141 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<**>1_closure
.type GHC.Base.<**>1_closure, @object
GHC.Base.<**>1_closure:
	.quad	GHC.Base.<**>1_info


==================== Asm code ====================
2018-03-16 15:54:57.629480652 UTC

.section .text
.align 8
.globl GHC.Base.<**>1_entry
.type GHC.Base.<**>1_entry, @object
GHC.Base.<**>1_entry:
_cj5S:
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.<**>1_entry, .-GHC.Base.<**>1_entry


==================== Asm code ====================
2018-03-16 15:54:57.630042884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<**>1_info
.type GHC.Base.<**>1_info, @object
GHC.Base.<**>1_info:
	.quad	GHC.Base.<**>1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.632326052 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.<**>_closure
.type GHC.Base.<**>_closure, @object
GHC.Base.<**>_closure:
	.quad	GHC.Base.<**>_info


==================== Asm code ====================
2018-03-16 15:54:57.633108702 UTC

.section .text
.align 8
.globl GHC.Base.<**>_entry
.type GHC.Base.<**>_entry, @object
GHC.Base.<**>_entry:
_cj63:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cj64
_cj65:
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Base.<**>1_closure+2(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.liftA2_entry
_cj64:
	leaq GHC.Base.<**>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.<**>_entry, .-GHC.Base.<**>_entry


==================== Asm code ====================
2018-03-16 15:54:57.633811608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.<**>_info
.type GHC.Base.<**>_info, @object
GHC.Base.<**>_info:
	.quad	GHC.Base.<**>_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.637555768 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmliftA2_closure
.type GHC.Base.$dmliftA2_closure, @object
GHC.Base.$dmliftA2_closure:
	.quad	GHC.Base.$dmliftA2_info


==================== Asm code ====================
2018-03-16 15:54:57.63833633 UTC

.section .text
.align 8
sat_sh1W_entry:
_cj6n:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cj6o
_cj6p:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cj6l_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Applicative_entry
_cj6o:
	jmp *-16(%r13)
	.size sat_sh1W_entry, .-sat_sh1W_entry


==================== Asm code ====================
2018-03-16 15:54:57.638978431 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh1W_info:
	.quad	sat_sh1W_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.639615856 UTC

.section .text
.align 8
_cj6l:
_cj6l:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.fmap_entry
	.size _cj6l, .-_cj6l


==================== Asm code ====================
2018-03-16 15:54:57.640202456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj6l_info:
	.quad	_cj6l
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.641032794 UTC

.section .text
.align 8
.globl GHC.Base.$dmliftA2_entry
.type GHC.Base.$dmliftA2_entry, @object
GHC.Base.$dmliftA2_entry:
_cj6t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cj6u
_cj6v:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cj6x
_cj6w:
	leaq sat_sh1W_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.<*>_entry
_cj6x:
	movq $40,904(%r13)
_cj6u:
	leaq GHC.Base.$dmliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmliftA2_entry, .-GHC.Base.$dmliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:57.641795994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmliftA2_info
.type GHC.Base.$dmliftA2_info, @object
GHC.Base.$dmliftA2_info:
	.quad	GHC.Base.$dmliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.647095319 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmsome_closure
.type GHC.Base.$dmsome_closure, @object
GHC.Base.$dmsome_closure:
	.quad	GHC.Base.$dmsome_info


==================== Asm code ====================
2018-03-16 15:54:57.64788357 UTC

.section .text
.align 8
sat_sh21_entry:
_cj7c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cj7d
_cj7e:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_cj7d:
	jmp *-16(%r13)
	.size sat_sh21_entry, .-sat_sh21_entry


==================== Asm code ====================
2018-03-16 15:54:57.648526837 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh21_info:
	.quad	sat_sh21_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.649431331 UTC

.section .text
.align 8
sat_sh22_entry:
_cj7f:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cj7g
_cj7h:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cj7j
_cj7i:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sh21_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_cj7j:
	movq $24,904(%r13)
_cj7g:
	jmp *-16(%r13)
	.size sat_sh22_entry, .-sat_sh22_entry


==================== Asm code ====================
2018-03-16 15:54:57.650148386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh22_info:
	.quad	sat_sh22_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.650869751 UTC

.section .text
.align 8
some_v_sh1Z_entry:
_cj7k:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cj7l
_cj7m:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cj70_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.$p1Alternative_entry
_cj7l:
	jmp *-16(%r13)
	.size some_v_sh1Z_entry, .-some_v_sh1Z_entry


==================== Asm code ====================
2018-03-16 15:54:57.651602426 UTC

.section .data.rel.ro
.align 8
.align 1
some_v_sh1Z_info:
	.quad	some_v_sh1Z_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.652393462 UTC

.section .text
.align 8
_cj70:
_cj70:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cj7p
_cj7o:
	leaq sat_sh22_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.:_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,8(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Base.liftA2_entry
_cj7p:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cj70, .-_cj70


==================== Asm code ====================
2018-03-16 15:54:57.653645942 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj70_info:
	.quad	_cj70
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.6543999 UTC

.section .text
.align 8
.globl GHC.Base.$dmsome_entry
.type GHC.Base.$dmsome_entry, @object
GHC.Base.$dmsome_entry:
_cj7q:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cj7u
_cj7t:
	leaq some_v_sh1Z_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cj7u:
	movq $32,904(%r13)
	leaq GHC.Base.$dmsome_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmsome_entry, .-GHC.Base.$dmsome_entry


==================== Asm code ====================
2018-03-16 15:54:57.65507384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmsome_info
.type GHC.Base.$dmsome_info, @object
GHC.Base.$dmsome_info:
	.quad	GHC.Base.$dmsome_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.660816339 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmany_closure
.type GHC.Base.$dmmany_closure, @object
GHC.Base.$dmmany_closure:
	.quad	GHC.Base.$dmmany_info


==================== Asm code ====================
2018-03-16 15:54:57.661604514 UTC

.section .text
.align 8
$dApplicative_sh26_entry:
_cj8j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cj8k
_cj8l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Alternative_entry
_cj8k:
	jmp *-16(%r13)
	.size $dApplicative_sh26_entry, .-$dApplicative_sh26_entry


==================== Asm code ====================
2018-03-16 15:54:57.662198036 UTC

.section .data.rel.ro
.align 8
.align 1
$dApplicative_sh26_info:
	.quad	$dApplicative_sh26_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.662876601 UTC

.section .text
.align 8
sat_sh28_entry:
_cj8q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cj8r
_cj8s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_cj8r:
	jmp *-16(%r13)
	.size sat_sh28_entry, .-sat_sh28_entry


==================== Asm code ====================
2018-03-16 15:54:57.663585271 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh28_info:
	.quad	sat_sh28_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.664348267 UTC

.section .text
.align 8
sat_sh27_entry:
_cj8x:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cj8y
_cj8z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq GHC.Types.:_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_cj8y:
	jmp *-16(%r13)
	.size sat_sh27_entry, .-sat_sh27_entry


==================== Asm code ====================
2018-03-16 15:54:57.665029652 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh27_info:
	.quad	sat_sh27_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.666224139 UTC

.section .text
.align 8
many_v_sh25_entry:
_cj8A:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cj8B
_cj8C:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cj8E
_cj8D:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	leaq $dApplicative_sh26_info(%rip),%rdx
	movq %rdx,-80(%r12)
	movq %rax,-64(%r12)
	leaq sat_sh28_info(%rip),%rdx
	movq %rdx,-56(%r12)
	leaq -80(%r12),%rdx
	movq %rdx,-40(%r12)
	leaq sat_sh27_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<|>_entry
_cj8E:
	movq $88,904(%r13)
_cj8B:
	jmp *-16(%r13)
	.size many_v_sh25_entry, .-many_v_sh25_entry


==================== Asm code ====================
2018-03-16 15:54:57.66700111 UTC

.section .data.rel.ro
.align 8
.align 1
many_v_sh25_info:
	.quad	many_v_sh25_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:57.667679882 UTC

.section .text
.align 8
.globl GHC.Base.$dmmany_entry
.type GHC.Base.$dmmany_entry, @object
GHC.Base.$dmmany_entry:
_cj8F:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cj8J
_cj8I:
	leaq many_v_sh25_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cj8J:
	movq $32,904(%r13)
	leaq GHC.Base.$dmmany_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmmany_entry, .-GHC.Base.$dmmany_entry


==================== Asm code ====================
2018-03-16 15:54:57.668310386 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmany_info
.type GHC.Base.$dmmany_info, @object
GHC.Base.$dmmany_info:
	.quad	GHC.Base.$dmmany_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.673909652 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat3_closure
.type GHC.Base.$w$csconcat3_closure, @object
GHC.Base.$w$csconcat3_closure:
	.quad	GHC.Base.$w$csconcat3_info


==================== Asm code ====================
2018-03-16 15:54:57.674806833 UTC

.section .text
.align 8
sat_sh2m_entry:
_cj9K:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cj9L
_cj9M:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cj9O
_cj9N:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-56(%r12)
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %r14,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<>_entry
_cj9O:
	movq $64,904(%r13)
_cj9L:
	jmp *-8(%r13)
	.size sat_sh2m_entry, .-sat_sh2m_entry


==================== Asm code ====================
2018-03-16 15:54:57.675524523 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh2m_info:
	.quad	sat_sh2m_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.676262382 UTC

.section .text
.align 8
go_sh2c_entry:
_cj9T:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cj9U
_cj9V:
	leaq block_cj9w_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cj9w
_cj9x:
	movq (%rbx),%rax
	jmp *(%rax)
_cj9U:
	jmp *-8(%r13)
	.size go_sh2c_entry, .-go_sh2c_entry


==================== Asm code ====================
2018-03-16 15:54:57.676910225 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh2c_info:
	.quad	go_sh2c_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.67810377 UTC

.section .text
.align 8
_cj9w:
_cj9w:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cj9Q
_cj9R:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cja0
_cj9Z:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-64(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	leaq sat_sh2m_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cja0:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cj9Q:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cj9w, .-_cj9w


==================== Asm code ====================
2018-03-16 15:54:57.678837079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cj9w_info:
	.quad	_cj9w
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.679579632 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat3_entry
.type GHC.Base.$w$csconcat3_entry, @object
GHC.Base.$w$csconcat3_entry:
_cja2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cja6
_cja5:
	leaq go_sh2c_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	jmp go_sh2c_entry
_cja6:
	movq $16,904(%r13)
	leaq GHC.Base.$w$csconcat3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat3_entry, .-GHC.Base.$w$csconcat3_entry


==================== Asm code ====================
2018-03-16 15:54:57.680218669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat3_info
.type GHC.Base.$w$csconcat3_info, @object
GHC.Base.$w$csconcat3_info:
	.quad	GHC.Base.$w$csconcat3_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.683212406 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$csconcat_closure
.type GHC.Base.$fSemigroup(->)_$csconcat_closure, @object
GHC.Base.$fSemigroup(->)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(->)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.684033002 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$csconcat_entry
.type GHC.Base.$fSemigroup(->)_$csconcat_entry, @object
GHC.Base.$fSemigroup(->)_$csconcat_entry:
_cjaJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjaK
_cjaL:
	leaq block_cjaG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cjaG
_cjaH:
	movq (%rbx),%rax
	jmp *(%rax)
_cjaK:
	leaq GHC.Base.$fSemigroup(->)_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$csconcat_entry, .-GHC.Base.$fSemigroup(->)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.684688481 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$csconcat_info
.type GHC.Base.$fSemigroup(->)_$csconcat_info, @object
GHC.Base.$fSemigroup(->)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(->)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.685361301 UTC

.section .text
.align 8
_cjaG:
_cjaG:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat3_entry
	.size _cjaG, .-_cjaG


==================== Asm code ====================
2018-03-16 15:54:57.685958335 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjaG_info:
	.quad	_cjaG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.692826218 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat_closure
.type GHC.Base.$w$csconcat_closure, @object
GHC.Base.$w$csconcat_closure:
	.quad	GHC.Base.$w$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.693699082 UTC

.section .text
.align 8
sat_sh2L_entry:
_cjbq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjbr
_cjbs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjbr:
	jmp *-16(%r13)
	.size sat_sh2L_entry, .-sat_sh2L_entry


==================== Asm code ====================
2018-03-16 15:54:57.69435779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh2L_info:
	.quad	sat_sh2L_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.695074866 UTC

.section .text
.align 8
sat_sh2K_entry:
_cjbx:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjby
_cjbz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjby:
	jmp *-16(%r13)
	.size sat_sh2K_entry, .-sat_sh2K_entry


==================== Asm code ====================
2018-03-16 15:54:57.695727807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh2K_info:
	.quad	sat_sh2K_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:57.696504269 UTC

.section .text
.align 8
$wgo_sh2x_entry:
_cjbE:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjbF
_cjbG:
	leaq block_cjb9_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rdi,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cjb9
_cjba:
	movq (%rbx),%rax
	jmp *(%rax)
_cjbF:
	jmp *-8(%r13)
	.size $wgo_sh2x_entry, .-$wgo_sh2x_entry


==================== Asm code ====================
2018-03-16 15:54:57.697225273 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_sh2x_info:
	.quad	$wgo_sh2x_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.698614984 UTC

.section .text
.align 8
_cjb9:
_cjb9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjbB
_cjbC:
	leaq block_cjbf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjbf
_cjbg:
	movq (%rbx),%rax
	jmp *(%rax)
_cjbB:
	movq 40(%rbp),%r14
	movq 32(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjb9, .-_cjb9


==================== Asm code ====================
2018-03-16 15:54:57.69929667 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjb9_info:
	.quad	_cjb9
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.699939429 UTC

.section .text
.align 8
_cjbf:
_cjbf:
	movq 8(%rbp),%rax
	leaq block_cjbk_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 32(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_sh2x_entry
	.size _cjbf, .-_cjbf


==================== Asm code ====================
2018-03-16 15:54:57.70055184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjbf_info:
	.quad	_cjbf
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.701537473 UTC

.section .text
.align 8
_cjbk:
_cjbk:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cjbN
_cjbM:
	leaq sat_sh2L_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 40(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_sh2K_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjbN:
	movq $80,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cjbk, .-_cjbk


==================== Asm code ====================
2018-03-16 15:54:57.702256235 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjbk_info:
	.quad	_cjbk
	.quad	261
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.703017216 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat_entry
.type GHC.Base.$w$csconcat_entry, @object
GHC.Base.$w$csconcat_entry:
_cjbQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cjbU
_cjbT:
	leaq $wgo_sh2x_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq %rdi,%rax
	movq %r9,%rdi
	movq %r8,%rsi
	movq %rax,%r14
	leaq -13(%r12),%rbx
	jmp $wgo_sh2x_entry
_cjbU:
	movq $24,904(%r13)
	leaq GHC.Base.$w$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat_entry, .-GHC.Base.$w$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.703633426 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat_info
.type GHC.Base.$w$csconcat_info, @object
GHC.Base.$w$csconcat_info:
	.quad	GHC.Base.$w$csconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.707873186 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.708670405 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,)_$csconcat_entry:
_cjcP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjd0
_cjd1:
	leaq block_cjcM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjcM
_cjcN:
	movq (%rbx),%rax
	jmp *(%rax)
_cjd0:
	leaq GHC.Base.$fSemigroup(,)_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.709364639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$csconcat_info
.type GHC.Base.$fSemigroup(,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.710066785 UTC

.section .text
.align 8
_cjcM:
_cjcM:
	leaq block_cjcS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjcS
_cjcT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjcM, .-_cjcM


==================== Asm code ====================
2018-03-16 15:54:57.710651927 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjcM_info:
	.quad	_cjcM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.71145754 UTC

.section .text
.align 8
_cjcS:
_cjcS:
	movq 24(%rbp),%rax
	leaq block_cjcX_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq 8(%rbp),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Base.$w$csconcat_entry
	.size _cjcS, .-_cjcS


==================== Asm code ====================
2018-03-16 15:54:57.712089941 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjcS_info:
	.quad	_cjcS
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.712765212 UTC

.section .text
.align 8
_cjcX:
_cjcX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cjd6
_cjd5:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjd6:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cjcX, .-_cjcX


==================== Asm code ====================
2018-03-16 15:54:57.713434665 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjcX_info:
	.quad	_cjcX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.718629753 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmsconcat_closure
.type GHC.Base.$dmsconcat_closure, @object
GHC.Base.$dmsconcat_closure:
	.quad	GHC.Base.$dmsconcat_info


==================== Asm code ====================
2018-03-16 15:54:57.719464146 UTC

.section .text
.align 8
go_sh33_entry:
_cjdP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjdQ
_cjdR:
	leaq block_cjdI_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rsi,%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cjdI
_cjdJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cjdQ:
	jmp *-8(%r13)
	.size go_sh33_entry, .-go_sh33_entry


==================== Asm code ====================
2018-03-16 15:54:57.720109637 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh33_info:
	.quad	go_sh33_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.720917504 UTC

.section .text
.align 8
_cjdI:
_cjdI:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjdM
_cjdN:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cjdZ
_cjdY:
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Base.<>_entry
_cjdZ:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cjdM:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cjdI, .-_cjdI


==================== Asm code ====================
2018-03-16 15:54:57.721670214 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjdI_info:
	.quad	_cjdI
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.722402795 UTC

.section .text
.align 8
.globl GHC.Base.$dmsconcat_entry
.type GHC.Base.$dmsconcat_entry, @object
GHC.Base.$dmsconcat_entry:
_cje2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cje3
_cje4:
	leaq block_cjdy_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cjdy
_cjdz:
	movq (%rbx),%rax
	jmp *(%rax)
_cje3:
	leaq GHC.Base.$dmsconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmsconcat_entry, .-GHC.Base.$dmsconcat_entry


==================== Asm code ====================
2018-03-16 15:54:57.723049474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmsconcat_info
.type GHC.Base.$dmsconcat_info, @object
GHC.Base.$dmsconcat_info:
	.quad	GHC.Base.$dmsconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.723821009 UTC

.section .text
.align 8
_cjdy:
_cjdy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cje7
_cje6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq go_sh33_info(%rip),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	addq $16,%rbp
	jmp go_sh33_entry
_cje7:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjdy, .-_cjdy


==================== Asm code ====================
2018-03-16 15:54:57.724466649 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjdy_info:
	.quad	_cjdy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.727165955 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmstimes_closure
.type GHC.Base.$dmstimes_closure, @object
GHC.Base.$dmstimes_closure:
	.quad	GHC.Base.$dmstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.727840081 UTC

.section .text
.align 8
.globl GHC.Base.$dmstimes_entry
.type GHC.Base.$dmstimes_entry, @object
GHC.Base.$dmstimes_entry:
_cjeE:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	movq Data.Semigroup.Internal.stimesDefault_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.$dmstimes_entry, .-GHC.Base.$dmstimes_entry


==================== Asm code ====================
2018-03-16 15:54:57.728464379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmstimes_info
.type GHC.Base.$dmstimes_info, @object
GHC.Base.$dmstimes_info:
	.quad	GHC.Base.$dmstimes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	Si3a_srt+16


==================== Asm code ====================
2018-03-16 15:54:57.731140419 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmappend_closure
.type GHC.Base.$dmmappend_closure, @object
GHC.Base.$dmmappend_closure:
	.quad	GHC.Base.$dmmappend_info


==================== Asm code ====================
2018-03-16 15:54:57.731879805 UTC

.section .text
.align 8
.globl GHC.Base.$dmmappend_entry
.type GHC.Base.$dmmappend_entry, @object
GHC.Base.$dmmappend_entry:
_cjeR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cjeS
_cjeT:
	leaq block_cjeP_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjeS:
	leaq GHC.Base.$dmmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmmappend_entry, .-GHC.Base.$dmmappend_entry


==================== Asm code ====================
2018-03-16 15:54:57.732514355 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmappend_info
.type GHC.Base.$dmmappend_info, @object
GHC.Base.$dmmappend_info:
	.quad	GHC.Base.$dmmappend_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.733142727 UTC

.section .text
.align 8
_cjeP:
_cjeP:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.<>_entry
	.size _cjeP, .-_cjeP


==================== Asm code ====================
2018-03-16 15:54:57.733736498 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjeP_info:
	.quad	_cjeP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.737290838 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dm>>_closure
.type GHC.Base.$dm>>_closure, @object
GHC.Base.$dm>>_closure:
	.quad	GHC.Base.$dm>>_info


==================== Asm code ====================
2018-03-16 15:54:57.737914969 UTC

.section .text
.align 8
sat_sh3i_entry:
_cjff:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_sh3i_entry, .-sat_sh3i_entry


==================== Asm code ====================
2018-03-16 15:54:57.738500156 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh3i_info:
	.quad	sat_sh3i_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.739329215 UTC

.section .text
.align 8
.globl GHC.Base.$dm>>_entry
.type GHC.Base.$dm>>_entry, @object
GHC.Base.$dm>>_entry:
_cjfi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjfj
_cjfk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cjfm
_cjfl:
	leaq sat_sh3i_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.>>=_entry
_cjfm:
	movq $16,904(%r13)
_cjfj:
	leaq GHC.Base.$dm>>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dm>>_entry, .-GHC.Base.$dm>>_entry


==================== Asm code ====================
2018-03-16 15:54:57.740018431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dm>>_info
.type GHC.Base.$dm>>_info, @object
GHC.Base.$dm>>_info:
	.quad	GHC.Base.$dm>>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.742878604 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmreturn_closure
.type GHC.Base.$dmreturn_closure, @object
GHC.Base.$dmreturn_closure:
	.quad	GHC.Base.$dmreturn_info


==================== Asm code ====================
2018-03-16 15:54:57.7435718 UTC

.section .text
.align 8
.globl GHC.Base.$dmreturn_entry
.type GHC.Base.$dmreturn_entry, @object
GHC.Base.$dmreturn_entry:
_cjfE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cjfF
_cjfG:
	leaq block_cjfC_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1Monad_entry
_cjfF:
	leaq GHC.Base.$dmreturn_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmreturn_entry, .-GHC.Base.$dmreturn_entry


==================== Asm code ====================
2018-03-16 15:54:57.744165876 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmreturn_info
.type GHC.Base.$dmreturn_info, @object
GHC.Base.$dmreturn_info:
	.quad	GHC.Base.$dmreturn_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.744770312 UTC

.section .text
.align 8
_cjfC:
_cjfC:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.pure_entry
	.size _cjfC, .-_cjfC


==================== Asm code ====================
2018-03-16 15:54:57.745344785 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjfC_info:
	.quad	_cjfC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.747423814 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmfail_closure
.type GHC.Base.$dmfail_closure, @object
GHC.Base.$dmfail_closure:
	.quad	GHC.Base.$dmfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:57.748042264 UTC

.section .text
.align 8
.globl GHC.Base.$dmfail_entry
.type GHC.Base.$dmfail_entry, @object
GHC.Base.$dmfail_entry:
_cjfX:
	movq %rsi,%r14
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size GHC.Base.$dmfail_entry, .-GHC.Base.$dmfail_entry


==================== Asm code ====================
2018-03-16 15:54:57.748615589 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmfail_info
.type GHC.Base.$dmfail_info, @object
GHC.Base.$dmfail_info:
	.quad	GHC.Base.$dmfail_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	Si3a_srt+72


==================== Asm code ====================
2018-03-16 15:54:57.751165457 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmzero_closure
.type GHC.Base.$dmmzero_closure, @object
GHC.Base.$dmmzero_closure:
	.quad	GHC.Base.$dmmzero_info


==================== Asm code ====================
2018-03-16 15:54:57.751911876 UTC

.section .text
.align 8
.globl GHC.Base.$dmmzero_entry
.type GHC.Base.$dmmzero_entry, @object
GHC.Base.$dmmzero_entry:
_cjga:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cjgb
_cjgc:
	leaq block_cjg8_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_cjgb:
	leaq GHC.Base.$dmmzero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmmzero_entry, .-GHC.Base.$dmmzero_entry


==================== Asm code ====================
2018-03-16 15:54:57.752525829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmzero_info
.type GHC.Base.$dmmzero_info, @object
GHC.Base.$dmmzero_info:
	.quad	GHC.Base.$dmmzero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.75311516 UTC

.section .text
.align 8
_cjg8:
_cjg8:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.empty_entry
	.size _cjg8, .-_cjg8


==================== Asm code ====================
2018-03-16 15:54:57.753897634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjg8_info:
	.quad	_cjg8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.756402233 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$dmmplus_closure
.type GHC.Base.$dmmplus_closure, @object
GHC.Base.$dmmplus_closure:
	.quad	GHC.Base.$dmmplus_info


==================== Asm code ====================
2018-03-16 15:54:57.757141862 UTC

.section .text
.align 8
.globl GHC.Base.$dmmplus_entry
.type GHC.Base.$dmmplus_entry, @object
GHC.Base.$dmmplus_entry:
_cjgv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cjgw
_cjgx:
	leaq block_cjgt_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$p1MonadPlus_entry
_cjgw:
	leaq GHC.Base.$dmmplus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$dmmplus_entry, .-GHC.Base.$dmmplus_entry


==================== Asm code ====================
2018-03-16 15:54:57.757846334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$dmmplus_info
.type GHC.Base.$dmmplus_info, @object
GHC.Base.$dmmplus_info:
	.quad	GHC.Base.$dmmplus_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.758493393 UTC

.section .text
.align 8
_cjgt:
_cjgt:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Base.<|>_entry
	.size _cjgt, .-_cjgt


==================== Asm code ====================
2018-03-16 15:54:57.759043616 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjgt_info:
	.quad	_cjgt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.763582888 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c==_closure
.type GHC.Base.$fEqMaybe_$c==_closure, @object
GHC.Base.$fEqMaybe_$c==_closure:
	.quad	GHC.Base.$fEqMaybe_$c==_info


==================== Asm code ====================
2018-03-16 15:54:57.76441997 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_$c==_entry
.type GHC.Base.$fEqMaybe_$c==_entry, @object
GHC.Base.$fEqMaybe_$c==_entry:
_cjgV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjgW
_cjgX:
	leaq block_cjgO_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjgO
_cjgP:
	movq (%rbx),%rax
	jmp *(%rax)
_cjgW:
	leaq GHC.Base.$fEqMaybe_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_$c==_entry, .-GHC.Base.$fEqMaybe_$c==_entry


==================== Asm code ====================
2018-03-16 15:54:57.765051061 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c==_info
.type GHC.Base.$fEqMaybe_$c==_info, @object
GHC.Base.$fEqMaybe_$c==_info:
	.quad	GHC.Base.$fEqMaybe_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.765914916 UTC

.section .text
.align 8
_cjgO:
_cjgO:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjgS
_cjgT:
	leaq block_cjhf_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjhf
_cjhh:
	movq (%rbx),%rax
	jmp *(%rax)
_cjgS:
	leaq block_cjh0_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjh0
_cjh2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjgO, .-_cjgO


==================== Asm code ====================
2018-03-16 15:54:57.766588832 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjgO_info:
	.quad	_cjgO
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.767258276 UTC

.section .text
.align 8
_cjh0:
_cjh0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cjh8
_ujhv:
	addq $8,%rbp
	jmp _cjhn
_cjh8:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjh0, .-_cjh0


==================== Asm code ====================
2018-03-16 15:54:57.767839706 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjh0_info:
	.quad	_cjh0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.768569114 UTC

.section .text
.align 8
_cjhf:
_cjhf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujhu
_cjhr:
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_ujhu:
	addq $24,%rbp
	jmp _cjhn
	.size _cjhf, .-_cjhf


==================== Asm code ====================
2018-03-16 15:54:57.769737053 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjhf_info:
	.quad	_cjhf
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.770491576 UTC

.section .text
.align 8
_cjhn:
_cjhn:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjhn, .-_cjhn


==================== Asm code ====================
2018-03-16 15:54:57.775595212 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c/=_closure
.type GHC.Base.$fEqMaybe_$c/=_closure, @object
GHC.Base.$fEqMaybe_$c/=_closure:
	.quad	GHC.Base.$fEqMaybe_$c/=_info


==================== Asm code ====================
2018-03-16 15:54:57.776409426 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_$c/=_entry
.type GHC.Base.$fEqMaybe_$c/=_entry, @object
GHC.Base.$fEqMaybe_$c/=_entry:
_cjil:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjim
_cjin:
	leaq block_cjie_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjie
_cjif:
	movq (%rbx),%rax
	jmp *(%rax)
_cjim:
	leaq GHC.Base.$fEqMaybe_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_$c/=_entry, .-GHC.Base.$fEqMaybe_$c/=_entry


==================== Asm code ====================
2018-03-16 15:54:57.777059301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_$c/=_info
.type GHC.Base.$fEqMaybe_$c/=_info, @object
GHC.Base.$fEqMaybe_$c/=_info:
	.quad	GHC.Base.$fEqMaybe_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.778579947 UTC

.section .text
.align 8
_cjie:
_cjie:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjii
_cjij:
	leaq block_cjiF_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjiF
_cjiH:
	movq (%rbx),%rax
	jmp *(%rax)
_cjii:
	leaq block_cjiq_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjiq
_cjis:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjie, .-_cjie


==================== Asm code ====================
2018-03-16 15:54:57.779250839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjie_info:
	.quad	_cjie
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.779919521 UTC

.section .text
.align 8
_cjiq:
_cjiq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujj9
_ujja:
	addq $8,%rbp
	jmp _cjiY
_ujj9:
	addq $8,%rbp
	jmp _cjj2
	.size _cjiq, .-_cjiq


==================== Asm code ====================
2018-03-16 15:54:57.780523575 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjiq_info:
	.quad	_cjiq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.781197757 UTC

.section .text
.align 8
_cjiF:
_cjiF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujj6
_cjiS:
	movq 16(%rbp),%rax
	leaq block_cjiQ_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_ujj6:
	addq $24,%rbp
	jmp _cjiY
	.size _cjiF, .-_cjiF


==================== Asm code ====================
2018-03-16 15:54:57.781967974 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjiF_info:
	.quad	_cjiF
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.782589336 UTC

.section .text
.align 8
_cjiQ:
_cjiQ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujj7
_ujj8:
	addq $8,%rbp
	jmp _cjj2
_ujj7:
	addq $8,%rbp
	jmp _cjiY
	.size _cjiQ, .-_cjiQ


==================== Asm code ====================
2018-03-16 15:54:57.783144685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjiQ_info:
	.quad	_cjiQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.78377328 UTC

.section .text
.align 8
_cjiY:
_cjiY:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjiY, .-_cjiY


==================== Asm code ====================
2018-03-16 15:54:57.784393258 UTC

.section .text
.align 8
_cjj2:
_cjj2:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjj2, .-_cjj2


==================== Asm code ====================
2018-03-16 15:54:57.787878873 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_closure
.type GHC.Base.$fEqMaybe_closure, @object
GHC.Base.$fEqMaybe_closure:
	.quad	GHC.Base.$fEqMaybe_info


==================== Asm code ====================
2018-03-16 15:54:57.788513456 UTC

.section .text
.align 8
sat_sh3M_entry:
_cjk8:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqMaybe_$c/=_entry
	.size sat_sh3M_entry, .-sat_sh3M_entry


==================== Asm code ====================
2018-03-16 15:54:57.78907014 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh3M_info:
	.quad	sat_sh3M_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.789863889 UTC

.section .text
.align 8
sat_sh3L_entry:
_cjkg:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqMaybe_$c==_entry
	.size sat_sh3L_entry, .-sat_sh3L_entry


==================== Asm code ====================
2018-03-16 15:54:57.790428576 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh3L_info:
	.quad	sat_sh3L_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.791208487 UTC

.section .text
.align 8
.globl GHC.Base.$fEqMaybe_entry
.type GHC.Base.$fEqMaybe_entry, @object
GHC.Base.$fEqMaybe_entry:
_cjkk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cjko
_cjkn:
	leaq sat_sh3M_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_sh3L_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq GHC.Classes.C:Eq_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjko:
	movq $56,904(%r13)
	leaq GHC.Base.$fEqMaybe_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqMaybe_entry, .-GHC.Base.$fEqMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:57.791912656 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqMaybe_info
.type GHC.Base.$fEqMaybe_info, @object
GHC.Base.$fEqMaybe_info:
	.quad	GHC.Base.$fEqMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.79489973 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cp1Ord_closure
.type GHC.Base.$fOrdMaybe_$cp1Ord_closure, @object
GHC.Base.$fOrdMaybe_$cp1Ord_closure:
	.quad	GHC.Base.$fOrdMaybe_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:54:57.79561845 UTC

.section .text
.align 8
sat_sh3O_entry:
_cjkN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjkO
_cjkP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_cjkO:
	jmp *-16(%r13)
	.size sat_sh3O_entry, .-sat_sh3O_entry


==================== Asm code ====================
2018-03-16 15:54:57.796186907 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh3O_info:
	.quad	sat_sh3O_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.796914348 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cp1Ord_entry
.type GHC.Base.$fOrdMaybe_$cp1Ord_entry, @object
GHC.Base.$fOrdMaybe_$cp1Ord_entry:
_cjkQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cjkU
_cjkT:
	leaq sat_sh3O_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fEqMaybe_entry
_cjkU:
	movq $24,904(%r13)
	leaq GHC.Base.$fOrdMaybe_$cp1Ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cp1Ord_entry, .-GHC.Base.$fOrdMaybe_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:54:57.797562454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cp1Ord_info
.type GHC.Base.$fOrdMaybe_$cp1Ord_info, @object
GHC.Base.$fOrdMaybe_$cp1Ord_info:
	.quad	GHC.Base.$fOrdMaybe_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.801831577 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$ccompare_closure
.type GHC.Base.$fOrdMaybe_$ccompare_closure, @object
GHC.Base.$fOrdMaybe_$ccompare_closure:
	.quad	GHC.Base.$fOrdMaybe_$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:57.802663244 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$ccompare_entry
.type GHC.Base.$fOrdMaybe_$ccompare_entry, @object
GHC.Base.$fOrdMaybe_$ccompare_entry:
_cjlg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjlh
_cjli:
	leaq block_cjl9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjl9
_cjla:
	movq (%rbx),%rax
	jmp *(%rax)
_cjlh:
	leaq GHC.Base.$fOrdMaybe_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$ccompare_entry, .-GHC.Base.$fOrdMaybe_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:57.80327715 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$ccompare_info
.type GHC.Base.$fOrdMaybe_$ccompare_info, @object
GHC.Base.$fOrdMaybe_$ccompare_info:
	.quad	GHC.Base.$fOrdMaybe_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.804028888 UTC

.section .text
.align 8
_cjl9:
_cjl9:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjld
_cjle:
	leaq block_cjlA_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjlA
_cjlC:
	movq (%rbx),%rax
	jmp *(%rax)
_cjld:
	leaq block_cjll_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjll
_cjln:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjl9, .-_cjl9


==================== Asm code ====================
2018-03-16 15:54:57.804702069 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjl9_info:
	.quad	_cjl9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.80549408 UTC

.section .text
.align 8
_cjll:
_cjll:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cjlt
_cjlx:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjlt:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjll, .-_cjll


==================== Asm code ====================
2018-03-16 15:54:57.806085019 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjll_info:
	.quad	_cjll
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.806828872 UTC

.section .text
.align 8
_cjlA:
_cjlA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjlI
_cjlM:
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cjlI:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjlA, .-_cjlA


==================== Asm code ====================
2018-03-16 15:54:57.807962449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjlA_info:
	.quad	_cjlA
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.812940668 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<_closure
.type GHC.Base.$fOrdMaybe_$c<_closure, @object
GHC.Base.$fOrdMaybe_$c<_closure:
	.quad	GHC.Base.$fOrdMaybe_$c<_info


==================== Asm code ====================
2018-03-16 15:54:57.813826451 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c<_entry
.type GHC.Base.$fOrdMaybe_$c<_entry, @object
GHC.Base.$fOrdMaybe_$c<_entry:
_cjmC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjmD
_cjmE:
	leaq block_cjmv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjmv
_cjmw:
	movq (%rbx),%rax
	jmp *(%rax)
_cjmD:
	leaq GHC.Base.$fOrdMaybe_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c<_entry, .-GHC.Base.$fOrdMaybe_$c<_entry


==================== Asm code ====================
2018-03-16 15:54:57.814511708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<_info
.type GHC.Base.$fOrdMaybe_$c<_info, @object
GHC.Base.$fOrdMaybe_$c<_info:
	.quad	GHC.Base.$fOrdMaybe_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.815329714 UTC

.section .text
.align 8
_cjmv:
_cjmv:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjmz
_cjmA:
	leaq block_cjmW_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjmW
_cjmY:
	movq (%rbx),%rax
	jmp *(%rax)
_cjmz:
	leaq block_cjmH_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjmH
_cjmJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjmv, .-_cjmv


==================== Asm code ====================
2018-03-16 15:54:57.815999907 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjmv_info:
	.quad	_cjmv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.816653116 UTC

.section .text
.align 8
_cjmH:
_cjmH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujnc
_cjmT:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ujnc:
	addq $8,%rbp
	jmp _cjn4
	.size _cjmH, .-_cjmH


==================== Asm code ====================
2018-03-16 15:54:57.817305247 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjmH_info:
	.quad	_cjmH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.818082357 UTC

.section .text
.align 8
_cjmW:
_cjmW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujnb
_cjn8:
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_ujnb:
	addq $24,%rbp
	jmp _cjn4
	.size _cjmW, .-_cjmW


==================== Asm code ====================
2018-03-16 15:54:57.818698363 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjmW_info:
	.quad	_cjmW
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.819325205 UTC

.section .text
.align 8
_cjn4:
_cjn4:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjn4, .-_cjn4


==================== Asm code ====================
2018-03-16 15:54:57.824485652 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<=_closure
.type GHC.Base.$fOrdMaybe_$c<=_closure, @object
GHC.Base.$fOrdMaybe_$c<=_closure:
	.quad	GHC.Base.$fOrdMaybe_$c<=_info


==================== Asm code ====================
2018-03-16 15:54:57.825628864 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c<=_entry
.type GHC.Base.$fOrdMaybe_$c<=_entry, @object
GHC.Base.$fOrdMaybe_$c<=_entry:
_cjo2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjo3
_cjo4:
	leaq block_cjnV_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjnV
_cjnW:
	movq (%rbx),%rax
	jmp *(%rax)
_cjo3:
	leaq GHC.Base.$fOrdMaybe_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c<=_entry, .-GHC.Base.$fOrdMaybe_$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:57.826278785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c<=_info
.type GHC.Base.$fOrdMaybe_$c<=_info, @object
GHC.Base.$fOrdMaybe_$c<=_info:
	.quad	GHC.Base.$fOrdMaybe_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.827103363 UTC

.section .text
.align 8
_cjnV:
_cjnV:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjnZ
_cjo0:
	leaq block_cjom_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjom
_cjoo:
	movq (%rbx),%rax
	jmp *(%rax)
_cjnZ:
	leaq block_cjo7_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjo7
_cjo9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjnV, .-_cjnV


==================== Asm code ====================
2018-03-16 15:54:57.827763705 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjnV_info:
	.quad	_cjnV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.828425313 UTC

.section .text
.align 8
_cjo7:
_cjo7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujoQ
_ujoR:
	addq $8,%rbp
	jmp _cjoJ
_ujoQ:
	addq $8,%rbp
	jmp _cjoF
	.size _cjo7, .-_cjo7


==================== Asm code ====================
2018-03-16 15:54:57.829033696 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjo7_info:
	.quad	_cjo7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.82979723 UTC

.section .text
.align 8
_cjom:
_cjom:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujoN
_cjoz:
	movq 16(%rbp),%rax
	leaq block_cjox_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_ujoN:
	addq $24,%rbp
	jmp _cjoF
	.size _cjom, .-_cjom


==================== Asm code ====================
2018-03-16 15:54:57.830378073 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjom_info:
	.quad	_cjom
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.831020671 UTC

.section .text
.align 8
_cjox:
_cjox:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujoO
_ujoP:
	addq $8,%rbp
	jmp _cjoJ
_ujoO:
	addq $8,%rbp
	jmp _cjoF
	.size _cjox, .-_cjox


==================== Asm code ====================
2018-03-16 15:54:57.831636634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjox_info:
	.quad	_cjox
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.83226772 UTC

.section .text
.align 8
_cjoF:
_cjoF:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjoF, .-_cjoF


==================== Asm code ====================
2018-03-16 15:54:57.83288832 UTC

.section .text
.align 8
_cjoJ:
_cjoJ:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjoJ, .-_cjoJ


==================== Asm code ====================
2018-03-16 15:54:57.83789648 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmax_closure
.type GHC.Base.$fOrdMaybe_$cmax_closure, @object
GHC.Base.$fOrdMaybe_$cmax_closure:
	.quad	GHC.Base.$fOrdMaybe_$cmax_info


==================== Asm code ====================
2018-03-16 15:54:57.838656764 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cmax_entry
.type GHC.Base.$fOrdMaybe_$cmax_entry, @object
GHC.Base.$fOrdMaybe_$cmax_entry:
_cjpR:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cjpS
_cjpT:
	leaq block_cjpK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjpK
_cjpL:
	movq (%rbx),%rax
	jmp *(%rax)
_cjpS:
	leaq GHC.Base.$fOrdMaybe_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cmax_entry, .-GHC.Base.$fOrdMaybe_$cmax_entry


==================== Asm code ====================
2018-03-16 15:54:57.839272613 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmax_info
.type GHC.Base.$fOrdMaybe_$cmax_info, @object
GHC.Base.$fOrdMaybe_$cmax_info:
	.quad	GHC.Base.$fOrdMaybe_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.840042348 UTC

.section .text
.align 8
_cjpK:
_cjpK:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjpO
_cjpP:
	leaq block_cjpZ_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjpZ
_cjq1:
	movq (%rbx),%rax
	jmp *(%rax)
_cjpO:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjpK, .-_cjpK


==================== Asm code ====================
2018-03-16 15:54:57.840675547 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjpK_info:
	.quad	_cjpK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.841472278 UTC

.section .text
.align 8
_cjpZ:
_cjpZ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujqp
_cjqc:
	movq 8(%rbp),%rax
	leaq block_cjqa_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_ujqp:
	addq $24,%rbp
	jmp _cjqi
	.size _cjpZ, .-_cjpZ


==================== Asm code ====================
2018-03-16 15:54:57.842121623 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjpZ_info:
	.quad	_cjpZ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.842764829 UTC

.section .text
.align 8
_cjqa:
_cjqa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujqq
_cjqm:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ujqq:
	addq $16,%rbp
	jmp _cjqi
	.size _cjqa, .-_cjqa


==================== Asm code ====================
2018-03-16 15:54:57.843379057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjqa_info:
	.quad	_cjqa
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.844003287 UTC

.section .text
.align 8
_cjqi:
_cjqi:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjqi, .-_cjqi


==================== Asm code ====================
2018-03-16 15:54:57.849736075 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmin_closure
.type GHC.Base.$fOrdMaybe_$cmin_closure, @object
GHC.Base.$fOrdMaybe_$cmin_closure:
	.quad	GHC.Base.$fOrdMaybe_$cmin_info


==================== Asm code ====================
2018-03-16 15:54:57.850661549 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$cmin_entry
.type GHC.Base.$fOrdMaybe_$cmin_entry, @object
GHC.Base.$fOrdMaybe_$cmin_entry:
_cjrf:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cjrg
_cjrh:
	leaq block_cjr8_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjr8
_cjr9:
	movq (%rbx),%rax
	jmp *(%rax)
_cjrg:
	leaq GHC.Base.$fOrdMaybe_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$cmin_entry, .-GHC.Base.$fOrdMaybe_$cmin_entry


==================== Asm code ====================
2018-03-16 15:54:57.851359271 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$cmin_info
.type GHC.Base.$fOrdMaybe_$cmin_info, @object
GHC.Base.$fOrdMaybe_$cmin_info:
	.quad	GHC.Base.$fOrdMaybe_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.852202636 UTC

.section .text
.align 8
_cjr8:
_cjr8:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjrc
_cjrd:
	leaq block_cjrt_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjrt
_cjrv:
	movq (%rbx),%rax
	jmp *(%rax)
_cjrc:
	leaq block_cjrk_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjrk
_cjrm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjr8, .-_cjr8


==================== Asm code ====================
2018-03-16 15:54:57.852922749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjr8_info:
	.quad	_cjr8
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.854047256 UTC

.section .text
.align 8
_cjrk:
_cjrk:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjrk, .-_cjrk


==================== Asm code ====================
2018-03-16 15:54:57.854581946 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjrk_info:
	.quad	_cjrk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.855294759 UTC

.section .text
.align 8
_cjrt:
_cjrt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjrB
_cjrG:
	movq 8(%rbp),%rax
	leaq block_cjrE_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_cjrB:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjrt, .-_cjrt


==================== Asm code ====================
2018-03-16 15:54:57.855979095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjrt_info:
	.quad	_cjrt
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.856630101 UTC

.section .text
.align 8
_cjrE:
_cjrE:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cjrM
_cjrQ:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cjrM:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjrE, .-_cjrE


==================== Asm code ====================
2018-03-16 15:54:57.857231789 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjrE_info:
	.quad	_cjrE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.862457643 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c>=_closure
.type GHC.Base.$fOrdMaybe_$c>=_closure, @object
GHC.Base.$fOrdMaybe_$c>=_closure:
	.quad	GHC.Base.$fOrdMaybe_$c>=_info


==================== Asm code ====================
2018-03-16 15:54:57.863242084 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_$c>=_entry
.type GHC.Base.$fOrdMaybe_$c>=_entry, @object
GHC.Base.$fOrdMaybe_$c>=_entry:
_cjsJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjsK
_cjsL:
	leaq block_cjsC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjsC
_cjsD:
	movq (%rbx),%rax
	jmp *(%rax)
_cjsK:
	leaq GHC.Base.$fOrdMaybe_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_$c>=_entry, .-GHC.Base.$fOrdMaybe_$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:57.863900403 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_$c>=_info
.type GHC.Base.$fOrdMaybe_$c>=_info, @object
GHC.Base.$fOrdMaybe_$c>=_info:
	.quad	GHC.Base.$fOrdMaybe_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.864681412 UTC

.section .text
.align 8
_cjsC:
_cjsC:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjsG
_cjsH:
	leaq block_cjt3_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	testb $7,%bl
	jne _cjt3
_cjt5:
	movq (%rbx),%rax
	jmp *(%rax)
_cjsG:
	leaq block_cjsO_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cjsO
_cjsQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjsC, .-_cjsC


==================== Asm code ====================
2018-03-16 15:54:57.865390898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjsC_info:
	.quad	_cjsC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.866046092 UTC

.section .text
.align 8
_cjsO:
_cjsO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujtx
_ujty:
	addq $8,%rbp
	jmp _cjtq
_ujtx:
	addq $8,%rbp
	jmp _cjtm
	.size _cjsO, .-_cjsO


==================== Asm code ====================
2018-03-16 15:54:57.866631703 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjsO_info:
	.quad	_cjsO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.867353921 UTC

.section .text
.align 8
_cjt3:
_cjt3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ujtu
_cjtg:
	movq 16(%rbp),%rax
	leaq block_cjte_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_ujtu:
	addq $24,%rbp
	jmp _cjtm
	.size _cjt3, .-_cjt3


==================== Asm code ====================
2018-03-16 15:54:57.86803142 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjt3_info:
	.quad	_cjt3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.868693306 UTC

.section .text
.align 8
_cjte:
_cjte:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujtv
_ujtw:
	addq $8,%rbp
	jmp _cjtq
_ujtv:
	addq $8,%rbp
	jmp _cjtm
	.size _cjte, .-_cjte


==================== Asm code ====================
2018-03-16 15:54:57.869358509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjte_info:
	.quad	_cjte
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.869991072 UTC

.section .text
.align 8
_cjtm:
_cjtm:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjtm, .-_cjtm


==================== Asm code ====================
2018-03-16 15:54:57.87064715 UTC

.section .text
.align 8
_cjtq:
_cjtq:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjtq, .-_cjtq


==================== Asm code ====================
2018-03-16 15:54:57.877006225 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_closure
.type GHC.Base.$fOrdMaybe_closure, @object
GHC.Base.$fOrdMaybe_closure:
	.quad	GHC.Base.$fOrdMaybe_info


==================== Asm code ====================
2018-03-16 15:54:57.877863864 UTC

.section .text
.align 8
sat_sh4S_entry:
_cjuw:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$cmin_entry
	.size sat_sh4S_entry, .-sat_sh4S_entry


==================== Asm code ====================
2018-03-16 15:54:57.878409286 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4S_info:
	.quad	sat_sh4S_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.87900595 UTC

.section .text
.align 8
sat_sh4R_entry:
_cjuE:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$cmax_entry
	.size sat_sh4R_entry, .-sat_sh4R_entry


==================== Asm code ====================
2018-03-16 15:54:57.879558362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4R_info:
	.quad	sat_sh4R_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.880168404 UTC

.section .text
.align 8
sat_sh4Q_entry:
_cjuM:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c>=_entry
	.size sat_sh4Q_entry, .-sat_sh4Q_entry


==================== Asm code ====================
2018-03-16 15:54:57.880769889 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4Q_info:
	.quad	sat_sh4Q_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.881447846 UTC

.section .text
.align 8
sat_sh4P_entry:
_cjuU:
	movq %r14,%rdi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<_entry
	.size sat_sh4P_entry, .-sat_sh4P_entry


==================== Asm code ====================
2018-03-16 15:54:57.881974232 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4P_info:
	.quad	sat_sh4P_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.882573013 UTC

.section .text
.align 8
sat_sh4M_entry:
_cjv2:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<=_entry
	.size sat_sh4M_entry, .-sat_sh4M_entry


==================== Asm code ====================
2018-03-16 15:54:57.883120349 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4M_info:
	.quad	sat_sh4M_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.883742711 UTC

.section .text
.align 8
sat_sh4L_entry:
_cjva:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$c<_entry
	.size sat_sh4L_entry, .-sat_sh4L_entry


==================== Asm code ====================
2018-03-16 15:54:57.884318401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4L_info:
	.quad	sat_sh4L_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.884966069 UTC

.section .text
.align 8
sat_sh4K_entry:
_cjvi:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdMaybe_$ccompare_entry
	.size sat_sh4K_entry, .-sat_sh4K_entry


==================== Asm code ====================
2018-03-16 15:54:57.885624837 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4K_info:
	.quad	sat_sh4K_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.886819014 UTC

.section .text
.align 8
sat_sh4J_entry:
_cjvp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjvq
_cjvr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fOrdMaybe_$cp1Ord_entry
_cjvq:
	jmp *-16(%r13)
	.size sat_sh4J_entry, .-sat_sh4J_entry


==================== Asm code ====================
2018-03-16 15:54:57.887502333 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh4J_info:
	.quad	sat_sh4J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.888409421 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdMaybe_entry
.type GHC.Base.$fOrdMaybe_entry, @object
GHC.Base.$fOrdMaybe_entry:
_cjvt:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cjvx
_cjvw:
	leaq sat_sh4S_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	leaq sat_sh4R_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	leaq sat_sh4Q_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_sh4P_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_sh4M_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_sh4L_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_sh4K_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_sh4J_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq GHC.Classes.C:Ord_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjvx:
	movq $208,904(%r13)
	leaq GHC.Base.$fOrdMaybe_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdMaybe_entry, .-GHC.Base.$fOrdMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:57.889510465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdMaybe_info
.type GHC.Base.$fOrdMaybe_info, @object
GHC.Base.$fOrdMaybe_info:
	.quad	GHC.Base.$fOrdMaybe_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.894323561 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c/=_closure
.type GHC.Base.$fEqNonEmpty_$c/=_closure, @object
GHC.Base.$fEqNonEmpty_$c/=_closure:
	.quad	GHC.Base.$fEqNonEmpty_$c/=_info


==================== Asm code ====================
2018-03-16 15:54:57.895167447 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_$c/=_entry
.type GHC.Base.$fEqNonEmpty_$c/=_entry, @object
GHC.Base.$fEqNonEmpty_$c/=_entry:
_cjwr:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjwv
_cjww:
	leaq block_cjwo_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjwo
_cjwp:
	movq (%rbx),%rax
	jmp *(%rax)
_cjwv:
	leaq GHC.Base.$fEqNonEmpty_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_$c/=_entry, .-GHC.Base.$fEqNonEmpty_$c/=_entry


==================== Asm code ====================
2018-03-16 15:54:57.895845377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c/=_info
.type GHC.Base.$fEqNonEmpty_$c/=_info, @object
GHC.Base.$fEqNonEmpty_$c/=_info:
	.quad	GHC.Base.$fEqNonEmpty_$c/=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.896581263 UTC

.section .text
.align 8
_cjwo:
_cjwo:
	leaq block_cjwu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjwu
_cjwy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjwo, .-_cjwo


==================== Asm code ====================
2018-03-16 15:54:57.897164919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjwo_info:
	.quad	_cjwo
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.897942782 UTC

.section .text
.align 8
_cjwu:
_cjwu:
	leaq block_cjwC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _cjwu, .-_cjwu


==================== Asm code ====================
2018-03-16 15:54:57.898570651 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjwu_info:
	.quad	_cjwu
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.899304904 UTC

.section .text
.align 8
_cjwC:
_cjwC:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujx1
_cjwO:
	movq 24(%rbp),%rax
	leaq block_cjwM_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Classes.$fEq[]_$c==_entry@gotpcrel(%rip)
_ujx1:
	addq $32,%rbp
	jmp _cjwU
	.size _cjwC, .-_cjwC


==================== Asm code ====================
2018-03-16 15:54:57.899892148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjwC_info:
	.quad	_cjwC
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.900562125 UTC

.section .text
.align 8
_cjwM:
_cjwM:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujx2
_cjwY:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ujx2:
	addq $8,%rbp
	jmp _cjwU
	.size _cjwM, .-_cjwM


==================== Asm code ====================
2018-03-16 15:54:57.901118008 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjwM_info:
	.quad	_cjwM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.901787341 UTC

.section .text
.align 8
_cjwU:
_cjwU:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjwU, .-_cjwU


==================== Asm code ====================
2018-03-16 15:54:57.905057283 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c==_closure
.type GHC.Base.$w$c==_closure, @object
GHC.Base.$w$c==_closure:
	.quad	GHC.Base.$w$c==_info


==================== Asm code ====================
2018-03-16 15:54:57.906290975 UTC

.section .text
.align 8
.globl GHC.Base.$w$c==_entry
.type GHC.Base.$w$c==_entry, @object
GHC.Base.$w$c==_entry:
_cjxS:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjxT
_cjxU:
	leaq block_cjxM_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_cjxT:
	leaq GHC.Base.$w$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c==_entry, .-GHC.Base.$w$c==_entry


==================== Asm code ====================
2018-03-16 15:54:57.906923998 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c==_info
.type GHC.Base.$w$c==_info, @object
GHC.Base.$w$c==_info:
	.quad	GHC.Base.$w$c==_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.907640189 UTC

.section .text
.align 8
_cjxM:
_cjxM:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cjxP
_cjxQ:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.Classes.$fEq[]_$c==_entry@gotpcrel(%rip)
_cjxP:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjxM, .-_cjxM


==================== Asm code ====================
2018-03-16 15:54:57.908226125 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjxM_info:
	.quad	_cjxM
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.911890937 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c==_closure
.type GHC.Base.$fEqNonEmpty_$c==_closure, @object
GHC.Base.$fEqNonEmpty_$c==_closure:
	.quad	GHC.Base.$fEqNonEmpty_$c==_info


==================== Asm code ====================
2018-03-16 15:54:57.912731032 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_$c==_entry
.type GHC.Base.$fEqNonEmpty_$c==_entry, @object
GHC.Base.$fEqNonEmpty_$c==_entry:
_cjym:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjyq
_cjyr:
	leaq block_cjyj_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjyj
_cjyk:
	movq (%rbx),%rax
	jmp *(%rax)
_cjyq:
	leaq GHC.Base.$fEqNonEmpty_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_$c==_entry, .-GHC.Base.$fEqNonEmpty_$c==_entry


==================== Asm code ====================
2018-03-16 15:54:57.913710137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_$c==_info
.type GHC.Base.$fEqNonEmpty_$c==_info, @object
GHC.Base.$fEqNonEmpty_$c==_info:
	.quad	GHC.Base.$fEqNonEmpty_$c==_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.914431484 UTC

.section .text
.align 8
_cjyj:
_cjyj:
	leaq block_cjyp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjyp
_cjyt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjyj, .-_cjyj


==================== Asm code ====================
2018-03-16 15:54:57.915026098 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjyj_info:
	.quad	_cjyj
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.915618274 UTC

.section .text
.align 8
_cjyp:
_cjyp:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c==_entry
	.size _cjyp, .-_cjyp


==================== Asm code ====================
2018-03-16 15:54:57.916203404 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjyp_info:
	.quad	_cjyp
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.919608333 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_closure
.type GHC.Base.$fEqNonEmpty_closure, @object
GHC.Base.$fEqNonEmpty_closure:
	.quad	GHC.Base.$fEqNonEmpty_info


==================== Asm code ====================
2018-03-16 15:54:57.920277647 UTC

.section .text
.align 8
sat_sh5l_entry:
_cjyY:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqNonEmpty_$c/=_entry
	.size sat_sh5l_entry, .-sat_sh5l_entry


==================== Asm code ====================
2018-03-16 15:54:57.920873483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh5l_info:
	.quad	sat_sh5l_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.921910613 UTC

.section .text
.align 8
sat_sh5k_entry:
_cjz6:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fEqNonEmpty_$c==_entry
	.size sat_sh5k_entry, .-sat_sh5k_entry


==================== Asm code ====================
2018-03-16 15:54:57.922469413 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh5k_info:
	.quad	sat_sh5k_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:57.923282768 UTC

.section .text
.align 8
.globl GHC.Base.$fEqNonEmpty_entry
.type GHC.Base.$fEqNonEmpty_entry, @object
GHC.Base.$fEqNonEmpty_entry:
_cjza:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cjze
_cjzd:
	leaq sat_sh5l_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_sh5k_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq GHC.Classes.C:Eq_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjze:
	movq $56,904(%r13)
	leaq GHC.Base.$fEqNonEmpty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fEqNonEmpty_entry, .-GHC.Base.$fEqNonEmpty_entry


==================== Asm code ====================
2018-03-16 15:54:57.923929156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fEqNonEmpty_info
.type GHC.Base.$fEqNonEmpty_info, @object
GHC.Base.$fEqNonEmpty_info:
	.quad	GHC.Base.$fEqNonEmpty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.927532748 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_closure
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_closure, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cp1Ord_info


==================== Asm code ====================
2018-03-16 15:54:57.928309502 UTC

.section .text
.align 8
sat_sh5n_entry:
_cjzD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjzE
_cjzF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
_cjzE:
	jmp *-16(%r13)
	.size sat_sh5n_entry, .-sat_sh5n_entry


==================== Asm code ====================
2018-03-16 15:54:57.928943736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh5n_info:
	.quad	sat_sh5n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:57.929683106 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_entry, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_entry:
_cjzG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cjzK
_cjzJ:
	leaq sat_sh5n_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fEqNonEmpty_entry
_cjzK:
	movq $24,904(%r13)
	leaq GHC.Base.$fOrdNonEmpty_$cp1Ord_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cp1Ord_entry, .-GHC.Base.$fOrdNonEmpty_$cp1Ord_entry


==================== Asm code ====================
2018-03-16 15:54:57.930327562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cp1Ord_info
.type GHC.Base.$fOrdNonEmpty_$cp1Ord_info, @object
GHC.Base.$fOrdNonEmpty_$cp1Ord_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:57.933886398 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$ccompare_closure
.type GHC.Base.$w$ccompare_closure, @object
GHC.Base.$w$ccompare_closure:
	.quad	GHC.Base.$w$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:57.934662761 UTC

.section .text
.align 8
.globl GHC.Base.$w$ccompare_entry
.type GHC.Base.$w$ccompare_entry, @object
GHC.Base.$w$ccompare_entry:
_cjA6:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjA7
_cjA8:
	leaq block_cjzZ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cjA7:
	leaq GHC.Base.$w$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$ccompare_entry, .-GHC.Base.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:57.935384599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$ccompare_info
.type GHC.Base.$w$ccompare_info, @object
GHC.Base.$w$ccompare_info:
	.quad	GHC.Base.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.936175304 UTC

.section .text
.align 8
_cjzZ:
_cjzZ:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujAi
_cjA4:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ujAi:
	cmpq $2,%rbx
	jb _cjA2
_cjA3:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.Classes.$fOrd[]_$ccompare_entry@gotpcrel(%rip)
_cjA2:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjzZ, .-_cjzZ


==================== Asm code ====================
2018-03-16 15:54:57.936839599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjzZ_info:
	.quad	_cjzZ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.94033229 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$ccompare_closure
.type GHC.Base.$fOrdNonEmpty_$ccompare_closure, @object
GHC.Base.$fOrdNonEmpty_$ccompare_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$ccompare_info


==================== Asm code ====================
2018-03-16 15:54:57.941117903 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$ccompare_entry
.type GHC.Base.$fOrdNonEmpty_$ccompare_entry, @object
GHC.Base.$fOrdNonEmpty_$ccompare_entry:
_cjAF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjAJ
_cjAK:
	leaq block_cjAC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjAC
_cjAD:
	movq (%rbx),%rax
	jmp *(%rax)
_cjAJ:
	leaq GHC.Base.$fOrdNonEmpty_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$ccompare_entry, .-GHC.Base.$fOrdNonEmpty_$ccompare_entry


==================== Asm code ====================
2018-03-16 15:54:57.941852465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$ccompare_info
.type GHC.Base.$fOrdNonEmpty_$ccompare_info, @object
GHC.Base.$fOrdNonEmpty_$ccompare_info:
	.quad	GHC.Base.$fOrdNonEmpty_$ccompare_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.942573395 UTC

.section .text
.align 8
_cjAC:
_cjAC:
	leaq block_cjAI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjAI
_cjAM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjAC, .-_cjAC


==================== Asm code ====================
2018-03-16 15:54:57.943218818 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjAC_info:
	.quad	_cjAC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.943846708 UTC

.section .text
.align 8
_cjAI:
_cjAI:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$ccompare_entry
	.size _cjAI, .-_cjAI


==================== Asm code ====================
2018-03-16 15:54:57.94449752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjAI_info:
	.quad	_cjAI
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.948082571 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<_closure
.type GHC.Base.$w$c<_closure, @object
GHC.Base.$w$c<_closure:
	.quad	GHC.Base.$w$c<_info


==================== Asm code ====================
2018-03-16 15:54:57.948929407 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<_entry
.type GHC.Base.$w$c<_entry, @object
GHC.Base.$w$c<_entry:
_cjBj:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjBk
_cjBl:
	leaq block_cjBc_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cjBk:
	leaq GHC.Base.$w$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<_entry, .-GHC.Base.$w$c<_entry


==================== Asm code ====================
2018-03-16 15:54:57.949654313 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<_info
.type GHC.Base.$w$c<_info, @object
GHC.Base.$w$c<_info:
	.quad	GHC.Base.$w$c<_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.950444166 UTC

.section .text
.align 8
_cjBc:
_cjBc:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujBv
_cjBh:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ujBv:
	cmpq $2,%rbx
	jb _cjBf
_cjBg:
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.Classes.$fOrd[]_$c<_entry@gotpcrel(%rip)
_cjBf:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjBc, .-_cjBc


==================== Asm code ====================
2018-03-16 15:54:57.951152198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjBc_info:
	.quad	_cjBc
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.954742406 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<_closure
.type GHC.Base.$fOrdNonEmpty_$c<_closure, @object
GHC.Base.$fOrdNonEmpty_$c<_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c<_info


==================== Asm code ====================
2018-03-16 15:54:57.95553736 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c<_entry
.type GHC.Base.$fOrdNonEmpty_$c<_entry, @object
GHC.Base.$fOrdNonEmpty_$c<_entry:
_cjBS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjBW
_cjBX:
	leaq block_cjBP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjBP
_cjBQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cjBW:
	leaq GHC.Base.$fOrdNonEmpty_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c<_entry, .-GHC.Base.$fOrdNonEmpty_$c<_entry


==================== Asm code ====================
2018-03-16 15:54:57.956143001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<_info
.type GHC.Base.$fOrdNonEmpty_$c<_info, @object
GHC.Base.$fOrdNonEmpty_$c<_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c<_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.956844488 UTC

.section .text
.align 8
_cjBP:
_cjBP:
	leaq block_cjBV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjBV
_cjBZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjBP, .-_cjBP


==================== Asm code ====================
2018-03-16 15:54:57.957498646 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjBP_info:
	.quad	_cjBP
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.958076297 UTC

.section .text
.align 8
_cjBV:
_cjBV:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c<_entry
	.size _cjBV, .-_cjBV


==================== Asm code ====================
2018-03-16 15:54:57.958665181 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjBV_info:
	.quad	_cjBV
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.962811699 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<=_closure
.type GHC.Base.$w$c<=_closure, @object
GHC.Base.$w$c<=_closure:
	.quad	GHC.Base.$w$c<=_info


==================== Asm code ====================
2018-03-16 15:54:57.9641128 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<=_entry
.type GHC.Base.$w$c<=_entry, @object
GHC.Base.$w$c<=_entry:
_cjCw:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjCx
_cjCy:
	leaq block_cjCp_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%rbp)
	movq %r8,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cjCx:
	leaq GHC.Base.$w$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<=_entry, .-GHC.Base.$w$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:57.964880717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<=_info
.type GHC.Base.$w$c<=_info, @object
GHC.Base.$w$c<=_info:
	.quad	GHC.Base.$w$c<=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:57.965794643 UTC

.section .text
.align 8
_cjCp:
_cjCp:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujCU
_ujCV:
	addq $32,%rbp
	jmp _cjCu
_ujCW:
	addq $32,%rbp
	jmp _cjCP
_ujCU:
	cmpq $2,%rbx
	jb _ujCW
_cjCt:
	movq 24(%rbp),%rax
	leaq block_cjCE_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Classes.$fOrd[]_$ccompare_entry@gotpcrel(%rip)
	.size _cjCp, .-_cjCp


==================== Asm code ====================
2018-03-16 15:54:57.96643434 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjCp_info:
	.quad	_cjCp
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.967041741 UTC

.section .text
.align 8
_cjCE:
_cjCE:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujCX
_ujCY:
	addq $8,%rbp
	jmp _cjCu
_ujCX:
	addq $8,%rbp
	jmp _cjCP
	.size _cjCE, .-_cjCE


==================== Asm code ====================
2018-03-16 15:54:57.967616465 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjCE_info:
	.quad	_cjCE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.968220796 UTC

.section .text
.align 8
_cjCP:
_cjCP:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjCP, .-_cjCP


==================== Asm code ====================
2018-03-16 15:54:57.968836525 UTC

.section .text
.align 8
_cjCu:
_cjCu:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjCu, .-_cjCu


==================== Asm code ====================
2018-03-16 15:54:57.972681943 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<=_closure
.type GHC.Base.$fOrdNonEmpty_$c<=_closure, @object
GHC.Base.$fOrdNonEmpty_$c<=_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c<=_info


==================== Asm code ====================
2018-03-16 15:54:57.97349013 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c<=_entry
.type GHC.Base.$fOrdNonEmpty_$c<=_entry, @object
GHC.Base.$fOrdNonEmpty_$c<=_entry:
_cjDz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjDD
_cjDE:
	leaq block_cjDw_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjDw
_cjDx:
	movq (%rbx),%rax
	jmp *(%rax)
_cjDD:
	leaq GHC.Base.$fOrdNonEmpty_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c<=_entry, .-GHC.Base.$fOrdNonEmpty_$c<=_entry


==================== Asm code ====================
2018-03-16 15:54:57.974136439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c<=_info
.type GHC.Base.$fOrdNonEmpty_$c<=_info, @object
GHC.Base.$fOrdNonEmpty_$c<=_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c<=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.974838318 UTC

.section .text
.align 8
_cjDw:
_cjDw:
	leaq block_cjDC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjDC
_cjDG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjDw, .-_cjDw


==================== Asm code ====================
2018-03-16 15:54:57.975444978 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjDw_info:
	.quad	_cjDw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.976111003 UTC

.section .text
.align 8
_cjDC:
_cjDC:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c<=_entry
	.size _cjDC, .-_cjDC


==================== Asm code ====================
2018-03-16 15:54:57.9767332 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjDC_info:
	.quad	_cjDC
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.981978594 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmax_closure
.type GHC.Base.$fOrdNonEmpty_$cmax_closure, @object
GHC.Base.$fOrdNonEmpty_$cmax_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cmax_info


==================== Asm code ====================
2018-03-16 15:54:57.98282688 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cmax_entry
.type GHC.Base.$fOrdNonEmpty_$cmax_entry, @object
GHC.Base.$fOrdNonEmpty_$cmax_entry:
_cjE9:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cjEd
_cjEe:
	leaq block_cjE6_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjE6
_cjE7:
	movq (%rbx),%rax
	jmp *(%rax)
_cjEd:
	leaq GHC.Base.$fOrdNonEmpty_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cmax_entry, .-GHC.Base.$fOrdNonEmpty_$cmax_entry


==================== Asm code ====================
2018-03-16 15:54:57.98343683 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmax_info
.type GHC.Base.$fOrdNonEmpty_$cmax_info, @object
GHC.Base.$fOrdNonEmpty_$cmax_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cmax_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.984111856 UTC

.section .text
.align 8
_cjE6:
_cjE6:
	leaq block_cjEc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cjEc
_cjEg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjE6, .-_cjE6


==================== Asm code ====================
2018-03-16 15:54:57.984702232 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjE6_info:
	.quad	_cjE6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.985405177 UTC

.section .text
.align 8
_cjEc:
_cjEc:
	leaq block_cjEk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
	.size _cjEc, .-_cjEc


==================== Asm code ====================
2018-03-16 15:54:57.98605457 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjEc_info:
	.quad	_cjEc
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.986781868 UTC

.section .text
.align 8
_cjEk:
_cjEk:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujEN
_ujEO:
	addq $24,%rbp
	jmp _cjEK
_ujEP:
	addq $40,%rbp
	jmp _cjEG
_ujEN:
	cmpq $2,%rbx
	jb _ujEP
_cjEw:
	movq 16(%rbp),%rax
	leaq block_cjEu_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Classes.$fOrd[]_$ccompare_entry@gotpcrel(%rip)
	.size _cjEk, .-_cjEk


==================== Asm code ====================
2018-03-16 15:54:57.987412842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjEk_info:
	.quad	_cjEk
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.988053512 UTC

.section .text
.align 8
_cjEu:
_cjEu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujEQ
_ujER:
	addq $8,%rbp
	jmp _cjEK
_ujEQ:
	addq $24,%rbp
	jmp _cjEG
	.size _cjEu, .-_cjEu


==================== Asm code ====================
2018-03-16 15:54:57.988628496 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjEu_info:
	.quad	_cjEu
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:57.989226706 UTC

.section .text
.align 8
_cjEG:
_cjEG:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjEG, .-_cjEG


==================== Asm code ====================
2018-03-16 15:54:57.989914982 UTC

.section .text
.align 8
_cjEK:
_cjEK:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjEK, .-_cjEK


==================== Asm code ====================
2018-03-16 15:54:57.99556443 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmin_closure
.type GHC.Base.$fOrdNonEmpty_$cmin_closure, @object
GHC.Base.$fOrdNonEmpty_$cmin_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$cmin_info


==================== Asm code ====================
2018-03-16 15:54:57.996778607 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$cmin_entry
.type GHC.Base.$fOrdNonEmpty_$cmin_entry, @object
GHC.Base.$fOrdNonEmpty_$cmin_entry:
_cjFH:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cjFL
_cjFM:
	leaq block_cjFE_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjFE
_cjFF:
	movq (%rbx),%rax
	jmp *(%rax)
_cjFL:
	leaq GHC.Base.$fOrdNonEmpty_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$cmin_entry, .-GHC.Base.$fOrdNonEmpty_$cmin_entry


==================== Asm code ====================
2018-03-16 15:54:57.997850968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$cmin_info
.type GHC.Base.$fOrdNonEmpty_$cmin_info, @object
GHC.Base.$fOrdNonEmpty_$cmin_info:
	.quad	GHC.Base.$fOrdNonEmpty_$cmin_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:57.998834439 UTC

.section .text
.align 8
_cjFE:
_cjFE:
	leaq block_cjFK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cjFK
_cjFO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjFE, .-_cjFE


==================== Asm code ====================
2018-03-16 15:54:57.999723438 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjFE_info:
	.quad	_cjFE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.000373105 UTC

.section .text
.align 8
_cjFK:
_cjFK:
	leaq block_cjFS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
	.size _cjFK, .-_cjFK


==================== Asm code ====================
2018-03-16 15:54:58.000946924 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjFK_info:
	.quad	_cjFK
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.001687327 UTC

.section .text
.align 8
_cjFS:
_cjFS:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujGl
_ujGm:
	addq $40,%rbp
	jmp _cjGi
_ujGn:
	addq $24,%rbp
	jmp _cjGe
_ujGl:
	cmpq $2,%rbx
	jb _ujGn
_cjG4:
	movq 16(%rbp),%rax
	leaq block_cjG2_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Classes.$fOrd[]_$ccompare_entry@gotpcrel(%rip)
	.size _cjFS, .-_cjFS


==================== Asm code ====================
2018-03-16 15:54:58.002306124 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjFS_info:
	.quad	_cjFS
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.003420613 UTC

.section .text
.align 8
_cjG2:
_cjG2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujGo
_ujGp:
	addq $24,%rbp
	jmp _cjGi
_ujGo:
	addq $8,%rbp
	jmp _cjGe
	.size _cjG2, .-_cjG2


==================== Asm code ====================
2018-03-16 15:54:58.004053603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjG2_info:
	.quad	_cjG2
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.004690833 UTC

.section .text
.align 8
_cjGe:
_cjGe:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjGe, .-_cjGe


==================== Asm code ====================
2018-03-16 15:54:58.005353468 UTC

.section .text
.align 8
_cjGi:
_cjGi:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjGi, .-_cjGi


==================== Asm code ====================
2018-03-16 15:54:58.009500492 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c>=_closure
.type GHC.Base.$w$c>=_closure, @object
GHC.Base.$w$c>=_closure:
	.quad	GHC.Base.$w$c>=_info


==================== Asm code ====================
2018-03-16 15:54:58.01026278 UTC

.section .text
.align 8
.globl GHC.Base.$w$c>=_entry
.type GHC.Base.$w$c>=_entry, @object
GHC.Base.$w$c>=_entry:
_cjHj:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cjHk
_cjHl:
	leaq block_cjHc_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-56,%rbp
	jmp *GHC.Classes.compare_entry@gotpcrel(%rip)
_cjHk:
	leaq GHC.Base.$w$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c>=_entry, .-GHC.Base.$w$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:58.01091512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c>=_info
.type GHC.Base.$w$c>=_info, @object
GHC.Base.$w$c>=_info:
	.quad	GHC.Base.$w$c>=_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.011650291 UTC

.section .text
.align 8
_cjHc:
_cjHc:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ujHH
_ujHI:
	addq $32,%rbp
	jmp _cjHh
_ujHJ:
	addq $32,%rbp
	jmp _cjHC
_ujHH:
	cmpq $2,%rbx
	jb _ujHJ
_cjHg:
	movq 24(%rbp),%rax
	leaq block_cjHr_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Classes.$fOrd[]_$ccompare_entry@gotpcrel(%rip)
	.size _cjHc, .-_cjHc


==================== Asm code ====================
2018-03-16 15:54:58.012290862 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjHc_info:
	.quad	_cjHc
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.012935469 UTC

.section .text
.align 8
_cjHr:
_cjHr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ujHK
_ujHL:
	addq $8,%rbp
	jmp _cjHh
_ujHK:
	addq $8,%rbp
	jmp _cjHC
	.size _cjHr, .-_cjHr


==================== Asm code ====================
2018-03-16 15:54:58.013939174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjHr_info:
	.quad	_cjHr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.014566235 UTC

.section .text
.align 8
_cjHC:
_cjHC:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjHC, .-_cjHC


==================== Asm code ====================
2018-03-16 15:54:58.015183544 UTC

.section .text
.align 8
_cjHh:
_cjHh:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjHh, .-_cjHh


==================== Asm code ====================
2018-03-16 15:54:58.018788943 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c>=_closure
.type GHC.Base.$fOrdNonEmpty_$c>=_closure, @object
GHC.Base.$fOrdNonEmpty_$c>=_closure:
	.quad	GHC.Base.$fOrdNonEmpty_$c>=_info


==================== Asm code ====================
2018-03-16 15:54:58.019532585 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_$c>=_entry
.type GHC.Base.$fOrdNonEmpty_$c>=_entry, @object
GHC.Base.$fOrdNonEmpty_$c>=_entry:
_cjIm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjIq
_cjIr:
	leaq block_cjIj_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjIj
_cjIk:
	movq (%rbx),%rax
	jmp *(%rax)
_cjIq:
	leaq GHC.Base.$fOrdNonEmpty_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_$c>=_entry, .-GHC.Base.$fOrdNonEmpty_$c>=_entry


==================== Asm code ====================
2018-03-16 15:54:58.02018219 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_$c>=_info
.type GHC.Base.$fOrdNonEmpty_$c>=_info, @object
GHC.Base.$fOrdNonEmpty_$c>=_info:
	.quad	GHC.Base.$fOrdNonEmpty_$c>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.020905742 UTC

.section .text
.align 8
_cjIj:
_cjIj:
	leaq block_cjIp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjIp
_cjIt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjIj, .-_cjIj


==================== Asm code ====================
2018-03-16 15:54:58.021662498 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjIj_info:
	.quad	_cjIj
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.022259106 UTC

.section .text
.align 8
_cjIp:
_cjIp:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Base.$w$c>=_entry
	.size _cjIp, .-_cjIp


==================== Asm code ====================
2018-03-16 15:54:58.02279775 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjIp_info:
	.quad	_cjIp
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.029008673 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_closure
.type GHC.Base.$fOrdNonEmpty_closure, @object
GHC.Base.$fOrdNonEmpty_closure:
	.quad	GHC.Base.$fOrdNonEmpty_info


==================== Asm code ====================
2018-03-16 15:54:58.029730056 UTC

.section .text
.align 8
sat_sh6U_entry:
_cjIY:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$cmin_entry
	.size sat_sh6U_entry, .-sat_sh6U_entry


==================== Asm code ====================
2018-03-16 15:54:58.030272227 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6U_info:
	.quad	sat_sh6U_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.030907473 UTC

.section .text
.align 8
sat_sh6T_entry:
_cjJ6:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$cmax_entry
	.size sat_sh6T_entry, .-sat_sh6T_entry


==================== Asm code ====================
2018-03-16 15:54:58.031462123 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6T_info:
	.quad	sat_sh6T_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.032088039 UTC

.section .text
.align 8
sat_sh6S_entry:
_cjJe:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c>=_entry
	.size sat_sh6S_entry, .-sat_sh6S_entry


==================== Asm code ====================
2018-03-16 15:54:58.032647397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6S_info:
	.quad	sat_sh6S_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.034062707 UTC

.section .text
.align 8
sat_sh6R_entry:
_cjJm:
	movq %r14,%rdi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<_entry
	.size sat_sh6R_entry, .-sat_sh6R_entry


==================== Asm code ====================
2018-03-16 15:54:58.034597926 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6R_info:
	.quad	sat_sh6R_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.035210461 UTC

.section .text
.align 8
sat_sh6O_entry:
_cjJu:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<=_entry
	.size sat_sh6O_entry, .-sat_sh6O_entry


==================== Asm code ====================
2018-03-16 15:54:58.035742291 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6O_info:
	.quad	sat_sh6O_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.036380555 UTC

.section .text
.align 8
sat_sh6N_entry:
_cjJC:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$c<_entry
	.size sat_sh6N_entry, .-sat_sh6N_entry


==================== Asm code ====================
2018-03-16 15:54:58.036916076 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6N_info:
	.quad	sat_sh6N_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.037547178 UTC

.section .text
.align 8
sat_sh6M_entry:
_cjJK:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fOrdNonEmpty_$ccompare_entry
	.size sat_sh6M_entry, .-sat_sh6M_entry


==================== Asm code ====================
2018-03-16 15:54:58.038127632 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6M_info:
	.quad	sat_sh6M_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.038804418 UTC

.section .text
.align 8
sat_sh6L_entry:
_cjJR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjJS
_cjJT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fOrdNonEmpty_$cp1Ord_entry
_cjJS:
	jmp *-16(%r13)
	.size sat_sh6L_entry, .-sat_sh6L_entry


==================== Asm code ====================
2018-03-16 15:54:58.039416646 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh6L_info:
	.quad	sat_sh6L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.040870127 UTC

.section .text
.align 8
.globl GHC.Base.$fOrdNonEmpty_entry
.type GHC.Base.$fOrdNonEmpty_entry, @object
GHC.Base.$fOrdNonEmpty_entry:
_cjJV:
	addq $208,%r12
	cmpq 856(%r13),%r12
	ja _cjJZ
_cjJY:
	leaq sat_sh6U_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-192(%r12)
	leaq sat_sh6T_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	leaq sat_sh6S_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	leaq sat_sh6R_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-144(%r12)
	leaq sat_sh6O_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-128(%r12)
	leaq sat_sh6N_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	leaq sat_sh6M_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_sh6L_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq GHC.Classes.C:Ord_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -88(%r12),%rax
	movq %rax,-56(%r12)
	leaq -102(%r12),%rax
	movq %rax,-48(%r12)
	leaq -118(%r12),%rax
	movq %rax,-40(%r12)
	leaq -134(%r12),%rax
	movq %rax,-32(%r12)
	leaq -150(%r12),%rax
	movq %rax,-24(%r12)
	leaq -166(%r12),%rax
	movq %rax,-16(%r12)
	leaq -182(%r12),%rax
	movq %rax,-8(%r12)
	leaq -198(%r12),%rax
	movq %rax,(%r12)
	leaq -63(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjJZ:
	movq $208,904(%r13)
	leaq GHC.Base.$fOrdNonEmpty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fOrdNonEmpty_entry, .-GHC.Base.$fOrdNonEmpty_entry


==================== Asm code ====================
2018-03-16 15:54:58.041863039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fOrdNonEmpty_info
.type GHC.Base.$fOrdNonEmpty_info, @object
GHC.Base.$fOrdNonEmpty_info:
	.quad	GHC.Base.$fOrdNonEmpty_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.044139806 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO_$cfail_closure
.type GHC.Base.$fMonadIO_$cfail_closure, @object
GHC.Base.$fMonadIO_$cfail_closure:
	.quad	GHC.Base.$fMonadIO_$cfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.044766555 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadIO_$cfail_entry
.type GHC.Base.$fMonadIO_$cfail_entry, @object
GHC.Base.$fMonadIO_$cfail_entry:
_cjKQ:
	movq GHC.IO.failIO_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$fMonadIO_$cfail_entry, .-GHC.Base.$fMonadIO_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:58.045477171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadIO_$cfail_info
.type GHC.Base.$fMonadIO_$cfail_info, @object
GHC.Base.$fMonadIO_$cfail_info:
	.quad	GHC.Base.$fMonadIO_$cfail_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Si3a_srt+80


==================== Asm code ====================
2018-03-16 15:54:58.047212453 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadIO_closure
.type GHC.Base.$fMonadIO_closure, @object
GHC.Base.$fMonadIO_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeIO_closure+1
	.quad	GHC.Base.$fMonadIO1_closure+3
	.quad	GHC.Base.$fApplicativeIO2_closure+3
	.quad	GHC.Base.$fApplicativeIO4_closure+2
	.quad	GHC.Base.$fMonadIO_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.049308087 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$cfail_closure
.type GHC.Base.$fMonad[]_$cfail_closure, @object
GHC.Base.$fMonad[]_$cfail_closure:
	.quad	GHC.Base.$fMonad[]_$cfail_info


==================== Asm code ====================
2018-03-16 15:54:58.049979848 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad[]_$cfail_entry
.type GHC.Base.$fMonad[]_$cfail_entry, @object
GHC.Base.$fMonad[]_$cfail_entry:
_cjL2:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonad[]_$cfail_entry, .-GHC.Base.$fMonad[]_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:58.050491167 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad[]_$cfail_info
.type GHC.Base.$fMonad[]_$cfail_info, @object
GHC.Base.$fMonad[]_$cfail_info:
	.quad	GHC.Base.$fMonad[]_$cfail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.052239631 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad[]_closure
.type GHC.Base.$fMonad[]_closure, @object
GHC.Base.$fMonad[]_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicative[]_closure+1
	.quad	GHC.Base.$fMonad[]_$c>>=_closure+2
	.quad	GHC.Base.$fApplicative[]_$c*>_closure+2
	.quad	GHC.Base.$fApplicative[]_$cpure_closure+1
	.quad	GHC.Base.$fMonad[]_$cfail_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:58.054029602 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlus[]_closure
.type GHC.Base.$fMonadPlus[]_closure, @object
GHC.Base.$fMonadPlus[]_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternative[]_closure+1
	.quad	GHC.Base.$fMonad[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:58.057003798 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$c>>=_closure
.type GHC.Base.$fMonadMaybe_$c>>=_closure, @object
GHC.Base.$fMonadMaybe_$c>>=_closure:
	.quad	GHC.Base.$fMonadMaybe_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:58.05807289 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadMaybe_$c>>=_entry
.type GHC.Base.$fMonadMaybe_$c>>=_entry, @object
GHC.Base.$fMonadMaybe_$c>>=_entry:
_cjLo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjLp
_cjLq:
	leaq block_cjLh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cjLh
_cjLi:
	movq (%rbx),%rax
	jmp *(%rax)
_cjLp:
	leaq GHC.Base.$fMonadMaybe_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonadMaybe_$c>>=_entry, .-GHC.Base.$fMonadMaybe_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:58.058722593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$c>>=_info
.type GHC.Base.$fMonadMaybe_$c>>=_info, @object
GHC.Base.$fMonadMaybe_$c>>=_info:
	.quad	GHC.Base.$fMonadMaybe_$c>>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.059395516 UTC

.section .text
.align 8
_cjLh:
_cjLh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjLl
_cjLm:
	movq 6(%rbx),%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_cjLl:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjLh, .-_cjLh


==================== Asm code ====================
2018-03-16 15:54:58.059971918 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjLh_info:
	.quad	_cjLh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.061939527 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$cfail_closure
.type GHC.Base.$fMonadMaybe_$cfail_closure, @object
GHC.Base.$fMonadMaybe_$cfail_closure:
	.quad	GHC.Base.$fMonadMaybe_$cfail_info


==================== Asm code ====================
2018-03-16 15:54:58.062605246 UTC

.section .text
.align 8
.globl GHC.Base.$fMonadMaybe_$cfail_entry
.type GHC.Base.$fMonadMaybe_$cfail_entry, @object
GHC.Base.$fMonadMaybe_$cfail_entry:
_cjLP:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonadMaybe_$cfail_entry, .-GHC.Base.$fMonadMaybe_$cfail_entry


==================== Asm code ====================
2018-03-16 15:54:58.063224797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_$cfail_info
.type GHC.Base.$fMonadMaybe_$cfail_info, @object
GHC.Base.$fMonadMaybe_$cfail_info:
	.quad	GHC.Base.$fMonadMaybe_$cfail_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.065789449 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>=_closure
.type GHC.Base.$fMonad(->)_$c>>=_closure, @object
GHC.Base.$fMonad(->)_$c>>=_closure:
	.quad	GHC.Base.$fMonad(->)_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:58.066462345 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(->)_$c>>=_entry
.type GHC.Base.$fMonad(->)_$c>>=_entry, @object
GHC.Base.$fMonad(->)_$c>>=_entry:
_cjM2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cjM6
_cjM5:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cjM6:
	movq $32,904(%r13)
	leaq GHC.Base.$fMonad(->)_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(->)_$c>>=_entry, .-GHC.Base.$fMonad(->)_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:58.067105204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_$c>>=_info
.type GHC.Base.$fMonad(->)_$c>>=_info, @object
GHC.Base.$fMonad(->)_$c>>=_info:
	.quad	GHC.Base.$fMonad(->)_$c>>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.071568748 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>=_closure
.type GHC.Base.$fMonad(,)_$c>>=_closure, @object
GHC.Base.$fMonad(,)_$c>>=_closure:
	.quad	GHC.Base.$fMonad(,)_$c>>=_info


==================== Asm code ====================
2018-03-16 15:54:58.072323867 UTC

.section .text
.align 8
sat_sh7g_entry:
_cjMv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjMw
_cjMx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cjMt_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjMw:
	jmp *-16(%r13)
	.size sat_sh7g_entry, .-sat_sh7g_entry


==================== Asm code ====================
2018-03-16 15:54:58.073480662 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7g_info:
	.quad	sat_sh7g_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.074140777 UTC

.section .text
.align 8
_cjMt:
_cjMt:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cjMt, .-_cjMt


==================== Asm code ====================
2018-03-16 15:54:58.074718379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjMt_info:
	.quad	_cjMt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.075434056 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_$c>>=_entry
.type GHC.Base.$fMonad(,)_$c>>=_entry, @object
GHC.Base.$fMonad(,)_$c>>=_entry:
_cjMB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjMD
_cjME:
	leaq block_cjMg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjMg
_cjMh:
	movq (%rbx),%rax
	jmp *(%rax)
_cjMD:
	leaq GHC.Base.$fMonad(,)_$c>>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_$c>>=_entry, .-GHC.Base.$fMonad(,)_$c>>=_entry


==================== Asm code ====================
2018-03-16 15:54:58.076086742 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_$c>>=_info
.type GHC.Base.$fMonad(,)_$c>>=_info, @object
GHC.Base.$fMonad(,)_$c>>=_info:
	.quad	GHC.Base.$fMonad(,)_$c>>=_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.076718692 UTC

.section .text
.align 8
_cjMg:
_cjMg:
	leaq block_cjMl_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%r14
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _cjMg, .-_cjMg


==================== Asm code ====================
2018-03-16 15:54:58.077312471 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjMg_info:
	.quad	_cjMg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.078031329 UTC

.section .text
.align 8
_cjMl:
_cjMl:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cjMI
_cjMH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sh7g_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjMI:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjMl, .-_cjMl


==================== Asm code ====================
2018-03-16 15:54:58.078720916 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjMl_info:
	.quad	_cjMl
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.083532427 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*>_closure
.type GHC.Base.$fApplicative(,)_$c<*>_closure, @object
GHC.Base.$fApplicative(,)_$c<*>_closure:
	.quad	GHC.Base.$fApplicative(,)_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:58.084297515 UTC

.section .text
.align 8
sat_sh7r_entry:
_cjNB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjNC
_cjND:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cjNz_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjNC:
	jmp *-16(%r13)
	.size sat_sh7r_entry, .-sat_sh7r_entry


==================== Asm code ====================
2018-03-16 15:54:58.084897689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7r_info:
	.quad	sat_sh7r_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.085601445 UTC

.section .text
.align 8
_cjNz:
_cjNz:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cjNz, .-_cjNz


==================== Asm code ====================
2018-03-16 15:54:58.086169298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjNz_info:
	.quad	_cjNz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.086928444 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c<*>_entry
.type GHC.Base.$fApplicative(,)_$c<*>_entry, @object
GHC.Base.$fApplicative(,)_$c<*>_entry:
_cjNH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjNJ
_cjNK:
	leaq block_cjNk_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjNk
_cjNl:
	movq (%rbx),%rax
	jmp *(%rax)
_cjNJ:
	leaq GHC.Base.$fApplicative(,)_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c<*>_entry, .-GHC.Base.$fApplicative(,)_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:58.087576675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c<*>_info
.type GHC.Base.$fApplicative(,)_$c<*>_info, @object
GHC.Base.$fApplicative(,)_$c<*>_info:
	.quad	GHC.Base.$fApplicative(,)_$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.088293545 UTC

.section .text
.align 8
_cjNk:
_cjNk:
	leaq block_cjNp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjNp
_cjNq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjNk, .-_cjNk


==================== Asm code ====================
2018-03-16 15:54:58.088884726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjNk_info:
	.quad	_cjNk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.089699233 UTC

.section .text
.align 8
_cjNp:
_cjNp:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cjNO
_cjNN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-88(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sh7r_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjNO:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjNp, .-_cjNp


==================== Asm code ====================
2018-03-16 15:54:58.09041517 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjNp_info:
	.quad	_cjNp
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.095134889 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c*>_closure
.type GHC.Base.$fApplicative(,)_$c*>_closure, @object
GHC.Base.$fApplicative(,)_$c*>_closure:
	.quad	GHC.Base.$fApplicative(,)_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:58.095873427 UTC

.section .text
.align 8
sat_sh7D_entry:
_cjOL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjOM
_cjON:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cjOJ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjOM:
	jmp *-16(%r13)
	.size sat_sh7D_entry, .-sat_sh7D_entry


==================== Asm code ====================
2018-03-16 15:54:58.09653177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7D_info:
	.quad	sat_sh7D_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.097152808 UTC

.section .text
.align 8
_cjOJ:
_cjOJ:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cjOJ, .-_cjOJ


==================== Asm code ====================
2018-03-16 15:54:58.097764657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjOJ_info:
	.quad	_cjOJ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.098488856 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$c*>_entry
.type GHC.Base.$fApplicative(,)_$c*>_entry, @object
GHC.Base.$fApplicative(,)_$c*>_entry:
_cjOR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cjOT
_cjOU:
	leaq block_cjOv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjOv
_cjOw:
	movq (%rbx),%rax
	jmp *(%rax)
_cjOT:
	leaq GHC.Base.$fApplicative(,)_$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$c*>_entry, .-GHC.Base.$fApplicative(,)_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:58.099132349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$c*>_info
.type GHC.Base.$fApplicative(,)_$c*>_info, @object
GHC.Base.$fApplicative(,)_$c*>_info:
	.quad	GHC.Base.$fApplicative(,)_$c*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.099827908 UTC

.section .text
.align 8
_cjOv:
_cjOv:
	leaq block_cjOA_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cjOA
_cjOB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjOv, .-_cjOv


==================== Asm code ====================
2018-03-16 15:54:58.100404012 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjOv_info:
	.quad	_cjOv
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.101165425 UTC

.section .text
.align 8
_cjOA:
_cjOA:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cjOY
_cjOX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sh7D_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjOY:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjOA, .-_cjOA


==================== Asm code ====================
2018-03-16 15:54:58.101892515 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjOA_info:
	.quad	_cjOA
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.106860591 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$cliftA2_closure
.type GHC.Base.$fApplicative(,)_$cliftA2_closure, @object
GHC.Base.$fApplicative(,)_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative(,)_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:58.107690334 UTC

.section .text
.align 8
sat_sh7P_entry:
_cjPT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjPU
_cjPV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cjPR_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjPU:
	jmp *-16(%r13)
	.size sat_sh7P_entry, .-sat_sh7P_entry


==================== Asm code ====================
2018-03-16 15:54:58.108324996 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7P_info:
	.quad	sat_sh7P_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.108924017 UTC

.section .text
.align 8
_cjPR:
_cjPR:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _cjPR, .-_cjPR


==================== Asm code ====================
2018-03-16 15:54:58.109941834 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjPR_info:
	.quad	_cjPR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.110657689 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_$cliftA2_entry
.type GHC.Base.$fApplicative(,)_$cliftA2_entry, @object
GHC.Base.$fApplicative(,)_$cliftA2_entry:
_cjPZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjQ1
_cjQ2:
	leaq block_cjPC_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cjPC
_cjPD:
	movq (%rbx),%rax
	jmp *(%rax)
_cjQ1:
	leaq GHC.Base.$fApplicative(,)_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_$cliftA2_entry, .-GHC.Base.$fApplicative(,)_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:58.111790021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_$cliftA2_info
.type GHC.Base.$fApplicative(,)_$cliftA2_info, @object
GHC.Base.$fApplicative(,)_$cliftA2_info:
	.quad	GHC.Base.$fApplicative(,)_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.112591596 UTC

.section .text
.align 8
_cjPC:
_cjPC:
	leaq block_cjPH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjPH
_cjPI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjPC, .-_cjPC


==================== Asm code ====================
2018-03-16 15:54:58.113295307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjPC_info:
	.quad	_cjPC
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.114099578 UTC

.section .text
.align 8
_cjPH:
_cjPH:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cjQ6
_cjQ5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sh7P_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjQ6:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjPH, .-_cjPH


==================== Asm code ====================
2018-03-16 15:54:58.114833961 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjPH_info:
	.quad	_cjPH
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.120201387 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:58.120915801 UTC

.section .text
.align 8
sat_sh80_entry:
_cjQS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjQT
_cjQU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjQT:
	jmp *-16(%r13)
	.size sat_sh80_entry, .-sat_sh80_entry


==================== Asm code ====================
2018-03-16 15:54:58.121567412 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh80_info:
	.quad	sat_sh80_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.122218526 UTC

.section .text
.align 8
sat_sh7Z_entry:
_cjQZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjR0
_cjR1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjR0:
	jmp *-16(%r13)
	.size sat_sh7Z_entry, .-sat_sh7Z_entry


==================== Asm code ====================
2018-03-16 15:54:58.122805581 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7Z_info:
	.quad	sat_sh7Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.123488214 UTC

.section .text
.align 8
sat_sh7Y_entry:
_cjR6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjR7
_cjR8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjR7:
	jmp *-16(%r13)
	.size sat_sh7Y_entry, .-sat_sh7Y_entry


==================== Asm code ====================
2018-03-16 15:54:58.124046773 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7Y_info:
	.quad	sat_sh7Y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.124686999 UTC

.section .text
.align 8
sat_sh7X_entry:
_cjRd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjRe
_cjRf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjRe:
	jmp *-16(%r13)
	.size sat_sh7X_entry, .-sat_sh7X_entry


==================== Asm code ====================
2018-03-16 15:54:58.125566668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7X_info:
	.quad	sat_sh7X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.126294198 UTC

.section .text
.align 8
sat_sh7W_entry:
_cjRk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjRl
_cjRm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjRl:
	jmp *-16(%r13)
	.size sat_sh7W_entry, .-sat_sh7W_entry


==================== Asm code ====================
2018-03-16 15:54:58.126882122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh7W_info:
	.quad	sat_sh7W_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.127687065 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_entry:
_cjRo:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _cjRs
_cjRr:
	leaq sat_sh80_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r9,-144(%r12)
	leaq sat_sh7Z_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r8,-120(%r12)
	leaq sat_sh7Y_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %rdi,-96(%r12)
	leaq sat_sh7X_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	leaq sat_sh7W_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	movq (,,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -136(%r12),%rax
	movq %rax,-8(%r12)
	leaq -160(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjRs:
	movq $168,904(%r13)
	leaq GHC.Base.$fMonoid(,,,,)_$cmempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:58.128495745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.133440385 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:58.134204059 UTC

.section .text
.align 8
sat_sh88_entry:
_cjSg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjSh
_cjSi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjSh:
	jmp *-16(%r13)
	.size sat_sh88_entry, .-sat_sh88_entry


==================== Asm code ====================
2018-03-16 15:54:58.134775429 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh88_info:
	.quad	sat_sh88_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.135451469 UTC

.section .text
.align 8
sat_sh87_entry:
_cjSn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjSo
_cjSp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjSo:
	jmp *-16(%r13)
	.size sat_sh87_entry, .-sat_sh87_entry


==================== Asm code ====================
2018-03-16 15:54:58.136063341 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh87_info:
	.quad	sat_sh87_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.1367019 UTC

.section .text
.align 8
sat_sh86_entry:
_cjSu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjSv
_cjSw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjSv:
	jmp *-16(%r13)
	.size sat_sh86_entry, .-sat_sh86_entry


==================== Asm code ====================
2018-03-16 15:54:58.137323186 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh86_info:
	.quad	sat_sh86_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.138075466 UTC

.section .text
.align 8
sat_sh85_entry:
_cjSB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjSC
_cjSD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjSC:
	jmp *-16(%r13)
	.size sat_sh85_entry, .-sat_sh85_entry


==================== Asm code ====================
2018-03-16 15:54:58.13867803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh85_info:
	.quad	sat_sh85_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.139463329 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,,)_$cmempty_entry:
_cjSF:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cjSJ
_cjSI:
	leaq sat_sh88_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r8,-112(%r12)
	leaq sat_sh87_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rdi,-88(%r12)
	leaq sat_sh86_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rsi,-64(%r12)
	leaq sat_sh85_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjSJ:
	movq $136,904(%r13)
	leaq GHC.Base.$fMonoid(,,,)_$cmempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:58.140260035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.145517416 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmempty_closure
.type GHC.Base.$fMonoid(,,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:58.146359913 UTC

.section .text
.align 8
sat_sh8e_entry:
_cjTq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjTr
_cjTs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjTr:
	jmp *-16(%r13)
	.size sat_sh8e_entry, .-sat_sh8e_entry


==================== Asm code ====================
2018-03-16 15:54:58.146960789 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8e_info:
	.quad	sat_sh8e_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.14764854 UTC

.section .text
.align 8
sat_sh8d_entry:
_cjTx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjTy
_cjTz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjTy:
	jmp *-16(%r13)
	.size sat_sh8d_entry, .-sat_sh8d_entry


==================== Asm code ====================
2018-03-16 15:54:58.14824677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8d_info:
	.quad	sat_sh8d_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.148923977 UTC

.section .text
.align 8
sat_sh8c_entry:
_cjTE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjTF
_cjTG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjTF:
	jmp *-16(%r13)
	.size sat_sh8c_entry, .-sat_sh8c_entry


==================== Asm code ====================
2018-03-16 15:54:58.149952308 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8c_info:
	.quad	sat_sh8c_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.150715126 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmempty_entry
.type GHC.Base.$fMonoid(,,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,,)_$cmempty_entry:
_cjTI:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cjTM
_cjTL:
	leaq sat_sh8e_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %rdi,-80(%r12)
	leaq sat_sh8d_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-56(%r12)
	leaq sat_sh8c_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -48(%r12),%rax
	movq %rax,-16(%r12)
	leaq -72(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjTM:
	movq $104,904(%r13)
	leaq GHC.Base.$fMonoid(,,)_$cmempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmempty_entry, .-GHC.Base.$fMonoid(,,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:58.15196548 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmempty_info
.type GHC.Base.$fMonoid(,,)_$cmempty_info, @object
GHC.Base.$fMonoid(,,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.155794888 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmempty_closure
.type GHC.Base.$fMonoid(,)_$cmempty_closure, @object
GHC.Base.$fMonoid(,)_$cmempty_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmempty_info


==================== Asm code ====================
2018-03-16 15:54:58.156592662 UTC

.section .text
.align 8
sat_sh8i_entry:
_cjUm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjUn
_cjUo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjUn:
	jmp *-16(%r13)
	.size sat_sh8i_entry, .-sat_sh8i_entry


==================== Asm code ====================
2018-03-16 15:54:58.157223429 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8i_info:
	.quad	sat_sh8i_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.157978962 UTC

.section .text
.align 8
sat_sh8h_entry:
_cjUt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjUu
_cjUv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjUu:
	jmp *-16(%r13)
	.size sat_sh8h_entry, .-sat_sh8h_entry


==================== Asm code ====================
2018-03-16 15:54:58.158586735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8h_info:
	.quad	sat_sh8h_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.159326464 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmempty_entry
.type GHC.Base.$fMonoid(,)_$cmempty_entry, @object
GHC.Base.$fMonoid(,)_$cmempty_entry:
_cjUx:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cjUB
_cjUA:
	leaq sat_sh8i_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rsi,-48(%r12)
	leaq sat_sh8h_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cjUB:
	movq $72,904(%r13)
	leaq GHC.Base.$fMonoid(,)_$cmempty_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmempty_entry, .-GHC.Base.$fMonoid(,)_$cmempty_entry


==================== Asm code ====================
2018-03-16 15:54:58.159991372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmempty_info
.type GHC.Base.$fMonoid(,)_$cmempty_info, @object
GHC.Base.$fMonoid(,)_$cmempty_info:
	.quad	GHC.Base.$fMonoid(,)_$cmempty_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.169069718 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.169880227 UTC

.section .text
.align 8
$dSemigroup_sh8m_entry:
_cjV4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjV5
_cjV6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjV5:
	jmp *-16(%r13)
	.size $dSemigroup_sh8m_entry, .-$dSemigroup_sh8m_entry


==================== Asm code ====================
2018-03-16 15:54:58.170520545 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_sh8m_info:
	.quad	$dSemigroup_sh8m_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.171206602 UTC

.section .text
.align 8
$dSemigroup1_sh8n_entry:
_cjVb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjVc
_cjVd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cjVc:
	jmp *-16(%r13)
	.size $dSemigroup1_sh8n_entry, .-$dSemigroup1_sh8n_entry


==================== Asm code ====================
2018-03-16 15:54:58.171844562 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup1_sh8n_info:
	.quad	$dSemigroup1_sh8n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.172554211 UTC

.section .text
.align 8
z_sh8o_entry:
_cjVi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjVj
_cjVk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjVj:
	jmp *-16(%r13)
	.size z_sh8o_entry, .-z_sh8o_entry


==================== Asm code ====================
2018-03-16 15:54:58.173174127 UTC

.section .data.rel.ro
.align 8
.align 1
z_sh8o_info:
	.quad	z_sh8o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.17394496 UTC

.section .text
.align 8
z1_sh8p_entry:
_cjVp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cjVq
_cjVr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cjVq:
	jmp *-16(%r13)
	.size z1_sh8p_entry, .-z1_sh8p_entry


==================== Asm code ====================
2018-03-16 15:54:58.1745025 UTC

.section .data.rel.ro
.align 8
.align 1
z1_sh8p_info:
	.quad	z1_sh8p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.175191777 UTC

.section .text
.align 8
sat_sh8D_entry:
_cjVR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjVS
_cjVT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjVS:
	jmp *-16(%r13)
	.size sat_sh8D_entry, .-sat_sh8D_entry


==================== Asm code ====================
2018-03-16 15:54:58.17583131 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8D_info:
	.quad	sat_sh8D_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.176537701 UTC

.section .text
.align 8
sat_sh8C_entry:
_cjVY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjVZ
_cjW0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjVZ:
	jmp *-16(%r13)
	.size sat_sh8C_entry, .-sat_sh8C_entry


==================== Asm code ====================
2018-03-16 15:54:58.177186735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8C_info:
	.quad	sat_sh8C_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.178140976 UTC

.section .text
.align 8
go_sh8r_entry:
_cjW5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjW6
_cjW7:
	leaq block_cjVy_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cjVy
_cjVz:
	movq (%rbx),%rax
	jmp *(%rax)
_cjW6:
	jmp *-8(%r13)
	.size go_sh8r_entry, .-go_sh8r_entry


==================== Asm code ====================
2018-03-16 15:54:58.178791916 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh8r_info:
	.quad	go_sh8r_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.179561408 UTC

.section .text
.align 8
_cjVy:
_cjVy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjW2
_cjW3:
	leaq block_cjVE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cjVE
_cjVF:
	movq (%rbx),%rax
	jmp *(%rax)
_cjW2:
	movq 24(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cjVy, .-_cjVy


==================== Asm code ====================
2018-03-16 15:54:58.180162119 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjVy_info:
	.quad	_cjVy
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.18078325 UTC

.section .text
.align 8
_cjVE:
_cjVE:
	leaq block_cjVJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,24(%rbp)
	movq %rax,32(%rbp)
	jmp go_sh8r_entry
	.size _cjVE, .-_cjVE


==================== Asm code ====================
2018-03-16 15:54:58.181403547 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjVE_info:
	.quad	_cjVE
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.182173144 UTC

.section .text
.align 8
_cjVJ:
_cjVJ:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cjWf
_cjWe:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sh8D_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_sh8C_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjWf:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cjVJ, .-_cjVJ


==================== Asm code ====================
2018-03-16 15:54:58.182861054 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjVJ_info:
	.quad	_cjVJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.18365396 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,)_$cmconcat_entry:
_cjWi:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cjWm
_cjWl:
	leaq $dSemigroup_sh8m_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-128(%r12)
	leaq $dSemigroup1_sh8n_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %rsi,-104(%r12)
	leaq z_sh8o_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	leaq z1_sh8p_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-56(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -96(%r12),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-32(%r12)
	leaq go_sh8r_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -144(%r12),%rax
	movq %rax,-16(%r12)
	leaq -120(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	movq %rdi,%r14
	leaq -23(%r12),%rbx
	jmp go_sh8r_entry
_cjWm:
	movq $152,904(%r13)
	leaq GHC.Base.$fMonoid(,)_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.184384284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cmconcat_info
.type GHC.Base.$fMonoid(,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.186585964 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$cmconcat_closure
.type GHC.Base.$fMonoid()_$cmconcat_closure, @object
GHC.Base.$fMonoid()_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid()_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.187225977 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid()_$cmconcat_entry
.type GHC.Base.$fMonoid()_$cmconcat_entry, @object
GHC.Base.$fMonoid()_$cmconcat_entry:
_cjXL:
	movq ()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonoid()_$cmconcat_entry, .-GHC.Base.$fMonoid()_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.187796641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$cmconcat_info
.type GHC.Base.$fMonoid()_$cmconcat_info, @object
GHC.Base.$fMonoid()_$cmconcat_info:
	.quad	GHC.Base.$fMonoid()_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.193107008 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$c<>_closure
.type GHC.Base.$fMonoidMaybe_$c<>_closure, @object
GHC.Base.$fMonoidMaybe_$c<>_closure:
	.quad	GHC.Base.$fMonoidMaybe_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.194011841 UTC

.section .text
.align 8
sat_sh8M_entry:
_cjYe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjYf
_cjYg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjYf:
	jmp *-16(%r13)
	.size sat_sh8M_entry, .-sat_sh8M_entry


==================== Asm code ====================
2018-03-16 15:54:58.194681284 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh8M_info:
	.quad	sat_sh8M_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.195369137 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_$c<>_entry
.type GHC.Base.$fMonoidMaybe_$c<>_entry, @object
GHC.Base.$fMonoidMaybe_$c<>_entry:
_cjYl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cjYm
_cjYn:
	leaq block_cjXY_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cjXY
_cjXZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cjYm:
	leaq GHC.Base.$fMonoidMaybe_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_$c<>_entry, .-GHC.Base.$fMonoidMaybe_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.196003794 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$c<>_info
.type GHC.Base.$fMonoidMaybe_$c<>_info, @object
GHC.Base.$fMonoidMaybe_$c<>_info:
	.quad	GHC.Base.$fMonoidMaybe_$c<>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.196779523 UTC

.section .text
.align 8
_cjXY:
_cjXY:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjYi
_cjYj:
	leaq block_cjY4_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjY4
_cjY5:
	movq (%rbx),%rax
	jmp *(%rax)
_cjYi:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjXY, .-_cjXY


==================== Asm code ====================
2018-03-16 15:54:58.197515029 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjXY_info:
	.quad	_cjXY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.198300125 UTC

.section .text
.align 8
_cjY4:
_cjY4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cjYu
_cjYw:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cjYz
_cjYy:
	movq 6(%rbx),%rax
	leaq sat_sh8M_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cjYz:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cjYu:
	movq 24(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjY4, .-_cjY4


==================== Asm code ====================
2018-03-16 15:54:58.198939154 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjY4_info:
	.quad	_cjY4
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.205458567 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat5_closure
.type GHC.Base.$w$csconcat5_closure, @object
GHC.Base.$w$csconcat5_closure:
	.quad	GHC.Base.$w$csconcat5_info


==================== Asm code ====================
2018-03-16 15:54:58.206243204 UTC

.section .text
.align 8
sat_sh90_entry:
_cjZI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjZJ
_cjZK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_cjZJ:
	jmp *-16(%r13)
	.size sat_sh90_entry, .-sat_sh90_entry


==================== Asm code ====================
2018-03-16 15:54:58.206885119 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh90_info:
	.quad	sat_sh90_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.207549545 UTC

.section .text
.align 8
go_sh8Q_entry:
_cjZP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cjZQ
_uk0c:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp _cjZk
_cjZQ:
	jmp *-8(%r13)
	.size go_sh8Q_entry, .-go_sh8Q_entry


==================== Asm code ====================
2018-03-16 15:54:58.208097078 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh8Q_info:
	.quad	go_sh8Q_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.208773323 UTC

.section .text
.align 8
_cjZk:
_cjZk:
	movq (%rbp),%rax
	movq 6(%rax),%rax
	leaq block_cjZn_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjZn
_cjZo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjZk, .-_cjZk


==================== Asm code ====================
2018-03-16 15:54:58.20962611 UTC

.section .text
.align 8
_cjZn:
_cjZn:
	movq 16(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cjZM
_cjZN:
	leaq block_cjZt_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cjZt
_cjZu:
	movq (%rbx),%rax
	jmp *(%rax)
_cjZM:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjZn, .-_cjZn


==================== Asm code ====================
2018-03-16 15:54:58.210309947 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjZn_info:
	.quad	_cjZn
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.211059582 UTC

.section .text
.align 8
_cjZt:
_cjZt:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cjZY
_ck00:
	leaq block_cjZz_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,16(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp go_sh8Q_entry
_cjZY:
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp _cjZk
	.size _cjZt, .-_cjZt


==================== Asm code ====================
2018-03-16 15:54:58.211740804 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjZt_info:
	.quad	_cjZt
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.212535451 UTC

.section .text
.align 8
_cjZz:
_cjZz:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ck04
_ck06:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ck09
_ck08:
	movq 6(%rbx),%rax
	leaq sat_sh90_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck09:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ck04:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cjZz, .-_cjZz


==================== Asm code ====================
2018-03-16 15:54:58.21332578 UTC

.section .data.rel.ro
.align 8
.align 1
block_cjZz_info:
	.quad	_cjZz
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.214047061 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat5_entry
.type GHC.Base.$w$csconcat5_entry, @object
GHC.Base.$w$csconcat5_entry:
_ck0i:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ck0m
_ck0l:
	leaq go_sh8Q_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	leaq -6(%r12),%rbx
	jmp go_sh8Q_entry
_ck0m:
	movq $16,904(%r13)
	leaq GHC.Base.$w$csconcat5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat5_entry, .-GHC.Base.$w$csconcat5_entry


==================== Asm code ====================
2018-03-16 15:54:58.214679472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat5_info
.type GHC.Base.$w$csconcat5_info, @object
GHC.Base.$w$csconcat5_info:
	.quad	GHC.Base.$w$csconcat5_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.217674018 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_$csconcat_closure
.type GHC.Base.$fSemigroupMaybe_$csconcat_closure, @object
GHC.Base.$fSemigroupMaybe_$csconcat_closure:
	.quad	GHC.Base.$fSemigroupMaybe_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.21839967 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupMaybe_$csconcat_entry
.type GHC.Base.$fSemigroupMaybe_$csconcat_entry, @object
GHC.Base.$fSemigroupMaybe_$csconcat_entry:
_ck1i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck1j
_ck1k:
	leaq block_ck1f_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ck1f
_ck1g:
	movq (%rbx),%rax
	jmp *(%rax)
_ck1j:
	leaq GHC.Base.$fSemigroupMaybe_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupMaybe_$csconcat_entry, .-GHC.Base.$fSemigroupMaybe_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.219044806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_$csconcat_info
.type GHC.Base.$fSemigroupMaybe_$csconcat_info, @object
GHC.Base.$fSemigroupMaybe_$csconcat_info:
	.quad	GHC.Base.$fSemigroupMaybe_$csconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.219688087 UTC

.section .text
.align 8
_ck1f:
_ck1f:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat5_entry
	.size _ck1f, .-_ck1f


==================== Asm code ====================
2018-03-16 15:54:58.220279743 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck1f_info:
	.quad	_ck1f
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.223954556 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_closure
.type GHC.Base.$fSemigroupMaybe_closure, @object
GHC.Base.$fSemigroupMaybe_closure:
	.quad	GHC.Base.$fSemigroupMaybe_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.224597239 UTC

.section .text
.align 8
sat_sh9a_entry:
_ck1I:
	movq 7(%rbx),%rsi
	movq Data.Semigroup.Internal.stimesMaybe_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size sat_sh9a_entry, .-sat_sh9a_entry


==================== Asm code ====================
2018-03-16 15:54:58.225180223 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9a_info:
	.quad	sat_sh9a_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	Si3a_srt+88


==================== Asm code ====================
2018-03-16 15:54:58.225831871 UTC

.section .text
.align 8
sat_sh98_entry:
_ck1Q:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroupMaybe_$csconcat_entry
	.size sat_sh98_entry, .-sat_sh98_entry


==================== Asm code ====================
2018-03-16 15:54:58.226393785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh98_info:
	.quad	sat_sh98_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.226959975 UTC

.section .text
.align 8
sat_sh97_entry:
_ck1Y:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$c<>_entry
	.size sat_sh97_entry, .-sat_sh97_entry


==================== Asm code ====================
2018-03-16 15:54:58.227479996 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh97_info:
	.quad	sat_sh97_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.22826042 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupMaybe_entry
.type GHC.Base.$fSemigroupMaybe_entry, @object
GHC.Base.$fSemigroupMaybe_entry:
_ck22:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ck26
_ck25:
	leaq sat_sh9a_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_sh98_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_sh97_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ck26:
	movq $80,904(%r13)
	leaq GHC.Base.$fSemigroupMaybe_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroupMaybe_entry, .-GHC.Base.$fSemigroupMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:58.228953862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupMaybe_info
.type GHC.Base.$fSemigroupMaybe_info, @object
GHC.Base.$fSemigroupMaybe_info:
	.quad	GHC.Base.$fSemigroupMaybe_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Si3a_srt+88


==================== Asm code ====================
2018-03-16 15:54:58.23614504 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$cmconcat_closure
.type GHC.Base.$fMonoidMaybe_$cmconcat_closure, @object
GHC.Base.$fMonoidMaybe_$cmconcat_closure:
	.quad	GHC.Base.$fMonoidMaybe_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.236846246 UTC

.section .text
.align 8
sat_sh9m_entry:
_ck2W:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck2X
_ck2Y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck2X:
	jmp *-16(%r13)
	.size sat_sh9m_entry, .-sat_sh9m_entry


==================== Asm code ====================
2018-03-16 15:54:58.237533664 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9m_info:
	.quad	sat_sh9m_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.238149288 UTC

.section .text
.align 8
go_sh9d_entry:
_ck33:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ck34
_uk3q:
	movq %rbx,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _ck2y
_ck34:
	jmp *-8(%r13)
	.size go_sh9d_entry, .-go_sh9d_entry


==================== Asm code ====================
2018-03-16 15:54:58.238719802 UTC

.section .data.rel.ro
.align 8
.align 1
go_sh9d_info:
	.quad	go_sh9d_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.239420569 UTC

.section .text
.align 8
_ck2y:
_ck2y:
	movq (%rbp),%rax
	movq 7(%rax),%rax
	leaq block_ck2B_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ck2B
_ck2C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ck2y, .-_ck2y


==================== Asm code ====================
2018-03-16 15:54:58.240297563 UTC

.section .text
.align 8
_ck2B:
_ck2B:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ck30
_ck31:
	leaq block_ck2H_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ck2H
_ck2I:
	movq (%rbx),%rax
	jmp *(%rax)
_ck30:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ck2B, .-_ck2B


==================== Asm code ====================
2018-03-16 15:54:58.240945205 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck2B_info:
	.quad	_ck2B
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.241723074 UTC

.section .text
.align 8
_ck2H:
_ck2H:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _ck3c
_ck3e:
	leaq block_ck2N_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	jmp go_sh9d_entry
_ck3c:
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _ck2y
	.size _ck2H, .-_ck2H


==================== Asm code ====================
2018-03-16 15:54:58.242334426 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck2H_info:
	.quad	_ck2H
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.243141683 UTC

.section .text
.align 8
_ck2N:
_ck2N:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ck3i
_ck3k:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ck3n
_ck3m:
	movq 6(%rbx),%rax
	leaq sat_sh9m_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck3n:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ck3i:
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ck2N, .-_ck2N


==================== Asm code ====================
2018-03-16 15:54:58.243835389 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck2N_info:
	.quad	_ck2N
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.244521927 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_$cmconcat_entry
.type GHC.Base.$fMonoidMaybe_$cmconcat_entry, @object
GHC.Base.$fMonoidMaybe_$cmconcat_entry:
_ck3w:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ck3A
_ck3z:
	leaq go_sh9d_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq %rsi,%r14
	leaq -7(%r12),%rbx
	jmp go_sh9d_entry
_ck3A:
	movq $16,904(%r13)
	leaq GHC.Base.$fMonoidMaybe_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_$cmconcat_entry, .-GHC.Base.$fMonoidMaybe_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.245163007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_$cmconcat_info
.type GHC.Base.$fMonoidMaybe_$cmconcat_info, @object
GHC.Base.$fMonoidMaybe_$cmconcat_info:
	.quad	GHC.Base.$fMonoidMaybe_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.249202388 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_closure
.type GHC.Base.$fMonoidMaybe_closure, @object
GHC.Base.$fMonoidMaybe_closure:
	.quad	GHC.Base.$fMonoidMaybe_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.249870733 UTC

.section .text
.align 8
sat_sh9q_entry:
_ck4x:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$cmconcat_entry
	.size sat_sh9q_entry, .-sat_sh9q_entry


==================== Asm code ====================
2018-03-16 15:54:58.250417408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9q_info:
	.quad	sat_sh9q_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.250960016 UTC

.section .text
.align 8
sat_sh9p_entry:
_ck4F:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoidMaybe_$c<>_entry
	.size sat_sh9p_entry, .-sat_sh9p_entry


==================== Asm code ====================
2018-03-16 15:54:58.251513451 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9p_info:
	.quad	sat_sh9p_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.252232678 UTC

.section .text
.align 8
sat_sh9o_entry:
_ck4M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck4N
_ck4O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroupMaybe_entry
_ck4N:
	jmp *-16(%r13)
	.size sat_sh9o_entry, .-sat_sh9o_entry


==================== Asm code ====================
2018-03-16 15:54:58.252836893 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9o_info:
	.quad	sat_sh9o_entry
	.quad	1
	.quad	4294967312
	.quad	Si3a_srt+96


==================== Asm code ====================
2018-03-16 15:54:58.253674348 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidMaybe_entry
.type GHC.Base.$fMonoidMaybe_entry, @object
GHC.Base.$fMonoidMaybe_entry:
_ck4Q:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _ck4U
_ck4T:
	leaq sat_sh9q_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_sh9p_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_sh9o_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.Base.Nothing_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -70(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ck4U:
	movq $96,904(%r13)
	leaq GHC.Base.$fMonoidMaybe_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidMaybe_entry, .-GHC.Base.$fMonoidMaybe_entry


==================== Asm code ====================
2018-03-16 15:54:58.254438291 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidMaybe_info
.type GHC.Base.$fMonoidMaybe_info, @object
GHC.Base.$fMonoidMaybe_info:
	.quad	GHC.Base.$fMonoidMaybe_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Si3a_srt+96


==================== Asm code ====================
2018-03-16 15:54:58.257714318 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_$c<>_closure
.type GHC.Base.$fMonoidOrdering_$c<>_closure, @object
GHC.Base.$fMonoidOrdering_$c<>_closure:
	.quad	GHC.Base.$fMonoidOrdering_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.258458076 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidOrdering_$c<>_entry
.type GHC.Base.$fMonoidOrdering_$c<>_entry, @object
GHC.Base.$fMonoidOrdering_$c<>_entry:
_ck5v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck5w
_ck5x:
	leaq block_ck5n_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ck5n
_ck5o:
	movq (%rbx),%rax
	jmp *(%rax)
_ck5w:
	leaq GHC.Base.$fMonoidOrdering_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidOrdering_$c<>_entry, .-GHC.Base.$fMonoidOrdering_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.259114463 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_$c<>_info
.type GHC.Base.$fMonoidOrdering_$c<>_info, @object
GHC.Base.$fMonoidOrdering_$c<>_info:
	.quad	GHC.Base.$fMonoidOrdering_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.259906715 UTC

.section .text
.align 8
_ck5n:
_ck5n:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uk5H
_ck5t:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uk5H:
	cmpq $2,%rbx
	jb _ck5r
_ck5s:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ck5r:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ck5n, .-_ck5n


==================== Asm code ====================
2018-03-16 15:54:58.260569808 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck5n_info:
	.quad	_ck5n
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.264510082 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_go_closure
.type GHC.Base.$fMonoidOrdering_go_closure, @object
GHC.Base.$fMonoidOrdering_go_closure:
	.quad	GHC.Base.$fMonoidOrdering_go_info


==================== Asm code ====================
2018-03-16 15:54:58.265235144 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoidOrdering_go_entry
.type GHC.Base.$fMonoidOrdering_go_entry, @object
GHC.Base.$fMonoidOrdering_go_entry:
_ck6b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck6c
_uk6C:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _ck61
_ck6c:
	leaq GHC.Base.$fMonoidOrdering_go_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoidOrdering_go_entry, .-GHC.Base.$fMonoidOrdering_go_entry


==================== Asm code ====================
2018-03-16 15:54:58.265925681 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_go_info
.type GHC.Base.$fMonoidOrdering_go_info, @object
GHC.Base.$fMonoidOrdering_go_info:
	.quad	GHC.Base.$fMonoidOrdering_go_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.266624123 UTC

.section .text
.align 8
_ck61:
_ck61:
	movq (%rbp),%rax
	leaq block_ck64_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _ck64
_ck65:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ck61, .-_ck61


==================== Asm code ====================
2018-03-16 15:54:58.267476193 UTC

.section .text
.align 8
_ck64:
_ck64:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ck68
_ck69:
	leaq block_ck6j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ck6j
_ck6l:
	movq (%rbx),%rax
	jmp *(%rax)
_ck68:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ck64, .-_ck64


==================== Asm code ====================
2018-03-16 15:54:58.26815329 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck64_info:
	.quad	_ck64
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.26888378 UTC

.section .text
.align 8
_ck6j:
_ck6j:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uk6B
_ck6z:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uk6B:
	cmpq $2,%rbx
	jb _ck6r
_ck6v:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _ck61
_ck6r:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ck6j, .-_ck6j


==================== Asm code ====================
2018-03-16 15:54:58.270044169 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck6j_info:
	.quad	_ck6j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.272683125 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_closure
.type GHC.Base.$fSemigroupOrdering_closure, @object
GHC.Base.$fSemigroupOrdering_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fMonoidOrdering_$c<>_closure+2
	.quad	GHC.Base.$fSemigroupOrdering_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.273198741 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoidOrdering_closure
.type GHC.Base.$fMonoidOrdering_closure, @object
GHC.Base.$fMonoidOrdering_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroupOrdering_closure+1
	.quad	GHC.Types.EQ_closure+2
	.quad	GHC.Base.$fMonoidOrdering_$c<>_closure+2
	.quad	GHC.Base.$fMonoidOrdering_go_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.273822118 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$cstimes_closure
.type GHC.Base.$fSemigroupOrdering_$cstimes_closure, @object
GHC.Base.$fSemigroupOrdering_$cstimes_closure:
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.274490556 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroupOrdering_$cstimes_entry
.type GHC.Base.$fSemigroupOrdering_$cstimes_entry, @object
GHC.Base.$fSemigroupOrdering_$cstimes_entry:
_ck7d:
	leaq GHC.Base.$fMonoidOrdering_closure+1(%rip),%rsi
	movq Data.Semigroup.Internal.stimesIdempotentMonoid_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
	.size GHC.Base.$fSemigroupOrdering_$cstimes_entry, .-GHC.Base.$fSemigroupOrdering_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.275089262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroupOrdering_$cstimes_info
.type GHC.Base.$fSemigroupOrdering_$cstimes_info, @object
GHC.Base.$fSemigroupOrdering_$cstimes_info:
	.quad	GHC.Base.$fSemigroupOrdering_$cstimes_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Si3a_srt+112


==================== Asm code ====================
2018-03-16 15:54:58.283640484 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.28437175 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$c<>_slow
.type GHC.Base.$fMonoid(,,,,)_$c<>_slow, @object
GHC.Base.$fMonoid(,,,,)_$c<>_slow:
_ck7n:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
	.size GHC.Base.$fMonoid(,,,,)_$c<>_slow, .-GHC.Base.$fMonoid(,,,,)_$c<>_slow


==================== Asm code ====================
2018-03-16 15:54:58.285126943 UTC

.section .text
.align 8
sat_sh9X_entry:
_ck7F:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck7G
_ck7H:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck7G:
	jmp *-16(%r13)
	.size sat_sh9X_entry, .-sat_sh9X_entry


==================== Asm code ====================
2018-03-16 15:54:58.285829233 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9X_info:
	.quad	sat_sh9X_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.286525027 UTC

.section .text
.align 8
sat_sh9W_entry:
_ck7M:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck7N
_ck7O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck7N:
	jmp *-16(%r13)
	.size sat_sh9W_entry, .-sat_sh9W_entry


==================== Asm code ====================
2018-03-16 15:54:58.287171934 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9W_info:
	.quad	sat_sh9W_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.287891997 UTC

.section .text
.align 8
sat_sh9V_entry:
_ck7T:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck7U
_ck7V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck7U:
	jmp *-16(%r13)
	.size sat_sh9V_entry, .-sat_sh9V_entry


==================== Asm code ====================
2018-03-16 15:54:58.288534533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9V_info:
	.quad	sat_sh9V_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.289215781 UTC

.section .text
.align 8
sat_sh9U_entry:
_ck80:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck81
_ck82:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck81:
	jmp *-16(%r13)
	.size sat_sh9U_entry, .-sat_sh9U_entry


==================== Asm code ====================
2018-03-16 15:54:58.289884711 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9U_info:
	.quad	sat_sh9U_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.290589944 UTC

.section .text
.align 8
sat_sh9T_entry:
_ck87:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck88
_ck89:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ck88:
	jmp *-16(%r13)
	.size sat_sh9T_entry, .-sat_sh9T_entry


==================== Asm code ====================
2018-03-16 15:54:58.291189154 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sh9T_info:
	.quad	sat_sh9T_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.291971968 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,,,)_$c<>_entry:
_ck8a:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _ck8c
_ck8d:
	leaq block_ck7r_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ck7r
_ck7s:
	movq (%rbx),%rax
	jmp *(%rax)
_ck8c:
	leaq GHC.Base.$fMonoid(,,,,)_$c<>_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.292658402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$c<>_info
.type GHC.Base.$fMonoid(,,,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$fMonoid(,,,,)_$c<>_slow


==================== Asm code ====================
2018-03-16 15:54:58.294483045 UTC

.section .text
.align 8
_ck7r:
_ck7r:
	leaq block_ck7w_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rbx,%rdi
	movq 48(%rbp),%rbx
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ck7w
_ck7x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ck7r, .-_ck7r


==================== Asm code ====================
2018-03-16 15:54:58.295121994 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck7r_info:
	.quad	_ck7r
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.296071176 UTC

.section .text
.align 8
_ck7w:
_ck7w:
	addq $248,%r12
	cmpq 856(%r13),%r12
	ja _ck8h
_ck8g:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_sh9X_info(%rip),%rdi
	movq %rdi,-240(%r12)
	movq 64(%rbp),%rdi
	movq %rdi,-224(%r12)
	movq 24(%rbp),%rdi
	movq %rdi,-216(%r12)
	movq %rbx,-208(%r12)
	leaq sat_sh9W_info(%rip),%rbx
	movq %rbx,-200(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-184(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-176(%r12)
	movq %rsi,-168(%r12)
	leaq sat_sh9V_info(%rip),%rbx
	movq %rbx,-160(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-144(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq %rdx,-128(%r12)
	leaq sat_sh9U_info(%rip),%rbx
	movq %rbx,-120(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	leaq sat_sh9T_info(%rip),%rbx
	movq %rbx,-80(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq (,,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -80(%r12),%rax
	movq %rax,-32(%r12)
	leaq -120(%r12),%rax
	movq %rax,-24(%r12)
	leaq -160(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -240(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck8h:
	movq $248,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ck7w, .-_ck7w


==================== Asm code ====================
2018-03-16 15:54:58.296963537 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck7w_info:
	.quad	_ck7w
	.quad	10
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.309602536 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_closure
.type GHC.Base.$fMonoid(,,,,)_$csconcat_closure, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.310449959 UTC

.section .text
.align 8
sat_shaD_entry:
_ckad:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckae
_ckaf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckae:
	jmp *-16(%r13)
	.size sat_shaD_entry, .-sat_shaD_entry


==================== Asm code ====================
2018-03-16 15:54:58.311130736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaD_info:
	.quad	sat_shaD_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.311823779 UTC

.section .text
.align 8
sat_shaC_entry:
_ckak:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckal
_ckam:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckal:
	jmp *-16(%r13)
	.size sat_shaC_entry, .-sat_shaC_entry


==================== Asm code ====================
2018-03-16 15:54:58.312473908 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaC_info:
	.quad	sat_shaC_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.313180907 UTC

.section .text
.align 8
sat_shaB_entry:
_ckar:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckas
_ckat:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckas:
	jmp *-16(%r13)
	.size sat_shaB_entry, .-sat_shaB_entry


==================== Asm code ====================
2018-03-16 15:54:58.313844865 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaB_info:
	.quad	sat_shaB_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.314588685 UTC

.section .text
.align 8
sat_shaA_entry:
_ckay:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckaz
_ckaA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckaz:
	jmp *-16(%r13)
	.size sat_shaA_entry, .-sat_shaA_entry


==================== Asm code ====================
2018-03-16 15:54:58.315261398 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaA_info:
	.quad	sat_shaA_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.315977175 UTC

.section .text
.align 8
sat_shaz_entry:
_ckaF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckaG
_ckaH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckaG:
	jmp *-16(%r13)
	.size sat_shaz_entry, .-sat_shaz_entry


==================== Asm code ====================
2018-03-16 15:54:58.316614389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaz_info:
	.quad	sat_shaz_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.317516511 UTC

.section .text
.align 8
$wgo_shad_entry:
_ckaM:
	leaq -120(%rbp),%rax
	cmpq %r15,%rax
	jb _ckaN
_ckaO:
	leaq block_ck9U_info(%rip),%rax
	movq %rax,-88(%rbp)
	movq %rbx,%rax
	movq 2(%rbx),%rcx
	movq 10(%rbx),%rdx
	movq 18(%rbx),%r10
	movq 26(%rbx),%r11
	movq 34(%rbx),%rbx
	movq %rbx,64(%rsp)
	movq (%rbp),%rbx
	movq %rdx,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq 64(%rsp),%rdx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-88,%rbp
	testb $7,%bl
	jne _ck9U
_ck9V:
	movq (%rbx),%rax
	jmp *(%rax)
_ckaN:
	jmp *-8(%r13)
	.size $wgo_shad_entry, .-$wgo_shad_entry


==================== Asm code ====================
2018-03-16 15:54:58.318948018 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_shad_info:
	.quad	$wgo_shad_entry
	.quad	5
	.quad	8
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:58.319807241 UTC

.section .text
.align 8
_ck9U:
_ck9U:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckaJ
_ckaK:
	leaq block_cka0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cka0
_cka1:
	movq (%rbx),%rax
	jmp *(%rax)
_ckaJ:
	movq 80(%rbp),%r8
	movq 72(%rbp),%rdi
	movq 64(%rbp),%rsi
	movq 56(%rbp),%r14
	movq 48(%rbp),%rbx
	addq $96,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ck9U, .-_ck9U


==================== Asm code ====================
2018-03-16 15:54:58.320520927 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck9U_info:
	.quad	_ck9U
	.quad	11
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.321213226 UTC

.section .text
.align 8
_cka0:
_cka0:
	movq 8(%rbp),%rax
	leaq block_cka5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 48(%rbp),%rbx
	movq %rax,(%rbp)
	jmp $wgo_shad_entry
	.size _cka0, .-_cka0


==================== Asm code ====================
2018-03-16 15:54:58.323034329 UTC

.section .data.rel.ro
.align 8
.align 1
block_cka0_info:
	.quad	_cka0
	.quad	12
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.323657462 UTC

.section .text
.align 8
_cka5:
_cka5:
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %r14,(%rbp)
	movq %rbx,40(%rbp)
	addq $-32,%rbp
	jmp _cka6
	.size _cka5, .-_cka5


==================== Asm code ====================
2018-03-16 15:54:58.32421007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cka5_info:
	.quad	_cka5
	.quad	1035
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.325043198 UTC

.section .text
.align 8
_cka6:
_cka6:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _ckaV
_ckaU:
	leaq sat_shaD_info(%rip),%rax
	movq %rax,-192(%r12)
	movq 64(%rbp),%rax
	movq %rax,-176(%r12)
	movq 112(%rbp),%rax
	movq %rax,-168(%r12)
	movq 24(%rbp),%rax
	movq %rax,-160(%r12)
	leaq sat_shaC_info(%rip),%rax
	movq %rax,-152(%r12)
	movq 56(%rbp),%rax
	movq %rax,-136(%r12)
	movq 104(%rbp),%rax
	movq %rax,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-120(%r12)
	leaq sat_shaB_info(%rip),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-80(%r12)
	leaq sat_shaA_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq 88(%rbp),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	leaq sat_shaz_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 80(%rbp),%rax
	movq %rax,-8(%r12)
	movq 72(%rbp),%rax
	movq %rax,(%r12)
	leaq -192(%r12),%r8
	leaq -152(%r12),%rdi
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckaV:
	movq $200,904(%r13)
	leaq block_cka6_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cka6, .-_cka6


==================== Asm code ====================
2018-03-16 15:54:58.326035564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cka6_info:
	.quad	_cka6
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.326875329 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_entry
.type GHC.Base.$fMonoid(,,,,)_$csconcat_entry, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_entry:
_ckb0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckb6
_ckb7:
	leaq block_ck9F_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ck9F
_ck9G:
	movq (%rbx),%rax
	jmp *(%rax)
_ckb6:
	leaq GHC.Base.$fMonoid(,,,,)_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$csconcat_entry, .-GHC.Base.$fMonoid(,,,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.327576277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$csconcat_info
.type GHC.Base.$fMonoid(,,,,)_$csconcat_info, @object
GHC.Base.$fMonoid(,,,,)_$csconcat_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:58.328289041 UTC

.section .text
.align 8
_ck9F:
_ck9F:
	leaq block_ck9K_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ck9K
_ck9L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ck9F, .-_ck9F


==================== Asm code ====================
2018-03-16 15:54:58.328922587 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck9F_info:
	.quad	_ck9F
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.329746132 UTC

.section .text
.align 8
_ck9K:
_ck9K:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ckbb
_ckba:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq $wgo_shad_info(%rip),%rdi
	movq %rdi,-40(%r12)
	movq 48(%rbp),%rdi
	movq %rdi,-32(%r12)
	movq 16(%rbp),%rdi
	movq %rdi,-24(%r12)
	movq 24(%rbp),%rdi
	movq %rdi,-16(%r12)
	movq 32(%rbp),%rdi
	movq %rdi,-8(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,(%r12)
	leaq block_ckb1_info(%rip),%rdi
	movq %rdi,48(%rbp)
	movq %rbx,%r9
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	leaq -34(%r12),%rbx
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp $wgo_shad_entry
_ckbb:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ck9K, .-_ck9K


==================== Asm code ====================
2018-03-16 15:54:58.330430063 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck9K_info:
	.quad	_ck9K
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.33101314 UTC

.section .text
.align 8
_ckb1:
_ckb1:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _ckb2
	.size _ckb1, .-_ckb1


==================== Asm code ====================
2018-03-16 15:54:58.331542524 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckb1_info:
	.quad	_ckb1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.332247314 UTC

.section .text
.align 8
_ckb2:
_ckb2:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ckbe
_ckbd:
	movq (,,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckbe:
	movq $48,904(%r13)
	leaq block_ckb2_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _ckb2, .-_ckb2


==================== Asm code ====================
2018-03-16 15:54:58.332918084 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckb2_info:
	.quad	_ckb2
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.340772981 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_closure
.type GHC.Base.$fMonoid(,,,,)_$cstimes_closure, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.341523385 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_slow
.type GHC.Base.$fMonoid(,,,,)_$cstimes_slow, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_slow:
_ckdj:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
	.size GHC.Base.$fMonoid(,,,,)_$cstimes_slow, .-GHC.Base.$fMonoid(,,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:58.342292926 UTC

.section .text
.align 8
sat_shb2_entry:
_ckdw:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdx
_ckdy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckdx:
	jmp *-16(%r13)
	.size sat_shb2_entry, .-sat_shb2_entry


==================== Asm code ====================
2018-03-16 15:54:58.342940031 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shb2_info:
	.quad	sat_shb2_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.343643807 UTC

.section .text
.align 8
sat_shb1_entry:
_ckdD:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdE
_ckdF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckdE:
	jmp *-16(%r13)
	.size sat_shb1_entry, .-sat_shb1_entry


==================== Asm code ====================
2018-03-16 15:54:58.344308223 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shb1_info:
	.quad	sat_shb1_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.345018421 UTC

.section .text
.align 8
sat_shb0_entry:
_ckdK:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdL
_ckdM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckdL:
	jmp *-16(%r13)
	.size sat_shb0_entry, .-sat_shb0_entry


==================== Asm code ====================
2018-03-16 15:54:58.34570399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shb0_info:
	.quad	sat_shb0_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.346426763 UTC

.section .text
.align 8
sat_shaZ_entry:
_ckdR:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdS
_ckdT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckdS:
	jmp *-16(%r13)
	.size sat_shaZ_entry, .-sat_shaZ_entry


==================== Asm code ====================
2018-03-16 15:54:58.347090714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaZ_info:
	.quad	sat_shaZ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.347807269 UTC

.section .text
.align 8
sat_shaY_entry:
_ckdY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdZ
_cke0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckdZ:
	jmp *-16(%r13)
	.size sat_shaY_entry, .-sat_shaY_entry


==================== Asm code ====================
2018-03-16 15:54:58.34846141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shaY_info:
	.quad	sat_shaY_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.34927324 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_entry
.type GHC.Base.$fMonoid(,,,,)_$cstimes_entry, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_entry:
_cke1:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cke3
_cke4:
	leaq block_ckdn_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,16(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckdn
_ckdo:
	movq (%rbx),%rax
	jmp *(%rax)
_cke3:
	leaq GHC.Base.$fMonoid(,,,,)_$cstimes_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cstimes_entry, .-GHC.Base.$fMonoid(,,,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.349974336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cstimes_info
.type GHC.Base.$fMonoid(,,,,)_$cstimes_info, @object
GHC.Base.$fMonoid(,,,,)_$cstimes_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	8
	.quad	GHC.Base.$fMonoid(,,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:58.35088133 UTC

.section .text
.align 8
_ckdn:
_ckdn:
	addq $288,%r12
	cmpq 856(%r13),%r12
	ja _cke7
_cke6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	leaq sat_shb2_info(%rip),%rdi
	movq %rdi,-280(%r12)
	movq 32(%rbp),%rdi
	movq %rdi,-264(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,-256(%r12)
	movq 48(%rbp),%r8
	movq %r8,-248(%r12)
	movq %rbx,-240(%r12)
	leaq sat_shb1_info(%rip),%rbx
	movq %rbx,-232(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-216(%r12)
	movq %rdi,-208(%r12)
	movq %r8,-200(%r12)
	movq %rsi,-192(%r12)
	leaq sat_shb0_info(%rip),%rbx
	movq %rbx,-184(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-168(%r12)
	movq %rdi,-160(%r12)
	movq %r8,-152(%r12)
	movq %rdx,-144(%r12)
	leaq sat_shaZ_info(%rip),%rbx
	movq %rbx,-136(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq %rdi,-112(%r12)
	movq %r8,-104(%r12)
	movq %rcx,-96(%r12)
	leaq sat_shaY_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq %rdi,-64(%r12)
	movq %r8,-56(%r12)
	movq %rax,-48(%r12)
	movq (,,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -88(%r12),%rax
	movq %rax,-32(%r12)
	leaq -136(%r12),%rax
	movq %rax,-24(%r12)
	leaq -184(%r12),%rax
	movq %rax,-16(%r12)
	leaq -232(%r12),%rax
	movq %rax,-8(%r12)
	leaq -280(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cke7:
	movq $288,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckdn, .-_ckdn


==================== Asm code ====================
2018-03-16 15:54:58.351784505 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckdn_info:
	.quad	_ckdn
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.357046669 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,,)_closure
.type GHC.Base.$fSemigroup(,,,,)_closure, @object
GHC.Base.$fSemigroup(,,,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.357857398 UTC

.section .text
.align 8
sat_shba_entry:
_ckfu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ckfv
_ckfw:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
_ckfv:
	jmp *-8(%r13)
	.size sat_shba_entry, .-sat_shba_entry


==================== Asm code ====================
2018-03-16 15:54:58.358576718 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shba_info:
	.quad	sat_shba_entry
	.quad	5
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.359804424 UTC

.section .text
.align 8
sat_shb9_entry:
_ckfC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckfD
_ckfE:
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$csconcat_entry
_ckfD:
	jmp *-8(%r13)
	.size sat_shb9_entry, .-sat_shb9_entry


==================== Asm code ====================
2018-03-16 15:54:58.360519064 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shb9_info:
	.quad	sat_shb9_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.361890327 UTC

.section .text
.align 8
sat_shb8_entry:
_ckfK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckfL
_ckfM:
	movq 38(%rbx),%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq %r14,%rcx
	movq 6(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
_ckfL:
	jmp *-8(%r13)
	.size sat_shb8_entry, .-sat_shb8_entry


==================== Asm code ====================
2018-03-16 15:54:58.362526161 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shb8_info:
	.quad	sat_shb8_entry
	.quad	5
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.363355027 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,,)_entry
.type GHC.Base.$fSemigroup(,,,,)_entry, @object
GHC.Base.$fSemigroup(,,,,)_entry:
_ckfO:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ckfS
_ckfR:
	leaq sat_shba_info(%rip),%rax
	movq %rax,-168(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %r8,-136(%r12)
	movq %r9,-128(%r12)
	leaq sat_shb9_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %r8,-88(%r12)
	movq %r9,-80(%r12)
	leaq sat_shb8_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -70(%r12),%rax
	movq %rax,-16(%r12)
	leaq -119(%r12),%rax
	movq %rax,-8(%r12)
	leaq -165(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckfS:
	movq $176,904(%r13)
	leaq GHC.Base.$fSemigroup(,,,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,,)_entry, .-GHC.Base.$fSemigroup(,,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.364124376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,,)_info
.type GHC.Base.$fSemigroup(,,,,)_info, @object
GHC.Base.$fSemigroup(,,,,)_info:
	.quad	GHC.Base.$fSemigroup(,,,,)_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.377633066 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid1_closure
.type GHC.Base.$w$cp1Monoid1_closure, @object
GHC.Base.$w$cp1Monoid1_closure:
	.quad	GHC.Base.$w$cp1Monoid1_info


==================== Asm code ====================
2018-03-16 15:54:58.378456247 UTC

.section .text
.align 8
sat_shbw_entry:
_ckgp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckgq
_ckgr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckgq:
	jmp *-16(%r13)
	.size sat_shbw_entry, .-sat_shbw_entry


==================== Asm code ====================
2018-03-16 15:54:58.379070059 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbw_info:
	.quad	sat_shbw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.379764462 UTC

.section .text
.align 8
sat_shbv_entry:
_ckgw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckgx
_ckgy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckgx:
	jmp *-16(%r13)
	.size sat_shbv_entry, .-sat_shbv_entry


==================== Asm code ====================
2018-03-16 15:54:58.380397512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbv_info:
	.quad	sat_shbv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.381074659 UTC

.section .text
.align 8
sat_shbu_entry:
_ckgD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckgE
_ckgF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckgE:
	jmp *-16(%r13)
	.size sat_shbu_entry, .-sat_shbu_entry


==================== Asm code ====================
2018-03-16 15:54:58.381724045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbu_info:
	.quad	sat_shbu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.382414415 UTC

.section .text
.align 8
sat_shbt_entry:
_ckgK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckgL
_ckgM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckgL:
	jmp *-16(%r13)
	.size sat_shbt_entry, .-sat_shbt_entry


==================== Asm code ====================
2018-03-16 15:54:58.383070568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbt_info:
	.quad	sat_shbt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.383754842 UTC

.section .text
.align 8
sat_shbs_entry:
_ckgR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckgS
_ckgT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckgS:
	jmp *-16(%r13)
	.size sat_shbs_entry, .-sat_shbs_entry


==================== Asm code ====================
2018-03-16 15:54:58.384352369 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbs_info:
	.quad	sat_shbs_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.385089904 UTC

.section .text
.align 8
sat_shbx_entry:
_ckgZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ckh0
_ckh1:
	movq 37(%rbx),%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq %r14,%rdx
	movq 5(%rbx),%r14
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cstimes_entry
_ckh0:
	jmp *-8(%r13)
	.size sat_shbx_entry, .-sat_shbx_entry


==================== Asm code ====================
2018-03-16 15:54:58.385777307 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbx_info:
	.quad	sat_shbx_entry
	.quad	5
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.386473557 UTC

.section .text
.align 8
sat_shbq_entry:
_ckh6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckh7
_ckh8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckh7:
	jmp *-16(%r13)
	.size sat_shbq_entry, .-sat_shbq_entry


==================== Asm code ====================
2018-03-16 15:54:58.387103503 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbq_info:
	.quad	sat_shbq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.387789844 UTC

.section .text
.align 8
sat_shbp_entry:
_ckhd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhe
_ckhf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhe:
	jmp *-16(%r13)
	.size sat_shbp_entry, .-sat_shbp_entry


==================== Asm code ====================
2018-03-16 15:54:58.388403982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbp_info:
	.quad	sat_shbp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.389118069 UTC

.section .text
.align 8
sat_shbo_entry:
_ckhk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhl
_ckhm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhl:
	jmp *-16(%r13)
	.size sat_shbo_entry, .-sat_shbo_entry


==================== Asm code ====================
2018-03-16 15:54:58.390183667 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbo_info:
	.quad	sat_shbo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.390880871 UTC

.section .text
.align 8
sat_shbn_entry:
_ckhr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhs
_ckht:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhs:
	jmp *-16(%r13)
	.size sat_shbn_entry, .-sat_shbn_entry


==================== Asm code ====================
2018-03-16 15:54:58.391474965 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbn_info:
	.quad	sat_shbn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.392161417 UTC

.section .text
.align 8
sat_shbm_entry:
_ckhy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhz
_ckhA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhz:
	jmp *-16(%r13)
	.size sat_shbm_entry, .-sat_shbm_entry


==================== Asm code ====================
2018-03-16 15:54:58.392770176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbm_info:
	.quad	sat_shbm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.393482031 UTC

.section .text
.align 8
sat_shbr_entry:
_ckhG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhH
_ckhI:
	movq 39(%rbx),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq %r14,%rax
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$csconcat_entry
_ckhH:
	jmp *-8(%r13)
	.size sat_shbr_entry, .-sat_shbr_entry


==================== Asm code ====================
2018-03-16 15:54:58.394144211 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbr_info:
	.quad	sat_shbr_entry
	.quad	5
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.394841401 UTC

.section .text
.align 8
sat_shbk_entry:
_ckhN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhO
_ckhP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhO:
	jmp *-16(%r13)
	.size sat_shbk_entry, .-sat_shbk_entry


==================== Asm code ====================
2018-03-16 15:54:58.395455764 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbk_info:
	.quad	sat_shbk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.39613089 UTC

.section .text
.align 8
sat_shbj_entry:
_ckhU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhV
_ckhW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckhV:
	jmp *-16(%r13)
	.size sat_shbj_entry, .-sat_shbj_entry


==================== Asm code ====================
2018-03-16 15:54:58.396773651 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbj_info:
	.quad	sat_shbj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.39751599 UTC

.section .text
.align 8
sat_shbi_entry:
_cki1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cki2
_cki3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cki2:
	jmp *-16(%r13)
	.size sat_shbi_entry, .-sat_shbi_entry


==================== Asm code ====================
2018-03-16 15:54:58.398113191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbi_info:
	.quad	sat_shbi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.398782261 UTC

.section .text
.align 8
sat_shbh_entry:
_cki8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cki9
_ckia:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cki9:
	jmp *-16(%r13)
	.size sat_shbh_entry, .-sat_shbh_entry


==================== Asm code ====================
2018-03-16 15:54:58.399394013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbh_info:
	.quad	sat_shbh_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.400050032 UTC

.section .text
.align 8
sat_shbg_entry:
_ckif:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckig
_ckih:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckig:
	jmp *-16(%r13)
	.size sat_shbg_entry, .-sat_shbg_entry


==================== Asm code ====================
2018-03-16 15:54:58.40060861 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbg_info:
	.quad	sat_shbg_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.401800977 UTC

.section .text
.align 8
sat_shbl_entry:
_ckin:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckio
_ckip:
	movq 38(%rbx),%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq %r14,%rcx
	movq 6(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$c<>_entry
_ckio:
	jmp *-8(%r13)
	.size sat_shbl_entry, .-sat_shbl_entry


==================== Asm code ====================
2018-03-16 15:54:58.402553878 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shbl_info:
	.quad	sat_shbl_entry
	.quad	5
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.403675625 UTC

.section .text
.align 8
.globl GHC.Base.$w$cp1Monoid1_entry
.type GHC.Base.$w$cp1Monoid1_entry, @object
GHC.Base.$w$cp1Monoid1_entry:
_ckiq:
	addq $504,%r12
	cmpq 856(%r13),%r12
	ja _ckiu
_ckit:
	leaq sat_shbw_info(%rip),%rax
	movq %rax,-496(%r12)
	movq %r9,-480(%r12)
	leaq sat_shbv_info(%rip),%rax
	movq %rax,-472(%r12)
	movq %r8,-456(%r12)
	leaq sat_shbu_info(%rip),%rax
	movq %rax,-448(%r12)
	movq %rdi,-432(%r12)
	leaq sat_shbt_info(%rip),%rax
	movq %rax,-424(%r12)
	movq %rsi,-408(%r12)
	leaq sat_shbs_info(%rip),%rax
	movq %rax,-400(%r12)
	movq %r14,-384(%r12)
	leaq sat_shbx_info(%rip),%rax
	movq %rax,-376(%r12)
	leaq -400(%r12),%rax
	movq %rax,-368(%r12)
	leaq -424(%r12),%rax
	movq %rax,-360(%r12)
	leaq -448(%r12),%rax
	movq %rax,-352(%r12)
	leaq -472(%r12),%rax
	movq %rax,-344(%r12)
	leaq -496(%r12),%rax
	movq %rax,-336(%r12)
	leaq sat_shbq_info(%rip),%rax
	movq %rax,-328(%r12)
	movq %r9,-312(%r12)
	leaq sat_shbp_info(%rip),%rax
	movq %rax,-304(%r12)
	movq %r8,-288(%r12)
	leaq sat_shbo_info(%rip),%rax
	movq %rax,-280(%r12)
	movq %rdi,-264(%r12)
	leaq sat_shbn_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %rsi,-240(%r12)
	leaq sat_shbm_info(%rip),%rax
	movq %rax,-232(%r12)
	movq %r14,-216(%r12)
	leaq sat_shbr_info(%rip),%rax
	movq %rax,-208(%r12)
	leaq -232(%r12),%rax
	movq %rax,-200(%r12)
	leaq -256(%r12),%rax
	movq %rax,-192(%r12)
	leaq -280(%r12),%rax
	movq %rax,-184(%r12)
	leaq -304(%r12),%rax
	movq %rax,-176(%r12)
	leaq -328(%r12),%rax
	movq %rax,-168(%r12)
	leaq sat_shbk_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %r9,-144(%r12)
	leaq sat_shbj_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r8,-120(%r12)
	leaq sat_shbi_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %rdi,-96(%r12)
	leaq sat_shbh_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rsi,-72(%r12)
	leaq sat_shbg_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq sat_shbl_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -136(%r12),%rax
	movq %rax,-8(%r12)
	leaq -160(%r12),%rax
	movq %rax,(%r12)
	leaq -373(%r12),%rsi
	leaq -207(%r12),%r14
	leaq -38(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckiu:
	movq $504,904(%r13)
	leaq GHC.Base.$w$cp1Monoid1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$cp1Monoid1_entry, .-GHC.Base.$w$cp1Monoid1_entry


==================== Asm code ====================
2018-03-16 15:54:58.404741477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid1_info
.type GHC.Base.$w$cp1Monoid1_info, @object
GHC.Base.$w$cp1Monoid1_info:
	.quad	GHC.Base.$w$cp1Monoid1_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.408063173 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.408816731 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry:
_ckkD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckkE
_ckkF:
	leaq block_ckkA_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_ckkE:
	leaq GHC.Base.$fMonoid(,,,,)_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.409520769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.410304372 UTC

.section .text
.align 8
_ckkA:
_ckkA:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckkI
_ckkH:
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckkI:
	movq $32,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckkA, .-_ckkA


==================== Asm code ====================
2018-03-16 15:54:58.410908955 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckkA_info:
	.quad	_ckkA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.413651404 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:58.414412093 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_entry:
_ckl0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckl1
_ckl2:
	leaq block_ckkY_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_ckl1:
	leaq GHC.Base.$fMonoid(,,,,)_$cmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:58.415053891 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.415663706 UTC

.section .text
.align 8
_ckkY:
_ckkY:
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ckkY, .-_ckkY


==================== Asm code ====================
2018-03-16 15:54:58.416219293 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckkY_info:
	.quad	_ckkY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.425329708 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.426195555 UTC

.section .text
.align 8
k_shbV_entry:
_cklo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cklp
_cklq:
	leaq block_ckll_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid1_entry
_cklp:
	jmp *-16(%r13)
	.size k_shbV_entry, .-k_shbV_entry


==================== Asm code ====================
2018-03-16 15:54:58.426785567 UTC

.section .data.rel.ro
.align 8
.align 1
k_shbV_info:
	.quad	k_shbV_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.427484966 UTC

.section .text
.align 8
_ckll:
_ckll:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cklt
_ckls:
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cklt:
	movq $32,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckll, .-_ckll


==================== Asm code ====================
2018-03-16 15:54:58.428109509 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckll_info:
	.quad	_ckll
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.428797721 UTC

.section .text
.align 8
k1_shc0_entry:
_ckly:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cklz
_cklA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.<>_entry
_cklz:
	jmp *-16(%r13)
	.size k1_shc0_entry, .-k1_shc0_entry


==================== Asm code ====================
2018-03-16 15:54:58.429449387 UTC

.section .data.rel.ro
.align 8
.align 1
k1_shc0_info:
	.quad	k1_shc0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.430145621 UTC

.section .text
.align 8
z_shc1_entry:
_cklF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cklG
_cklH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cklG:
	jmp *-16(%r13)
	.size z_shc1_entry, .-z_shc1_entry


==================== Asm code ====================
2018-03-16 15:54:58.430749505 UTC

.section .data.rel.ro
.align 8
.align 1
z_shc1_info:
	.quad	z_shc1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.431396215 UTC

.section .text
.align 8
z1_shc2_entry:
_cklM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cklN
_cklO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cklN:
	jmp *-16(%r13)
	.size z1_shc2_entry, .-z1_shc2_entry


==================== Asm code ====================
2018-03-16 15:54:58.432029401 UTC

.section .data.rel.ro
.align 8
.align 1
z1_shc2_info:
	.quad	z1_shc2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.432747185 UTC

.section .text
.align 8
z2_shc3_entry:
_cklT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cklU
_cklV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cklU:
	jmp *-16(%r13)
	.size z2_shc3_entry, .-z2_shc3_entry


==================== Asm code ====================
2018-03-16 15:54:58.433420246 UTC

.section .data.rel.ro
.align 8
.align 1
z2_shc3_info:
	.quad	z2_shc3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.434077181 UTC

.section .text
.align 8
z3_shc4_entry:
_ckm0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckm1
_ckm2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckm1:
	jmp *-16(%r13)
	.size z3_shc4_entry, .-z3_shc4_entry


==================== Asm code ====================
2018-03-16 15:54:58.434682765 UTC

.section .data.rel.ro
.align 8
.align 1
z3_shc4_info:
	.quad	z3_shc4_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.435384303 UTC

.section .text
.align 8
z4_shc5_entry:
_ckm7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckm8
_ckm9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckm8:
	jmp *-16(%r13)
	.size z4_shc5_entry, .-z4_shc5_entry


==================== Asm code ====================
2018-03-16 15:54:58.436027002 UTC

.section .data.rel.ro
.align 8
.align 1
z4_shc5_info:
	.quad	z4_shc5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.436800901 UTC

.section .text
.align 8
go_shc7_entry:
_ckmn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckmo
_ckmp:
	leaq block_ckmg_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ckmg
_ckmh:
	movq (%rbx),%rax
	jmp *(%rax)
_ckmo:
	jmp *-8(%r13)
	.size go_shc7_entry, .-go_shc7_entry


==================== Asm code ====================
2018-03-16 15:54:58.437515247 UTC

.section .data.rel.ro
.align 8
.align 1
go_shc7_info:
	.quad	go_shc7_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.438294913 UTC

.section .text
.align 8
_ckmg:
_ckmg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckmk
_ckml:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckmy
_ckmx:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ckmy:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ckmk:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ckmg, .-_ckmg


==================== Asm code ====================
2018-03-16 15:54:58.439019418 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckmg_info:
	.quad	_ckmg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.439921089 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_entry:
_ckmA:
	addq $272,%r12
	cmpq 856(%r13),%r12
	ja _ckmE
_ckmD:
	leaq k_shbV_info(%rip),%rax
	movq %rax,-264(%r12)
	movq %r14,-248(%r12)
	movq %rsi,-240(%r12)
	movq %rdi,-232(%r12)
	movq %r8,-224(%r12)
	movq %r9,-216(%r12)
	leaq k1_shc0_info(%rip),%rax
	movq %rax,-208(%r12)
	leaq -264(%r12),%rax
	movq %rax,-192(%r12)
	leaq z_shc1_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-168(%r12)
	leaq z1_shc2_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %rsi,-144(%r12)
	leaq z2_shc3_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %rdi,-120(%r12)
	leaq z3_shc4_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r8,-96(%r12)
	leaq z4_shc5_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r9,-72(%r12)
	movq (,,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -184(%r12),%rax
	movq %rax,-56(%r12)
	leaq -160(%r12),%rax
	movq %rax,-48(%r12)
	leaq -136(%r12),%rax
	movq %rax,-40(%r12)
	leaq -112(%r12),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq go_shc7_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -208(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckmE:
	movq $272,904(%r13)
	leaq GHC.Base.$fMonoid(,,,,)_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.440862069 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.448138529 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_closure
.type GHC.Base.$fMonoid(,,,,)_closure, @object
GHC.Base.$fMonoid(,,,,)_closure:
	.quad	GHC.Base.$fMonoid(,,,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.449000156 UTC

.section .text
.align 8
sat_shcl_entry:
_cko1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cko2
_cko3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmconcat_entry
_cko2:
	jmp *-16(%r13)
	.size sat_shcl_entry, .-sat_shcl_entry


==================== Asm code ====================
2018-03-16 15:54:58.449704864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcl_info:
	.quad	sat_shcl_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.450408033 UTC

.section .text
.align 8
sat_shck_entry:
_cko8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cko9
_ckoa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmappend_entry
_cko9:
	jmp *-16(%r13)
	.size sat_shck_entry, .-sat_shck_entry


==================== Asm code ====================
2018-03-16 15:54:58.451033512 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shck_info:
	.quad	sat_shck_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.451766899 UTC

.section .text
.align 8
sat_shcj_entry:
_ckof:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckog
_ckoh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cmempty_entry
_ckog:
	jmp *-16(%r13)
	.size sat_shcj_entry, .-sat_shcj_entry


==================== Asm code ====================
2018-03-16 15:54:58.452382262 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcj_info:
	.quad	sat_shcj_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.453064168 UTC

.section .text
.align 8
sat_shci_entry:
_ckom:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckon
_ckoo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 48(%rbx),%r9
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,,)_$cp1Monoid_entry
_ckon:
	jmp *-16(%r13)
	.size sat_shci_entry, .-sat_shci_entry


==================== Asm code ====================
2018-03-16 15:54:58.453767436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shci_info:
	.quad	sat_shci_entry
	.quad	5
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.454660131 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,,)_entry
.type GHC.Base.$fMonoid(,,,,)_entry, @object
GHC.Base.$fMonoid(,,,,)_entry:
_ckoq:
	addq $264,%r12
	cmpq 856(%r13),%r12
	ja _ckou
_ckot:
	leaq sat_shcl_info(%rip),%rax
	movq %rax,-256(%r12)
	movq %r14,-240(%r12)
	movq %rsi,-232(%r12)
	movq %rdi,-224(%r12)
	movq %r8,-216(%r12)
	movq %r9,-208(%r12)
	leaq sat_shck_info(%rip),%rax
	movq %rax,-200(%r12)
	movq %r14,-184(%r12)
	movq %rsi,-176(%r12)
	movq %rdi,-168(%r12)
	movq %r8,-160(%r12)
	movq %r9,-152(%r12)
	leaq sat_shcj_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-128(%r12)
	movq %rsi,-120(%r12)
	movq %rdi,-112(%r12)
	movq %r8,-104(%r12)
	movq %r9,-96(%r12)
	leaq sat_shci_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %r8,-48(%r12)
	movq %r9,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -88(%r12),%rax
	movq %rax,-24(%r12)
	leaq -144(%r12),%rax
	movq %rax,-16(%r12)
	leaq -200(%r12),%rax
	movq %rax,-8(%r12)
	leaq -256(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckou:
	movq $264,904(%r13)
	leaq GHC.Base.$fMonoid(,,,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,,)_entry, .-GHC.Base.$fMonoid(,,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.455490104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,,)_info
.type GHC.Base.$fMonoid(,,,,)_info, @object
GHC.Base.$fMonoid(,,,,)_info:
	.quad	GHC.Base.$fMonoid(,,,,)_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.462810428 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.463647179 UTC

.section .text
.align 8
sat_shcF_entry:
_ckpl:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckpm
_ckpn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckpm:
	jmp *-16(%r13)
	.size sat_shcF_entry, .-sat_shcF_entry


==================== Asm code ====================
2018-03-16 15:54:58.464288792 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcF_info:
	.quad	sat_shcF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.465079823 UTC

.section .text
.align 8
sat_shcE_entry:
_ckps:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckpt
_ckpu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckpt:
	jmp *-16(%r13)
	.size sat_shcE_entry, .-sat_shcE_entry


==================== Asm code ====================
2018-03-16 15:54:58.465802607 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcE_info:
	.quad	sat_shcE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.466568123 UTC

.section .text
.align 8
sat_shcD_entry:
_ckpz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckpA
_ckpB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckpA:
	jmp *-16(%r13)
	.size sat_shcD_entry, .-sat_shcD_entry


==================== Asm code ====================
2018-03-16 15:54:58.467216555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcD_info:
	.quad	sat_shcD_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.46793892 UTC

.section .text
.align 8
sat_shcC_entry:
_ckpG:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckpH
_ckpI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckpH:
	jmp *-16(%r13)
	.size sat_shcC_entry, .-sat_shcC_entry


==================== Asm code ====================
2018-03-16 15:54:58.468588686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shcC_info:
	.quad	sat_shcC_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.469453423 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,,)_$c<>_entry:
_ckpJ:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _ckpL
_ckpM:
	leaq block_ckp7_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckp7
_ckp8:
	movq (%rbx),%rax
	jmp *(%rax)
_ckpL:
	leaq GHC.Base.$fMonoid(,,,)_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.470174514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$c<>_info
.type GHC.Base.$fMonoid(,,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:58.471004282 UTC

.section .text
.align 8
_ckp7:
_ckp7:
	leaq block_ckpc_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq 40(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,40(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _ckpc
_ckpd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckp7, .-_ckp7


==================== Asm code ====================
2018-03-16 15:54:58.471790554 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckp7_info:
	.quad	_ckp7
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.472767346 UTC

.section .text
.align 8
_ckpc:
_ckpc:
	addq $200,%r12
	cmpq 856(%r13),%r12
	ja _ckpQ
_ckpP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_shcF_info(%rip),%rsi
	movq %rsi,-192(%r12)
	movq 56(%rbp),%rsi
	movq %rsi,-176(%r12)
	movq 16(%rbp),%rsi
	movq %rsi,-168(%r12)
	movq %rbx,-160(%r12)
	leaq sat_shcE_info(%rip),%rbx
	movq %rbx,-152(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-136(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-128(%r12)
	movq %rdx,-120(%r12)
	leaq sat_shcD_info(%rip),%rbx
	movq %rbx,-112(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rcx,-80(%r12)
	leaq sat_shcC_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -152(%r12),%rax
	movq %rax,-8(%r12)
	leaq -192(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckpQ:
	movq $200,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckpc, .-_ckpc


==================== Asm code ====================
2018-03-16 15:54:58.475035123 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckpc_info:
	.quad	_ckpc
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.485366465 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat2_closure
.type GHC.Base.$w$csconcat2_closure, @object
GHC.Base.$w$csconcat2_closure:
	.quad	GHC.Base.$w$csconcat2_info


==================== Asm code ====================
2018-03-16 15:54:58.486079344 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat2_slow
.type GHC.Base.$w$csconcat2_slow, @object
GHC.Base.$w$csconcat2_slow:
_ckqX:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size GHC.Base.$w$csconcat2_slow, .-GHC.Base.$w$csconcat2_slow


==================== Asm code ====================
2018-03-16 15:54:58.486928265 UTC

.section .text
.align 8
sat_shdb_entry:
_ckrn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckro
_ckrp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckro:
	jmp *-16(%r13)
	.size sat_shdb_entry, .-sat_shdb_entry


==================== Asm code ====================
2018-03-16 15:54:58.487565981 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdb_info:
	.quad	sat_shdb_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.488429739 UTC

.section .text
.align 8
sat_shda_entry:
_ckru:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckrv
_ckrw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckrv:
	jmp *-16(%r13)
	.size sat_shda_entry, .-sat_shda_entry


==================== Asm code ====================
2018-03-16 15:54:58.489129267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shda_info:
	.quad	sat_shda_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.489897454 UTC

.section .text
.align 8
sat_shd9_entry:
_ckrB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckrC
_ckrD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckrC:
	jmp *-16(%r13)
	.size sat_shd9_entry, .-sat_shd9_entry


==================== Asm code ====================
2018-03-16 15:54:58.490553772 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shd9_info:
	.quad	sat_shd9_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.491252819 UTC

.section .text
.align 8
sat_shd8_entry:
_ckrI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckrJ
_ckrK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckrJ:
	jmp *-16(%r13)
	.size sat_shd8_entry, .-sat_shd8_entry


==================== Asm code ====================
2018-03-16 15:54:58.491935202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shd8_info:
	.quad	sat_shd8_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.493447722 UTC

.section .text
.align 8
$wgo_shcP_entry:
_ckrP:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _ckrQ
_ckrR:
	leaq block_ckr6_info(%rip),%rax
	movq %rax,-80(%rbp)
	movq %rbx,%rax
	movq 3(%rbx),%rcx
	movq 11(%rbx),%rdx
	movq 19(%rbx),%r10
	movq 27(%rbx),%rbx
	movq %rbx,%r11
	movq %r9,%rbx
	movq %rcx,-72(%rbp)
	movq %rdx,-64(%rbp)
	movq %r10,-56(%rbp)
	movq %r11,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-80,%rbp
	testb $7,%bl
	jne _ckr6
_ckr7:
	movq (%rbx),%rax
	jmp *(%rax)
_ckrQ:
	jmp *-8(%r13)
	.size $wgo_shcP_entry, .-$wgo_shcP_entry


==================== Asm code ====================
2018-03-16 15:54:58.494271923 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_shcP_info:
	.quad	$wgo_shcP_entry
	.quad	4
	.quad	8
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.495099411 UTC

.section .text
.align 8
_ckr6:
_ckr6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckrM
_ckrN:
	leaq block_ckrc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ckrc
_ckrd:
	movq (%rbx),%rax
	jmp *(%rax)
_ckrM:
	movq 72(%rbp),%rdi
	movq 64(%rbp),%rsi
	movq 56(%rbp),%r14
	movq 48(%rbp),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ckr6, .-_ckr6


==================== Asm code ====================
2018-03-16 15:54:58.495733947 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckr6_info:
	.quad	_ckr6
	.quad	9
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.496624143 UTC

.section .text
.align 8
_ckrc:
_ckrc:
	movq 8(%rbp),%rax
	leaq block_ckrh_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 48(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_shcP_entry
	.size _ckrc, .-_ckrc


==================== Asm code ====================
2018-03-16 15:54:58.497388983 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckrc_info:
	.quad	_ckrc
	.quad	10
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.498222968 UTC

.section .text
.align 8
_ckrh:
_ckrh:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _ckrY
_ckrX:
	leaq sat_shdb_info(%rip),%rax
	movq %rax,-152(%r12)
	movq 32(%rbp),%rax
	movq %rax,-136(%r12)
	movq 72(%rbp),%rax
	movq %rax,-128(%r12)
	movq %rdi,-120(%r12)
	leaq sat_shda_info(%rip),%rax
	movq %rax,-112(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq %rsi,-80(%r12)
	leaq sat_shd9_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 56(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_shd8_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -152(%r12),%rdi
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckrY:
	movq $160,904(%r13)
	jmp *stg_gc_pppp@gotpcrel(%rip)
	.size _ckrh, .-_ckrh


==================== Asm code ====================
2018-03-16 15:54:58.499342393 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckrh_info:
	.quad	_ckrh
	.quad	1033
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.500422363 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat2_entry
.type GHC.Base.$w$csconcat2_entry, @object
GHC.Base.$w$csconcat2_entry:
_cks1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cks5
_cks4:
	leaq $wgo_shcP_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rax
	movq 24(%rbp),%r9
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	leaq -27(%r12),%rbx
	addq $32,%rbp
	jmp $wgo_shcP_entry
_cks5:
	movq $40,904(%r13)
	leaq GHC.Base.$w$csconcat2_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat2_entry, .-GHC.Base.$w$csconcat2_entry


==================== Asm code ====================
2018-03-16 15:54:58.501393455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat2_info
.type GHC.Base.$w$csconcat2_info, @object
GHC.Base.$w$csconcat2_info:
	.quad	GHC.Base.$w$csconcat2_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	9
	.quad	GHC.Base.$w$csconcat2_slow


==================== Asm code ====================
2018-03-16 15:54:58.507609185 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,,,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.508584494 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,,,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_entry:
_ckto:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cktz
_cktA:
	leaq block_cktl_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cktl
_cktm:
	movq (%rbx),%rax
	jmp *(%rax)
_cktz:
	leaq GHC.Base.$fSemigroup(,,,)_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.509351685 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$csconcat_info
.type GHC.Base.$fSemigroup(,,,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,,,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.51018592 UTC

.section .text
.align 8
_cktl:
_cktl:
	leaq block_cktr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cktr
_ckts:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cktl, .-_cktl


==================== Asm code ====================
2018-03-16 15:54:58.510819552 UTC

.section .data.rel.ro
.align 8
.align 1
block_cktl_info:
	.quad	_cktl
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.511550345 UTC

.section .text
.align 8
_cktr:
_cktr:
	movq 40(%rbp),%rax
	leaq block_cktw_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq 7(%rbx),%r9
	movq %rax,%r8
	movq 32(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 23(%rbx),%rcx
	movq %rcx,16(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size _cktr, .-_cktr


==================== Asm code ====================
2018-03-16 15:54:58.512215986 UTC

.section .data.rel.ro
.align 8
.align 1
block_cktr_info:
	.quad	_cktr
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.51359834 UTC

.section .text
.align 8
_cktw:
_cktw:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cktF
_cktE:
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cktF:
	movq $40,904(%r13)
	jmp *stg_gc_pppp@gotpcrel(%rip)
	.size _cktw, .-_cktw


==================== Asm code ====================
2018-03-16 15:54:58.514494973 UTC

.section .data.rel.ro
.align 8
.align 1
block_cktw_info:
	.quad	_cktw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.523395459 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,,,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.524266975 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_slow
.type GHC.Base.$fSemigroup(,,,)_$cstimes_slow, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_slow:
_cku7:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$fSemigroup(,,,)_$cstimes_entry
	.size GHC.Base.$fSemigroup(,,,)_$cstimes_slow, .-GHC.Base.$fSemigroup(,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:58.5251436 UTC

.section .text
.align 8
sat_shdJ_entry:
_ckuk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckul
_ckum:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckul:
	jmp *-16(%r13)
	.size sat_shdJ_entry, .-sat_shdJ_entry


==================== Asm code ====================
2018-03-16 15:54:58.525950927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdJ_info:
	.quad	sat_shdJ_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.526713167 UTC

.section .text
.align 8
sat_shdI_entry:
_ckur:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckus
_ckut:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckus:
	jmp *-16(%r13)
	.size sat_shdI_entry, .-sat_shdI_entry


==================== Asm code ====================
2018-03-16 15:54:58.527383809 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdI_info:
	.quad	sat_shdI_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.528115651 UTC

.section .text
.align 8
sat_shdH_entry:
_ckuy:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckuz
_ckuA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckuz:
	jmp *-16(%r13)
	.size sat_shdH_entry, .-sat_shdH_entry


==================== Asm code ====================
2018-03-16 15:54:58.528789355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdH_info:
	.quad	sat_shdH_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.529666019 UTC

.section .text
.align 8
sat_shdG_entry:
_ckuF:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckuG
_ckuH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckuG:
	jmp *-16(%r13)
	.size sat_shdG_entry, .-sat_shdG_entry


==================== Asm code ====================
2018-03-16 15:54:58.530356697 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdG_info:
	.quad	sat_shdG_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.531194264 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,,,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_entry:
_ckuI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckuK
_ckuL:
	leaq block_ckub_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckub
_ckuc:
	movq (%rbx),%rax
	jmp *(%rax)
_ckuK:
	leaq GHC.Base.$fSemigroup(,,,)_$cstimes_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.531953842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_$cstimes_info
.type GHC.Base.$fSemigroup(,,,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,,,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$fSemigroup(,,,)_$cstimes_slow


==================== Asm code ====================
2018-03-16 15:54:58.533014225 UTC

.section .text
.align 8
_ckub:
_ckub:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _ckuO
_ckuN:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_shdJ_info(%rip),%rsi
	movq %rsi,-224(%r12)
	movq 24(%rbp),%rsi
	movq %rsi,-208(%r12)
	movq 32(%rbp),%rsi
	movq %rsi,-200(%r12)
	movq 40(%rbp),%rdi
	movq %rdi,-192(%r12)
	movq %rbx,-184(%r12)
	leaq sat_shdI_info(%rip),%rbx
	movq %rbx,-176(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %rdx,-136(%r12)
	leaq sat_shdH_info(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %rcx,-88(%r12)
	leaq sat_shdG_info(%rip),%rbx
	movq %rbx,-80(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckuO:
	movq $232,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckub, .-_ckub


==================== Asm code ====================
2018-03-16 15:54:58.534406724 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckub_info:
	.quad	_ckub
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.539675217 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_closure
.type GHC.Base.$fSemigroup(,,,)_closure, @object
GHC.Base.$fSemigroup(,,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.540531858 UTC

.section .text
.align 8
sat_shdQ_entry:
_ckvZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckw0
_ckw1:
	movq %r14,%r9
	movq 29(%rbx),%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq %rsi,%rcx
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.$fSemigroup(,,,)_$cstimes_entry
_ckw0:
	jmp *-8(%r13)
	.size sat_shdQ_entry, .-sat_shdQ_entry


==================== Asm code ====================
2018-03-16 15:54:58.541349453 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdQ_info:
	.quad	sat_shdQ_entry
	.quad	4
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.541974735 UTC

.section .text
.align 8
sat_shdP_entry:
_ckw7:
	movq %r14,%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,,,)_$csconcat_entry
	.size sat_shdP_entry, .-sat_shdP_entry


==================== Asm code ====================
2018-03-16 15:54:58.543187027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdP_info:
	.quad	sat_shdP_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.544154253 UTC

.section .text
.align 8
sat_shdO_entry:
_ckwf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckwg
_ckwh:
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$c<>_entry
_ckwg:
	jmp *-8(%r13)
	.size sat_shdO_entry, .-sat_shdO_entry


==================== Asm code ====================
2018-03-16 15:54:58.544927271 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdO_info:
	.quad	sat_shdO_entry
	.quad	4
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.545910709 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,,)_entry
.type GHC.Base.$fSemigroup(,,,)_entry, @object
GHC.Base.$fSemigroup(,,,)_entry:
_ckwj:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ckwn
_ckwm:
	leaq sat_shdQ_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	movq %r8,-112(%r12)
	leaq sat_shdP_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	leaq sat_shdO_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -62(%r12),%rax
	movq %rax,-16(%r12)
	leaq -103(%r12),%rax
	movq %rax,-8(%r12)
	leaq -141(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckwn:
	movq $152,904(%r13)
	leaq GHC.Base.$fSemigroup(,,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,,)_entry, .-GHC.Base.$fSemigroup(,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.54681384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,,)_info
.type GHC.Base.$fSemigroup(,,,)_info, @object
GHC.Base.$fSemigroup(,,,)_info:
	.quad	GHC.Base.$fSemigroup(,,,)_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.56603647 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid_closure
.type GHC.Base.$w$cp1Monoid_closure, @object
GHC.Base.$w$cp1Monoid_closure:
	.quad	GHC.Base.$w$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.566912815 UTC

.section .text
.align 8
w4_shej_entry:
_ckwT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckwU
_ckwV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckwU:
	jmp *-16(%r13)
	.size w4_shej_entry, .-w4_shej_entry


==================== Asm code ====================
2018-03-16 15:54:58.567538123 UTC

.section .data.rel.ro
.align 8
.align 1
w4_shej_info:
	.quad	w4_shej_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.568217446 UTC

.section .text
.align 8
w5_shek_entry:
_ckx0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckx1
_ckx2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckx1:
	jmp *-16(%r13)
	.size w5_shek_entry, .-w5_shek_entry


==================== Asm code ====================
2018-03-16 15:54:58.568832242 UTC

.section .data.rel.ro
.align 8
.align 1
w5_shek_info:
	.quad	w5_shek_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.569722987 UTC

.section .text
.align 8
w6_shel_entry:
_ckx7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckx8
_ckx9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckx8:
	jmp *-16(%r13)
	.size w6_shel_entry, .-w6_shel_entry


==================== Asm code ====================
2018-03-16 15:54:58.570317225 UTC

.section .data.rel.ro
.align 8
.align 1
w6_shel_info:
	.quad	w6_shel_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.570963946 UTC

.section .text
.align 8
w7_shem_entry:
_ckxe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxf
_ckxg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckxf:
	jmp *-16(%r13)
	.size w7_shem_entry, .-w7_shem_entry


==================== Asm code ====================
2018-03-16 15:54:58.57155686 UTC

.section .data.rel.ro
.align 8
.align 1
w7_shem_info:
	.quad	w7_shem_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.572248866 UTC

.section .text
.align 8
sat_shey_entry:
_ckxv:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxw
_ckxx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckxw:
	jmp *-16(%r13)
	.size sat_shey_entry, .-sat_shey_entry


==================== Asm code ====================
2018-03-16 15:54:58.572980941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shey_info:
	.quad	sat_shey_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.573784534 UTC

.section .text
.align 8
sat_shex_entry:
_ckxC:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxD
_ckxE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckxD:
	jmp *-16(%r13)
	.size sat_shex_entry, .-sat_shex_entry


==================== Asm code ====================
2018-03-16 15:54:58.574445803 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shex_info:
	.quad	sat_shex_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.575247779 UTC

.section .text
.align 8
sat_shew_entry:
_ckxJ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxK
_ckxL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckxK:
	jmp *-16(%r13)
	.size sat_shew_entry, .-sat_shew_entry


==================== Asm code ====================
2018-03-16 15:54:58.57610175 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shew_info:
	.quad	sat_shew_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.576857538 UTC

.section .text
.align 8
sat_shev_entry:
_ckxQ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxR
_ckxS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckxR:
	jmp *-16(%r13)
	.size sat_shev_entry, .-sat_shev_entry


==================== Asm code ====================
2018-03-16 15:54:58.577700359 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shev_info:
	.quad	sat_shev_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.578780659 UTC

.section .text
.align 8
sat_shez_entry:
_ckxT:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ckxV
_ckxW:
	leaq block_ckxm_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 5(%rbx),%rax
	movq 13(%rbx),%rcx
	movq 21(%rbx),%rdx
	movq 29(%rbx),%rbx
	movq %rbx,%r8
	movq %rdi,%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _ckxm
_ckxn:
	movq (%rbx),%rax
	jmp *(%rax)
_ckxV:
	jmp *-8(%r13)
	.size sat_shez_entry, .-sat_shez_entry


==================== Asm code ====================
2018-03-16 15:54:58.579510098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shez_info:
	.quad	sat_shez_entry
	.quad	4
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.580762793 UTC

.section .text
.align 8
_ckxm:
_ckxm:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _ckxZ
_ckxY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_shey_info(%rip),%rsi
	movq %rsi,-224(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-208(%r12)
	movq 40(%rbp),%rsi
	movq %rsi,-200(%r12)
	movq 48(%rbp),%rdi
	movq %rdi,-192(%r12)
	movq %rbx,-184(%r12)
	leaq sat_shex_info(%rip),%rbx
	movq %rbx,-176(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %rdx,-136(%r12)
	leaq sat_shew_info(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %rcx,-88(%r12)
	leaq sat_shev_info(%rip),%rbx
	movq %rbx,-80(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckxZ:
	movq $232,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckxm, .-_ckxm


==================== Asm code ====================
2018-03-16 15:54:58.582198131 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckxm_info:
	.quad	_ckxm
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.583000772 UTC

.section .text
.align 8
w4_she0_entry:
_cky5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cky6
_cky7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cky6:
	jmp *-16(%r13)
	.size w4_she0_entry, .-w4_she0_entry


==================== Asm code ====================
2018-03-16 15:54:58.58367105 UTC

.section .data.rel.ro
.align 8
.align 1
w4_she0_info:
	.quad	w4_she0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.58435296 UTC

.section .text
.align 8
w5_she1_entry:
_ckyc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckyd
_ckye:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckyd:
	jmp *-16(%r13)
	.size w5_she1_entry, .-w5_she1_entry


==================== Asm code ====================
2018-03-16 15:54:58.584982362 UTC

.section .data.rel.ro
.align 8
.align 1
w5_she1_info:
	.quad	w5_she1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.585744497 UTC

.section .text
.align 8
w6_she2_entry:
_ckyj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckyk
_ckyl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckyk:
	jmp *-16(%r13)
	.size w6_she2_entry, .-w6_she2_entry


==================== Asm code ====================
2018-03-16 15:54:58.58640954 UTC

.section .data.rel.ro
.align 8
.align 1
w6_she2_info:
	.quad	w6_she2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.587154988 UTC

.section .text
.align 8
w7_she3_entry:
_ckyq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckyr
_ckys:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckyr:
	jmp *-16(%r13)
	.size w7_she3_entry, .-w7_she3_entry


==================== Asm code ====================
2018-03-16 15:54:58.587822645 UTC

.section .data.rel.ro
.align 8
.align 1
w7_she3_info:
	.quad	w7_she3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.58869236 UTC

.section .text
.align 8
sat_shei_entry:
_ckyB:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckyM
_ckyN:
	leaq block_ckyy_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckyy
_ckyz:
	movq (%rbx),%rax
	jmp *(%rax)
_ckyM:
	jmp *-8(%r13)
	.size sat_shei_entry, .-sat_shei_entry


==================== Asm code ====================
2018-03-16 15:54:58.589456769 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shei_info:
	.quad	sat_shei_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.590399314 UTC

.section .text
.align 8
_ckyy:
_ckyy:
	leaq block_ckyE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ckyE
_ckyF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckyy, .-_ckyy


==================== Asm code ====================
2018-03-16 15:54:58.591055179 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckyy_info:
	.quad	_ckyy
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.591806423 UTC

.section .text
.align 8
_ckyE:
_ckyE:
	movq 40(%rbp),%rax
	leaq block_ckyJ_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq 7(%rbx),%r9
	movq 16(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 23(%rbx),%rcx
	movq %rcx,16(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp GHC.Base.$w$csconcat2_entry
	.size _ckyE, .-_ckyE


==================== Asm code ====================
2018-03-16 15:54:58.592613427 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckyE_info:
	.quad	_ckyE
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.593633181 UTC

.section .text
.align 8
_ckyJ:
_ckyJ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ckyS
_ckyR:
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckyS:
	movq $40,904(%r13)
	jmp *stg_gc_pppp@gotpcrel(%rip)
	.size _ckyJ, .-_ckyJ


==================== Asm code ====================
2018-03-16 15:54:58.59516976 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckyJ_info:
	.quad	_ckyJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.595944651 UTC

.section .text
.align 8
sat_shdY_entry:
_ckyZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckz0
_ckz1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckz0:
	jmp *-16(%r13)
	.size sat_shdY_entry, .-sat_shdY_entry


==================== Asm code ====================
2018-03-16 15:54:58.596650573 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdY_info:
	.quad	sat_shdY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.597591514 UTC

.section .text
.align 8
sat_shdX_entry:
_ckz6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckz7
_ckz8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckz7:
	jmp *-16(%r13)
	.size sat_shdX_entry, .-sat_shdX_entry


==================== Asm code ====================
2018-03-16 15:54:58.598266399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdX_info:
	.quad	sat_shdX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.598970369 UTC

.section .text
.align 8
sat_shdW_entry:
_ckzd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckze
_ckzf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckze:
	jmp *-16(%r13)
	.size sat_shdW_entry, .-sat_shdW_entry


==================== Asm code ====================
2018-03-16 15:54:58.599764579 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdW_info:
	.quad	sat_shdW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.600446583 UTC

.section .text
.align 8
sat_shdV_entry:
_ckzk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckzl
_ckzm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckzl:
	jmp *-16(%r13)
	.size sat_shdV_entry, .-sat_shdV_entry


==================== Asm code ====================
2018-03-16 15:54:58.601086507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdV_info:
	.quad	sat_shdV_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.601886538 UTC

.section .text
.align 8
sat_shdZ_entry:
_ckzs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckzt
_ckzu:
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq %rsi,%rax
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$c<>_entry
_ckzt:
	jmp *-8(%r13)
	.size sat_shdZ_entry, .-sat_shdZ_entry


==================== Asm code ====================
2018-03-16 15:54:58.602527331 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shdZ_info:
	.quad	sat_shdZ_entry
	.quad	4
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.60351215 UTC

.section .text
.align 8
.globl GHC.Base.$w$cp1Monoid_entry
.type GHC.Base.$w$cp1Monoid_entry, @object
GHC.Base.$w$cp1Monoid_entry:
_ckzv:
	addq $408,%r12
	cmpq 856(%r13),%r12
	ja _ckzz
_ckzy:
	leaq w4_shej_info(%rip),%rax
	movq %rax,-400(%r12)
	movq %r8,-384(%r12)
	leaq w5_shek_info(%rip),%rax
	movq %rax,-376(%r12)
	movq %rdi,-360(%r12)
	leaq w6_shel_info(%rip),%rax
	movq %rax,-352(%r12)
	movq %rsi,-336(%r12)
	leaq w7_shem_info(%rip),%rax
	movq %rax,-328(%r12)
	movq %r14,-312(%r12)
	leaq sat_shez_info(%rip),%rax
	movq %rax,-304(%r12)
	leaq -400(%r12),%rax
	movq %rax,-296(%r12)
	leaq -376(%r12),%rax
	movq %rax,-288(%r12)
	leaq -352(%r12),%rax
	movq %rax,-280(%r12)
	leaq -328(%r12),%rax
	movq %rax,-272(%r12)
	leaq w4_she0_info(%rip),%rax
	movq %rax,-264(%r12)
	movq %r8,-248(%r12)
	leaq w5_she1_info(%rip),%rax
	movq %rax,-240(%r12)
	movq %rdi,-224(%r12)
	leaq w6_she2_info(%rip),%rax
	movq %rax,-216(%r12)
	movq %rsi,-200(%r12)
	leaq w7_she3_info(%rip),%rax
	movq %rax,-192(%r12)
	movq %r14,-176(%r12)
	leaq sat_shei_info(%rip),%rax
	movq %rax,-168(%r12)
	leaq -264(%r12),%rax
	movq %rax,-160(%r12)
	leaq -240(%r12),%rax
	movq %rax,-152(%r12)
	leaq -216(%r12),%rax
	movq %rax,-144(%r12)
	leaq -192(%r12),%rax
	movq %rax,-136(%r12)
	leaq sat_shdY_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r8,-112(%r12)
	leaq sat_shdX_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rdi,-88(%r12)
	leaq sat_shdW_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rsi,-64(%r12)
	leaq sat_shdV_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	leaq sat_shdZ_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	leaq -301(%r12),%rsi
	leaq -167(%r12),%r14
	leaq -30(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckzz:
	movq $408,904(%r13)
	leaq GHC.Base.$w$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$cp1Monoid_entry, .-GHC.Base.$w$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.604504117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cp1Monoid_info
.type GHC.Base.$w$cp1Monoid_info, @object
GHC.Base.$w$cp1Monoid_info:
	.quad	GHC.Base.$w$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.607803297 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.608600732 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry:
_ckCz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckCA
_ckCB:
	leaq block_ckCw_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_ckCA:
	leaq GHC.Base.$fMonoid(,,,)_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.61042132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.611325519 UTC

.section .text
.align 8
_ckCw:
_ckCw:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckCE
_ckCD:
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckCE:
	movq $32,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckCw, .-_ckCw


==================== Asm code ====================
2018-03-16 15:54:58.611957866 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckCw_info:
	.quad	_ckCw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.615010208 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:58.615809123 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,,)_$cmappend_entry:
_ckCW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckCX
_ckCY:
	leaq block_ckCU_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_ckCX:
	leaq GHC.Base.$fMonoid(,,,)_$cmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:58.616458535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.617083922 UTC

.section .text
.align 8
_ckCU:
_ckCU:
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ckCU, .-_ckCU


==================== Asm code ====================
2018-03-16 15:54:58.617729977 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckCU_info:
	.quad	_ckCU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.626695095 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.627597003 UTC

.section .text
.align 8
k_sheU_entry:
_ckDk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDl
_ckDm:
	leaq block_ckDh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$cp1Monoid_entry
_ckDl:
	jmp *-16(%r13)
	.size k_sheU_entry, .-k_sheU_entry


==================== Asm code ====================
2018-03-16 15:54:58.628236115 UTC

.section .data.rel.ro
.align 8
.align 1
k_sheU_info:
	.quad	k_sheU_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.628989116 UTC

.section .text
.align 8
_ckDh:
_ckDh:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckDp
_ckDo:
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckDp:
	movq $32,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckDh, .-_ckDh


==================== Asm code ====================
2018-03-16 15:54:58.629748704 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckDh_info:
	.quad	_ckDh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.63047644 UTC

.section .text
.align 8
k1_sheZ_entry:
_ckDu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDv
_ckDw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.<>_entry
_ckDv:
	jmp *-16(%r13)
	.size k1_sheZ_entry, .-k1_sheZ_entry


==================== Asm code ====================
2018-03-16 15:54:58.631099013 UTC

.section .data.rel.ro
.align 8
.align 1
k1_sheZ_info:
	.quad	k1_sheZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.631788436 UTC

.section .text
.align 8
z_shf0_entry:
_ckDB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDC
_ckDD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckDC:
	jmp *-16(%r13)
	.size z_shf0_entry, .-z_shf0_entry


==================== Asm code ====================
2018-03-16 15:54:58.632442978 UTC

.section .data.rel.ro
.align 8
.align 1
z_shf0_info:
	.quad	z_shf0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.633142174 UTC

.section .text
.align 8
z1_shf1_entry:
_ckDI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDJ
_ckDK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckDJ:
	jmp *-16(%r13)
	.size z1_shf1_entry, .-z1_shf1_entry


==================== Asm code ====================
2018-03-16 15:54:58.633824038 UTC

.section .data.rel.ro
.align 8
.align 1
z1_shf1_info:
	.quad	z1_shf1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.634542095 UTC

.section .text
.align 8
z2_shf2_entry:
_ckDP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDQ
_ckDR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckDQ:
	jmp *-16(%r13)
	.size z2_shf2_entry, .-z2_shf2_entry


==================== Asm code ====================
2018-03-16 15:54:58.635128239 UTC

.section .data.rel.ro
.align 8
.align 1
z2_shf2_info:
	.quad	z2_shf2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.636421411 UTC

.section .text
.align 8
z3_shf3_entry:
_ckDW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckDX
_ckDY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckDX:
	jmp *-16(%r13)
	.size z3_shf3_entry, .-z3_shf3_entry


==================== Asm code ====================
2018-03-16 15:54:58.637098021 UTC

.section .data.rel.ro
.align 8
.align 1
z3_shf3_info:
	.quad	z3_shf3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.637968147 UTC

.section .text
.align 8
go_shf5_entry:
_ckEc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckEd
_ckEe:
	leaq block_ckE5_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ckE5
_ckE6:
	movq (%rbx),%rax
	jmp *(%rax)
_ckEd:
	jmp *-8(%r13)
	.size go_shf5_entry, .-go_shf5_entry


==================== Asm code ====================
2018-03-16 15:54:58.638661044 UTC

.section .data.rel.ro
.align 8
.align 1
go_shf5_info:
	.quad	go_shf5_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.639475287 UTC

.section .text
.align 8
_ckE5:
_ckE5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckE9
_ckEa:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckEn
_ckEm:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ckEn:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_ckE9:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ckE5, .-_ckE5


==================== Asm code ====================
2018-03-16 15:54:58.64020913 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckE5_info:
	.quad	_ckE5
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.641061568 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_entry:
_ckEp:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _ckEt
_ckEs:
	leaq k_sheU_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	movq %rsi,-200(%r12)
	movq %rdi,-192(%r12)
	movq %r8,-184(%r12)
	leaq k1_sheZ_info(%rip),%rax
	movq %rax,-176(%r12)
	leaq -224(%r12),%rax
	movq %rax,-160(%r12)
	leaq z_shf0_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	leaq z1_shf1_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %rsi,-112(%r12)
	leaq z2_shf2_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rdi,-88(%r12)
	leaq z3_shf3_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r8,-64(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	leaq -152(%r12),%rax
	movq %rax,-48(%r12)
	leaq -128(%r12),%rax
	movq %rax,-40(%r12)
	leaq -104(%r12),%rax
	movq %rax,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq go_shf5_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckEt:
	movq $232,904(%r13)
	leaq GHC.Base.$fMonoid(,,,)_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.642188212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.651895407 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_closure
.type GHC.Base.$fMonoid(,,,)_closure, @object
GHC.Base.$fMonoid(,,,)_closure:
	.quad	GHC.Base.$fMonoid(,,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.653078112 UTC

.section .text
.align 8
sat_shfi_entry:
_ckFJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckFK
_ckFL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmconcat_entry
_ckFK:
	jmp *-16(%r13)
	.size sat_shfi_entry, .-sat_shfi_entry


==================== Asm code ====================
2018-03-16 15:54:58.654090916 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfi_info:
	.quad	sat_shfi_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.655158479 UTC

.section .text
.align 8
sat_shfh_entry:
_ckFQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckFR
_ckFS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmappend_entry
_ckFR:
	jmp *-16(%r13)
	.size sat_shfh_entry, .-sat_shfh_entry


==================== Asm code ====================
2018-03-16 15:54:58.656119447 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfh_info:
	.quad	sat_shfh_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.657315508 UTC

.section .text
.align 8
sat_shfg_entry:
_ckFX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckFY
_ckFZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cmempty_entry
_ckFY:
	jmp *-16(%r13)
	.size sat_shfg_entry, .-sat_shfg_entry


==================== Asm code ====================
2018-03-16 15:54:58.65830435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfg_info:
	.quad	sat_shfg_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.659353747 UTC

.section .text
.align 8
sat_shff_entry:
_ckG4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckG5
_ckG6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 40(%rbx),%r8
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,,)_$cp1Monoid_entry
_ckG5:
	jmp *-16(%r13)
	.size sat_shff_entry, .-sat_shff_entry


==================== Asm code ====================
2018-03-16 15:54:58.660407371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shff_info:
	.quad	sat_shff_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.661816134 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,,)_entry
.type GHC.Base.$fMonoid(,,,)_entry, @object
GHC.Base.$fMonoid(,,,)_entry:
_ckG8:
	addq $232,%r12
	cmpq 856(%r13),%r12
	ja _ckGc
_ckGb:
	leaq sat_shfi_info(%rip),%rax
	movq %rax,-224(%r12)
	movq %r14,-208(%r12)
	movq %rsi,-200(%r12)
	movq %rdi,-192(%r12)
	movq %r8,-184(%r12)
	leaq sat_shfh_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-160(%r12)
	movq %rsi,-152(%r12)
	movq %rdi,-144(%r12)
	movq %r8,-136(%r12)
	leaq sat_shfg_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	movq %r8,-88(%r12)
	leaq sat_shff_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -80(%r12),%rax
	movq %rax,-24(%r12)
	leaq -128(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	leaq -224(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckGc:
	movq $232,904(%r13)
	leaq GHC.Base.$fMonoid(,,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,,)_entry, .-GHC.Base.$fMonoid(,,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.663141744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,,)_info
.type GHC.Base.$fMonoid(,,,)_info, @object
GHC.Base.$fMonoid(,,,)_info:
	.quad	GHC.Base.$fMonoid(,,,)_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.673112212 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$c<>_closure
.type GHC.Base.$fMonoid(,,)_$c<>_closure, @object
GHC.Base.$fMonoid(,,)_$c<>_closure:
	.quad	GHC.Base.$fMonoid(,,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.674770675 UTC

.section .text
.align 8
sat_shfy_entry:
_ckH3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckH4
_ckH5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckH4:
	jmp *-16(%r13)
	.size sat_shfy_entry, .-sat_shfy_entry


==================== Asm code ====================
2018-03-16 15:54:58.675736895 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfy_info:
	.quad	sat_shfy_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.676739819 UTC

.section .text
.align 8
sat_shfx_entry:
_ckHa:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckHb
_ckHc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckHb:
	jmp *-16(%r13)
	.size sat_shfx_entry, .-sat_shfx_entry


==================== Asm code ====================
2018-03-16 15:54:58.677833653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfx_info:
	.quad	sat_shfx_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.67894535 UTC

.section .text
.align 8
sat_shfw_entry:
_ckHh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckHi
_ckHj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckHi:
	jmp *-16(%r13)
	.size sat_shfw_entry, .-sat_shfw_entry


==================== Asm code ====================
2018-03-16 15:54:58.679872815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfw_info:
	.quad	sat_shfw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.681015948 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$c<>_entry
.type GHC.Base.$fMonoid(,,)_$c<>_entry, @object
GHC.Base.$fMonoid(,,)_$c<>_entry:
_ckHk:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ckHm
_ckHn:
	leaq block_ckGP_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckGP
_ckGQ:
	movq (%rbx),%rax
	jmp *(%rax)
_ckHm:
	leaq GHC.Base.$fMonoid(,,)_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$c<>_entry, .-GHC.Base.$fMonoid(,,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.681883163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$c<>_info
.type GHC.Base.$fMonoid(,,)_$c<>_info, @object
GHC.Base.$fMonoid(,,)_$c<>_info:
	.quad	GHC.Base.$fMonoid(,,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.682570876 UTC

.section .text
.align 8
_ckGP:
_ckGP:
	leaq block_ckGU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ckGU
_ckGV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckGP, .-_ckGP


==================== Asm code ====================
2018-03-16 15:54:58.683208316 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckGP_info:
	.quad	_ckGP
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.684051966 UTC

.section .text
.align 8
_ckGU:
_ckGU:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ckHr
_ckHq:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_shfy_info(%rip),%rdx
	movq %rdx,-144(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	leaq sat_shfx_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	leaq sat_shfw_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckHr:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckGU, .-_ckGU


==================== Asm code ====================
2018-03-16 15:54:58.684856124 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckGU_info:
	.quad	_ckGU
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.693438137 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$csconcat1_closure
.type GHC.Base.$w$csconcat1_closure, @object
GHC.Base.$w$csconcat1_closure:
	.quad	GHC.Base.$w$csconcat1_info


==================== Asm code ====================
2018-03-16 15:54:58.694174262 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat1_slow
.type GHC.Base.$w$csconcat1_slow, @object
GHC.Base.$w$csconcat1_slow:
_ckIm:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Base.$w$csconcat1_entry
	.size GHC.Base.$w$csconcat1_slow, .-GHC.Base.$w$csconcat1_slow


==================== Asm code ====================
2018-03-16 15:54:58.694961637 UTC

.section .text
.align 8
sat_shfY_entry:
_ckIM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckIN
_ckIO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckIN:
	jmp *-16(%r13)
	.size sat_shfY_entry, .-sat_shfY_entry


==================== Asm code ====================
2018-03-16 15:54:58.695650857 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfY_info:
	.quad	sat_shfY_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.696347556 UTC

.section .text
.align 8
sat_shfX_entry:
_ckIT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckIU
_ckIV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckIU:
	jmp *-16(%r13)
	.size sat_shfX_entry, .-sat_shfX_entry


==================== Asm code ====================
2018-03-16 15:54:58.697622384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfX_info:
	.quad	sat_shfX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.698415041 UTC

.section .text
.align 8
sat_shfW_entry:
_ckJ0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckJ1
_ckJ2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckJ1:
	jmp *-16(%r13)
	.size sat_shfW_entry, .-sat_shfW_entry


==================== Asm code ====================
2018-03-16 15:54:58.699119919 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shfW_info:
	.quad	sat_shfW_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.699885128 UTC

.section .text
.align 8
$wgo_shfG_entry:
_ckJ7:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _ckJ8
_ckJ9:
	leaq block_ckIv_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq %rbx,%rax
	movq 4(%rbx),%rcx
	movq 12(%rbx),%rdx
	movq 20(%rbx),%rbx
	movq %rbx,%r9
	movq %r8,%rbx
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %r9,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _ckIv
_ckIw:
	movq (%rbx),%rax
	jmp *(%rax)
_ckJ8:
	jmp *-8(%r13)
	.size $wgo_shfG_entry, .-$wgo_shfG_entry


==================== Asm code ====================
2018-03-16 15:54:58.700530638 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_shfG_info:
	.quad	$wgo_shfG_entry
	.quad	3
	.quad	8
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.701329786 UTC

.section .text
.align 8
_ckIv:
_ckIv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckJ4
_ckJ5:
	leaq block_ckIB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ckIB
_ckIC:
	movq (%rbx),%rax
	jmp *(%rax)
_ckJ4:
	movq 56(%rbp),%rsi
	movq 48(%rbp),%r14
	movq 40(%rbp),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ckIv, .-_ckIv


==================== Asm code ====================
2018-03-16 15:54:58.701986191 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckIv_info:
	.quad	_ckIv
	.quad	7
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.70261697 UTC

.section .text
.align 8
_ckIB:
_ckIB:
	movq 8(%rbp),%rax
	leaq block_ckIG_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq 40(%rbp),%rbx
	addq $8,%rbp
	jmp $wgo_shfG_entry
	.size _ckIB, .-_ckIB


==================== Asm code ====================
2018-03-16 15:54:58.703157132 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckIB_info:
	.quad	_ckIB
	.quad	8
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.703930734 UTC

.section .text
.align 8
_ckIG:
_ckIG:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ckJg
_ckJf:
	leaq sat_shfY_info(%rip),%rax
	movq %rax,-112(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 56(%rbp),%rax
	movq %rax,-88(%r12)
	movq %rsi,-80(%r12)
	leaq sat_shfX_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 48(%rbp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	leaq sat_shfW_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -112(%r12),%rsi
	leaq -72(%r12),%r14
	leaq -32(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckJg:
	movq $120,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckIG, .-_ckIG


==================== Asm code ====================
2018-03-16 15:54:58.704660599 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckIG_info:
	.quad	_ckIG
	.quad	519
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.705480488 UTC

.section .text
.align 8
.globl GHC.Base.$w$csconcat1_entry
.type GHC.Base.$w$csconcat1_entry, @object
GHC.Base.$w$csconcat1_entry:
_ckJj:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckJn
_ckJm:
	leaq $wgo_shfG_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq %r8,%rax
	movq 8(%rbp),%r8
	movq (%rbp),%rdi
	movq %r9,%rsi
	movq %rax,%r14
	leaq -20(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_shfG_entry
_ckJn:
	movq $32,904(%r13)
	leaq GHC.Base.$w$csconcat1_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Base.$w$csconcat1_entry, .-GHC.Base.$w$csconcat1_entry


==================== Asm code ====================
2018-03-16 15:54:58.706177851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$csconcat1_info
.type GHC.Base.$w$csconcat1_info, @object
GHC.Base.$w$csconcat1_info:
	.quad	GHC.Base.$w$csconcat1_entry
	.quad	0
	.quad	14
	.quad	30064771072
	.quad	0
	.quad	7
	.quad	GHC.Base.$w$csconcat1_slow


==================== Asm code ====================
2018-03-16 15:54:58.710596112 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$csconcat_closure
.type GHC.Base.$fSemigroup(,,)_$csconcat_closure, @object
GHC.Base.$fSemigroup(,,)_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup(,,)_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.711468663 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_$csconcat_entry
.type GHC.Base.$fSemigroup(,,)_$csconcat_entry, @object
GHC.Base.$fSemigroup(,,)_$csconcat_entry:
_ckKv:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckKG
_ckKH:
	leaq block_ckKs_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ckKs
_ckKt:
	movq (%rbx),%rax
	jmp *(%rax)
_ckKG:
	leaq GHC.Base.$fSemigroup(,,)_$csconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_$csconcat_entry, .-GHC.Base.$fSemigroup(,,)_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.712162787 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$csconcat_info
.type GHC.Base.$fSemigroup(,,)_$csconcat_info, @object
GHC.Base.$fSemigroup(,,)_$csconcat_info:
	.quad	GHC.Base.$fSemigroup(,,)_$csconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.712843234 UTC

.section .text
.align 8
_ckKs:
_ckKs:
	leaq block_ckKy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ckKy
_ckKz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckKs, .-_ckKs


==================== Asm code ====================
2018-03-16 15:54:58.713510864 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckKs_info:
	.quad	_ckKs
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.714176974 UTC

.section .text
.align 8
_ckKy:
_ckKy:
	movq 32(%rbp),%rax
	leaq block_ckKD_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq %rax,%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 23(%rbx),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.Base.$w$csconcat1_entry
	.size _ckKy, .-_ckKy


==================== Asm code ====================
2018-03-16 15:54:58.714756953 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckKy_info:
	.quad	_ckKy
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.71548175 UTC

.section .text
.align 8
_ckKD:
_ckKD:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckKM
_ckKL:
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckKM:
	movq $32,904(%r13)
	jmp *stg_gc_ppp@gotpcrel(%rip)
	.size _ckKD, .-_ckKD


==================== Asm code ====================
2018-03-16 15:54:58.716079681 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckKD_info:
	.quad	_ckKD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.72388164 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmappend_closure
.type GHC.Base.$fMonoid(,,)_$cmappend_closure, @object
GHC.Base.$fMonoid(,,)_$cmappend_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmappend_info


==================== Asm code ====================
2018-03-16 15:54:58.724674314 UTC

.section .text
.align 8
sat_shgw_entry:
_ckLw:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckLx
_ckLy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ckLu_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckLx:
	jmp *-16(%r13)
	.size sat_shgw_entry, .-sat_shgw_entry


==================== Asm code ====================
2018-03-16 15:54:58.725560585 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgw_info:
	.quad	sat_shgw_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.726151865 UTC

.section .text
.align 8
_ckLu:
_ckLu:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _ckLu, .-_ckLu


==================== Asm code ====================
2018-03-16 15:54:58.726722757 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckLu_info:
	.quad	_ckLu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.727477666 UTC

.section .text
.align 8
sat_shgu_entry:
_ckLI:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckLJ
_ckLK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ckLG_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckLJ:
	jmp *-16(%r13)
	.size sat_shgu_entry, .-sat_shgu_entry


==================== Asm code ====================
2018-03-16 15:54:58.728157774 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgu_info:
	.quad	sat_shgu_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.72879798 UTC

.section .text
.align 8
_ckLG:
_ckLG:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _ckLG, .-_ckLG


==================== Asm code ====================
2018-03-16 15:54:58.729370853 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckLG_info:
	.quad	_ckLG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.730130933 UTC

.section .text
.align 8
sat_shgs_entry:
_ckLU:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckLV
_ckLW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ckLS_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckLV:
	jmp *-16(%r13)
	.size sat_shgs_entry, .-sat_shgs_entry


==================== Asm code ====================
2018-03-16 15:54:58.73078907 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgs_info:
	.quad	sat_shgs_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.731398892 UTC

.section .text
.align 8
_ckLS:
_ckLS:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp GHC.Base.<>_entry
	.size _ckLS, .-_ckLS


==================== Asm code ====================
2018-03-16 15:54:58.731991083 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckLS_info:
	.quad	_ckLS
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.732763795 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmappend_entry
.type GHC.Base.$fMonoid(,,)_$cmappend_entry, @object
GHC.Base.$fMonoid(,,)_$cmappend_entry:
_ckM0:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ckM2
_ckM3:
	leaq block_ckLg_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckLg
_ckLh:
	movq (%rbx),%rax
	jmp *(%rax)
_ckM2:
	leaq GHC.Base.$fMonoid(,,)_$cmappend_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmappend_entry, .-GHC.Base.$fMonoid(,,)_$cmappend_entry


==================== Asm code ====================
2018-03-16 15:54:58.733489079 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmappend_info
.type GHC.Base.$fMonoid(,,)_$cmappend_info, @object
GHC.Base.$fMonoid(,,)_$cmappend_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmappend_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.734211986 UTC

.section .text
.align 8
_ckLg:
_ckLg:
	leaq block_ckLl_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ckLl
_ckLm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckLg, .-_ckLg


==================== Asm code ====================
2018-03-16 15:54:58.734833812 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckLg_info:
	.quad	_ckLg
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.736262891 UTC

.section .text
.align 8
_ckLl:
_ckLl:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ckM7
_ckM6:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_shgw_info(%rip),%rdx
	movq %rdx,-144(%r12)
	movq 40(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	leaq sat_shgu_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	leaq sat_shgs_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckM7:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckLl, .-_ckLl


==================== Asm code ====================
2018-03-16 15:54:58.737168329 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckLl_info:
	.quad	_ckLl
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.748994964 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmconcat_closure
.type GHC.Base.$fMonoid(,,)_$cmconcat_closure, @object
GHC.Base.$fMonoid(,,)_$cmconcat_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cmconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.74991369 UTC

.section .text
.align 8
$dSemigroup_shgB_entry:
_ckNl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNm
_ckNn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckNm:
	jmp *-16(%r13)
	.size $dSemigroup_shgB_entry, .-$dSemigroup_shgB_entry


==================== Asm code ====================
2018-03-16 15:54:58.750524625 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup_shgB_info:
	.quad	$dSemigroup_shgB_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.751201017 UTC

.section .text
.align 8
$dSemigroup1_shgC_entry:
_ckNs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNt
_ckNu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckNt:
	jmp *-16(%r13)
	.size $dSemigroup1_shgC_entry, .-$dSemigroup1_shgC_entry


==================== Asm code ====================
2018-03-16 15:54:58.7517935 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup1_shgC_info:
	.quad	$dSemigroup1_shgC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.752402461 UTC

.section .text
.align 8
$dSemigroup2_shgD_entry:
_ckNz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNA
_ckNB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckNA:
	jmp *-16(%r13)
	.size $dSemigroup2_shgD_entry, .-$dSemigroup2_shgD_entry


==================== Asm code ====================
2018-03-16 15:54:58.753024501 UTC

.section .data.rel.ro
.align 8
.align 1
$dSemigroup2_shgD_info:
	.quad	$dSemigroup2_shgD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.753944671 UTC

.section .text
.align 8
z_shgE_entry:
_ckNG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNH
_ckNI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckNH:
	jmp *-16(%r13)
	.size z_shgE_entry, .-z_shgE_entry


==================== Asm code ====================
2018-03-16 15:54:58.754548453 UTC

.section .data.rel.ro
.align 8
.align 1
z_shgE_info:
	.quad	z_shgE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.755232501 UTC

.section .text
.align 8
z1_shgF_entry:
_ckNN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNO
_ckNP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckNO:
	jmp *-16(%r13)
	.size z1_shgF_entry, .-z1_shgF_entry


==================== Asm code ====================
2018-03-16 15:54:58.755891774 UTC

.section .data.rel.ro
.align 8
.align 1
z1_shgF_info:
	.quad	z1_shgF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.756563483 UTC

.section .text
.align 8
z2_shgG_entry:
_ckNU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckNV
_ckNW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_ckNV:
	jmp *-16(%r13)
	.size z2_shgG_entry, .-z2_shgG_entry


==================== Asm code ====================
2018-03-16 15:54:58.757192275 UTC

.section .data.rel.ro
.align 8
.align 1
z2_shgG_info:
	.quad	z2_shgG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.757928648 UTC

.section .text
.align 8
sat_shgX_entry:
_ckOm:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckOn
_ckOo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckOn:
	jmp *-16(%r13)
	.size sat_shgX_entry, .-sat_shgX_entry


==================== Asm code ====================
2018-03-16 15:54:58.758575875 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgX_info:
	.quad	sat_shgX_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.759248556 UTC

.section .text
.align 8
sat_shgW_entry:
_ckOt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckOu
_ckOv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckOu:
	jmp *-16(%r13)
	.size sat_shgW_entry, .-sat_shgW_entry


==================== Asm code ====================
2018-03-16 15:54:58.759870693 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgW_info:
	.quad	sat_shgW_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.76059787 UTC

.section .text
.align 8
sat_shgV_entry:
_ckOA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckOB
_ckOC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckOB:
	jmp *-16(%r13)
	.size sat_shgV_entry, .-sat_shgV_entry


==================== Asm code ====================
2018-03-16 15:54:58.761276849 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shgV_info:
	.quad	sat_shgV_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.762087299 UTC

.section .text
.align 8
go_shgI_entry:
_ckOH:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _ckOI
_ckOJ:
	leaq block_ckO3_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _ckO3
_ckO4:
	movq (%rbx),%rax
	jmp *(%rax)
_ckOI:
	jmp *-8(%r13)
	.size go_shgI_entry, .-go_shgI_entry


==================== Asm code ====================
2018-03-16 15:54:58.76276275 UTC

.section .data.rel.ro
.align 8
.align 1
go_shgI_info:
	.quad	go_shgI_entry
	.quad	4
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.763456738 UTC

.section .text
.align 8
_ckO3:
_ckO3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ckOE
_ckOF:
	leaq block_ckO9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _ckO9
_ckOa:
	movq (%rbx),%rax
	jmp *(%rax)
_ckOE:
	movq 32(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ckO3, .-_ckO3


==================== Asm code ====================
2018-03-16 15:54:58.764100986 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckO3_info:
	.quad	_ckO3
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.7647486 UTC

.section .text
.align 8
_ckO9:
_ckO9:
	leaq block_ckOe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 40(%rbp),%rbx
	movq %rdx,(%rbp)
	movq %rcx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp go_shgI_entry
	.size _ckO9, .-_ckO9


==================== Asm code ====================
2018-03-16 15:54:58.765403318 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckO9_info:
	.quad	_ckO9
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.766262519 UTC

.section .text
.align 8
_ckOe:
_ckOe:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ckOR
_ckOQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_shgX_info(%rip),%rdx
	movq %rdx,-144(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-128(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,-120(%r12)
	movq %rbx,-112(%r12)
	leaq sat_shgW_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	leaq sat_shgV_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -104(%r12),%rax
	movq %rax,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckOR:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckOe, .-_ckOe


==================== Asm code ====================
2018-03-16 15:54:58.76710062 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckOe_info:
	.quad	_ckOe
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.767943163 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cmconcat_entry
.type GHC.Base.$fMonoid(,,)_$cmconcat_entry, @object
GHC.Base.$fMonoid(,,)_$cmconcat_entry:
_ckOU:
	addq $216,%r12
	cmpq 856(%r13),%r12
	ja _ckOY
_ckOX:
	leaq $dSemigroup_shgB_info(%rip),%rax
	movq %rax,-208(%r12)
	movq %r14,-192(%r12)
	leaq $dSemigroup1_shgC_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %rsi,-168(%r12)
	leaq $dSemigroup2_shgD_info(%rip),%rax
	movq %rax,-160(%r12)
	movq %rdi,-144(%r12)
	leaq z_shgE_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq z1_shgF_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %rsi,-96(%r12)
	leaq z2_shgG_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rdi,-72(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	leaq -136(%r12),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	leaq -88(%r12),%rax
	movq %rax,-40(%r12)
	leaq go_shgI_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -208(%r12),%rax
	movq %rax,-24(%r12)
	leaq -184(%r12),%rax
	movq %rax,-16(%r12)
	leaq -160(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	movq %r8,%r14
	leaq -31(%r12),%rbx
	jmp go_shgI_entry
_ckOY:
	movq $216,904(%r13)
	leaq GHC.Base.$fMonoid(,,)_$cmconcat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cmconcat_entry, .-GHC.Base.$fMonoid(,,)_$cmconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.768765667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cmconcat_info
.type GHC.Base.$fMonoid(,,)_$cmconcat_info, @object
GHC.Base.$fMonoid(,,)_$cmconcat_info:
	.quad	GHC.Base.$fMonoid(,,)_$cmconcat_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.774748206 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.775646033 UTC

.section .text
.align 8
sat_shha_entry:
_ckQW:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckQX
_ckQY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckQX:
	jmp *-16(%r13)
	.size sat_shha_entry, .-sat_shha_entry


==================== Asm code ====================
2018-03-16 15:54:58.776286128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shha_info:
	.quad	sat_shha_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.776998201 UTC

.section .text
.align 8
sat_shh9_entry:
_ckR3:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckR4
_ckR5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckR4:
	jmp *-16(%r13)
	.size sat_shh9_entry, .-sat_shh9_entry


==================== Asm code ====================
2018-03-16 15:54:58.777869532 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shh9_info:
	.quad	sat_shh9_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.778553542 UTC

.section .text
.align 8
sat_shh8_entry:
_ckRa:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckRb
_ckRc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckRb:
	jmp *-16(%r13)
	.size sat_shh8_entry, .-sat_shh8_entry


==================== Asm code ====================
2018-03-16 15:54:58.779211021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shh8_info:
	.quad	sat_shh8_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.780522002 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,,)_$cstimes_entry:
_ckRd:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckRf
_ckRg:
	leaq block_ckQN_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq (%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckQN
_ckQO:
	movq (%rbx),%rax
	jmp *(%rax)
_ckRf:
	leaq GHC.Base.$fSemigroup(,,)_$cstimes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.781331548 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_$cstimes_info
.type GHC.Base.$fSemigroup(,,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:58.782260998 UTC

.section .text
.align 8
_ckQN:
_ckQN:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _ckRj
_ckRi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_shha_info(%rip),%rdx
	movq %rdx,-168(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-152(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-144(%r12)
	movq 32(%rbp),%rsi
	movq %rsi,-136(%r12)
	movq %rbx,-128(%r12)
	leaq sat_shh9_info(%rip),%rbx
	movq %rbx,-120(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq %rdx,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rcx,-80(%r12)
	leaq sat_shh8_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rdx,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	leaq -120(%r12),%rax
	movq %rax,-8(%r12)
	leaq -168(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckRj:
	movq $176,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckQN, .-_ckQN


==================== Asm code ====================
2018-03-16 15:54:58.783030043 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckQN_info:
	.quad	_ckQN
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.787666008 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_closure
.type GHC.Base.$fSemigroup(,,)_closure, @object
GHC.Base.$fSemigroup(,,)_closure:
	.quad	GHC.Base.$fSemigroup(,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.788494087 UTC

.section .text
.align 8
sat_shhg_entry:
_ckSg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ckSh
_ckSi:
	movq %rsi,%r9
	movq %r14,%r8
	movq %rdi,%rax
	movq 21(%rbx),%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$fSemigroup(,,)_$cstimes_entry
_ckSh:
	jmp *-8(%r13)
	.size sat_shhg_entry, .-sat_shhg_entry


==================== Asm code ====================
2018-03-16 15:54:58.78910908 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhg_info:
	.quad	sat_shhg_entry
	.quad	3
	.quad	8
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.789795205 UTC

.section .text
.align 8
sat_shhf_entry:
_ckSo:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,,)_$csconcat_entry
	.size sat_shhf_entry, .-sat_shhf_entry


==================== Asm code ====================
2018-03-16 15:54:58.790363304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhf_info:
	.quad	sat_shhf_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.79103596 UTC

.section .text
.align 8
sat_shhe_entry:
_ckSw:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$c<>_entry
	.size sat_shhe_entry, .-sat_shhe_entry


==================== Asm code ====================
2018-03-16 15:54:58.791618164 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhe_info:
	.quad	sat_shhe_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.792417175 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,,)_entry
.type GHC.Base.$fSemigroup(,,)_entry, @object
GHC.Base.$fSemigroup(,,)_entry:
_ckSA:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ckSE
_ckSD:
	leaq sat_shhg_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	movq %rdi,-96(%r12)
	leaq sat_shhf_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	movq %rdi,-64(%r12)
	leaq sat_shhe_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -54(%r12),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -117(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckSE:
	movq $128,904(%r13)
	leaq GHC.Base.$fSemigroup(,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,,)_entry, .-GHC.Base.$fSemigroup(,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.793153684 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,,)_info
.type GHC.Base.$fSemigroup(,,)_info, @object
GHC.Base.$fSemigroup(,,)_info:
	.quad	GHC.Base.$fSemigroup(,,)_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.797607175 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.798319779 UTC

.section .text
.align 8
sat_shhm_entry:
_ckT9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckTa
_ckTb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckTa:
	jmp *-16(%r13)
	.size sat_shhm_entry, .-sat_shhm_entry


==================== Asm code ====================
2018-03-16 15:54:58.798940262 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhm_info:
	.quad	sat_shhm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.799577316 UTC

.section .text
.align 8
sat_shhl_entry:
_ckTg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckTh
_ckTi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckTh:
	jmp *-16(%r13)
	.size sat_shhl_entry, .-sat_shhl_entry


==================== Asm code ====================
2018-03-16 15:54:58.800127188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhl_info:
	.quad	sat_shhl_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.800750645 UTC

.section .text
.align 8
sat_shhk_entry:
_ckTn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckTo
_ckTp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckTo:
	jmp *-16(%r13)
	.size sat_shhk_entry, .-sat_shhk_entry


==================== Asm code ====================
2018-03-16 15:54:58.801347565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhk_info:
	.quad	sat_shhk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.802107431 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_entry:
_ckTq:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _ckTu
_ckTt:
	leaq sat_shhm_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %rdi,-48(%r12)
	leaq sat_shhl_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_shhk_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -64(%r12),%rdi
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(,,)_entry
_ckTu:
	movq $72,904(%r13)
	leaq GHC.Base.$fMonoid(,,)_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.802774641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.807977908 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_closure
.type GHC.Base.$fMonoid(,,)_closure, @object
GHC.Base.$fMonoid(,,)_closure:
	.quad	GHC.Base.$fMonoid(,,)_info


==================== Asm code ====================
2018-03-16 15:54:58.808673347 UTC

.section .text
.align 8
sat_shht_entry:
_ckU0:
	movq %r14,%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$cmconcat_entry
	.size sat_shht_entry, .-sat_shht_entry


==================== Asm code ====================
2018-03-16 15:54:58.809291245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shht_info:
	.quad	sat_shht_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.809908697 UTC

.section .text
.align 8
sat_shhs_entry:
_ckU8:
	movq %rsi,%r9
	movq %r14,%r8
	movq 22(%rbx),%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,,)_$cmappend_entry
	.size sat_shhs_entry, .-sat_shhs_entry


==================== Asm code ====================
2018-03-16 15:54:58.810490152 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhs_info:
	.quad	sat_shhs_entry
	.quad	3
	.quad	8
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.811241769 UTC

.section .text
.align 8
sat_shhr_entry:
_ckUf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckUg
_ckUh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,)_$cmempty_entry
_ckUg:
	jmp *-16(%r13)
	.size sat_shhr_entry, .-sat_shhr_entry


==================== Asm code ====================
2018-03-16 15:54:58.811905912 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhr_info:
	.quad	sat_shhr_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.81257015 UTC

.section .text
.align 8
sat_shhq_entry:
_ckUm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckUn
_ckUo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 32(%rbx),%rdi
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,,)_$cp1Monoid_entry
_ckUn:
	jmp *-16(%r13)
	.size sat_shhq_entry, .-sat_shhq_entry


==================== Asm code ====================
2018-03-16 15:54:58.813129663 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhq_info:
	.quad	sat_shhq_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.814582578 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,,)_entry
.type GHC.Base.$fMonoid(,,)_entry, @object
GHC.Base.$fMonoid(,,)_entry:
_ckUq:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _ckUu
_ckUt:
	leaq sat_shht_info(%rip),%rax
	movq %rax,-176(%r12)
	movq %r14,-168(%r12)
	movq %rsi,-160(%r12)
	movq %rdi,-152(%r12)
	leaq sat_shhs_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	movq %rdi,-120(%r12)
	leaq sat_shhr_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-96(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	leaq sat_shhq_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	leaq -112(%r12),%rax
	movq %rax,-16(%r12)
	leaq -142(%r12),%rax
	movq %rax,-8(%r12)
	leaq -175(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckUu:
	movq $184,904(%r13)
	leaq GHC.Base.$fMonoid(,,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,,)_entry, .-GHC.Base.$fMonoid(,,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.815342206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,,)_info
.type GHC.Base.$fMonoid(,,)_info, @object
GHC.Base.$fMonoid(,,)_info:
	.quad	GHC.Base.$fMonoid(,,)_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.82071194 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$c<>_closure
.type GHC.Base.$fSemigroup(,)_$c<>_closure, @object
GHC.Base.$fSemigroup(,)_$c<>_closure:
	.quad	GHC.Base.$fSemigroup(,)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.821616734 UTC

.section .text
.align 8
sat_shhF_entry:
_ckVh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckVi
_ckVj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckVi:
	jmp *-16(%r13)
	.size sat_shhF_entry, .-sat_shhF_entry


==================== Asm code ====================
2018-03-16 15:54:58.822802452 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhF_info:
	.quad	sat_shhF_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.823689012 UTC

.section .text
.align 8
sat_shhE_entry:
_ckVo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckVp
_ckVq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Base.<>_entry
_ckVp:
	jmp *-16(%r13)
	.size sat_shhE_entry, .-sat_shhE_entry


==================== Asm code ====================
2018-03-16 15:54:58.824379514 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhE_info:
	.quad	sat_shhE_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.825158323 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$c<>_entry
.type GHC.Base.$fSemigroup(,)_$c<>_entry, @object
GHC.Base.$fSemigroup(,)_$c<>_entry:
_ckVr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckVt
_ckVu:
	leaq block_ckV3_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _ckV3
_ckV4:
	movq (%rbx),%rax
	jmp *(%rax)
_ckVt:
	leaq GHC.Base.$fSemigroup(,)_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$c<>_entry, .-GHC.Base.$fSemigroup(,)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.82586719 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$c<>_info
.type GHC.Base.$fSemigroup(,)_$c<>_info, @object
GHC.Base.$fSemigroup(,)_$c<>_info:
	.quad	GHC.Base.$fSemigroup(,)_$c<>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.826618013 UTC

.section .text
.align 8
_ckV3:
_ckV3:
	leaq block_ckV8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ckV8
_ckV9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ckV3, .-_ckV3


==================== Asm code ====================
2018-03-16 15:54:58.827244972 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckV3_info:
	.quad	_ckV3
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.828029688 UTC

.section .text
.align 8
_ckV8:
_ckV8:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ckVy
_ckVx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_shhF_info(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-72(%r12)
	movq %rbx,-64(%r12)
	leaq sat_shhE_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckVy:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckV8, .-_ckV8


==================== Asm code ====================
2018-03-16 15:54:58.828756336 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckV8_info:
	.quad	_ckV8
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.834062977 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$cstimes_closure
.type GHC.Base.$fSemigroup(,)_$cstimes_closure, @object
GHC.Base.$fSemigroup(,)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(,)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.834952685 UTC

.section .text
.align 8
sat_shhP_entry:
_ckWt:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckWu
_ckWv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckWu:
	jmp *-16(%r13)
	.size sat_shhP_entry, .-sat_shhP_entry


==================== Asm code ====================
2018-03-16 15:54:58.83555405 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhP_info:
	.quad	sat_shhP_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.836240386 UTC

.section .text
.align 8
sat_shhO_entry:
_ckWA:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _ckWB
_ckWC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.stimes_entry
_ckWB:
	jmp *-16(%r13)
	.size sat_shhO_entry, .-sat_shhO_entry


==================== Asm code ====================
2018-03-16 15:54:58.836914411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhO_info:
	.quad	sat_shhO_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:58.837763776 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_$cstimes_entry
.type GHC.Base.$fSemigroup(,)_$cstimes_entry, @object
GHC.Base.$fSemigroup(,)_$cstimes_entry:
_ckWD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckWF
_ckWG:
	leaq block_ckWk_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _ckWk
_ckWl:
	movq (%rbx),%rax
	jmp *(%rax)
_ckWF:
	leaq GHC.Base.$fSemigroup(,)_$cstimes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_$cstimes_entry, .-GHC.Base.$fSemigroup(,)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.838417365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_$cstimes_info
.type GHC.Base.$fSemigroup(,)_$cstimes_info, @object
GHC.Base.$fSemigroup(,)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(,)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.839264653 UTC

.section .text
.align 8
_ckWk:
_ckWk:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _ckWJ
_ckWI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_shhP_info(%rip),%rcx
	movq %rcx,-112(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-96(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-88(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-80(%r12)
	movq %rbx,-72(%r12)
	leaq sat_shhO_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -112(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckWJ:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ckWk, .-_ckWk


==================== Asm code ====================
2018-03-16 15:54:58.840008842 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckWk_info:
	.quad	_ckWk
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.844197588 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_closure
.type GHC.Base.$fSemigroup(,)_closure, @object
GHC.Base.$fSemigroup(,)_closure:
	.quad	GHC.Base.$fSemigroup(,)_info


==================== Asm code ====================
2018-03-16 15:54:58.844875416 UTC

.section .text
.align 8
sat_shhU_entry:
_ckXu:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movq 13(%rbx),%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$cstimes_entry
	.size sat_shhU_entry, .-sat_shhU_entry


==================== Asm code ====================
2018-03-16 15:54:58.845492235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhU_info:
	.quad	sat_shhU_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.84609852 UTC

.section .text
.align 8
sat_shhT_entry:
_ckXC:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$csconcat_entry
	.size sat_shhT_entry, .-sat_shhT_entry


==================== Asm code ====================
2018-03-16 15:54:58.846603571 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhT_info:
	.quad	sat_shhT_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.847253805 UTC

.section .text
.align 8
sat_shhS_entry:
_ckXK:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fSemigroup(,)_$c<>_entry
	.size sat_shhS_entry, .-sat_shhS_entry


==================== Asm code ====================
2018-03-16 15:54:58.847788987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhS_info:
	.quad	sat_shhS_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.84864466 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(,)_entry
.type GHC.Base.$fSemigroup(,)_entry, @object
GHC.Base.$fSemigroup(,)_entry:
_ckXO:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _ckXS
_ckXR:
	leaq sat_shhU_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-88(%r12)
	movq %rsi,-80(%r12)
	leaq sat_shhT_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	movq %rsi,-56(%r12)
	leaq sat_shhS_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -46(%r12),%rax
	movq %rax,-16(%r12)
	leaq -71(%r12),%rax
	movq %rax,-8(%r12)
	leaq -93(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckXS:
	movq $104,904(%r13)
	leaq GHC.Base.$fSemigroup(,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(,)_entry, .-GHC.Base.$fSemigroup(,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.84941937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(,)_info
.type GHC.Base.$fSemigroup(,)_info, @object
GHC.Base.$fSemigroup(,)_info:
	.quad	GHC.Base.$fSemigroup(,)_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.853033244 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(,)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(,)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.854502471 UTC

.section .text
.align 8
sat_shhY_entry:
_ckYm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckYn
_ckYo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckYn:
	jmp *-16(%r13)
	.size sat_shhY_entry, .-sat_shhY_entry


==================== Asm code ====================
2018-03-16 15:54:58.855119959 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhY_info:
	.quad	sat_shhY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.855809666 UTC

.section .text
.align 8
sat_shhX_entry:
_ckYt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckYu
_ckYv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_ckYu:
	jmp *-16(%r13)
	.size sat_shhX_entry, .-sat_shhX_entry


==================== Asm code ====================
2018-03-16 15:54:58.856467571 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shhX_info:
	.quad	sat_shhX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.857180209 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(,)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_entry:
_ckYw:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ckYA
_ckYz:
	leaq sat_shhY_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_shhX_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(,)_entry
_ckYA:
	movq $48,904(%r13)
	leaq GHC.Base.$fMonoid(,)_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(,)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.857844384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_$cp1Monoid_info
.type GHC.Base.$fMonoid(,)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(,)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(,)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.862627191 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_closure
.type GHC.Base.$fMonoid(,)_closure, @object
GHC.Base.$fMonoid(,)_closure:
	.quad	GHC.Base.$fMonoid(,)_info


==================== Asm code ====================
2018-03-16 15:54:58.863923221 UTC

.section .text
.align 8
sat_shi4_entry:
_ckZ0:
	movq %r14,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fMonoid(,)_$cmconcat_entry
	.size sat_shi4_entry, .-sat_shi4_entry


==================== Asm code ====================
2018-03-16 15:54:58.864550879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shi4_info:
	.quad	sat_shi4_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.865367072 UTC

.section .text
.align 8
sat_shi3_entry:
_ckZ8:
	movq %rsi,%r8
	movq %r14,%rdi
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(,)_$cmappend_entry
	.size sat_shi3_entry, .-sat_shi3_entry


==================== Asm code ====================
2018-03-16 15:54:58.865938743 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shi3_info:
	.quad	sat_shi3_entry
	.quad	2
	.quad	11
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.866700017 UTC

.section .text
.align 8
sat_shi2_entry:
_ckZf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckZg
_ckZh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,)_$cmempty_entry
_ckZg:
	jmp *-16(%r13)
	.size sat_shi2_entry, .-sat_shi2_entry


==================== Asm code ====================
2018-03-16 15:54:58.867338845 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shi2_info:
	.quad	sat_shi2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:58.868004743 UTC

.section .text
.align 8
sat_shi1_entry:
_ckZm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckZn
_ckZo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(,)_$cp1Monoid_entry
_ckZn:
	jmp *-16(%r13)
	.size sat_shi1_entry, .-sat_shi1_entry


==================== Asm code ====================
2018-03-16 15:54:58.868628717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shi1_info:
	.quad	sat_shi1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:58.869498712 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(,)_entry
.type GHC.Base.$fMonoid(,)_entry, @object
GHC.Base.$fMonoid(,)_entry:
_ckZq:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _ckZu
_ckZt:
	leaq sat_shi4_info(%rip),%rax
	movq %rax,-144(%r12)
	movq %r14,-136(%r12)
	movq %rsi,-128(%r12)
	leaq sat_shi3_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %r14,-112(%r12)
	movq %rsi,-104(%r12)
	leaq sat_shi2_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	movq %rsi,-72(%r12)
	leaq sat_shi1_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	movq %rsi,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq -96(%r12),%rax
	movq %rax,-16(%r12)
	leaq -118(%r12),%rax
	movq %rax,-8(%r12)
	leaq -143(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ckZu:
	movq $152,904(%r13)
	leaq GHC.Base.$fMonoid(,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(,)_entry, .-GHC.Base.$fMonoid(,)_entry


==================== Asm code ====================
2018-03-16 15:54:58.870265384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(,)_info
.type GHC.Base.$fMonoid(,)_info, @object
GHC.Base.$fMonoid(,)_info:
	.quad	GHC.Base.$fMonoid(,)_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.872428764 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$c<>_closure
.type GHC.Base.$fMonoid()_$c<>_closure, @object
GHC.Base.$fMonoid()_$c<>_closure:
	.quad	GHC.Base.$fMonoid()_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.873098331 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid()_$c<>_entry
.type GHC.Base.$fMonoid()_$c<>_entry, @object
GHC.Base.$fMonoid()_$c<>_entry:
_cl03:
	movq ()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fMonoid()_$c<>_entry, .-GHC.Base.$fMonoid()_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.873904836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid()_$c<>_info
.type GHC.Base.$fMonoid()_$c<>_info, @object
GHC.Base.$fMonoid()_$c<>_info:
	.quad	GHC.Base.$fMonoid()_$c<>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.875890134 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$csconcat_closure
.type GHC.Base.$fSemigroup()_$csconcat_closure, @object
GHC.Base.$fSemigroup()_$csconcat_closure:
	.quad	GHC.Base.$fSemigroup()_$csconcat_info


==================== Asm code ====================
2018-03-16 15:54:58.876506743 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup()_$csconcat_entry
.type GHC.Base.$fSemigroup()_$csconcat_entry, @object
GHC.Base.$fSemigroup()_$csconcat_entry:
_cl0g:
	movq ()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fSemigroup()_$csconcat_entry, .-GHC.Base.$fSemigroup()_$csconcat_entry


==================== Asm code ====================
2018-03-16 15:54:58.877061418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$csconcat_info
.type GHC.Base.$fSemigroup()_$csconcat_info, @object
GHC.Base.$fSemigroup()_$csconcat_info:
	.quad	GHC.Base.$fSemigroup()_$csconcat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.879134197 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$cstimes_closure
.type GHC.Base.$fSemigroup()_$cstimes_closure, @object
GHC.Base.$fSemigroup()_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup()_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.879809583 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup()_$cstimes_entry
.type GHC.Base.$fSemigroup()_$cstimes_entry, @object
GHC.Base.$fSemigroup()_$cstimes_entry:
_cl0t:
	movq ()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.$fSemigroup()_$cstimes_entry, .-GHC.Base.$fSemigroup()_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.880389462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_$cstimes_info
.type GHC.Base.$fSemigroup()_$cstimes_info, @object
GHC.Base.$fSemigroup()_$cstimes_info:
	.quad	GHC.Base.$fSemigroup()_$cstimes_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.882206597 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup()_closure
.type GHC.Base.$fSemigroup()_closure, @object
GHC.Base.$fSemigroup()_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.$fMonoid()_$c<>_closure+2
	.quad	GHC.Base.$fSemigroup()_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroup()_$cstimes_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:58.883954746 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid()_closure
.type GHC.Base.$fMonoid()_closure, @object
GHC.Base.$fMonoid()_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroup()_closure+1
	.quad	GHC.Tuple.()_closure+1
	.quad	GHC.Base.$fMonoid()_$c<>_closure+2
	.quad	GHC.Base.$fMonoid()_$cmconcat_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:58.887702569 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$c<>_closure
.type GHC.Base.$fSemigroup(->)_$c<>_closure, @object
GHC.Base.$fSemigroup(->)_$c<>_closure:
	.quad	GHC.Base.$fSemigroup(->)_$c<>_info


==================== Asm code ====================
2018-03-16 15:54:58.888661872 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$c<>_entry
.type GHC.Base.$fSemigroup(->)_$c<>_entry, @object
GHC.Base.$fSemigroup(->)_$c<>_entry:
_cl0K:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cl0L
_cl0M:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cl0O
_cl0N:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<>_entry
_cl0O:
	movq $64,904(%r13)
_cl0L:
	leaq GHC.Base.$fSemigroup(->)_$c<>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$c<>_entry, .-GHC.Base.$fSemigroup(->)_$c<>_entry


==================== Asm code ====================
2018-03-16 15:54:58.889373149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$c<>_info
.type GHC.Base.$fSemigroup(->)_$c<>_info, @object
GHC.Base.$fSemigroup(->)_$c<>_info:
	.quad	GHC.Base.$fSemigroup(->)_$c<>_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.89215762 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$cstimes_closure
.type GHC.Base.$fSemigroup(->)_$cstimes_closure, @object
GHC.Base.$fSemigroup(->)_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup(->)_$cstimes_info


==================== Asm code ====================
2018-03-16 15:54:58.893046288 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_$cstimes_entry
.type GHC.Base.$fSemigroup(->)_$cstimes_entry, @object
GHC.Base.$fSemigroup(->)_$cstimes_entry:
_cl14:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cl15
_cl16:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cl18
_cl17:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.stimes_entry
_cl18:
	movq $32,904(%r13)
_cl15:
	leaq GHC.Base.$fSemigroup(->)_$cstimes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_$cstimes_entry, .-GHC.Base.$fSemigroup(->)_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.893794882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_$cstimes_info
.type GHC.Base.$fSemigroup(->)_$cstimes_info, @object
GHC.Base.$fSemigroup(->)_$cstimes_info:
	.quad	GHC.Base.$fSemigroup(->)_$cstimes_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:58.898686016 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_closure
.type GHC.Base.$fSemigroup(->)_closure, @object
GHC.Base.$fSemigroup(->)_closure:
	.quad	GHC.Base.$fSemigroup(->)_info


==================== Asm code ====================
2018-03-16 15:54:58.899404853 UTC

.section .text
.align 8
sat_shiq_entry:
_cl1q:
	movq %r8,%r9
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 4(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$cstimes_entry
	.size sat_shiq_entry, .-sat_shiq_entry


==================== Asm code ====================
2018-03-16 15:54:58.899988518 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiq_info:
	.quad	sat_shiq_entry
	.quad	1
	.quad	9
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:58.900521898 UTC

.section .text
.align 8
sat_ship_entry:
_cl1y:
	movq %r14,%rsi
	movq 7(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$csconcat_entry
	.size sat_ship_entry, .-sat_ship_entry


==================== Asm code ====================
2018-03-16 15:54:58.901068834 UTC

.section .data.rel.ro
.align 8
.align 1
sat_ship_info:
	.quad	sat_ship_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.901739558 UTC

.section .text
.align 8
sat_shio_entry:
_cl1G:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fSemigroup(->)_$c<>_entry
	.size sat_shio_entry, .-sat_shio_entry


==================== Asm code ====================
2018-03-16 15:54:58.902320316 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shio_info:
	.quad	sat_shio_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.90312489 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup(->)_entry
.type GHC.Base.$fSemigroup(->)_entry, @object
GHC.Base.$fSemigroup(->)_entry:
_cl1K:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cl1O
_cl1N:
	leaq sat_shiq_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-64(%r12)
	leaq sat_ship_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_shio_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	leaq -37(%r12),%rax
	movq %rax,-16(%r12)
	leaq -55(%r12),%rax
	movq %rax,-8(%r12)
	leaq -68(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cl1O:
	movq $80,904(%r13)
	leaq GHC.Base.$fSemigroup(->)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fSemigroup(->)_entry, .-GHC.Base.$fSemigroup(->)_entry


==================== Asm code ====================
2018-03-16 15:54:58.903789663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup(->)_info
.type GHC.Base.$fSemigroup(->)_info, @object
GHC.Base.$fSemigroup(->)_info:
	.quad	GHC.Base.$fSemigroup(->)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.906881149 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_closure
.type GHC.Base.$fMonoid(->)_$cp1Monoid_closure, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_closure:
	.quad	GHC.Base.$fMonoid(->)_$cp1Monoid_info


==================== Asm code ====================
2018-03-16 15:54:58.907612171 UTC

.section .text
.align 8
sat_shis_entry:
_cl2i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cl2j
_cl2k:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$p1Monoid_entry
_cl2j:
	jmp *-16(%r13)
	.size sat_shis_entry, .-sat_shis_entry


==================== Asm code ====================
2018-03-16 15:54:58.908227008 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shis_info:
	.quad	sat_shis_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.908902435 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_entry
.type GHC.Base.$fMonoid(->)_$cp1Monoid_entry, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_entry:
_cl2l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl2p
_cl2o:
	leaq sat_shis_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp GHC.Base.$fSemigroup(->)_entry
_cl2p:
	movq $24,904(%r13)
	leaq GHC.Base.$fMonoid(->)_$cp1Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_$cp1Monoid_entry, .-GHC.Base.$fMonoid(->)_$cp1Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:58.909567115 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_$cp1Monoid_info
.type GHC.Base.$fMonoid(->)_$cp1Monoid_info, @object
GHC.Base.$fMonoid(->)_$cp1Monoid_info:
	.quad	GHC.Base.$fMonoid(->)_$cp1Monoid_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.914388392 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_closure
.type GHC.Base.$fMonoid(->)_closure, @object
GHC.Base.$fMonoid(->)_closure:
	.quad	GHC.Base.$fMonoid(->)_info


==================== Asm code ====================
2018-03-16 15:54:58.915133063 UTC

.section .text
.align 8
lvl3_shiu_entry:
_cl2I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cl2J
_cl2K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_cl2J:
	jmp *-16(%r13)
	.size lvl3_shiu_entry, .-lvl3_shiu_entry


==================== Asm code ====================
2018-03-16 15:54:58.91580201 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_shiu_info:
	.quad	lvl3_shiu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.916405674 UTC

.section .text
.align 8
sat_shiz_entry:
_cl2Q:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonoid(->)_$cmconcat_entry
	.size sat_shiz_entry, .-sat_shiz_entry


==================== Asm code ====================
2018-03-16 15:54:58.916993488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiz_info:
	.quad	sat_shiz_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.917624179 UTC

.section .text
.align 8
sat_shiy_entry:
_cl2Y:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fMonoid(->)_$cmappend_entry
	.size sat_shiy_entry, .-sat_shiy_entry


==================== Asm code ====================
2018-03-16 15:54:58.918209735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiy_info:
	.quad	sat_shiy_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.918796843 UTC

.section .text
.align 8
sat_shix_entry:
_cl36:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_shix_entry, .-sat_shix_entry


==================== Asm code ====================
2018-03-16 15:54:58.919346937 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shix_info:
	.quad	sat_shix_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.920048899 UTC

.section .text
.align 8
sat_shiv_entry:
_cl3d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cl3e
_cl3f:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fMonoid(->)_$cp1Monoid_entry
_cl3e:
	jmp *-16(%r13)
	.size sat_shiv_entry, .-sat_shiv_entry


==================== Asm code ====================
2018-03-16 15:54:58.920685408 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiv_info:
	.quad	sat_shiv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.921544882 UTC

.section .text
.align 8
.globl GHC.Base.$fMonoid(->)_entry
.type GHC.Base.$fMonoid(->)_entry, @object
GHC.Base.$fMonoid(->)_entry:
_cl3h:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cl3l
_cl3k:
	leaq lvl3_shiu_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-112(%r12)
	leaq sat_shiz_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-96(%r12)
	leaq sat_shiy_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %r14,-80(%r12)
	leaq sat_shix_info(%rip),%rax
	movq %rax,-72(%r12)
	leaq -128(%r12),%rax
	movq %rax,-64(%r12)
	leaq sat_shiv_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -71(%r12),%rax
	movq %rax,-16(%r12)
	leaq -85(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cl3l:
	movq $136,904(%r13)
	leaq GHC.Base.$fMonoid(->)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonoid(->)_entry, .-GHC.Base.$fMonoid(->)_entry


==================== Asm code ====================
2018-03-16 15:54:58.9222939 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonoid(->)_info
.type GHC.Base.$fMonoid(->)_info, @object
GHC.Base.$fMonoid(->)_info:
	.quad	GHC.Base.$fMonoid(->)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.924524966 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$cstimes_closure
.type GHC.Base.$fSemigroup[]_$cstimes_closure, @object
GHC.Base.$fSemigroup[]_$cstimes_closure:
	.quad	GHC.Base.$fSemigroup[]_$cstimes_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.925147019 UTC

.section .text
.align 8
.globl GHC.Base.$fSemigroup[]_$cstimes_entry
.type GHC.Base.$fSemigroup[]_$cstimes_entry, @object
GHC.Base.$fSemigroup[]_$cstimes_entry:
_cl3Z:
	movq Data.Semigroup.Internal.stimesList_closure@gotpcrel(%rip),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.Base.$fSemigroup[]_$cstimes_entry, .-GHC.Base.$fSemigroup[]_$cstimes_entry


==================== Asm code ====================
2018-03-16 15:54:58.925813691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_$cstimes_info
.type GHC.Base.$fSemigroup[]_$cstimes_info, @object
GHC.Base.$fSemigroup[]_$cstimes_info:
	.quad	GHC.Base.$fSemigroup[]_$cstimes_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Si3a_srt+128


==================== Asm code ====================
2018-03-16 15:54:58.927497059 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fSemigroup[]_closure
.type GHC.Base.$fSemigroup[]_closure, @object
GHC.Base.$fSemigroup[]_closure:
	.quad	GHC.Base.C:Semigroup_con_info
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fSemigroup[]_$csconcat_closure+1
	.quad	GHC.Base.$fSemigroup[]_$cstimes_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.92914814 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonoid[]_closure
.type GHC.Base.$fMonoid[]_closure, @object
GHC.Base.$fMonoid[]_closure:
	.quad	GHC.Base.C:Monoid_con_info
	.quad	GHC.Base.$fSemigroup[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.++_closure+2
	.quad	GHC.Base.$fMonoid[]_$cmconcat_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.932260295 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_closure
.type GHC.Base.$fApplicativeNonEmpty_$cpure_closure, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_info


==================== Asm code ====================
2018-03-16 15:54:58.933059148 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_entry
.type GHC.Base.$fApplicativeNonEmpty_$cpure_entry, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_entry:
_cl4d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl4h
_cl4g:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cl4h:
	movq $24,904(%r13)
	leaq GHC.Base.$fApplicativeNonEmpty_$cpure_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$cpure_entry, .-GHC.Base.$fApplicativeNonEmpty_$cpure_entry


==================== Asm code ====================
2018-03-16 15:54:58.933771611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cpure_info
.type GHC.Base.$fApplicativeNonEmpty_$cpure_info, @object
GHC.Base.$fApplicativeNonEmpty_$cpure_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.938605739 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$cliftA2_closure
.type GHC.Base.$w$cliftA2_closure, @object
GHC.Base.$w$cliftA2_closure:
	.quad	GHC.Base.$w$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:58.939440242 UTC

.section .text
.align 8
sat_shiI_entry:
_cl4G:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cl4K
_cl4J:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cl4K:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_shiI_entry, .-sat_shiI_entry


==================== Asm code ====================
2018-03-16 15:54:58.940181438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiI_info:
	.quad	sat_shiI_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.941009608 UTC

.section .text
.align 8
sat_shiM_entry:
_cl4O:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl4P
_cl4Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl4S
_cl4R:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_shiI_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_cl4L_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cl4S:
	movq $24,904(%r13)
_cl4P:
	jmp *-8(%r13)
	.size sat_shiM_entry, .-sat_shiM_entry


==================== Asm code ====================
2018-03-16 15:54:58.941778688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiM_info:
	.quad	sat_shiM_entry
	.quad	2
	.quad	11
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.942451345 UTC

.section .text
.align 8
_cl4L:
_cl4L:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl4V
_cl4U:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl4V:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl4L, .-_cl4L


==================== Asm code ====================
2018-03-16 15:54:58.943074234 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl4L_info:
	.quad	_cl4L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.943795515 UTC

.section .text
.align 8
.globl GHC.Base.$w$cliftA2_entry
.type GHC.Base.$w$cliftA2_entry, @object
GHC.Base.$w$cliftA2_entry:
_cl4W:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl50
_cl4Z:
	leaq sat_shiM_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq %rsi,%rax
	leaq -15(%r12),%rsi
	movq %rax,%r14
	jmp GHC.Base.$w$c>>=_entry
_cl50:
	movq $24,904(%r13)
	leaq GHC.Base.$w$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$cliftA2_entry, .-GHC.Base.$w$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:58.944470553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$cliftA2_info
.type GHC.Base.$w$cliftA2_info, @object
GHC.Base.$w$cliftA2_info:
	.quad	GHC.Base.$w$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.94760039 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:58.948296148 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry:
_cl5x:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl5y
_cl5z:
	leaq block_cl5u_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$cliftA2_entry
_cl5y:
	leaq GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry, .-GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:58.948927506 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$cliftA2_info
.type GHC.Base.$fApplicativeNonEmpty_$cliftA2_info, @object
GHC.Base.$fApplicativeNonEmpty_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:58.94998301 UTC

.section .text
.align 8
_cl5u:
_cl5u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl5C
_cl5B:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl5C:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl5u, .-_cl5u


==================== Asm code ====================
2018-03-16 15:54:58.950568659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl5u_info:
	.quad	_cl5u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.954912765 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<*_closure
.type GHC.Base.$w$c<*_closure, @object
GHC.Base.$w$c<*_closure:
	.quad	GHC.Base.$w$c<*_info


==================== Asm code ====================
2018-03-16 15:54:58.955570747 UTC

.section .text
.align 8
sat_shiY_entry:
_cl63:
	movq 7(%rbx),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_shiY_entry, .-sat_shiY_entry


==================== Asm code ====================
2018-03-16 15:54:58.956107137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shiY_info:
	.quad	sat_shiY_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.956967654 UTC

.section .text
.align 8
sat_shj2_entry:
_cl69:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl6a
_cl6b:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cl6d
_cl6c:
	movq 7(%rbx),%rax
	leaq GHC.Base.:|_con_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-16(%r12)
	leaq sat_shiY_info(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_cl66_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cl6d:
	movq $40,904(%r13)
_cl6a:
	jmp *-8(%r13)
	.size sat_shj2_entry, .-sat_shj2_entry


==================== Asm code ====================
2018-03-16 15:54:58.95771509 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shj2_info:
	.quad	sat_shj2_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.958389128 UTC

.section .text
.align 8
_cl66:
_cl66:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl6g
_cl6f:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl6g:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl66, .-_cl66


==================== Asm code ====================
2018-03-16 15:54:58.958992306 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl66_info:
	.quad	_cl66
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.959686757 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<*_entry
.type GHC.Base.$w$c<*_entry, @object
GHC.Base.$w$c<*_entry:
_cl6h:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cl6l
_cl6k:
	leaq sat_shj2_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rsi
	jmp GHC.Base.$w$c>>=_entry
_cl6l:
	movq $16,904(%r13)
	leaq GHC.Base.$w$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<*_entry, .-GHC.Base.$w$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:58.960302329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<*_info
.type GHC.Base.$w$c<*_info, @object
GHC.Base.$w$c<*_info:
	.quad	GHC.Base.$w$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.963392612 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_closure
.type GHC.Base.$fApplicativeNonEmpty_$c<*_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_info


==================== Asm code ====================
2018-03-16 15:54:58.964128156 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_entry
.type GHC.Base.$fApplicativeNonEmpty_$c<*_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_entry:
_cl6R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl6S
_cl6T:
	leaq block_cl6O_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*_entry
_cl6S:
	leaq GHC.Base.$fApplicativeNonEmpty_$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c<*_entry, .-GHC.Base.$fApplicativeNonEmpty_$c<*_entry


==================== Asm code ====================
2018-03-16 15:54:58.96474224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*_info
.type GHC.Base.$fApplicativeNonEmpty_$c<*_info, @object
GHC.Base.$fApplicativeNonEmpty_$c<*_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.965514772 UTC

.section .text
.align 8
_cl6O:
_cl6O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl6W
_cl6V:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl6W:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl6O, .-_cl6O


==================== Asm code ====================
2018-03-16 15:54:58.966117029 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl6O_info:
	.quad	_cl6O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.97117373 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$w$c<*>_closure
.type GHC.Base.$w$c<*>_closure, @object
GHC.Base.$w$c<*>_closure:
	.quad	GHC.Base.$w$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:58.972028964 UTC

.section .text
.align 8
sat_shjd_entry:
_cl7o:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cl7s
_cl7r:
	movq 7(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cl7s:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_shjd_entry, .-sat_shjd_entry


==================== Asm code ====================
2018-03-16 15:54:58.972734832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shjd_info:
	.quad	sat_shjd_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.973548112 UTC

.section .text
.align 8
sat_shjh_entry:
_cl7w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl7x
_cl7y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cl7A
_cl7z:
	movq 7(%rbx),%rax
	leaq sat_shjd_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_cl7t_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c>>=_entry
_cl7A:
	movq $16,904(%r13)
_cl7x:
	jmp *-8(%r13)
	.size sat_shjh_entry, .-sat_shjh_entry


==================== Asm code ====================
2018-03-16 15:54:58.974235528 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shjh_info:
	.quad	sat_shjh_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:58.974934877 UTC

.section .text
.align 8
_cl7t:
_cl7t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl7D
_cl7C:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl7D:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl7t, .-_cl7t


==================== Asm code ====================
2018-03-16 15:54:58.975569048 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl7t_info:
	.quad	_cl7t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.976240683 UTC

.section .text
.align 8
.globl GHC.Base.$w$c<*>_entry
.type GHC.Base.$w$c<*>_entry, @object
GHC.Base.$w$c<*>_entry:
_cl7E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cl7I
_cl7H:
	leaq sat_shjh_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -7(%r12),%rsi
	jmp GHC.Base.$w$c>>=_entry
_cl7I:
	movq $16,904(%r13)
	leaq GHC.Base.$w$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$w$c<*>_entry, .-GHC.Base.$w$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:58.976883578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$w$c<*>_info
.type GHC.Base.$w$c<*>_info, @object
GHC.Base.$w$c<*>_info:
	.quad	GHC.Base.$w$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.979932052 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_closure
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:58.980637307 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_entry
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_entry:
_cl8f:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl8g
_cl8h:
	leaq block_cl8c_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*>_entry
_cl8g:
	leaq GHC.Base.$fApplicativeNonEmpty_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c<*>_entry, .-GHC.Base.$fApplicativeNonEmpty_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:58.98130854 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c<*>_info
.type GHC.Base.$fApplicativeNonEmpty_$c<*>_info, @object
GHC.Base.$fApplicativeNonEmpty_$c<*>_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.981988416 UTC

.section .text
.align 8
_cl8c:
_cl8c:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl8k
_cl8j:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl8k:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl8c, .-_cl8c


==================== Asm code ====================
2018-03-16 15:54:58.982559907 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl8c_info:
	.quad	_cl8c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.984506492 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty1_closure
.type GHC.Base.$fApplicativeNonEmpty1_closure, @object
GHC.Base.$fApplicativeNonEmpty1_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty1_info


==================== Asm code ====================
2018-03-16 15:54:58.985112536 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty1_entry
.type GHC.Base.$fApplicativeNonEmpty1_entry, @object
GHC.Base.$fApplicativeNonEmpty1_entry:
_cl8A:
	movq %rsi,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size GHC.Base.$fApplicativeNonEmpty1_entry, .-GHC.Base.$fApplicativeNonEmpty1_entry


==================== Asm code ====================
2018-03-16 15:54:58.985807095 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty1_info
.type GHC.Base.$fApplicativeNonEmpty1_info, @object
GHC.Base.$fApplicativeNonEmpty1_info:
	.quad	GHC.Base.$fApplicativeNonEmpty1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.989870708 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_closure
.type GHC.Base.$fApplicativeNonEmpty_$c*>_closure, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_closure:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:58.990647937 UTC

.section .text
.align 8
sat_shju_entry:
_cl8S:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cl8T
_cl8U:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cl8P_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cl8P
_cl8Q:
	movq (%rbx),%rax
	jmp *(%rax)
_cl8T:
	jmp *-16(%r13)
	.size sat_shju_entry, .-sat_shju_entry


==================== Asm code ====================
2018-03-16 15:54:58.99129286 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shju_info:
	.quad	sat_shju_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:58.99189751 UTC

.section .text
.align 8
_cl8P:
_cl8P:
	movq 15(%rbx),%rsi
	leaq GHC.Base.$fApplicativeNonEmpty1_closure+2(%rip),%r14
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _cl8P, .-_cl8P


==================== Asm code ====================
2018-03-16 15:54:58.992475701 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl8P_info:
	.quad	_cl8P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.993342143 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_entry
.type GHC.Base.$fApplicativeNonEmpty_$c*>_entry, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_entry:
_cl93:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cl94
_cl95:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cl97
_cl96:
	leaq sat_shju_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Base.breakpoint_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_cl90_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%r14
	addq $-8,%rbp
	jmp GHC.Base.$w$c<*>_entry
_cl97:
	movq $48,904(%r13)
_cl94:
	leaq GHC.Base.$fApplicativeNonEmpty_$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeNonEmpty_$c*>_entry, .-GHC.Base.$fApplicativeNonEmpty_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:58.994017083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_$c*>_info
.type GHC.Base.$fApplicativeNonEmpty_$c*>_info, @object
GHC.Base.$fApplicativeNonEmpty_$c*>_info:
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:58.994701134 UTC

.section .text
.align 8
_cl90:
_cl90:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cl9a
_cl99:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cl9a:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cl90, .-_cl90


==================== Asm code ====================
2018-03-16 15:54:58.995280057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cl90_info:
	.quad	_cl90
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:58.997013701 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeNonEmpty_closure
.type GHC.Base.$fApplicativeNonEmpty_closure, @object
GHC.Base.$fApplicativeNonEmpty_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorNonEmpty_closure+1
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_closure+1
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicativeNonEmpty_$c*>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:58.999283638 UTC

.section .data
.align 8
.align 1
lvl_r7PJ_closure:
	.quad	lvl_r7PJ_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:58.999841576 UTC

.section .text
.align 8
lvl_r7PJ_entry:
_cl9F:
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size lvl_r7PJ_entry, .-lvl_r7PJ_entry


==================== Asm code ====================
2018-03-16 15:54:59.000365511 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r7PJ_info:
	.quad	lvl_r7PJ_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Si3a_srt+72


==================== Asm code ====================
2018-03-16 15:54:59.002656775 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadNonEmpty_closure
.type GHC.Base.$fMonadNonEmpty_closure, @object
GHC.Base.$fMonadNonEmpty_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeNonEmpty_closure+1
	.quad	GHC.Base.$fMonadNonEmpty_$c>>=_closure+2
	.quad	GHC.Base.$fMonadNonEmpty_$c>>_closure+2
	.quad	GHC.Base.$fApplicativeNonEmpty_$cpure_closure+1
	.quad	lvl_r7PJ_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.00437695 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Base.$fAlternativeIO4_bytes
.type GHC.Base.$fAlternativeIO4_bytes, @object
GHC.Base.$fAlternativeIO4_bytes:
	.asciz "mzero"


==================== Asm code ====================
2018-03-16 15:54:59.007115728 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO3_closure
.type GHC.Base.$fAlternativeIO3_closure, @object
GHC.Base.$fAlternativeIO3_closure:
	.quad	GHC.Base.$fAlternativeIO3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.007986114 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO3_entry
.type GHC.Base.$fAlternativeIO3_entry, @object
GHC.Base.$fAlternativeIO3_entry:
_cl9U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cl9V
_cl9W:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cl9T
_cl9S:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Base.$fAlternativeIO4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cl9V:
	jmp *-16(%r13)
_cl9T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO3_entry, .-GHC.Base.$fAlternativeIO3_entry


==================== Asm code ====================
2018-03-16 15:54:59.008620814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO3_info
.type GHC.Base.$fAlternativeIO3_info, @object
GHC.Base.$fAlternativeIO3_info:
	.quad	GHC.Base.$fAlternativeIO3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:54:59.011113652 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cempty_closure
.type GHC.Base.$fAlternativeIO_$cempty_closure, @object
GHC.Base.$fAlternativeIO_$cempty_closure:
	.quad	GHC.Base.$fAlternativeIO_$cempty_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.011887983 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeIO_$cempty_entry
.type GHC.Base.$fAlternativeIO_$cempty_entry, @object
GHC.Base.$fAlternativeIO_$cempty_entry:
_clab:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clac
_clad:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _claa
_cla9:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.Base.$fAlternativeIO3_closure(%rip),%r14
	movq GHC.IO.failIO_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_clac:
	jmp *-16(%r13)
_claa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Base.$fAlternativeIO_$cempty_entry, .-GHC.Base.$fAlternativeIO_$cempty_entry


==================== Asm code ====================
2018-03-16 15:54:59.012549343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_$cempty_info
.type GHC.Base.$fAlternativeIO_$cempty_info, @object
GHC.Base.$fAlternativeIO_$cempty_info:
	.quad	GHC.Base.$fAlternativeIO_$cempty_entry
	.quad	0
	.quad	554050781205
	.quad	Si3a_srt+80


==================== Asm code ====================
2018-03-16 15:54:59.015358211 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeIO_closure
.type GHC.Base.$fAlternativeIO_closure, @object
GHC.Base.$fAlternativeIO_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicativeIO_closure+1
	.quad	GHC.Base.$fAlternativeIO_$cempty_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	GHC.Base.$fAlternativeIO2_closure+2
	.quad	GHC.Base.$fAlternativeIO_$cmany_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.017028048 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlusIO_closure
.type GHC.Base.$fMonadPlusIO_closure, @object
GHC.Base.$fMonadPlusIO_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternativeIO_closure+1
	.quad	GHC.Base.$fMonadIO_closure+1
	.quad	GHC.Base.$fAlternativeIO_$cempty_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.020098681 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$c<|>_closure
.type GHC.Base.$fAlternativeMaybe_$c<|>_closure, @object
GHC.Base.$fAlternativeMaybe_$c<|>_closure:
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_info


==================== Asm code ====================
2018-03-16 15:54:59.020911917 UTC

.section .text
.align 8
.globl GHC.Base.$fAlternativeMaybe_$c<|>_entry
.type GHC.Base.$fAlternativeMaybe_$c<|>_entry, @object
GHC.Base.$fAlternativeMaybe_$c<|>_entry:
_claz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _claA
_claB:
	leaq block_clas_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _clas
_clat:
	movq (%rbx),%rax
	jmp *(%rax)
_claA:
	leaq GHC.Base.$fAlternativeMaybe_$c<|>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fAlternativeMaybe_$c<|>_entry, .-GHC.Base.$fAlternativeMaybe_$c<|>_entry


==================== Asm code ====================
2018-03-16 15:54:59.021650486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_$c<|>_info
.type GHC.Base.$fAlternativeMaybe_$c<|>_info, @object
GHC.Base.$fAlternativeMaybe_$c<|>_info:
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.022339745 UTC

.section .text
.align 8
_clas:
_clas:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _claw
_clax:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_claw:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _clas, .-_clas


==================== Asm code ====================
2018-03-16 15:54:59.022930296 UTC

.section .data.rel.ro
.align 8
.align 1
block_clas_info:
	.quad	_clas
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.028359126 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_closure
.type GHC.Base.$fApplicativeMaybe_$cliftA2_closure, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:59.029162752 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_entry
.type GHC.Base.$fApplicativeMaybe_$cliftA2_entry, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_entry:
_clba:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _clbb
_clbc:
	leaq block_clb3_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _clb3
_clb4:
	movq (%rbx),%rax
	jmp *(%rax)
_clbb:
	leaq GHC.Base.$fApplicativeMaybe_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$cliftA2_entry, .-GHC.Base.$fApplicativeMaybe_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:59.029803937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cliftA2_info
.type GHC.Base.$fApplicativeMaybe_$cliftA2_info, @object
GHC.Base.$fApplicativeMaybe_$cliftA2_info:
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:59.03051916 UTC

.section .text
.align 8
_clb3:
_clb3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ulbA
_clb8:
	leaq block_clbi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _clbi
_clbk:
	movq (%rbx),%rax
	jmp *(%rax)
_ulbA:
	addq $24,%rbp
	jmp _clbq
	.size _clb3, .-_clb3


==================== Asm code ====================
2018-03-16 15:54:59.031098776 UTC

.section .data.rel.ro
.align 8
.align 1
block_clb3_info:
	.quad	_clb3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.031815783 UTC

.section .text
.align 8
_clbi:
_clbi:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ulbB
_clbv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _clby
_clbx:
	movq 6(%rbx),%rax
	movq stg_ap_3_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ulbB:
	addq $24,%rbp
	jmp _clbq
_clby:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _clbi, .-_clbi


==================== Asm code ====================
2018-03-16 15:54:59.032489706 UTC

.section .data.rel.ro
.align 8
.align 1
block_clbi_info:
	.quad	_clbi
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.033103453 UTC

.section .text
.align 8
_clbq:
_clbq:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _clbq, .-_clbq


==================== Asm code ====================
2018-03-16 15:54:59.036140759 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c*>_closure
.type GHC.Base.$fApplicativeMaybe_$c*>_closure, @object
GHC.Base.$fApplicativeMaybe_$c*>_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_info


==================== Asm code ====================
2018-03-16 15:54:59.036839335 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c*>_entry
.type GHC.Base.$fApplicativeMaybe_$c*>_entry, @object
GHC.Base.$fApplicativeMaybe_$c*>_entry:
_clcj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clck
_clcl:
	leaq block_clcc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _clcc
_clcd:
	movq (%rbx),%rax
	jmp *(%rax)
_clck:
	leaq GHC.Base.$fApplicativeMaybe_$c*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c*>_entry, .-GHC.Base.$fApplicativeMaybe_$c*>_entry


==================== Asm code ====================
2018-03-16 15:54:59.037562488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c*>_info
.type GHC.Base.$fApplicativeMaybe_$c*>_info, @object
GHC.Base.$fApplicativeMaybe_$c*>_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.038251912 UTC

.section .text
.align 8
_clcc:
_clcc:
	andl $7,%ebx
	cmpq $1,%rbx
	je _clcg
_clch:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_clcg:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _clcc, .-_clcc


==================== Asm code ====================
2018-03-16 15:54:59.039297773 UTC

.section .data.rel.ro
.align 8
.align 1
block_clcc_info:
	.quad	_clcc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.042154367 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*>_closure
.type GHC.Base.$fApplicative(->)_$c<*>_closure, @object
GHC.Base.$fApplicative(->)_$c<*>_closure:
	.quad	GHC.Base.$fApplicative(->)_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:59.042928322 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$c<*>_entry
.type GHC.Base.$fApplicative(->)_$c<*>_entry, @object
GHC.Base.$fApplicative(->)_$c<*>_entry:
_clcN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _clcR
_clcQ:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -24(%r12),%rsi
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_clcR:
	movq $32,904(%r13)
	leaq GHC.Base.$fApplicative(->)_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(->)_$c<*>_entry, .-GHC.Base.$fApplicative(->)_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:59.043575535 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$c<*>_info
.type GHC.Base.$fApplicative(->)_$c<*>_info, @object
GHC.Base.$fApplicative(->)_$c<*>_info:
	.quad	GHC.Base.$fApplicative(->)_$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:59.046155745 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$cliftA2_closure
.type GHC.Base.$fApplicative(->)_$cliftA2_closure, @object
GHC.Base.$fApplicative(->)_$cliftA2_closure:
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_info


==================== Asm code ====================
2018-03-16 15:54:59.046924157 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(->)_$cliftA2_entry
.type GHC.Base.$fApplicative(->)_$cliftA2_entry, @object
GHC.Base.$fApplicative(->)_$cliftA2_entry:
_cld3:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cld7
_cld6:
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-8(%r12)
	movq %r8,(%r12)
	leaq -56(%r12),%rsi
	movq %r14,%rax
	leaq -24(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cld7:
	movq $64,904(%r13)
	leaq GHC.Base.$fApplicative(->)_$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(->)_$cliftA2_entry, .-GHC.Base.$fApplicative(->)_$cliftA2_entry


==================== Asm code ====================
2018-03-16 15:54:59.047658615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_$cliftA2_info
.type GHC.Base.$fApplicative(->)_$cliftA2_info, @object
GHC.Base.$fApplicative(->)_$cliftA2_info:
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:59.049351368 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(->)_closure
.type GHC.Base.$fApplicative(->)_closure, @object
GHC.Base.$fApplicative(->)_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctor(->)_closure+1
	.quad	GHC.Base.const_closure+2
	.quad	GHC.Base.$fApplicative(->)_$c<*>_closure+3
	.quad	GHC.Base.$fApplicative(->)_$cliftA2_closure+4
	.quad	GHC.Base.$fApplicative(->)_$c*>_closure+3
	.quad	GHC.Base.$fApplicative(->)_$c<*_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.051350964 UTC

.section .data
.align 8
.align 1
lvl1_r7PK_closure:
	.quad	lvl1_r7PK_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.051928063 UTC

.section .text
.align 8
lvl1_r7PK_entry:
_cldj:
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size lvl1_r7PK_entry, .-lvl1_r7PK_entry


==================== Asm code ====================
2018-03-16 15:54:59.05245026 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_r7PK_info:
	.quad	lvl1_r7PK_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Si3a_srt+72


==================== Asm code ====================
2018-03-16 15:54:59.054210261 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(->)_closure
.type GHC.Base.$fMonad(->)_closure, @object
GHC.Base.$fMonad(->)_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicative(->)_closure+1
	.quad	GHC.Base.$fMonad(->)_$c>>=_closure+3
	.quad	GHC.Base.$fMonad(->)_$c>>_closure+3
	.quad	GHC.Base.const_closure+2
	.quad	lvl1_r7PK_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.057791516 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cfmap_closure
.type GHC.Base.$fApplicativeMaybe_$cfmap_closure, @object
GHC.Base.$fApplicativeMaybe_$cfmap_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:59.058577418 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$cfmap_entry
.type GHC.Base.$fApplicativeMaybe_$cfmap_entry, @object
GHC.Base.$fApplicativeMaybe_$cfmap_entry:
_cldC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cldD
_cldE:
	leaq block_cldv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cldv
_cldw:
	movq (%rbx),%rax
	jmp *(%rax)
_cldD:
	leaq GHC.Base.$fApplicativeMaybe_$cfmap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$cfmap_entry, .-GHC.Base.$fApplicativeMaybe_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:59.059156727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$cfmap_info
.type GHC.Base.$fApplicativeMaybe_$cfmap_info, @object
GHC.Base.$fApplicativeMaybe_$cfmap_info:
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.059989629 UTC

.section .text
.align 8
_cldv:
_cldv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cldz
_cldA:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cldO
_cldN:
	movq 6(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cldO:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cldz:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cldv, .-_cldv


==================== Asm code ====================
2018-03-16 15:54:59.060678337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cldv_info:
	.quad	_cldv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.062362192 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctorMaybe_closure
.type GHC.Base.$fFunctorMaybe_closure, @object
GHC.Base.$fFunctorMaybe_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fApplicativeMaybe_$cfmap_closure+2
	.quad	GHC.Base.$fFunctorMaybe_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.065814195 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*>_closure
.type GHC.Base.$fApplicativeMaybe_$c<*>_closure, @object
GHC.Base.$fApplicativeMaybe_$c<*>_closure:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_info


==================== Asm code ====================
2018-03-16 15:54:59.066608492 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicativeMaybe_$c<*>_entry
.type GHC.Base.$fApplicativeMaybe_$c<*>_entry, @object
GHC.Base.$fApplicativeMaybe_$c<*>_entry:
_clek:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clel
_clem:
	leaq block_cled_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cled
_clee:
	movq (%rbx),%rax
	jmp *(%rax)
_clel:
	leaq GHC.Base.$fApplicativeMaybe_$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicativeMaybe_$c<*>_entry, .-GHC.Base.$fApplicativeMaybe_$c<*>_entry


==================== Asm code ====================
2018-03-16 15:54:59.067248214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_$c<*>_info
.type GHC.Base.$fApplicativeMaybe_$c<*>_info, @object
GHC.Base.$fApplicativeMaybe_$c<*>_info:
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.067946676 UTC

.section .text
.align 8
_cled:
_cled:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cleh
_clei:
	movq 8(%rbp),%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.Base.$fApplicativeMaybe_$cfmap_entry
_cleh:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cled, .-_cled


==================== Asm code ====================
2018-03-16 15:54:59.068566899 UTC

.section .data.rel.ro
.align 8
.align 1
block_cled_info:
	.quad	_cled
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.070267002 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicativeMaybe_closure
.type GHC.Base.$fApplicativeMaybe_closure, @object
GHC.Base.$fApplicativeMaybe_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	GHC.Base.$fFunctorMaybe_closure+1
	.quad	GHC.Base.Just_closure+1
	.quad	GHC.Base.$fApplicativeMaybe_$c<*>_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$cliftA2_closure+3
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$c<*_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.072503224 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadMaybe_closure
.type GHC.Base.$fMonadMaybe_closure, @object
GHC.Base.$fMonadMaybe_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	GHC.Base.$fApplicativeMaybe_closure+1
	.quad	GHC.Base.$fMonadMaybe_$c>>=_closure+2
	.quad	GHC.Base.$fApplicativeMaybe_$c*>_closure+2
	.quad	GHC.Base.Just_closure+1
	.quad	GHC.Base.$fMonadMaybe_$cfail_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.074621285 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fAlternativeMaybe_closure
.type GHC.Base.$fAlternativeMaybe_closure, @object
GHC.Base.$fAlternativeMaybe_closure:
	.quad	GHC.Base.C:Alternative_con_info
	.quad	GHC.Base.$fApplicativeMaybe_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_closure+2
	.quad	GHC.Base.$fAlternativeMaybe_$csome_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$cmany_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.076256901 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonadPlusMaybe_closure
.type GHC.Base.$fMonadPlusMaybe_closure, @object
GHC.Base.$fMonadPlusMaybe_closure:
	.quad	GHC.Base.C:MonadPlus_con_info
	.quad	GHC.Base.$fAlternativeMaybe_closure+1
	.quad	GHC.Base.$fMonadMaybe_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.$fAlternativeMaybe_$c<|>_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.08119632 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA3_closure
.type GHC.Base.liftA3_$sliftA3_closure, @object
GHC.Base.liftA3_$sliftA3_closure:
	.quad	GHC.Base.liftA3_$sliftA3_info


==================== Asm code ====================
2018-03-16 15:54:59.08210479 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_$sliftA3_entry
.type GHC.Base.liftA3_$sliftA3_entry, @object
GHC.Base.liftA3_$sliftA3_entry:
_cleW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cleX
_cleY:
	leaq block_cleP_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cleP
_cleQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cleX:
	leaq GHC.Base.liftA3_$sliftA3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftA3_$sliftA3_entry, .-GHC.Base.liftA3_$sliftA3_entry


==================== Asm code ====================
2018-03-16 15:54:59.082740744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_$sliftA3_info
.type GHC.Base.liftA3_$sliftA3_info, @object
GHC.Base.liftA3_$sliftA3_info:
	.quad	GHC.Base.liftA3_$sliftA3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:59.083522204 UTC

.section .text
.align 8
_cleP:
_cleP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ulfz
_cleU:
	leaq block_clf4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _clf4
_clf6:
	movq (%rbx),%rax
	jmp *(%rax)
_ulfz:
	addq $32,%rbp
	jmp _clfo
	.size _cleP, .-_cleP


==================== Asm code ====================
2018-03-16 15:54:59.084133919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cleP_info:
	.quad	_cleP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.084849525 UTC

.section .text
.align 8
_clf4:
_clf4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ulfA
_clfh:
	leaq block_clff_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _clff
_clfi:
	movq (%rbx),%rax
	jmp *(%rax)
_ulfA:
	addq $32,%rbp
	jmp _clfo
	.size _clf4, .-_clf4


==================== Asm code ====================
2018-03-16 15:54:59.085793315 UTC

.section .data.rel.ro
.align 8
.align 1
block_clf4_info:
	.quad	_clf4
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.086591997 UTC

.section .text
.align 8
_clff:
_clff:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ulfB
_clft:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _clfw
_clfv:
	movq 6(%rbx),%rax
	movq stg_ap_4_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ulfB:
	addq $32,%rbp
	jmp _clfo
_clfw:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _clff, .-_clff


==================== Asm code ====================
2018-03-16 15:54:59.087340624 UTC

.section .data.rel.ro
.align 8
.align 1
block_clff_info:
	.quad	_clff
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.087904162 UTC

.section .text
.align 8
_clfo:
_clfo:
	leaq GHC.Base.Nothing_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _clfo, .-_clfo


==================== Asm code ====================
2018-03-16 15:54:59.091432048 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA3_closure
.type GHC.Base.liftA3_closure, @object
GHC.Base.liftA3_closure:
	.quad	GHC.Base.liftA3_info


==================== Asm code ====================
2018-03-16 15:54:59.092099318 UTC

.section .text
.align 8
sat_shkq_entry:
_clgq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _clgr
_clgs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_ppp_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Base.liftA2_entry
_clgr:
	jmp *-16(%r13)
	.size sat_shkq_entry, .-sat_shkq_entry


==================== Asm code ====================
2018-03-16 15:54:59.09272574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkq_info:
	.quad	sat_shkq_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:54:59.093553727 UTC

.section .text
.align 8
.globl GHC.Base.liftA3_entry
.type GHC.Base.liftA3_entry, @object
GHC.Base.liftA3_entry:
_clgt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _clgu
_clgv:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _clgx
_clgw:
	leaq sat_shkq_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_clgx:
	movq $48,904(%r13)
_clgu:
	leaq GHC.Base.liftA3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftA3_entry, .-GHC.Base.liftA3_entry


==================== Asm code ====================
2018-03-16 15:54:59.094270192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA3_info
.type GHC.Base.liftA3_info, @object
GHC.Base.liftA3_info:
	.quad	GHC.Base.liftA3_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:59.096246897 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA_closure
.type GHC.Base.liftA_$sliftA_closure, @object
GHC.Base.liftA_$sliftA_closure:
	.quad	GHC.Base.liftA_$sliftA_info


==================== Asm code ====================
2018-03-16 15:54:59.096873979 UTC

.section .text
.align 8
.globl GHC.Base.liftA_$sliftA_entry
.type GHC.Base.liftA_$sliftA_entry, @object
GHC.Base.liftA_$sliftA_entry:
_clgT:
	jmp GHC.Base.$fApplicativeMaybe_$cfmap_entry
	.size GHC.Base.liftA_$sliftA_entry, .-GHC.Base.liftA_$sliftA_entry


==================== Asm code ====================
2018-03-16 15:54:59.097537482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_$sliftA_info
.type GHC.Base.liftA_$sliftA_info, @object
GHC.Base.liftA_$sliftA_info:
	.quad	GHC.Base.liftA_$sliftA_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.100624345 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.liftA_closure
.type GHC.Base.liftA_closure, @object
GHC.Base.liftA_closure:
	.quad	GHC.Base.liftA_info


==================== Asm code ====================
2018-03-16 15:54:59.101389546 UTC

.section .text
.align 8
sat_shku_entry:
_clh8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _clh9
_clha:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Base.pure_entry
_clh9:
	jmp *-16(%r13)
	.size sat_shku_entry, .-sat_shku_entry


==================== Asm code ====================
2018-03-16 15:54:59.102035107 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shku_info:
	.quad	sat_shku_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:54:59.102810539 UTC

.section .text
.align 8
.globl GHC.Base.liftA_entry
.type GHC.Base.liftA_entry, @object
GHC.Base.liftA_entry:
_clhb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _clhc
_clhd:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _clhf
_clhe:
	leaq sat_shku_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Base.<*>_entry
_clhf:
	movq $32,904(%r13)
_clhc:
	leaq GHC.Base.liftA_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.liftA_entry, .-GHC.Base.liftA_entry


==================== Asm code ====================
2018-03-16 15:54:59.103501345 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.liftA_info
.type GHC.Base.liftA_info, @object
GHC.Base.liftA_info:
	.quad	GHC.Base.liftA_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:59.106575643 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$cfmap_closure
.type GHC.Base.$fFunctor(,)_$cfmap_closure, @object
GHC.Base.$fFunctor(,)_$cfmap_closure:
	.quad	GHC.Base.$fFunctor(,)_$cfmap_info


==================== Asm code ====================
2018-03-16 15:54:59.107828933 UTC

.section .text
.align 8
.globl GHC.Base.$fFunctor(,)_$cfmap_entry
.type GHC.Base.$fFunctor(,)_$cfmap_entry, @object
GHC.Base.$fFunctor(,)_$cfmap_entry:
_clhC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clhH
_clhI:
	leaq block_clhz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _clhz
_clhA:
	movq (%rbx),%rax
	jmp *(%rax)
_clhH:
	leaq GHC.Base.$fFunctor(,)_$cfmap_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fFunctor(,)_$cfmap_entry, .-GHC.Base.$fFunctor(,)_$cfmap_entry


==================== Asm code ====================
2018-03-16 15:54:59.108551489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_$cfmap_info
.type GHC.Base.$fFunctor(,)_$cfmap_info, @object
GHC.Base.$fFunctor(,)_$cfmap_info:
	.quad	GHC.Base.$fFunctor(,)_$cfmap_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.109587445 UTC

.section .text
.align 8
_clhz:
_clhz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _clhL
_clhK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_clhL:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _clhz, .-_clhz


==================== Asm code ====================
2018-03-16 15:54:59.110229 UTC

.section .data.rel.ro
.align 8
.align 1
block_clhz_info:
	.quad	_clhz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:54:59.11175138 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fFunctor(,)_closure
.type GHC.Base.$fFunctor(,)_closure, @object
GHC.Base.$fFunctor(,)_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	GHC.Base.$fFunctor(,)_$cfmap_closure+2
	.quad	GHC.Base.$fFunctor(,)_$c<$_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:54:59.117319428 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_closure
.type GHC.Base.$fApplicative(,)_closure, @object
GHC.Base.$fApplicative(,)_closure:
	.quad	GHC.Base.$fApplicative(,)_info


==================== Asm code ====================
2018-03-16 15:54:59.118082855 UTC

.section .text
.align 8
lvl3_shkC_entry:
_clib:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clic
_clid:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_clic:
	jmp *-16(%r13)
	.size lvl3_shkC_entry, .-lvl3_shkC_entry


==================== Asm code ====================
2018-03-16 15:54:59.118674884 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_shkC_info:
	.quad	lvl3_shkC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:59.119296624 UTC

.section .text
.align 8
sat_shkI_entry:
_clij:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c<*_entry
	.size sat_shkI_entry, .-sat_shkI_entry


==================== Asm code ====================
2018-03-16 15:54:59.119840983 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkI_info:
	.quad	sat_shkI_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.1204225 UTC

.section .text
.align 8
sat_shkH_entry:
_clir:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c*>_entry
	.size sat_shkH_entry, .-sat_shkH_entry


==================== Asm code ====================
2018-03-16 15:54:59.12091312 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkH_info:
	.quad	sat_shkH_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.121776827 UTC

.section .text
.align 8
sat_shkG_entry:
_cliz:
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$cliftA2_entry
	.size sat_shkG_entry, .-sat_shkG_entry


==================== Asm code ====================
2018-03-16 15:54:59.122346629 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkG_info:
	.quad	sat_shkG_entry
	.quad	1
	.quad	9
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:59.122979647 UTC

.section .text
.align 8
sat_shkF_entry:
_cliH:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fApplicative(,)_$c<*>_entry
	.size sat_shkF_entry, .-sat_shkF_entry


==================== Asm code ====================
2018-03-16 15:54:59.123520988 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkF_info:
	.quad	sat_shkF_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.124233345 UTC

.section .text
.align 8
sat_shkE_entry:
_cliQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cliU
_cliT:
	movq 7(%rbx),%rax
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cliU:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_shkE_entry, .-sat_shkE_entry


==================== Asm code ====================
2018-03-16 15:54:59.12485094 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkE_info:
	.quad	sat_shkE_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:59.125730412 UTC

.section .text
.align 8
.globl GHC.Base.$fApplicative(,)_entry
.type GHC.Base.$fApplicative(,)_entry, @object
GHC.Base.$fApplicative(,)_entry:
_cliW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _clj0
_cliZ:
	leaq lvl3_shkC_info(%rip),%rax
	movq %rax,-152(%r12)
	movq %r14,-136(%r12)
	leaq sat_shkI_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	leaq sat_shkH_info(%rip),%rax
	movq %rax,-112(%r12)
	movq %r14,-104(%r12)
	leaq sat_shkG_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-88(%r12)
	leaq sat_shkF_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-72(%r12)
	leaq sat_shkE_info(%rip),%rax
	movq %rax,-64(%r12)
	leaq -152(%r12),%rax
	movq %rax,-56(%r12)
	leaq GHC.Base.C:Applicative_con_info(%rip),%rax
	movq %rax,-48(%r12)
	leaq GHC.Base.$fFunctor(,)_closure+1(%rip),%rax
	movq %rax,-40(%r12)
	leaq -63(%r12),%rax
	movq %rax,-32(%r12)
	leaq -78(%r12),%rax
	movq %rax,-24(%r12)
	leaq -93(%r12),%rax
	movq %rax,-16(%r12)
	leaq -110(%r12),%rax
	movq %rax,-8(%r12)
	leaq -126(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clj0:
	movq $160,904(%r13)
	leaq GHC.Base.$fApplicative(,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fApplicative(,)_entry, .-GHC.Base.$fApplicative(,)_entry


==================== Asm code ====================
2018-03-16 15:54:59.126524209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fApplicative(,)_info
.type GHC.Base.$fApplicative(,)_info, @object
GHC.Base.$fApplicative(,)_info:
	.quad	GHC.Base.$fApplicative(,)_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:59.128695909 UTC

.section .data
.align 8
.align 1
lvl2_r7PL_closure:
	.quad	lvl2_r7PL_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.129322832 UTC

.section .text
.align 8
lvl2_r7PL_entry:
_cljK:
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size lvl2_r7PL_entry, .-lvl2_r7PL_entry


==================== Asm code ====================
2018-03-16 15:54:59.129875858 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r7PL_info:
	.quad	lvl2_r7PL_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	Si3a_srt+72


==================== Asm code ====================
2018-03-16 15:54:59.135065588 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_closure
.type GHC.Base.$fMonad(,)_closure, @object
GHC.Base.$fMonad(,)_closure:
	.quad	GHC.Base.$fMonad(,)_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:54:59.13587116 UTC

.section .text
.align 8
lvl3_shkL_entry:
_cljZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clk0
_clk1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.mempty_entry
_clk0:
	jmp *-16(%r13)
	.size lvl3_shkL_entry, .-lvl3_shkL_entry


==================== Asm code ====================
2018-03-16 15:54:59.136471106 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_shkL_info:
	.quad	lvl3_shkL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:59.137187352 UTC

.section .text
.align 8
sat_shkQ_entry:
_clk8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _clkc
_clkb:
	movq 7(%rbx),%rax
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clkc:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_shkQ_entry, .-sat_shkQ_entry


==================== Asm code ====================
2018-03-16 15:54:59.138141495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkQ_info:
	.quad	sat_shkQ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:59.138789148 UTC

.section .text
.align 8
sat_shkO_entry:
_clki:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonad(,)_$c>>_entry
	.size sat_shkO_entry, .-sat_shkO_entry


==================== Asm code ====================
2018-03-16 15:54:59.139330163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkO_info:
	.quad	sat_shkO_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.139910285 UTC

.section .text
.align 8
sat_shkN_entry:
_clkq:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.Base.$fMonad(,)_$c>>=_entry
	.size sat_shkN_entry, .-sat_shkN_entry


==================== Asm code ====================
2018-03-16 15:54:59.140452087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkN_info:
	.quad	sat_shkN_entry
	.quad	1
	.quad	9
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.14114433 UTC

.section .text
.align 8
sat_shkM_entry:
_clkx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _clky
_clkz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.$fApplicative(,)_entry
_clky:
	jmp *-16(%r13)
	.size sat_shkM_entry, .-sat_shkM_entry


==================== Asm code ====================
2018-03-16 15:54:59.141769903 UTC

.section .data.rel.ro
.align 8
.align 1
sat_shkM_info:
	.quad	sat_shkM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:54:59.142571895 UTC

.section .text
.align 8
.globl GHC.Base.$fMonad(,)_entry
.type GHC.Base.$fMonad(,)_entry, @object
GHC.Base.$fMonad(,)_entry:
_clkB:
	addq $144,%r12
	cmpq 856(%r13),%r12
	ja _clkF
_clkE:
	leaq lvl3_shkL_info(%rip),%rax
	movq %rax,-136(%r12)
	movq %r14,-120(%r12)
	leaq sat_shkQ_info(%rip),%rax
	movq %rax,-112(%r12)
	leaq -136(%r12),%rax
	movq %rax,-104(%r12)
	leaq sat_shkO_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-88(%r12)
	leaq sat_shkN_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-72(%r12)
	leaq sat_shkM_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq GHC.Base.C:Monad_con_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-32(%r12)
	leaq -78(%r12),%rax
	movq %rax,-24(%r12)
	leaq -94(%r12),%rax
	movq %rax,-16(%r12)
	leaq -111(%r12),%rax
	movq %rax,-8(%r12)
	leaq lvl2_r7PL_closure+1(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clkF:
	movq $144,904(%r13)
	leaq GHC.Base.$fMonad(,)_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.$fMonad(,)_entry, .-GHC.Base.$fMonad(,)_entry


==================== Asm code ====================
2018-03-16 15:54:59.143804582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.$fMonad(,)_info
.type GHC.Base.$fMonad(,)_info, @object
GHC.Base.$fMonad(,)_info:
	.quad	GHC.Base.$fMonad(,)_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	Si3a_srt+144


==================== Asm code ====================
2018-03-16 15:54:59.146678291 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Monad_closure
.type GHC.Base.C:Monad_closure, @object
GHC.Base.C:Monad_closure:
	.quad	GHC.Base.C:Monad_info


==================== Asm code ====================
2018-03-16 15:54:59.147505409 UTC

.section .text
.align 8
GHC.Base.C:Monad_entry:
_clln:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cllr
_cllq:
	leaq GHC.Base.C:Monad_con_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cllr:
	movq $48,904(%r13)
	leaq GHC.Base.C:Monad_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Monad_entry, .-GHC.Base.C:Monad_entry


==================== Asm code ====================
2018-03-16 15:54:59.148165033 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Monad_info:
	.quad	GHC.Base.C:Monad_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:59.151006873 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Functor_closure
.type GHC.Base.C:Functor_closure, @object
GHC.Base.C:Functor_closure:
	.quad	GHC.Base.C:Functor_info


==================== Asm code ====================
2018-03-16 15:54:59.151773105 UTC

.section .text
.align 8
GHC.Base.C:Functor_entry:
_cllD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cllH
_cllG:
	leaq GHC.Base.C:Functor_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cllH:
	movq $24,904(%r13)
	leaq GHC.Base.C:Functor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Functor_entry, .-GHC.Base.C:Functor_entry


==================== Asm code ====================
2018-03-16 15:54:59.152397131 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Functor_info:
	.quad	GHC.Base.C:Functor_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.154945657 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Applicative_closure
.type GHC.Base.C:Applicative_closure, @object
GHC.Base.C:Applicative_closure:
	.quad	GHC.Base.C:Applicative_info


==================== Asm code ====================
2018-03-16 15:54:59.15569331 UTC

.section .text
.align 8
GHC.Base.C:Applicative_entry:
_cllT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cllX
_cllW:
	leaq GHC.Base.C:Applicative_con_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cllX:
	movq $56,904(%r13)
	leaq GHC.Base.C:Applicative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Applicative_entry, .-GHC.Base.C:Applicative_entry


==================== Asm code ====================
2018-03-16 15:54:59.156391309 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Applicative_info:
	.quad	GHC.Base.C:Applicative_entry
	.quad	0
	.quad	14
	.quad	25769803802


==================== Asm code ====================
2018-03-16 15:54:59.159026447 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Semigroup_closure
.type GHC.Base.C:Semigroup_closure, @object
GHC.Base.C:Semigroup_closure:
	.quad	GHC.Base.C:Semigroup_info


==================== Asm code ====================
2018-03-16 15:54:59.15979815 UTC

.section .text
.align 8
GHC.Base.C:Semigroup_entry:
_clma:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _clme
_clmd:
	leaq GHC.Base.C:Semigroup_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clme:
	movq $32,904(%r13)
	leaq GHC.Base.C:Semigroup_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Semigroup_entry, .-GHC.Base.C:Semigroup_entry


==================== Asm code ====================
2018-03-16 15:54:59.160373179 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Semigroup_info:
	.quad	GHC.Base.C:Semigroup_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:54:59.16281692 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Monoid_closure
.type GHC.Base.C:Monoid_closure, @object
GHC.Base.C:Monoid_closure:
	.quad	GHC.Base.C:Monoid_info


==================== Asm code ====================
2018-03-16 15:54:59.163540238 UTC

.section .text
.align 8
GHC.Base.C:Monoid_entry:
_clmq:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _clmu
_clmt:
	leaq GHC.Base.C:Monoid_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clmu:
	movq $40,904(%r13)
	leaq GHC.Base.C:Monoid_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Monoid_entry, .-GHC.Base.C:Monoid_entry


==================== Asm code ====================
2018-03-16 15:54:59.164178837 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Monoid_info:
	.quad	GHC.Base.C:Monoid_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:59.165791208 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.Nothing_closure
.type GHC.Base.Nothing_closure, @object
GHC.Base.Nothing_closure:
	.quad	GHC.Base.Nothing_con_info


==================== Asm code ====================
2018-03-16 15:54:59.168045403 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.Just_closure
.type GHC.Base.Just_closure, @object
GHC.Base.Just_closure:
	.quad	GHC.Base.Just_info


==================== Asm code ====================
2018-03-16 15:54:59.168791179 UTC

.section .text
.align 8
GHC.Base.Just_entry:
_clmH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _clmL
_clmK:
	leaq GHC.Base.Just_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clmL:
	movq $16,904(%r13)
	leaq GHC.Base.Just_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.Just_entry, .-GHC.Base.Just_entry


==================== Asm code ====================
2018-03-16 15:54:59.1694612 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.Just_info:
	.quad	GHC.Base.Just_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:59.171691034 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.O_closure
.type GHC.Base.O_closure, @object
GHC.Base.O_closure:
	.quad	GHC.Base.O_info


==================== Asm code ====================
2018-03-16 15:54:59.172393914 UTC

.section .text
.align 8
GHC.Base.O_entry:
_clmX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cln1
_cln0:
	leaq GHC.Base.O_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cln1:
	movq $16,904(%r13)
	leaq GHC.Base.O_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.O_entry, .-GHC.Base.O_entry


==================== Asm code ====================
2018-03-16 15:54:59.17297408 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.O_info:
	.quad	GHC.Base.O_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:54:59.175617938 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.:|_closure
.type GHC.Base.:|_closure, @object
GHC.Base.:|_closure:
	.quad	GHC.Base.:|_info


==================== Asm code ====================
2018-03-16 15:54:59.176407355 UTC

.section .text
.align 8
GHC.Base.:|_entry:
_clnd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _clnh
_clng:
	leaq GHC.Base.:|_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clnh:
	movq $24,904(%r13)
	leaq GHC.Base.:|_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.:|_entry, .-GHC.Base.:|_entry


==================== Asm code ====================
2018-03-16 15:54:59.17755715 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.:|_info:
	.quad	GHC.Base.:|_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:54:59.180202506 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:MonadPlus_closure
.type GHC.Base.C:MonadPlus_closure, @object
GHC.Base.C:MonadPlus_closure:
	.quad	GHC.Base.C:MonadPlus_info


==================== Asm code ====================
2018-03-16 15:54:59.181043919 UTC

.section .text
.align 8
GHC.Base.C:MonadPlus_entry:
_clnt:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _clnx
_clnw:
	leaq GHC.Base.C:MonadPlus_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq -31(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clnx:
	movq $40,904(%r13)
	leaq GHC.Base.C:MonadPlus_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:MonadPlus_entry, .-GHC.Base.C:MonadPlus_entry


==================== Asm code ====================
2018-03-16 15:54:59.182070866 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:MonadPlus_info:
	.quad	GHC.Base.C:MonadPlus_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 15:54:59.184728741 UTC

.section .data
.align 8
.align 1
.globl GHC.Base.C:Alternative_closure
.type GHC.Base.C:Alternative_closure, @object
GHC.Base.C:Alternative_closure:
	.quad	GHC.Base.C:Alternative_info


==================== Asm code ====================
2018-03-16 15:54:59.185671322 UTC

.section .text
.align 8
GHC.Base.C:Alternative_entry:
_clnJ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _clnN
_clnM:
	leaq GHC.Base.C:Alternative_con_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_clnN:
	movq $48,904(%r13)
	leaq GHC.Base.C:Alternative_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Base.C:Alternative_entry, .-GHC.Base.C:Alternative_entry


==================== Asm code ====================
2018-03-16 15:54:59.18635295 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Base.C:Alternative_info:
	.quad	GHC.Base.C:Alternative_entry
	.quad	0
	.quad	14
	.quad	21474836505


==================== Asm code ====================
2018-03-16 15:54:59.188363935 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilnV_str:
	.asciz "base:GHC.Base.C:Monad"


==================== Asm code ====================
2018-03-16 15:54:59.189046132 UTC

.section .text
.align 8
.globl GHC.Base.C:Monad_con_entry
.type GHC.Base.C:Monad_con_entry, @object
GHC.Base.C:Monad_con_entry:
_clnU:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Monad_con_entry, .-GHC.Base.C:Monad_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.18984902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Monad_con_info
.type GHC.Base.C:Monad_con_info, @object
GHC.Base.C:Monad_con_info:
	.quad	GHC.Base.C:Monad_con_entry
	.quad	5
	.quad	1
	.quad	ilnV_str


==================== Asm code ====================
2018-03-16 15:54:59.191802132 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilo2_str:
	.asciz "base:GHC.Base.C:Functor"


==================== Asm code ====================
2018-03-16 15:54:59.192413431 UTC

.section .text
.align 8
.globl GHC.Base.C:Functor_con_entry
.type GHC.Base.C:Functor_con_entry, @object
GHC.Base.C:Functor_con_entry:
_clo1:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Functor_con_entry, .-GHC.Base.C:Functor_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.192995283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Functor_con_info
.type GHC.Base.C:Functor_con_info, @object
GHC.Base.C:Functor_con_info:
	.quad	GHC.Base.C:Functor_con_entry
	.quad	2
	.quad	4
	.quad	ilo2_str


==================== Asm code ====================
2018-03-16 15:54:59.194923527 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilo9_str:
	.asciz "base:GHC.Base.C:Applicative"


==================== Asm code ====================
2018-03-16 15:54:59.195551079 UTC

.section .text
.align 8
.globl GHC.Base.C:Applicative_con_entry
.type GHC.Base.C:Applicative_con_entry, @object
GHC.Base.C:Applicative_con_entry:
_clo8:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Applicative_con_entry, .-GHC.Base.C:Applicative_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.196153738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Applicative_con_info
.type GHC.Base.C:Applicative_con_info, @object
GHC.Base.C:Applicative_con_info:
	.quad	GHC.Base.C:Applicative_con_entry
	.quad	6
	.quad	1
	.quad	ilo9_str


==================== Asm code ====================
2018-03-16 15:54:59.198069692 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilog_str:
	.asciz "base:GHC.Base.C:Semigroup"


==================== Asm code ====================
2018-03-16 15:54:59.198684666 UTC

.section .text
.align 8
.globl GHC.Base.C:Semigroup_con_entry
.type GHC.Base.C:Semigroup_con_entry, @object
GHC.Base.C:Semigroup_con_entry:
_clof:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Semigroup_con_entry, .-GHC.Base.C:Semigroup_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.199192471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Semigroup_con_info
.type GHC.Base.C:Semigroup_con_info, @object
GHC.Base.C:Semigroup_con_info:
	.quad	GHC.Base.C:Semigroup_con_entry
	.quad	3
	.quad	1
	.quad	ilog_str


==================== Asm code ====================
2018-03-16 15:54:59.200934068 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilon_str:
	.asciz "base:GHC.Base.C:Monoid"


==================== Asm code ====================
2018-03-16 15:54:59.201694174 UTC

.section .text
.align 8
.globl GHC.Base.C:Monoid_con_entry
.type GHC.Base.C:Monoid_con_entry, @object
GHC.Base.C:Monoid_con_entry:
_clom:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Monoid_con_entry, .-GHC.Base.C:Monoid_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.202234582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Monoid_con_info
.type GHC.Base.C:Monoid_con_info, @object
GHC.Base.C:Monoid_con_info:
	.quad	GHC.Base.C:Monoid_con_entry
	.quad	4
	.quad	1
	.quad	ilon_str


==================== Asm code ====================
2018-03-16 15:54:59.204150546 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilou_str:
	.asciz "base:GHC.Base.Nothing"


==================== Asm code ====================
2018-03-16 15:54:59.204762163 UTC

.section .text
.align 8
.globl GHC.Base.Nothing_con_entry
.type GHC.Base.Nothing_con_entry, @object
GHC.Base.Nothing_con_entry:
_clot:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.Nothing_con_entry, .-GHC.Base.Nothing_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.205417791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.Nothing_con_info
.type GHC.Base.Nothing_con_info, @object
GHC.Base.Nothing_con_info:
	.quad	GHC.Base.Nothing_con_entry
	.quad	4294967296
	.quad	3
	.quad	ilou_str


==================== Asm code ====================
2018-03-16 15:54:59.207871762 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iloB_str:
	.asciz "base:GHC.Base.Just"


==================== Asm code ====================
2018-03-16 15:54:59.208600156 UTC

.section .text
.align 8
.globl GHC.Base.Just_con_entry
.type GHC.Base.Just_con_entry, @object
GHC.Base.Just_con_entry:
_cloA:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.Just_con_entry, .-GHC.Base.Just_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.209196099 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.Just_con_info
.type GHC.Base.Just_con_info, @object
GHC.Base.Just_con_info:
	.quad	GHC.Base.Just_con_entry
	.quad	1
	.quad	4294967298
	.quad	iloB_str


==================== Asm code ====================
2018-03-16 15:54:59.211430978 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iloI_str:
	.asciz "base:GHC.Base.O"


==================== Asm code ====================
2018-03-16 15:54:59.212047099 UTC

.section .text
.align 8
.globl GHC.Base.O_con_entry
.type GHC.Base.O_con_entry, @object
GHC.Base.O_con_entry:
_cloH:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.O_con_entry, .-GHC.Base.O_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.212608367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.O_con_info
.type GHC.Base.O_con_info, @object
GHC.Base.O_con_info:
	.quad	GHC.Base.O_con_entry
	.quad	1
	.quad	2
	.quad	iloI_str


==================== Asm code ====================
2018-03-16 15:54:59.21457029 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iloP_str:
	.asciz "base:GHC.Base.:|"


==================== Asm code ====================
2018-03-16 15:54:59.215126414 UTC

.section .text
.align 8
.globl GHC.Base.:|_con_entry
.type GHC.Base.:|_con_entry, @object
GHC.Base.:|_con_entry:
_cloO:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.:|_con_entry, .-GHC.Base.:|_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.215648208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.:|_con_info
.type GHC.Base.:|_con_info, @object
GHC.Base.:|_con_info:
	.quad	GHC.Base.:|_con_entry
	.quad	2
	.quad	4
	.quad	iloP_str


==================== Asm code ====================
2018-03-16 15:54:59.217628018 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iloW_str:
	.asciz "base:GHC.Base.C:MonadPlus"


==================== Asm code ====================
2018-03-16 15:54:59.218245366 UTC

.section .text
.align 8
.globl GHC.Base.C:MonadPlus_con_entry
.type GHC.Base.C:MonadPlus_con_entry, @object
GHC.Base.C:MonadPlus_con_entry:
_cloV:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:MonadPlus_con_entry, .-GHC.Base.C:MonadPlus_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.218822401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:MonadPlus_con_info
.type GHC.Base.C:MonadPlus_con_info, @object
GHC.Base.C:MonadPlus_con_info:
	.quad	GHC.Base.C:MonadPlus_con_entry
	.quad	4
	.quad	1
	.quad	iloW_str


==================== Asm code ====================
2018-03-16 15:54:59.220701794 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ilp3_str:
	.asciz "base:GHC.Base.C:Alternative"


==================== Asm code ====================
2018-03-16 15:54:59.221802062 UTC

.section .text
.align 8
.globl GHC.Base.C:Alternative_con_entry
.type GHC.Base.C:Alternative_con_entry, @object
GHC.Base.C:Alternative_con_entry:
_clp2:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Base.C:Alternative_con_entry, .-GHC.Base.C:Alternative_con_entry


==================== Asm code ====================
2018-03-16 15:54:59.222348605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Base.C:Alternative_con_info
.type GHC.Base.C:Alternative_con_info, @object
GHC.Base.C:Alternative_con_info:
	.quad	GHC.Base.C:Alternative_con_entry
	.quad	5
	.quad	1
	.quad	ilp3_str


==================== Asm code ====================
2018-03-16 15:54:59.224188222 UTC

.section .data.rel.ro
.align 8
.align 1
Si3a_srt:
	.quad	GHC.Base.$fSemigroupIO_$cstimes_closure
	.quad	GHC.Base.$fSemigroupIO_closure
	.quad	Data.Semigroup.Internal.stimesDefault_closure
	.quad	GHC.Base.$fMonoidIO_$cp1Monoid_closure
	.quad	GHC.IO.mplusIO_closure
	.quad	GHC.Base.$fAlternativeIO2_closure
	.quad	GHC.Base.$fAlternativeIO_$cmany_closure
	.quad	GHC.Base.$fSemigroupNonEmpty_closure
	.quad	GHC.Base.$fMonoidIO_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.failIO_closure
	.quad	Data.Semigroup.Internal.stimesMaybe_closure
	.quad	GHC.Base.$fSemigroupMaybe_closure
	.quad	GHC.Base.$fMonoidMaybe_closure
	.quad	Data.Semigroup.Internal.stimesIdempotentMonoid_closure
	.quad	GHC.Base.$fMonoidOrdering_closure
	.quad	Data.Semigroup.Internal.stimesList_closure
	.quad	GHC.Base.$fAlternativeIO3_closure
	.quad	GHC.Base.$fMonad(,)_closure
	.quad	lvl2_r7PL_closure

