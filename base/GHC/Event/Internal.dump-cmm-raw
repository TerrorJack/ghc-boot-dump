
==================== Raw Cmm ====================
2018-03-16 16:04:26.52063972 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:26.522679498 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9jOc: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9jOd; else goto c9jOe;
       c9jOd: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jOe: // global
           I64[Sp - 40] = block_c9jO9_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$WBackend_info" {
     GHC.Event.Internal.$WBackend_info:
         const GHC.Event.Internal.$WBackend_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _c9jO9() //  [R1]
         { []
         }
     {offset
       c9jO9: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jOh; else goto c9jOg;
       c9jOh: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jOg: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jO9_info" {
     block_c9jO9_info:
         const _c9jO9;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.528877977 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { []
         }
     {offset
       c9jOC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jOG; else goto c9jOH;
       c9jOG: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jOH: // global
           I64[Sp - 8] = block_c9jOz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jOL; else goto c9jOA;
       u9jOL: // global
           call _c9jOz(R1) args: 0, res: 0, upd: 0;
       c9jOA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$WTimeout_info" {
     GHC.Event.Internal.$WTimeout_info:
         const GHC.Event.Internal.$WTimeout_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9jOz() //  [R1]
         { []
         }
     {offset
       c9jOz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jOK; else goto c9jOJ;
       c9jOK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jOJ: // global
           _s9iX5::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9iX5::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jOz_info" {
     block_c9jOz_info:
         const _c9jOz;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.53372696 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.535382487 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.537902532 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { []
         }
     {offset
       c9jP4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jP5; else goto c9jP6;
       c9jP5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jP6: // global
           (_c9jP1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jP1::I64 == 0) goto c9jP3; else goto c9jP2;
       c9jP3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jP2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jP1::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout3_info" {
     GHC.Event.Internal.$fShowTimeout3_info:
         const GHC.Event.Internal.$fShowTimeout3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.541666355 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { []
         }
     {offset
       c9jPi: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout2_info" {
     GHC.Event.Internal.$fShowTimeout2_info:
         const GHC.Event.Internal.$fShowTimeout2_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9j2f_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.544745724 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.552838404 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9iXc_entry() //  [R1]
         { []
         }
     {offset
       c9jPK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jPL; else goto c9jPS;
       c9jPL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jPS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iX9::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iX9::I64, 0)) goto c9jPQ; else goto c9jPR;
       c9jPQ: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9jPR: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . w1_s9iXc_info" {
     w1_s9iXc_info:
         const w1_s9iXc_entry;
         const 4294967296;
         const 17;
 },
 sat_s9iXk_entry() //  [R1]
         { []
         }
     {offset
       c9jQ8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jQ9; else goto c9jQa;
       c9jQ9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jQ5_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iXk_info" {
     sat_s9iXk_info:
         const sat_s9iXk_entry;
         const 2;
         const 4294967314;
         const S9j2f_srt+8;
 },
 _c9jQ5() //  [R1, R2]
         { []
         }
     {offset
       c9jQ5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQd; else goto c9jQc;
       c9jQd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jQc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jQ5_info" {
     block_c9jQ5_info:
         const _c9jQ5;
         const 0;
         const 30;
 },
 sat_s9iXl_entry() //  [R1, R2]
         { []
         }
     {offset
       c9jQe: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jQi; else goto c9jQh;
       c9jQi: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jQh: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9iXk_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9iXl_info" {
     sat_s9iXl_info:
         const sat_s9iXl_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S9j2f_srt+8;
 },
 sat_s9iXr_entry() //  [R1]
         { []
         }
     {offset
       c9jQB: // global
           _s9iXr::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9jQC; else goto c9jQD;
       c9jQD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQF; else goto c9jQE;
       c9jQF: // global
           HpAlloc = 24;
           goto c9jQC;
       c9jQC: // global
           R1 = _s9iXr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXr::P64;
           _s9iXc::P64 = P64[_s9iXr::P64 + 16];
           _s9iXm::P64 = P64[_s9iXr::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9iXm::P64;
           I64[Sp - 24] = block_c9jQy_info;
           R4 = Hp - 14;
           R3 = _s9iXc::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iXr_info" {
     sat_s9iXr_info:
         const sat_s9iXr_entry;
         const 2;
         const 4294967314;
         const S9j2f_srt+8;
 },
 _c9jQy() //  [R1, R2]
         { []
         }
     {offset
       c9jQy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQI; else goto c9jQH;
       c9jQI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jQH: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jQy_info" {
     block_c9jQy_info:
         const _c9jQy;
         const 0;
         const 30;
 },
 sat_s9iXs_entry() //  [R1]
         { []
         }
     {offset
       c9jQJ: // global
           _s9iXs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9jQK; else goto c9jQL;
       c9jQL: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jQN; else goto c9jQM;
       c9jQN: // global
           HpAlloc = 32;
           goto c9jQK;
       c9jQK: // global
           R1 = _s9iXs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXs::P64;
           _s9iXc::P64 = P64[_s9iXs::P64 + 16];
           _s9iXm::P64 = P64[_s9iXs::P64 + 24];
           I64[Hp - 24] = sat_s9iXr_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = _s9iXm::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iXs_info" {
     sat_s9iXs_info:
         const sat_s9iXs_entry;
         const 2;
         const 4294967314;
         const S9j2f_srt+8;
 },
 sat_s9iXt_entry() //  [R1, R2]
         { []
         }
     {offset
       c9jQP: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9jQT; else goto c9jQS;
       c9jQT: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jQS: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9iXs_info;
           P64[Hp - 32] = _s9iXc::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9iXt_info" {
     sat_s9iXt_info:
         const sat_s9iXt_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S9j2f_srt+8;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c9jQY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jQZ; else goto c9jR0;
       c9jQZ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jR0: // global
           I64[Sp - 16] = block_c9jPu_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jRc; else goto c9jPv;
       u9jRc: // global
           call _c9jPu(R1) args: 0, res: 0, upd: 0;
       c9jPv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S9j2f_srt+8;
 },
 _c9jPu() //  [R1]
         { []
         }
     {offset
       c9jPu: // global
           if (R1 & 7 == 1) goto c9jQV; else goto c9jQW;
       c9jQV: // global
           I64[Sp] = block_c9jPz_info;
           _s9iX9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9iX9::I64;
           if (R1 & 7 != 0) goto u9jRb; else goto c9jPA;
       u9jRb: // global
           call _c9jPz(R1) args: 0, res: 0, upd: 0;
       c9jPA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jQW: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jPu_info" {
     block_c9jPu_info:
         const _c9jPu;
         const 1;
         const 21474836510;
         const S9j2f_srt+8;
 },
 _c9jPz() //  [R1]
         { []
         }
     {offset
       c9jPz: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9jR4; else goto c9jR3;
       c9jR4: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jR3: // global
           _s9iXb::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9iXc_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9jPE::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9iXb::I64, 11)) goto c9jR6; else goto c9jR7;
       c9jR6: // global
           I64[Hp - 8] = sat_s9iXl_info;
           P64[Hp] = _c9jPE::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jR7: // global
           I64[Hp - 8] = sat_s9iXt_info;
           P64[Hp] = _c9jPE::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jPz_info" {
     block_c9jPz_info:
         const _c9jPz;
         const 65;
         const 4294967326;
         const S9j2f_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.576200207 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9iXH_entry() //  [R1]
         { []
         }
     {offset
       c9jSh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jSi; else goto c9jSN;
       c9jSi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jSN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iXw::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iXw::I64, 0)) goto c9jSv; else goto c9jSI;
       c9jSv: // global
           I64[Sp - 24] = block_c9jSn_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9jSI: // global
           I64[Sp - 24] = block_c9jSB_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iXH_info" {
     sat_s9iXH_info:
         const sat_s9iXH_entry;
         const 4294967296;
         const 4294967313;
         const S9j2f_srt+8;
 },
 _c9jSn() //  [R1]
         { []
         }
     {offset
       c9jSn: // global
           I64[Sp] = block_c9jSr_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jSn_info" {
     block_c9jSn_info:
         const _c9jSn;
         const 0;
         const 4294967326;
         const S9j2f_srt+8;
 },
 _c9jSr() //  [R1, R2]
         { []
         }
     {offset
       c9jSr: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSz; else goto c9jSy;
       c9jSz: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jSy: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jSr_info" {
     block_c9jSr_info:
         const _c9jSr;
         const 0;
         const 30;
 },
 _c9jSB() //  [R1]
         { []
         }
     {offset
       c9jSB: // global
           I64[Sp] = block_c9jSF_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jSB_info" {
     block_c9jSB_info:
         const _c9jSB;
         const 0;
         const 4294967326;
         const S9j2f_srt+8;
 },
 _c9jSF() //  [R1, R2]
         { []
         }
     {offset
       c9jSF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSM; else goto c9jSL;
       c9jSM: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jSL: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jSF_info" {
     block_c9jSF_info:
         const _c9jSF;
         const 0;
         const 30;
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9jSS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jST; else goto c9jSU;
       c9jST: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jSU: // global
           I64[Sp - 8] = block_c9jS6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jT1; else goto c9jS7;
       u9jT1: // global
           call _c9jS6(R1) args: 0, res: 0, upd: 0;
       c9jS7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshow_info" {
     GHC.Event.Internal.$fShowTimeout_$cshow_info:
         const GHC.Event.Internal.$fShowTimeout_$cshow_entry;
         const 0;
         const 81604378638;
         const 4294967301;
         const S9j2f_srt;
 },
 _c9jS6() //  [R1]
         { []
         }
     {offset
       c9jS6: // global
           if (R1 & 7 == 1) goto c9jSP; else goto c9jSQ;
       c9jSP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSX; else goto c9jSW;
       c9jSX: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jSW: // global
           _s9iXw::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9iXH_info;
           I64[Hp] = _s9iXw::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9jSQ: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jS6_info" {
     block_c9jS6_info:
         const _c9jS6;
         const 0;
         const 12884901918;
         const S9j2f_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.590019374 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { []
         }
     {offset
       c9jTA: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout1_info" {
     GHC.Event.Internal.$fShowTimeout1_info:
         const GHC.Event.Internal.$fShowTimeout1_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9j2f_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.597271632 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9jTL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshowList_info" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_info:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9j2f_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.600964097 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.602996179 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.609517821 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9iXT_entry() //  [R1]
         { []
         }
     {offset
       c9jU8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jUe; else goto c9jUf;
       c9jUe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9jU5_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9jUk; else goto c9jU6;
       u9jUk: // global
           call _c9jU5(R1) args: 0, res: 0, upd: 0;
       c9jU6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iXT_info" {
     sat_s9iXT_info:
         const sat_s9iXT_entry;
         const 2;
         const 18;
 },
 _c9jU5() //  [R1]
         { []
         }
     {offset
       c9jU5: // global
           _s9iXM::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jUb_info;
           R4 = _s9iXM::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jU5_info" {
     block_c9jU5_info:
         const _c9jU5;
         const 1;
         const 30;
 },
 _c9jUb() //  [R1, R2]
         { []
         }
     {offset
       c9jUb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUj; else goto c9jUi;
       c9jUj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jUi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jUb_info" {
     block_c9jUb_info:
         const _c9jUb;
         const 0;
         const 30;
 },
 sat_s9iY0_entry() //  [R1]
         { []
         }
     {offset
       c9jUx: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jUE; else goto c9jUF;
       c9jUE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9jUu_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9jUM; else goto c9jUv;
       u9jUM: // global
           call _c9jUu(R1) args: 0, res: 0, upd: 0;
       c9jUv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iY0_info" {
     sat_s9iY0_info:
         const sat_s9iY0_entry;
         const 2;
         const 18;
 },
 _c9jUu() //  [R1]
         { []
         }
     {offset
       c9jUu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUI; else goto c9jUH;
       c9jUI: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9jUH: // global
           _s9iXV::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9jUB_info;
           R4 = Hp - 14;
           R3 = _s9iXV::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jUu_info" {
     block_c9jUu_info:
         const _c9jUu;
         const 1;
         const 30;
 },
 _c9jUB() //  [R1, R2]
         { []
         }
     {offset
       c9jUB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUL; else goto c9jUK;
       c9jUL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jUK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jUB_info" {
     block_c9jUB_info:
         const _c9jUB;
         const 0;
         const 30;
 },
 sat_s9iY1_entry() //  [R1]
         { []
         }
     {offset
       c9jUN: // global
           _s9iY1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9jUO; else goto c9jUP;
       c9jUP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jUR; else goto c9jUQ;
       c9jUR: // global
           HpAlloc = 32;
           goto c9jUO;
       c9jUO: // global
           R1 = _s9iY1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iY1::P64;
           _s9iXL::P64 = P64[_s9iY1::P64 + 16];
           _s9iXM::P64 = P64[_s9iY1::P64 + 24];
           I64[Hp - 24] = sat_s9iY0_info;
           P64[Hp - 8] = _s9iXL::P64;
           P64[Hp] = _s9iXM::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iY1_info" {
     sat_s9iY1_info:
         const sat_s9iY1_entry;
         const 2;
         const 18;
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9jUV: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9jUZ; else goto c9jUY;
       c9jUZ: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jUY: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9jUT; else goto c9jUU;
       c9jUT: // global
           I64[Hp - 48] = sat_s9iXT_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9jU1::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9jU1::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9jUU: // global
           I64[Hp - 48] = sat_s9iY1_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$w$cshowsPrec_info" {
     GHC.Event.Internal.$w$cshowsPrec_info:
         const GHC.Event.Internal.$w$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901907;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.628319346 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c9jVH: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jVI; else goto c9jVJ;
       c9jVI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jVJ: // global
           I64[Sp - 24] = block_c9jVE_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jVN; else goto c9jVF;
       u9jVN: // global
           call _c9jVE(R1) args: 0, res: 0, upd: 0;
       c9jVF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c9jVE() //  [R1]
         { []
         }
     {offset
       c9jVE: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jVE_info" {
     block_c9jVE_info:
         const _c9jVE;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.63599509 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9iYd_entry() //  [R1]
         { []
         }
     {offset
       c9jW8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jWe; else goto c9jWf;
       c9jWe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jWf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jW5_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jWk; else goto c9jW6;
       u9jWk: // global
           call _c9jW5(R1) args: 0, res: 0, upd: 0;
       c9jW6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iYd_info" {
     sat_s9iYd_info:
         const sat_s9iYd_entry;
         const 1;
         const 16;
 },
 _c9jW5() //  [R1]
         { []
         }
     {offset
       c9jW5: // global
           I64[Sp] = block_c9jWb_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jW5_info" {
     block_c9jW5_info:
         const _c9jW5;
         const 0;
         const 30;
 },
 _c9jWb() //  [R1, R2]
         { []
         }
     {offset
       c9jWb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jWj; else goto c9jWi;
       c9jWj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jWi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9jWb_info" {
     block_c9jWb_info:
         const _c9jWb;
         const 0;
         const 30;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9jWl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jWp; else goto c9jWo;
       c9jWp: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jWo: // global
           I64[Hp - 16] = sat_s9iYd_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshow_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.645598982 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9jWK: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime1_info" {
     GHC.Event.Internal.$fShowEventLifetime1_info:
         const GHC.Event.Internal.$fShowEventLifetime1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.648938175 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       c9jWV: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.651990727 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.655644961 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c9jXe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jXf; else goto c9jXg;
       c9jXf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jXg: // global
           I64[Sp - 16] = block_c9jX7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jXT; else goto c9jX8;
       u9jXT: // global
           call _c9jX7(R1) args: 0, res: 0, upd: 0;
       c9jX8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fEqLifetime_$c==_info" {
     GHC.Event.Internal.$fEqLifetime_$c==_info:
         const GHC.Event.Internal.$fEqLifetime_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9jX7() //  [R1]
         { []
         }
     {offset
       c9jX7: // global
           _s9iYj::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jXb; else goto c9jXc;
       c9jXb: // global
           I64[Sp + 8] = block_c9jXj_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jXR; else goto c9jXl;
       u9jXR: // global
           call _c9jXj(R1) args: 0, res: 0, upd: 0;
       c9jXl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jXc: // global
           I64[Sp + 8] = block_c9jXy_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jXS; else goto c9jXA;
       u9jXS: // global
           call _c9jXy(R1) args: 0, res: 0, upd: 0;
       c9jXA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jX7_info" {
     block_c9jX7_info:
         const _c9jX7;
         const 1;
         const 30;
 },
 _c9jXj() //  [R1]
         { []
         }
     {offset
       c9jXj: // global
           if (R1 & 7 == 1) goto u9jXP; else goto u9jXQ;
       u9jXP: // global
           Sp = Sp + 8;
           call _c9jXK() args: 0, res: 0, upd: 0;
       u9jXQ: // global
           Sp = Sp + 8;
           call _c9jXG() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9jXj_info" {
     block_c9jXj_info:
         const _c9jXj;
         const 0;
         const 30;
 },
 _c9jXy() //  [R1]
         { []
         }
     {offset
       c9jXy: // global
           if (R1 & 7 == 1) goto u9jXN; else goto u9jXO;
       u9jXN: // global
           Sp = Sp + 8;
           call _c9jXG() args: 0, res: 0, upd: 0;
       u9jXO: // global
           Sp = Sp + 8;
           call _c9jXK() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9jXy_info" {
     block_c9jXy_info:
         const _c9jXy;
         const 0;
         const 30;
 },
 _c9jXG() //  []
         { []
         }
     {offset
       c9jXG: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jXK() //  []
         { []
         }
     {offset
       c9jXK: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.666956857 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c9jYC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jYD; else goto c9jYE;
       c9jYD: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jYE: // global
           I64[Sp - 16] = block_c9jYv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jZh; else goto c9jYw;
       u9jZh: // global
           call _c9jYv(R1) args: 0, res: 0, upd: 0;
       c9jYw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fEqLifetime_$c/=_info" {
     GHC.Event.Internal.$fEqLifetime_$c/=_info:
         const GHC.Event.Internal.$fEqLifetime_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9jYv() //  [R1]
         { []
         }
     {offset
       c9jYv: // global
           _s9iYo::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jYz; else goto c9jYA;
       c9jYz: // global
           I64[Sp + 8] = block_c9jYH_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jZf; else goto c9jYJ;
       u9jZf: // global
           call _c9jYH(R1) args: 0, res: 0, upd: 0;
       c9jYJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jYA: // global
           I64[Sp + 8] = block_c9jYW_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jZg; else goto c9jYY;
       u9jZg: // global
           call _c9jYW(R1) args: 0, res: 0, upd: 0;
       c9jYY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9jYv_info" {
     block_c9jYv_info:
         const _c9jYv;
         const 1;
         const 30;
 },
 _c9jYH() //  [R1]
         { []
         }
     {offset
       c9jYH: // global
           if (R1 & 7 == 1) goto u9jZd; else goto u9jZe;
       u9jZd: // global
           Sp = Sp + 8;
           call _c9jZ8() args: 0, res: 0, upd: 0;
       u9jZe: // global
           Sp = Sp + 8;
           call _c9jZ4() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9jYH_info" {
     block_c9jYH_info:
         const _c9jYH;
         const 0;
         const 30;
 },
 _c9jYW() //  [R1]
         { []
         }
     {offset
       c9jYW: // global
           if (R1 & 7 == 1) goto u9jZb; else goto u9jZc;
       u9jZb: // global
           Sp = Sp + 8;
           call _c9jZ4() args: 0, res: 0, upd: 0;
       u9jZc: // global
           Sp = Sp + 8;
           call _c9jZ8() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9jYW_info" {
     block_c9jYW_info:
         const _c9jYW;
         const 0;
         const 30;
 },
 _c9jZ4() //  []
         { []
         }
     {offset
       c9jZ4: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jZ8() //  []
         { []
         }
     {offset
       c9jZ8: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.676548215 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.678582705 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.680703659 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { []
         }
     {offset
       c9jZX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jZY; else goto c9jZZ;
       c9jZY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jZZ: // global
           (_c9jZU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jZU::I64 == 0) goto c9jZW; else goto c9jZV;
       c9jZW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jZV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jZU::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime4_info" {
     GHC.Event.Internal.$fShowLifetime4_info:
         const GHC.Event.Internal.$fShowLifetime4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.684227092 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.686779655 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { []
         }
     {offset
       c9k0e: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k0f; else goto c9k0g;
       c9k0f: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k0g: // global
           (_c9k0b::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k0b::I64 == 0) goto c9k0d; else goto c9k0c;
       c9k0d: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k0c: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k0b::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime2_info" {
     GHC.Event.Internal.$fShowLifetime2_info:
         const GHC.Event.Internal.$fShowLifetime2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.691260518 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c9k0z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k0A; else goto c9k0B;
       c9k0A: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k0B: // global
           I64[Sp - 16] = block_c9k0s_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k0I; else goto c9k0t;
       u9k0I: // global
           call _c9k0s(R1) args: 0, res: 0, upd: 0;
       c9k0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 12884901911;
         const S9j2f_srt+48;
 },
 _c9k0s() //  [R1]
         { []
         }
     {offset
       c9k0s: // global
           _s9iYu::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k0w; else goto c9k0x;
       c9k0w: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9k0x: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k0s_info" {
     block_c9k0s_info:
         const _c9k0s;
         const 1;
         const 12884901918;
         const S9j2f_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.697210187 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9k15: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k16; else goto c9k17;
       c9k16: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k17: // global
           I64[Sp - 8] = block_c9k0Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k1e; else goto c9k0Z;
       u9k1e: // global
           call _c9k0Y(R1) args: 0, res: 0, upd: 0;
       c9k0Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshow_info" {
     GHC.Event.Internal.$fShowLifetime_$cshow_info:
         const GHC.Event.Internal.$fShowLifetime_$cshow_entry;
         const 0;
         const 47244640270;
         const 4294967301;
         const S9j2f_srt+48;
 },
 _c9k0Y() //  [R1]
         { []
         }
     {offset
       c9k0Y: // global
           if (R1 & 7 == 1) goto c9k12; else goto c9k13;
       c9k12: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k13: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k0Y_info" {
     block_c9k0Y_info:
         const _c9k0Y;
         const 0;
         const 12884901918;
         const S9j2f_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.703168124 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9k1D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k1E; else goto c9k1F;
       c9k1E: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k1F: // global
           I64[Sp - 16] = block_c9k1w_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k1M; else goto c9k1x;
       u9k1M: // global
           call _c9k1w(R1) args: 0, res: 0, upd: 0;
       c9k1x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime1_info" {
     GHC.Event.Internal.$fShowLifetime1_info:
         const GHC.Event.Internal.$fShowLifetime1_entry;
         const 0;
         const 81604378638;
         const 8589934607;
         const S9j2f_srt+48;
 },
 _c9k1w() //  [R1]
         { []
         }
     {offset
       c9k1w: // global
           _s9iYz::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k1A; else goto c9k1B;
       c9k1A: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9k1B: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k1w_info" {
     block_c9k1w_info:
         const _c9k1w;
         const 1;
         const 12884901918;
         const S9j2f_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.708890707 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9k22: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshowList_info" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_info:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9j2f_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.711950718 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.713884976 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.715463295 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.717142401 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.718809731 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.720393384 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.722092306 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.723810168 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.725829727 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.727478701 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.729083788 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.730813015 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.732959411 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.736186228 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { []
         }
     {offset
       c9k2x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k2y; else goto c9k2z;
       c9k2y: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k2z: // global
           I64[Sp - 16] = block_c9k2q_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k2G; else goto c9k2r;
       u9k2G: // global
           call _c9k2q(R1) args: 0, res: 0, upd: 0;
       c9k2r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elSupremum_info" {
     GHC.Event.Internal.elSupremum_info:
         const GHC.Event.Internal.elSupremum_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9k2q() //  [R1]
         { []
         }
     {offset
       c9k2q: // global
           if (R1 & 7 == 1) goto c9k2u; else goto c9k2v;
       c9k2u: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k2v: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k2q_info" {
     block_c9k2q_info:
         const _c9k2q;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.742600715 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9k36: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9k37; else goto u9k3s;
       c9k37: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9k3s: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9k2W() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_go_info" {
     GHC.Event.Internal.$fSemigroupLifetime_go_info:
         const GHC.Event.Internal.$fSemigroupLifetime_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9k2W() //  []
         { []
         }
     {offset
       c9k2W: // global
           I64[Sp - 8] = block_c9k2Z_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k3u; else goto c9k30;
       u9k3u: // global
           call _c9k2Z(R1) args: 0, res: 0, upd: 0;
       c9k30: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k2Z() //  [R1]
         { []
         }
     {offset
       c9k2Z: // global
           _s9iYG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k33; else goto c9k34;
       c9k33: // global
           R1 = _s9iYG::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k34: // global
           I64[Sp] = block_c9k3e_info;
           _s9iYJ::P64 = P64[R1 + 6];
           _s9iYK::P64 = P64[R1 + 14];
           R1 = _s9iYG::P64;
           P64[Sp + 8] = _s9iYK::P64;
           P64[Sp + 16] = _s9iYJ::P64;
           if (R1 & 7 != 0) goto u9k3v; else goto c9k3g;
       u9k3v: // global
           call _c9k3e(R1) args: 0, res: 0, upd: 0;
       c9k3g: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k2Z_info" {
     block_c9k2Z_info:
         const _c9k2Z;
         const 130;
         const 30;
 },
 _c9k3e() //  [R1]
         { []
         }
     {offset
       c9k3e: // global
           if (R1 & 7 == 1) goto c9k3m; else goto c9k3q;
       c9k3m: // global
           _s9iYH::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9iYH::P64;
           Sp = Sp + 8;
           call _c9k2W() args: 0, res: 0, upd: 0;
       c9k3q: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k3e_info" {
     block_c9k3e_info:
         const _c9k3e;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.750833745 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9k42: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k43; else goto c9k44;
       c9k43: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k44: // global
           I64[Sp - 8] = block_c9k3Z_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k48; else goto c9k40;
       u9k48: // global
           call _c9k3Z(R1) args: 0, res: 0, upd: 0;
       c9k40: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k3Z() //  [R1]
         { []
         }
     {offset
       c9k3Z: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k3Z_info" {
     block_c9k3Z_info:
         const _c9k3Z;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.7568211 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { []
         }
     {offset
       c9k4t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k4u; else goto u9k4P;
       c9k4u: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9k4P: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9k4j() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fMonoidLifetime_go_info" {
     GHC.Event.Internal.$fMonoidLifetime_go_info:
         const GHC.Event.Internal.$fMonoidLifetime_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k4j() //  []
         { []
         }
     {offset
       c9k4j: // global
           _s9iYQ::P64 = P64[Sp];
           I64[Sp] = block_c9k4m_info;
           R1 = _s9iYQ::P64;
           if (R1 & 7 != 0) goto u9k4R; else goto c9k4n;
       u9k4R: // global
           call _c9k4m(R1) args: 0, res: 0, upd: 0;
       c9k4n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k4m() //  [R1]
         { []
         }
     {offset
       c9k4m: // global
           if (R1 & 7 == 1) goto c9k4q; else goto c9k4r;
       c9k4q: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9k4r: // global
           I64[Sp - 8] = block_c9k4B_info;
           _s9iYT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iYT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k4S; else goto c9k4D;
       u9k4S: // global
           call _c9k4B(R1) args: 0, res: 0, upd: 0;
       c9k4D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k4m_info" {
     block_c9k4m_info:
         const _c9k4m;
         const 0;
         const 30;
 },
 _c9k4B() //  [R1]
         { []
         }
     {offset
       c9k4B: // global
           if (R1 & 7 == 1) goto c9k4J; else goto c9k4N;
       c9k4J: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9k4j() args: 0, res: 0, upd: 0;
       c9k4N: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k4B_info" {
     block_c9k4B_info:
         const _c9k4B;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.764500061 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { []
         }
     {offset
       c9k5l: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S9j2f_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.770051122 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9k5y: // global
           _s9iZ0::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9iZ0::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.backend_info" {
     GHC.Event.Internal.backend_info:
         const GHC.Event.Internal.backend_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.774065956 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { []
         }
     {offset
       c9k5M: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k5N; else goto c9k5O;
       c9k5N: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k5O: // global
           I64[Sp - 8] = block_c9k5J_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k5S; else goto c9k5K;
       u9k5S: // global
           call _c9k5J(R1) args: 0, res: 0, upd: 0;
       c9k5K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.poll_info" {
     GHC.Event.Internal.poll_info:
         const GHC.Event.Internal.poll_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k5J() //  [R1]
         { []
         }
     {offset
       c9k5J: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k5J_info" {
     block_c9k5J_info:
         const _c9k5J;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.779290382 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { []
         }
     {offset
       c9k69: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6a; else goto c9k6b;
       c9k6a: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6b: // global
           I64[Sp - 8] = block_c9k66_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6f; else goto c9k67;
       u9k6f: // global
           call _c9k66(R1) args: 0, res: 0, upd: 0;
       c9k67: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.modifyFd_info" {
     GHC.Event.Internal.modifyFd_info:
         const GHC.Event.Internal.modifyFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k66() //  [R1]
         { []
         }
     {offset
       c9k66: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k66_info" {
     block_c9k66_info:
         const _c9k66;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.784667179 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { []
         }
     {offset
       c9k6w: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6x; else goto c9k6y;
       c9k6x: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6y: // global
           I64[Sp - 8] = block_c9k6t_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6C; else goto c9k6u;
       u9k6C: // global
           call _c9k6t(R1) args: 0, res: 0, upd: 0;
       c9k6u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.modifyFdOnce_info" {
     GHC.Event.Internal.modifyFdOnce_info:
         const GHC.Event.Internal.modifyFdOnce_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k6t() //  [R1]
         { []
         }
     {offset
       c9k6t: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k6t_info" {
     block_c9k6t_info:
         const _c9k6t;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.790140074 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { []
         }
     {offset
       c9k6T: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6U; else goto c9k6V;
       c9k6U: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6V: // global
           I64[Sp - 8] = block_c9k6Q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6Z; else goto c9k6R;
       u9k6Z: // global
           call _c9k6Q(R1) args: 0, res: 0, upd: 0;
       c9k6R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.delete_info" {
     GHC.Event.Internal.delete_info:
         const GHC.Event.Internal.delete_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9k6Q() //  [R1]
         { []
         }
     {offset
       c9k6Q: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k6Q_info" {
     block_c9k6Q_info:
         const _c9k6Q;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.7953523 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { []
         }
     {offset
       c9k7f: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k7g; else goto c9k7h;
       c9k7g: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7h: // global
           (_c9k7c::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k7c::I64 == 0) goto c9k7e; else goto c9k7d;
       c9k7e: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k7d: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k7c::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.798829698 UTC

[section ""data" . sat_s9iZt_closure" {
     sat_s9iZt_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.800982319 UTC

[section ""data" . sat_s9iZu_closure" {
     sat_s9iZu_closure:
         const :_con_info;
         const sat_s9iZt_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.803231368 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { []
         }
     {offset
       c9k7x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k7y; else goto c9k7z;
       c9k7y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7z: // global
           (_c9k7u::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k7u::I64 == 0) goto c9k7w; else goto c9k7v;
       c9k7w: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k7v: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k7u::I64;
           R3 = sat_s9iZu_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry;
         const 0;
         const 4294967317;
         const S9j2f_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.810043781 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9iZD_entry() //  [R1]
         { []
         }
     {offset
       c9k7V: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9k7W; else goto c9k7X;
       c9k7W: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7X: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iZD_info" {
     sat_s9iZD_info:
         const sat_s9iZD_entry;
         const 1;
         const 4294967312;
         const S9j2f_srt+112;
 },
 sat_s9iZE_entry() //  [R1]
         { []
         }
     {offset
       c9k7Y: // global
           _s9iZE::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9k7Z; else goto c9k80;
       c9k80: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k82; else goto c9k81;
       c9k82: // global
           HpAlloc = 24;
           goto c9k7Z;
       c9k7Z: // global
           R1 = _s9iZE::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k81: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iZE::P64;
           _s9iZw::P64 = P64[_s9iZE::P64 + 16];
           I64[Hp - 16] = sat_s9iZD_info;
           P64[Hp] = _s9iZw::P64;
           R2 = _s9iZw::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iZE_info" {
     sat_s9iZE_info:
         const sat_s9iZE_entry;
         const 1;
         const 4294967312;
         const S9j2f_srt+112;
 },
 sat_s9iZL_entry() //  [R1]
         { []
         }
     {offset
       c9k8k: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9k8l; else goto c9k8m;
       c9k8l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k8m: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9iZL_info" {
     sat_s9iZL_info:
         const sat_s9iZL_entry;
         const 1;
         const 4294967312;
         const S9j2f_srt+120;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { []
         }
     {offset
       c9k8r: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9k8s; else goto c9k8t;
       c9k8s: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k8t: // global
           I64[Sp - 32] = block_c9k7L_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry;
         const 0;
         const 64424509454;
         const 21474836504;
         const S9j2f_srt+112;
 },
 _c9k7L() //  [R1]
         { []
         }
     {offset
       c9k7L: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k8w; else goto c9k8v;
       c9k8w: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9k8v: // global
           I64[Hp - 16] = sat_s9iZE_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9k83_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9k7L_info" {
     block_c9k7L_info:
         const _c9k7L;
         const 3;
         const 30064771102;
         const S9j2f_srt+112;
 },
 _c9k83() //  [R1]
         { []
         }
     {offset
       c9k83: // global
           if (R1 & 7 == 1) goto c9k8o; else goto c9k8p;
       c9k8o: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9k8p: // global
           _s9iZx::P64 = P64[Sp + 24];
           (_s9iZJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9iZK::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9iZJ::I64));
           if (_s9iZK::I64 != 4) goto c9k8C; else goto u9k8K;
       c9k8C: // global
           R2 = _s9iZx::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9k8K: // global
           I64[Sp + 24] = _s9iZK::I64;
           Sp = Sp + 16;
           call _c9k8e() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9k83_info" {
     block_c9k83_info:
         const _c9k83;
         const 3;
         const 12884901918;
         const S9j2f_srt+120;
 },
 _c9k8e() //  []
         { []
         }
     {offset
       c9k8e: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k8J; else goto c9k8I;
       c9k8J: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9k8d_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9k8I: // global
           I64[Hp - 16] = sat_s9iZL_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9k8d() //  [R1]
         { []
         }
     {offset
       c9k8d: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9k8e() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9k8d_info" {
     block_c9k8d_info:
         const _c9k8d;
         const 130;
         const 4294967326;
         const S9j2f_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.824488304 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { []
         }
     {offset
       c9k9s: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S9j2f_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.827659273 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.8294107 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.830979391 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.83260198 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.834779913 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.836489014 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.838952038 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.840686563 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.842368136 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.844047278 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.845815312 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.847464832 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.849142665 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.850803103 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.852487708 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.854625041 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.856326762 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.857943665 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.860154843 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.861847553 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.863607832 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.865355818 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.867042637 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.868793726 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.871037797 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.872773883 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.874485612 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.876092238 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.87812198 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.87974798 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.881466375 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.883188247 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.885429122 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.887105414 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.888792985 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.890838023 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.892402005 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.894111799 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.895909383 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.897820868 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.899431053 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.901068646 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.902835225 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.904481463 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.90626117 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.907965384 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.912230788 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.914741328 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.917170327 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.919204165 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.921114829 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.923641827 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.925522039 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.927511878 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.929330855 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.931396655 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.933775923 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.935937016 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.937973325 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.939988518 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.942018849 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.944411263 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.946356296 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.947997196 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.949743513 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.951431889 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.953086124 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.954762906 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.956388949 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.958318455 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.959991722 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.961743713 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.963390341 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.965029146 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.966680814 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.968892706 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.970985072 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.972620313 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.974172288 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.975880103 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.97758401 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.979235355 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.982273649 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { []
         }
     {offset
       c9kb0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kb7; else goto c9kb8;
       c9kb7: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kb8: // global
           I64[Sp - 8] = block_c9kaX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kbc; else goto c9kaY;
       u9kbc: // global
           call _c9kaX(R1) args: 0, res: 0, upd: 0;
       c9kaY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . elEvent1_r9iWU_info" {
     elEvent1_r9iWU_info:
         const elEvent1_r9iWU_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kaX() //  [R1]
         { []
         }
     {offset
       c9kaX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kbb; else goto c9kba;
       c9kbb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kba: // global
           _s9iZP::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9iZP::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kaX_info" {
     block_c9kaX_info:
         const _c9kaX;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.98733878 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { []
         }
     {offset
       c9kbs: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elEvent_info" {
     GHC.Event.Internal.elEvent_info:
         const GHC.Event.Internal.elEvent_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:26.991487152 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kbK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kbL; else goto c9kbM;
       c9kbL: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kbM: // global
           I64[Sp - 16] = block_c9kbD_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kc6; else goto c9kbE;
       u9kc6: // global
           call _c9kbD(R1) args: 0, res: 0, upd: 0;
       c9kbE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo2_info" {
     GHC.Event.Internal.$wgo2_info:
         const GHC.Event.Internal.$wgo2_entry;
         const 0;
         const 14;
         const 8589934605;
 },
 _c9kbD() //  [R1]
         { []
         }
     {offset
       c9kbD: // global
           if (R1 & 7 == 1) goto c9kbH; else goto c9kbI;
       c9kbH: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kbI: // global
           I64[Sp - 8] = block_c9kbS_info;
           _s9iZU::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iZU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kc5; else goto c9kbT;
       u9kc5: // global
           call _c9kbS(R1) args: 0, res: 0, upd: 0;
       c9kbT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kbD_info" {
     block_c9kbD_info:
         const _c9kbD;
         const 65;
         const 30;
 },
 _c9kbS() //  [R1]
         { []
         }
     {offset
       c9kbS: // global
           _s9iZU::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kbX_info;
           R3 = _s9iZU::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kbS_info" {
     block_c9kbS_info:
         const _c9kbS;
         const 130;
         const 30;
 },
 _c9kbX() //  [R1]
         { []
         }
     {offset
       c9kbX: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kbX_info" {
     block_c9kbX_info:
         const _c9kbX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.001673622 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kcz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kcH; else goto c9kcI;
       c9kcH: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kcI: // global
           I64[Sp - 16] = block_c9kcw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kcN; else goto c9kcx;
       u9kcN: // global
           call _c9kcw(R1) args: 0, res: 0, upd: 0;
       c9kcx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_go_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kcw() //  [R1]
         { []
         }
     {offset
       c9kcw: // global
           _s9iZZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kcC_info;
           R3 = _s9iZZ::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kcw_info" {
     block_c9kcw_info:
         const _c9kcw;
         const 1;
         const 30;
 },
 _c9kcC() //  [R1]
         { []
         }
     {offset
       c9kcC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kcM; else goto c9kcL;
       c9kcM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kcL: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kcC_info" {
     block_c9kcC_info:
         const _c9kcC;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.008303233 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9kd8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kd9; else goto c9kda;
       c9kd9: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kda: // global
           I64[Sp - 8] = block_c9kd5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kde; else goto c9kd6;
       u9kde: // global
           call _c9kd5(R1) args: 0, res: 0, upd: 0;
       c9kd6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kd5() //  [R1]
         { []
         }
     {offset
       c9kd5: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kd5_info" {
     block_c9kd5_info:
         const _c9kd5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.01327935 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       c9kds: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9j2f_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.018348029 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { []
         }
     {offset
       c9kdL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kdM; else goto c9kdN;
       c9kdM: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kdN: // global
           I64[Sp - 8] = block_c9kdE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ke7; else goto c9kdF;
       u9ke7: // global
           call _c9kdE(R1) args: 0, res: 0, upd: 0;
       c9kdF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo1_info" {
     GHC.Event.Internal.$wgo1_info:
         const GHC.Event.Internal.$wgo1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kdE() //  [R1]
         { []
         }
     {offset
       c9kdE: // global
           if (R1 & 7 == 1) goto c9kdI; else goto c9kdJ;
       c9kdI: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kdJ: // global
           I64[Sp - 8] = block_c9kdT_info;
           _s9j0b::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0b::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ke6; else goto c9kdU;
       u9ke6: // global
           call _c9kdT(R1) args: 0, res: 0, upd: 0;
       c9kdU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kdE_info" {
     block_c9kdE_info:
         const _c9kdE;
         const 0;
         const 30;
 },
 _c9kdT() //  [R1]
         { []
         }
     {offset
       c9kdT: // global
           I64[Sp] = block_c9kdY_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kdT_info" {
     block_c9kdT_info:
         const _c9kdT;
         const 1;
         const 30;
 },
 _c9kdY() //  [R1]
         { []
         }
     {offset
       c9kdY: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kdY_info" {
     block_c9kdY_info:
         const _c9kdY;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.026609679 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { []
         }
     {offset
       c9keA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9keE; else goto c9keF;
       c9keE: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9keF: // global
           I64[Sp - 8] = block_c9key_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fMonoidEventLifetime_go_info" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_info:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9key() //  [R1]
         { []
         }
     {offset
       c9key: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9keI; else goto c9keH;
       c9keI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9keH: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9key_info" {
     block_c9key_info:
         const _c9key;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.032780947 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.035387822 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { []
         }
     {offset
       c9kf0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kf1; else goto c9kf2;
       c9kf1: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kf2: // global
           I64[Sp - 8] = block_c9keX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kfl; else goto c9keY;
       u9kfl: // global
           call _c9keX(R1) args: 0, res: 0, upd: 0;
       c9keY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elLifetime_info" {
     GHC.Event.Internal.elLifetime_info:
         const GHC.Event.Internal.elLifetime_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9keX() //  [R1]
         { []
         }
     {offset
       c9keX: // global
           if (I64[R1 + 7] & 8 == 0) goto c9kfh; else goto c9kfb;
       c9kfh: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kfb: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9keX_info" {
     block_c9keX_info:
         const _c9keX;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.041751802 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kfF: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kfG; else goto c9kfH;
       c9kfG: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kfH: // global
           I64[Sp - 16] = block_c9kfC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kg5; else goto c9kfD;
       u9kg5: // global
           call _c9kfC(R1) args: 0, res: 0, upd: 0;
       c9kfD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . eventLifetime1_r9iWV_info" {
     eventLifetime1_r9iWV_info:
         const eventLifetime1_r9iWV_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kfC() //  [R1]
         { []
         }
     {offset
       c9kfC: // global
           I64[Sp - 8] = block_c9kfK_info;
           _s9j0n::P64 = R1;
           _s9j0o::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9j0o::I64;
           P64[Sp + 8] = _s9j0n::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kg4; else goto c9kfM;
       u9kg4: // global
           call _c9kfK(R1) args: 0, res: 0, upd: 0;
       c9kfM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kfC_info" {
     block_c9kfC_info:
         const _c9kfC;
         const 1;
         const 30;
 },
 _c9kfK() //  [R1]
         { []
         }
     {offset
       c9kfK: // global
           if (R1 & 7 == 1) goto c9kfS; else goto c9kfZ;
       c9kfS: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kfZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kg2; else goto c9kg1;
       c9kg2: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kg1: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kfK_info" {
     block_c9kfK_info:
         const _c9kfK;
         const 66;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.048464034 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kgu: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.eventLifetime_info" {
     GHC.Event.Internal.eventLifetime_info:
         const GHC.Event.Internal.eventLifetime_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.051775823 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kgF: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.evtCombine_info" {
     GHC.Event.Internal.evtCombine_info:
         const GHC.Event.Internal.evtCombine_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.055463903 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { []
         }
     {offset
       c9kgQ: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.evtConcat_info" {
     GHC.Event.Internal.evtConcat_info:
         const GHC.Event.Internal.evtConcat_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9j2f_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.059815176 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kh8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kh9; else goto c9kha;
       c9kh9: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kha: // global
           I64[Sp - 16] = block_c9kh1_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9khu; else goto c9kh2;
       u9khu: // global
           call _c9kh1(R1) args: 0, res: 0, upd: 0;
       c9kh2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo_info" {
     GHC.Event.Internal.$wgo_info:
         const GHC.Event.Internal.$wgo_entry;
         const 0;
         const 14;
         const 8589934605;
 },
 _c9kh1() //  [R1]
         { []
         }
     {offset
       c9kh1: // global
           if (R1 & 7 == 1) goto c9kh5; else goto c9kh6;
       c9kh5: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kh6: // global
           I64[Sp - 8] = block_c9khg_info;
           _s9j0v::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0v::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kht; else goto c9khh;
       u9kht: // global
           call _c9khg(R1) args: 0, res: 0, upd: 0;
       c9khh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kh1_info" {
     block_c9kh1_info:
         const _c9kh1;
         const 65;
         const 30;
 },
 _c9khg() //  [R1]
         { []
         }
     {offset
       c9khg: // global
           _s9j0v::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9khl_info;
           R3 = _s9j0v::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9khg_info" {
     block_c9khg_info:
         const _c9khg;
         const 130;
         const 30;
 },
 _c9khl() //  [R1]
         { []
         }
     {offset
       c9khl: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9khl_info" {
     block_c9khl_info:
         const _c9khl;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.069937624 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9khX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ki5; else goto c9ki6;
       c9ki5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ki6: // global
           I64[Sp - 16] = block_c9khU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kib; else goto c9khV;
       u9kib: // global
           call _c9khU(R1) args: 0, res: 0, upd: 0;
       c9khV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_go_info" {
     GHC.Event.Internal.$fSemigroupEvent_go_info:
         const GHC.Event.Internal.$fSemigroupEvent_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9khU() //  [R1]
         { []
         }
     {offset
       c9khU: // global
           _s9j0A::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9ki0_info;
           R3 = _s9j0A::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9khU_info" {
     block_c9khU_info:
         const _c9khU;
         const 1;
         const 30;
 },
 _c9ki0() //  [R1]
         { []
         }
     {offset
       c9ki0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kia; else goto c9ki9;
       c9kia: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9ki9: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9ki0_info" {
     block_c9ki0_info:
         const _c9ki0;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.076660404 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9kiw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kix; else goto c9kiy;
       c9kix: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kiy: // global
           I64[Sp - 8] = block_c9kit_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kiC; else goto c9kiu;
       u9kiC: // global
           call _c9kit(R1) args: 0, res: 0, upd: 0;
       c9kiu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kit() //  [R1]
         { []
         }
     {offset
       c9kit: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kit_info" {
     block_c9kit_info:
         const _c9kit;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.082125779 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { []
         }
     {offset
       c9kiQ: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry;
         const 0;
         const 4402341478414;
         const 12884901911;
         const S9j2f_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.087686973 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kj6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kja; else goto c9kjb;
       c9kja: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kjb: // global
           I64[Sp - 16] = block_c9kj3_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kjy; else goto c9kj4;
       u9kjy: // global
           call _c9kj3(R1) args: 0, res: 0, upd: 0;
       c9kj4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.eventIs_info" {
     GHC.Event.Internal.eventIs_info:
         const GHC.Event.Internal.eventIs_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kj3() //  [R1]
         { []
         }
     {offset
       c9kj3: // global
           I64[Sp] = block_c9kj9_info;
           _s9j0M::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9j0M::I64;
           if (R1 & 7 != 0) goto u9kjx; else goto c9kjd;
       u9kjx: // global
           call _c9kj9(R1) args: 0, res: 0, upd: 0;
       c9kjd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kj3_info" {
     block_c9kj3_info:
         const _c9kj3;
         const 1;
         const 30;
 },
 _c9kj9() //  [R1]
         { []
         }
     {offset
       c9kj9: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9kjt; else goto c9kjn;
       c9kjt: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kjn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kj9_info" {
     block_c9kj9_info:
         const _c9kj9;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.094174906 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.095829623 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.097428158 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.100252302 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { []
         }
     {offset
       c9kk0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kk1; else goto c9kk2;
       c9kk1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kk2: // global
           (_c9kjX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kjX::I64 == 0) goto c9kjZ; else goto c9kjY;
       c9kjZ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kjY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kjX::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent9_info" {
     GHC.Event.Internal.$fShowEvent9_info:
         const GHC.Event.Internal.$fShowEvent9_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.103933643 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.106085169 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { []
         }
     {offset
       c9kkh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kki; else goto c9kkj;
       c9kki: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkj: // global
           (_c9kke::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kke::I64 == 0) goto c9kkg; else goto c9kkf;
       c9kkg: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkf: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kke::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent11_info" {
     GHC.Event.Internal.$fShowEvent11_info:
         const GHC.Event.Internal.$fShowEvent11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.109541053 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.111635358 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { []
         }
     {offset
       c9kky: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kkz; else goto c9kkA;
       c9kkz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkA: // global
           (_c9kkv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kkv::I64 == 0) goto c9kkx; else goto c9kkw;
       c9kkx: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkw: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kkv::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent7_info" {
     GHC.Event.Internal.$fShowEvent7_info:
         const GHC.Event.Internal.$fShowEvent7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.115459178 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.117687625 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { []
         }
     {offset
       c9kkP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kkQ; else goto c9kkR;
       c9kkQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkR: // global
           (_c9kkM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kkM::I64 == 0) goto c9kkO; else goto c9kkN;
       c9kkO: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kkM::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent2_info" {
     GHC.Event.Internal.$fShowEvent2_info:
         const GHC.Event.Internal.$fShowEvent2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.121630941 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { []
         }
     {offset
       c9kl5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kl6; else goto c9kl7;
       c9kl6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kl7: // global
           (_c9kl2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kl2::I64 == 0) goto c9kl4; else goto c9kl3;
       c9kl4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kl3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kl2::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent4_info" {
     GHC.Event.Internal.$fShowEvent4_info:
         const GHC.Event.Internal.$fShowEvent4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.125038861 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.133003445 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9j0W_entry() //  [R1]
         { []
         }
     {offset
       c9klS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9klT; else goto c9km4;
       c9klT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9km4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9klR; else goto c9klQ;
       c9klR: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9klQ: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9j0W_info" {
     sat_s9j0W_info:
         const sat_s9j0W_entry;
         const 4294967296;
         const 4294967313;
         const S9j2f_srt+176;
 },
 sat_s9j0Z_entry() //  [R1]
         { []
         }
     {offset
       c9km8: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9km9; else goto c9kmy;
       c9km9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kmy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9j0S::I64 = I64[R1 + 16];
           _s9j0U::I64 = _s9j0S::I64 & 2;
           if (_s9j0U::I64 != 0) goto u9kmz; else goto c9km7;
       u9kmz: // global
           I64[Sp - 32] = _s9j0S::I64;
           I64[Sp - 24] = _s9j0U::I64;
           Sp = Sp - 32;
           call _c9klH() args: 0, res: 0, upd: 0;
       c9km7: // global
           if (_s9j0S::I64 & 4 == 0) goto c9kmu; else goto c9kmo;
       c9kmu: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9kmo: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9j0Z_info" {
     sat_s9j0Z_info:
         const sat_s9j0Z_entry;
         const 4294967296;
         const 30064771089;
         const S9j2f_srt+176;
 },
 _c9klH() //  []
         { []
         }
     {offset
       c9klH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kmd; else goto c9kmc;
       c9kmd: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9klG_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9kmc: // global
           I64[Hp - 40] = sat_s9j0W_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9klG() //  [R1]
         { []
         }
     {offset
       c9klG: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9klH() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9klG_info" {
     block_c9klG_info:
         const _c9klG;
         const 194;
         const 30064771102;
         const S9j2f_srt+176;
 },
 sat_s9j14_entry() //  [R1]
         { []
         }
     {offset
       c9kmW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kmX; else goto c9kn8;
       c9kmX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kn8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9kmV; else goto c9kmU;
       c9kmV: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9kmU: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9j14_info" {
     sat_s9j14_info:
         const sat_s9j14_entry;
         const 4294967296;
         const 21474836497;
         const S9j2f_srt+176;
 },
 sat_s9j18_entry() //  [R1]
         { []
         }
     {offset
       c9knn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kno; else goto c9knp;
       c9kno: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9knp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9j18_info" {
     sat_s9j18_info:
         const sat_s9j18_entry;
         const 0;
         const 4294967311;
         const S9j2f_srt+192;
 },
 sat_s9j1b_entry() //  [R1]
         { []
         }
     {offset
       c9knq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9knr; else goto c9kns;
       c9knr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kns: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9klo_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kon; else goto c9klp;
       u9kon: // global
           call _c9klo(R1) args: 0, res: 0, upd: 0;
       c9klp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9j1b_info" {
     sat_s9j1b_info:
         const sat_s9j1b_entry;
         const 1;
         const 270582939664;
         const S9j2f_srt+176;
 },
 _c9klo() //  [R1]
         { []
         }
     {offset
       c9klo: // global
           _s9j0S::I64 = I64[R1 + 7];
           _s9j0T::I64 = _s9j0S::I64 & 1;
           if (_s9j0T::I64 != 0) goto u9kob; else goto c9knF;
       u9kob: // global
           I64[Sp - 8] = _s9j0T::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9klx() args: 0, res: 0, upd: 0;
       c9knF: // global
           _s9j12::I64 = _s9j0S::I64 & 2;
           if (_s9j12::I64 != 0) goto u9kod; else goto c9knS;
       u9kod: // global
           I64[Sp - 8] = _s9j12::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9kmL() args: 0, res: 0, upd: 0;
       c9knS: // global
           _s9j17::I64 = _s9j0S::I64 & 4;
           if (_s9j17::I64 != 0) goto u9kof; else goto c9ko7;
       u9kof: // global
           I64[Sp] = _s9j17::I64;
           call _c9knh() args: 0, res: 0, upd: 0;
       c9ko7: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9klo_info" {
     block_c9klo_info:
         const _c9klo;
         const 0;
         const 270582939678;
         const S9j2f_srt+176;
 },
 _c9klx() //  []
         { []
         }
     {offset
       c9klx: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9knA; else goto c9knz;
       c9knA: // global
           HpAlloc = 48;
           _s9j0T::I64 = I64[Sp];
           I64[Sp] = block_c9klw_info;
           R1 = _s9j0T::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knz: // global
           I64[Hp - 40] = sat_s9j0Z_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9knv_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9klw() //  [R1]
         { []
         }
     {offset
       c9klw: // global
           I64[Sp] = R1;
           call _c9klx() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9klw_info" {
     block_c9klw_info:
         const _c9klw;
         const 65;
         const 236223201310;
         const S9j2f_srt+176;
 },
 _c9knv() //  [R1]
         { []
         }
     {offset
       c9knv: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9knv_info" {
     block_c9knv_info:
         const _c9knv;
         const 0;
         const 4294967326;
         const S9j2f_srt+208;
 },
 _c9kmL() //  []
         { []
         }
     {offset
       c9kmL: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9knN; else goto c9knM;
       c9knN: // global
           HpAlloc = 48;
           _s9j12::I64 = I64[Sp];
           I64[Sp] = block_c9kmK_info;
           R1 = _s9j12::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knM: // global
           I64[Hp - 40] = sat_s9j14_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9knI_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kmK() //  [R1]
         { []
         }
     {offset
       c9kmK: // global
           I64[Sp] = R1;
           call _c9kmL() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kmK_info" {
     block_c9kmK_info:
         const _c9kmK;
         const 65;
         const 98784247838;
         const S9j2f_srt+176;
 },
 _c9knI() //  [R1]
         { []
         }
     {offset
       c9knI: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9knI_info" {
     block_c9knI_info:
         const _c9knI;
         const 0;
         const 4294967326;
         const S9j2f_srt+208;
 },
 _c9knh() //  []
         { []
         }
     {offset
       c9knh: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9ko0; else goto c9knZ;
       c9ko0: // global
           HpAlloc = 40;
           _s9j17::I64 = I64[Sp];
           I64[Sp] = block_c9kng_info;
           R1 = _s9j17::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knZ: // global
           I64[Hp - 32] = sat_s9j18_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9knV_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kng() //  [R1]
         { []
         }
     {offset
       c9kng: // global
           I64[Sp] = R1;
           call _c9knh() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kng_info" {
     block_c9kng_info:
         const _c9kng;
         const 0;
         const 30064771102;
         const S9j2f_srt+192;
 },
 _c9knV() //  [R1]
         { []
         }
     {offset
       c9knV: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9knV_info" {
     block_c9knV_info:
         const _c9knV;
         const 0;
         const 4294967326;
         const S9j2f_srt+208;
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9koo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kos; else goto c9kor;
       c9kos: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kor: // global
           I64[Hp - 16] = sat_s9j1b_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$w$cshow_info" {
     GHC.Event.Internal.$w$cshow_info:
         const GHC.Event.Internal.$w$cshow_entry;
         const 0;
         const 545460846606;
         const 4294967301;
         const S9j2f_srt+176;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.164751546 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9kpM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kpN; else goto c9kpO;
       c9kpN: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kpO: // global
           I64[Sp - 8] = block_c9kpJ_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshow_info" {
     GHC.Event.Internal.$fShowEvent_$cshow_info:
         const GHC.Event.Internal.$fShowEvent_$cshow_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9j2f_srt+224;
 },
 _c9kpJ() //  [R1, R2]
         { []
         }
     {offset
       c9kpJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kpR; else goto c9kpQ;
       c9kpR: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kpQ: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kpJ_info" {
     block_c9kpJ_info:
         const _c9kpJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.170637571 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9kq8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kq9; else goto c9kqa;
       c9kq9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kqa: // global
           I64[Sp - 16] = block_c9kq5_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry;
         const 0;
         const 21474836494;
         const 12884901911;
         const S9j2f_srt+224;
 },
 _c9kq5() //  [R1, R2]
         { []
         }
     {offset
       c9kq5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kqd; else goto c9kqc;
       c9kqd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kqc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kq5_info" {
     block_c9kq5_info:
         const _c9kq5;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.176874216 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kqt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kqu; else goto c9kqv;
       c9kqu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kqv: // global
           I64[Sp - 16] = block_c9kqq_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent1_info" {
     GHC.Event.Internal.$fShowEvent1_info:
         const GHC.Event.Internal.$fShowEvent1_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S9j2f_srt+224;
 },
 _c9kqq() //  [R1, R2]
         { []
         }
     {offset
       c9kqq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kqy; else goto c9kqx;
       c9kqy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kqx: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kqq_info" {
     block_c9kqq_info:
         const _c9kqq;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.182403096 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kqL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshowList_info" {
     GHC.Event.Internal.$fShowEvent_$cshowList_info:
         const GHC.Event.Internal.$fShowEvent_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9j2f_srt+248;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.18546055 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.187722086 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9kqY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kr2; else goto c9kr1;
       c9kr2: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kr1: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Backend_info" {
     GHC.Event.Internal.Backend_info:
         const GHC.Event.Internal.Backend_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.191679514 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { []
         }
     {offset
       c9krd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9krh; else goto c9krg;
       c9krh: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9krg: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Timeout_info" {
     GHC.Event.Internal.Timeout_info:
         const GHC.Event.Internal.Timeout_entry;
         const 0;
         const 14;
         const 4294967300;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.194907384 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.196569106 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.198226698 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.200002491 UTC

[section ""cstring" . i9jNW_str" {
     i9jNW_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]
 },
 GHC.Event.Internal.Backend_con_entry() //  [R1]
         { []
         }
     {offset
       c9krq: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Backend_con_info" {
     GHC.Event.Internal.Backend_con_info:
         const GHC.Event.Internal.Backend_con_entry;
         const 5;
         const 1;
         const i9jNW_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.203320013 UTC

[section ""cstring" . i9jNY_str" {
     i9jNY_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]
 },
 GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { []
         }
     {offset
       c9krw: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Timeout_con_info" {
     GHC.Event.Internal.Timeout_con_info:
         const GHC.Event.Internal.Timeout_con_entry;
         const 4294967296;
         const 3;
         const i9jNY_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.206946118 UTC

[section ""cstring" . i9jO0_str" {
     i9jO0_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]
 },
 GHC.Event.Internal.Forever_con_entry() //  [R1]
         { []
         }
     {offset
       c9krC: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Forever_con_info" {
     GHC.Event.Internal.Forever_con_info:
         const GHC.Event.Internal.Forever_con_entry;
         const 4294967296;
         const 4294967299;
         const i9jO0_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.209841205 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.211640116 UTC

[section ""cstring" . i9jO2_str" {
     i9jO2_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]
 },
 GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { []
         }
     {offset
       c9krJ: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.OneShot_con_info" {
     GHC.Event.Internal.OneShot_con_info:
         const GHC.Event.Internal.OneShot_con_entry;
         const 4294967296;
         const 3;
         const i9jO2_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.215185033 UTC

[section ""cstring" . i9jO4_str" {
     i9jO4_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]
 },
 GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { []
         }
     {offset
       c9krP: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.MultiShot_con_info" {
     GHC.Event.Internal.MultiShot_con_info:
         const GHC.Event.Internal.MultiShot_con_entry;
         const 4294967296;
         const 4294967299;
         const i9jO4_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:27.219200154 UTC

[section ""relreadonly" . S9j2f_srt" {
     S9j2f_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9iZu_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.295633209 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:28.298194343 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9kwB: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9kwC; else goto c9kwD;
       c9kwC: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kwD: // global
           I64[Sp - 40] = block_c9kwy_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$WBackend_info" {
     GHC.Event.Internal.$WBackend_info:
         const GHC.Event.Internal.$WBackend_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _c9kwy() //  [R1]
         { []
         }
     {offset
       c9kwy: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kwG; else goto c9kwF;
       c9kwG: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kwF: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kwy_info" {
     block_c9kwy_info:
         const _c9kwy;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.304694777 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { []
         }
     {offset
       c9kx3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kx7; else goto c9kx8;
       c9kx7: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kx8: // global
           I64[Sp - 8] = block_c9kx0_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kxc; else goto c9kx1;
       u9kxc: // global
           call _c9kx0(R1) args: 0, res: 0, upd: 0;
       c9kx1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$WTimeout_info" {
     GHC.Event.Internal.$WTimeout_info:
         const GHC.Event.Internal.$WTimeout_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kx0() //  [R1]
         { []
         }
     {offset
       c9kx0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kxb; else goto c9kxa;
       c9kxb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kxa: // global
           _s9ks4::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9ks4::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kx0_info" {
     block_c9kx0_info:
         const _c9kx0;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.310252595 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.312200706 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.314963469 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { []
         }
     {offset
       c9kxx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kxy; else goto c9kxz;
       c9kxy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kxz: // global
           (_c9kxu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kxu::I64 == 0) goto c9kxw; else goto c9kxv;
       c9kxw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kxv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kxu::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout3_info" {
     GHC.Event.Internal.$fShowTimeout3_info:
         const GHC.Event.Internal.$fShowTimeout3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.319175105 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { []
         }
     {offset
       c9kxM: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout2_info" {
     GHC.Event.Internal.$fShowTimeout2_info:
         const GHC.Event.Internal.$fShowTimeout2_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9kxP_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.322756514 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.331502784 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9ksb_entry() //  [R1]
         { []
         }
     {offset
       c9kyf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kyg; else goto c9kyn;
       c9kyg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kyn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9ks8::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9ks8::I64, 0)) goto c9kyl; else goto c9kym;
       c9kyl: // global
           R2 = _s9ks8::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9kym: // global
           R2 = _s9ks8::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . w1_s9ksb_info" {
     w1_s9ksb_info:
         const w1_s9ksb_entry;
         const 4294967296;
         const 17;
 },
 sat_s9ksj_entry() //  [R1]
         { []
         }
     {offset
       c9kyD: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kyE; else goto c9kyF;
       c9kyE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kyF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9kyA_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksj_info" {
     sat_s9ksj_info:
         const sat_s9ksj_entry;
         const 2;
         const 4294967314;
         const S9kxP_srt+8;
 },
 _c9kyA() //  [R1, R2]
         { []
         }
     {offset
       c9kyA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kyI; else goto c9kyH;
       c9kyI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kyH: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kyA_info" {
     block_c9kyA_info:
         const _c9kyA;
         const 0;
         const 30;
 },
 sat_s9ksk_entry() //  [R1, R2]
         { []
         }
     {offset
       c9kyJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kyN; else goto c9kyM;
       c9kyN: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kyM: // global
           _s9ksb::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9ksj_info;
           P64[Hp - 8] = _s9ksb::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9ksk_info" {
     sat_s9ksk_info:
         const sat_s9ksk_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S9kxP_srt+8;
 },
 sat_s9ksq_entry() //  [R1]
         { []
         }
     {offset
       c9kz6: // global
           _s9ksq::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9kz7; else goto c9kz8;
       c9kz8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kza; else goto c9kz9;
       c9kza: // global
           HpAlloc = 24;
           goto c9kz7;
       c9kz7: // global
           R1 = _s9ksq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kz9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9ksq::P64;
           _s9ksb::P64 = P64[_s9ksq::P64 + 16];
           _s9ksl::P64 = P64[_s9ksq::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9ksl::P64;
           I64[Sp - 24] = block_c9kz3_info;
           R4 = Hp - 14;
           R3 = _s9ksb::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksq_info" {
     sat_s9ksq_info:
         const sat_s9ksq_entry;
         const 2;
         const 4294967314;
         const S9kxP_srt+8;
 },
 _c9kz3() //  [R1, R2]
         { []
         }
     {offset
       c9kz3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kzd; else goto c9kzc;
       c9kzd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kzc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kz3_info" {
     block_c9kz3_info:
         const _c9kz3;
         const 0;
         const 30;
 },
 sat_s9ksr_entry() //  [R1]
         { []
         }
     {offset
       c9kze: // global
           _s9ksr::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9kzf; else goto c9kzg;
       c9kzg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kzi; else goto c9kzh;
       c9kzi: // global
           HpAlloc = 32;
           goto c9kzf;
       c9kzf: // global
           R1 = _s9ksr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kzh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9ksr::P64;
           _s9ksb::P64 = P64[_s9ksr::P64 + 16];
           _s9ksl::P64 = P64[_s9ksr::P64 + 24];
           I64[Hp - 24] = sat_s9ksq_info;
           P64[Hp - 8] = _s9ksb::P64;
           P64[Hp] = _s9ksl::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksr_info" {
     sat_s9ksr_info:
         const sat_s9ksr_entry;
         const 2;
         const 4294967314;
         const S9kxP_srt+8;
 },
 sat_s9kss_entry() //  [R1, R2]
         { []
         }
     {offset
       c9kzk: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9kzo; else goto c9kzn;
       c9kzo: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kzn: // global
           _s9ksb::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9ksr_info;
           P64[Hp - 32] = _s9ksb::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9kss_info" {
     sat_s9kss_info:
         const sat_s9kss_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S9kxP_srt+8;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kzt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kzu; else goto c9kzv;
       c9kzu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kzv: // global
           I64[Sp - 16] = block_c9kxZ_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kzH; else goto c9ky0;
       u9kzH: // global
           call _c9kxZ(R1) args: 0, res: 0, upd: 0;
       c9ky0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 8589934607;
         const S9kxP_srt+8;
 },
 _c9kxZ() //  [R1]
         { []
         }
     {offset
       c9kxZ: // global
           if (R1 & 7 == 1) goto c9kzq; else goto c9kzr;
       c9kzq: // global
           I64[Sp] = block_c9ky4_info;
           _s9ks8::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9ks8::I64;
           if (R1 & 7 != 0) goto u9kzG; else goto c9ky5;
       u9kzG: // global
           call _c9ky4(R1) args: 0, res: 0, upd: 0;
       c9ky5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kzr: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kxZ_info" {
     block_c9kxZ_info:
         const _c9kxZ;
         const 1;
         const 21474836510;
         const S9kxP_srt+8;
 },
 _c9ky4() //  [R1]
         { []
         }
     {offset
       c9ky4: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9kzz; else goto c9kzy;
       c9kzz: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kzy: // global
           _s9ksa::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9ksb_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9ky9::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9ksa::I64, 11)) goto c9kzB; else goto c9kzC;
       c9kzB: // global
           I64[Hp - 8] = sat_s9ksk_info;
           P64[Hp] = _c9ky9::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kzC: // global
           I64[Hp - 8] = sat_s9kss_info;
           P64[Hp] = _c9ky9::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9ky4_info" {
     block_c9ky4_info:
         const _c9ky4;
         const 65;
         const 4294967326;
         const S9kxP_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.358452377 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9ksG_entry() //  [R1]
         { []
         }
     {offset
       c9kB6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kB7; else goto c9kBC;
       c9kB7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kBC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9ksv::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9ksv::I64, 0)) goto c9kBk; else goto c9kBx;
       c9kBk: // global
           I64[Sp - 24] = block_c9kBc_info;
           R2 = _s9ksv::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9kBx: // global
           I64[Sp - 24] = block_c9kBq_info;
           R2 = _s9ksv::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksG_info" {
     sat_s9ksG_info:
         const sat_s9ksG_entry;
         const 4294967296;
         const 4294967313;
         const S9kxP_srt+8;
 },
 _c9kBc() //  [R1]
         { []
         }
     {offset
       c9kBc: // global
           I64[Sp] = block_c9kBg_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kBc_info" {
     block_c9kBc_info:
         const _c9kBc;
         const 0;
         const 4294967326;
         const S9kxP_srt+8;
 },
 _c9kBg() //  [R1, R2]
         { []
         }
     {offset
       c9kBg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBo; else goto c9kBn;
       c9kBo: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kBn: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kBg_info" {
     block_c9kBg_info:
         const _c9kBg;
         const 0;
         const 30;
 },
 _c9kBq() //  [R1]
         { []
         }
     {offset
       c9kBq: // global
           I64[Sp] = block_c9kBu_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kBq_info" {
     block_c9kBq_info:
         const _c9kBq;
         const 0;
         const 4294967326;
         const S9kxP_srt+8;
 },
 _c9kBu() //  [R1, R2]
         { []
         }
     {offset
       c9kBu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBB; else goto c9kBA;
       c9kBB: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kBA: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kBu_info" {
     block_c9kBu_info:
         const _c9kBu;
         const 0;
         const 30;
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9kBH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kBI; else goto c9kBJ;
       c9kBI: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kBJ: // global
           I64[Sp - 8] = block_c9kAV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kBQ; else goto c9kAW;
       u9kBQ: // global
           call _c9kAV(R1) args: 0, res: 0, upd: 0;
       c9kAW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshow_info" {
     GHC.Event.Internal.$fShowTimeout_$cshow_info:
         const GHC.Event.Internal.$fShowTimeout_$cshow_entry;
         const 0;
         const 81604378638;
         const 4294967301;
         const S9kxP_srt;
 },
 _c9kAV() //  [R1]
         { []
         }
     {offset
       c9kAV: // global
           if (R1 & 7 == 1) goto c9kBE; else goto c9kBF;
       c9kBE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBM; else goto c9kBL;
       c9kBM: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kBL: // global
           _s9ksv::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9ksG_info;
           I64[Hp] = _s9ksv::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9kBF: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kAV_info" {
     block_c9kAV_info:
         const _c9kAV;
         const 0;
         const 12884901918;
         const S9kxP_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.374172464 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { []
         }
     {offset
       c9kCA: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout1_info" {
     GHC.Event.Internal.$fShowTimeout1_info:
         const GHC.Event.Internal.$fShowTimeout1_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9kxP_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.377991206 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kCL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowTimeout_$cshowList_info" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_info:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9kxP_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.381636544 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.38364867 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.390238351 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9ksS_entry() //  [R1]
         { []
         }
     {offset
       c9kD8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kDe; else goto c9kDf;
       c9kDe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9kD5_info;
           _s9ksL::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9ksL::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9kDk; else goto c9kD6;
       u9kDk: // global
           call _c9kD5(R1) args: 0, res: 0, upd: 0;
       c9kD6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksS_info" {
     sat_s9ksS_info:
         const sat_s9ksS_entry;
         const 2;
         const 18;
 },
 _c9kD5() //  [R1]
         { []
         }
     {offset
       c9kD5: // global
           _s9ksL::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kDb_info;
           R4 = _s9ksL::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kD5_info" {
     block_c9kD5_info:
         const _c9kD5;
         const 1;
         const 30;
 },
 _c9kDb() //  [R1, R2]
         { []
         }
     {offset
       c9kDb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDj; else goto c9kDi;
       c9kDj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kDi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kDb_info" {
     block_c9kDb_info:
         const _c9kDb;
         const 0;
         const 30;
 },
 sat_s9ksZ_entry() //  [R1]
         { []
         }
     {offset
       c9kDx: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kDE; else goto c9kDF;
       c9kDE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9kDu_info;
           _s9ksL::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9ksL::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9kDM; else goto c9kDv;
       u9kDM: // global
           call _c9kDu(R1) args: 0, res: 0, upd: 0;
       c9kDv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ksZ_info" {
     sat_s9ksZ_info:
         const sat_s9ksZ_entry;
         const 2;
         const 18;
 },
 _c9kDu() //  [R1]
         { []
         }
     {offset
       c9kDu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDI; else goto c9kDH;
       c9kDI: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9kDH: // global
           _s9ksU::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9kDB_info;
           R4 = Hp - 14;
           R3 = _s9ksU::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kDu_info" {
     block_c9kDu_info:
         const _c9kDu;
         const 1;
         const 30;
 },
 _c9kDB() //  [R1, R2]
         { []
         }
     {offset
       c9kDB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDL; else goto c9kDK;
       c9kDL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kDK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kDB_info" {
     block_c9kDB_info:
         const _c9kDB;
         const 0;
         const 30;
 },
 sat_s9kt0_entry() //  [R1]
         { []
         }
     {offset
       c9kDN: // global
           _s9kt0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9kDO; else goto c9kDP;
       c9kDP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kDR; else goto c9kDQ;
       c9kDR: // global
           HpAlloc = 32;
           goto c9kDO;
       c9kDO: // global
           R1 = _s9kt0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9kt0::P64;
           _s9ksK::P64 = P64[_s9kt0::P64 + 16];
           _s9ksL::P64 = P64[_s9kt0::P64 + 24];
           I64[Hp - 24] = sat_s9ksZ_info;
           P64[Hp - 8] = _s9ksK::P64;
           P64[Hp] = _s9ksL::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kt0_info" {
     sat_s9kt0_info:
         const sat_s9kt0_entry;
         const 2;
         const 18;
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9kDV: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9kDZ; else goto c9kDY;
       c9kDZ: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kDY: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9kDT; else goto c9kDU;
       c9kDT: // global
           I64[Hp - 48] = sat_s9ksS_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9kD1::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9kD1::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9kDU: // global
           I64[Hp - 48] = sat_s9kt0_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$w$cshowsPrec_info" {
     GHC.Event.Internal.$w$cshowsPrec_info:
         const GHC.Event.Internal.$w$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901907;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.409157479 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       c9kEX: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kEY; else goto c9kEZ;
       c9kEY: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kEZ: // global
           I64[Sp - 24] = block_c9kEU_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kF3; else goto c9kEV;
       u9kF3: // global
           call _c9kEU(R1) args: 0, res: 0, upd: 0;
       c9kEV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _c9kEU() //  [R1]
         { []
         }
     {offset
       c9kEU: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kEU_info" {
     block_c9kEU_info:
         const _c9kEU;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.416263452 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9ktc_entry() //  [R1]
         { []
         }
     {offset
       c9kFp: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kFv; else goto c9kFw;
       c9kFv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kFw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9kFm_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kFB; else goto c9kFn;
       u9kFB: // global
           call _c9kFm(R1) args: 0, res: 0, upd: 0;
       c9kFn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9ktc_info" {
     sat_s9ktc_info:
         const sat_s9ktc_entry;
         const 1;
         const 16;
 },
 _c9kFm() //  [R1]
         { []
         }
     {offset
       c9kFm: // global
           I64[Sp] = block_c9kFs_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kFm_info" {
     block_c9kFm_info:
         const _c9kFm;
         const 0;
         const 30;
 },
 _c9kFs() //  [R1, R2]
         { []
         }
     {offset
       c9kFs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kFA; else goto c9kFz;
       c9kFA: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kFz: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9kFs_info" {
     block_c9kFs_info:
         const _c9kFs;
         const 0;
         const 30;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9kFC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kFG; else goto c9kFF;
       c9kFG: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kFF: // global
           I64[Hp - 16] = sat_s9ktc_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshow_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.426129799 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kG7: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime1_info" {
     GHC.Event.Internal.$fShowEventLifetime1_info:
         const GHC.Event.Internal.$fShowEventLifetime1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.430549489 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       c9kGi: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_info" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_info:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.433940832 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.437751727 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kGB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kGC; else goto c9kGD;
       c9kGC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kGD: // global
           I64[Sp - 16] = block_c9kGu_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kHg; else goto c9kGv;
       u9kHg: // global
           call _c9kGu(R1) args: 0, res: 0, upd: 0;
       c9kGv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fEqLifetime_$c==_info" {
     GHC.Event.Internal.$fEqLifetime_$c==_info:
         const GHC.Event.Internal.$fEqLifetime_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kGu() //  [R1]
         { []
         }
     {offset
       c9kGu: // global
           _s9kti::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kGy; else goto c9kGz;
       c9kGy: // global
           I64[Sp + 8] = block_c9kGG_info;
           R1 = _s9kti::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kHe; else goto c9kGI;
       u9kHe: // global
           call _c9kGG(R1) args: 0, res: 0, upd: 0;
       c9kGI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kGz: // global
           I64[Sp + 8] = block_c9kGV_info;
           R1 = _s9kti::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kHf; else goto c9kGX;
       u9kHf: // global
           call _c9kGV(R1) args: 0, res: 0, upd: 0;
       c9kGX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kGu_info" {
     block_c9kGu_info:
         const _c9kGu;
         const 1;
         const 30;
 },
 _c9kGG() //  [R1]
         { []
         }
     {offset
       c9kGG: // global
           if (R1 & 7 == 1) goto u9kHc; else goto u9kHd;
       u9kHc: // global
           Sp = Sp + 8;
           call _c9kH7() args: 0, res: 0, upd: 0;
       u9kHd: // global
           Sp = Sp + 8;
           call _c9kH3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kGG_info" {
     block_c9kGG_info:
         const _c9kGG;
         const 0;
         const 30;
 },
 _c9kGV() //  [R1]
         { []
         }
     {offset
       c9kGV: // global
           if (R1 & 7 == 1) goto u9kHa; else goto u9kHb;
       u9kHa: // global
           Sp = Sp + 8;
           call _c9kH3() args: 0, res: 0, upd: 0;
       u9kHb: // global
           Sp = Sp + 8;
           call _c9kH7() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kGV_info" {
     block_c9kGV_info:
         const _c9kGV;
         const 0;
         const 30;
 },
 _c9kH3() //  []
         { []
         }
     {offset
       c9kH3: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kH7() //  []
         { []
         }
     {offset
       c9kH7: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.450007505 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kI4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kI5; else goto c9kI6;
       c9kI5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kI6: // global
           I64[Sp - 16] = block_c9kHX_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kIJ; else goto c9kHY;
       u9kIJ: // global
           call _c9kHX(R1) args: 0, res: 0, upd: 0;
       c9kHY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fEqLifetime_$c/=_info" {
     GHC.Event.Internal.$fEqLifetime_$c/=_info:
         const GHC.Event.Internal.$fEqLifetime_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kHX() //  [R1]
         { []
         }
     {offset
       c9kHX: // global
           _s9ktn::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kI1; else goto c9kI2;
       c9kI1: // global
           I64[Sp + 8] = block_c9kI9_info;
           R1 = _s9ktn::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kIH; else goto c9kIb;
       u9kIH: // global
           call _c9kI9(R1) args: 0, res: 0, upd: 0;
       c9kIb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kI2: // global
           I64[Sp + 8] = block_c9kIo_info;
           R1 = _s9ktn::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kII; else goto c9kIq;
       u9kII: // global
           call _c9kIo(R1) args: 0, res: 0, upd: 0;
       c9kIq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kHX_info" {
     block_c9kHX_info:
         const _c9kHX;
         const 1;
         const 30;
 },
 _c9kI9() //  [R1]
         { []
         }
     {offset
       c9kI9: // global
           if (R1 & 7 == 1) goto u9kIF; else goto u9kIG;
       u9kIF: // global
           Sp = Sp + 8;
           call _c9kIA() args: 0, res: 0, upd: 0;
       u9kIG: // global
           Sp = Sp + 8;
           call _c9kIw() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kI9_info" {
     block_c9kI9_info:
         const _c9kI9;
         const 0;
         const 30;
 },
 _c9kIo() //  [R1]
         { []
         }
     {offset
       c9kIo: // global
           if (R1 & 7 == 1) goto u9kID; else goto u9kIE;
       u9kID: // global
           Sp = Sp + 8;
           call _c9kIw() args: 0, res: 0, upd: 0;
       u9kIE: // global
           Sp = Sp + 8;
           call _c9kIA() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kIo_info" {
     block_c9kIo_info:
         const _c9kIo;
         const 0;
         const 30;
 },
 _c9kIw() //  []
         { []
         }
     {offset
       c9kIw: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kIA() //  []
         { []
         }
     {offset
       c9kIA: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.46138072 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.463176282 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.46763428 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { []
         }
     {offset
       c9kJu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kJv; else goto c9kJw;
       c9kJv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kJw: // global
           (_c9kJr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kJr::I64 == 0) goto c9kJt; else goto c9kJs;
       c9kJt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kJs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kJr::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime4_info" {
     GHC.Event.Internal.$fShowLifetime4_info:
         const GHC.Event.Internal.$fShowLifetime4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.47162703 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.473985451 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { []
         }
     {offset
       c9kJM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kJN; else goto c9kJO;
       c9kJN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kJO: // global
           (_c9kJJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kJJ::I64 == 0) goto c9kJL; else goto c9kJK;
       c9kJL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kJK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kJJ::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime2_info" {
     GHC.Event.Internal.$fShowLifetime2_info:
         const GHC.Event.Internal.$fShowLifetime2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.478440205 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c9kK8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kK9; else goto c9kKa;
       c9kK9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kKa: // global
           I64[Sp - 16] = block_c9kK1_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kKh; else goto c9kK2;
       u9kKh: // global
           call _c9kK1(R1) args: 0, res: 0, upd: 0;
       c9kK2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry;
         const 0;
         const 30064771086;
         const 12884901911;
         const S9kxP_srt+48;
 },
 _c9kK1() //  [R1]
         { []
         }
     {offset
       c9kK1: // global
           _s9ktt::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kK5; else goto c9kK6;
       c9kK5: // global
           R3 = _s9ktt::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9kK6: // global
           R3 = _s9ktt::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kK1_info" {
     block_c9kK1_info:
         const _c9kK1;
         const 1;
         const 12884901918;
         const S9kxP_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.484491836 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9kKF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kKG; else goto c9kKH;
       c9kKG: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kKH: // global
           I64[Sp - 8] = block_c9kKy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kKO; else goto c9kKz;
       u9kKO: // global
           call _c9kKy(R1) args: 0, res: 0, upd: 0;
       c9kKz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshow_info" {
     GHC.Event.Internal.$fShowLifetime_$cshow_info:
         const GHC.Event.Internal.$fShowLifetime_$cshow_entry;
         const 0;
         const 47244640270;
         const 4294967301;
         const S9kxP_srt+48;
 },
 _c9kKy() //  [R1]
         { []
         }
     {offset
       c9kKy: // global
           if (R1 & 7 == 1) goto c9kKC; else goto c9kKD;
       c9kKC: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kKD: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kKy_info" {
     block_c9kKy_info:
         const _c9kKy;
         const 0;
         const 12884901918;
         const S9kxP_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.490702985 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kLe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kLf; else goto c9kLg;
       c9kLf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kLg: // global
           I64[Sp - 16] = block_c9kL7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kLn; else goto c9kL8;
       u9kLn: // global
           call _c9kL7(R1) args: 0, res: 0, upd: 0;
       c9kL8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime1_info" {
     GHC.Event.Internal.$fShowLifetime1_info:
         const GHC.Event.Internal.$fShowLifetime1_entry;
         const 0;
         const 81604378638;
         const 8589934607;
         const S9kxP_srt+48;
 },
 _c9kL7() //  [R1]
         { []
         }
     {offset
       c9kL7: // global
           _s9kty::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kLb; else goto c9kLc;
       c9kLb: // global
           R3 = _s9kty::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9kLc: // global
           R3 = _s9kty::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kL7_info" {
     block_c9kL7_info:
         const _c9kL7;
         const 1;
         const 12884901918;
         const S9kxP_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.497481149 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kLE: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowLifetime_$cshowList_info" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_info:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9kxP_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.500905345 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.502776054 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.504624475 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.506519709 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.508225874 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.509935127 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.511638038 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.513374678 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.515180191 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.517008033 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.518842914 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.520668605 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.52307961 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.526206048 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kM9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kMa; else goto c9kMb;
       c9kMa: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kMb: // global
           I64[Sp - 16] = block_c9kM2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kMi; else goto c9kM3;
       u9kMi: // global
           call _c9kM2(R1) args: 0, res: 0, upd: 0;
       c9kM3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elSupremum_info" {
     GHC.Event.Internal.elSupremum_info:
         const GHC.Event.Internal.elSupremum_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kM2() //  [R1]
         { []
         }
     {offset
       c9kM2: // global
           if (R1 & 7 == 1) goto c9kM6; else goto c9kM7;
       c9kM6: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kM7: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kM2_info" {
     block_c9kM2_info:
         const _c9kM2;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.533637784 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kMJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kMK; else goto u9kN5;
       c9kMK: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9kN5: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9kMz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_go_info" {
     GHC.Event.Internal.$fSemigroupLifetime_go_info:
         const GHC.Event.Internal.$fSemigroupLifetime_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kMz() //  []
         { []
         }
     {offset
       c9kMz: // global
           I64[Sp - 8] = block_c9kMC_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kN7; else goto c9kMD;
       u9kN7: // global
           call _c9kMC(R1) args: 0, res: 0, upd: 0;
       c9kMD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kMC() //  [R1]
         { []
         }
     {offset
       c9kMC: // global
           _s9ktF::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kMG; else goto c9kMH;
       c9kMG: // global
           R1 = _s9ktF::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kMH: // global
           I64[Sp] = block_c9kMR_info;
           _s9ktI::P64 = P64[R1 + 6];
           _s9ktJ::P64 = P64[R1 + 14];
           R1 = _s9ktF::P64;
           P64[Sp + 8] = _s9ktJ::P64;
           P64[Sp + 16] = _s9ktI::P64;
           if (R1 & 7 != 0) goto u9kN8; else goto c9kMT;
       u9kN8: // global
           call _c9kMR(R1) args: 0, res: 0, upd: 0;
       c9kMT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kMC_info" {
     block_c9kMC_info:
         const _c9kMC;
         const 130;
         const 30;
 },
 _c9kMR() //  [R1]
         { []
         }
     {offset
       c9kMR: // global
           if (R1 & 7 == 1) goto c9kMZ; else goto c9kN3;
       c9kMZ: // global
           _s9ktG::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9ktG::P64;
           Sp = Sp + 8;
           call _c9kMz() args: 0, res: 0, upd: 0;
       c9kN3: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kMR_info" {
     block_c9kMR_info:
         const _c9kMR;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.542630016 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9kNH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kNI; else goto c9kNJ;
       c9kNI: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kNJ: // global
           I64[Sp - 8] = block_c9kNE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kNN; else goto c9kNF;
       u9kNN: // global
           call _c9kNE(R1) args: 0, res: 0, upd: 0;
       c9kNF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kNE() //  [R1]
         { []
         }
     {offset
       c9kNE: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kNE_info" {
     block_c9kNE_info:
         const _c9kNE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.548973608 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { []
         }
     {offset
       c9kO9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kOa; else goto u9kOv;
       c9kOa: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9kOv: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9kNZ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fMonoidLifetime_go_info" {
     GHC.Event.Internal.$fMonoidLifetime_go_info:
         const GHC.Event.Internal.$fMonoidLifetime_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kNZ() //  []
         { []
         }
     {offset
       c9kNZ: // global
           _s9ktP::P64 = P64[Sp];
           I64[Sp] = block_c9kO2_info;
           R1 = _s9ktP::P64;
           if (R1 & 7 != 0) goto u9kOx; else goto c9kO3;
       u9kOx: // global
           call _c9kO2(R1) args: 0, res: 0, upd: 0;
       c9kO3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kO2() //  [R1]
         { []
         }
     {offset
       c9kO2: // global
           if (R1 & 7 == 1) goto c9kO6; else goto c9kO7;
       c9kO6: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kO7: // global
           I64[Sp - 8] = block_c9kOh_info;
           _s9ktS::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9ktS::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kOy; else goto c9kOj;
       u9kOy: // global
           call _c9kOh(R1) args: 0, res: 0, upd: 0;
       c9kOj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kO2_info" {
     block_c9kO2_info:
         const _c9kO2;
         const 0;
         const 30;
 },
 _c9kOh() //  [R1]
         { []
         }
     {offset
       c9kOh: // global
           if (R1 & 7 == 1) goto c9kOp; else goto c9kOt;
       c9kOp: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9kNZ() args: 0, res: 0, upd: 0;
       c9kOt: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kOh_info" {
     block_c9kOh_info:
         const _c9kOh;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.557370351 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { []
         }
     {offset
       c9kP3: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S9kxP_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.56217597 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9kPg: // global
           _s9ktZ::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9ktZ::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.backend_info" {
     GHC.Event.Internal.backend_info:
         const GHC.Event.Internal.backend_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.566004054 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { []
         }
     {offset
       c9kPu: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kPv; else goto c9kPw;
       c9kPv: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kPw: // global
           I64[Sp - 8] = block_c9kPr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kPA; else goto c9kPs;
       u9kPA: // global
           call _c9kPr(R1) args: 0, res: 0, upd: 0;
       c9kPs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.poll_info" {
     GHC.Event.Internal.poll_info:
         const GHC.Event.Internal.poll_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kPr() //  [R1]
         { []
         }
     {offset
       c9kPr: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kPr_info" {
     block_c9kPr_info:
         const _c9kPr;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.571436169 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { []
         }
     {offset
       c9kPS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kPT; else goto c9kPU;
       c9kPT: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kPU: // global
           I64[Sp - 8] = block_c9kPP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kPY; else goto c9kPQ;
       u9kPY: // global
           call _c9kPP(R1) args: 0, res: 0, upd: 0;
       c9kPQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.modifyFd_info" {
     GHC.Event.Internal.modifyFd_info:
         const GHC.Event.Internal.modifyFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kPP() //  [R1]
         { []
         }
     {offset
       c9kPP: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kPP_info" {
     block_c9kPP_info:
         const _c9kPP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.576768567 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { []
         }
     {offset
       c9kQg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kQh; else goto c9kQi;
       c9kQh: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kQi: // global
           I64[Sp - 8] = block_c9kQd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kQm; else goto c9kQe;
       u9kQm: // global
           call _c9kQd(R1) args: 0, res: 0, upd: 0;
       c9kQe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.modifyFdOnce_info" {
     GHC.Event.Internal.modifyFdOnce_info:
         const GHC.Event.Internal.modifyFdOnce_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kQd() //  [R1]
         { []
         }
     {offset
       c9kQd: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kQd_info" {
     block_c9kQd_info:
         const _c9kQd;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.582462792 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { []
         }
     {offset
       c9kQE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kQF; else goto c9kQG;
       c9kQF: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kQG: // global
           I64[Sp - 8] = block_c9kQB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kQK; else goto c9kQC;
       u9kQK: // global
           call _c9kQB(R1) args: 0, res: 0, upd: 0;
       c9kQC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.delete_info" {
     GHC.Event.Internal.delete_info:
         const GHC.Event.Internal.delete_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kQB() //  [R1]
         { []
         }
     {offset
       c9kQB: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kQB_info" {
     block_c9kQB_info:
         const _c9kQB;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.588893166 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { []
         }
     {offset
       c9kR1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kR2; else goto c9kR3;
       c9kR2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kR3: // global
           (_c9kQY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kQY::I64 == 0) goto c9kR0; else goto c9kQZ;
       c9kR0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kQZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kQY::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.592510259 UTC

[section ""data" . sat_s9kus_closure" {
     sat_s9kus_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.594154869 UTC

[section ""data" . sat_s9kut_closure" {
     sat_s9kut_closure:
         const :_con_info;
         const sat_s9kus_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.596444452 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { []
         }
     {offset
       c9kRm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kRn; else goto c9kRo;
       c9kRn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRo: // global
           (_c9kRj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kRj::I64 == 0) goto c9kRl; else goto c9kRk;
       c9kRl: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kRk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kRj::I64;
           R3 = sat_s9kut_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry;
         const 0;
         const 4294967317;
         const S9kxP_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.603996218 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9kuC_entry() //  [R1]
         { []
         }
     {offset
       c9kRM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kRN; else goto c9kRO;
       c9kRN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kuC_info" {
     sat_s9kuC_info:
         const sat_s9kuC_entry;
         const 1;
         const 4294967312;
         const S9kxP_srt+112;
 },
 sat_s9kuD_entry() //  [R1]
         { []
         }
     {offset
       c9kRP: // global
           _s9kuD::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9kRQ; else goto c9kRR;
       c9kRR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kRT; else goto c9kRS;
       c9kRT: // global
           HpAlloc = 24;
           goto c9kRQ;
       c9kRQ: // global
           R1 = _s9kuD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9kuD::P64;
           _s9kuv::P64 = P64[_s9kuD::P64 + 16];
           I64[Hp - 16] = sat_s9kuC_info;
           P64[Hp] = _s9kuv::P64;
           R2 = _s9kuv::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kuD_info" {
     sat_s9kuD_info:
         const sat_s9kuD_entry;
         const 1;
         const 4294967312;
         const S9kxP_srt+112;
 },
 sat_s9kuK_entry() //  [R1]
         { []
         }
     {offset
       c9kSb: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kSc; else goto c9kSd;
       c9kSc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kSd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kuK_info" {
     sat_s9kuK_info:
         const sat_s9kuK_entry;
         const 1;
         const 4294967312;
         const S9kxP_srt+120;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { []
         }
     {offset
       c9kSi: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9kSj; else goto c9kSk;
       c9kSj: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kSk: // global
           I64[Sp - 32] = block_c9kRC_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry;
         const 0;
         const 64424509454;
         const 21474836504;
         const S9kxP_srt+112;
 },
 _c9kRC() //  [R1]
         { []
         }
     {offset
       c9kRC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kSn; else goto c9kSm;
       c9kSn: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kSm: // global
           I64[Hp - 16] = sat_s9kuD_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9kRU_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kRC_info" {
     block_c9kRC_info:
         const _c9kRC;
         const 3;
         const 30064771102;
         const S9kxP_srt+112;
 },
 _c9kRU() //  [R1]
         { []
         }
     {offset
       c9kRU: // global
           if (R1 & 7 == 1) goto c9kSf; else goto c9kSg;
       c9kSf: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kSg: // global
           _s9kuw::P64 = P64[Sp + 24];
           (_s9kuI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9kuJ::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9kuI::I64));
           if (_s9kuJ::I64 != 4) goto c9kSt; else goto u9kSB;
       c9kSt: // global
           R2 = _s9kuw::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9kSB: // global
           I64[Sp + 24] = _s9kuJ::I64;
           Sp = Sp + 16;
           call _c9kS5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kRU_info" {
     block_c9kRU_info:
         const _c9kRU;
         const 3;
         const 12884901918;
         const S9kxP_srt+120;
 },
 _c9kS5() //  []
         { []
         }
     {offset
       c9kS5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kSA; else goto c9kSz;
       c9kSA: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9kS4_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kSz: // global
           I64[Hp - 16] = sat_s9kuK_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kS4() //  [R1]
         { []
         }
     {offset
       c9kS4: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9kS5() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9kS4_info" {
     block_c9kS4_info:
         const _c9kS4;
         const 130;
         const 4294967326;
         const S9kxP_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.621400243 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { []
         }
     {offset
       c9kTy: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S9kxP_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.62473597 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.626618907 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.628493351 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.630413274 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.632334535 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.634214392 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.635955193 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.637718359 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.639499411 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.641458877 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.643268371 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.646076032 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.647924224 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.64981219 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.651686563 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.653581855 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.65555517 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.65740639 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.659072088 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.660793703 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.662622836 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.664521077 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.666274996 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.667994599 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.669919625 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.672176708 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.674099775 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.675941169 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.677856152 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.67970631 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.681586664 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.683471789 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.685265222 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.68713751 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.688991447 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.690880682 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.692557312 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.694291717 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.696152003 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.698510077 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.700199851 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.702087444 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.704034687 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.705846458 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.70775734 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.709688662 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.711449534 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.713578305 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.715500973 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.717523529 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.719407481 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.721266198 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.723186064 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.726271561 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.728070352 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.729930146 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.73184849 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.733689238 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.735478557 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.737782106 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.739714489 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.741617799 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.743514275 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.745497764 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.747481119 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.74926981 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.751045518 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.753334318 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.755048269 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.756717143 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.758493908 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.760265874 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.76219225 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.76391608 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.765629515 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.767397896 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.769381694 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.771861124 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.774823068 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.777273699 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.779846413 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.7824348 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.78678782 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { []
         }
     {offset
       c9kV6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kVd; else goto c9kVe;
       c9kVd: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kVe: // global
           I64[Sp - 8] = block_c9kV3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kVi; else goto c9kV4;
       u9kVi: // global
           call _c9kV3(R1) args: 0, res: 0, upd: 0;
       c9kV4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . elEvent1_r9iWU_info" {
     elEvent1_r9iWU_info:
         const elEvent1_r9iWU_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kV3() //  [R1]
         { []
         }
     {offset
       c9kV3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kVh; else goto c9kVg;
       c9kVh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kVg: // global
           _s9kuO::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9kuO::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kV3_info" {
     block_c9kV3_info:
         const _c9kV3;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.793917431 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { []
         }
     {offset
       c9kVA: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elEvent_info" {
     GHC.Event.Internal.elEvent_info:
         const GHC.Event.Internal.elEvent_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.799765179 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kVS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kVT; else goto c9kVU;
       c9kVT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kVU: // global
           I64[Sp - 16] = block_c9kVL_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kWe; else goto c9kVM;
       u9kWe: // global
           call _c9kVL(R1) args: 0, res: 0, upd: 0;
       c9kVM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo2_info" {
     GHC.Event.Internal.$wgo2_info:
         const GHC.Event.Internal.$wgo2_entry;
         const 0;
         const 14;
         const 8589934605;
 },
 _c9kVL() //  [R1]
         { []
         }
     {offset
       c9kVL: // global
           if (R1 & 7 == 1) goto c9kVP; else goto c9kVQ;
       c9kVP: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kVQ: // global
           I64[Sp - 8] = block_c9kW0_info;
           _s9kuT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kuT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kWd; else goto c9kW1;
       u9kWd: // global
           call _c9kW0(R1) args: 0, res: 0, upd: 0;
       c9kW1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kVL_info" {
     block_c9kVL_info:
         const _c9kVL;
         const 65;
         const 30;
 },
 _c9kW0() //  [R1]
         { []
         }
     {offset
       c9kW0: // global
           _s9kuT::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kW5_info;
           R3 = _s9kuT::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kW0_info" {
     block_c9kW0_info:
         const _c9kW0;
         const 130;
         const 30;
 },
 _c9kW5() //  [R1]
         { []
         }
     {offset
       c9kW5: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kW5_info" {
     block_c9kW5_info:
         const _c9kW5;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.811927411 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9kWK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kWS; else goto c9kWT;
       c9kWS: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kWT: // global
           I64[Sp - 16] = block_c9kWH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kWY; else goto c9kWI;
       u9kWY: // global
           call _c9kWH(R1) args: 0, res: 0, upd: 0;
       c9kWI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_go_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kWH() //  [R1]
         { []
         }
     {offset
       c9kWH: // global
           _s9kuY::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kWN_info;
           R3 = _s9kuY::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kWH_info" {
     block_c9kWH_info:
         const _c9kWH;
         const 1;
         const 30;
 },
 _c9kWN() //  [R1]
         { []
         }
     {offset
       c9kWN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kWX; else goto c9kWW;
       c9kWX: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kWW: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kWN_info" {
     block_c9kWN_info:
         const _c9kWN;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.820914479 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9kXm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kXn; else goto c9kXo;
       c9kXn: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kXo: // global
           I64[Sp - 8] = block_c9kXj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kXs; else goto c9kXk;
       u9kXs: // global
           call _c9kXj(R1) args: 0, res: 0, upd: 0;
       c9kXk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kXj() //  [R1]
         { []
         }
     {offset
       c9kXj: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kXj_info" {
     block_c9kXj_info:
         const _c9kXj;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.8272818 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { []
         }
     {offset
       c9kXH: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9kxP_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.832327039 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { []
         }
     {offset
       c9kY1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kY2; else goto c9kY3;
       c9kY2: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kY3: // global
           I64[Sp - 8] = block_c9kXU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kYn; else goto c9kXV;
       u9kYn: // global
           call _c9kXU(R1) args: 0, res: 0, upd: 0;
       c9kXV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo1_info" {
     GHC.Event.Internal.$wgo1_info:
         const GHC.Event.Internal.$wgo1_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kXU() //  [R1]
         { []
         }
     {offset
       c9kXU: // global
           if (R1 & 7 == 1) goto c9kXY; else goto c9kXZ;
       c9kXY: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kXZ: // global
           I64[Sp - 8] = block_c9kY9_info;
           _s9kva::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kva::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kYm; else goto c9kYa;
       u9kYm: // global
           call _c9kY9(R1) args: 0, res: 0, upd: 0;
       c9kYa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kXU_info" {
     block_c9kXU_info:
         const _c9kXU;
         const 0;
         const 30;
 },
 _c9kY9() //  [R1]
         { []
         }
     {offset
       c9kY9: // global
           I64[Sp] = block_c9kYe_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kY9_info" {
     block_c9kY9_info:
         const _c9kY9;
         const 1;
         const 30;
 },
 _c9kYe() //  [R1]
         { []
         }
     {offset
       c9kYe: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kYe_info" {
     block_c9kYe_info:
         const _c9kYe;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.840936616 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { []
         }
     {offset
       c9kYT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kYX; else goto c9kYY;
       c9kYX: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kYY: // global
           I64[Sp - 8] = block_c9kYR_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fMonoidEventLifetime_go_info" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_info:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kYR() //  [R1]
         { []
         }
     {offset
       c9kYR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kZ1; else goto c9kZ0;
       c9kZ1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kZ0: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kYR_info" {
     block_c9kYR_info:
         const _c9kYR;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.845951272 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.848597261 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { []
         }
     {offset
       c9kZl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kZm; else goto c9kZn;
       c9kZm: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kZn: // global
           I64[Sp - 8] = block_c9kZi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kZG; else goto c9kZj;
       u9kZG: // global
           call _c9kZi(R1) args: 0, res: 0, upd: 0;
       c9kZj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.elLifetime_info" {
     GHC.Event.Internal.elLifetime_info:
         const GHC.Event.Internal.elLifetime_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9kZi() //  [R1]
         { []
         }
     {offset
       c9kZi: // global
           if (I64[R1 + 7] & 8 == 0) goto c9kZC; else goto c9kZw;
       c9kZC: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kZw: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kZi_info" {
     block_c9kZi_info:
         const _c9kZi;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.855613986 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l01: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9l02; else goto c9l03;
       c9l02: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l03: // global
           I64[Sp - 16] = block_c9kZY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l0r; else goto c9kZZ;
       u9l0r: // global
           call _c9kZY(R1) args: 0, res: 0, upd: 0;
       c9kZZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . eventLifetime1_r9iWV_info" {
     eventLifetime1_r9iWV_info:
         const eventLifetime1_r9iWV_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9kZY() //  [R1]
         { []
         }
     {offset
       c9kZY: // global
           I64[Sp - 8] = block_c9l06_info;
           _s9kvm::P64 = R1;
           _s9kvn::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9kvn::I64;
           P64[Sp + 8] = _s9kvm::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l0q; else goto c9l08;
       u9l0q: // global
           call _c9l06(R1) args: 0, res: 0, upd: 0;
       c9l08: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9kZY_info" {
     block_c9kZY_info:
         const _c9kZY;
         const 1;
         const 30;
 },
 _c9l06() //  [R1]
         { []
         }
     {offset
       c9l06: // global
           if (R1 & 7 == 1) goto c9l0e; else goto c9l0l;
       c9l0e: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9l0l: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9l0o; else goto c9l0n;
       c9l0o: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9l0n: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l06_info" {
     block_c9l06_info:
         const _c9l06;
         const 66;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.862588768 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l0T: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.eventLifetime_info" {
     GHC.Event.Internal.eventLifetime_info:
         const GHC.Event.Internal.eventLifetime_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.866250091 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l14: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.evtCombine_info" {
     GHC.Event.Internal.evtCombine_info:
         const GHC.Event.Internal.evtCombine_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.869657849 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { []
         }
     {offset
       c9l1f: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.evtConcat_info" {
     GHC.Event.Internal.evtConcat_info:
         const GHC.Event.Internal.evtConcat_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S9kxP_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.874387315 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l1x: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9l1y; else goto c9l1z;
       c9l1y: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l1z: // global
           I64[Sp - 16] = block_c9l1q_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l1T; else goto c9l1r;
       u9l1T: // global
           call _c9l1q(R1) args: 0, res: 0, upd: 0;
       c9l1r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$wgo_info" {
     GHC.Event.Internal.$wgo_info:
         const GHC.Event.Internal.$wgo_entry;
         const 0;
         const 14;
         const 8589934605;
 },
 _c9l1q() //  [R1]
         { []
         }
     {offset
       c9l1q: // global
           if (R1 & 7 == 1) goto c9l1u; else goto c9l1v;
       c9l1u: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9l1v: // global
           I64[Sp - 8] = block_c9l1F_info;
           _s9kvu::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kvu::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l1S; else goto c9l1G;
       u9l1S: // global
           call _c9l1F(R1) args: 0, res: 0, upd: 0;
       c9l1G: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l1q_info" {
     block_c9l1q_info:
         const _c9l1q;
         const 65;
         const 30;
 },
 _c9l1F() //  [R1]
         { []
         }
     {offset
       c9l1F: // global
           _s9kvu::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9l1K_info;
           R3 = _s9kvu::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l1F_info" {
     block_c9l1F_info:
         const _c9l1F;
         const 130;
         const 30;
 },
 _c9l1K() //  [R1]
         { []
         }
     {offset
       c9l1K: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l1K_info" {
     block_c9l1K_info:
         const _c9l1K;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.884367377 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l2p: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l2x; else goto c9l2y;
       c9l2x: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l2y: // global
           I64[Sp - 16] = block_c9l2m_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l2D; else goto c9l2n;
       u9l2D: // global
           call _c9l2m(R1) args: 0, res: 0, upd: 0;
       c9l2n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_go_info" {
     GHC.Event.Internal.$fSemigroupEvent_go_info:
         const GHC.Event.Internal.$fSemigroupEvent_go_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9l2m() //  [R1]
         { []
         }
     {offset
       c9l2m: // global
           _s9kvz::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9l2s_info;
           R3 = _s9kvz::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l2m_info" {
     block_c9l2m_info:
         const _c9l2m;
         const 1;
         const 30;
 },
 _c9l2s() //  [R1]
         { []
         }
     {offset
       c9l2s: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9l2C; else goto c9l2B;
       c9l2C: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9l2B: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l2s_info" {
     block_c9l2s_info:
         const _c9l2s;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.892362827 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { []
         }
     {offset
       c9l31: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9l32; else goto c9l33;
       c9l32: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9l33: // global
           I64[Sp - 8] = block_c9l2Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l37; else goto c9l2Z;
       u9l37: // global
           call _c9l2Y(R1) args: 0, res: 0, upd: 0;
       c9l2Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_info" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_info:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c9l2Y() //  [R1]
         { []
         }
     {offset
       c9l2Y: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l2Y_info" {
     block_c9l2Y_info:
         const _c9l2Y;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.89822047 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { []
         }
     {offset
       c9l3m: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_info" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_info:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry;
         const 0;
         const 4402341478414;
         const 12884901911;
         const S9kxP_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.904457981 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { []
         }
     {offset
       c9l3C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l3G; else goto c9l3H;
       c9l3G: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l3H: // global
           I64[Sp - 16] = block_c9l3z_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l44; else goto c9l3A;
       u9l44: // global
           call _c9l3z(R1) args: 0, res: 0, upd: 0;
       c9l3A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.eventIs_info" {
     GHC.Event.Internal.eventIs_info:
         const GHC.Event.Internal.eventIs_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9l3z() //  [R1]
         { []
         }
     {offset
       c9l3z: // global
           I64[Sp] = block_c9l3F_info;
           _s9kvL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9kvL::I64;
           if (R1 & 7 != 0) goto u9l43; else goto c9l3J;
       u9l43: // global
           call _c9l3F(R1) args: 0, res: 0, upd: 0;
       c9l3J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l3z_info" {
     block_c9l3z_info:
         const _c9l3z;
         const 1;
         const 30;
 },
 _c9l3F() //  [R1]
         { []
         }
     {offset
       c9l3F: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9l3Z; else goto c9l3T;
       c9l3Z: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9l3T: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9l3F_info" {
     block_c9l3F_info:
         const _c9l3F;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.911540812 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.913164407 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.914768985 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.917397432 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { []
         }
     {offset
       c9l4A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l4B; else goto c9l4C;
       c9l4B: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l4C: // global
           (_c9l4x::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l4x::I64 == 0) goto c9l4z; else goto c9l4y;
       c9l4z: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l4y: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l4x::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent9_info" {
     GHC.Event.Internal.$fShowEvent9_info:
         const GHC.Event.Internal.$fShowEvent9_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.920978649 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.923205809 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { []
         }
     {offset
       c9l4S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l4T; else goto c9l4U;
       c9l4T: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l4U: // global
           (_c9l4P::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l4P::I64 == 0) goto c9l4R; else goto c9l4Q;
       c9l4R: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l4Q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l4P::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent11_info" {
     GHC.Event.Internal.$fShowEvent11_info:
         const GHC.Event.Internal.$fShowEvent11_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.926774967 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.928940127 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { []
         }
     {offset
       c9l5a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5b; else goto c9l5c;
       c9l5b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5c: // global
           (_c9l57::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l57::I64 == 0) goto c9l59; else goto c9l58;
       c9l59: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l58: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l57::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent7_info" {
     GHC.Event.Internal.$fShowEvent7_info:
         const GHC.Event.Internal.$fShowEvent7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.932664362 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.934918761 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { []
         }
     {offset
       c9l5s: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5t; else goto c9l5u;
       c9l5t: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5u: // global
           (_c9l5p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l5p::I64 == 0) goto c9l5r; else goto c9l5q;
       c9l5r: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l5q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l5p::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent2_info" {
     GHC.Event.Internal.$fShowEvent2_info:
         const GHC.Event.Internal.$fShowEvent2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.939101372 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { []
         }
     {offset
       c9l5J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5K; else goto c9l5L;
       c9l5K: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5L: // global
           (_c9l5G::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l5G::I64 == 0) goto c9l5I; else goto c9l5H;
       c9l5I: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l5H: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l5G::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent4_info" {
     GHC.Event.Internal.$fShowEvent4_info:
         const GHC.Event.Internal.$fShowEvent4_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.942871323 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.952275021 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9kvV_entry() //  [R1]
         { []
         }
     {offset
       c9l6x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l6y; else goto c9l6J;
       c9l6y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l6J: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9l6w; else goto c9l6v;
       c9l6w: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9l6v: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kvV_info" {
     sat_s9kvV_info:
         const sat_s9kvV_entry;
         const 4294967296;
         const 4294967313;
         const S9kxP_srt+176;
 },
 sat_s9kvY_entry() //  [R1]
         { []
         }
     {offset
       c9l6N: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9l6O; else goto c9l7d;
       c9l6O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l7d: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9kvR::I64 = I64[R1 + 16];
           _s9kvT::I64 = _s9kvR::I64 & 2;
           if (_s9kvT::I64 != 0) goto u9l7e; else goto c9l6M;
       u9l7e: // global
           I64[Sp - 32] = _s9kvR::I64;
           I64[Sp - 24] = _s9kvT::I64;
           Sp = Sp - 32;
           call _c9l6m() args: 0, res: 0, upd: 0;
       c9l6M: // global
           if (_s9kvR::I64 & 4 == 0) goto c9l79; else goto c9l73;
       c9l79: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9l73: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kvY_info" {
     sat_s9kvY_info:
         const sat_s9kvY_entry;
         const 4294967296;
         const 30064771089;
         const S9kxP_srt+176;
 },
 _c9l6m() //  []
         { []
         }
     {offset
       c9l6m: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l6S; else goto c9l6R;
       c9l6S: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9l6l_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l6R: // global
           I64[Hp - 40] = sat_s9kvV_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9l6l() //  [R1]
         { []
         }
     {offset
       c9l6l: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9l6m() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9l6l_info" {
     block_c9l6l_info:
         const _c9l6l;
         const 194;
         const 30064771102;
         const S9kxP_srt+176;
 },
 sat_s9kw3_entry() //  [R1]
         { []
         }
     {offset
       c9l7B: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l7C; else goto c9l7N;
       c9l7C: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l7N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9l7A; else goto c9l7z;
       c9l7A: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9l7z: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kw3_info" {
     sat_s9kw3_info:
         const sat_s9kw3_entry;
         const 4294967296;
         const 21474836497;
         const S9kxP_srt+176;
 },
 sat_s9kw7_entry() //  [R1]
         { []
         }
     {offset
       c9l82: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l83; else goto c9l84;
       c9l83: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l84: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kw7_info" {
     sat_s9kw7_info:
         const sat_s9kw7_entry;
         const 0;
         const 4294967311;
         const S9kxP_srt+192;
 },
 sat_s9kwa_entry() //  [R1]
         { []
         }
     {offset
       c9l85: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9l86; else goto c9l87;
       c9l86: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l87: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9l63_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9l92; else goto c9l64;
       u9l92: // global
           call _c9l63(R1) args: 0, res: 0, upd: 0;
       c9l64: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9kwa_info" {
     sat_s9kwa_info:
         const sat_s9kwa_entry;
         const 1;
         const 270582939664;
         const S9kxP_srt+176;
 },
 _c9l63() //  [R1]
         { []
         }
     {offset
       c9l63: // global
           _s9kvR::I64 = I64[R1 + 7];
           _s9kvS::I64 = _s9kvR::I64 & 1;
           if (_s9kvS::I64 != 0) goto u9l8Q; else goto c9l8k;
       u9l8Q: // global
           I64[Sp - 8] = _s9kvS::I64;
           I64[Sp] = _s9kvR::I64;
           Sp = Sp - 8;
           call _c9l6c() args: 0, res: 0, upd: 0;
       c9l8k: // global
           _s9kw1::I64 = _s9kvR::I64 & 2;
           if (_s9kw1::I64 != 0) goto u9l8S; else goto c9l8x;
       u9l8S: // global
           I64[Sp - 8] = _s9kw1::I64;
           I64[Sp] = _s9kvR::I64;
           Sp = Sp - 8;
           call _c9l7q() args: 0, res: 0, upd: 0;
       c9l8x: // global
           _s9kw6::I64 = _s9kvR::I64 & 4;
           if (_s9kw6::I64 != 0) goto u9l8U; else goto c9l8M;
       u9l8U: // global
           I64[Sp] = _s9kw6::I64;
           call _c9l7W() args: 0, res: 0, upd: 0;
       c9l8M: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9l63_info" {
     block_c9l63_info:
         const _c9l63;
         const 0;
         const 270582939678;
         const S9kxP_srt+176;
 },
 _c9l6c() //  []
         { []
         }
     {offset
       c9l6c: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l8f; else goto c9l8e;
       c9l8f: // global
           HpAlloc = 48;
           _s9kvS::I64 = I64[Sp];
           I64[Sp] = block_c9l6b_info;
           R1 = _s9kvS::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8e: // global
           I64[Hp - 40] = sat_s9kvY_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9l8a_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l6b() //  [R1]
         { []
         }
     {offset
       c9l6b: // global
           I64[Sp] = R1;
           call _c9l6c() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9l6b_info" {
     block_c9l6b_info:
         const _c9l6b;
         const 65;
         const 236223201310;
         const S9kxP_srt+176;
 },
 _c9l8a() //  [R1]
         { []
         }
     {offset
       c9l8a: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9l8a_info" {
     block_c9l8a_info:
         const _c9l8a;
         const 0;
         const 4294967326;
         const S9kxP_srt+208;
 },
 _c9l7q() //  []
         { []
         }
     {offset
       c9l7q: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l8s; else goto c9l8r;
       c9l8s: // global
           HpAlloc = 48;
           _s9kw1::I64 = I64[Sp];
           I64[Sp] = block_c9l7p_info;
           R1 = _s9kw1::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8r: // global
           I64[Hp - 40] = sat_s9kw3_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9l8n_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l7p() //  [R1]
         { []
         }
     {offset
       c9l7p: // global
           I64[Sp] = R1;
           call _c9l7q() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9l7p_info" {
     block_c9l7p_info:
         const _c9l7p;
         const 65;
         const 98784247838;
         const S9kxP_srt+176;
 },
 _c9l8n() //  [R1]
         { []
         }
     {offset
       c9l8n: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9l8n_info" {
     block_c9l8n_info:
         const _c9l8n;
         const 0;
         const 4294967326;
         const S9kxP_srt+208;
 },
 _c9l7W() //  []
         { []
         }
     {offset
       c9l7W: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9l8F; else goto c9l8E;
       c9l8F: // global
           HpAlloc = 40;
           _s9kw6::I64 = I64[Sp];
           I64[Sp] = block_c9l7V_info;
           R1 = _s9kw6::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8E: // global
           I64[Hp - 32] = sat_s9kw7_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9l8A_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l7V() //  [R1]
         { []
         }
     {offset
       c9l7V: // global
           I64[Sp] = R1;
           call _c9l7W() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9l7V_info" {
     block_c9l7V_info:
         const _c9l7V;
         const 0;
         const 30064771102;
         const S9kxP_srt+192;
 },
 _c9l8A() //  [R1]
         { []
         }
     {offset
       c9l8A: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c9l8A_info" {
     block_c9l8A_info:
         const _c9l8A;
         const 0;
         const 4294967326;
         const S9kxP_srt+208;
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9l93: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9l97; else goto c9l96;
       c9l97: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9l96: // global
           I64[Hp - 16] = sat_s9kwa_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$w$cshow_info" {
     GHC.Event.Internal.$w$cshow_info:
         const GHC.Event.Internal.$w$cshow_entry;
         const 0;
         const 545460846606;
         const 4294967301;
         const S9kxP_srt+176;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.987890541 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c9laV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9laW; else goto c9laX;
       c9laW: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9laX: // global
           I64[Sp - 8] = block_c9laS_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshow_info" {
     GHC.Event.Internal.$fShowEvent_$cshow_info:
         const GHC.Event.Internal.$fShowEvent_$cshow_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S9kxP_srt+224;
 },
 _c9laS() //  [R1, R2]
         { []
         }
     {offset
       c9laS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lb0; else goto c9laZ;
       c9lb0: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9laZ: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9laS_info" {
     block_c9laS_info:
         const _c9laS;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:28.995873544 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9lbj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9lbk; else goto c9lbl;
       c9lbk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lbl: // global
           I64[Sp - 16] = block_c9lbg_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_info" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_info:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry;
         const 0;
         const 21474836494;
         const 12884901911;
         const S9kxP_srt+224;
 },
 _c9lbg() //  [R1, R2]
         { []
         }
     {offset
       c9lbg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lbo; else goto c9lbn;
       c9lbo: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9lbn: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9lbg_info" {
     block_c9lbg_info:
         const _c9lbg;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.003184489 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { []
         }
     {offset
       c9lbG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9lbH; else goto c9lbI;
       c9lbH: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lbI: // global
           I64[Sp - 16] = block_c9lbD_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent1_info" {
     GHC.Event.Internal.$fShowEvent1_info:
         const GHC.Event.Internal.$fShowEvent1_entry;
         const 0;
         const 38654705678;
         const 8589934607;
         const S9kxP_srt+224;
 },
 _c9lbD() //  [R1, R2]
         { []
         }
     {offset
       c9lbD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lbL; else goto c9lbK;
       c9lbL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9lbK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c9lbD_info" {
     block_c9lbD_info:
         const _c9lbD;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.010588343 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c9lc0: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.$fShowEvent_$cshowList_info" {
     GHC.Event.Internal.$fShowEvent_$cshowList_info:
         const GHC.Event.Internal.$fShowEvent_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S9kxP_srt+248;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.014813468 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.018219919 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c9lcd: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9lch; else goto c9lcg;
       c9lch: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lcg: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Backend_info" {
     GHC.Event.Internal.Backend_info:
         const GHC.Event.Internal.Backend_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.024502652 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { []
         }
     {offset
       c9lct: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9lcx; else goto c9lcw;
       c9lcx: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9lcw: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Timeout_info" {
     GHC.Event.Internal.Timeout_info:
         const GHC.Event.Internal.Timeout_entry;
         const 0;
         const 14;
         const 4294967300;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.028784842 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.030591693 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.032213873 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.034029406 UTC

[section ""cstring" . i9lcI_str" {
     i9lcI_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]
 },
 GHC.Event.Internal.Backend_con_entry() //  [R1]
         { []
         }
     {offset
       c9lcH: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Backend_con_info" {
     GHC.Event.Internal.Backend_con_info:
         const GHC.Event.Internal.Backend_con_entry;
         const 5;
         const 1;
         const i9lcI_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.03708526 UTC

[section ""cstring" . i9lcP_str" {
     i9lcP_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]
 },
 GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { []
         }
     {offset
       c9lcO: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Timeout_con_info" {
     GHC.Event.Internal.Timeout_con_info:
         const GHC.Event.Internal.Timeout_con_entry;
         const 4294967296;
         const 3;
         const i9lcP_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.040414132 UTC

[section ""cstring" . i9lcW_str" {
     i9lcW_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]
 },
 GHC.Event.Internal.Forever_con_entry() //  [R1]
         { []
         }
     {offset
       c9lcV: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.Forever_con_info" {
     GHC.Event.Internal.Forever_con_info:
         const GHC.Event.Internal.Forever_con_entry;
         const 4294967296;
         const 4294967299;
         const i9lcW_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.043504265 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.045284498 UTC

[section ""cstring" . i9ld4_str" {
     i9ld4_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]
 },
 GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { []
         }
     {offset
       c9ld3: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.OneShot_con_info" {
     GHC.Event.Internal.OneShot_con_info:
         const GHC.Event.Internal.OneShot_con_entry;
         const 4294967296;
         const 3;
         const i9ld4_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.048350589 UTC

[section ""cstring" . i9ldb_str" {
     i9ldb_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]
 },
 GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { []
         }
     {offset
       c9lda: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Internal.MultiShot_con_info" {
     GHC.Event.Internal.MultiShot_con_info:
         const GHC.Event.Internal.MultiShot_con_entry;
         const 4294967296;
         const 4294967299;
         const i9ldb_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:29.052705134 UTC

[section ""relreadonly" . S9kxP_srt" {
     S9kxP_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9kut_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]

